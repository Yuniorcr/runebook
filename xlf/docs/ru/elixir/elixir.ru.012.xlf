<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="elixir">
    <body>
      <group id="elixir">
        <trans-unit id="a4164178e5929ed3fb0cfbbf5db866fa640026ff" translate="yes" xml:space="preserve">
          <source>The returned value is a tuple with the current value returned by &lt;code&gt;fun&lt;/code&gt; and a new keyword list with the updated value under &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">Возвращаемое значение представляет собой кортеж с текущим значением, возвращаемым &lt;code&gt;fun&lt;/code&gt; , и новым списком ключевых слов с обновленным значением под &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcdf4e0951183ef655924f609aa3f331a6262b10" translate="yes" xml:space="preserve">
          <source>The returned value is a two-element tuple with the &quot;get&quot; value returned by &lt;code&gt;fun&lt;/code&gt; and a new container with the updated value under &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">Возвращаемое значение представляет собой двухэлементный кортеж со значением &amp;laquo;get&amp;raquo;, возвращаемым &lt;code&gt;fun&lt;/code&gt; , и новым контейнером с обновленным значением под &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f9b50979454240749ecdc91833d5801c156188c" translate="yes" xml:space="preserve">
          <source>The returned value is a two-element tuple with the current value returned by &lt;code&gt;fun&lt;/code&gt; and a new map with the updated value under &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">Возвращаемое значение представляет собой двухэлементный кортеж с текущим значением, возвращаемым &lt;code&gt;fun&lt;/code&gt; , и новой картой с обновленным значением под &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ee34714ba69b3d5a504684c39dd1f4988c4abdf" translate="yes" xml:space="preserve">
          <source>The returned value is a two-element tuple with the number of seconds and microseconds.</source>
          <target state="translated">Возвращаемое значение представляет собой двухэлементный кортеж с количеством секунд и микросекунд.</target>
        </trans-unit>
        <trans-unit id="7e65f7f051c44e5c9c75a8f2f854fabd880fc538" translate="yes" xml:space="preserve">
          <source>The returned value of the environment variable &lt;code&gt;varname&lt;/code&gt; is a string. If the environment variable is not set, returns the string specified in &lt;code&gt;default&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; if none is specified.</source>
          <target state="translated">Возвращаемое значение переменной окружения &lt;code&gt;varname&lt;/code&gt; является строкой. Если переменная среды не задана, возвращает строку, указанную по &lt;code&gt;default&lt;/code&gt; или &lt;code&gt;nil&lt;/code&gt; , если ничего не указано.</target>
        </trans-unit>
        <trans-unit id="0f847cce0d292ae271a717b61d78816a1f1ea3fd" translate="yes" xml:space="preserve">
          <source>The right path will always be expanded to its relative format and any trailing slash will be removed when joining.</source>
          <target state="translated">Правильный путь всегда будет расширен до относительного формата,а при соединении любая трейлинговая косая черта будет удалена.</target>
        </trans-unit>
        <trans-unit id="643a7d1289fc8c2df27def8f3faf469415ebab11" translate="yes" xml:space="preserve">
          <source>The right side of &lt;code&gt;.&lt;/code&gt; may be a word starting with an uppercase letter, which represents an alias, a word starting with lowercase or underscore, any valid language operator or any name wrapped in single- or double-quotes. Those are all valid examples:</source>
          <target state="translated">Правая часть &lt;code&gt;.&lt;/code&gt; может быть словом, начинающимся с заглавной буквы, представляющей псевдоним, словом, начинающимся с нижнего регистра или подчеркивания, любым допустимым языковым оператором или любым именем, заключенным в одинарные или двойные кавычки. Это все допустимые примеры:</target>
        </trans-unit>
        <trans-unit id="c04e1c8f69c2f1a88e36a20e9901940c66e8dcfe" translate="yes" xml:space="preserve">
          <source>The rounding direction always ties to half up. The operation is performed on the binary floating point, without a conversion to decimal.</source>
          <target state="translated">Направление закругления всегда привязывается к половине вверх.Операция выполняется на двоичной плавающей точке,без преобразования в десятичную.</target>
        </trans-unit>
        <trans-unit id="4144dd4219963dfd0900f8f0b48ec21d6f4d014e" translate="yes" xml:space="preserve">
          <source>The router will check the first byte of the bucket name against the table and dispatch to the appropriate node based on that. For example, a bucket starting with the letter &amp;ldquo;a&amp;rdquo; (&lt;code&gt;?a&lt;/code&gt; represents the Unicode codepoint of the letter &amp;ldquo;a&amp;rdquo;) will be dispatched to node &lt;code&gt;foo@computer-name&lt;/code&gt;.</source>
          <target state="translated">Маршрутизатор проверит первый байт имени корзины по таблице и отправит на соответствующий узел на основе этого. Например, сегмент, начинающийся с буквы &amp;laquo;a&amp;raquo; ( &lt;code&gt;?a&lt;/code&gt; A представляет кодовую точку Unicode для буквы &amp;laquo;a&amp;raquo;), будет отправлен на узел &lt;code&gt;foo@computer-name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ff8ac86ff623f4bf3fb0733f54cbe348a65e9dc" translate="yes" xml:space="preserve">
          <source>The routing layer will receive a routing table of the following format:</source>
          <target state="translated">Слой маршрутизации получит таблицу маршрутизации следующего формата:</target>
        </trans-unit>
        <trans-unit id="4c154bbe6784f06daaef10626cc0bf86a4376497" translate="yes" xml:space="preserve">
          <source>The same applies to duplicate registries:</source>
          <target state="translated">То же самое относится и к дубликатам реестров:</target>
        </trans-unit>
        <trans-unit id="8461a29f68bfc60f9acb948d5fe98c088c56fd3e" translate="yes" xml:space="preserve">
          <source>The same applies to maps where each pair is treated as a list of tuples with two elements:</source>
          <target state="translated">То же самое относится и к картам,где каждая пара рассматривается как список кортежей с двумя элементами:</target>
        </trans-unit>
        <trans-unit id="b487f77f15de12365c59e270fe90d68cbbe73146" translate="yes" xml:space="preserve">
          <source>The same applies to qualified calls such as &lt;code&gt;Foo.bar(1, 2, 3)&lt;/code&gt;, which is the same as &lt;code&gt;Foo.bar 1, 2, 3&lt;/code&gt;. However, remember parentheses are not optional for non-qualified calls with no arguments, such as &lt;code&gt;sum()&lt;/code&gt;. Removing the parentheses for &lt;code&gt;sum&lt;/code&gt; causes it to be represented as the variable &lt;code&gt;sum&lt;/code&gt;, which means they would be no longer equivalent.</source>
          <target state="translated">То же самое относится к квалифицированным вызовам, таким как &lt;code&gt;Foo.bar(1, 2, 3)&lt;/code&gt; , который совпадает с &lt;code&gt;Foo.bar 1, 2, 3&lt;/code&gt; . Однако помните, что круглые скобки не являются обязательными для неквалифицированных вызовов без аргументов, таких как &lt;code&gt;sum()&lt;/code&gt; . Удаление скобок для &lt;code&gt;sum&lt;/code&gt; приводит к тому, что она будет представлена ​​как переменная &lt;code&gt;sum&lt;/code&gt; , что означает, что они больше не будут эквивалентными.</target>
        </trans-unit>
        <trans-unit id="47e032a5027ea138ef1f6dce21b412d852e000c1" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#cd/1&quot;&gt;&lt;code&gt;cd/1&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if it fails.</source>
          <target state="translated">То же, что и &lt;a href=&quot;#cd/1&quot;&gt; &lt;code&gt;cd/1&lt;/code&gt; &lt;/a&gt; , но вызывает исключение &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; в&lt;/a&gt; случае сбоя.</target>
        </trans-unit>
        <trans-unit id="4648fcff80dd7d416297fa509f0fce7c20f51db4" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#cd/1&quot;&gt;&lt;code&gt;cd/1&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if it fails.</source>
          <target state="translated">То же, что и &lt;a href=&quot;#cd/1&quot;&gt; &lt;code&gt;cd/1&lt;/code&gt; &lt;/a&gt; , но вызывает исключение &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; в&lt;/a&gt; случае сбоя.</target>
        </trans-unit>
        <trans-unit id="18e01d0d75a4c60af88fee26dd31622d04f96a97" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#copy/3&quot;&gt;&lt;code&gt;copy/3&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.copyerror&quot;&gt;&lt;code&gt;File.CopyError&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns the &lt;code&gt;bytes_copied&lt;/code&gt; otherwise.</source>
          <target state="translated">То же, что и &lt;a href=&quot;#copy/3&quot;&gt; &lt;code&gt;copy/3&lt;/code&gt; ,&lt;/a&gt; но вызывает исключение &lt;a href=&quot;file.copyerror&quot;&gt; &lt;code&gt;File.CopyError&lt;/code&gt; в&lt;/a&gt; случае сбоя. &lt;code&gt;bytes_copied&lt;/code&gt; противном случае возвращает bytes_copied .</target>
        </trans-unit>
        <trans-unit id="a58fcd56739bfa5248246728d465bb758d5e5ea2" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#copy/3&quot;&gt;&lt;code&gt;copy/3&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.CopyError.html&quot;&gt;&lt;code&gt;File.CopyError&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns the &lt;code&gt;bytes_copied&lt;/code&gt; otherwise.</source>
          <target state="translated">То же, что и &lt;a href=&quot;#copy/3&quot;&gt; &lt;code&gt;copy/3&lt;/code&gt; ,&lt;/a&gt; но вызывает исключение &lt;a href=&quot;https://hexdocs.pm/elixir/File.CopyError.html&quot;&gt; &lt;code&gt;File.CopyError&lt;/code&gt; в&lt;/a&gt; случае сбоя. &lt;code&gt;bytes_copied&lt;/code&gt; противном случае возвращает bytes_copied .</target>
        </trans-unit>
        <trans-unit id="2cf6de4f99822a7c8fe3b408ab5d4cf7f42930ca" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#cp/3&quot;&gt;&lt;code&gt;cp/3&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;file.copyerror&quot;&gt;&lt;code&gt;File.CopyError&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">То же, что и &lt;a href=&quot;#cp/3&quot;&gt; &lt;code&gt;cp/3&lt;/code&gt; &lt;/a&gt; , но вызывает исключение &lt;a href=&quot;file.copyerror&quot;&gt; &lt;code&gt;File.CopyError&lt;/code&gt; в&lt;/a&gt; случае сбоя. Возврат &lt;code&gt;:ok&lt;/code&gt; противном случае.</target>
        </trans-unit>
        <trans-unit id="696de6f1529a7a564fc637bc60de66470a73fed7" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#cp/3&quot;&gt;&lt;code&gt;cp/3&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.CopyError.html&quot;&gt;&lt;code&gt;File.CopyError&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">То же, что и &lt;a href=&quot;#cp/3&quot;&gt; &lt;code&gt;cp/3&lt;/code&gt; &lt;/a&gt; , но вызывает исключение &lt;a href=&quot;https://hexdocs.pm/elixir/File.CopyError.html&quot;&gt; &lt;code&gt;File.CopyError&lt;/code&gt; в&lt;/a&gt; случае сбоя. Возврат &lt;code&gt;:ok&lt;/code&gt; противном случае.</target>
        </trans-unit>
        <trans-unit id="f92c875af9b9262d24ee988fee5dadfcecefeb5a" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#cp_r/3&quot;&gt;&lt;code&gt;cp_r/3&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;file.copyerror&quot;&gt;&lt;code&gt;File.CopyError&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns the list of copied files otherwise.</source>
          <target state="translated">То же, что &lt;a href=&quot;#cp_r/3&quot;&gt; &lt;code&gt;cp_r/3&lt;/code&gt; &lt;/a&gt; , но вызывает исключение &lt;a href=&quot;file.copyerror&quot;&gt; &lt;code&gt;File.CopyError&lt;/code&gt; в&lt;/a&gt; случае сбоя. В противном случае возвращает список скопированных файлов.</target>
        </trans-unit>
        <trans-unit id="dced03231a36fd3a83cda83b79431542ee58a767" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#cp_r/3&quot;&gt;&lt;code&gt;cp_r/3&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.CopyError.html&quot;&gt;&lt;code&gt;File.CopyError&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns the list of copied files otherwise.</source>
          <target state="translated">То же, что и &lt;a href=&quot;#cp_r/3&quot;&gt; &lt;code&gt;cp_r/3&lt;/code&gt; &lt;/a&gt; , но вызывает исключение &lt;a href=&quot;https://hexdocs.pm/elixir/File.CopyError.html&quot;&gt; &lt;code&gt;File.CopyError&lt;/code&gt; в&lt;/a&gt; случае сбоя. В противном случае возвращает список скопированных файлов.</target>
        </trans-unit>
        <trans-unit id="f459fdf18e68c368ea8cc4aa8ed5c7cc8b9dd88a" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#cwd/0&quot;&gt;&lt;code&gt;cwd/0&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if it fails.</source>
          <target state="translated">То же, что &lt;a href=&quot;#cwd/0&quot;&gt; &lt;code&gt;cwd/0&lt;/code&gt; &lt;/a&gt; , но вызывает исключение &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; в&lt;/a&gt; случае сбоя.</target>
        </trans-unit>
        <trans-unit id="0eee2e06aac8b82f8ed48294c71a788555a3adf5" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#cwd/0&quot;&gt;&lt;code&gt;cwd/0&lt;/code&gt;&lt;/a&gt;, but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception if it fails.</source>
          <target state="translated">То же, что &lt;a href=&quot;#cwd/0&quot;&gt; &lt;code&gt;cwd/0&lt;/code&gt; &lt;/a&gt; , но вызывает исключение &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; в&lt;/a&gt; случае сбоя.</target>
        </trans-unit>
        <trans-unit id="fa8efe783d469a71d442d2785e538f32a3f185b8" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#eval!/2&quot;&gt;&lt;code&gt;eval!/2&lt;/code&gt;&lt;/a&gt; but only returns the configuration in the given file, without returning the imported paths.</source>
          <target state="translated">То же, что и &lt;a href=&quot;#eval!/2&quot;&gt; &lt;code&gt;eval!/2&lt;/code&gt; ,&lt;/a&gt; но возвращает только конфигурацию в данном файле, не возвращая импортированные пути.</target>
        </trans-unit>
        <trans-unit id="e983c20087a73c47c1b91cd7c2c300a823c39d00" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#ls/1&quot;&gt;&lt;code&gt;ls/1&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.error&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of an error.</source>
          <target state="translated">То же, что и &lt;a href=&quot;#ls/1&quot;&gt; &lt;code&gt;ls/1&lt;/code&gt; ,&lt;/a&gt; но вызывает исключение &lt;a href=&quot;file.error&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; в случае ошибки.</target>
        </trans-unit>
        <trans-unit id="2619800bcffc51ddabf679c548f67d8d665df758" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#ls/1&quot;&gt;&lt;code&gt;ls/1&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt;&lt;code&gt;File.Error&lt;/code&gt;&lt;/a&gt; exception in case of an error.</source>
          <target state="translated">То же, что и &lt;a href=&quot;#ls/1&quot;&gt; &lt;code&gt;ls/1&lt;/code&gt; ,&lt;/a&gt; но вызывает исключение &lt;a href=&quot;https://hexdocs.pm/elixir/File.Error.html&quot;&gt; &lt;code&gt;File.Error&lt;/code&gt; &lt;/a&gt; в случае ошибки.</target>
        </trans-unit>
        <trans-unit id="e26cc2d303c7d487aeb4684f8a5ec5296d428a79" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#parse/2&quot;&gt;&lt;code&gt;parse/2&lt;/code&gt;&lt;/a&gt; but raises an &lt;a href=&quot;https://hexdocs.pm/elixir/OptionParser.ParseError.html&quot;&gt;&lt;code&gt;OptionParser.ParseError&lt;/code&gt;&lt;/a&gt; exception if any invalid options are given.</source>
          <target state="translated">То же, что и &lt;a href=&quot;#parse/2&quot;&gt; &lt;code&gt;parse/2&lt;/code&gt; ,&lt;/a&gt; но вызывает исключение &lt;a href=&quot;https://hexdocs.pm/elixir/OptionParser.ParseError.html&quot;&gt; &lt;code&gt;OptionParser.ParseError&lt;/code&gt; ,&lt;/a&gt; если указаны какие-либо недопустимые параметры.</target>
        </trans-unit>
        <trans-unit id="94d50f21dfa011da9b3d948e9722047f3d7526a9" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#parse/2&quot;&gt;&lt;code&gt;parse/2&lt;/code&gt;&lt;/a&gt; but raises an &lt;a href=&quot;optionparser.parseerror&quot;&gt;&lt;code&gt;OptionParser.ParseError&lt;/code&gt;&lt;/a&gt; exception if any invalid options are given.</source>
          <target state="translated">То же, что и &lt;a href=&quot;#parse/2&quot;&gt; &lt;code&gt;parse/2&lt;/code&gt; ,&lt;/a&gt; но вызывает исключение &lt;a href=&quot;optionparser.parseerror&quot;&gt; &lt;code&gt;OptionParser.ParseError&lt;/code&gt; ,&lt;/a&gt; если указаны какие-либо недопустимые параметры.</target>
        </trans-unit>
        <trans-unit id="e2165b5941176ebd36f68f510b06c8757c380d9a" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#parse_head/2&quot;&gt;&lt;code&gt;parse_head/2&lt;/code&gt;&lt;/a&gt; but raises an &lt;a href=&quot;https://hexdocs.pm/elixir/OptionParser.ParseError.html&quot;&gt;&lt;code&gt;OptionParser.ParseError&lt;/code&gt;&lt;/a&gt; exception if any invalid options are given.</source>
          <target state="translated">То же, что и &lt;a href=&quot;#parse_head/2&quot;&gt; &lt;code&gt;parse_head/2&lt;/code&gt; ,&lt;/a&gt; но вызывает исключение &lt;a href=&quot;https://hexdocs.pm/elixir/OptionParser.ParseError.html&quot;&gt; &lt;code&gt;OptionParser.ParseError&lt;/code&gt; ,&lt;/a&gt; если указаны какие-либо недопустимые параметры.</target>
        </trans-unit>
        <trans-unit id="a5050ef6fcebfe967949f495038b1cf5998440f0" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#parse_head/2&quot;&gt;&lt;code&gt;parse_head/2&lt;/code&gt;&lt;/a&gt; but raises an &lt;a href=&quot;optionparser.parseerror&quot;&gt;&lt;code&gt;OptionParser.ParseError&lt;/code&gt;&lt;/a&gt; exception if any invalid options are given.</source>
          <target state="translated">То же, что и &lt;a href=&quot;#parse_head/2&quot;&gt; &lt;code&gt;parse_head/2&lt;/code&gt; ,&lt;/a&gt; но вызывает исключение &lt;a href=&quot;optionparser.parseerror&quot;&gt; &lt;code&gt;OptionParser.ParseError&lt;/code&gt; ,&lt;/a&gt; если указаны какие-либо недопустимые параметры.</target>
        </trans-unit>
        <trans-unit id="44ad2c47fd323d50a1b7a9d773f54ea42bbc2572" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#read_imports!/2&quot;&gt;&lt;code&gt;read_imports!/2&lt;/code&gt;&lt;/a&gt; but only returns the configuration in the given file, without returning the imported paths.</source>
          <target state="translated">То же, что и &lt;a href=&quot;#read_imports!/2&quot;&gt; &lt;code&gt;read_imports!/2&lt;/code&gt; ,&lt;/a&gt; но возвращает только конфигурацию в данном файле, без возврата импортированных путей.</target>
        </trans-unit>
        <trans-unit id="76551e442cf0920ecab6d0eb8ea56bcf94c15620" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#rename/2&quot;&gt;&lt;code&gt;rename/2&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;file.renameerror&quot;&gt;&lt;code&gt;File.RenameError&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">То же, что и &lt;a href=&quot;#rename/2&quot;&gt; &lt;code&gt;rename/2&lt;/code&gt; ,&lt;/a&gt; но в случае неудачи вызывает исключение &lt;a href=&quot;file.renameerror&quot;&gt; &lt;code&gt;File.RenameError&lt;/code&gt; &lt;/a&gt; . Возврат &lt;code&gt;:ok&lt;/code&gt; противном случае.</target>
        </trans-unit>
        <trans-unit id="be26fa6408a4ea8bda26cf7e98b553592e7fd2e6" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#rename/2&quot;&gt;&lt;code&gt;rename/2&lt;/code&gt;&lt;/a&gt; but raises a &lt;a href=&quot;https://hexdocs.pm/elixir/File.RenameError.html&quot;&gt;&lt;code&gt;File.RenameError&lt;/code&gt;&lt;/a&gt; exception if it fails. Returns &lt;code&gt;:ok&lt;/code&gt; otherwise.</source>
          <target state="translated">То же, что и &lt;a href=&quot;#rename/2&quot;&gt; &lt;code&gt;rename/2&lt;/code&gt; ,&lt;/a&gt; но в случае неудачи вызывает исключение &lt;a href=&quot;https://hexdocs.pm/elixir/File.RenameError.html&quot;&gt; &lt;code&gt;File.RenameError&lt;/code&gt; &lt;/a&gt; . Возврат &lt;code&gt;:ok&lt;/code&gt; противном случае.</target>
        </trans-unit>
        <trans-unit id="ff7e3f389bbffc2c11af04820517b44446f5b5b0" translate="yes" xml:space="preserve">
          <source>The second approach uses function calls which better suits more complex APIs (for example, if you need to pass many options) and reads nicely in Elixir thanks to the pipe operator.</source>
          <target state="translated">Второй подход использует вызовы функций,которые лучше подходят для более сложных API (например,если нужно передать много опций)и хорошо читается в Elixir благодаря оператору трубы.</target>
        </trans-unit>
        <trans-unit id="4989f7d201fe4b48e470058521e1ca80ae6c9569" translate="yes" xml:space="preserve">
          <source>The second argument is a keyword list of options:</source>
          <target state="translated">Вторым аргументом является список ключевых слов опций:</target>
        </trans-unit>
        <trans-unit id="43642aa7f67e7784c0b111753a92ead35aec4a5a" translate="yes" xml:space="preserve">
          <source>The second argument is either a timeout or &lt;code&gt;:brutal_kill&lt;/code&gt;. In case of a timeout, a &lt;code&gt;:shutdown&lt;/code&gt; exit signal is sent to the task process and if it does not exit within the timeout, it is killed. With &lt;code&gt;:brutal_kill&lt;/code&gt; the task is killed straight away. In case the task terminates abnormally (possibly killed by another process), this function will exit with the same reason.</source>
          <target state="translated">Второй аргумент - это либо тайм-аут, либо &lt;code&gt;:brutal_kill&lt;/code&gt; . В случае тайм-аута процессу задачи отправляется сигнал выхода &lt;code&gt;:shutdown&lt;/code&gt; , и если он не завершается в течение тайм-аута, он уничтожается. С &lt;code&gt;:brutal_kill&lt;/code&gt; задача сразу убивается. В случае аварийного завершения задачи (возможного завершения работы другого процесса) эта функция завершится по той же причине.</target>
        </trans-unit>
        <trans-unit id="fcb757bd7051270d8c819a13491903d89a8704fd" translate="yes" xml:space="preserve">
          <source>The second argument is first expanded to an absolute path.</source>
          <target state="translated">Второй аргумент сначала расширяется до абсолютного пути.</target>
        </trans-unit>
        <trans-unit id="524ef427f3aceff5423ab5acc031269f5e3169df" translate="yes" xml:space="preserve">
          <source>The second argument specifying every &lt;code&gt;nth&lt;/code&gt; element must be a non-negative integer.</source>
          <target state="translated">Второй аргумент, определяющий каждый &lt;code&gt;nth&lt;/code&gt; элемент, должен быть неотрицательным целым числом.</target>
        </trans-unit>
        <trans-unit id="6a6d508d801e049e82fe48d35683e28b76dc2200" translate="yes" xml:space="preserve">
          <source>The second change is in the &lt;code&gt;application&lt;/code&gt; function inside &lt;code&gt;mix.exs&lt;/code&gt;:</source>
          <target state="translated">Второе изменение &lt;code&gt;mix.exs&lt;/code&gt; функции &lt;code&gt;application&lt;/code&gt; внутри mix.exs :</target>
        </trans-unit>
        <trans-unit id="36314cd4001b7103421433826074baa427430f61" translate="yes" xml:space="preserve">
          <source>The second concern is that, while using &lt;code&gt;mix run&lt;/code&gt; is completely fine to run our software in production, the command we use to start our services is getting increasingly more complex. For example, imagine we also want to &lt;code&gt;--preload-modules&lt;/code&gt;, to all code is loaded upfront, as well as set the &lt;code&gt;MIX_ENV=prod&lt;/code&gt; environment variable:</source>
          <target state="translated">Вторая проблема заключается в том, что, хотя использование &lt;code&gt;mix run&lt;/code&gt; вполне подходит для запуска нашего программного обеспечения в производственной среде, команда, которую мы используем для запуска наших служб, становится все более сложной. Например, представьте, что мы также хотим &lt;code&gt;--preload-modules&lt;/code&gt; , чтобы весь код загружался заранее, а также установить переменную среды &lt;code&gt;MIX_ENV=prod&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="59db642f7ebf3826674361ba0acf5de33120795d" translate="yes" xml:space="preserve">
          <source>The second definition matches the pattern and has no guard so it will be executed. It first prints our &lt;code&gt;msg&lt;/code&gt; and then calls itself passing &lt;code&gt;n - 1&lt;/code&gt; (&lt;code&gt;2&lt;/code&gt;) as the second argument.</source>
          <target state="translated">Второе определение соответствует шаблону и не имеет защиты, поэтому оно будет выполнено. Сначала он печатает наше &lt;code&gt;msg&lt;/code&gt; а затем вызывает себя, передавая &lt;code&gt;n - 1&lt;/code&gt; ( &lt;code&gt;2&lt;/code&gt; ) в качестве второго аргумента.</target>
        </trans-unit>
        <trans-unit id="dae9460a51adde13fd535bc1aee22f1354a6ed7b" translate="yes" xml:space="preserve">
          <source>The second element is a keyword list containing metadata, like numbers and contexts;</source>
          <target state="translated">Вторым элементом является список ключевых слов,содержащий метаданные,такие как числа и контексты;</target>
        </trans-unit>
        <trans-unit id="21d656a71ac68bd8b82b5427ffa0a32c0e82e5b7" translate="yes" xml:space="preserve">
          <source>The second element of the tuple represents &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.html#t:metadata/0&quot;&gt;metadata&lt;/a&gt;.</source>
          <target state="translated">Второй элемент кортежа представляет &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.html#t:metadata/0&quot;&gt;метаданные&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09930d4769fdab8c631461548dda5978d0ffac47" translate="yes" xml:space="preserve">
          <source>The second element of the tuple represents metadata.</source>
          <target state="translated">Второй элемент кортежа представляет собой метаданные.</target>
        </trans-unit>
        <trans-unit id="49369ce9190f9083bafea50347ba1f7b69ded63d" translate="yes" xml:space="preserve">
          <source>The second flaw is related to the supervision strategy. If &lt;code&gt;KV.Registry&lt;/code&gt; dies, all information linking &lt;code&gt;KV.Bucket&lt;/code&gt; names to bucket processes is lost. Therefore the &lt;code&gt;KV.BucketSupervisor&lt;/code&gt; and all children must terminate too - otherwise we will have orphan processes.</source>
          <target state="translated">Второй недостаток связан со стратегией супервизии. Если &lt;code&gt;KV.Registry&lt;/code&gt; умирает, вся информация, связывающая имена &lt;code&gt;KV.Bucket&lt;/code&gt; с процессами корзины, теряется. Следовательно, &lt;code&gt;KV.BucketSupervisor&lt;/code&gt; и все дочерние элементы также должны завершиться - в противном случае у нас будут сиротские процессы.</target>
        </trans-unit>
        <trans-unit id="1b27ec208e18d1eae9448f08cbc57e44112bc1f3" translate="yes" xml:space="preserve">
          <source>The second is to make sure your &lt;a href=&quot;#import_config/1&quot;&gt;&lt;code&gt;import_config/1&lt;/code&gt;&lt;/a&gt; calls do not have a wildcard character. If so, you need to perform the wildcard lookup manually. For example, if you did:</source>
          <target state="translated">Во-вторых, убедитесь, что ваши &lt;a href=&quot;#import_config/1&quot;&gt; &lt;code&gt;import_config/1&lt;/code&gt; &lt;/a&gt; не содержат подстановочных знаков. Если это так, вам нужно выполнить поиск по шаблону вручную. Например, если вы сделали:</target>
        </trans-unit>
        <trans-unit id="3f52940a3eb4585da7a86f017cdfc1095c4a0962" translate="yes" xml:space="preserve">
          <source>The second part, the guards, is a list of conditions that allow filtering the results. Each guard is a tuple, which describes checks that should be passed by assigned part of pattern. For example the &lt;code&gt;$1 &amp;gt; 1&lt;/code&gt; guard condition would be expressed as the &lt;code&gt;{:&amp;gt;, :&quot;$1&quot;, 1}&lt;/code&gt; tuple. Please note that guard conditions will work only for assigned variables like &lt;code&gt;:&quot;$1&quot;&lt;/code&gt;, &lt;code&gt;:&quot;$2&quot;&lt;/code&gt;, and so forth.</source>
          <target state="translated">Вторая часть, охранники, представляет собой список условий, позволяющих фильтровать результаты. Каждый сторож - это кортеж, в котором описаны проверки, которые должна пройти назначенная часть шаблона. Например, условие защиты &lt;code&gt;$1 &amp;gt; 1&lt;/code&gt; будет выражено как кортеж &lt;code&gt;{:&amp;gt;, :&quot;$1&quot;, 1}&lt;/code&gt; . Пожалуйста , обратите внимание , что условия охраны будут работать только для выделенных переменных , таких как &lt;code&gt;:&quot;$1&quot;&lt;/code&gt; , &lt;code&gt;:&quot;$2&quot;&lt;/code&gt; , и так далее.</target>
        </trans-unit>
        <trans-unit id="03c8c69c3a8917dcc36201eb8826bb675ed3a306" translate="yes" xml:space="preserve">
          <source>The second part, the guards, is a list of conditions that allow filtering the results. Each guard is a tuple, which describes checks that should be passed by assigned part of pattern. For example the &lt;code&gt;$1 &amp;gt; 1&lt;/code&gt; guard condition would be expressed as the &lt;code&gt;{:&amp;gt;, :&quot;$1&quot;, 1}&lt;/code&gt; tuple. Please note that guard conditions will work only for assigned variables like &lt;code&gt;:&quot;$1&quot;&lt;/code&gt;, &lt;code&gt;:&quot;$2&quot;&lt;/code&gt;, etc.</source>
          <target state="translated">Вторая часть, охранники, представляет собой список условий, позволяющих фильтровать результаты. Каждый сторож - это кортеж, который описывает проверки, которые должна проходить назначенная часть шаблона. Например, условие защиты &lt;code&gt;$1 &amp;gt; 1&lt;/code&gt; будет выражено как кортеж &lt;code&gt;{:&amp;gt;, :&quot;$1&quot;, 1}&lt;/code&gt; . Пожалуйста , обратите внимание , что условия охраны будут работать только для выделенных переменных , таких как &lt;code&gt;:&quot;$1&quot;&lt;/code&gt; , &lt;code&gt;:&quot;$2&quot;&lt;/code&gt; и т.д.</target>
        </trans-unit>
        <trans-unit id="8279ae6c0770b2c5c483279a964f5a0fd686e18a" translate="yes" xml:space="preserve">
          <source>The second pitfall is that the &lt;code&gt;|&amp;gt;&lt;/code&gt; operator works on calls. For example, when you write:</source>
          <target state="translated">Второй подводный камень заключается в том, что оператор &lt;code&gt;|&amp;gt;&lt;/code&gt; работает с вызовами. Например, когда вы пишете:</target>
        </trans-unit>
        <trans-unit id="494117d2d88c4ce9741e6ac16716fddbb8f4cbe4" translate="yes" xml:space="preserve">
          <source>The second principle is to provide as little configuration as possible. This eases the formatter adoption by removing contention points while making sure a single style is followed consistently by the community as a whole.</source>
          <target state="translated">Второй принцип заключается в том,чтобы обеспечить как можно меньшую конфигурацию.Это облегчает принятие формата,устраняя спорные моменты и обеспечивая последовательное следование единому стилю всем сообществом в целом.</target>
        </trans-unit>
        <trans-unit id="661a367f5412305ec9e82e19ba1e4e566dc26d28" translate="yes" xml:space="preserve">
          <source>The second test checks that the code raises for unknown entries.</source>
          <target state="translated">Второй тест проверяет,что код поднимается для неизвестных записей.</target>
        </trans-unit>
        <trans-unit id="8cd7d01257f835cc5a3247359bf87ad73936ce2f" translate="yes" xml:space="preserve">
          <source>The server is now running, and you will even notice the console is blocked. Let&amp;rsquo;s use &lt;a href=&quot;https://en.wikipedia.org/wiki/Telnet&quot;&gt;a &lt;code&gt;telnet&lt;/code&gt; client&lt;/a&gt; to access our server. There are clients available on most operating systems, and their command lines are generally similar:</source>
          <target state="translated">Теперь сервер запущен, и вы даже заметите, что консоль заблокирована. Давайте использовать &lt;a href=&quot;https://en.wikipedia.org/wiki/Telnet&quot;&gt;в &lt;code&gt;telnet&lt;/code&gt; клиент&lt;/a&gt; для доступа к нашему серверу. В большинстве операционных систем доступны клиенты, и их командные строки в целом похожи:</target>
        </trans-unit>
        <trans-unit id="fd585ae8b1d0205e194512ad32642a694a88c604" translate="yes" xml:space="preserve">
          <source>The server reference.</source>
          <target state="translated">Ссылка на сервер.</target>
        </trans-unit>
        <trans-unit id="d40bf167b8d71e1dda39cd357ab868e4586251d2" translate="yes" xml:space="preserve">
          <source>The server responsibilities include:</source>
          <target state="translated">Обязанности сервера включают в себя:</target>
        </trans-unit>
        <trans-unit id="ff65793db264093aa3a7a1cf46e0cbfc1e4b8a04" translate="yes" xml:space="preserve">
          <source>The setup callbacks are defined via macros and each one can optionally receive a map with test state and metadata, usually referred to as &lt;code&gt;context&lt;/code&gt;. The context to be used in the tests can be optionally extended by the setup callbacks by returning a properly structured value (see below).</source>
          <target state="translated">Обратные вызовы настройки определяются с помощью макросов, и каждый из них может дополнительно получить карту с тестовым состоянием и метаданными, обычно называемыми &lt;code&gt;context&lt;/code&gt; . Контекст, который будет использоваться в тестах, может быть необязательно расширен обратными вызовами настройки, возвращая правильно структурированное значение (см. Ниже).</target>
        </trans-unit>
        <trans-unit id="beb94809dde5c8a8ccc0fe6fd795a37a627a36a9" translate="yes" xml:space="preserve">
          <source>The setup callbacks may be used to define &lt;a href=&quot;https://en.wikipedia.org/wiki/Test_fixture#Software&quot;&gt;test fixtures&lt;/a&gt; and run any initialization code which help bring the system into a known state. They are defined via macros and each one can optionally receive a map with test state and metadata, usually referred to as the &lt;code&gt;context&lt;/code&gt;. Optionally, the context to be used in the tests can be extended by the setup callbacks by returning a properly structured value (see below).</source>
          <target state="translated">Обратные вызовы настройки могут использоваться для определения &lt;a href=&quot;https://en.wikipedia.org/wiki/Test_fixture#Software&quot;&gt;тестовых приспособлений&lt;/a&gt; и запуска любого кода инициализации, который помогает привести систему в известное состояние. Они определяются с помощью макросов, и каждый из них может дополнительно получить карту с тестовым состоянием и метаданными, обычно называемыми &lt;code&gt;context&lt;/code&gt; . При желании контекст, который будет использоваться в тестах, может быть расширен обратными вызовами настройки, возвращая правильно структурированное значение (см. Ниже).</target>
        </trans-unit>
        <trans-unit id="be70f07b576f3a68fa738cef7302c8e28346ebfb" translate="yes" xml:space="preserve">
          <source>The shutdown process happens in reverse order.</source>
          <target state="translated">Процесс выключения происходит в обратном порядке.</target>
        </trans-unit>
        <trans-unit id="a344948a2691ee6269fc2879136d40e4dca1f373" translate="yes" xml:space="preserve">
          <source>The size can be a variable:</source>
          <target state="translated">Размер может быть переменным:</target>
        </trans-unit>
        <trans-unit id="8111a6aa75f3c6e4735d59b2e853a7faeadebe29" translate="yes" xml:space="preserve">
          <source>The size of a map is the number of key-value pairs that the map contains.</source>
          <target state="translated">Размер карты-это количество пар ключ-значение,которое содержит карта.</target>
        </trans-unit>
        <trans-unit id="0078ede4075127860c2ade218ba7d232c2981cd7" translate="yes" xml:space="preserve">
          <source>The snippet above only works because numbers implement the &lt;code&gt;String.Chars&lt;/code&gt; protocol. Passing a tuple, for example, will lead to an error:</source>
          <target state="translated">Приведенный выше фрагмент работает только потому, что числа реализуют протокол &lt;code&gt;String.Chars&lt;/code&gt; . Например, передача кортежа приведет к ошибке:</target>
        </trans-unit>
        <trans-unit id="6c615bba281ebbef820e4ccb712d2aa12dcf9a32" translate="yes" xml:space="preserve">
          <source>The solution here is to use &lt;a href=&quot;https://hexdocs.pm/elixir/Stream.html#take/2&quot;&gt;&lt;code&gt;Stream.take/2&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html#take/2&quot;&gt;&lt;code&gt;Enum.take/2&lt;/code&gt;&lt;/a&gt; to filter elements before-hand:</source>
          <target state="translated">Решением здесь является использование &lt;a href=&quot;https://hexdocs.pm/elixir/Stream.html#take/2&quot;&gt; &lt;code&gt;Stream.take/2&lt;/code&gt; &lt;/a&gt; вместо &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html#take/2&quot;&gt; &lt;code&gt;Enum.take/2&lt;/code&gt; &lt;/a&gt; для предварительной фильтрации элементов:</target>
        </trans-unit>
        <trans-unit id="6272c1202f90648d2a2419029598638bd1dd5c26" translate="yes" xml:space="preserve">
          <source>The solution is to provide configuration as close as possible to where it is used and not via the application environment. In case of a function, you could expect keyword lists as a new argument:</source>
          <target state="translated">Решение заключается в том,чтобы обеспечить конфигурацию как можно ближе к тому месту,где она используется,а не через прикладную среду.В случае с функцией,в качестве нового аргумента можно ожидать списки ключевых слов:</target>
        </trans-unit>
        <trans-unit id="2c2456d942f9ee207983a501b269e82c8ae7c4b6" translate="yes" xml:space="preserve">
          <source>The sorting algorithm will be stable as long as the given function returns &lt;code&gt;true&lt;/code&gt; for values considered equal:</source>
          <target state="translated">Алгоритм сортировки будет стабильным, пока данная функция возвращает &lt;code&gt;true&lt;/code&gt; для значений, считающихся равными:</target>
        </trans-unit>
        <trans-unit id="972944894d27378714ceb941dffde3e2074c4f7f" translate="yes" xml:space="preserve">
          <source>The spec also provides a &lt;code&gt;&amp;lt;Medial&amp;gt;&lt;/code&gt; set but Elixir does not include any character on this set. Therefore the identifier rule has been simplified to consider this.</source>
          <target state="translated">Спецификация также предоставляет набор &lt;code&gt;&amp;lt;Medial&amp;gt;&lt;/code&gt; , но Elixir не включает никаких символов в этом наборе. Поэтому правило идентификатора было упрощено, чтобы учесть это.</target>
        </trans-unit>
        <trans-unit id="fc80cf8cc0e875b59d4cb7a74f58a13e82e8e79b" translate="yes" xml:space="preserve">
          <source>The stack is a small wrapper around lists. It allows us to put an element on the top of the stack, by prepending to the list, and to get the top of the stack by pattern matching.</source>
          <target state="translated">Стек-это маленькая обёртка вокруг списков.Она позволяет нам поместить элемент на верхнюю часть стека,предварительно подготовив его к списку,и получить верхнюю часть стека по выравниванию шаблонов.</target>
        </trans-unit>
        <trans-unit id="464d44c8fa9af2bc062b88f7cb6e09d51921375c" translate="yes" xml:space="preserve">
          <source>The standard library</source>
          <target state="translated">Стандартная библиотека</target>
        </trans-unit>
        <trans-unit id="c90a34e2afaa39e30146b58a596138ac46c6ee44" translate="yes" xml:space="preserve">
          <source>The steps necessary to work across nodes is already commented out as an example. You can enable full distribution by uncommenting the last two lines by removing the leading &lt;code&gt;# &lt;/code&gt;.</source>
          <target state="translated">Шаги, необходимые для работы между узлами, уже закомментированы в качестве примера. Вы можете включить полное распространение, раскомментировав последние две строки, удалив ведущий знак &lt;code&gt;# &lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6547b77a17d5ef12542c7afee97cc798fc8b1249" translate="yes" xml:space="preserve">
          <source>The stream implements both &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;collectable&quot;&gt;&lt;code&gt;Collectable&lt;/code&gt;&lt;/a&gt; protocols, which means it can be used both for read and write.</source>
          <target state="translated">Поток реализует протоколы &lt;a href=&quot;enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;collectable&quot;&gt; &lt;code&gt;Collectable&lt;/code&gt; &lt;/a&gt; , что означает, что его можно использовать как для чтения, так и для записи.</target>
        </trans-unit>
        <trans-unit id="6ee85dc5e71fc294b36604877aa25393a7df8e42" translate="yes" xml:space="preserve">
          <source>The stream implements both &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.html&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Collectable.html&quot;&gt;&lt;code&gt;Collectable&lt;/code&gt;&lt;/a&gt; protocols, which means it can be used both for read and write.</source>
          <target state="translated">Поток реализует протоколы &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.html&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://hexdocs.pm/elixir/Collectable.html&quot;&gt; &lt;code&gt;Collectable&lt;/code&gt; &lt;/a&gt; , что означает, что его можно использовать как для чтения, так и для записи.</target>
        </trans-unit>
        <trans-unit id="d0a2b7409cbfc04d5907be0d98cbcaddcde54753" translate="yes" xml:space="preserve">
          <source>The string between the parentheses in the prompt is the name of your node. We can retrieve it by calling the &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#node/0&quot;&gt;&lt;code&gt;node/0&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">Строка в скобках в приглашении - это имя вашего узла. Мы можем получить его, вызвав функцию &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#node/0&quot;&gt; &lt;code&gt;node/0&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="81e25ea527122c6269507a786b1fac990f5269a4" translate="yes" xml:space="preserve">
          <source>The string concatenation makes the code fit on a single line and also gives more options to the formatter.</source>
          <target state="translated">Конкатенация строк делает код помещаемым в одну строку,а также дает больше возможностей форматировщику.</target>
        </trans-unit>
        <trans-unit id="86cdec7e4462e9309a1a4eb1db8bbf7175736e0b" translate="yes" xml:space="preserve">
          <source>The string concatenation operation is actually a binary concatenation operator:</source>
          <target state="translated">Операция конкатенации строки на самом деле является двоичным оператором конкатенации:</target>
        </trans-unit>
        <trans-unit id="7f69f0cddd44731ccae3984440903fe5c39c51ec" translate="yes" xml:space="preserve">
          <source>The string concatenation operator &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; is actually a binary concatenation operator:</source>
          <target state="translated">Оператор конкатенации строк &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; на самом деле является оператором двоичной конкатенации:</target>
        </trans-unit>
        <trans-unit id="8259167cccd8df309147297c84a34df6a1de5df3" translate="yes" xml:space="preserve">
          <source>The string is split into as many parts as possible by default, but can be controlled via the &lt;code&gt;:parts&lt;/code&gt; option.</source>
          <target state="translated">По умолчанию строка разделена на максимально возможное количество частей, но ею можно управлять с помощью параметра &lt;code&gt;:parts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff34135d2b9fe9bf18a8b4692de3737dabb31735" translate="yes" xml:space="preserve">
          <source>The struct fields are private and should not be accessed.</source>
          <target state="translated">Поля структуры являются приватными и не должны быть доступны.</target>
        </trans-unit>
        <trans-unit id="571837e3b232d92d474e8917fdedc1786ba58276" translate="yes" xml:space="preserve">
          <source>The struct fields can be given when building the struct:</source>
          <target state="translated">Поля структуры могут быть заданы при построении структуры:</target>
        </trans-unit>
        <trans-unit id="92bf51de3e3e5df1170754020b84a38130fd526e" translate="yes" xml:space="preserve">
          <source>The supervision strategy dictates what happens when one of the children crashes. &lt;code&gt;:one_for_one&lt;/code&gt; means that if a child dies, it will be the only one restarted. Since we have only one child now, that&amp;rsquo;s all we need. The &lt;code&gt;Supervisor&lt;/code&gt; behaviour supports many different strategies and we will discuss them in this chapter.</source>
          <target state="translated">Стратегия присмотра определяет, что произойдет, когда один из детей потерпит аварию. &lt;code&gt;:one_for_one&lt;/code&gt; означает, что если ребенок умирает, перезапускается только он. Поскольку сейчас у нас только один ребенок, это все, что нам нужно. &lt;code&gt;Supervisor&lt;/code&gt; поведение поддерживает множество различных стратегий , и мы обсудим их в этой главе.</target>
        </trans-unit>
        <trans-unit id="d45ea759f46bff3ba089e89707b504285b2e2aff" translate="yes" xml:space="preserve">
          <source>The supervisor flags returned on init</source>
          <target state="translated">Флаги супервайзера вернулись на вход</target>
        </trans-unit>
        <trans-unit id="e3742ff69698c4acf77e80f28496fe07172ab4b1" translate="yes" xml:space="preserve">
          <source>The supervisor reference</source>
          <target state="translated">Ссылка супервайзера</target>
        </trans-unit>
        <trans-unit id="5aec5d17ff71d8a46be456b119441ed148f52e07" translate="yes" xml:space="preserve">
          <source>The supervisor specification</source>
          <target state="translated">Спецификация супервайзера</target>
        </trans-unit>
        <trans-unit id="55243bfac4a971c230124af0cb70d274159f15f1" translate="yes" xml:space="preserve">
          <source>The supervisor will then invoke &lt;code&gt;Stack.child_spec([:hello])&lt;/code&gt; to retrieve a child specification. Now the &lt;code&gt;Stack&lt;/code&gt; module is responsible for building its own specification, for example, we could write:</source>
          <target state="translated">Затем супервизор вызовет &lt;code&gt;Stack.child_spec([:hello])&lt;/code&gt; чтобы получить дочернюю спецификацию. Теперь модуль &lt;code&gt;Stack&lt;/code&gt; отвечает за построение собственной спецификации, например, мы могли бы написать:</target>
        </trans-unit>
        <trans-unit id="48df4bde49257478d542a437f9de2f0a2ea29a61" translate="yes" xml:space="preserve">
          <source>The supported class names are:</source>
          <target state="translated">Поддерживаются имена классов:</target>
        </trans-unit>
        <trans-unit id="2acb742979d49cdd1ce894f691b11d6c69ead543" translate="yes" xml:space="preserve">
          <source>The supported forms are:</source>
          <target state="translated">Поддерживаемые формы:</target>
        </trans-unit>
        <trans-unit id="a8f9a7d8961a3767298fcfbab64cbbb6e0e6ee0b" translate="yes" xml:space="preserve">
          <source>The supported keys in the &lt;code&gt;:colors&lt;/code&gt; keyword list are:</source>
          <target state="translated">Поддерживаемые ключи в списке ключевых слов &lt;code&gt;:colors&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3179160c7ddd0151d004050775f2d167fb2bf259" translate="yes" xml:space="preserve">
          <source>The supported levels, ordered by importance, are:</source>
          <target state="translated">Поддерживаемые уровни,упорядоченные по степени важности,таковы:</target>
        </trans-unit>
        <trans-unit id="b7878d33057652c5e4e57d591e83ecedf612c203" translate="yes" xml:space="preserve">
          <source>The supported levels, ordered by precedence, are:</source>
          <target state="translated">Поддерживаемые уровни,упорядоченные по приоритетам:</target>
        </trans-unit>
        <trans-unit id="db2280a174b18020a2620736642518bf66a11dab" translate="yes" xml:space="preserve">
          <source>The supported options are:</source>
          <target state="translated">Поддерживаются следующие варианты:</target>
        </trans-unit>
        <trans-unit id="a909fba4eceb102c979e5e9c2b15d4702c456bf4" translate="yes" xml:space="preserve">
          <source>The syntax Elixir provides for type specifications is similar to &lt;a href=&quot;http://www.erlang.org/doc/reference_manual/typespec.html&quot;&gt;the one in Erlang&lt;/a&gt;. Most of the built-in types provided in Erlang (for example, &lt;code&gt;pid()&lt;/code&gt;) are expressed in the same way: &lt;code&gt;pid()&lt;/code&gt; (or simply &lt;code&gt;pid&lt;/code&gt;). Parameterized types (such as &lt;code&gt;list(integer)&lt;/code&gt;) are supported as well and so are remote types (such as &lt;code&gt;Enum.t&lt;/code&gt;). Integers and atom literals are allowed as types (e.g., &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;:atom&lt;/code&gt;, or &lt;code&gt;false&lt;/code&gt;). All other types are built out of unions of predefined types. Some shorthands are allowed, such as &lt;code&gt;[...]&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;{...}&lt;/code&gt;.</source>
          <target state="translated">Синтаксис Elixir для спецификаций типов аналогичен синтаксису &lt;a href=&quot;http://www.erlang.org/doc/reference_manual/typespec.html&quot;&gt;Erlang&lt;/a&gt; . Большинство встроенных типов, представленных в Erlang (например, &lt;code&gt;pid()&lt;/code&gt; ), выражаются одинаково: &lt;code&gt;pid()&lt;/code&gt; (или просто &lt;code&gt;pid&lt;/code&gt; ). Также поддерживаются параметризованные типы (такие как &lt;code&gt;list(integer)&lt;/code&gt; ) и удаленные типы (такие как &lt;code&gt;Enum.t&lt;/code&gt; ). Целые и атом литералов допускается в качестве типов (например, &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;:atom&lt;/code&gt; , или &lt;code&gt;false&lt;/code&gt; ). Все остальные типы построены из объединений предопределенных типов. Разрешены некоторые сокращения, такие как &lt;code&gt;[...]&lt;/code&gt; , &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; и &lt;code&gt;{...}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11e8b05ebb02ab602f5c99e81c78f285a85d25bf" translate="yes" xml:space="preserve">
          <source>The syntax Elixir provides for type specifications is similar to &lt;a href=&quot;http://www.erlang.org/doc/reference_manual/typespec.html&quot;&gt;the one in Erlang&lt;/a&gt;. Most of the built-in types provided in Erlang (for example, &lt;code&gt;pid()&lt;/code&gt;) are expressed in the same way: &lt;code&gt;pid()&lt;/code&gt; (or simply &lt;code&gt;pid&lt;/code&gt;). Parameterized types (such as &lt;code&gt;list(integer)&lt;/code&gt;) are supported as well and so are remote types (such as &lt;code&gt;Enum.t&lt;/code&gt;). Integers and atom literals are allowed as types (for example, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;:atom&lt;/code&gt;, or &lt;code&gt;false&lt;/code&gt;). All other types are built out of unions of predefined types. Some shorthands are allowed, such as &lt;code&gt;[...]&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;{...}&lt;/code&gt;.</source>
          <target state="translated">Синтаксис Elixir для спецификаций типов аналогичен синтаксису &lt;a href=&quot;http://www.erlang.org/doc/reference_manual/typespec.html&quot;&gt;Erlang&lt;/a&gt; . Большинство встроенных типов, представленных в Erlang (например, &lt;code&gt;pid()&lt;/code&gt; ), выражаются одинаково: &lt;code&gt;pid()&lt;/code&gt; (или просто &lt;code&gt;pid&lt;/code&gt; ). Также поддерживаются параметризованные типы (например, &lt;code&gt;list(integer)&lt;/code&gt; ) и удаленные типы (например, &lt;code&gt;Enum.t&lt;/code&gt; ). Целые и атом литералы допускаются в качестве типов (например, &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;:atom&lt;/code&gt; , или &lt;code&gt;false&lt;/code&gt; ). Все остальные типы построены из объединений предопределенных типов. Допускаются некоторые сокращения, такие как &lt;code&gt;[...]&lt;/code&gt; , &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; и &lt;code&gt;{...}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d0036cfb43509daaf5a87c862104d3f9568ed85" translate="yes" xml:space="preserve">
          <source>The syntax above requires the given key to exist. It cannot be used to add new keys. For example, using it with the &lt;code&gt;:c&lt;/code&gt; key failed because there is no &lt;code&gt;:c&lt;/code&gt; in the map.</source>
          <target state="translated">Синтаксис выше требует, чтобы данный ключ существовал. Его нельзя использовать для добавления новых ключей. Например, использовать его с ключом &lt;code&gt;:c&lt;/code&gt; не удалось, потому что на карте нет &lt;code&gt;:c&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e74604ffed887af469a3ff79efc01a49993440e8" translate="yes" xml:space="preserve">
          <source>The syntax above will guarantee the given keys are valid at compilation time and it will guarantee at runtime the given argument is a struct, failing with &lt;a href=&quot;badstructerror&quot;&gt;&lt;code&gt;BadStructError&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">Приведенный выше синтаксис гарантирует, что указанные ключи действительны во время компиляции, и он будет гарантировать, что во время выполнения данный аргумент является структурой, в противном случае &lt;a href=&quot;badstructerror&quot;&gt; &lt;code&gt;BadStructError&lt;/code&gt; &lt;/a&gt; сбой с BadStructError .</target>
        </trans-unit>
        <trans-unit id="7180700097f6ff908399744578d9873946673ba9" translate="yes" xml:space="preserve">
          <source>The syntax above will guarantee the given keys are valid at compilation time and it will guarantee at runtime the given argument is a struct, failing with &lt;a href=&quot;https://hexdocs.pm/elixir/BadStructError.html&quot;&gt;&lt;code&gt;BadStructError&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">Приведенный выше синтаксис гарантирует, что данные ключи действительны во время компиляции, и он будет гарантировать, что во время выполнения данный аргумент является структурой, в противном случае &lt;a href=&quot;https://hexdocs.pm/elixir/BadStructError.html&quot;&gt; &lt;code&gt;BadStructError&lt;/code&gt; &lt;/a&gt; сбой с BadStructError .</target>
        </trans-unit>
        <trans-unit id="3346ccb7be2d14285ad110f9bf13a253d6668e2a" translate="yes" xml:space="preserve">
          <source>The syntax is to put the function and its input on the left side of the &lt;code&gt;::&lt;/code&gt; and the return value&amp;rsquo;s type on the right side. Be aware that types &lt;em&gt;may&lt;/em&gt; omit parentheses.</source>
          <target state="translated">Синтаксис заключается в том, чтобы поместить функцию и ее ввод слева от &lt;code&gt;::&lt;/code&gt; , а тип возвращаемого значения - справа. Имейте в виду, что типы &lt;em&gt;могут&lt;/em&gt; опускать круглые скобки.</target>
        </trans-unit>
        <trans-unit id="b84a63985dcdfb17ccdca5bd58bdd7687878200d" translate="yes" xml:space="preserve">
          <source>The system sets different environment variables. The following variables are set early on and can only be read by &lt;code&gt;env.sh&lt;/code&gt; and &lt;code&gt;env.bat&lt;/code&gt;:</source>
          <target state="translated">Система устанавливает разные переменные среды. Следующие переменные устанавливаются &lt;code&gt;env.sh&lt;/code&gt; и могут быть прочитаны только env.sh и &lt;code&gt;env.bat&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="15e9fc5e9c4c2be91d093aa25daa8c7249775f24" translate="yes" xml:space="preserve">
          <source>The tail elements of aliases are guaranteed to always be atoms.</source>
          <target state="translated">Хвостовые элементы псевдонимов гарантированно всегда будут атомами.</target>
        </trans-unit>
        <trans-unit id="0bcdf2274bc91e89bdf8524fe117cd1e390a0aae" translate="yes" xml:space="preserve">
          <source>The task can now be invoked with &lt;code&gt;mix hello&lt;/code&gt;.</source>
          <target state="translated">Теперь задача может быть вызвана с помощью &lt;code&gt;mix hello&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ca9f432a46eddec31b6e992a693b8edf32b4e5d" translate="yes" xml:space="preserve">
          <source>The template in &lt;code&gt;source&lt;/code&gt; is evaluated with the given &lt;code&gt;assigns&lt;/code&gt;.</source>
          <target state="translated">Шаблон в &lt;code&gt;source&lt;/code&gt; оцениваются с заданными &lt;code&gt;assigns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fec88603f65815ad051446d1e908302ee019778" translate="yes" xml:space="preserve">
          <source>The temporary directory path is unique (includes the test module and test name) and thus appropriate for running tests concurrently. You can customize the path further by setting the tag to a string, e.g.: &lt;code&gt;tmp_dir: &quot;my_path&quot;&lt;/code&gt;, which would make the final path to be: &lt;code&gt;tmp/&amp;lt;module&amp;gt;/&amp;lt;test&amp;gt;/my_path&lt;/code&gt;.</source>
          <target state="translated">Путь к временному каталогу уникален (включает тестовый модуль и имя теста) и поэтому подходит для одновременного выполнения тестов. Вы можете настроить путь дальше, установив тег в строку, например: &lt;code&gt;tmp_dir: &quot;my_path&quot;&lt;/code&gt; , что сделает окончательный путь следующим образом: &lt;code&gt;tmp/&amp;lt;module&amp;gt;/&amp;lt;test&amp;gt;/my_path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60d7de295785ea0605333a1eba6bb25d621b6acc" translate="yes" xml:space="preserve">
          <source>The terms are only considered to be exactly equal if they have the same value and are of the same type. For example, &lt;code&gt;1 == 1.0&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, but since they are of different types, &lt;code&gt;1 === 1.0&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Термины считаются точно равными, только если они имеют одинаковое значение и относятся к одному типу. Например, &lt;code&gt;1 == 1.0&lt;/code&gt; возвращает &lt;code&gt;true&lt;/code&gt; , но поскольку они бывают разных типов, &lt;code&gt;1 === 1.0&lt;/code&gt; возвращает &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="705df9c2e6adef6ee615fd1500b80411120b3a6b" translate="yes" xml:space="preserve">
          <source>The test above will fail on the last assertion as the bucket name remains in the registry even after we stop the bucket process.</source>
          <target state="translated">Вышеуказанный тест не пройдет при последнем утверждении,так как имя ведра останется в реестре даже после того,как мы остановим ковшовый процесс.</target>
        </trans-unit>
        <trans-unit id="c419758630890afee6c5cb360c0c3e39b020572b" translate="yes" xml:space="preserve">
          <source>The test files are sorted upfront in a round-robin fashion. Note the partition itself is given as an environment variable so it can be accessed in config files and test scripts. For example, it can be used to setup a different database instance per partition in &lt;code&gt;config/test.exs&lt;/code&gt;.</source>
          <target state="translated">Тестовые файлы заранее сортируются по циклической схеме. Обратите внимание, что сам раздел задан как переменная среды, поэтому к нему можно получить доступ в файлах конфигурации и сценариях тестирования. Например, его можно использовать для настройки отдельного экземпляра базы данных для каждого раздела в &lt;code&gt;config/test.exs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2570223385e731ad04d7b7880f45f2e4a73c2ce4" translate="yes" xml:space="preserve">
          <source>The test is similar to &amp;ldquo;removes bucket on exit&amp;rdquo; except that we are being a bit more harsh by sending &lt;code&gt;:shutdown&lt;/code&gt; as the exit reason instead of &lt;code&gt;:normal&lt;/code&gt;. If a process terminates with a reason different than &lt;code&gt;:normal&lt;/code&gt;, all linked processes receive an EXIT signal, causing the linked process to also terminate unless it is trapping exits.</source>
          <target state="translated">Тест аналогичен &amp;laquo;удаляет корзину при выходе&amp;raquo;, за исключением того, что мы немного жестче, отправляя &lt;code&gt;:shutdown&lt;/code&gt; в качестве причины выхода вместо &lt;code&gt;:normal&lt;/code&gt; . Если процесс завершается по причине, отличной от &lt;code&gt;:normal&lt;/code&gt; , все связанные процессы получают сигнал EXIT, в результате чего связанный процесс также завершается, если он не перехватывает выходы.</target>
        </trans-unit>
        <trans-unit id="80778ceb5bc9dd6da4a613a6cd5240315d4115bd" translate="yes" xml:space="preserve">
          <source>The test may also define a &lt;code&gt;var&lt;/code&gt;, which will pattern match on the test context. For more information on contexts, see &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Callbacks.html&quot;&gt;&lt;code&gt;ExUnit.Callbacks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Тест может также определять &lt;code&gt;var&lt;/code&gt; , которая будет соответствовать шаблону в контексте теста. Для получения дополнительной информации о контекстах см. &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Callbacks.html&quot;&gt; &lt;code&gt;ExUnit.Callbacks&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bdde6c13039b2d4b85652376fce95fabfa20deef" translate="yes" xml:space="preserve">
          <source>The test should pass.</source>
          <target state="translated">Тест должен пройти.</target>
        </trans-unit>
        <trans-unit id="3bf29b425a5cead446e53e0022f0fce0236e0195" translate="yes" xml:space="preserve">
          <source>The test type will be converted to a string and pluralized for display. You can use &lt;a href=&quot;exunit#plural_rule/2&quot;&gt;&lt;code&gt;ExUnit.plural_rule/2&lt;/code&gt;&lt;/a&gt; to set a custom pluralization.</source>
          <target state="translated">Тип теста будет преобразован в строку и отображен во множественном числе. Вы можете использовать &lt;a href=&quot;exunit#plural_rule/2&quot;&gt; &lt;code&gt;ExUnit.plural_rule/2&lt;/code&gt; &lt;/a&gt; для установки произвольного множественного числа.</target>
        </trans-unit>
        <trans-unit id="04db17fea40288d1a870e2f7e8d0c93c33a565d3" translate="yes" xml:space="preserve">
          <source>The test type will be converted to a string and pluralized for display. You can use &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html#plural_rule/2&quot;&gt;&lt;code&gt;ExUnit.plural_rule/2&lt;/code&gt;&lt;/a&gt; to set a custom pluralization.</source>
          <target state="translated">Тип теста будет преобразован в строку и отображен во множественном числе. Вы можете использовать &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html#plural_rule/2&quot;&gt; &lt;code&gt;ExUnit.plural_rule/2&lt;/code&gt; &lt;/a&gt; для установки произвольного множественного числа.</target>
        </trans-unit>
        <trans-unit id="a927d1705beb862013fa4736d80e7112683437e5" translate="yes" xml:space="preserve">
          <source>The third approach uses macros, and is by far the most complex. It will take more lines of code to implement, it is hard and expensive to test (compared to testing simple functions), and it limits how the user may use the library since all validations need to be defined inside a module.</source>
          <target state="translated">Третий подход использует макросы,и на сегодняшний день является самым сложным.Потребуется больше строк кода для реализации,тестирование (по сравнению с тестированием простых функций)затруднительно и дорого,а также ограничивает возможности использования библиотеки пользователем,так как все валидации должны быть определены внутри модуля.</target>
        </trans-unit>
        <trans-unit id="1d45004d92cd0fa8dd37a67dc40c34ac5fe7a8f6" translate="yes" xml:space="preserve">
          <source>The third argument given to &lt;a href=&quot;#register/3&quot;&gt;&lt;code&gt;register/3&lt;/code&gt;&lt;/a&gt; is a value associated to the current process. While in the previous section we used it when dispatching, in this particular example we are not interested in it, so we have set it to an empty list. You could store a more meaningful value if necessary.</source>
          <target state="translated">Третий аргумент, передаваемый &lt;a href=&quot;#register/3&quot;&gt; &lt;code&gt;register/3&lt;/code&gt; &lt;/a&gt; - это значение, связанное с текущим процессом. Хотя в предыдущем разделе мы использовали его при отправке, в этом конкретном примере он нам не интересен, поэтому мы установили его в пустой список. При необходимости вы можете сохранить более значимое значение.</target>
        </trans-unit>
        <trans-unit id="286a4f81139162ba612e0fc78d910245b92506ae" translate="yes" xml:space="preserve">
          <source>The third argument is the stacktrace which is used to enrich a normalized error with more information. It is only used when the kind is an error.</source>
          <target state="translated">Третий аргумент-стековая трасса,которая используется для обогащения нормализованной ошибки дополнительной информацией.Он используется только в том случае,если вид ошибки является ошибкой.</target>
        </trans-unit>
        <trans-unit id="b0469bb3fc164355009dcbe32b659229c5de7434" translate="yes" xml:space="preserve">
          <source>The third element is either a list of arguments for the function call or an atom. When this element is an atom, it means the tuple represents a variable.</source>
          <target state="translated">Третий элемент-это либо список аргументов для вызова функции,либо атом.Когда этот элемент является атомом,это означает,что кортеж представляет собой переменную.</target>
        </trans-unit>
        <trans-unit id="61d0bd68d9312dd1a2b6bc353f3631650af592e9" translate="yes" xml:space="preserve">
          <source>The third element of the tuple are the arguments for the function call. The third argument may be an atom, which is usually a variable (or a local call).</source>
          <target state="translated">Третий элемент кортежа-аргументы вызова функции.Третьим аргументом может быть атом,который обычно является переменной (или локальным вызовом).</target>
        </trans-unit>
        <trans-unit id="e03e20762e8bbf0a5e287057fa9da1be08a2ebb0" translate="yes" xml:space="preserve">
          <source>The third part, the body, is a list of shapes of the returned entries. Like guards, you have access to assigned variables like &lt;code&gt;:&quot;$1&quot;&lt;/code&gt;, which you can combine with hardcoded values to freely shape entries Note that tuples have to be wrapped in an additional tuple. To get a result format like &lt;code&gt;%{key: key, pid: pid, value: value}&lt;/code&gt;, assuming you bound those variables in order in the match part, you would provide a body like &lt;code&gt;[%{key: :&quot;$1&quot;, pid: :&quot;$2&quot;, value: :&quot;$3&quot;}]&lt;/code&gt;. Like guards, you can use some operations like &lt;code&gt;:element&lt;/code&gt; to modify the output format.</source>
          <target state="translated">Третья часть, тело, представляет собой список форм возвращенных записей. Как и у охранников, у вас есть доступ к назначенным переменным, таким как &lt;code&gt;:&quot;$1&quot;&lt;/code&gt; , которые вы можете комбинировать с жестко запрограммированными значениями, чтобы произвольно формировать записи. Обратите внимание, что кортежи должны быть заключены в дополнительный кортеж. Чтобы получить такой формат результата, как &lt;code&gt;%{key: key, pid: pid, value: value}&lt;/code&gt; , предполагая, что вы связали эти переменные по порядку в части соответствия, вы должны предоставить тело вида &lt;code&gt;[%{key: :&quot;$1&quot;, pid: :&quot;$2&quot;, value: :&quot;$3&quot;}]&lt;/code&gt; . Как и охранники, вы можете использовать некоторые операции, такие как &lt;code&gt;:element&lt;/code&gt; , для изменения формата вывода.</target>
        </trans-unit>
        <trans-unit id="dd8a93e3bf717eed4a2e3026f8f31870641fb464" translate="yes" xml:space="preserve">
          <source>The time functions in this module work in the &lt;code&gt;:native&lt;/code&gt; unit (unless specified otherwise), which is operating system dependent. Most of the time, all calculations are done in the &lt;code&gt;:native&lt;/code&gt; unit, to avoid loss of precision, with &lt;a href=&quot;#convert_time_unit/3&quot;&gt;&lt;code&gt;convert_time_unit/3&lt;/code&gt;&lt;/a&gt; being invoked at the end to convert to a specific time unit like &lt;code&gt;:millisecond&lt;/code&gt; or &lt;code&gt;:microsecond&lt;/code&gt;. See the &lt;a href=&quot;#t:time_unit/0&quot;&gt;&lt;code&gt;time_unit/0&lt;/code&gt;&lt;/a&gt; type for more information.</source>
          <target state="translated">Функции времени в этом модуле работают в модуле &lt;code&gt;:native&lt;/code&gt; (если не указано иное), который зависит от операционной системы. В большинстве случаев все вычисления выполняются в модуле &lt;code&gt;:native&lt;/code&gt; , чтобы избежать потери точности, при этом в конце вызывается &lt;a href=&quot;#convert_time_unit/3&quot;&gt; &lt;code&gt;convert_time_unit/3&lt;/code&gt; &lt;/a&gt; для преобразования в определенную единицу времени, например &lt;code&gt;:millisecond&lt;/code&gt; или &lt;code&gt;:microsecond&lt;/code&gt; . Для &lt;a href=&quot;#t:time_unit/0&quot;&gt; &lt;code&gt;time_unit/0&lt;/code&gt; &lt;/a&gt; дополнительной информации см. Тип time_unit / 0 .</target>
        </trans-unit>
        <trans-unit id="c81a5f56c30620f4ca3fdbd7994e540bcd3307ec" translate="yes" xml:space="preserve">
          <source>The time type returned in &lt;code&gt;atime&lt;/code&gt;, &lt;code&gt;mtime&lt;/code&gt;, and &lt;code&gt;ctime&lt;/code&gt; is dependent on the time type set in options. &lt;code&gt;{:time, type}&lt;/code&gt; where type can be &lt;code&gt;:local&lt;/code&gt;, &lt;code&gt;:universal&lt;/code&gt;, or &lt;code&gt;:posix&lt;/code&gt;. Default is &lt;code&gt;:universal&lt;/code&gt;.</source>
          <target state="translated">Тип времени, возвращаемый в &lt;code&gt;atime&lt;/code&gt; , &lt;code&gt;mtime&lt;/code&gt; и &lt;code&gt;ctime&lt;/code&gt; , зависит от типа времени, установленного в параметрах. &lt;code&gt;{:time, type}&lt;/code&gt; , где тип может быть &lt;code&gt;:local&lt;/code&gt; , &lt;code&gt;:universal&lt;/code&gt; , или &lt;code&gt;:posix&lt;/code&gt; . По умолчанию &lt;code&gt;:universal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ccc7b51abb959b7b6a642bc36ea122d38002d9a" translate="yes" xml:space="preserve">
          <source>The time unit to be passed to functions like &lt;a href=&quot;#monotonic_time/1&quot;&gt;&lt;code&gt;monotonic_time/1&lt;/code&gt;&lt;/a&gt; and others.</source>
          <target state="translated">Единица времени, передаваемая таким функциям, как &lt;a href=&quot;#monotonic_time/1&quot;&gt; &lt;code&gt;monotonic_time/1&lt;/code&gt; &lt;/a&gt; и другим.</target>
        </trans-unit>
        <trans-unit id="1bbd3b4515f159eff3b51909840a9c295b77b423" translate="yes" xml:space="preserve">
          <source>The time zone ID according to the IANA tz database (e.g. Europe/Zurich)</source>
          <target state="translated">Идентификация часового пояса по базе данных IANA tz (например,Европа/Цюрих).</target>
        </trans-unit>
        <trans-unit id="9e127d4e3ff4d398a6cfe90803c629c4523b576a" translate="yes" xml:space="preserve">
          <source>The time zone ID according to the IANA tz database (for example, Europe/Zurich)</source>
          <target state="translated">Идентификация часового пояса по базе данных IANA tz (например,Европа/Цюрих)</target>
        </trans-unit>
        <trans-unit id="b125596c86be66bad3036f66746716d52648f027" translate="yes" xml:space="preserve">
          <source>The time zone UTC offset in seconds</source>
          <target state="translated">Смещение часового пояса по UTC в секундах</target>
        </trans-unit>
        <trans-unit id="3df5c55c74cecebffe247785901344586d62d59b" translate="yes" xml:space="preserve">
          <source>The time zone UTC offset in seconds for standard time.</source>
          <target state="translated">Смещение часового пояса UTC в секундах для стандартного времени.</target>
        </trans-unit>
        <trans-unit id="4a33e0326e0255c69b66326b76b995f67cc50bc7" translate="yes" xml:space="preserve">
          <source>The time zone abbreviation (e.g. CET or CEST or BST etc.)</source>
          <target state="translated">Сокращение часового пояса (например,CET или CEST или BST и т.д.).</target>
        </trans-unit>
        <trans-unit id="e483f17410a33eb44510ffea9561b18ac2cf91e9" translate="yes" xml:space="preserve">
          <source>The time zone abbreviation (for example, CET or CEST or BST, and such)</source>
          <target state="translated">Сокращение часового пояса (например,CET или CEST или BST,и т.д.)</target>
        </trans-unit>
        <trans-unit id="fcad795376e4abb458cc8e3841c41b9eba5c998c" translate="yes" xml:space="preserve">
          <source>The time zone standard offset in seconds (not zero in summer times)</source>
          <target state="translated">Стандартное смещение часового пояса в секундах (в летнее время не обнуляется).</target>
        </trans-unit>
        <trans-unit id="25fd14442f68de45c7fa315a32da5dbaeb94d1d8" translate="yes" xml:space="preserve">
          <source>The time zone standard offset in seconds (typically not zero in summer times).</source>
          <target state="translated">Стандартное смещение часового пояса в секундах (обычно не ноль в летнее время).</target>
        </trans-unit>
        <trans-unit id="cce73f4a8a7c3c6d7d87f75bc5aa727351d2f2f2" translate="yes" xml:space="preserve">
          <source>The timer will be automatically canceled if the given &lt;code&gt;dest&lt;/code&gt; is a PID which is not alive or when the given PID exits. Note that timers will not be automatically canceled when &lt;code&gt;dest&lt;/code&gt; is an atom (as the atom resolution is done on delivery).</source>
          <target state="translated">Таймер будет автоматически отменен, если данный &lt;code&gt;dest&lt;/code&gt; является неактивным PID или когда данный PID завершится. Обратите внимание, что таймеры не будут автоматически отменены, если &lt;code&gt;dest&lt;/code&gt; является атомом (поскольку разрешение атома выполняется при доставке).</target>
        </trans-unit>
        <trans-unit id="95f67c03b8dd416c9af30e47423ea3401d29e99a" translate="yes" xml:space="preserve">
          <source>The trait can be one of two options:</source>
          <target state="translated">Черта может быть одним из двух вариантов:</target>
        </trans-unit>
        <trans-unit id="8c51e1e67805ed16c58e9c1e802e36335ea6aca4" translate="yes" xml:space="preserve">
          <source>The trouble with state</source>
          <target state="translated">Проблемы с государством</target>
        </trans-unit>
        <trans-unit id="a1d02c2f92fc207d7072d19d88bfe702734e4f16" translate="yes" xml:space="preserve">
          <source>The tuple above represents a function call to &lt;code&gt;sum&lt;/code&gt; passing 1, 2 and 3 as arguments. The tuple elements are:</source>
          <target state="translated">Приведенный выше кортеж представляет собой вызов функции для &lt;code&gt;sum&lt;/code&gt; передачей 1, 2 и 3 в качестве аргументов. Элементы кортежа:</target>
        </trans-unit>
        <trans-unit id="88ca5571ed44473b8f3ce89710c5edfce0720f58" translate="yes" xml:space="preserve">
          <source>The two syntaxes are completely equivalent. Like atoms, keyword lists keys must be composed of Unicode characters such as letters, numbers, underscore, and &lt;code&gt;@&lt;/code&gt;. If the keyword has a character that does not belong to the category above, such as spaces, you can wrap it in quotes:</source>
          <target state="translated">Два синтаксиса полностью эквивалентны. Как и атомы, ключи списков ключевых слов должны состоять из символов Юникода, таких как буквы, цифры, подчеркивание и &lt;code&gt;@&lt;/code&gt; . Если в ключевом слове есть символ, не относящийся к указанной выше категории, например пробелы, вы можете заключить его в кавычки:</target>
        </trans-unit>
        <trans-unit id="0be32613fcd0e0034d6c53c421573b087961e380" translate="yes" xml:space="preserve">
          <source>The two syntaxes are completely equivalent. Like atoms, keywords must be composed of Unicode characters such as letters, numbers, underscore, and &lt;code&gt;@&lt;/code&gt;. If the keyword has a character that does not belong to the category above, such as spaces, you can wrap it in quotes:</source>
          <target state="translated">Два синтаксиса полностью эквивалентны. Как и атомы, ключевые слова должны состоять из символов Юникода, таких как буквы, цифры, подчеркивание и &lt;code&gt;@&lt;/code&gt; . Если в ключевом слове есть символ, не принадлежащий к указанной выше категории, например пробелы, вы можете заключить его в кавычки:</target>
        </trans-unit>
        <trans-unit id="c03fb1d89c3fb5cf593c60e9aa138dedff7e09ba" translate="yes" xml:space="preserve">
          <source>The two syntaxes for accessing keys reveal the dual nature of maps. The &lt;code&gt;map[key]&lt;/code&gt; syntax is used for dynamically created maps that may have any key, of any type. &lt;code&gt;map.key&lt;/code&gt; is used with maps that hold a predetermined set of atoms keys, which are expected to always be present. Structs, defined via &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defstruct/1&quot;&gt;&lt;code&gt;defstruct/1&lt;/code&gt;&lt;/a&gt;, are one example of such &quot;static maps&quot;, where the keys can also be checked during compile time.</source>
          <target state="translated">Два синтаксиса для доступа к ключам раскрывают двойственную природу карт. &lt;code&gt;map[key]&lt;/code&gt; синтаксис используется для динамически создаваемых карт , которые могут иметь любой ключ, любого типа. &lt;code&gt;map.key&lt;/code&gt; используется с картами, которые содержат предопределенный набор ключей атомов, которые, как ожидается, всегда будут присутствовать. Структуры, определенные через &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defstruct/1&quot;&gt; &lt;code&gt;defstruct/1&lt;/code&gt; &lt;/a&gt; , являются одним из примеров таких &amp;laquo;статических карт&amp;raquo;, где ключи также можно проверять во время компиляции.</target>
        </trans-unit>
        <trans-unit id="7bf824f894b5901f732af99ee1c6741c2c8f9460" translate="yes" xml:space="preserve">
          <source>The two syntaxes for accessing keys reveal the dual nature of maps. The &lt;code&gt;map[key]&lt;/code&gt; syntax is used for dynamically created maps that may have any key, of any type. &lt;code&gt;map.key&lt;/code&gt; is used with maps that hold a predetermined set of atoms keys, which are expected to always be present. Structs, defined via &lt;a href=&quot;kernel#defstruct/1&quot;&gt;&lt;code&gt;defstruct/1&lt;/code&gt;&lt;/a&gt;, are one example of such &quot;static maps&quot;, where the keys can also be checked during compile time.</source>
          <target state="translated">Два синтаксиса для доступа к ключам раскрывают двойственную природу карт. &lt;code&gt;map[key]&lt;/code&gt; синтаксис используется для динамически создаваемых карт , которые могут иметь любой ключ, любого типа. &lt;code&gt;map.key&lt;/code&gt; используется с картами, которые содержат предопределенный набор ключей атомов, которые, как ожидается, всегда будут присутствовать. Структуры, определенные через &lt;a href=&quot;kernel#defstruct/1&quot;&gt; &lt;code&gt;defstruct/1&lt;/code&gt; &lt;/a&gt; , являются одним из примеров таких &amp;laquo;статических карт&amp;raquo;, где ключи также можно проверять во время компиляции.</target>
        </trans-unit>
        <trans-unit id="27b2df44172f3a57aa97a9d731e7cf407e529ef4" translate="yes" xml:space="preserve">
          <source>The type of keys allowed on registration</source>
          <target state="translated">Тип ключей,разрешенных при регистрации</target>
        </trans-unit>
        <trans-unit id="2981849bde4b665272891869623a6b0939beaaa5" translate="yes" xml:space="preserve">
          <source>The type of registry metadata keys</source>
          <target state="translated">Тип ключей метаданных реестра</target>
        </trans-unit>
        <trans-unit id="1b222464dab205a6bd54b94d0bb3729d611af5dc" translate="yes" xml:space="preserve">
          <source>The type of registry metadata values</source>
          <target state="translated">Тип значений метаданных реестра</target>
        </trans-unit>
        <trans-unit id="1d6b108d320c16acf0d32c924ccacb139089d8c7" translate="yes" xml:space="preserve">
          <source>The type of the registry</source>
          <target state="translated">Тип реестра</target>
        </trans-unit>
        <trans-unit id="53279e10023dca8a2288968b9bcf710b0c986964" translate="yes" xml:space="preserve">
          <source>The type of values allowed on registration</source>
          <target state="translated">Тип значений,разрешенных при регистрации</target>
        </trans-unit>
        <trans-unit id="96d309a1ca8c9b49d61652c9574ee5761b49d46b" translate="yes" xml:space="preserve">
          <source>The types &lt;code&gt;String.t()&lt;/code&gt; and &lt;code&gt;binary()&lt;/code&gt; are equivalent to analysis tools. Although, for those reading the documentation, &lt;code&gt;String.t()&lt;/code&gt; implies it is a UTF-8 encoded binary.</source>
          <target state="translated">Типы &lt;code&gt;String.t()&lt;/code&gt; и &lt;code&gt;binary()&lt;/code&gt; эквивалентны инструментам анализа. Хотя для тех, кто читает документацию, &lt;code&gt;String.t()&lt;/code&gt; подразумевает, что это двоичный код в кодировке UTF-8.</target>
        </trans-unit>
        <trans-unit id="fd984a4e58cc83d476fe33ed807205982b711883" translate="yes" xml:space="preserve">
          <source>The types of the struct fields that are not included in &lt;code&gt;%User{}&lt;/code&gt; default to &lt;code&gt;term()&lt;/code&gt; (see &lt;a href=&quot;https://hexdocs.pm/elixir/typespecs.html#built-in-types&quot;&gt;&lt;code&gt;term/0&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Типы структурных полей, которые не включены в &lt;code&gt;%User{}&lt;/code&gt; умолчанию - &lt;code&gt;term()&lt;/code&gt; (см. &lt;a href=&quot;https://hexdocs.pm/elixir/typespecs.html#built-in-types&quot;&gt; &lt;code&gt;term/0&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="cb8c250a62b4261ebc510b4a71573c121311d0bb" translate="yes" xml:space="preserve">
          <source>The types of the struct fields that are not included in &lt;code&gt;%User{}&lt;/code&gt; default to &lt;code&gt;term()&lt;/code&gt; (see &lt;a href=&quot;typespecs#built-in-types&quot;&gt;&lt;code&gt;term/0&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Типы структурных полей, которые не включены в &lt;code&gt;%User{}&lt;/code&gt; умолчанию - &lt;code&gt;term()&lt;/code&gt; (см. &lt;a href=&quot;typespecs#built-in-types&quot;&gt; &lt;code&gt;term/0&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b4b4572dc37f28e7b3a1df4f6c8add52491639ae" translate="yes" xml:space="preserve">
          <source>The underscore variable (&lt;code&gt;_&lt;/code&gt;) has a special meaning as it can never be bound to any value. It is especially useful when you don't care about certain value in a pattern:</source>
          <target state="translated">Переменная подчеркивания ( &lt;code&gt;_&lt;/code&gt; ) имеет особое значение, поскольку она никогда не может быть привязана к какому-либо значению. Это особенно полезно, когда вас не волнует определенное значение в шаблоне:</target>
        </trans-unit>
        <trans-unit id="d2b5512b33fdcb38fab8fdf28a5c744cc440968f" translate="yes" xml:space="preserve">
          <source>The unit can also be an integer as in &lt;a href=&quot;https://hexdocs.pm/elixir/System.html#t:time_unit/0&quot;&gt;&lt;code&gt;System.time_unit/0&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Единица также может быть целым числом, как в &lt;a href=&quot;https://hexdocs.pm/elixir/System.html#t:time_unit/0&quot;&gt; &lt;code&gt;System.time_unit/0&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="8b47b534c105a2118838e65f4bd8f13e6c75b738" translate="yes" xml:space="preserve">
          <source>The unit can also be an integer as in &lt;a href=&quot;system#t:time_unit/0&quot;&gt;&lt;code&gt;System.time_unit/0&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Единица измерения также может быть целым числом, как в &lt;a href=&quot;system#t:time_unit/0&quot;&gt; &lt;code&gt;System.time_unit/0&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a447ce422905d13f06edc954109b01bb1211f3ed" translate="yes" xml:space="preserve">
          <source>The unreachable and deprecated checks below happen every time your project is compiled via &lt;a href=&quot;mix.tasks.compile.xref&quot;&gt;&lt;code&gt;mix compile.xref&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;mix.tasks.compile.xref&quot;&gt;&lt;code&gt;Mix.Tasks.Compile.Xref&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Проверки недостижимости и устаревания, указанные ниже, происходят каждый раз, когда ваш проект компилируется с помощью &lt;a href=&quot;mix.tasks.compile.xref&quot;&gt; &lt;code&gt;mix compile.xref&lt;/code&gt; &lt;/a&gt; . См. &lt;a href=&quot;mix.tasks.compile.xref&quot;&gt; &lt;code&gt;Mix.Tasks.Compile.Xref&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="f350c7b62e10906702ea9465bc4c4e8ee009110d" translate="yes" xml:space="preserve">
          <source>The usage of &lt;code&gt;:ok&lt;/code&gt;/&lt;code&gt;:error&lt;/code&gt; tuples is about the domain that the function works on, in this case, file system access. Bad arguments, logical errors, invalid options should raise regardless of the function name. If in doubt, prefer to return tuples instead of raising, as users of your library can always match on the results and raise if necessary.</source>
          <target state="translated">Использование кортежей &lt;code&gt;:ok&lt;/code&gt; / &lt;code&gt;:error&lt;/code&gt; касается домена, в котором работает функция, в данном случае доступа к файловой системе. Неправильные аргументы, логические ошибки, недопустимые параметры должны возникать независимо от имени функции. Если есть сомнения, предпочтительнее возвращать кортежи вместо повышения, поскольку пользователи вашей библиотеки всегда могут сопоставить результаты и при необходимости повысить.</target>
        </trans-unit>
        <trans-unit id="f2761fc5ed5c6c550d3c3f11fa24ee7951107bd4" translate="yes" xml:space="preserve">
          <source>The user must press Enter or type one of &quot;y&quot;, &quot;yes&quot;, &quot;Y&quot;, &quot;YES&quot; or &quot;Yes&quot;.</source>
          <target state="translated">Пользователь должен нажать клавишу Enter или ввести одно из &quot;y&quot;,&quot;yes&quot;,&quot;Y&quot;,&quot;YES&quot; или &quot;Yes&quot;.</target>
        </trans-unit>
        <trans-unit id="067adddb8899b26a44c6d119cc5060679343ac3f" translate="yes" xml:space="preserve">
          <source>The valid parameters you can use are:</source>
          <target state="translated">Действительными параметрами,которые вы можете использовать,являются:</target>
        </trans-unit>
        <trans-unit id="3e5fe130617142d21e815f74a253669918514b41" translate="yes" xml:space="preserve">
          <source>The value emitted is &lt;code&gt;0&lt;/code&gt;. This operation will block the caller by the given time until the element is streamed.</source>
          <target state="translated">Выдается значение &lt;code&gt;0&lt;/code&gt; . Эта операция заблокирует вызывающего к заданному времени, пока элемент не будет передан в потоковом режиме.</target>
        </trans-unit>
        <trans-unit id="d90bdb7c5d59a88b306900023f5ca84001349ca6" translate="yes" xml:space="preserve">
          <source>The value is a keyword list with two possible keys representing prompt types:</source>
          <target state="translated">Значение представляет собой список ключевых слов с двумя возможными клавишами,представляющими типы подсказок:</target>
        </trans-unit>
        <trans-unit id="caa6577865e36568b3711626c14e00f9b424ae56" translate="yes" xml:space="preserve">
          <source>The value is no longer a binary, but a bitstring &amp;ndash; a bunch of bits! So a binary is a bitstring where the number of bits is divisible by 8.</source>
          <target state="translated">Значение больше не является двоичным, а представляет собой цепочку битов - набор битов! Таким образом, двоичный файл - это строка битов, в которой количество битов делится на 8.</target>
        </trans-unit>
        <trans-unit id="3cc68a54cd0dbc959bc6164a6a2b53075dfa30ea" translate="yes" xml:space="preserve">
          <source>The values emitted are an increasing counter starting at &lt;code&gt;0&lt;/code&gt;. This operation will block the caller by the given interval every time a new element is streamed.</source>
          <target state="translated">Выдаваемые значения представляют собой увеличивающийся счетчик, начиная с &lt;code&gt;0&lt;/code&gt; . Эта операция будет блокировать вызывающего абонента на указанный интервал каждый раз при потоковой передаче нового элемента.</target>
        </trans-unit>
        <trans-unit id="be1b57a18ace41fb8f93930afe8b1ad887b40d1d" translate="yes" xml:space="preserve">
          <source>The values for &lt;code&gt;:case&lt;/code&gt; can be:</source>
          <target state="translated">Значения для &lt;code&gt;:case&lt;/code&gt; могут быть:</target>
        </trans-unit>
        <trans-unit id="3a8416871ca07e4a4f59fb2e54024c09ce510c3d" translate="yes" xml:space="preserve">
          <source>The values for &lt;code&gt;:padding&lt;/code&gt; can be:</source>
          <target state="translated">Значения для &lt;code&gt;:padding&lt;/code&gt; могут быть:</target>
        </trans-unit>
        <trans-unit id="48b014b54ab14e39b32c6219693fd725eede8847" translate="yes" xml:space="preserve">
          <source>The values for &lt;code&gt;:time&lt;/code&gt; can be:</source>
          <target state="translated">Значения для &lt;code&gt;:time&lt;/code&gt; могут быть:</target>
        </trans-unit>
        <trans-unit id="21f3f4f945d9026f4fff4e43f08cf7f4707e46e4" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;_&lt;/code&gt; is special in that it can never be read from. Trying to read from it gives a compile error:</source>
          <target state="translated">Переменная &lt;code&gt;_&lt;/code&gt; особенная в том, что ее нельзя прочитать. Попытка прочитать из него дает ошибку компиляции:</target>
        </trans-unit>
        <trans-unit id="9e1be81239623e7fbf2a82d7e2a4f2b80599067d" translate="yes" xml:space="preserve">
          <source>The variables defined inside &lt;code&gt;quote&lt;/code&gt; won't be available during prying due to the hygiene mechanism in quoted expressions. The hygiene mechanism changes the variable names in quoted expressions so they don't collide with variables defined by the users of the macros. Therefore the original names are not available.</source>
          <target state="translated">Переменные , определенные внутри &lt;code&gt;quote&lt;/code&gt; не будут доступны во время поддев за счет механизма гигиены в цитируемых выражений. Механизм гигиены изменяет имена переменных в выражениях в кавычках, чтобы они не конфликтовали с переменными, определенными пользователями макросов. Поэтому оригинальные имена недоступны.</target>
        </trans-unit>
        <trans-unit id="c8744b53eaf293e92df6d8b3f6054f83b09340e5" translate="yes" xml:space="preserve">
          <source>The version is represented by the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Version&lt;/code&gt;&lt;/a&gt; struct and fields are named according to SemVer 2.0: &lt;code&gt;:major&lt;/code&gt;, &lt;code&gt;:minor&lt;/code&gt;, &lt;code&gt;:patch&lt;/code&gt;, &lt;code&gt;:pre&lt;/code&gt;, and &lt;code&gt;:build&lt;/code&gt;.</source>
          <target state="translated">Версия представлена &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Version&lt;/code&gt; &lt;/a&gt; структуры и поля названы в соответствии с SemVer 2.0: &lt;code&gt;:major&lt;/code&gt; , &lt;code&gt;:minor&lt;/code&gt; , &lt;code&gt;:patch&lt;/code&gt; , &lt;code&gt;:pre&lt;/code&gt; , и &lt;code&gt;:build&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d0b621f78879c76c317ddf557989e7b4d0a18c9" translate="yes" xml:space="preserve">
          <source>The version is represented by the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Version&lt;/code&gt;&lt;/a&gt; struct and fields are named according to SemVer: &lt;code&gt;:major&lt;/code&gt;, &lt;code&gt;:minor&lt;/code&gt;, &lt;code&gt;:patch&lt;/code&gt;, &lt;code&gt;:pre&lt;/code&gt;, and &lt;code&gt;:build&lt;/code&gt;.</source>
          <target state="translated">Версия представлена &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Version&lt;/code&gt; &lt;/a&gt; структуры и поля названы в соответствии с SemVer: &lt;code&gt;:major&lt;/code&gt; , &lt;code&gt;:minor&lt;/code&gt; , &lt;code&gt;:patch&lt;/code&gt; , &lt;code&gt;:pre&lt;/code&gt; , и &lt;code&gt;:build&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="64e09f157d5e5070ea793feca6351f0810f54544" translate="yes" xml:space="preserve">
          <source>The version without &lt;code&gt;!&lt;/code&gt; is preferred when you want to handle different outcomes using pattern matching:</source>
          <target state="translated">Версия без &lt;code&gt;!&lt;/code&gt; предпочтительнее, если вы хотите обрабатывать разные результаты с помощью сопоставления с образцом:</target>
        </trans-unit>
        <trans-unit id="e2528fcfa71e426e6f186925ba5d183a72e0825f" translate="yes" xml:space="preserve">
          <source>The wildcard looks like an ordinary path, except that the following &quot;wildcard characters&quot; are interpreted in a special way:</source>
          <target state="translated">Символ подстановки выглядит как обычный путь,за исключением того,что следующие &quot;символы подстановки&quot; интерпретируются особым образом:</target>
        </trans-unit>
        <trans-unit id="0fcbc9b2e71d94abc862c5aacc86295bf5f87ef7" translate="yes" xml:space="preserve">
          <source>The year parsed by this function is limited to four digits and, while ISO 8601 allows datetimes to specify 24:00:00 as the zero hour of the next day, this notation is not supported by Elixir. Note leap seconds are not supported by the built-in Calendar.ISO.</source>
          <target state="translated">Год,рассматриваемый этой функцией,ограничен четырьмя цифрами,и,в то время как ISO 8601 позволяет указывать 24:00:00 в качестве нулевого часа следующего дня,эта нотация не поддерживается Elixir.Примечание Високосные секунды не поддерживаются встроенным Calendar.ISO.</target>
        </trans-unit>
        <trans-unit id="43359a56ca5b9f74f8ed54225f235a4eac841d33" translate="yes" xml:space="preserve">
          <source>The year parsed by this function is limited to four digits.</source>
          <target state="translated">Год,рассматриваемый этой функцией,ограничен четырьмя цифрами.</target>
        </trans-unit>
        <trans-unit id="42c8fd279491ba3a5a79a3fc57c18b896f2e8d7e" translate="yes" xml:space="preserve">
          <source>The zip and zlib modules</source>
          <target state="translated">Модули zip и zlib</target>
        </trans-unit>
        <trans-unit id="a928b0d99e54733f051669ca9f28257ad67f0a00" translate="yes" xml:space="preserve">
          <source>The zipping finishes as soon as any enumerable completes.</source>
          <target state="translated">Застежка-молния заканчивается,как только заканчивается любое количество.</target>
        </trans-unit>
        <trans-unit id="92c61e8c081422e6cb087e5091e2eef8743332a7" translate="yes" xml:space="preserve">
          <source>The zipping finishes as soon as any enumerable in the given collection completes.</source>
          <target state="translated">Застежка-молния заканчивается,как только заканчивается любое перечисление в данной коллекции.</target>
        </trans-unit>
        <trans-unit id="5390d109c8d9531238497e8770981143c5154c71" translate="yes" xml:space="preserve">
          <source>The zipping finishes as soon as any list terminates.</source>
          <target state="translated">Застежка-молния заканчивается,как только заканчивается любой список.</target>
        </trans-unit>
        <trans-unit id="b625dd872916e65cdac731dbaa58c2540d9b95a9" translate="yes" xml:space="preserve">
          <source>Then we define a &lt;code&gt;start_link/1&lt;/code&gt; function, which will effectively start the agent. It is a convention to define a &lt;code&gt;start_link/1&lt;/code&gt; function that always accepts a list of options. We don&amp;rsquo;t plan on using any options right now, but we might later on. We then proceed to call &lt;code&gt;Agent.start_link/1&lt;/code&gt;, which receives an anonymous function that returns the Agent&amp;rsquo;s initial state.</source>
          <target state="translated">Затем мы определяем функцию &lt;code&gt;start_link/1&lt;/code&gt; , которая эффективно запускает агент. Это соглашение об определении функции &lt;code&gt;start_link/1&lt;/code&gt; , которая всегда принимает список параметров. Мы не планируем использовать какие-либо варианты прямо сейчас, но мы можем использовать их позже. Затем мы переходим к вызову &lt;code&gt;Agent.start_link/1&lt;/code&gt; , который получает анонимную функцию, которая возвращает начальное состояние агента.</target>
        </trans-unit>
        <trans-unit id="87d5cb2e280470b50ded81bad6b2dc9e656de005" translate="yes" xml:space="preserve">
          <source>Then when specifying your release, you can specify the provider in the release configuration:</source>
          <target state="translated">Затем при указании выпуска можно указать поставщика в конфигурации выпуска:</target>
        </trans-unit>
        <trans-unit id="a9efffd6370bf177135cf0838aedef8c490edaff" translate="yes" xml:space="preserve">
          <source>Then when specifying your release, you can specify the provider:</source>
          <target state="translated">Затем при указании выпуска можно указать поставщика услуг:</target>
        </trans-unit>
        <trans-unit id="90be63383bb86c2a9b4266d11b3e7f59bb1305ef" translate="yes" xml:space="preserve">
          <source>Then, we add the head of the list to the accumulator &lt;code&gt;head + accumulator&lt;/code&gt; and call &lt;code&gt;sum_list&lt;/code&gt; again, recursively, passing the tail of the list as its first argument. The tail will once again match &lt;code&gt;[head | tail]&lt;/code&gt; until the list is empty, as seen below:</source>
          <target state="translated">Затем мы добавляем &lt;code&gt;sum_list&lt;/code&gt; списка к аккумулятору &lt;code&gt;head + accumulator&lt;/code&gt; и снова вызываем sum_list , рекурсивно, передавая конец списка в качестве его первого аргумента. Хвост снова будет соответствовать &lt;code&gt;[head | tail]&lt;/code&gt; пока список не станет пустым, как показано ниже:</target>
        </trans-unit>
        <trans-unit id="6b87f84651e39aeea5d926774256f894a29c7180" translate="yes" xml:space="preserve">
          <source>Then, whenever desired, those tests could be included in the run via the &lt;code&gt;--include&lt;/code&gt; option:</source>
          <target state="translated">Затем, при желании, эти тесты могут быть включены в прогон с помощью опции &lt;code&gt;--include&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="34c7a694bb4b3edc18ed538476727a5e7423da3d" translate="yes" xml:space="preserve">
          <source>There are a couple of ways to guarantee that a release is built on a host with the same properties as the target. A simple option is to fetch the source, compile the code and assemble the release on the target itself. It would be something like this:</source>
          <target state="translated">Есть пара способов гарантировать,что релиз будет построен на хосте с теми же свойствами,что и цель.Простой вариант-получить исходный текст,скомпилировать код и собрать релиз на самой цели.Это будет нечто подобное:</target>
        </trans-unit>
        <trans-unit id="b194d7af362d9259824b1fbfd5de6ca884c3d2da" translate="yes" xml:space="preserve">
          <source>There are a couple of ways to retrieve a character integer code point. One may use the &lt;code&gt;?&lt;/code&gt; construct:</source>
          <target state="translated">Есть несколько способов получить кодовую точку символа с целым числом. Можно использовать &lt;code&gt;?&lt;/code&gt; построить:</target>
        </trans-unit>
        <trans-unit id="fd47a0efe22eeb6657bd6cb7a37660028cc2160e" translate="yes" xml:space="preserve">
          <source>There are a couple of ways to retrieve the character code point. One may use the &lt;code&gt;?&lt;/code&gt; construct:</source>
          <target state="translated">Есть несколько способов получить кодовую точку символа. Можно использовать &lt;code&gt;?&lt;/code&gt; построить:</target>
        </trans-unit>
        <trans-unit id="d172ca4ba6fbab564abb0cac6cec14ca318e2156" translate="yes" xml:space="preserve">
          <source>There are a couple other modifiers that can be useful when doing pattern matches on binaries. The &lt;code&gt;binary-size(n)&lt;/code&gt; modifier will match &lt;code&gt;n&lt;/code&gt; bytes in a binary:</source>
          <target state="translated">Есть еще пара модификаторов, которые могут быть полезны при сопоставлении с образцом в двоичных файлах. &lt;code&gt;binary-size(n)&lt;/code&gt; модификатор будет соответствовать &lt;code&gt;n&lt;/code&gt; байт в двоичном:</target>
        </trans-unit>
        <trans-unit id="1fd8e7b8f98e5336f83be9a7d713b450297e94ab" translate="yes" xml:space="preserve">
          <source>There are a couple other options here. One option is to spawn the distributed node programmatically at the beginning of &lt;code&gt;test/test_helper.exs&lt;/code&gt;. Erlang/OTP does provide APIs for doing so, but they are non-trivial and therefore we won&amp;rsquo;t cover them here.</source>
          <target state="translated">Здесь есть еще пара вариантов. Один из вариантов - программно создать распределенный узел в начале &lt;code&gt;test/test_helper.exs&lt;/code&gt; . Erlang / OTP предоставляет для этого API-интерфейсы, но они нетривиальны, и поэтому мы не будем их здесь рассматривать.</target>
        </trans-unit>
        <trans-unit id="b5c718f04d68cfff9168f654a99aa0bd9577e3dd" translate="yes" xml:space="preserve">
          <source>There are a couple ways in which developers can customize the generated artifacts inside a release.</source>
          <target state="translated">Есть пара способов,с помощью которых разработчики могут настраивать сгенерированные артефакты внутри релиза.</target>
        </trans-unit>
        <trans-unit id="c36172e9cd5c05c77e84149217392745df0757dd" translate="yes" xml:space="preserve">
          <source>There are a few attributes available in Mix tasks to configure them in Mix:</source>
          <target state="translated">Есть несколько атрибутов,доступных в задачах Mix для их настройки в Mix:</target>
        </trans-unit>
        <trans-unit id="29207daf154a421b800aeacb77caf5c5eb506793" translate="yes" xml:space="preserve">
          <source>There are a few suitable alternatives to replace GenEvent. Each of them can be the most beneficial based on the use case.</source>
          <target state="translated">Есть несколько подходящих альтернатив для замены GenEvent.Каждая из них может быть наиболее выгодной в зависимости от варианта использования.</target>
        </trans-unit>
        <trans-unit id="10bcc082a2d994b16cb89b80b77c2f9140673c29" translate="yes" xml:space="preserve">
          <source>There are a few ways to quit the IEx shell:</source>
          <target state="translated">Есть несколько способов выйти из оболочки IEx:</target>
        </trans-unit>
        <trans-unit id="622f4d4a041d29a7624f6c3efe7c38d00a98501a" translate="yes" xml:space="preserve">
          <source>There are a number of customization options provided by IEx. Take a look at the docs for the &lt;a href=&quot;#configure/1&quot;&gt;&lt;code&gt;IEx.configure/1&lt;/code&gt;&lt;/a&gt; function by typing &lt;code&gt;h IEx.configure/1&lt;/code&gt;.</source>
          <target state="translated">IEx предлагает несколько вариантов настройки. Взгляните на документацию по функции &lt;a href=&quot;#configure/1&quot;&gt; &lt;code&gt;IEx.configure/1&lt;/code&gt; &lt;/a&gt; , набрав &lt;code&gt;h IEx.configure/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d8ce000a8dc139890c07c24e80b5de5ae99f4f0" translate="yes" xml:space="preserve">
          <source>There are a number of customization options provided by IEx. Take a look at the docs for the &lt;a href=&quot;iex#configure/1&quot;&gt;&lt;code&gt;IEx.configure/1&lt;/code&gt;&lt;/a&gt; function by typing &lt;code&gt;h IEx.configure/1&lt;/code&gt;.</source>
          <target state="translated">IEx предлагает несколько вариантов настройки. Взгляните на документацию по функции &lt;a href=&quot;iex#configure/1&quot;&gt; &lt;code&gt;IEx.configure/1&lt;/code&gt; &lt;/a&gt; , набрав &lt;code&gt;h IEx.configure/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09d8b4775b01e8f623175d798409cd369f28544b" translate="yes" xml:space="preserve">
          <source>There are a number of ways to debug code in Elixir. In this chapter we will cover some of the more common ways of doing so.</source>
          <target state="translated">Существует несколько способов отладки кода в Elixir.В этой главе мы рассмотрим некоторые из наиболее распространенных способов.</target>
        </trans-unit>
        <trans-unit id="aa57737d9360fbe5afeae180cdd5ea0fce51697c" translate="yes" xml:space="preserve">
          <source>There are additional macros for other levels.</source>
          <target state="translated">Есть дополнительные макросы для других уровней.</target>
        </trans-unit>
        <trans-unit id="a57a74b23748fb93cbfac3d76920a5b6c297f9f8" translate="yes" xml:space="preserve">
          <source>There are also other known problems like flooring or rounding numbers. See &lt;a href=&quot;#round/2&quot;&gt;&lt;code&gt;round/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#floor/2&quot;&gt;&lt;code&gt;floor/2&lt;/code&gt;&lt;/a&gt; for more details about them.</source>
          <target state="translated">Существуют и другие известные проблемы, такие как напольные покрытия или округление чисел. См. &lt;a href=&quot;#round/2&quot;&gt; &lt;code&gt;round/2&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#floor/2&quot;&gt; &lt;code&gt;floor/2&lt;/code&gt; &lt;/a&gt; для более подробной информации о них.</target>
        </trans-unit>
        <trans-unit id="5aa51c40876eefd1b0d73b2bb1e06b02c0333f56" translate="yes" xml:space="preserve">
          <source>There are also some non-paired functions, with no non-bang variant. The bang still signifies that it will raise an exception on failure. Example: &lt;a href=&quot;https://hexdocs.pm/elixir/Protocol.html#assert_protocol!/1&quot;&gt;&lt;code&gt;Protocol.assert_protocol!/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Есть также некоторые непарные функции, без варианта без взрыва. Взрыв все еще означает, что он вызовет исключение в случае ошибки. Пример: &lt;a href=&quot;https://hexdocs.pm/elixir/Protocol.html#assert_protocol!/1&quot;&gt; &lt;code&gt;Protocol.assert_protocol!/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e4e195bc2fdfc89b8bda777699ef0647f0c7ff7" translate="yes" xml:space="preserve">
          <source>There are also some non-paired functions, with no non-bang variant. The bang still signifies that it will raise an exception on failure. Example: &lt;a href=&quot;protocol#assert_protocol!/1&quot;&gt;&lt;code&gt;Protocol.assert_protocol!/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Есть также некоторые непарные функции, без варианта без взрыва. Взрыв все еще означает, что он вызовет исключение в случае ошибки. Пример: &lt;a href=&quot;protocol#assert_protocol!/1&quot;&gt; &lt;code&gt;Protocol.assert_protocol!/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ae5ae6e32d973b8c6e5e16938f53a6274e7ce3ca" translate="yes" xml:space="preserve">
          <source>There are currently no plans for a major v2 release.</source>
          <target state="translated">В настоящее время нет никаких планов по выпуску мажорного релиза v2.</target>
        </trans-unit>
        <trans-unit id="579246d0821bd1ab37dccebc3ea342f2ad2e0066" translate="yes" xml:space="preserve">
          <source>There are functions related to floating-point numbers on the &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; module too. Here is a list of them:</source>
          <target state="translated">В модуле &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; также есть функции, связанные с числами с плавающей запятой . Вот их список:</target>
        </trans-unit>
        <trans-unit id="70fbc19347af9335ddb73d64b97e33f72c2ab414" translate="yes" xml:space="preserve">
          <source>There are functions related to floating-point numbers on the &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; module too. Here is a list of them:</source>
          <target state="translated">В модуле &lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; также есть функции, связанные с числами с плавающей запятой . Вот их список:</target>
        </trans-unit>
        <trans-unit id="0447596598be1689749a73489423ead2b26c8b89" translate="yes" xml:space="preserve">
          <source>There are many functions in Elixir's standard library that return streams, some examples are:</source>
          <target state="translated">В стандартной библиотеке Elixir много функций,возвращающих потоки,некоторые примеры таковы:</target>
        </trans-unit>
        <trans-unit id="87db69fabab6d8aebc72fcaa67f0f5d2378adab2" translate="yes" xml:space="preserve">
          <source>There are many other helpers available, here are some examples:</source>
          <target state="translated">Есть много других помощников,вот несколько примеров:</target>
        </trans-unit>
        <trans-unit id="926409681cd9a91dbce4de89116e3485c968a501" translate="yes" xml:space="preserve">
          <source>There are many situations where using the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; module can be avoided in favor of binary functions or pattern matching. For example, imagine you have a string &lt;code&gt;prefix&lt;/code&gt; and you want to remove this prefix from another string named &lt;code&gt;full&lt;/code&gt;.</source>
          <target state="translated">Во многих ситуациях можно избежать использования модуля &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; в пользу двоичных функций или сопоставления с образцом. Например, представьте, что у вас есть &lt;code&gt;prefix&lt;/code&gt; строки, и вы хотите удалить этот префикс из другой строки с именем &lt;code&gt;full&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8989cd7033f2099b81956882184639864ede98b" translate="yes" xml:space="preserve">
          <source>There are no guarantees about the order of keys in the returned keyword.</source>
          <target state="translated">Гарантий относительно порядка следования ключей в возвращаемом ключевом слове нет.</target>
        </trans-unit>
        <trans-unit id="54c0f70e4a42a4d0d67a77196f05623f3bcdb80e" translate="yes" xml:space="preserve">
          <source>There are other protocols in Elixir but this covers the most common ones.</source>
          <target state="translated">В Эликсире есть и другие протоколы,но они охватывают наиболее распространенные.</target>
        </trans-unit>
        <trans-unit id="acb7aab73db89a3f93bdbd205b772057e9bacc95" translate="yes" xml:space="preserve">
          <source>There are other protocols in Elixir but this covers the most common ones. You can learn more about protocols and implementations in the &lt;a href=&quot;https://hexdocs.pm/elixir/Protocol.html&quot;&gt;&lt;code&gt;Protocol&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">В Elixir есть и другие протоколы, но он охватывает наиболее распространенные. Вы можете узнать больше о протоколах и их реализациях в модуле &lt;a href=&quot;https://hexdocs.pm/elixir/Protocol.html&quot;&gt; &lt;code&gt;Protocol&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3101471cbaca1a87da38ada818ec10b102a0a294" translate="yes" xml:space="preserve">
          <source>There are other tuple formats both &lt;code&gt;handle_call/3&lt;/code&gt; and &lt;code&gt;handle_cast/2&lt;/code&gt; callbacks may return. There are also other callbacks like &lt;code&gt;terminate/2&lt;/code&gt; and &lt;code&gt;code_change/3&lt;/code&gt; that we could implement. You are welcome to explore the &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;full GenServer documentation&lt;/a&gt; to learn more about those.</source>
          <target state="translated">Существуют и другие форматы кортежей, которые могут возвращать обратные вызовы &lt;code&gt;handle_call/3&lt;/code&gt; и &lt;code&gt;handle_cast/2&lt;/code&gt; . Есть также другие обратные вызовы, такие как &lt;code&gt;terminate/2&lt;/code&gt; и &lt;code&gt;code_change/3&lt;/code&gt; , которые мы могли бы реализовать. Приглашаем вас изучить &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;полную документацию GenServer,&lt;/a&gt; чтобы узнать о них больше.</target>
        </trans-unit>
        <trans-unit id="8c6bd7329e736075fbed60e12572ebdf4871cb55" translate="yes" xml:space="preserve">
          <source>There are probably many more to come too!</source>
          <target state="translated">Наверное,еще много чего впереди!</target>
        </trans-unit>
        <trans-unit id="eabb9c46f92e64d3211aa2057e1cb64ad70409b3" translate="yes" xml:space="preserve">
          <source>There are some modules that Elixir does not currently implement but it may be implement in the future. Those modules are reserved and defining them will result in a compilation error:</source>
          <target state="translated">Есть некоторые модули,которые Elixir в настоящее время не реализует,но они могут быть реализованы в будущем.Эти модули зарезервированы и их определение приведет к ошибке компиляции:</target>
        </trans-unit>
        <trans-unit id="eb77960230e6dd3139afa82409f2f1ffc3a5c2e5" translate="yes" xml:space="preserve">
          <source>There are some very well known problems with floating-point numbers and arithmetics due to the fact most decimal fractions cannot be represented by a floating-point binary and most operations are not exact, but operate on approximations. Those issues are not specific to Elixir, they are a property of floating point representation itself.</source>
          <target state="translated">Существуют некоторые хорошо известные проблемы с числами с плавающей точкой и арифметикой из-за того,что большинство десятичных дробей не может быть представлено двоичной системой с плавающей точкой и большинство операций не точны,а оперируют аппроксимациями.Эти проблемы не специфичны для Elixir,они являются свойством представления с плавающей точкой.</target>
        </trans-unit>
        <trans-unit id="e3154b8cdccf8ec261d752f5f3690d9739db0824" translate="yes" xml:space="preserve">
          <source>There are three better alternatives to &lt;code&gt;Node.spawn_link/2&lt;/code&gt; that we could use in our implementation:</source>
          <target state="translated">Есть три лучшие альтернативы &lt;code&gt;Node.spawn_link/2&lt;/code&gt; , которые мы могли бы использовать в нашей реализации:</target>
        </trans-unit>
        <trans-unit id="0a011fd8fc19265bbdfa804b9e46482377afe2df" translate="yes" xml:space="preserve">
          <source>There are three callbacks that are invoked when functions are defined, as well as before and immediately after the module bytecode is generated.</source>
          <target state="translated">Существует три обратных вызова,которые вызываются при определении функций,а также до и сразу после генерации байткода модуля.</target>
        </trans-unit>
        <trans-unit id="f0cff0a96056604973d2ce970f4952a288926525" translate="yes" xml:space="preserve">
          <source>There are three main use cases for not replying using the return value:</source>
          <target state="translated">Существует три основных варианта использования,в которых невозможно ответить с помощью возвращаемого значения:</target>
        </trans-unit>
        <trans-unit id="adbd396ed0556c8293f2a87ae93d14c10746024c" translate="yes" xml:space="preserve">
          <source>There are two APIs for working with ports. It can be either asynchronous via message passing, as in the example above, or by calling the functions on this module.</source>
          <target state="translated">Есть два API для работы с портами.Оно может быть как асинхронным с помощью передачи сообщений,как в примере выше,так и с помощью вызова функций на этом модуле.</target>
        </trans-unit>
        <trans-unit id="701240237d3a52a3d32e044be779f88e8b80021f" translate="yes" xml:space="preserve">
          <source>There are two common pitfalls when using the pipe operator.</source>
          <target state="translated">При использовании трубного оператора существует два общих подводных камня.</target>
        </trans-unit>
        <trans-unit id="406dbf0d435a200ca4cabd1441349a8cdaeded38" translate="yes" xml:space="preserve">
          <source>There are two concerns in this approach.</source>
          <target state="translated">В этом подходе есть две проблемы.</target>
        </trans-unit>
        <trans-unit id="5cac6c30b6750da044a369458652387600eab8a0" translate="yes" xml:space="preserve">
          <source>There are two data types without an accompanying module:</source>
          <target state="translated">Существует два типа данных без сопровождающего модуля:</target>
        </trans-unit>
        <trans-unit id="b081e88ef54c7ae6048998f8dea958b729c0be39" translate="yes" xml:space="preserve">
          <source>There are two important things to consider when using &lt;code&gt;async&lt;/code&gt;:</source>
          <target state="translated">При использовании &lt;code&gt;async&lt;/code&gt; следует учитывать две важные вещи :</target>
        </trans-unit>
        <trans-unit id="a03d1dfcb5538f40d22abd10d512a80d2c451bc1" translate="yes" xml:space="preserve">
          <source>There are two topics left before we move on to the next chapter.</source>
          <target state="translated">Осталось две темы,прежде чем мы перейдем к следующей главе.</target>
        </trans-unit>
        <trans-unit id="b6bcf7cf68be2f9527622d710936107d32e56ffb" translate="yes" xml:space="preserve">
          <source>There are two types of captured functions: &lt;strong&gt;external&lt;/strong&gt; and &lt;strong&gt;local&lt;/strong&gt;. External functions are functions residing in modules that are captured with &lt;a href=&quot;kernel.specialforms#&amp;amp;/1&quot;&gt;&lt;code&gt;&amp;amp;/1&lt;/code&gt;&lt;/a&gt;, such as &lt;code&gt;&amp;amp;String.length/1&lt;/code&gt;. Local functions are anonymous functions defined with &lt;a href=&quot;kernel.specialforms#fn/1&quot;&gt;&lt;code&gt;fn/1&lt;/code&gt;&lt;/a&gt; or with the capture operator &lt;a href=&quot;kernel.specialforms#&amp;amp;/1&quot;&gt;&lt;code&gt;&amp;amp;/1&lt;/code&gt;&lt;/a&gt; using &lt;code&gt;&amp;amp;1&lt;/code&gt;, &lt;code&gt;&amp;amp;2&lt;/code&gt;, and so on as replacements.</source>
          <target state="translated">Есть два типа фиксируемых функций: &lt;strong&gt;внешние&lt;/strong&gt; и &lt;strong&gt;локальные&lt;/strong&gt; . Внешние функции - это функции, находящиеся в модулях, которые фиксируются с помощью &lt;a href=&quot;kernel.specialforms#&amp;amp;/1&quot;&gt; &lt;code&gt;&amp;amp;/1&lt;/code&gt; &lt;/a&gt; , например &lt;code&gt;&amp;amp;String.length/1&lt;/code&gt; . Локальные функции - это анонимные функции, определенные с помощью &lt;a href=&quot;kernel.specialforms#fn/1&quot;&gt; &lt;code&gt;fn/1&lt;/code&gt; &lt;/a&gt; или оператора захвата &lt;a href=&quot;kernel.specialforms#&amp;amp;/1&quot;&gt; &lt;code&gt;&amp;amp;/1&lt;/code&gt; &lt;/a&gt; с использованием &lt;code&gt;&amp;amp;1&lt;/code&gt; , &lt;code&gt;&amp;amp;2&lt;/code&gt; и т. Д. В качестве замены.</target>
        </trans-unit>
        <trans-unit id="71487477c04c1e20b0a1c8eb6cde1dc3cb98c687" translate="yes" xml:space="preserve">
          <source>There are two types of requests you can send to a GenServer: calls and casts. Calls are synchronous and the server &lt;strong&gt;must&lt;/strong&gt; send a response back to such requests. While the server computes the response, the client is &lt;strong&gt;waiting&lt;/strong&gt;. Casts are asynchronous: the server won&amp;rsquo;t send a response back and therefore the client won&amp;rsquo;t wait for one. Both requests are messages sent to the server, and will be handled in sequence. In the above implementation, we pattern-match on the &lt;code&gt;:create&lt;/code&gt; messages, to be handled as cast, and on the &lt;code&gt;:lookup&lt;/code&gt; messages, to be handled as call.</source>
          <target state="translated">Есть два типа запросов, которые вы можете отправлять на GenServer: вызовы и трансляции. Вызовы синхронны, и сервер &lt;strong&gt;должен&lt;/strong&gt; отправить ответ на такие запросы. Пока сервер вычисляет ответ, клиент &lt;strong&gt;ждет&lt;/strong&gt; . Приведения являются асинхронными: сервер не отправляет ответ, и, следовательно, клиент не будет его ждать. Оба запроса представляют собой сообщения, отправленные на сервер, и будут обрабатываться последовательно. В приведенной выше реализации мы сопоставляем по образцу сообщения &lt;code&gt;:create&lt;/code&gt; , которые должны обрабатываться как приведенные, и сообщения &lt;code&gt;:lookup&lt;/code&gt; , которые обрабатываются как вызов.</target>
        </trans-unit>
        <trans-unit id="99e8c78e4095307ef4673f7069817242c3a373e9" translate="yes" xml:space="preserve">
          <source>There exists an additional way to simplify a chain of &lt;code&gt;or&lt;/code&gt; expressions in guards: Elixir supports writing &quot;multiple guards&quot; in the same clause. The following code:</source>
          <target state="translated">Существует дополнительный способ упростить цепочку выражений &lt;code&gt;or&lt;/code&gt; в guards: Elixir поддерживает запись &amp;laquo;нескольких охранников&amp;raquo; в одном и том же предложении. Следующий код:</target>
        </trans-unit>
        <trans-unit id="3c9ea73ebc91f0affdf337778b29e743e68daec7" translate="yes" xml:space="preserve">
          <source>There exists an additional way to simplify a chain of &lt;code&gt;or&lt;/code&gt;s in guards: Elixir supports writing &quot;multiple guards&quot; in the same clause. This:</source>
          <target state="translated">Существует дополнительный способ упростить цепочку &lt;code&gt;or&lt;/code&gt; в охранниках: Elixir поддерживает запись &amp;laquo;несколько охранников&amp;raquo; в одном и том же предложении. Это:</target>
        </trans-unit>
        <trans-unit id="36182dc39abbf8ba08b014521f410bb7023fa49b" translate="yes" xml:space="preserve">
          <source>There is a sixth key, &lt;code&gt;:modules&lt;/code&gt;, that is rarely changed. It is set automatically based on the value in &lt;code&gt;:start&lt;/code&gt;.</source>
          <target state="translated">Есть шестой ключ &lt;code&gt;:modules&lt;/code&gt; , который редко меняется. Устанавливается автоматически на основе значения в &lt;code&gt;:start&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3abc172d49d7232eeddc547e457e9a9da963ba98" translate="yes" xml:space="preserve">
          <source>There is a sixth key, &lt;code&gt;:modules&lt;/code&gt;, which is optional and is rarely changed. It is set automatically based on the &lt;code&gt;:start&lt;/code&gt; value.</source>
          <target state="translated">Есть шестой ключ &lt;code&gt;:modules&lt;/code&gt; , который не является обязательным и редко изменяется. Он устанавливается автоматически на основе значения &lt;code&gt;:start&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cacb5192e79338de26b6ff207a8ab99cd8a36150" translate="yes" xml:space="preserve">
          <source>There is also a deprecated strategy called &lt;code&gt;:simple_one_for_one&lt;/code&gt; which has been replaced by the &lt;a href=&quot;dynamicsupervisor&quot;&gt;&lt;code&gt;DynamicSupervisor&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;:simple_one_for_one&lt;/code&gt; supervisor was similar to &lt;code&gt;:one_for_one&lt;/code&gt; but suits better when dynamically attaching children. Many functions in this module behaved slightly differently when this strategy was used. See the &lt;a href=&quot;dynamicsupervisor&quot;&gt;&lt;code&gt;DynamicSupervisor&lt;/code&gt;&lt;/a&gt; module for more information and migration strategies.</source>
          <target state="translated">Также существует устаревшая стратегия под названием &lt;code&gt;:simple_one_for_one&lt;/code&gt; которая была заменена на &lt;a href=&quot;dynamicsupervisor&quot;&gt; &lt;code&gt;DynamicSupervisor&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;:simple_one_for_one&lt;/code&gt; супервизор был похож &lt;code&gt;:one_for_one&lt;/code&gt; , но лучше подходит , когда динамически прикрепление детей. Многие функции в этом модуле при использовании этой стратегии вели себя немного иначе. См. Модуль &lt;a href=&quot;dynamicsupervisor&quot;&gt; &lt;code&gt;DynamicSupervisor&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации и стратегий миграции.</target>
        </trans-unit>
        <trans-unit id="21605b424eea559d8c71a63a6ba5de9f7a6c7351" translate="yes" xml:space="preserve">
          <source>There is also a private function named &lt;code&gt;deps&lt;/code&gt;, which is invoked from the &lt;code&gt;project&lt;/code&gt; function, that defines our project dependencies. Defining &lt;code&gt;deps&lt;/code&gt; as a separate function is not required, but it helps keep the project configuration tidy.</source>
          <target state="translated">Существует также частная функция с именем &lt;code&gt;deps&lt;/code&gt; , которая вызывается из функции &lt;code&gt;project&lt;/code&gt; , которая определяет зависимости нашего проекта. Определение &lt;code&gt;deps&lt;/code&gt; как отдельной функции не требуется, но помогает поддерживать аккуратность конфигурации проекта.</target>
        </trans-unit>
        <trans-unit id="bb7b6e86fbf7b732fa4c4c68a1745621601d30ca" translate="yes" xml:space="preserve">
          <source>There is more to learn about &lt;code&gt;put_in/2&lt;/code&gt; and &lt;code&gt;update_in/2&lt;/code&gt;, including the &lt;code&gt;get_and_update_in/2&lt;/code&gt; that allows us to extract a value and update the data structure at once. There are also &lt;code&gt;put_in/3&lt;/code&gt;, &lt;code&gt;update_in/3&lt;/code&gt; and &lt;code&gt;get_and_update_in/3&lt;/code&gt; which allow dynamic access into the data structure. &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt;Check their respective documentation in the &lt;code&gt;Kernel&lt;/code&gt; module for more information&lt;/a&gt;.</source>
          <target state="translated">Можно узнать больше о &lt;code&gt;put_in/2&lt;/code&gt; и &lt;code&gt;update_in/2&lt;/code&gt; , включая &lt;code&gt;get_and_update_in/2&lt;/code&gt; , который позволяет нам сразу извлекать значение и обновлять структуру данных. Также есть &lt;code&gt;put_in/3&lt;/code&gt; , &lt;code&gt;update_in/3&lt;/code&gt; и &lt;code&gt;get_and_update_in/3&lt;/code&gt; , которые разрешают динамический доступ к структуре данных. &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt;Дополнительную информацию см&lt;/a&gt; . В соответствующей документации в модуле &lt;code&gt;Kernel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b4424ea8037c81012b4a89fa0c4119c6711e1c4" translate="yes" xml:space="preserve">
          <source>There is much more to Mix, and we will continue to explore it as we build our project. A &lt;a href=&quot;https://hexdocs.pm/mix/&quot;&gt;general overview is available on the Mix documentation&lt;/a&gt;. Read &lt;a href=&quot;https://github.com/elixir-lang/elixir/tree/master/lib/mix&quot;&gt;the Mix source code here&lt;/a&gt;.</source>
          <target state="translated">В Mix есть еще много чего, и мы продолжим изучать это по мере создания нашего проекта. &lt;a href=&quot;https://hexdocs.pm/mix/&quot;&gt;Общий обзор доступен на документации Mix&lt;/a&gt; . Прочтите &lt;a href=&quot;https://github.com/elixir-lang/elixir/tree/master/lib/mix&quot;&gt;исходный код Mix здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="237778ff123bf6054865096a64c61845e79b8f82" translate="yes" xml:space="preserve">
          <source>There is no &lt;code&gt;try/rescue&lt;/code&gt; here. In case you want to handle multiple outcomes of opening a file, you can use pattern matching within the &lt;code&gt;case&lt;/code&gt; construct:</source>
          <target state="translated">Здесь нет &lt;code&gt;try/rescue&lt;/code&gt; . Если вы хотите обработать несколько результатов открытия файла, вы можете использовать сопоставление с образцом в конструкции &lt;code&gt;case&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f0bc74ac50000eb990e97f6493bd512424cfda40" translate="yes" xml:space="preserve">
          <source>There is one important difference between the &lt;code&gt;setup&lt;/code&gt; block we wrote for &lt;code&gt;KV.Registry&lt;/code&gt; and the one we wrote for &lt;code&gt;KV.Bucket&lt;/code&gt;. Instead of starting the registry by hand by calling &lt;code&gt;KV.Registry.start_link/1&lt;/code&gt;, we instead called &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Callbacks.html#start_supervised/2&quot;&gt;the &lt;code&gt;start_supervised!/2&lt;/code&gt; function&lt;/a&gt;, passing the &lt;code&gt;KV.Registry&lt;/code&gt; module.</source>
          <target state="translated">Есть одно важное отличие между блоком &lt;code&gt;setup&lt;/code&gt; который мы написали для &lt;code&gt;KV.Registry&lt;/code&gt; , и блоком, который мы написали для &lt;code&gt;KV.Bucket&lt;/code&gt; . Вместо того чтобы начать реестра вручную, вызвав &lt;code&gt;KV.Registry.start_link/1&lt;/code&gt; , мы вместо того, чтобы назвать &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Callbacks.html#start_supervised/2&quot;&gt;в &lt;code&gt;start_supervised!/2&lt;/code&gt; функцию&lt;/a&gt; , передавая &lt;code&gt;KV.Registry&lt;/code&gt; модуль.</target>
        </trans-unit>
        <trans-unit id="02df8421114d1f579a4430e4f56430c17c3fdd06" translate="yes" xml:space="preserve">
          <source>There is one project-level option that affects how the escript is generated:</source>
          <target state="translated">Существует одна опция на уровне проекта,которая влияет на то,как генерируется эскрипт:</target>
        </trans-unit>
        <trans-unit id="690ca402cdab5a8902f2e2787a305dd6116dc3d0" translate="yes" xml:space="preserve">
          <source>There is quite a bit more ceremony in the GenServer code but, as we will see, it brings some benefits too.</source>
          <target state="translated">В коде GenServer довольно много церемоний,но,как мы увидим,это тоже приносит некоторые преимущества.</target>
        </trans-unit>
        <trans-unit id="26cfa9d95846d7cc788a552bbc32762f5176596e" translate="yes" xml:space="preserve">
          <source>There isn't a comprehensive list of all the options that can be returned by &lt;code&gt;project/0&lt;/code&gt; since many Mix tasks define their own options that they read from this configuration. For example, look at the &quot;Configuration&quot; section in the documentation for the &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Compile.html&quot;&gt;&lt;code&gt;Mix.Tasks.Compile&lt;/code&gt;&lt;/a&gt; task.</source>
          <target state="translated">Не существует полного списка всех параметров, которые могут быть возвращены &lt;code&gt;project/0&lt;/code&gt; , поскольку многие задачи Mix определяют свои собственные параметры, которые они считывают из этой конфигурации. Например, посмотрите раздел &amp;laquo;Конфигурация&amp;raquo; в документации по задаче &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Compile.html&quot;&gt; &lt;code&gt;Mix.Tasks.Compile&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="868c9d3de02a9c397e5804f3e5b1beeb25227226" translate="yes" xml:space="preserve">
          <source>There isn't a comprehensive list of all the options that can be returned by &lt;code&gt;project/0&lt;/code&gt; since many Mix tasks define their own options that they read from this configuration. For example, look at the &quot;Configuration&quot; section in the documentation for the &lt;a href=&quot;mix.tasks.compile&quot;&gt;&lt;code&gt;Mix.Tasks.Compile&lt;/code&gt;&lt;/a&gt; task.</source>
          <target state="translated">Не существует полного списка всех параметров, которые могут быть возвращены &lt;code&gt;project/0&lt;/code&gt; , поскольку многие задачи Mix определяют свои собственные параметры, которые они считывают из этой конфигурации. Например, посмотрите раздел &amp;laquo;Конфигурация&amp;raquo; в документации по задаче &lt;a href=&quot;mix.tasks.compile&quot;&gt; &lt;code&gt;Mix.Tasks.Compile&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="06cb32d59125a8444c6ab67709a472cedf77eb2d" translate="yes" xml:space="preserve">
          <source>There, &lt;code&gt;byte_size/1&lt;/code&gt; counts the underlying raw bytes, and &lt;code&gt;String.length/1&lt;/code&gt; counts characters.</source>
          <target state="translated">Здесь &lt;code&gt;byte_size/1&lt;/code&gt; подсчитывает базовые необработанные байты, а &lt;code&gt;String.length/1&lt;/code&gt; подсчитывает символы.</target>
        </trans-unit>
        <trans-unit id="4307601f224307e22cd02454aa0b8b4d5545438a" translate="yes" xml:space="preserve">
          <source>Therefore it is not guaranteed that &lt;a href=&quot;#c:terminate/2&quot;&gt;&lt;code&gt;terminate/2&lt;/code&gt;&lt;/a&gt; is called when a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; exits. For such reasons, we usually recommend important clean-up rules to happen in separated processes either by use of monitoring or by links themselves. There is no cleanup needed when the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; controls a &lt;code&gt;port&lt;/code&gt; (e.g. &lt;code&gt;:gen_tcp.socket&lt;/code&gt;) or &lt;a href=&quot;file#t:io_device/0&quot;&gt;&lt;code&gt;File.io_device/0&lt;/code&gt;&lt;/a&gt;, because these will be closed on receiving a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;'s exit signal and do not need to be closed manually in &lt;a href=&quot;#c:terminate/2&quot;&gt;&lt;code&gt;terminate/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Поэтому не гарантируется, что &lt;a href=&quot;#c:terminate/2&quot;&gt; &lt;code&gt;terminate/2&lt;/code&gt; &lt;/a&gt; будет вызван при &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; из GenServer . По этим причинам мы обычно рекомендуем выполнять важные правила очистки в отдельных процессах либо с помощью мониторинга, либо с помощью самих ссылок. Нет необходимости в очистке, когда &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; управляет &lt;code&gt;port&lt;/code&gt; (например &lt;code&gt;:gen_tcp.socket&lt;/code&gt; ) или &lt;a href=&quot;file#t:io_device/0&quot;&gt; &lt;code&gt;File.io_device/0&lt;/code&gt; &lt;/a&gt; , потому что они будут закрыты при получении сигнала выхода &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; и их не нужно закрывать вручную в &lt;a href=&quot;#c:terminate/2&quot;&gt; &lt;code&gt;terminate/2&lt;/code&gt; &lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="7f067dca9ef5e27637d0921507ba04af5a01c66e" translate="yes" xml:space="preserve">
          <source>Therefore it is not guaranteed that &lt;a href=&quot;#c:terminate/2&quot;&gt;&lt;code&gt;terminate/2&lt;/code&gt;&lt;/a&gt; is called when a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; exits. For such reasons, we usually recommend important clean-up rules to happen in separated processes either by use of monitoring or by links themselves. There is no cleanup needed when the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; controls a &lt;code&gt;port&lt;/code&gt; (for example, &lt;code&gt;:gen_tcp.socket&lt;/code&gt;) or &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#t:io_device/0&quot;&gt;&lt;code&gt;File.io_device/0&lt;/code&gt;&lt;/a&gt;, because these will be closed on receiving a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;'s exit signal and do not need to be closed manually in &lt;a href=&quot;#c:terminate/2&quot;&gt;&lt;code&gt;terminate/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Поэтому не гарантируется, что &lt;a href=&quot;#c:terminate/2&quot;&gt; &lt;code&gt;terminate/2&lt;/code&gt; &lt;/a&gt; будет вызван при &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; из GenServer . По этим причинам мы обычно рекомендуем выполнять важные правила очистки в отдельных процессах либо с помощью мониторинга, либо с помощью самих ссылок. Нет необходимости в очистке, когда &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; управляет &lt;code&gt;port&lt;/code&gt; (например &lt;code&gt;:gen_tcp.socket&lt;/code&gt; ) или &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#t:io_device/0&quot;&gt; &lt;code&gt;File.io_device/0&lt;/code&gt; &lt;/a&gt; , потому что они будут закрыты при получении сигнала выхода &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; ,&lt;/a&gt; и их не нужно закрывать вручную при &lt;a href=&quot;#c:terminate/2&quot;&gt; &lt;code&gt;terminate/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f4064ff8458c4f5d1958ee9109a3740ff3b2b0e6" translate="yes" xml:space="preserve">
          <source>Therefore, an Elixir developer prefers to &amp;ldquo;let it crash&amp;rdquo; or &amp;ldquo;fail fast&amp;rdquo;. And one of the most common ways we can recover from a failure is by restarting whatever part of the system crashed.</source>
          <target state="translated">Поэтому разработчик Elixir предпочитает &amp;laquo;дать сбой&amp;raquo; или &amp;laquo;быстро дать сбой&amp;raquo;. И один из наиболее распространенных способов восстановления после сбоя - перезапуск той части системы, в которой произошел сбой.</target>
        </trans-unit>
        <trans-unit id="67da13e4777f268949639e3941225f274f61e540" translate="yes" xml:space="preserve">
          <source>Therefore, if you don&amp;rsquo;t want to handle the error outcomes, prefer using &lt;code&gt;File.read!/1&lt;/code&gt;.</source>
          <target state="translated">Поэтому, если вы не хотите обрабатывать результаты ошибок, &lt;code&gt;File.read!/1&lt;/code&gt; использовать File.read! / 1 .</target>
        </trans-unit>
        <trans-unit id="88ef416d8b169a4f47a3dda56e98187b8d57d742" translate="yes" xml:space="preserve">
          <source>Therefore, if you plan to compare multiple strings, multiple times in a row, you may normalize them upfront and compare them directly to avoid multiple normalization passes.</source>
          <target state="translated">Поэтому,если вы планируете сравнивать несколько строк,несколько раз подряд,вы можете нормализовать их заранее и сравнивать напрямую,чтобы избежать многократных проходов нормализации.</target>
        </trans-unit>
        <trans-unit id="5cb2ec194ba3355670294e9c457ea3adb567e875" translate="yes" xml:space="preserve">
          <source>Therefore, in order to minimize the distributed tests, let&amp;rsquo;s pick a routing table that does not require distribution. Then, for the distributed tests, we will programatically change the routing table. Back in &lt;code&gt;config/config.exs&lt;/code&gt;, add this line:</source>
          <target state="translated">Поэтому, чтобы минимизировать распределенные тесты, выберем таблицу маршрутизации, не требующую распределения. Затем для распределенных тестов мы программно изменим таблицу маршрутизации. Вернувшись в &lt;code&gt;config/config.exs&lt;/code&gt; , добавьте эту строку:</target>
        </trans-unit>
        <trans-unit id="5587ebee880284a6f70ef3328784590a49e488e5" translate="yes" xml:space="preserve">
          <source>Therefore, this function is used to check if a module is loaded before using it and allows one to react accordingly. For example, the &lt;a href=&quot;https://hexdocs.pm/elixir/URI.html&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; module uses this function to check if a specific parser exists for a given URI scheme.</source>
          <target state="translated">Следовательно, эта функция используется для проверки того, загружен ли модуль перед его использованием, и позволяет соответствующим образом реагировать. Например, модуль &lt;a href=&quot;https://hexdocs.pm/elixir/URI.html&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; использует эту функцию, чтобы проверить, существует ли определенный анализатор для данной схемы URI.</target>
        </trans-unit>
        <trans-unit id="af72f8d5888562059c52cc4bad66a2a3aa2e8b0b" translate="yes" xml:space="preserve">
          <source>Therefore, this function is used to check if a module is loaded before using it and allows one to react accordingly. For example, the &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; module uses this function to check if a specific parser exists for a given URI scheme.</source>
          <target state="translated">Следовательно, эта функция используется для проверки того, загружен ли модуль перед его использованием, и позволяет реагировать соответствующим образом. Например, модуль &lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; использует эту функцию, чтобы проверить, существует ли определенный синтаксический анализатор для данной схемы URI.</target>
        </trans-unit>
        <trans-unit id="de86214129da9f1e44a45df425ff060e9ce48710" translate="yes" xml:space="preserve">
          <source>Therefore, using a combination of &lt;code&gt;--sink&lt;/code&gt; with &lt;code&gt;--label&lt;/code&gt; is useful to find all files that will change once the sink changes, alongside the transitive dependencies that will cause said recompilations.</source>
          <target state="translated">Таким образом, использование комбинации &lt;code&gt;--sink&lt;/code&gt; с &lt;code&gt;--label&lt;/code&gt; полезно для поиска всех файлов, которые изменятся после изменения приемника, наряду с транзитивными зависимостями, которые вызовут указанные перекомпиляции.</target>
        </trans-unit>
        <trans-unit id="f4b754bf2a64e107bf9d3b99490d4c968dbf741e" translate="yes" xml:space="preserve">
          <source>Therefore, when pattern matching on strings, it is important to use the &lt;code&gt;utf8&lt;/code&gt; modifier:</source>
          <target state="translated">Поэтому при сопоставлении с образцом в строках важно использовать модификатор &lt;code&gt;utf8&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d10b167c94497dff77b11dad17668b97ba38a48a" translate="yes" xml:space="preserve">
          <source>These are a few options that are not used by just one Mix task (and will thus be documented here):</source>
          <target state="translated">Это несколько опций,которые не используются только одной задачей Mix (и,таким образом,будут задокументированы здесь):</target>
        </trans-unit>
        <trans-unit id="41d198d3d66dfd7fa75bf909de01737698c3fc91" translate="yes" xml:space="preserve">
          <source>These are the reserved words in the Elixir language. They are detailed throughout this guide but summed up here for convenience:</source>
          <target state="translated">Это зарезервированные слова на языке эликсира.Они подробно описаны в этом руководстве,но для удобства читателя их можно подытожить здесь:</target>
        </trans-unit>
        <trans-unit id="c6ad74fbcf6aea4c5436fcd89c622233b6bfb3f0" translate="yes" xml:space="preserve">
          <source>These building blocks are defined in this module. Some of these special forms are lexical (such as &lt;a href=&quot;#alias/2&quot;&gt;&lt;code&gt;alias/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#case/2&quot;&gt;&lt;code&gt;case/2&lt;/code&gt;&lt;/a&gt;). The macros &lt;a href=&quot;#%7B%7D/1&quot;&gt;&lt;code&gt;{}/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#%3C%3C%3E%3E/1&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;/1&lt;/code&gt;&lt;/a&gt; are also special forms used to define tuple and binary data structures respectively.</source>
          <target state="translated">Эти строительные блоки определены в этом модуле. Некоторые из этих специальных форм являются лексическими (например, &lt;a href=&quot;#alias/2&quot;&gt; &lt;code&gt;alias/2&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#case/2&quot;&gt; &lt;code&gt;case/2&lt;/code&gt; &lt;/a&gt; ). Макросы &lt;a href=&quot;#%7B%7D/1&quot;&gt; &lt;code&gt;{}/1&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#%3C%3C%3E%3E/1&quot;&gt; &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;/1&lt;/code&gt; &lt;/a&gt; также представляют собой специальные формы, используемые для определения кортежей и двоичных структур данных соответственно.</target>
        </trans-unit>
        <trans-unit id="26cd6bcff6d81ebade774a0f501e5b9a49a3141c" translate="yes" xml:space="preserve">
          <source>These can be used anywhere you want to refer to a characters codepoint.</source>
          <target state="translated">Они могут быть использованы везде,где вы хотите обратиться к кодовой точке символов.</target>
        </trans-unit>
        <trans-unit id="c01193dcf91e904667491de473d13c72e0b284bc" translate="yes" xml:space="preserve">
          <source>These characteristics are what prompted keyword lists to be the default mechanism for passing options to functions in Elixir. In chapter 5, when we discussed the &lt;code&gt;if/2&lt;/code&gt; macro, we mentioned that the following syntax is supported:</source>
          <target state="translated">Эти характеристики побудили списки ключевых слов стать механизмом по умолчанию для передачи параметров функциям в Elixir. В главе 5, когда мы обсуждали макрос &lt;code&gt;if/2&lt;/code&gt; , мы упоминали, что поддерживается следующий синтаксис:</target>
        </trans-unit>
        <trans-unit id="a33f02a3cf972439fc9644228266bf6ac583f283" translate="yes" xml:space="preserve">
          <source>These characteristics are what prompted keyword lists to be the default mechanism for passing options to functions in Elixir. In chapter 5, when we discussed the &lt;code&gt;if/2&lt;/code&gt; macro, we mentioned the following syntax is supported:</source>
          <target state="translated">Эти характеристики побудили списки ключевых слов стать механизмом по умолчанию для передачи параметров функциям в Elixir. В главе 5, когда мы обсуждали макрос &lt;code&gt;if/2&lt;/code&gt; , мы упоминали, что поддерживается следующий синтаксис:</target>
        </trans-unit>
        <trans-unit id="8fea9325510bd25065ba64a7fe2de349a02f06d3" translate="yes" xml:space="preserve">
          <source>These configurations can be set in the &lt;code&gt;def project&lt;/code&gt; section of your &lt;code&gt;mix.exs&lt;/code&gt;:</source>
          <target state="translated">Эти конфигурации могут быть установлены в разделе &lt;code&gt;def project&lt;/code&gt; вашего &lt;code&gt;mix.exs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="76567fa6ed57b5e28a73659cbd673c9a7f350853" translate="yes" xml:space="preserve">
          <source>These functions and macros follow the Erlang convention of an &lt;code&gt;is_&lt;/code&gt; prefix, instead of a trailing question mark, precisely to indicate that they are allowed in guard clauses.</source>
          <target state="translated">Эти функции и макросы следуют соглашению Erlang о префиксе &lt;code&gt;is_&lt;/code&gt; , а не в конце вопросительного знака, чтобы указать, что они разрешены в защитных предложениях.</target>
        </trans-unit>
        <trans-unit id="add5b2dbfbafe6da3d0a22b6f870b2eed75d677f" translate="yes" xml:space="preserve">
          <source>These options are expected to be literals (including the binary values) at compile time.</source>
          <target state="translated">Предполагается,что при компиляции эти опции будут буквальными (включая двоичные значения).</target>
        </trans-unit>
        <trans-unit id="2ec1191cd2717326d5b2f8e25c4fb58ff593d194" translate="yes" xml:space="preserve">
          <source>These options are global since they are stored by Elixir's Code Server.</source>
          <target state="translated">Эти опции являются глобальными,так как они хранятся на сервере кодов Elixir.</target>
        </trans-unit>
        <trans-unit id="626e3d5b2ff83140a65abc0074ea71a000293b27" translate="yes" xml:space="preserve">
          <source>These options are global since they are stored by Elixir's code server.</source>
          <target state="translated">Эти опции являются глобальными,так как они хранятся на сервере кодов Elixir.</target>
        </trans-unit>
        <trans-unit id="8aca497f05ede32d92fad7a0a08861307fed5d02" translate="yes" xml:space="preserve">
          <source>These paths are based on the &lt;code&gt;:apps_path&lt;/code&gt; and &lt;code&gt;:apps&lt;/code&gt; configurations.</source>
          <target state="translated">Эти пути основаны на конфигурациях &lt;code&gt;:apps_path&lt;/code&gt; и &lt;code&gt;:apps&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90f90a0bd1abd66881352917a593420e21df4638" translate="yes" xml:space="preserve">
          <source>They also support &lt;code&gt;else&lt;/code&gt; blocks:</source>
          <target state="translated">Они также поддерживают блоки &lt;code&gt;else&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c272e830fb2eeca6af73d25f9dc7ec1a9ffc0efc" translate="yes" xml:space="preserve">
          <source>They are discussed individually in the sections below.</source>
          <target state="translated">Они обсуждаются отдельно в разделах ниже.</target>
        </trans-unit>
        <trans-unit id="d328fd2e41813b144fcdf9de5a1a99985a2c6ade" translate="yes" xml:space="preserve">
          <source>They are often useful to enumerate over distinct values, such as:</source>
          <target state="translated">Их часто полезно перечислять по отдельным значениям,например:</target>
        </trans-unit>
        <trans-unit id="d984bcb0628847679167196f524ecb516b6c251c" translate="yes" xml:space="preserve">
          <source>They serve to annotate the module, often with information to be used by the user or the</source>
          <target state="translated">Они служат для аннотирования модуля,часто с информацией,которая будет использоваться пользователем или</target>
        </trans-unit>
        <trans-unit id="97ca407460ebb22e0ec5bdeff0b3e028c669bf37" translate="yes" xml:space="preserve">
          <source>They work as a temporary module storage to be used during compilation.</source>
          <target state="translated">Они работают как временное хранилище модуля для использования во время компиляции.</target>
        </trans-unit>
        <trans-unit id="ee6dd5d64b66e821ff94c4d17d21b9f93db749f2" translate="yes" xml:space="preserve">
          <source>They work as constants.</source>
          <target state="translated">Они работают как постоянные.</target>
        </trans-unit>
        <trans-unit id="e53339d9d0bc53c58fe8778d10ade8bb49736f46" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;https://elixir-lang.org/crash-course.html&quot;&gt;Erlang Syntax: A Crash Course&lt;/a&gt; provides a concise intro to Erlang&amp;rsquo;s syntax. Each code snippet is accompanied by equivalent code in Elixir. This is an opportunity for you to not only get some exposure to Erlang&amp;rsquo;s syntax but also review some of the things you have learned in this guide.</source>
          <target state="translated">Этот &lt;a href=&quot;https://elixir-lang.org/crash-course.html&quot;&gt;синтаксис Erlang: ускоренный курс&lt;/a&gt; предоставляет краткое введение в синтаксис Erlang. Каждый фрагмент кода сопровождается эквивалентным кодом в Elixir. Это возможность не только познакомиться с синтаксисом Erlang, но и ознакомиться с некоторыми вещами, которые вы узнали в этом руководстве.</target>
        </trans-unit>
        <trans-unit id="c3d65d16574f84519ba2e69aa0d37e68059885e5" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;fun&lt;/code&gt; argument receives the value of &lt;code&gt;key&lt;/code&gt; (or &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; is not present) and must return a two-element tuple: the &quot;get&quot; value (the retrieved value, which can be operated on before being returned) and the new value to be stored under &lt;code&gt;key&lt;/code&gt;. The &lt;code&gt;fun&lt;/code&gt; may also return &lt;code&gt;:pop&lt;/code&gt;, implying the current value shall be removed from the keyword list and returned.</source>
          <target state="translated">Этот &lt;code&gt;fun&lt;/code&gt; аргумент получает значение &lt;code&gt;key&lt;/code&gt; (или &lt;code&gt;nil&lt;/code&gt; , если &lt;code&gt;key&lt;/code&gt; отсутствует) и должен возвращать двухэлементный кортеж: значение &amp;laquo;get&amp;raquo; (полученное значение, с которым можно работать до его возврата) и новое значение для храниться под &lt;code&gt;key&lt;/code&gt; . &lt;code&gt;fun&lt;/code&gt; может также возвращать &lt;code&gt;:pop&lt;/code&gt; , подразумевая , текущее значение должно быть удалено из списка ключевых слов и вернулся.</target>
        </trans-unit>
        <trans-unit id="7730fb9921d8f6aa0bc9c8111d351054831c02de" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;fun&lt;/code&gt; argument receives the value of &lt;code&gt;key&lt;/code&gt; (or &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; is not present) and must return a two-element tuple: the current value (the retrieved value, which can be operated on before being returned) and the new value to be stored under &lt;code&gt;key&lt;/code&gt;. The &lt;code&gt;fun&lt;/code&gt; may also return &lt;code&gt;:pop&lt;/code&gt;, implying the current value shall be removed from the keyword list and returned.</source>
          <target state="translated">Этот &lt;code&gt;fun&lt;/code&gt; аргумент получает значение &lt;code&gt;key&lt;/code&gt; (или &lt;code&gt;nil&lt;/code&gt; , если &lt;code&gt;key&lt;/code&gt; отсутствует) и должен возвращать двухэлементный кортеж: текущее значение (полученное значение, с которым можно работать перед возвратом) и новое значение для сохранения под &lt;code&gt;key&lt;/code&gt; . &lt;code&gt;fun&lt;/code&gt; может также возвращать &lt;code&gt;:pop&lt;/code&gt; , подразумевая , текущее значение должно быть удалено из списка ключевых слов и вернулся.</target>
        </trans-unit>
        <trans-unit id="21531bdd28fd8a4fab193e8f907a1304804427e8" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;fun&lt;/code&gt; argument receives the value of &lt;code&gt;key&lt;/code&gt; and must return a two-element tuple: the &quot;get&quot; value (the retrieved value, which can be operated on before being returned) and the new value to be stored under &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">Этот &lt;code&gt;fun&lt;/code&gt; аргумент получает значение &lt;code&gt;key&lt;/code&gt; и должен возвращать двухэлементный кортеж: значение &amp;laquo;get&amp;raquo; (полученное значение, с которым можно работать до возврата) и новое значение, которое будет сохранено под &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53bda49c2b15fa76b2cbd3fb19123910db00ced4" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;fun&lt;/code&gt; argument receives the value of &lt;code&gt;key&lt;/code&gt; and must return a two-element tuple: the current value (the retrieved value, which can be operated on before being returned) and the new value to be stored under &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">Этот &lt;code&gt;fun&lt;/code&gt; аргумент получает значение &lt;code&gt;key&lt;/code&gt; и должен возвращать двухэлементный кортеж: текущее значение (полученное значение, с которым можно работать перед возвратом) и новое значение, которое будет сохранено под &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="106724662d1a48acf5e96ebf33c77969eed35e72" translate="yes" xml:space="preserve">
          <source>This advice does not only apply to libraries but to any Elixir code. Every time you receive multiple options or work with external data, you should validate the data at the boundary and convert it to structured data. For example, if you provide a &lt;a href=&quot;genserver&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; that can be started with multiple options, you want to validate those options when the server starts and rely only on structured data throughout the process life cycle. Similarly, if a database or a socket gives you a map of strings, after you receive the data, you should validate it and potentially convert it to a struct or a map of atoms.</source>
          <target state="translated">Этот совет применим не только к библиотекам, но и к любому коду Elixir. Каждый раз, когда вы получаете несколько опций или работаете с внешними данными, вам следует проверить данные на границе и преобразовать их в структурированные данные. Например, если вы предоставляете &lt;a href=&quot;genserver&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; ,&lt;/a&gt; который можно запускать с несколькими параметрами, вы хотите проверить эти параметры при запуске сервера и полагаться только на структурированные данные на протяжении всего жизненного цикла процесса. Точно так же, если база данных или сокет предоставляет вам карту строк, после того, как вы получили данные, вы должны проверить их и потенциально преобразовать в структуру или карту атомов.</target>
        </trans-unit>
        <trans-unit id="1ca51ca3cb9bf6182cc66703ef3fbbdd192c7934" translate="yes" xml:space="preserve">
          <source>This advice does not only apply to libraries but to any Elixir code. Every time you receive multiple options or work with external data, you should validate the data at the boundary and convert it to structured data. For example, if you provide a &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; that can be started with multiple options, you want to validate those options when the server starts and rely only on structured data throughout the process life cycle. Similarly, if a database or a socket gives you a map of strings, after you receive the data, you should validate it and potentially convert it to a struct or a map of atoms.</source>
          <target state="translated">Этот совет применим не только к библиотекам, но и к любому коду Elixir. Каждый раз, когда вы получаете несколько опций или работаете с внешними данными, вам следует проверить данные на границе и преобразовать их в структурированные данные. Например, если вы предоставляете &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; ,&lt;/a&gt; который можно запускать с несколькими параметрами, вы хотите проверить эти параметры при запуске сервера и полагаться только на структурированные данные на протяжении всего жизненного цикла процесса. Точно так же, если база данных или сокет предоставляет вам карту строк, после того, как вы получили данные, вы должны проверить их и потенциально преобразовать в структуру или карту атомов.</target>
        </trans-unit>
        <trans-unit id="38b51c7863a18d9dea71afde173bd863c4339d77" translate="yes" xml:space="preserve">
          <source>This also works with nested structs and the &lt;code&gt;struct.path.to.value&lt;/code&gt; way to specify paths:</source>
          <target state="translated">Это также работает с вложенными структурами и способом &lt;code&gt;struct.path.to.value&lt;/code&gt; для указания путей:</target>
        </trans-unit>
        <trans-unit id="35f4524e9d598f3528101bd75ddd379bcc553a48" translate="yes" xml:space="preserve">
          <source>This approach has one big limitation: if you change the value of the application environment after the code is compiled, the value used at runtime is not going to change! For example, if your &lt;code&gt;config/runtime.exs&lt;/code&gt; has:</source>
          <target state="translated">У этого подхода есть одно большое ограничение: если вы измените значение среды приложения после компиляции кода, значение, используемое во время выполнения, не изменится! Например, если ваш &lt;code&gt;config/runtime.exs&lt;/code&gt; имеет:</target>
        </trans-unit>
        <trans-unit id="0cc4748ce3f5882d3817d17380c6efaea1cbe2e2" translate="yes" xml:space="preserve">
          <source>This behaviour function checks out dependencies.</source>
          <target state="translated">Эта поведенческая функция проверяет зависимости.</target>
        </trans-unit>
        <trans-unit id="8063234c54496c74deb524505ab53e03e89b8cac" translate="yes" xml:space="preserve">
          <source>This behaviour function checks the status of the lock. In particular, it checks if the revision stored in the lock is the same as the repository it is currently in.</source>
          <target state="translated">Эта функция поведения проверяет состояние блокировки.В частности,она проверяет,является ли ревизия,хранящаяся в замке,той же самой,что и хранилище,в котором она находится в данный момент.</target>
        </trans-unit>
        <trans-unit id="d1a9f92cb4e97a9d75cd6dadc068bea5309a11a2" translate="yes" xml:space="preserve">
          <source>This behaviour function receives a keyword list of &lt;code&gt;opts&lt;/code&gt; and should return an updated list in case the SCM consumes the available options. For example, when a developer specifies a dependency</source>
          <target state="translated">Эта функция поведения получает список ключевых слов &lt;code&gt;opts&lt;/code&gt; и должна возвращать обновленный список в случае, если SCM использует доступные опции. Например, когда разработчик указывает зависимость</target>
        </trans-unit>
        <trans-unit id="5b3cf369974ea57c7d2b5f2b67a09ff6bb9cb520" translate="yes" xml:space="preserve">
          <source>This behaviour function receives a keyword list of &lt;code&gt;opts&lt;/code&gt; and should return an updated list in case the SCM consumes the available options. For example, when a developer specifies a dependency:</source>
          <target state="translated">Эта функция поведения получает список ключевых слов &lt;code&gt;opts&lt;/code&gt; и должна возвращать обновленный список в случае, если SCM использует доступные опции. Например, когда разработчик указывает зависимость:</target>
        </trans-unit>
        <trans-unit id="3e3e7ef108fbc0b5b099888c738ff953bc262988" translate="yes" xml:space="preserve">
          <source>This behaviour function returns a boolean if the dependency is available.</source>
          <target state="translated">Эта поведенческая функция возвращает логический ключ,если зависимость доступна.</target>
        </trans-unit>
        <trans-unit id="0b4620b1a57c643e178ccb4b09127ceadcd467a0" translate="yes" xml:space="preserve">
          <source>This behaviour function updates dependencies. It may be called by &lt;code&gt;deps.get&lt;/code&gt; or &lt;code&gt;deps.update&lt;/code&gt;.</source>
          <target state="translated">Эта функция поведения обновляет зависимости. Он может быть вызван &lt;code&gt;deps.get&lt;/code&gt; или &lt;code&gt;deps.update&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c86b0384c6fa0ab23e023705951a2e26ece47398" translate="yes" xml:space="preserve">
          <source>This behaviour is deprecated. Use Erlang/OTP's :gen_event module instead.</source>
          <target state="translated">Такое поведение недопустимо.Вместо этого используйте модуль Erlang/OTP :gen_event.</target>
        </trans-unit>
        <trans-unit id="72f035035b3d70bcbf1171738b7f8c7d508d05aa" translate="yes" xml:space="preserve">
          <source>This behaviour is relied on in many different places. For example, &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html&quot;&gt;&lt;code&gt;ExUnit&lt;/code&gt;&lt;/a&gt; uses &lt;code&gt;exit(:shutdown)&lt;/code&gt; when exiting the test process to signal linked processes, supervision trees and so on to politely shut down too.</source>
          <target state="translated">На такое поведение полагаются во многих разных местах. Например, &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html&quot;&gt; &lt;code&gt;ExUnit&lt;/code&gt; &lt;/a&gt; использует &lt;code&gt;exit(:shutdown)&lt;/code&gt; при выходе из тестового процесса, чтобы сигнализировать о связанных процессах, деревьях контроля и т. Д., Чтобы тоже вежливо завершить работу.</target>
        </trans-unit>
        <trans-unit id="c8eb2df7e5f6ba76a64892942e28c56d4c4a7f04" translate="yes" xml:space="preserve">
          <source>This break can be rendered as a linebreak or as the given &lt;code&gt;string&lt;/code&gt;, depending on the &lt;code&gt;mode&lt;/code&gt; of the chosen layout.</source>
          <target state="translated">Этот разрыв может отображаться как разрыв строки или как заданная &lt;code&gt;string&lt;/code&gt; , в зависимости от &lt;code&gt;mode&lt;/code&gt; выбранного макета.</target>
        </trans-unit>
        <trans-unit id="ab7ad5339c141f0de9e312dc2f25b5df3e7d8cb4" translate="yes" xml:space="preserve">
          <source>This breakpoint will never be reached, because a macro never receives a PID. Even if you call the macro as &lt;code&gt;MyModule.some_macro(self())&lt;/code&gt;, the macro will receive the AST representing the &lt;code&gt;self()&lt;/code&gt; call, and not the PID itself.</source>
          <target state="translated">Эта точка останова никогда не будет достигнута, потому что макрос никогда не получает PID. Даже если вы вызываете макрос как &lt;code&gt;MyModule.some_macro(self())&lt;/code&gt; , макрос получит AST, представляющий вызов &lt;code&gt;self()&lt;/code&gt; , а не сам PID.</target>
        </trans-unit>
        <trans-unit id="8761ea35931ac08c3f3679fbf6f993fa3ef09746" translate="yes" xml:space="preserve">
          <source>This calendar implements the proleptic Gregorian calendar and is therefore compatible with the calendar used in most countries today. The proleptic means the Gregorian rules for leap years are applied for all time, consequently the dates give different results before the year 1583 from when the Gregorian calendar was adopted.</source>
          <target state="translated">Этот календарь реализует пролептический григорианский календарь и поэтому совместим с календарем,используемым в большинстве стран мира сегодня.Пролептический означает,что григорианские правила для високосных лет применяются на все времена,поэтому даты дают различные результаты до 1583 года,начиная с того момента,когда был принят григорианский календарь.</target>
        </trans-unit>
        <trans-unit id="7991ee0aa425c7d3f3afff7118c6225869810d3f" translate="yes" xml:space="preserve">
          <source>This call will setup a breakpoint that stops once. To set a breakpoint that will stop 10 times:</source>
          <target state="translated">Этот вызов установит точку останова,которая останавливается один раз.Для установки точки останова,которая будет останавливаться 10 раз:</target>
        </trans-unit>
        <trans-unit id="b325289ad4384d9c3ff3e14f0e004ec0fadc1690" translate="yes" xml:space="preserve">
          <source>This callback can be useful to control the &lt;em&gt;appearance&lt;/em&gt; of the status of the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;. For example, it can be used to return a compact representation of the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;'s state to avoid having large state terms printed.</source>
          <target state="translated">Этот обратный вызов может быть полезен для управления &lt;em&gt;внешним видом&lt;/em&gt; статуса &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; . Например, его можно использовать для возврата компактного представления состояния &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; , чтобы избежать печати больших терминов состояния.</target>
        </trans-unit>
        <trans-unit id="1327f9cbc59e218b07255d5dfd814547d5d8807b" translate="yes" xml:space="preserve">
          <source>This callback is only supported on Erlang/OTP 21+.</source>
          <target state="translated">Этот обратный вызов поддерживается только на Erlang/OTP 21+.</target>
        </trans-unit>
        <trans-unit id="ee5f243ca65efd502d5c4c6af5c8cd9dfd5d476c" translate="yes" xml:space="preserve">
          <source>This callback is optional.</source>
          <target state="translated">Этот обратный вызов необязателен.</target>
        </trans-unit>
        <trans-unit id="f2424dc84d136b7783611865075888a14d9c990b" translate="yes" xml:space="preserve">
          <source>This callback is optional. If one is not implemented, the received message will be logged.</source>
          <target state="translated">Этот обратный вызов необязателен.Если он не реализован,полученное сообщение будет зарегистрировано.</target>
        </trans-unit>
        <trans-unit id="985bade6a0d966231f4d34d8934365d5ebe8193e" translate="yes" xml:space="preserve">
          <source>This callback is optional. If one is not implemented, the server will fail if a call is performed against it.</source>
          <target state="translated">Этот обратный вызов необязателен.Если он не реализован,то при выполнении вызова против него сервер откажется.</target>
        </trans-unit>
        <trans-unit id="f84f9f7a0fb58e5af47a01d8f797b8c62ea95537" translate="yes" xml:space="preserve">
          <source>This callback is optional. If one is not implemented, the server will fail if a cast is performed against it.</source>
          <target state="translated">Этот обратный вызов необязателен.Если он не будет реализован,сервер откажется,если розыгрыш будет произведен против него.</target>
        </trans-unit>
        <trans-unit id="5a8f931c4cb12fef7b434a37af006aef2ba0d46a" translate="yes" xml:space="preserve">
          <source>This callback is optional. If one is not implemented, the server will fail if a continue instruction is used.</source>
          <target state="translated">Этот обратный вызов необязателен.Если он не будет реализован,сервер откажется,если будет использована команда продолжения.</target>
        </trans-unit>
        <trans-unit id="ddfd8ff82f8cdfbfeb3d06aa0134b83f46048ef4" translate="yes" xml:space="preserve">
          <source>This can be added to any custom engine by invoking &lt;a href=&quot;#handle_assign/1&quot;&gt;&lt;code&gt;handle_assign/1&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.html#prewalk/2&quot;&gt;&lt;code&gt;Macro.prewalk/2&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Его можно добавить в любой пользовательский движок, вызвав &lt;a href=&quot;#handle_assign/1&quot;&gt; &lt;code&gt;handle_assign/1&lt;/code&gt; &lt;/a&gt; с помощью &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.html#prewalk/2&quot;&gt; &lt;code&gt;Macro.prewalk/2&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="9a48050cb80bb5c2bc634b01accf3b4f5bd8c332" translate="yes" xml:space="preserve">
          <source>This chapter is a quick introduction to input/output mechanisms and file-system-related tasks, as well as to related modules like &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/File.html&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Path.html&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта глава представляет собой краткое введение в механизмы ввода / вывода и задачи, связанные с файловой системой, а также в связанные модули, такие как &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/File.html&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://hexdocs.pm/elixir/Path.html&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b602041d24e676175f7fd300fe9987bf2555172" translate="yes" xml:space="preserve">
          <source>This chapter is part of the</source>
          <target state="translated">Эта глава является частью</target>
        </trans-unit>
        <trans-unit id="d39494a06027e3ecee2968740895a5b78940cdae" translate="yes" xml:space="preserve">
          <source>This checks the version stored in the regular expression and recompiles the regex in case of version mismatch.</source>
          <target state="translated">При этом проверяется версия,сохраненная в регулярном выражении,и перекомпилируется регресс в случае несовпадения версий.</target>
        </trans-unit>
        <trans-unit id="9ba63be17004fe209fc861513a8577afc4eb4889" translate="yes" xml:space="preserve">
          <source>This code counts the number of files in a ZIP file:</source>
          <target state="translated">Этот код подсчитывает количество файлов в ZIP-файле:</target>
        </trans-unit>
        <trans-unit id="b9d6dcf55f45221cfb511f9790e81d0872563106" translate="yes" xml:space="preserve">
          <source>This code generates a warning letting you know that you are mistakenly implementing &lt;code&gt;parse/0&lt;/code&gt; instead of &lt;code&gt;parse/1&lt;/code&gt;. You can read more about &lt;code&gt;@impl&lt;/code&gt; in the &lt;a href=&quot;https://hexdocs.pm/elixir/master/Module.html#module-impl&quot;&gt;module documentation&lt;/a&gt;.</source>
          <target state="translated">Этот код генерирует предупреждение, информирующее вас о том, что вы по ошибке реализуете &lt;code&gt;parse/0&lt;/code&gt; вместо &lt;code&gt;parse/1&lt;/code&gt; . Вы можете узнать больше о &lt;code&gt;@impl&lt;/code&gt; в &lt;a href=&quot;https://hexdocs.pm/elixir/master/Module.html#module-impl&quot;&gt;документации модуля&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7461ed387e3c81526760cfc0eb288d63eeb1988f" translate="yes" xml:space="preserve">
          <source>This command deletes all build artifacts for the current project. Dependencies' sources and build files are cleaned only if the &lt;code&gt;--deps&lt;/code&gt; option is given.</source>
          <target state="translated">Эта команда удаляет все артефакты сборки для текущего проекта. Источники зависимостей и файлы сборки очищаются, только если &lt;code&gt;--deps&lt;/code&gt; опция --deps .</target>
        </trans-unit>
        <trans-unit id="8e27e95f38d4b57c9fdf5d7529c98e07460e6cfe" translate="yes" xml:space="preserve">
          <source>This command only works inside a pry session started manually via &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#pry/0&quot;&gt;&lt;code&gt;IEx.pry/0&lt;/code&gt;&lt;/a&gt; or a breakpoint set via &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#break!/4&quot;&gt;&lt;code&gt;IEx.break!/4&lt;/code&gt;&lt;/a&gt;. Calling this function during a regular &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html&quot;&gt;&lt;code&gt;IEx&lt;/code&gt;&lt;/a&gt; session will print an error.</source>
          <target state="translated">Эта команда работает только внутри сеанса &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#pry/0&quot;&gt; &lt;code&gt;IEx.pry/0&lt;/code&gt; &lt;/a&gt; запущенного вручную через IEx.pry / 0 или точки останова, установленной через &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#break!/4&quot;&gt; &lt;code&gt;IEx.break!/4&lt;/code&gt; &lt;/a&gt; . Вызов этой функции во время обычного сеанса &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html&quot;&gt; &lt;code&gt;IEx&lt;/code&gt; &lt;/a&gt; приведет к ошибке.</target>
        </trans-unit>
        <trans-unit id="f03f46afb53748c93f12e42d7a94c9567ade9ff8" translate="yes" xml:space="preserve">
          <source>This command only works inside a pry session started manually via &lt;a href=&quot;iex#pry/0&quot;&gt;&lt;code&gt;IEx.pry/0&lt;/code&gt;&lt;/a&gt; or a breakpoint set via &lt;a href=&quot;iex#break!/4&quot;&gt;&lt;code&gt;IEx.break!/4&lt;/code&gt;&lt;/a&gt;. Calling this function during a regular &lt;a href=&quot;iex&quot;&gt;&lt;code&gt;IEx&lt;/code&gt;&lt;/a&gt; session will print an error.</source>
          <target state="translated">Эта команда работает только внутри сеанса &lt;a href=&quot;iex#pry/0&quot;&gt; &lt;code&gt;IEx.pry/0&lt;/code&gt; &lt;/a&gt; запущенного вручную через IEx.pry / 0 или точки останова, установленной через &lt;a href=&quot;iex#break!/4&quot;&gt; &lt;code&gt;IEx.break!/4&lt;/code&gt; &lt;/a&gt; . Вызов этой функции во время обычного сеанса &lt;a href=&quot;iex&quot;&gt; &lt;code&gt;IEx&lt;/code&gt; &lt;/a&gt; выдаст ошибку.</target>
        </trans-unit>
        <trans-unit id="9a69791b2bccfac2d2c8e3aaab714d3c02736c70" translate="yes" xml:space="preserve">
          <source>This concludes our introduction to associative data structures in Elixir. You will find out that, given keyword lists and maps, you will always have the right tool to tackle problems that require associative data structures in Elixir.</source>
          <target state="translated">На этом мы завершаем наше введение в ассоциативные структуры данных в Эликсире.Вы узнаете,что,учитывая списки ключевых слов и карты,у вас всегда будет правильный инструмент для решения проблем,требующих наличия ассоциативных структур данных в эликсире.</target>
        </trans-unit>
        <trans-unit id="16f934bff72f27aaf7d700d67cebd5f253fc677d" translate="yes" xml:space="preserve">
          <source>This concludes our optimization chapter. We have used ETS as a cache mechanism where reads can happen from any processes but writes are still serialized through a single process. More importantly, we have also learned that once data can be read asynchronously, we need to be aware of the race conditions it might introduce.</source>
          <target state="translated">На этом мы завершаем главу &quot;Оптимизация&quot;.Мы использовали ETS как механизм кэширования,где чтение может происходить из любых процессов,но записи все равно сериализуются через один процесс.Что более важно,мы также узнали,что когда данные могут быть прочитаны асинхронно,мы должны быть осведомлены о гоночных условиях,которые они могут ввести.</target>
        </trans-unit>
        <trans-unit id="5688f14ee7763837295cf0cfb6c3645fbb0e591b" translate="yes" xml:space="preserve">
          <source>This configuration can be read using &lt;a href=&quot;#config/0&quot;&gt;&lt;code&gt;Mix.Project.config/0&lt;/code&gt;&lt;/a&gt;. Note that &lt;a href=&quot;#config/0&quot;&gt;&lt;code&gt;config/0&lt;/code&gt;&lt;/a&gt; won't fail if a project is not defined; this allows many Mix tasks to work without a project.</source>
          <target state="translated">Эту конфигурацию можно прочитать с помощью &lt;a href=&quot;#config/0&quot;&gt; &lt;code&gt;Mix.Project.config/0&lt;/code&gt; &lt;/a&gt; . Обратите внимание, что &lt;a href=&quot;#config/0&quot;&gt; &lt;code&gt;config/0&lt;/code&gt; &lt;/a&gt; не завершится ошибкой, если проект не определен; это позволяет многим задачам Mix работать без проекта.</target>
        </trans-unit>
        <trans-unit id="e537b568fbfe0eb80dc56346fdc7829c98d99600" translate="yes" xml:space="preserve">
          <source>This configuration can be read using &lt;a href=&quot;mix.project#config/0&quot;&gt;&lt;code&gt;Mix.Project.config/0&lt;/code&gt;&lt;/a&gt;. Note that &lt;a href=&quot;#config/0&quot;&gt;&lt;code&gt;config/0&lt;/code&gt;&lt;/a&gt; won't fail if a project is not defined; this allows many Mix tasks to work without a project.</source>
          <target state="translated">Эту конфигурацию можно прочитать с помощью &lt;a href=&quot;mix.project#config/0&quot;&gt; &lt;code&gt;Mix.Project.config/0&lt;/code&gt; &lt;/a&gt; . Обратите внимание, что &lt;a href=&quot;#config/0&quot;&gt; &lt;code&gt;config/0&lt;/code&gt; &lt;/a&gt; не завершится ошибкой, если проект не определен; это позволяет многим задачам Mix работать без проекта.</target>
        </trans-unit>
        <trans-unit id="a6e1f3335434ce7c6c1db9f585fc250ca17087fe" translate="yes" xml:space="preserve">
          <source>This configuration is split in three categories:</source>
          <target state="translated">Эта конфигурация разделена на три категории:</target>
        </trans-unit>
        <trans-unit id="50abf55bb08a41598a90aba43d936a7f680d70a0" translate="yes" xml:space="preserve">
          <source>This configures a routing table that always points to the current node. Now remove &lt;code&gt;@tag :distributed&lt;/code&gt; from the test in &lt;code&gt;test/kv_server_test.exs&lt;/code&gt; and run the suite, the test should now pass.</source>
          <target state="translated">Это настраивает таблицу маршрутизации, которая всегда указывает на текущий узел. Теперь удалите &lt;code&gt;@tag :distributed&lt;/code&gt; из теста в &lt;code&gt;test/kv_server_test.exs&lt;/code&gt; и запустите набор, теперь тест должен пройти.</target>
        </trans-unit>
        <trans-unit id="300ecf84b2025cc5045f1e2f3e97de582fbc3fe7" translate="yes" xml:space="preserve">
          <source>This could be corrected by ensuring that no exception is raised, either via type checks like &lt;code&gt;is_map(val) and map_size(val) == 0&lt;/code&gt;, or by checking equality instead, like &lt;code&gt;val == %{}&lt;/code&gt;.</source>
          <target state="translated">Это можно исправить, убедившись, что исключение не возникает, либо с помощью проверки типа, например &lt;code&gt;is_map(val) and map_size(val) == 0&lt;/code&gt; , либо путем проверки равенства, например &lt;code&gt;val == %{}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d60706226e387d43664cfb1abdf069dc132f410b" translate="yes" xml:space="preserve">
          <source>This could be corrected by ensuring that no exception is raised, either via type checks like &lt;code&gt;is_map(val) and map_size(val) == 0&lt;/code&gt;, or by using multiple guards, so that if an exception causes one guard to fail, the next one is evaluated.</source>
          <target state="translated">Это можно исправить, убедившись, что исключение не возникает, либо с помощью проверок типа, таких как &lt;code&gt;is_map(val) and map_size(val) == 0&lt;/code&gt; , либо с помощью нескольких охранников, так что если исключение приводит к сбою одного охранника, следующий оценивается.</target>
        </trans-unit>
        <trans-unit id="9c9bc7bb0b19c22166e70549a7bdc2d167883d30" translate="yes" xml:space="preserve">
          <source>This datetime can be seen as an ephemeral snapshot of a datetime at a given time zone. For such purposes, it also includes both UTC and Standard offsets, as well as the zone abbreviation field used exclusively for formatting purposes.</source>
          <target state="translated">Это время можно рассматривать как эфемерный снимок даты в данном часовом поясе.Для таких целей оно также включает в себя как UTC,так и стандартные смещения,а также поле аббревиатуры зоны,используемое исключительно в целях форматирования.</target>
        </trans-unit>
        <trans-unit id="025523ae9891a8ad2cd843de98bd87706ff12c27" translate="yes" xml:space="preserve">
          <source>This day fraction should be in its most simplified form possible, to make comparisons fast.</source>
          <target state="translated">Эта дневная фракция должна быть в максимально упрощенном виде,чтобы сделать сравнения быстрыми.</target>
        </trans-unit>
        <trans-unit id="99d3f98fe052dbacd8470e76a4e43e20ad18ae6f" translate="yes" xml:space="preserve">
          <source>This default can be overridden by &lt;code&gt;@tag capture_log: false&lt;/code&gt; or &lt;code&gt;@moduletag capture_log: false&lt;/code&gt;.</source>
          <target state="translated">Это значение по умолчанию может быть отменено с помощью &lt;code&gt;@tag capture_log: false&lt;/code&gt; или &lt;code&gt;@moduletag capture_log: false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc33441b7a8711ad3ca32a6f565dfd02fa511842" translate="yes" xml:space="preserve">
          <source>This dependency refers to the latest version of Plug in the 1.x.x version series that has been pushed to Hex. This is indicated by the &lt;code&gt;~&amp;gt;&lt;/code&gt; preceding the version number. For more information on specifying version requirements, see the &lt;a href=&quot;https://hexdocs.pm/elixir/Version.html&quot;&gt;documentation for the Version module&lt;/a&gt;.</source>
          <target state="translated">Эта зависимость относится к последней версии Plug in серии версий 1.xx, которая была перенесена в Hex. На это указывает символ &lt;code&gt;~&amp;gt;&lt;/code&gt; перед номером версии. Дополнительные сведения об указании требований к версии см. В &lt;a href=&quot;https://hexdocs.pm/elixir/Version.html&quot;&gt;документации модуля Версия&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b6c49f1989fcd795b139792169130547ab503617" translate="yes" xml:space="preserve">
          <source>This design is intentional. &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; was designed to support infinite collections, resources and other structures with fixed shape. For example, it doesn't make sense to insert values into a range, as it has a fixed shape where just the range limits are stored.</source>
          <target state="translated">Этот дизайн сделан намеренно. &lt;a href=&quot;enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; был разработан для поддержки бесконечных коллекций, ресурсов и других структур фиксированной формы. Например, не имеет смысла вставлять значения в диапазон, поскольку он имеет фиксированную форму, в которой хранятся только пределы диапазона.</target>
        </trans-unit>
        <trans-unit id="6e5cd48930bfba2e7e8edb59d564ea07b6d9edb0" translate="yes" xml:space="preserve">
          <source>This design is intentional. &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.html&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; was designed to support infinite collections, resources and other structures with fixed shape. For example, it doesn't make sense to insert values into a range, as it has a fixed shape where just the range limits are stored.</source>
          <target state="translated">Этот дизайн сделан намеренно. &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.html&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; был разработан для поддержки бесконечных коллекций, ресурсов и других структур фиксированной формы. Например, не имеет смысла вставлять значения в диапазон, так как он имеет фиксированную форму, в которой хранятся только пределы диапазона.</target>
        </trans-unit>
        <trans-unit id="7534091aa8dce080c878d8bf8e2b8c4a424f0e53" translate="yes" xml:space="preserve">
          <source>This difference is exclusive, so the test will fail if the difference and the delta are equal.</source>
          <target state="translated">Эта разница является эксклюзивной,поэтому тест не пройдет,если разница и дельта равны.</target>
        </trans-unit>
        <trans-unit id="2dd776fd236b4c910c6f960d04bcbda080e07c54" translate="yes" xml:space="preserve">
          <source>This difference is inclusive, so the test will pass if the difference and the &lt;code&gt;delta&lt;/code&gt; are equal.</source>
          <target state="translated">Эта разница является инклюзивной, поэтому тест будет пройден, если разница и &lt;code&gt;delta&lt;/code&gt; равны.</target>
        </trans-unit>
        <trans-unit id="98215fb8db656d563463f8fe38acbb92d7848ad1" translate="yes" xml:space="preserve">
          <source>This distinction is important. If there are expensive actions to be done, you must consider if it will be better to perform these actions on the client or on the server. For example:</source>
          <target state="translated">Это различие важно.Если необходимо выполнить дорогостоящие действия,необходимо подумать,будет ли лучше выполнить эти действия на клиенте или на сервере.Например:</target>
        </trans-unit>
        <trans-unit id="df29062cd643c03ef91e3b2f35c7d26d81006829" translate="yes" xml:space="preserve">
          <source>This document covers all of Elixir syntax constructs as a reference and then discuss their exact AST representation.</source>
          <target state="translated">В этом документе рассматриваются все синтаксические конструкции Elixir в качестве справочной информации,а затем обсуждается их точное представление в AST.</target>
        </trans-unit>
        <trans-unit id="5ca6dcbf01e5b678fc80bf68968384a6697f2309" translate="yes" xml:space="preserve">
          <source>This document covers operators in Elixir, how they are parsed, how they can be defined, and how they can be overridden.</source>
          <target state="translated">В этом документе рассматриваются операторы в Elixir,как они анализируются,как их можно определить и как их можно переопределить.</target>
        </trans-unit>
        <trans-unit id="76b6d6a8fc49e94c927ef5f992d5906c281ba114" translate="yes" xml:space="preserve">
          <source>This document covers some naming conventions in Elixir code, from casing to punctuation characters.</source>
          <target state="translated">В данном документе рассматриваются некоторые соглашения по наименованию в эликсирном коде,от корпуса до знаков препинания.</target>
        </trans-unit>
        <trans-unit id="e522e86f1169f55700b99174079a5a7fddfa90ed" translate="yes" xml:space="preserve">
          <source>This document defines the commonly used base 16, base 32, and base 64 encoding schemes.</source>
          <target state="translated">Этот документ определяет широко используемые схемы кодирования базы 16,базы 32 и базы 64.</target>
        </trans-unit>
        <trans-unit id="d8780e3a54cb0fb8d842fe0203eab3683b262d16" translate="yes" xml:space="preserve">
          <source>This document outlines general guidelines, anti-patterns, and rules for those writing and publishing Elixir libraries meant to be consumed by other developers.</source>
          <target state="translated">В этом документе изложены общие рекомендации,анти-шаблоны и правила для тех,кто пишет и публикует библиотеки Elixir,предназначенные для использования другими разработчиками.</target>
        </trans-unit>
        <trans-unit id="7635e286607ededea5965d1544a7717ea9ae091d" translate="yes" xml:space="preserve">
          <source>This document provides a reference to Elixir syntax, exploring its constructs and their AST equivalents.</source>
          <target state="translated">Этот документ содержит ссылку на синтаксис Elixir,исследуя его конструкции и их эквиваленты AST.</target>
        </trans-unit>
        <trans-unit id="36fa202c6f9b610fe0535f0fc2890016238cbe23" translate="yes" xml:space="preserve">
          <source>This documentation refers to implementing the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Inspect&lt;/code&gt;&lt;/a&gt; protocol for your own data structures. To learn more about using inspect, see &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#inspect/2&quot;&gt;&lt;code&gt;Kernel.inspect/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html#inspect/2&quot;&gt;&lt;code&gt;IO.inspect/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта документация относится к реализации протокола &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Inspect&lt;/code&gt; &lt;/a&gt; для ваших собственных структур данных. Чтобы узнать больше об использовании inspect, см. &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#inspect/2&quot;&gt; &lt;code&gt;Kernel.inspect/2&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html#inspect/2&quot;&gt; &lt;code&gt;IO.inspect/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cb11a86f08fe1f7ebc5f36609a52188a6715fc6d" translate="yes" xml:space="preserve">
          <source>This documentation refers to implementing the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Inspect&lt;/code&gt;&lt;/a&gt; protocol for your own data structures. To learn more about using inspect, see &lt;a href=&quot;kernel#inspect/2&quot;&gt;&lt;code&gt;Kernel.inspect/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;io#inspect/2&quot;&gt;&lt;code&gt;IO.inspect/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта документация относится к реализации протокола &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Inspect&lt;/code&gt; &lt;/a&gt; для ваших собственных структур данных. Чтобы узнать больше об использовании inspect, см. &lt;a href=&quot;kernel#inspect/2&quot;&gt; &lt;code&gt;Kernel.inspect/2&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;io#inspect/2&quot;&gt; &lt;code&gt;IO.inspect/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1eb21e9b605b4017af593e4546f378df0b372b6e" translate="yes" xml:space="preserve">
          <source>This effectively loads the non-instrumented version of currently instrumented modules into memory.</source>
          <target state="translated">Это эффективно загружает в память неинструментированную версию текущих инструментированных модулей.</target>
        </trans-unit>
        <trans-unit id="1e8dce1c252882c1cf04fa14931f6945bcc1320f" translate="yes" xml:space="preserve">
          <source>This effectively loads the non-instrumented version of the module into memory.</source>
          <target state="translated">Это эффективно загружает в память неинструментированную версию модуля.</target>
        </trans-unit>
        <trans-unit id="1c15107405a954dcb039847f9ffc0e90a3a08175" translate="yes" xml:space="preserve">
          <source>This example shows how to get everything from the registry.</source>
          <target state="translated">Этот пример показывает,как получить все из реестра.</target>
        </trans-unit>
        <trans-unit id="370c43dc94083c1b83066d682a8c408a4aa46d4b" translate="yes" xml:space="preserve">
          <source>This feature is considered experimental and may change in future releases.</source>
          <target state="translated">Эта особенность считается экспериментальной и может измениться в будущих релизах.</target>
        </trans-unit>
        <trans-unit id="91e35a46b080fba070b1bb9706d962577f541321" translate="yes" xml:space="preserve">
          <source>This file can be compiled using &lt;code&gt;elixirc&lt;/code&gt;:</source>
          <target state="translated">Этот файл можно скомпилировать с помощью &lt;code&gt;elixirc&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b21275a067c181042b1ef479348b07d28e434640" translate="yes" xml:space="preserve">
          <source>This file contains Erlang terms (written using Erlang syntax). Even though we are not familiar with Erlang, it is easy to guess this file holds our application definition. It contains our application &lt;code&gt;version&lt;/code&gt;, all the modules defined by it, as well as a list of applications we depend on, like Erlang&amp;rsquo;s &lt;code&gt;kernel&lt;/code&gt;, &lt;code&gt;elixir&lt;/code&gt; itself, and &lt;code&gt;logger&lt;/code&gt;.</source>
          <target state="translated">Этот файл содержит термины Erlang (написанные с использованием синтаксиса Erlang). Несмотря на то, что мы не знакомы с Erlang, легко догадаться, что этот файл содержит определение нашего приложения. Он содержит &lt;code&gt;version&lt;/code&gt; нашего приложения , все определенные в нем модули, а также список приложений, от которых мы зависим, например, &lt;code&gt;kernel&lt;/code&gt; Erlang , сам &lt;code&gt;elixir&lt;/code&gt; и &lt;code&gt;logger&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3fde4ae93a3daf8d4be0e8acc8e91d708da691b" translate="yes" xml:space="preserve">
          <source>This file will be executed whenever your Mix project or your release starts.</source>
          <target state="translated">Этот файл будет запущен всякий раз,когда начнётся работа над вашим проектом Mix или вашим релизом.</target>
        </trans-unit>
        <trans-unit id="d4e5090203b164b7b8cda10cfcc22848f5f4e098" translate="yes" xml:space="preserve">
          <source>This file will be required by Mix every time before we run our tests. We can run tests with &lt;code&gt;mix test&lt;/code&gt;:</source>
          <target state="translated">Этот файл будет требоваться Mix каждый раз перед запуском наших тестов. Мы можем запускать тесты с помощью &lt;code&gt;mix test&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7951ed44572734ba9901e12d5c5112665c200cb8" translate="yes" xml:space="preserve">
          <source>This file will be required by Mix every time before we run our tests. We can run tests with:</source>
          <target state="translated">Этот файл будет запрашиваться Mix каждый раз перед запуском наших тестов.Мы можем запускать тесты с:</target>
        </trans-unit>
        <trans-unit id="5c84c085804b613daf8adcad4e1c5bc2c3c89312" translate="yes" xml:space="preserve">
          <source>This finishes our introduction to &lt;code&gt;try&lt;/code&gt;, &lt;code&gt;catch&lt;/code&gt;, and &lt;code&gt;rescue&lt;/code&gt;. You will find they are used less frequently in Elixir than in other languages, although they may be handy in some situations where a library or some particular code is not playing &amp;ldquo;by the rules&amp;rdquo;.</source>
          <target state="translated">Это завершает наше введение в &lt;code&gt;try&lt;/code&gt; , &lt;code&gt;catch&lt;/code&gt; , и &lt;code&gt;rescue&lt;/code&gt; . Вы обнаружите, что они реже используются в Elixir, чем в других языках, хотя они могут быть полезны в некоторых ситуациях, когда библиотека или какой-то конкретный код не воспроизводятся &amp;laquo;по правилам&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="5e21f5a627b95129ae5af664e7fd87944d88dfd3" translate="yes" xml:space="preserve">
          <source>This finishes our introduction to pattern matching. As we will see in the next chapter, pattern matching is very common in many language constructs.</source>
          <target state="translated">На этом мы завершаем наше введение в сопоставление узора.Как мы увидим в следующей главе,подгонка деталей очень распространена во многих языковых конструкциях.</target>
        </trans-unit>
        <trans-unit id="8a8c048ae2840f3778becb01897e7dcb0a936037" translate="yes" xml:space="preserve">
          <source>This finishes our short introduction to modules. In the next chapters, we will learn how to use named functions for recursion, explore Elixir lexical directives that can be used for importing functions from other modules and discuss module attributes.</source>
          <target state="translated">На этом мы завершаем наше краткое введение в модули.В следующих главах мы узнаем,как использовать именованные функции для рекурсии,рассмотрим лексические директивы Elixir,которые могут быть использованы для импорта функций из других модулей и обсудим атрибуты модулей.</target>
        </trans-unit>
        <trans-unit id="d37728bdb738ca01b9639cfc5853b77bca6e2f31" translate="yes" xml:space="preserve">
          <source>This finishes our tour of IO devices and IO related functionality. We have learned about four Elixir modules - &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/File.html&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/Path.html&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/StringIO.html&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt; - as well as how the</source>
          <target state="translated">На этом мы завершаем наш обзор устройств ввода-вывода и их функций. Мы узнали о четырех модулях Elixir - &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/File.html&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/Path.html&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://hexdocs.pm/elixir/StringIO.html&quot;&gt; &lt;code&gt;StringIO&lt;/code&gt; &lt;/a&gt; - а также о том, как</target>
        </trans-unit>
        <trans-unit id="38be33edc941fc8a3ad680d80133cb5df88f95ae" translate="yes" xml:space="preserve">
          <source>This finishes our tour of IO devices and IO related functionality. We have learned about three Elixir modules - &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/File.html&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://hexdocs.pm/elixir/Path.html&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; - as well as how the</source>
          <target state="translated">На этом мы завершаем наш обзор устройств ввода-вывода и их функций. Мы узнали о трех модулях Elixir - &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/File.html&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://hexdocs.pm/elixir/Path.html&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; - а также о том, как</target>
        </trans-unit>
        <trans-unit id="8c32849fe51611a16560a9bffff17dd6edd351d8" translate="yes" xml:space="preserve">
          <source>This function accepts any map or struct that contains at least the same fields as a &lt;a href=&quot;https://hexdocs.pm/elixir/NaiveDateTime.html&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; struct. The most common example of that is a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt;. In this case the information about the time zone of that &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; is completely ignored. This is the same principle as passing a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;https://hexdocs.pm/elixir/Date.html#to_iso8601/2&quot;&gt;&lt;code&gt;Date.to_iso8601/2&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;https://hexdocs.pm/elixir/Date.html#to_iso8601/2&quot;&gt;&lt;code&gt;Date.to_iso8601/2&lt;/code&gt;&lt;/a&gt; extracts only the date-specific fields (calendar, year, month and day) of the given structure and ignores all others.</source>
          <target state="translated">Эта функция принимает любую карту или структуру, которая содержит как минимум те же поля, что и структура &lt;a href=&quot;https://hexdocs.pm/elixir/NaiveDateTime.html&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; . Самый распространенный пример - &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; . В этом случае информация о часовом поясе этого &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; полностью игнорируется. Это тот же принцип, что и передача &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; в &lt;a href=&quot;https://hexdocs.pm/elixir/Date.html#to_iso8601/2&quot;&gt; &lt;code&gt;Date.to_iso8601/2&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;https://hexdocs.pm/elixir/Date.html#to_iso8601/2&quot;&gt; &lt;code&gt;Date.to_iso8601/2&lt;/code&gt; &lt;/a&gt; извлекает только специфичные для даты поля (календарь, год, месяц и день) данной структуры и игнорирует все остальные.</target>
        </trans-unit>
        <trans-unit id="4be537303d97003eb7a277c4a7ca1256fe24cb96" translate="yes" xml:space="preserve">
          <source>This function accepts any map or struct that contains at least the same fields as a &lt;a href=&quot;naivedatetime&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; struct. The most common example of that is a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt;. In this case the information about the time zone of that &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; is completely ignored. This is the same principle as passing a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;date#to_iso8601/2&quot;&gt;&lt;code&gt;Date.to_iso8601/2&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;date#to_iso8601/2&quot;&gt;&lt;code&gt;Date.to_iso8601/2&lt;/code&gt;&lt;/a&gt; extracts only the date-specific fields (calendar, year, month and day) of the given structure and ignores all others.</source>
          <target state="translated">Эта функция принимает любую карту или структуру, которая содержит как минимум те же поля, что и структура &lt;a href=&quot;naivedatetime&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; . Самый распространенный пример - &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; . В этом случае информация о часовом поясе этого &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; полностью игнорируется. Это тот же принцип, что и передача &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; в &lt;a href=&quot;date#to_iso8601/2&quot;&gt; &lt;code&gt;Date.to_iso8601/2&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;date#to_iso8601/2&quot;&gt; &lt;code&gt;Date.to_iso8601/2&lt;/code&gt; &lt;/a&gt; извлекает только специфичные для даты поля (календарь, год, месяц и день) данной структуры и игнорирует все остальные.</target>
        </trans-unit>
        <trans-unit id="5bf6aff9caccdb3a64ed2f33e59b9d34b47e60ba" translate="yes" xml:space="preserve">
          <source>This function accepts the &lt;code&gt;number&lt;/code&gt; measured according to &lt;a href=&quot;calendar.iso&quot;&gt;&lt;code&gt;Calendar.ISO&lt;/code&gt;&lt;/a&gt;. The time is returned in the same calendar as it was given in.</source>
          <target state="translated">Эта функция принимает &lt;code&gt;number&lt;/code&gt; измеренное в соответствии с &lt;a href=&quot;calendar.iso&quot;&gt; &lt;code&gt;Calendar.ISO&lt;/code&gt; &lt;/a&gt; . Время возвращается в том же календаре, в котором оно было указано.</target>
        </trans-unit>
        <trans-unit id="3e2dd6bd7df969320413c030c37f5eb3baf88d93" translate="yes" xml:space="preserve">
          <source>This function accepts the &lt;code&gt;number&lt;/code&gt; measured according to &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.ISO.html&quot;&gt;&lt;code&gt;Calendar.ISO&lt;/code&gt;&lt;/a&gt;. The time is returned in the same calendar as it was given in.</source>
          <target state="translated">Эта функция принимает &lt;code&gt;number&lt;/code&gt; измеренное в соответствии с &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.ISO.html&quot;&gt; &lt;code&gt;Calendar.ISO&lt;/code&gt; &lt;/a&gt; . Время возвращается в том же календаре, в котором оно было указано.</target>
        </trans-unit>
        <trans-unit id="e2a89e508cd312bb2a9827f189a0607424832acb" translate="yes" xml:space="preserve">
          <source>This function accepts the following options, which are exclusive to each other (i.e., only one of them can be used in the same call):</source>
          <target state="translated">Эта функция принимает следующие опции,которые являются эксклюзивными друг для друга (т.е.только одна из них может быть использована в одном вызове):</target>
        </trans-unit>
        <trans-unit id="01d34bc3e6a8b2f03537e43d3d5e42ba54d0dddb" translate="yes" xml:space="preserve">
          <source>This function also accepts a &lt;code&gt;predicate&lt;/code&gt; function as an optional argument. If passed, this function will be called with each byte in &lt;code&gt;string&lt;/code&gt; as its argument and should return a truthy value (anything other than &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;) if the given byte should be left as is, or return a falsy value (&lt;code&gt;false&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;) if the character should be escaped.</source>
          <target state="translated">Эта функция также принимает функцию &lt;code&gt;predicate&lt;/code&gt; в качестве необязательного аргумента. Если передано, эта функция будет вызываться с каждым байтом в &lt;code&gt;string&lt;/code&gt; качестве аргумента и должна возвращать истинное значение (любое, кроме &lt;code&gt;false&lt;/code&gt; или &lt;code&gt;nil&lt;/code&gt; ), если данный байт следует оставить как есть, или возвращать ложное значение ( &lt;code&gt;false&lt;/code&gt; или &lt;code&gt;nil&lt;/code&gt; ) если персонаж должен быть экранирован.</target>
        </trans-unit>
        <trans-unit id="bc20380be19f829ddb16dcf0ed86935745a4613d" translate="yes" xml:space="preserve">
          <source>This function also accepts a &lt;code&gt;predicate&lt;/code&gt; function as an optional argument. If passed, this function will be called with each byte in &lt;code&gt;string&lt;/code&gt; as its argument and should return a truthy value (anything other than &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;) if the given byte should be left as is, or return a falsy value (&lt;code&gt;false&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;) if the character should be escaped. Defaults to &lt;a href=&quot;#char_unescaped?/1&quot;&gt;&lt;code&gt;URI.char_unescaped?/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта функция также принимает функцию &lt;code&gt;predicate&lt;/code&gt; в качестве необязательного аргумента. Если передано, эта функция будет вызываться с каждым байтом в &lt;code&gt;string&lt;/code&gt; качестве аргумента и должна возвращать истинное значение (любое другое, кроме &lt;code&gt;false&lt;/code&gt; или &lt;code&gt;nil&lt;/code&gt; ), если данный байт должен быть оставлен как есть, или возвращать ложное значение ( &lt;code&gt;false&lt;/code&gt; или &lt;code&gt;nil&lt;/code&gt; ) если персонаж должен быть экранирован. По умолчанию используется &lt;a href=&quot;#char_unescaped?/1&quot;&gt; &lt;code&gt;URI.char_unescaped?/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="95e711242672aeb8dcafbe40b2392be2c750c645" translate="yes" xml:space="preserve">
          <source>This function also accepts all options accepted by &lt;a href=&quot;https://hexdocs.pm/elixir/Regex.html#split/3&quot;&gt;&lt;code&gt;Regex.split/3&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;pattern&lt;/code&gt; is a regular expression.</source>
          <target state="translated">Эта функция также принимает все параметры, принимаемые &lt;a href=&quot;https://hexdocs.pm/elixir/Regex.html#split/3&quot;&gt; &lt;code&gt;Regex.split/3&lt;/code&gt; ,&lt;/a&gt; если &lt;code&gt;pattern&lt;/code&gt; является регулярным выражением.</target>
        </trans-unit>
        <trans-unit id="b98eb6f021aa33018c50a97a2ae82859d4b9d5d9" translate="yes" xml:space="preserve">
          <source>This function also accepts all options accepted by &lt;a href=&quot;regex#split/3&quot;&gt;&lt;code&gt;Regex.split/3&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;pattern&lt;/code&gt; is a regular expression.</source>
          <target state="translated">Эта функция также принимает все параметры, принятые &lt;a href=&quot;regex#split/3&quot;&gt; &lt;code&gt;Regex.split/3&lt;/code&gt; ,&lt;/a&gt; если &lt;code&gt;pattern&lt;/code&gt; является регулярным выражением.</target>
        </trans-unit>
        <trans-unit id="ac6f41672cc7456ee783ae52a0830c9c41b7db86" translate="yes" xml:space="preserve">
          <source>This function also notifies the compiler a warning was printed (in case --warnings-as-errors was enabled). It returns &lt;code&gt;:ok&lt;/code&gt; if it succeeds.</source>
          <target state="translated">Эта функция также уведомляет компилятор о том, что было напечатано предупреждение (в случае, если была включена опция --warnings-as-errors). Он возвращает &lt;code&gt;:ok&lt;/code&gt; если это удается.</target>
        </trans-unit>
        <trans-unit id="f335fe1ab0a202ff3768395fb418ab92d63c45f8" translate="yes" xml:space="preserve">
          <source>This function always returns &lt;code&gt;:ok&lt;/code&gt; regardless of whether the destination &lt;code&gt;server&lt;/code&gt; (or node) exists. Therefore it is unknown whether the destination &lt;code&gt;server&lt;/code&gt; successfully handled the message.</source>
          <target state="translated">Эта функция всегда возвращает &lt;code&gt;:ok&lt;/code&gt; независимо от того, существует ли целевой &lt;code&gt;server&lt;/code&gt; (или узел). Поэтому неизвестно, успешно ли обработал сообщение целевой &lt;code&gt;server&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc08e67f2fe286bbaa38c013f9a0710de372c88c" translate="yes" xml:space="preserve">
          <source>This function always returns &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">Эта функция всегда возвращает &lt;code&gt;:ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f38b1ffa237bfd139fe63c018eb6902804eab77a" translate="yes" xml:space="preserve">
          <source>This function always returns a float. &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#trunc/1&quot;&gt;&lt;code&gt;Kernel.trunc/1&lt;/code&gt;&lt;/a&gt; may be used instead to truncate the result to an integer afterwards.</source>
          <target state="translated">Эта функция всегда возвращает число с плавающей запятой. &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#trunc/1&quot;&gt; &lt;code&gt;Kernel.trunc/1&lt;/code&gt; &lt;/a&gt; этого для последующего усечения результата до целого числа можно использовать Kernel.trunc / 1 .</target>
        </trans-unit>
        <trans-unit id="440a46241c8ccf32d2a66af8c374d6f2f268c12c" translate="yes" xml:space="preserve">
          <source>This function always returns a float. &lt;a href=&quot;kernel#trunc/1&quot;&gt;&lt;code&gt;Kernel.trunc/1&lt;/code&gt;&lt;/a&gt; may be used instead to truncate the result to an integer afterwards.</source>
          <target state="translated">Эта функция всегда возвращает число с плавающей запятой. &lt;a href=&quot;kernel#trunc/1&quot;&gt; &lt;code&gt;Kernel.trunc/1&lt;/code&gt; &lt;/a&gt; можно использовать Kernel.trunc / 1, чтобы впоследствии усечь результат до целого числа.</target>
        </trans-unit>
        <trans-unit id="502243a350ea8c22efdb92a69f5b1758006a416e" translate="yes" xml:space="preserve">
          <source>This function always returns floats. &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#trunc/1&quot;&gt;&lt;code&gt;Kernel.trunc/1&lt;/code&gt;&lt;/a&gt; may be used instead to truncate the result to an integer afterwards.</source>
          <target state="translated">Эта функция всегда возвращает числа с плавающей запятой. &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#trunc/1&quot;&gt; &lt;code&gt;Kernel.trunc/1&lt;/code&gt; &lt;/a&gt; этого для последующего усечения результата до целого числа можно использовать Kernel.trunc / 1 .</target>
        </trans-unit>
        <trans-unit id="57434e8d5ce39ceeb05917e87327e9180f6a8556" translate="yes" xml:space="preserve">
          <source>This function always returns floats. &lt;a href=&quot;kernel#trunc/1&quot;&gt;&lt;code&gt;Kernel.trunc/1&lt;/code&gt;&lt;/a&gt; may be used instead to truncate the result to an integer afterwards.</source>
          <target state="translated">Эта функция всегда возвращает числа с плавающей запятой. &lt;a href=&quot;kernel#trunc/1&quot;&gt; &lt;code&gt;Kernel.trunc/1&lt;/code&gt; &lt;/a&gt; можно использовать Kernel.trunc / 1, чтобы впоследствии усечь результат до целого числа.</target>
        </trans-unit>
        <trans-unit id="0953d55a24fb80955003844da1bc3b8af51086cb" translate="yes" xml:space="preserve">
          <source>This function assumes the task's monitor is still active or the monitor's &lt;code&gt;:DOWN&lt;/code&gt; message is in the message queue. If it has been demonitored or the message already received, this function will wait for the duration of the timeout awaiting the message.</source>
          <target state="translated">Эта функция предполагает, что монитор задачи все еще активен или сообщение монитора &lt;code&gt;:DOWN&lt;/code&gt; находится в очереди сообщений. Если он был демонитирован или сообщение уже получено, эта функция будет ожидать сообщения в течение тайм-аута.</target>
        </trans-unit>
        <trans-unit id="7b478825975b2adf1e339715031349cd41d1d953" translate="yes" xml:space="preserve">
          <source>This function assumes the task's monitor is still active or the monitor's &lt;code&gt;:DOWN&lt;/code&gt; message is in the message queue. If it has been demonitored, or the message already received, this function will wait for the duration of the timeout awaiting the message.</source>
          <target state="translated">Эта функция предполагает, что монитор задачи все еще активен или сообщение монитора &lt;code&gt;:DOWN&lt;/code&gt; находится в очереди сообщений. Если оно было демонитировано или сообщение уже получено, эта функция будет ожидать сообщения в течение тайм-аута.</target>
        </trans-unit>
        <trans-unit id="61db13a99cd2b6f7c8e9e14b335594be40a81ac4" translate="yes" xml:space="preserve">
          <source>This function assumes the tasks' monitors are still active or the monitors' &lt;code&gt;:DOWN&lt;/code&gt; message is in the message queue. If any tasks have been demonitored, or the message already received, this function will wait for the duration of the timeout.</source>
          <target state="translated">Эта функция предполагает, что мониторы задач все еще активны или сообщение monitors &lt;code&gt;:DOWN&lt;/code&gt; находится в очереди сообщений. Если какие-либо задачи были демонитированы или сообщение уже получено, эта функция будет ждать до истечения времени ожидания.</target>
        </trans-unit>
        <trans-unit id="a19b113270ec008da90487c67a8732f8a8235703" translate="yes" xml:space="preserve">
          <source>This function behaves like &lt;a href=&quot;#pop/3&quot;&gt;&lt;code&gt;pop/3&lt;/code&gt;&lt;/a&gt;, but raises in cases the &lt;code&gt;key&lt;/code&gt; is not present in the given &lt;code&gt;keywords&lt;/code&gt;.</source>
          <target state="translated">Эта функция ведет себя как &lt;a href=&quot;#pop/3&quot;&gt; &lt;code&gt;pop/3&lt;/code&gt; &lt;/a&gt; , но срабатывает, если &lt;code&gt;key&lt;/code&gt; отсутствует в заданных &lt;code&gt;keywords&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12bd78dfccf68211322b54eebf7d9f19fae21105" translate="yes" xml:space="preserve">
          <source>This function can also be used to compare a DateTime without the time zone information:</source>
          <target state="translated">Эта функция также может быть использована для сравнения DateTime без информации о часовом поясе:</target>
        </trans-unit>
        <trans-unit id="6685e43cbdb2479bfe075aeca3ae08082570222e" translate="yes" xml:space="preserve">
          <source>This function can also be used to compare across more complex calendar types by considering only the date fields:</source>
          <target state="translated">Эту функцию также можно использовать для сравнения более сложных типов календаря,рассматривая только поля даты:</target>
        </trans-unit>
        <trans-unit id="abca05fe88ba596b97d33bdad630bb0ce33ca0d8" translate="yes" xml:space="preserve">
          <source>This function can also be used to compare across more complex calendar types by considering only the time fields:</source>
          <target state="translated">Эту функцию также можно использовать для сравнения более сложных типов календаря,рассматривая только поля времени:</target>
        </trans-unit>
        <trans-unit id="50c88d683e6ca48ffff95675148916e0e611983e" translate="yes" xml:space="preserve">
          <source>This function can also be used to convert a DateTime to ISO 8601 without the time zone information:</source>
          <target state="translated">Эта функция также может быть использована для преобразования DateTime в ISO 8601 без информации о часовом поясе:</target>
        </trans-unit>
        <trans-unit id="41a09a6604ea410d09611cc0508b8a9905bff4c2" translate="yes" xml:space="preserve">
          <source>This function can also be used to convert a DateTime to a erl format without the time zone information:</source>
          <target state="translated">Эта функция также может быть использована для преобразования DateTime в формат erl без информации о часовом поясе:</target>
        </trans-unit>
        <trans-unit id="90561437b8e4f9d3679b45a602783e2cfc785f58" translate="yes" xml:space="preserve">
          <source>This function can also be used to convert a DateTime to a string without the time zone information:</source>
          <target state="translated">Эта функция также может быть использована для преобразования DateTime в строку без информации о часовом поясе:</target>
        </trans-unit>
        <trans-unit id="a058c913c46d45fd26854e6d03a3a8d889e6bda9" translate="yes" xml:space="preserve">
          <source>This function can also be used to convert a DateTime to an Erlang datetime tuple without the time zone information:</source>
          <target state="translated">Эта функция также может быть использована для преобразования кортежа даты DateTime в кортеж Erlang без информации о часовом поясе:</target>
        </trans-unit>
        <trans-unit id="607aaac2692d9ae79c5be1d1f95f4b67e7e30692" translate="yes" xml:space="preserve">
          <source>This function can be seen as a combination of &lt;a href=&quot;#resource/3&quot;&gt;&lt;code&gt;Stream.resource/3&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;#transform/3&quot;&gt;&lt;code&gt;Stream.transform/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эту функцию можно рассматривать как комбинацию &lt;a href=&quot;#resource/3&quot;&gt; &lt;code&gt;Stream.resource/3&lt;/code&gt; &lt;/a&gt; с &lt;a href=&quot;#transform/3&quot;&gt; &lt;code&gt;Stream.transform/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d7b8cf5df777bb4d4ddd30603ec1dffb30552797" translate="yes" xml:space="preserve">
          <source>This function can be seen as a combination of &lt;a href=&quot;stream#resource/3&quot;&gt;&lt;code&gt;Stream.resource/3&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;stream#transform/3&quot;&gt;&lt;code&gt;Stream.transform/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эту функцию можно рассматривать как комбинацию &lt;a href=&quot;stream#resource/3&quot;&gt; &lt;code&gt;Stream.resource/3&lt;/code&gt; &lt;/a&gt; с &lt;a href=&quot;stream#transform/3&quot;&gt; &lt;code&gt;Stream.transform/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8bf264a9f407b070cd0c90cff65f5b5b2f3cb5a" translate="yes" xml:space="preserve">
          <source>This function can be used to display what the time is right now for the time zone configuration that the machine happens to have. An example would be a desktop program displaying a clock to the user. For any other uses it is probably a bad idea to use this function.</source>
          <target state="translated">Эта функция может быть использована для отображения текущего времени для настройки часового пояса,который имеет машина.Примером может служить настольная программа,отображающая часы для пользователя.Для любого другого использования,вероятно,плохая идея использовать эту функцию.</target>
        </trans-unit>
        <trans-unit id="65aef6f44f45a3fc1e3176aa1c4a4acc551773fb" translate="yes" xml:space="preserve">
          <source>This function can be used to explicitly send a reply to a client that called &lt;a href=&quot;#call/3&quot;&gt;&lt;code&gt;call/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#multi_call/4&quot;&gt;&lt;code&gt;multi_call/4&lt;/code&gt;&lt;/a&gt; when the reply cannot be specified in the return value of &lt;a href=&quot;#c:handle_call/3&quot;&gt;&lt;code&gt;handle_call/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта функция может использоваться для явной отправки ответа клиенту, который вызвал &lt;a href=&quot;#call/3&quot;&gt; &lt;code&gt;call/3&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;#multi_call/4&quot;&gt; &lt;code&gt;multi_call/4&lt;/code&gt; ,&lt;/a&gt; когда ответ не может быть указан в возвращаемом значении &lt;a href=&quot;#c:handle_call/3&quot;&gt; &lt;code&gt;handle_call/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e57ccc748f6208d195990a8cc4f2ec6d283e0449" translate="yes" xml:space="preserve">
          <source>This function can only be called once for any given task. If you want to be able to check multiple times if a long-running task has finished its computation, use &lt;a href=&quot;#yield/2&quot;&gt;&lt;code&gt;yield/2&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Эта функция может быть вызвана только один раз для любой задачи. Если вы хотите иметь возможность проверять несколько раз, завершила ли длительная задача свое вычисление, используйте вместо этого &lt;a href=&quot;#yield/2&quot;&gt; &lt;code&gt;yield/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dbc62789df38c8a43882a7041f6f112d727b0b2b" translate="yes" xml:space="preserve">
          <source>This function can only be called once for any given task. If you want to be able to check multiple times if a long-running task has finished its computation, use &lt;a href=&quot;#yield_many/2&quot;&gt;&lt;code&gt;yield_many/2&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Эта функция может быть вызвана только один раз для любой задачи. Если вы хотите иметь возможность проверять несколько раз, завершила ли длительная задача свое вычисление, используйте вместо этого &lt;a href=&quot;#yield_many/2&quot;&gt; &lt;code&gt;yield_many/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1236468bd1c1382c4248a39818bd66a17820a8e1" translate="yes" xml:space="preserve">
          <source>This function can only be used on modules that have not yet been compiled.</source>
          <target state="translated">Эта функция может быть использована только на еще не скомпилированных модулях.</target>
        </trans-unit>
        <trans-unit id="f3167d5a749467583b4064a26d582340a4353d73" translate="yes" xml:space="preserve">
          <source>This function can only be used on modules that have not yet been compiled. Use &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#function_exported?/3&quot;&gt;&lt;code&gt;Kernel.function_exported?/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#macro_exported?/3&quot;&gt;&lt;code&gt;Kernel.macro_exported?/3&lt;/code&gt;&lt;/a&gt; to check for public functions and macros respectively in compiled modules.</source>
          <target state="translated">Эта функция может использоваться только с модулями, которые еще не были скомпилированы. Используйте &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#function_exported?/3&quot;&gt; &lt;code&gt;Kernel.function_exported?/3&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#macro_exported?/3&quot;&gt; &lt;code&gt;Kernel.macro_exported?/3&lt;/code&gt; &lt;/a&gt; для проверки общедоступных функций и макросов соответственно в скомпилированных модулях.</target>
        </trans-unit>
        <trans-unit id="98e8c080a62ccf76ac34e7992cc0abb94cb3247b" translate="yes" xml:space="preserve">
          <source>This function can only be used on modules that have not yet been compiled. Use &lt;a href=&quot;kernel#function_exported?/3&quot;&gt;&lt;code&gt;Kernel.function_exported?/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;kernel#macro_exported?/3&quot;&gt;&lt;code&gt;Kernel.macro_exported?/3&lt;/code&gt;&lt;/a&gt; to check for public functions and macros respectively in compiled modules.</source>
          <target state="translated">Эта функция может использоваться только с модулями, которые еще не были скомпилированы. Используйте &lt;a href=&quot;kernel#function_exported?/3&quot;&gt; &lt;code&gt;Kernel.function_exported?/3&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;kernel#macro_exported?/3&quot;&gt; &lt;code&gt;Kernel.macro_exported?/3&lt;/code&gt; &lt;/a&gt; для проверки общедоступных функций и макросов соответственно в скомпилированных модулях.</target>
        </trans-unit>
        <trans-unit id="bf1f12a9ef0b2d87e6b97c45dc8af653b0c41485" translate="yes" xml:space="preserve">
          <source>This function can only be used on modules that have not yet been compiled. Use the &lt;a href=&quot;#c:__info__/1&quot;&gt;&lt;code&gt;Module.__info__/1&lt;/code&gt;&lt;/a&gt; callback to get all persisted attributes, or &lt;a href=&quot;https://hexdocs.pm/elixir/Code.html#fetch_docs/1&quot;&gt;&lt;code&gt;Code.fetch_docs/1&lt;/code&gt;&lt;/a&gt; to retrieve all documentation related attributes in compiled modules.</source>
          <target state="translated">Эта функция может использоваться только с модулями, которые еще не были скомпилированы. Используйте обратный вызов &lt;a href=&quot;#c:__info__/1&quot;&gt; &lt;code&gt;Module.__info__/1&lt;/code&gt; &lt;/a&gt; для получения всех сохраненных атрибутов или &lt;a href=&quot;https://hexdocs.pm/elixir/Code.html#fetch_docs/1&quot;&gt; &lt;code&gt;Code.fetch_docs/1&lt;/code&gt; &lt;/a&gt; для получения всех атрибутов, связанных с документацией, в скомпилированных модулях.</target>
        </trans-unit>
        <trans-unit id="fd3fe0cfc1b1ddd655c5e5aa49bdc3d3f6ab9cce" translate="yes" xml:space="preserve">
          <source>This function can only be used on modules that have not yet been compiled. Use the &lt;a href=&quot;#c:__info__/1&quot;&gt;&lt;code&gt;Module.__info__/1&lt;/code&gt;&lt;/a&gt; callback to get the public functions and macros in compiled modules.</source>
          <target state="translated">Эта функция может использоваться только с модулями, которые еще не были скомпилированы. Используйте обратный вызов &lt;a href=&quot;#c:__info__/1&quot;&gt; &lt;code&gt;Module.__info__/1&lt;/code&gt; &lt;/a&gt; чтобы получить общедоступные функции и макросы в скомпилированных модулях.</target>
        </trans-unit>
        <trans-unit id="b999fb0a29efbf4b7d7e63844d3c5a01d70c5786" translate="yes" xml:space="preserve">
          <source>This function can only be used on modules that have not yet been compiled. Use the &lt;a href=&quot;module#c:__info__/1&quot;&gt;&lt;code&gt;Module.__info__/1&lt;/code&gt;&lt;/a&gt; callback to get all persisted attributes, or &lt;a href=&quot;code#fetch_docs/1&quot;&gt;&lt;code&gt;Code.fetch_docs/1&lt;/code&gt;&lt;/a&gt; to retrieve all documentation related attributes in compiled modules.</source>
          <target state="translated">Эта функция может использоваться только с модулями, которые еще не были скомпилированы. Используйте обратный вызов &lt;a href=&quot;module#c:__info__/1&quot;&gt; &lt;code&gt;Module.__info__/1&lt;/code&gt; &lt;/a&gt; чтобы получить все сохраненные атрибуты, или &lt;a href=&quot;code#fetch_docs/1&quot;&gt; &lt;code&gt;Code.fetch_docs/1&lt;/code&gt; ,&lt;/a&gt; чтобы получить все атрибуты, связанные с документацией, в скомпилированных модулях.</target>
        </trans-unit>
        <trans-unit id="8efbd3ec7525b3bf67461748ab16a84e708bda9c" translate="yes" xml:space="preserve">
          <source>This function can only be used on modules that have not yet been compiled. Use the &lt;a href=&quot;module#c:__info__/1&quot;&gt;&lt;code&gt;Module.__info__/1&lt;/code&gt;&lt;/a&gt; callback to get the public functions and macros in compiled modules.</source>
          <target state="translated">Эта функция может использоваться только с модулями, которые еще не были скомпилированы. Используйте обратный вызов &lt;a href=&quot;module#c:__info__/1&quot;&gt; &lt;code&gt;Module.__info__/1&lt;/code&gt; &lt;/a&gt; чтобы получить общедоступные функции и макросы в скомпилированных модулях.</target>
        </trans-unit>
        <trans-unit id="4d5f5ab7615681bbf6fd8b48511d63b244920517" translate="yes" xml:space="preserve">
          <source>This function changes the current working directory and loads the project at the given directory onto the project stack.</source>
          <target state="translated">Эта функция изменяет текущую рабочую директорию и загружает проект из данной директории в стек проекта.</target>
        </trans-unit>
        <trans-unit id="8e3b67a18d5ef72f20a07d2887c95146e1126e8b" translate="yes" xml:space="preserve">
          <source>This function checks if &lt;code&gt;map_set1&lt;/code&gt; is a subset of &lt;code&gt;map_set2&lt;/code&gt;.</source>
          <target state="translated">Эта функция проверяет, является ли &lt;code&gt;map_set1&lt;/code&gt; подмножеством &lt;code&gt;map_set2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2d91333f4d34514a5b0456ce852915cb7c3b1bf" translate="yes" xml:space="preserve">
          <source>This function could also receive &lt;code&gt;:restart&lt;/code&gt; and &lt;code&gt;:shutdown&lt;/code&gt; as options but those two options have been deprecated and it is now preferred to give them directly to &lt;code&gt;start_child&lt;/code&gt; and &lt;code&gt;async&lt;/code&gt;.</source>
          <target state="translated">Эта функция также может получать параметры &lt;code&gt;:restart&lt;/code&gt; и &lt;code&gt;:shutdown&lt;/code&gt; , но эти два параметра устарели, и теперь предпочтительнее передавать их напрямую &lt;code&gt;start_child&lt;/code&gt; и &lt;code&gt;async&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff81d1869547c10033febe62aa38e4cdb8f5c51e" translate="yes" xml:space="preserve">
          <source>This function discards all formatting of the original code.</source>
          <target state="translated">Эта функция отбрасывает все форматирование исходного кода.</target>
        </trans-unit>
        <trans-unit id="bc64919f284870e1f397d0b40b0bdb1f6bff9e2a" translate="yes" xml:space="preserve">
          <source>This function does not load the protocol at any point nor loads the new bytecode for the compiled module. However each implementation must be available and it will be loaded.</source>
          <target state="translated">Эта функция ни в какой момент не загружает протокол и не загружает новый байткод для скомпилированного модуля.Однако каждая реализация должна быть доступна и будет загружена.</target>
        </trans-unit>
        <trans-unit id="5e9ba48e0ab714ebacb38f83050628f3e221fabd" translate="yes" xml:space="preserve">
          <source>This function does not query the file system, so it assumes no symlinks between the paths.</source>
          <target state="translated">Эта функция не опрашивает файловую систему,поэтому не предполагает наличия сим-ссылок между путями.</target>
        </trans-unit>
        <trans-unit id="352c8d36738c6dbc1f9234ecd7c20913e38da8c4" translate="yes" xml:space="preserve">
          <source>This function does not support regular expressions by design. When using regular expressions, it is often more efficient to have the regular expressions traverse the string at once than in parts, like this function does.</source>
          <target state="translated">Эта функция не поддерживает регулярные выражения по замыслу.При использовании регулярных выражений часто бывает эффективнее,если регулярные выражения пересекают строку сразу,чем по частям,как это делает эта функция.</target>
        </trans-unit>
        <trans-unit id="e8a6e9d8eb826748ee60c4f58dedbbe4f6cb4a1b" translate="yes" xml:space="preserve">
          <source>This function does nothing if the given directory already exists; in this case, it still logs the directory creation.</source>
          <target state="translated">Эта функция ничего не делает,если данный каталог уже существует;в этом случае она все равно регистрирует создание каталога.</target>
        </trans-unit>
        <trans-unit id="36b23a290c43ebbc586e10e0e06f96b58b15d87c" translate="yes" xml:space="preserve">
          <source>This function expects a valid Elixir AST, also known as quoted expression, as argument. If you would like to &lt;code&gt;unquote&lt;/code&gt; any value, such as a map or a four-element tuple, you should call &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.html#escape/1&quot;&gt;&lt;code&gt;Macro.escape/1&lt;/code&gt;&lt;/a&gt; before unquoting.</source>
          <target state="translated">Эта функция ожидает допустимый AST Elixir, также известный как выражение в кавычках, в качестве аргумента. Если вы хотите снять &lt;code&gt;unquote&lt;/code&gt; какого-либо значения, такого как карта или четырехэлементный кортеж, вы должны вызвать &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.html#escape/1&quot;&gt; &lt;code&gt;Macro.escape/1&lt;/code&gt; &lt;/a&gt; перед снятием кавычек.</target>
        </trans-unit>
        <trans-unit id="df30bac7bb7c4cc8e50dfd93b53e8ccc88b71e0c" translate="yes" xml:space="preserve">
          <source>This function expects a valid Elixir AST, also known as quoted expression, as argument. If you would like to &lt;code&gt;unquote&lt;/code&gt; any value, such as a map or a four-element tuple, you should call &lt;a href=&quot;macro#escape/1&quot;&gt;&lt;code&gt;Macro.escape/1&lt;/code&gt;&lt;/a&gt; before unquoting.</source>
          <target state="translated">Эта функция ожидает в качестве аргумента допустимый AST Elixir, также известный как выражение в кавычках. Если вы хотите &lt;code&gt;unquote&lt;/code&gt; какого-либо значения, такого как карта или четырехэлементный кортеж, вы должны вызвать &lt;a href=&quot;macro#escape/1&quot;&gt; &lt;code&gt;Macro.escape/1&lt;/code&gt; &lt;/a&gt; перед снятием кавычек.</target>
        </trans-unit>
        <trans-unit id="9f41d20e5f7f0240b4127af0359d8f266f1d505e" translate="yes" xml:space="preserve">
          <source>This function expects the &lt;code&gt;id&lt;/code&gt; in the child specification. For example:</source>
          <target state="translated">Эта функция ожидает &lt;code&gt;id&lt;/code&gt; в дочерней спецификации. Например:</target>
        </trans-unit>
        <trans-unit id="0a24e422135d3a72abf7a20c0e4887299173a50a" translate="yes" xml:space="preserve">
          <source>This function expects the file to be closed with success, which is usually the case unless the &lt;code&gt;:delayed_write&lt;/code&gt; option is given. For this reason, we do not recommend passing &lt;code&gt;:delayed_write&lt;/code&gt; to this function.</source>
          <target state="translated">Эта функция ожидает, что файл будет успешно закрыт, что обычно бывает, если не &lt;code&gt;:delayed_write&lt;/code&gt; опция : delayed_write . По этой причине мы не рекомендуем передавать &lt;code&gt;:delayed_write&lt;/code&gt; этой функции.</target>
        </trans-unit>
        <trans-unit id="295cf4a022ae9886df00b43f0a66cd0e9487ce78" translate="yes" xml:space="preserve">
          <source>This function fails unless &lt;code&gt;enumerable&lt;/code&gt; is or can be converted into a list of tuples with &lt;em&gt;exactly&lt;/em&gt; two elements in each tuple.</source>
          <target state="translated">Эта функция завершается ошибкой, если &lt;code&gt;enumerable&lt;/code&gt; не является или не может быть преобразован в список кортежей с &lt;em&gt;ровно&lt;/em&gt; двумя элементами в каждом кортеже.</target>
        </trans-unit>
        <trans-unit id="2b4e5979f3e77e3276f95ef316da429597fdbf6e" translate="yes" xml:space="preserve">
          <source>This function follows symbolic links, so if a symbolic link points to a directory, &lt;code&gt;true&lt;/code&gt; is returned.</source>
          <target state="translated">Эта функция следует по символическим ссылкам, поэтому, если символическая ссылка указывает на каталог, возвращается &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3644ab39c8ba48b5055b8839db30ad7f73881153" translate="yes" xml:space="preserve">
          <source>This function follows symbolic links, so if a symbolic link points to a regular file, &lt;code&gt;true&lt;/code&gt; is returned.</source>
          <target state="translated">Эта функция следует по символическим ссылкам, поэтому, если символическая ссылка указывает на обычный файл, возвращается &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b2249c2f938c82b4201fa3098032739f601917fd" translate="yes" xml:space="preserve">
          <source>This function is called after &lt;a href=&quot;#start/2&quot;&gt;&lt;code&gt;start/2&lt;/code&gt;&lt;/a&gt; finishes but before &lt;a href=&quot;#start/2&quot;&gt;&lt;code&gt;Application.start/2&lt;/code&gt;&lt;/a&gt; returns. It will be called once for every start phase defined in the application's (and any included applications') specification, in the order they are listed in.</source>
          <target state="translated">Эта функция вызывается после завершения &lt;a href=&quot;#start/2&quot;&gt; &lt;code&gt;start/2&lt;/code&gt; ,&lt;/a&gt; но до возврата &lt;a href=&quot;#start/2&quot;&gt; &lt;code&gt;Application.start/2&lt;/code&gt; &lt;/a&gt; . Он будет вызываться один раз для каждой фазы запуска, определенной в спецификации приложения (и любых включенных приложений), в том порядке, в котором они перечислены.</target>
        </trans-unit>
        <trans-unit id="ffa8e1b3e795c072d918d9fb7e14d1f0f556146a" translate="yes" xml:space="preserve">
          <source>This function is called after &lt;a href=&quot;#start/2&quot;&gt;&lt;code&gt;start/2&lt;/code&gt;&lt;/a&gt; finishes but before &lt;a href=&quot;application#start/2&quot;&gt;&lt;code&gt;Application.start/2&lt;/code&gt;&lt;/a&gt; returns. It will be called once for every start phase defined in the application's (and any included applications') specification, in the order they are listed in.</source>
          <target state="translated">Эта функция вызывается после завершения &lt;a href=&quot;#start/2&quot;&gt; &lt;code&gt;start/2&lt;/code&gt; ,&lt;/a&gt; но до возврата &lt;a href=&quot;application#start/2&quot;&gt; &lt;code&gt;Application.start/2&lt;/code&gt; &lt;/a&gt; . Он будет вызываться один раз для каждой фазы запуска, определенной в спецификации приложения (и любых включенных приложений), в том порядке, в котором они перечислены.</target>
        </trans-unit>
        <trans-unit id="324f00c4d8269119ff0a84cb2a42e9f018297cf4" translate="yes" xml:space="preserve">
          <source>This function is called after an application has been stopped, i.e., after its supervision tree has been stopped. It should do the opposite of what the &lt;a href=&quot;#c:start/2&quot;&gt;&lt;code&gt;start/2&lt;/code&gt;&lt;/a&gt; callback did, and should perform any necessary cleanup. The return value of this callback is ignored.</source>
          <target state="translated">Эта функция вызывается после остановки приложения, т. Е. После остановки его дерева наблюдения. Он должен делать противоположное тому, что делал обратный вызов &lt;a href=&quot;#c:start/2&quot;&gt; &lt;code&gt;start/2&lt;/code&gt; &lt;/a&gt; , и должен выполнять любую необходимую очистку. Возвращаемое значение этого обратного вызова игнорируется.</target>
        </trans-unit>
        <trans-unit id="d1e69bba301a1e9a02d953f1b325981a44e10b03" translate="yes" xml:space="preserve">
          <source>This function is called before the top-level supervisor is terminated. It receives the state returned by &lt;a href=&quot;#c:start/2&quot;&gt;&lt;code&gt;start/2&lt;/code&gt;&lt;/a&gt;, if it did, or &lt;code&gt;[]&lt;/code&gt; otherwise. The return value is later passed to &lt;a href=&quot;#c:stop/1&quot;&gt;&lt;code&gt;stop/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта функция вызывается перед завершением работы супервизора верхнего уровня. Он получает состояние, возвращенное параметром &lt;a href=&quot;#c:start/2&quot;&gt; &lt;code&gt;start/2&lt;/code&gt; &lt;/a&gt; , если это так, или &lt;code&gt;[]&lt;/code&gt; в противном случае. Возвращаемое значение позже передается в &lt;a href=&quot;#c:stop/1&quot;&gt; &lt;code&gt;stop/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9100c3a64f894ac6d7e9c96487fe6fde6165a293" translate="yes" xml:space="preserve">
          <source>This function is called when an application is started using &lt;a href=&quot;#start/2&quot;&gt;&lt;code&gt;Application.start/2&lt;/code&gt;&lt;/a&gt; (and functions on top of that, such as &lt;a href=&quot;#ensure_started/2&quot;&gt;&lt;code&gt;Application.ensure_started/2&lt;/code&gt;&lt;/a&gt;). This function should start the top-level process of the application (which should be the top supervisor of the application's supervision tree if the application follows the OTP design principles around supervision).</source>
          <target state="translated">Эта функция вызывается, когда приложение запускается с использованием &lt;a href=&quot;#start/2&quot;&gt; &lt;code&gt;Application.start/2&lt;/code&gt; &lt;/a&gt; (и дополнительных функций, таких как &lt;a href=&quot;#ensure_started/2&quot;&gt; &lt;code&gt;Application.ensure_started/2&lt;/code&gt; &lt;/a&gt; ). Эта функция должна запускать процесс верхнего уровня приложения (который должен быть верхним супервизором дерева надзора за приложением, если приложение следует принципам проектирования OTP в отношении надзора).</target>
        </trans-unit>
        <trans-unit id="82b44336c3cb3815e176b242c09b89fad73c5747" translate="yes" xml:space="preserve">
          <source>This function is called when an application is started using &lt;a href=&quot;application#start/2&quot;&gt;&lt;code&gt;Application.start/2&lt;/code&gt;&lt;/a&gt; (and functions on top of that, such as &lt;a href=&quot;application#ensure_started/2&quot;&gt;&lt;code&gt;Application.ensure_started/2&lt;/code&gt;&lt;/a&gt;). This function should start the top-level process of the application (which should be the top supervisor of the application's supervision tree if the application follows the OTP design principles around supervision).</source>
          <target state="translated">Эта функция вызывается, когда приложение запускается с использованием &lt;a href=&quot;application#start/2&quot;&gt; &lt;code&gt;Application.start/2&lt;/code&gt; &lt;/a&gt; (и дополнительных функций, таких как &lt;a href=&quot;application#ensure_started/2&quot;&gt; &lt;code&gt;Application.ensure_started/2&lt;/code&gt; &lt;/a&gt; ). Эта функция должна запускать процесс верхнего уровня приложения (который должен быть верхним супервизором дерева надзора за приложением, если приложение следует принципам проектирования OTP в отношении надзора).</target>
        </trans-unit>
        <trans-unit id="6397213a49d0900b8102d7287a15cef482e32621" translate="yes" xml:space="preserve">
          <source>This function is commonly used on sigil implementations (like &lt;code&gt;~r&lt;/code&gt;, &lt;code&gt;~s&lt;/code&gt; and others) which receive a raw, unescaped string.</source>
          <target state="translated">Эта функция обычно используется в реализациях сигил (например, &lt;code&gt;~r&lt;/code&gt; , &lt;code&gt;~s&lt;/code&gt; и других), которые получают необработанную строку без экранирования.</target>
        </trans-unit>
        <trans-unit id="d995248df30d102cca47a9415c594b82af5a6b24" translate="yes" xml:space="preserve">
          <source>This function is deprecated in favor of register&lt;em&gt;test/6 which performs better under tight loops by avoiding `&lt;em&gt;_ENV&lt;/em&gt;&lt;/em&gt;`.</source>
          <target state="translated">Эта функция устарела и &lt;em&gt;&lt;em&gt;заменена&lt;/em&gt;&lt;/em&gt; регистром &lt;em&gt;test / 6, который лучше работает в жестких циклах, избегая использования &quot; &lt;em&gt;_ENV&quot;&lt;/em&gt;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="c1d006a8fc94dd9c7e1ba97fca6cd955efbe08aa" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Code.get_docs/2 always returns nil as its outdated documentation is no longer stored on BEAM files. Use Code.fetch_docs/1 instead.</source>
          <target state="translated">Эта функция устарела.Code.get_docs/2 всегда возвращает ноль,так как его устаревшая документация больше не хранится в файлах BEAM.Вместо этого используйте Code.fetch_docs/1.</target>
        </trans-unit>
        <trans-unit id="d817e277c636af5ee8696b4df5a417a3f80ca798" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use :unicode.characters_to_nfc_binary/1 or :unicode.characters_to_nfd_binary/1 instead.</source>
          <target state="translated">Эта функция устарела.Вместо этого используйте :unicode.characters_to_nfc_binary/1 или :unicode.characters_to_nfd_binary/1.</target>
        </trans-unit>
        <trans-unit id="60a45058b6790fa9239d39a09ba1cdda7435ef0c" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use Application.put_all_env/2 instead.</source>
          <target state="translated">Эта функция устарела.Вместо этого используйте Application.put_all_env/2.</target>
        </trans-unit>
        <trans-unit id="0b23beae139d2fe3b8dd9e0473697f46a6bf3126" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use Config.Reader.merge/2 instead.</source>
          <target state="translated">Эта функция устарела.Вместо этого используйте Config.Reader.merge/2.</target>
        </trans-unit>
        <trans-unit id="86105be5ebb65f8fc111c1f572d090b08b31bb9f" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use Config.Reader.read!/2 instead.</source>
          <target state="translated">Эта функция устарела.Вместо этого используйте Config.Reader.read!/2.</target>
        </trans-unit>
        <trans-unit id="32063e9041204452ecaa501f77654e27a25810d5" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use Config.Reader.read_imports!/2 instead.</source>
          <target state="translated">Эта функция устарела.Вместо этого используйте Config.Reader.read_imports!/2.</target>
        </trans-unit>
        <trans-unit id="6d197dc51c7a88c8b078c1ba4ae70a662b56ba4a" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use File.cwd!/0 instead.</source>
          <target state="translated">Эта функция устарела.Вместо этого используйте File.cwd!/0.</target>
        </trans-unit>
        <trans-unit id="68131068aaa063f7af71e9caaedd8601eae221d0" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use File.cwd/0 instead.</source>
          <target state="translated">Эта функция устарела.Вместо этого используйте File.cwd/0.</target>
        </trans-unit>
        <trans-unit id="0d830aeb45447ac17882f0a978208672f2f7513b" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use Kernel.is_exception/1 instead.</source>
          <target state="translated">Эта функция устарела.Вместо этого используйте Kernel.is_exception/1.</target>
        </trans-unit>
        <trans-unit id="ad1c80a22d94657b35b167d9b5a2864907218fe0" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use Kernel.is_struct/2 or pattern match on %Regex{} instead.</source>
          <target state="translated">Эта функция устарела.Вместо этого используйте Kernel.is_struct/2 или сравнение шаблонов на %Regex{}.</target>
        </trans-unit>
        <trans-unit id="d9e5b31b2e69678e54278c031112af02d71d6009" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use Mix.Project.compile_path/1 instead.</source>
          <target state="translated">Эта функция устарела.Вместо этого используйте Mix.Project.compile_path/1.</target>
        </trans-unit>
        <trans-unit id="276ba4e5a68c3327954a5805cb6a3557ffa0219d" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use System.pid/0 instead.</source>
          <target state="translated">Эта функция устарела.Вместо этого используйте System.pid/0.</target>
        </trans-unit>
        <trans-unit id="f81151223ea682b301965bb3a3e0dd982cec6acb" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use __STACKTRACE__ instead.</source>
          <target state="translated">Эта функция устарела.Используйте __STACKTRACE__вместо нее.</target>
        </trans-unit>
        <trans-unit id="135f175d7851a47b5eed88f4c873758b05277e6c" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use compilation tracers described in the Code module.</source>
          <target state="translated">Эта функция устарела.Используйте трекеры компиляции,описанные в модуле Code.</target>
        </trans-unit>
        <trans-unit id="a03218696b1f2f17e92328d8d93708ef4f7e2fab" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use maps and the Map module instead.</source>
          <target state="translated">Эта функция устарела.Вместо этого используйте карты и модуль &quot;Карта&quot;.</target>
        </trans-unit>
        <trans-unit id="5383727db2a4be3cae258dc51e6f2efc4de4ed67" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use register_test/6 instead.</source>
          <target state="translated">Эта функция устарела.Вместо этого используйте register_test/6.</target>
        </trans-unit>
        <trans-unit id="294ad166bf50a35c62c560f0efcfd8102e974b3c" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use the Config module instead.</source>
          <target state="translated">Эта функция устарела.Вместо этого используйте модуль Config.</target>
        </trans-unit>
        <trans-unit id="afca0b7ebdad39b2deed844f934a667e8bfea571" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use the Map module for working with maps or the Keyword module for working with keyword lists.</source>
          <target state="translated">Эта функция устарела.Используйте модуль &quot;Карты&quot; для работы с картами или модуль &quot;Ключевые слова&quot; для работы со списками ключевых слов.</target>
        </trans-unit>
        <trans-unit id="9a82ec0a465ee3ffdfcf230d76d58430e9467641" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use the MapSet module for working with sets.</source>
          <target state="translated">Эта функция устарела.Для работы с наборами используйте модуль MapSet.</target>
        </trans-unit>
        <trans-unit id="01a53758d90cccf848faf6930295f5427dfb10e9" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use the MapSet module instead.</source>
          <target state="translated">Эта функция устарела.Вместо этого используйте модуль MapSet.</target>
        </trans-unit>
        <trans-unit id="bc379a87241e5a13ab44a63bf4ea91b193d573b0" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use the new child specifications outlined in the Supervisor module instead.</source>
          <target state="translated">Эта функция устарела.Вместо этого используйте новые спецификации для детей,описанные в модуле Supervisor.</target>
        </trans-unit>
        <trans-unit id="03ea43b93839fafbcde7b68af462e5f9eed5a8d0" translate="yes" xml:space="preserve">
          <source>This function is meant to be used for development and debugging purposes. Do not depend on it in production code.</source>
          <target state="translated">Данная функция предназначена для использования в целях разработки и отладки.Не зависеть от нее в производственном коде.</target>
        </trans-unit>
        <trans-unit id="a44ba9065763e466dc65d136dacf651b48b4c551" translate="yes" xml:space="preserve">
          <source>This function is often used to set an &lt;code&gt;:id&lt;/code&gt; option when the same module needs to be started multiple times in the supervision tree:</source>
          <target state="translated">Эта функция часто используется для установки опции &lt;code&gt;:id&lt;/code&gt; , когда один и тот же модуль нужно запускать несколько раз в дереве контроля:</target>
        </trans-unit>
        <trans-unit id="8b1fd4e59486849679c33280edfff500c42ca784" translate="yes" xml:space="preserve">
          <source>This function is often used with &lt;a href=&quot;#run/1&quot;&gt;&lt;code&gt;run/1&lt;/code&gt;&lt;/a&gt; since any evaluation is delayed until the stream is executed. See &lt;a href=&quot;#run/1&quot;&gt;&lt;code&gt;run/1&lt;/code&gt;&lt;/a&gt; for an example.</source>
          <target state="translated">Эта функция часто используется с &lt;a href=&quot;#run/1&quot;&gt; &lt;code&gt;run/1&lt;/code&gt; ,&lt;/a&gt; так как любая оценка откладывается до выполнения потока. См. Пример в &lt;a href=&quot;#run/1&quot;&gt; &lt;code&gt;run/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35db107573e34332f733e95b887f5793867baa7f" translate="yes" xml:space="preserve">
          <source>This function is only available for modules being compiled.</source>
          <target state="translated">Эта функция доступна только для компилируемых модулей.</target>
        </trans-unit>
        <trans-unit id="104264e00ba2e4cbd7fe3847934c61231f453ccd" translate="yes" xml:space="preserve">
          <source>This function is rarely invoked in practice. Instead, nodes are named and started via the command line by using the &lt;code&gt;--sname&lt;/code&gt; and &lt;code&gt;--name&lt;/code&gt; flags. If you need to use this function to dynamically name a node, please make sure the &lt;code&gt;epmd&lt;/code&gt; operating system process is running by calling &lt;code&gt;epmd -daemon&lt;/code&gt;.</source>
          <target state="translated">На практике эта функция используется редко. Вместо этого узлы именуются и запускаются через командную строку с использованием флагов &lt;code&gt;--sname&lt;/code&gt; и &lt;code&gt;--name&lt;/code&gt; . Если вам нужно использовать эту функцию для динамического &lt;code&gt;epmd&lt;/code&gt; имени узлу, убедитесь, что процесс операционной системы epmd запущен, вызвав &lt;code&gt;epmd -daemon&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6bf228951da57a994d903de6610ec9973c50adc" translate="yes" xml:space="preserve">
          <source>This function is used by &lt;a href=&quot;#container_doc/6&quot;&gt;&lt;code&gt;container_doc/6&lt;/code&gt;&lt;/a&gt; and friends to the maximum number of entries on the same line.</source>
          <target state="translated">Эта функция используется &lt;a href=&quot;#container_doc/6&quot;&gt; &lt;code&gt;container_doc/6&lt;/code&gt; &lt;/a&gt; и друзьями для максимального количества записей в одной строке.</target>
        </trans-unit>
        <trans-unit id="4934d4902c08909612efec0de002f5df60337c47" translate="yes" xml:space="preserve">
          <source>This function is useful for development and debugging when you have code that has been compiled or updated locally that you want to run on other nodes.</source>
          <target state="translated">Эта функция полезна для разработки и отладки,когда у вас есть код,который был скомпилирован или обновлен локально,и который вы хотите запустить на других узлах.</target>
        </trans-unit>
        <trans-unit id="50108ad28c85db6aa26c7746481f7a06145abb10" translate="yes" xml:space="preserve">
          <source>This function is useful for dynamically creating and updating structs, as well as for converting maps to structs; in the latter case, just inserting the appropriate &lt;code&gt;:__struct__&lt;/code&gt; field into the map may not be enough and &lt;a href=&quot;#struct/2&quot;&gt;&lt;code&gt;struct/2&lt;/code&gt;&lt;/a&gt; should be used instead.</source>
          <target state="translated">Эта функция полезна для динамического создания и обновления структур, а также для преобразования карт в структуры; в последнем случае простой вставки соответствующего поля &lt;code&gt;:__struct__&lt;/code&gt; в карту может быть недостаточно, и вместо этого следует использовать &lt;a href=&quot;#struct/2&quot;&gt; &lt;code&gt;struct/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c5385bb3c5cc1848788f9b3bfe82e294efa3644f" translate="yes" xml:space="preserve">
          <source>This function is useful in case you have templates but you want to precompile inside a module for speed.</source>
          <target state="translated">Эта функция полезна в том случае,если у вас есть шаблоны,но вы хотите прекомпилировать внутри модуля для скорости.</target>
        </trans-unit>
        <trans-unit id="d4f1c9110eb148d436155bff7b34df88e2134afb" translate="yes" xml:space="preserve">
          <source>This function is useful in case you want to compute the value to put under &lt;code&gt;key&lt;/code&gt; only if &lt;code&gt;key&lt;/code&gt; is not already present (e.g., the value is expensive to calculate or generally difficult to setup and teardown again).</source>
          <target state="translated">Эта функция полезна в случае, если вы хотите вычислить значение, которое будет помещено под &lt;code&gt;key&lt;/code&gt; только если &lt;code&gt;key&lt;/code&gt; еще не присутствует (например, вычисление значения дорого или, как правило, сложно снова настроить и удалить).</target>
        </trans-unit>
        <trans-unit id="e5bb11de88319e8025850f4eadfe13c588a0a62f" translate="yes" xml:space="preserve">
          <source>This function is useful in case you want to compute the value to put under &lt;code&gt;key&lt;/code&gt; only if &lt;code&gt;key&lt;/code&gt; is not already present, as for example, when the value is expensive to calculate or generally difficult to setup and teardown again.</source>
          <target state="translated">Эта функция полезна в случае, если вы хотите вычислить значение, которое будет помещено под &lt;code&gt;key&lt;/code&gt; только если &lt;code&gt;key&lt;/code&gt; еще не присутствует, как, например, когда вычисление значения дорого или, как правило, сложно снова настроить и удалить.</target>
        </trans-unit>
        <trans-unit id="bf89a2dec2302779e475a219a3cc56e86137d9f9" translate="yes" xml:space="preserve">
          <source>This function is useful when there is a need to retrieve the current value (or something calculated in function of the current value) and update it at the same time. For example, it could be used to read the current age of a user while increasing it by one in one pass:</source>
          <target state="translated">Эта функция полезна,когда необходимо получить текущее значение (или что-то вычисленное в функции текущего значения)и одновременно обновить его.Например,она может быть использована для чтения текущего возраста пользователя,увеличивая его на один проход:</target>
        </trans-unit>
        <trans-unit id="68a1bac27fa5baaa472b5537d1c8fee1ec1e9478" translate="yes" xml:space="preserve">
          <source>This function is useful when you know the bytecode for module has been updated in the file system and you want to tell the VM to load it.</source>
          <target state="translated">Эта функция полезна,когда вы знаете,что байткод для модуля был обновлен в файловой системе,и вы хотите сказать ВМ,чтобы она его загрузила.</target>
        </trans-unit>
        <trans-unit id="80a765f43bfbc2222f8ba2acffb613f97fc1ff91" translate="yes" xml:space="preserve">
          <source>This function is usually used in compilation tasks to trigger a full recompilation whenever such configuration files change.</source>
          <target state="translated">Эта функция обычно используется в задачах компиляции для запуска полной перекомпиляции всякий раз,когда такие конфигурационные файлы изменяются.</target>
        </trans-unit>
        <trans-unit id="5161d32c18b7b4c986062d2c9d65d697f139b8ce" translate="yes" xml:space="preserve">
          <source>This function is usually used in compilation tasks to trigger a full recompilation whenever such configuration files change. For this reason, the mtime is cached to avoid file system lookups.</source>
          <target state="translated">Эта функция обычно используется в задачах компиляции для запуска полной перекомпиляции всякий раз,когда такие конфигурационные файлы изменяются.По этой причине mtime кэшируется,чтобы избежать поиска файловой системы.</target>
        </trans-unit>
        <trans-unit id="79351219ceeb1dfd5ceb68c4d1517bb1d53f3be9" translate="yes" xml:space="preserve">
          <source>This function keeps OTP semantics regarding error reporting. If the reason is any other than &lt;code&gt;:normal&lt;/code&gt;, &lt;code&gt;:shutdown&lt;/code&gt; or &lt;code&gt;{:shutdown, _}&lt;/code&gt;, an error report is logged.</source>
          <target state="translated">Эта функция сохраняет семантику OTP в отношении отчетов об ошибках. Если причина любой другой , чем &lt;code&gt;:normal&lt;/code&gt; , &lt;code&gt;:shutdown&lt;/code&gt; или &lt;code&gt;{:shutdown, _}&lt;/code&gt; , отчет об ошибке записывается в журнал.</target>
        </trans-unit>
        <trans-unit id="9fb9a7593d63fc692737aa5ebbecdecf78a06b53" translate="yes" xml:space="preserve">
          <source>This function keeps OTP semantics regarding error reporting. If the reason is any other than &lt;code&gt;:normal&lt;/code&gt;, &lt;code&gt;:shutdown&lt;/code&gt; or &lt;code&gt;{:shutdown, _}&lt;/code&gt;, an error report will be logged.</source>
          <target state="translated">Эта функция сохраняет семантику OTP в отношении отчетов об ошибках. Если причина любой другой , чем &lt;code&gt;:normal&lt;/code&gt; , &lt;code&gt;:shutdown&lt;/code&gt; или &lt;code&gt;{:shutdown, _}&lt;/code&gt; , отчет об ошибке будет зарегистрирован.</target>
        </trans-unit>
        <trans-unit id="78ffeed4e3d53d08c6f8c5350cc948af11ad5cb9" translate="yes" xml:space="preserve">
          <source>This function looks up an executable program given its name using the environment variable PATH on Unix and Windows. It also considers the proper executable extension for each operating system, so for Windows it will try to lookup files with &lt;code&gt;.com&lt;/code&gt;, &lt;code&gt;.cmd&lt;/code&gt; or similar extensions.</source>
          <target state="translated">Эта функция ищет исполняемую программу по ее имени, используя переменную среды PATH в Unix и Windows. Он также учитывает правильное расширение исполняемого файла для каждой операционной системы, поэтому для Windows он будет пытаться искать файлы с расширениями &lt;code&gt;.com&lt;/code&gt; , &lt;code&gt;.cmd&lt;/code&gt; или аналогичными.</target>
        </trans-unit>
        <trans-unit id="f333cc8d70b1f8c9b88e75ba1e997bdd40b786ac" translate="yes" xml:space="preserve">
          <source>This function looks up an executable program given its name using the environment variable PATH on Windows and Unix-like operating systems. It also considers the proper executable extension for each operating system, so for Windows it will try to lookup files with &lt;code&gt;.com&lt;/code&gt;, &lt;code&gt;.cmd&lt;/code&gt; or similar extensions.</source>
          <target state="translated">Эта функция ищет исполняемую программу по ее имени, используя переменную среды PATH в Windows и Unix-подобных операционных системах. Он также учитывает правильное расширение исполняемого файла для каждой операционной системы, поэтому для Windows он будет пытаться искать файлы с расширениями &lt;code&gt;.com&lt;/code&gt; , &lt;code&gt;.cmd&lt;/code&gt; или аналогичными.</target>
        </trans-unit>
        <trans-unit id="5b2d601e721f14118337f53a36587c0e933c7a5a" translate="yes" xml:space="preserve">
          <source>This function maps each element of the &lt;code&gt;enumerable&lt;/code&gt; using the provided &lt;code&gt;mapper&lt;/code&gt; function. The enumerable is then sorted by the mapped elements using the &lt;code&gt;sorter&lt;/code&gt; function, which defaults to &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#%3C=/2&quot;&gt;&lt;code&gt;Kernel.&amp;lt;=/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта функция отображает каждый элемент &lt;code&gt;enumerable&lt;/code&gt; с помощью предоставленной функции &lt;code&gt;mapper&lt;/code&gt; . Затем перечисляемое сортируется по отображаемым элементам с помощью функции &lt;code&gt;sorter&lt;/code&gt; , которая по умолчанию имеет значение &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#%3C=/2&quot;&gt; &lt;code&gt;Kernel.&amp;lt;=/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="03c6c18f32c36e354994adeed127bb47604a29a4" translate="yes" xml:space="preserve">
          <source>This function maps each element of the &lt;code&gt;enumerable&lt;/code&gt; using the provided &lt;code&gt;mapper&lt;/code&gt; function. The enumerable is then sorted by the mapped elements using the &lt;code&gt;sorter&lt;/code&gt; function, which defaults to &lt;a href=&quot;kernel#%253C=/2&quot;&gt;&lt;code&gt;Kernel.&amp;lt;=/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта функция отображает каждый элемент &lt;code&gt;enumerable&lt;/code&gt; с помощью предоставленной функции &lt;code&gt;mapper&lt;/code&gt; . Затем перечисляемое сортируется по отображаемым элементам с помощью функции &lt;code&gt;sorter&lt;/code&gt; , которая по умолчанию имеет значение &lt;a href=&quot;kernel#%253C=/2&quot;&gt; &lt;code&gt;Kernel.&amp;lt;=/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="23713134a12e3df672b0e8ed70b6c1e947176852" translate="yes" xml:space="preserve">
          <source>This function may fail while copying files, in such cases, it will leave the destination directory in a dirty state, where file which have already been copied won't be removed.</source>
          <target state="translated">Эта функция может не работать при копировании файлов,в таких случаях она оставит целевой каталог в грязном состоянии,где уже скопированный файл не будет удален.</target>
        </trans-unit>
        <trans-unit id="fc53ec83419111665403d3184c5309cb3ac3114b" translate="yes" xml:space="preserve">
          <source>This function may return an error with an appropriate error tuple if the &lt;code&gt;child_id&lt;/code&gt; is not found, or if the current process is running or being restarted.</source>
          <target state="translated">Эта функция может вернуть ошибку с соответствующим кортежем ошибок, если &lt;code&gt;child_id&lt;/code&gt; не найден, или если текущий процесс запущен или перезапускается.</target>
        </trans-unit>
        <trans-unit id="8ae84d6b7d02c1f5e4d3d90e843aa4994fe5afbb" translate="yes" xml:space="preserve">
          <source>This function merges two URIs as per &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-5.2&quot;&gt;RFC 3986, section 5.2&lt;/a&gt;.</source>
          <target state="translated">Эта функция объединяет два URI в соответствии с &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-5.2&quot;&gt;RFC 3986, раздел 5.2&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="37485440bd71be8d2898fa309650b1d1cd41ee6d" translate="yes" xml:space="preserve">
          <source>This function must be invoked passing a keyword list. Each key in the keyword list can be accessed in the template using the &lt;code&gt;@&lt;/code&gt; macro.</source>
          <target state="translated">Эта функция должна быть вызвана с передачей списка ключевых слов. К каждому ключу в списке ключевых слов можно получить доступ в шаблоне с помощью макроса &lt;code&gt;@&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05add340c108b6747380b0569be39878bbcf49a1" translate="yes" xml:space="preserve">
          <source>This function mutes the &lt;code&gt;:console&lt;/code&gt; backend and captures any log messages sent to Logger from the calling processes. It is possible to ensure explicit log messages from other processes are captured by waiting for their exit or monitor signal.</source>
          <target state="translated">Эта функция отключает бэкэнд &lt;code&gt;:console&lt;/code&gt; и фиксирует все сообщения журнала, отправленные в Logger от вызывающих процессов. Можно обеспечить захват явных сообщений журнала от других процессов, ожидая их выхода или сигнала монитора.</target>
        </trans-unit>
        <trans-unit id="590e88bd007ad46708757dcaddaef35962698f85" translate="yes" xml:space="preserve">
          <source>This function only accepts floats and always returns a float. Use &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#round/1&quot;&gt;&lt;code&gt;Kernel.round/1&lt;/code&gt;&lt;/a&gt; if you want a function that accepts both floats and integers and always returns an integer.</source>
          <target state="translated">Эта функция принимает только числа с плавающей запятой и всегда возвращает число с плавающей запятой. Используйте &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#round/1&quot;&gt; &lt;code&gt;Kernel.round/1&lt;/code&gt; ,&lt;/a&gt; если вам нужна функция, которая принимает как числа с плавающей запятой, так и целые числа и всегда возвращает целое число.</target>
        </trans-unit>
        <trans-unit id="7249b2b7e8627d3ee0f960577e5cfe5cf5a1c42f" translate="yes" xml:space="preserve">
          <source>This function only accepts floats and always returns a float. Use &lt;a href=&quot;kernel#round/1&quot;&gt;&lt;code&gt;Kernel.round/1&lt;/code&gt;&lt;/a&gt; if you want a function that accepts both floats and integers and always returns an integer.</source>
          <target state="translated">Эта функция принимает только числа с плавающей запятой и всегда возвращает число с плавающей запятой. Используйте &lt;a href=&quot;kernel#round/1&quot;&gt; &lt;code&gt;Kernel.round/1&lt;/code&gt; ,&lt;/a&gt; если вам нужна функция, которая принимает как числа с плавающей запятой, так и целые числа и всегда возвращает целое число.</target>
        </trans-unit>
        <trans-unit id="50d8af487774d9f7e007fed31c88d7f628e11c28" translate="yes" xml:space="preserve">
          <source>This function only ever needs to store the last emitted element.</source>
          <target state="translated">Эта функция позволяет сохранить только последний излучаемый элемент.</target>
        </trans-unit>
        <trans-unit id="295eba0c064a53ae3a651500b18114cd09951154" translate="yes" xml:space="preserve">
          <source>This function only works if ANSI escape codes are enabled on the shell, which means this function is by default unavailable on Windows machines.</source>
          <target state="translated">Эта функция работает только в том случае,если в оболочке включены ANSI-эксклюзивные коды,что означает,что по умолчанию эта функция недоступна на машинах под управлением Windows.</target>
        </trans-unit>
        <trans-unit id="f8e779fa093dd3331e4911e8f1f5e060533eb427" translate="yes" xml:space="preserve">
          <source>This function produces the same result as the &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#++/2&quot;&gt;&lt;code&gt;Kernel.++/2&lt;/code&gt;&lt;/a&gt; operator for lists.</source>
          <target state="translated">Эта функция дает тот же результат, что и оператор &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#++/2&quot;&gt; &lt;code&gt;Kernel.++/2&lt;/code&gt; &lt;/a&gt; для списков.</target>
        </trans-unit>
        <trans-unit id="528389cc0cdba8ed58acc495892cfb708eb725e7" translate="yes" xml:space="preserve">
          <source>This function produces the same result as the &lt;a href=&quot;kernel#++/2&quot;&gt;&lt;code&gt;Kernel.++/2&lt;/code&gt;&lt;/a&gt; operator for lists.</source>
          <target state="translated">Эта функция дает тот же результат, что и оператор &lt;a href=&quot;kernel#++/2&quot;&gt; &lt;code&gt;Kernel.++/2&lt;/code&gt; &lt;/a&gt; для списков.</target>
        </trans-unit>
        <trans-unit id="2bd92c0ea07d00b8bd2fd96f2a2022d49efc3e5e" translate="yes" xml:space="preserve">
          <source>This function purges all modules currently kept by the compiler, allowing old compiler module names to be reused. If there are any processes running any code from such modules, they will be terminated too.</source>
          <target state="translated">Эта функция очищает все модули,которые в настоящее время находятся в компиляторе,позволяя повторно использовать старые имена модулей компилятора.Если есть процессы,выполняющие какой-либо код из таких модулей,то они также будут завершены.</target>
        </trans-unit>
        <trans-unit id="e3b8f5e13f2da9604ba811f1ee787c3cba445b85" translate="yes" xml:space="preserve">
          <source>This function receives a list of tasks and waits for their replies in the given time interval. It returns a list of the results, in the same order as the tasks supplied in the &lt;code&gt;tasks&lt;/code&gt; input argument.</source>
          <target state="translated">Эта функция получает список задач и ожидает ответа на них в заданный интервал времени. Он возвращает список результатов в том же порядке, что и задачи, указанные во входном аргументе &lt;code&gt;tasks&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c8f05dda04bc767a1282d611e4af5dafdcb7b8d" translate="yes" xml:space="preserve">
          <source>This function receives a list of tasks and waits for their replies in the given time interval. It returns a list of two-element tuples, with the task as the first element and the yielded result as the second. The tasks in the returned list will be in the same order as the tasks supplied in the &lt;code&gt;tasks&lt;/code&gt; input argument.</source>
          <target state="translated">Эта функция получает список задач и ожидает ответов на них в заданный интервал времени. Он возвращает список двухэлементных кортежей, где задача является первым элементом, а полученный результат - вторым. Задачи в возвращаемом списке будут располагаться в том же порядке, что и задачи, указанные во входном аргументе &lt;code&gt;tasks&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66ca8de099428d7febba36a7eae6660d193647fb" translate="yes" xml:space="preserve">
          <source>This function reruns the given task; to do that, it first re-enables the task and then runs it as normal.</source>
          <target state="translated">Эта функция выполняет данную задачу повторно;для этого она сначала снова включает задачу,а затем запускает ее в обычном режиме.</target>
        </trans-unit>
        <trans-unit id="7f88acb523db6223367758a20b1546d9d8c207d7" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;{:ok, owner}&lt;/code&gt; or &lt;code&gt;{:error, reason}&lt;/code&gt;. The &lt;code&gt;owner&lt;/code&gt; is the PID in the registry partition responsible for the PID. The owner is automatically linked to the caller.</source>
          <target state="translated">Эта функция возвращает &lt;code&gt;{:ok, owner}&lt;/code&gt; или &lt;code&gt;{:error, reason}&lt;/code&gt; . &lt;code&gt;owner&lt;/code&gt; является PID в разделе реестра , ответственного за PID. Владелец автоматически связывается с вызывающим абонентом.</target>
        </trans-unit>
        <trans-unit id="902dd92c08e25103df4b50bae4697cf10a6fc6fd" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;{:ok, pid}&lt;/code&gt; in case of success, otherwise it returns &lt;code&gt;{:error, reason}&lt;/code&gt;.</source>
          <target state="translated">Эта функция возвращает &lt;code&gt;{:ok, pid}&lt;/code&gt; в случае успеха, в противном случае возвращает &lt;code&gt;{:error, reason}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f3353899fe4360fc7c94245abd3933c4141ee40" translate="yes" xml:space="preserve">
          <source>This function returns a list of &lt;code&gt;{id, child, type, modules}&lt;/code&gt; tuples, where:</source>
          <target state="translated">Эта функция возвращает список кортежей &lt;code&gt;{id, child, type, modules}&lt;/code&gt; , где:</target>
        </trans-unit>
        <trans-unit id="c22e6a9591d2580a185def76ec2a7822b6c5d175" translate="yes" xml:space="preserve">
          <source>This function returns a list of tuples containing:</source>
          <target state="translated">Эта функция возвращает список кортежей:</target>
        </trans-unit>
        <trans-unit id="4ffb7797732e8eabda6ec4358625e5d11748d93c" translate="yes" xml:space="preserve">
          <source>This function returns a new enumerable built by appending the result of invoking &lt;code&gt;fun&lt;/code&gt; on each element of &lt;code&gt;enumerable&lt;/code&gt; together; conceptually, this is similar to a combination of &lt;a href=&quot;#map/2&quot;&gt;&lt;code&gt;map/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#concat/1&quot;&gt;&lt;code&gt;concat/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта функция возвращает новый перечислимый объект, построенный путем добавления результата вызова &lt;code&gt;fun&lt;/code&gt; к каждому элементу &lt;code&gt;enumerable&lt;/code&gt; вместе; концептуально это похоже на комбинацию &lt;a href=&quot;#map/2&quot;&gt; &lt;code&gt;map/2&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#concat/1&quot;&gt; &lt;code&gt;concat/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a4c4692a1b2085c0d5c4c7060abeb21e5e80d789" translate="yes" xml:space="preserve">
          <source>This function returns a new stream built by appending the result of invoking &lt;code&gt;fun&lt;/code&gt; on each element of &lt;code&gt;enumerable&lt;/code&gt; together.</source>
          <target state="translated">Эта функция возвращает новый поток, созданный путем добавления результата вызова &lt;code&gt;fun&lt;/code&gt; к каждому элементу &lt;code&gt;enumerable&lt;/code&gt; вместе.</target>
        </trans-unit>
        <trans-unit id="9207161e31f07b71a8de0abeb84876a37ff477ac" translate="yes" xml:space="preserve">
          <source>This function returns a timer reference, which can be read with &lt;a href=&quot;#read_timer/1&quot;&gt;&lt;code&gt;read_timer/1&lt;/code&gt;&lt;/a&gt; or canceled with &lt;a href=&quot;#cancel_timer/1&quot;&gt;&lt;code&gt;cancel_timer/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта функция возвращает ссылку на таймер, которую можно прочитать с помощью &lt;a href=&quot;#read_timer/1&quot;&gt; &lt;code&gt;read_timer/1&lt;/code&gt; &lt;/a&gt; или отменить с помощью &lt;a href=&quot;#cancel_timer/1&quot;&gt; &lt;code&gt;cancel_timer/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e3b4424c23b3b31b7bea686c83f6fbd90413317a" translate="yes" xml:space="preserve">
          <source>This function returns a tuple containing the collected result and the command exit status.</source>
          <target state="translated">Эта функция возвращает кортеж,содержащий собранный результат и статус выхода из команды.</target>
        </trans-unit>
        <trans-unit id="1c1572156370222a67bdcd453345528785b5b103" translate="yes" xml:space="preserve">
          <source>This function returns a tuple containing the supervisor flags and child specifications.</source>
          <target state="translated">Эта функция возвращает кортеж с флагами супервайзера и спецификациями ребенка.</target>
        </trans-unit>
        <trans-unit id="a236219391c9665ab6cd417a5f529892164a5643" translate="yes" xml:space="preserve">
          <source>This function returns a tuple containing the supervisor options.</source>
          <target state="translated">Эта функция возвращает кортеж с опциями супервизора.</target>
        </trans-unit>
        <trans-unit id="f10657fb9f9d2dbe8abd5fb7b8f8b43416880ed5" translate="yes" xml:space="preserve">
          <source>This function returns an empty list when used at the root of an umbrella project because there is no compile manifest to extract the function call information from. To get the function calls of each child in an umbrella, execute the function at the root of each individual application.</source>
          <target state="translated">Эта функция возвращает пустой список,когда используется в корне проекта зонтика,потому что нет манифеста компиляции,из которого можно было бы извлечь информацию о вызове функции.Для получения информации о вызовах функций каждого дочернего проекта в зонтике,выполните функцию в корне каждого отдельного приложения.</target>
        </trans-unit>
        <trans-unit id="a6fbf0f83b2acb02bb139f54eef721ae8347767a" translate="yes" xml:space="preserve">
          <source>This function returns either &lt;code&gt;{:ok, definition, clauses}&lt;/code&gt; or &lt;code&gt;:error&lt;/code&gt;. Where &lt;code&gt;definition&lt;/code&gt; is &lt;code&gt;:def&lt;/code&gt;, &lt;code&gt;:defp&lt;/code&gt;, &lt;code&gt;:defmacro&lt;/code&gt; or &lt;code&gt;:defmacrop&lt;/code&gt;.</source>
          <target state="translated">Эта функция возвращает либо &lt;code&gt;{:ok, definition, clauses}&lt;/code&gt; либо &lt;code&gt;:error&lt;/code&gt; . Если &lt;code&gt;definition&lt;/code&gt; является &lt;code&gt;:def&lt;/code&gt; , &lt;code&gt;:defp&lt;/code&gt; , &lt;code&gt;:defmacro&lt;/code&gt; или &lt;code&gt;:defmacrop&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5908984f567478e4a60e81ad1b7f0e0a95ff38d7" translate="yes" xml:space="preserve">
          <source>This function returns immediately and ignores nodes that do not exist, or where the server name does not exist.</source>
          <target state="translated">Эта функция возвращается немедленно и игнорирует узлы,которые не существуют или где нет имени сервера.</target>
        </trans-unit>
        <trans-unit id="3c26de55ed91737da0adcc687c60b204ef4f41f8" translate="yes" xml:space="preserve">
          <source>This function returns the breakpoint ID and will raise if there is an error setting up the breakpoint.</source>
          <target state="translated">Эта функция возвращает идентификатор точки останова и при возникновении ошибки в настройке точки останова поднимается.</target>
        </trans-unit>
        <trans-unit id="ac0ff9db2cb58b04d706d4d0f95101c014828e27" translate="yes" xml:space="preserve">
          <source>This function returns the current application name, but only if the application name should be printed.</source>
          <target state="translated">Эта функция возвращает текущее имя приложения,но только в том случае,если имя приложения должно быть распечатано.</target>
        </trans-unit>
        <trans-unit id="e9031a38e543bd6739ba00dbc5fed0a5a01f11ea" translate="yes" xml:space="preserve">
          <source>This function returns the difference in seconds where seconds are measured according to &lt;a href=&quot;calendar.iso&quot;&gt;&lt;code&gt;Calendar.ISO&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта функция возвращает разницу в секундах, где секунды измеряются в соответствии с &lt;a href=&quot;calendar.iso&quot;&gt; &lt;code&gt;Calendar.ISO&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f5af0f8f1d39fdde7d2176a52228d4efede75942" translate="yes" xml:space="preserve">
          <source>This function returns the difference in seconds where seconds are measured according to &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.ISO.html&quot;&gt;&lt;code&gt;Calendar.ISO&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта функция возвращает разницу в секундах, где секунды измеряются согласно &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.ISO.html&quot;&gt; &lt;code&gt;Calendar.ISO&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ef0ad46bb886f62fbf2201ba9b9f859d8daf73a5" translate="yes" xml:space="preserve">
          <source>This function returns:</source>
          <target state="translated">Эта функция возвращается:</target>
        </trans-unit>
        <trans-unit id="dc16b8c0d60d4a66a61b6088df628cb2cdbe5f10" translate="yes" xml:space="preserve">
          <source>This function should be used to convert a list of paths to a path. Note that any trailing slash is removed when joining.</source>
          <target state="translated">Эта функция должна использоваться для преобразования списка путей в путь.Обратите внимание,что любой трейлинговый слэш удаляется при соединении.</target>
        </trans-unit>
        <trans-unit id="f72643333bea463c7a8ea5767e80e22d1a7036bf" translate="yes" xml:space="preserve">
          <source>This function should be used to remove a specific extension which may or may not be there.</source>
          <target state="translated">Эта функция должна использоваться для удаления конкретного расширения,которое может присутствовать или не присутствовать.</target>
        </trans-unit>
        <trans-unit id="1fc59171af9c1101b367bf06403fbdf95aa428ac" translate="yes" xml:space="preserve">
          <source>This function should either return &lt;code&gt;{:ok, pid}&lt;/code&gt; or &lt;code&gt;{:ok, pid, state}&lt;/code&gt; if startup is successful. &lt;code&gt;pid&lt;/code&gt; should be the PID of the top supervisor. &lt;code&gt;state&lt;/code&gt; can be an arbitrary term, and if omitted will default to &lt;code&gt;[]&lt;/code&gt;; if the application is later stopped, &lt;code&gt;state&lt;/code&gt; is passed to the &lt;a href=&quot;#stop/1&quot;&gt;&lt;code&gt;stop/1&lt;/code&gt;&lt;/a&gt; callback (see the documentation for the &lt;a href=&quot;#c:stop/1&quot;&gt;&lt;code&gt;stop/1&lt;/code&gt;&lt;/a&gt; callback for more information).</source>
          <target state="translated">Эта функция должна либо возвращать &lt;code&gt;{:ok, pid}&lt;/code&gt; либо &lt;code&gt;{:ok, pid, state}&lt;/code&gt; при успешном запуске. &lt;code&gt;pid&lt;/code&gt; должен быть PID верхнего супервизора. &lt;code&gt;state&lt;/code&gt; может быть произвольным термином, и если он не указан, по умолчанию будет &lt;code&gt;[]&lt;/code&gt; ; если приложение позже остановлено, &lt;code&gt;state&lt;/code&gt; передается в функцию обратного вызова &lt;a href=&quot;#stop/1&quot;&gt; &lt;code&gt;stop/1&lt;/code&gt; &lt;/a&gt; (дополнительную информацию см. в документации по &lt;a href=&quot;#c:stop/1&quot;&gt; &lt;code&gt;stop/1&lt;/code&gt; &lt;/a&gt; вызову stop / 1 ).</target>
        </trans-unit>
        <trans-unit id="21a65796034b404efe85bb5cf745e9599f9e6028" translate="yes" xml:space="preserve">
          <source>This function should not be used at runtime in application code (as opposed to infrastructure and build code like Mix tasks). Mix is a build tool and may not be available after the code is compiled (for example in a release).</source>
          <target state="translated">Эту функцию не следует использовать во время выполнения в коде приложения (в отличие от инфраструктурных и сборочных задач типа Mix tasks).Mix является сборочным инструментом и может быть недоступен после компиляции кода (например,в релизе).</target>
        </trans-unit>
        <trans-unit id="7d9efdf471f60e2ed682dd93f955c9a027ea855c" translate="yes" xml:space="preserve">
          <source>This function should not be used at runtime in application code (see &lt;a href=&quot;#env/0&quot;&gt;&lt;code&gt;env/0&lt;/code&gt;&lt;/a&gt; for more information).</source>
          <target state="translated">Эту функцию не следует использовать во время выполнения в коде приложения ( дополнительную информацию см. В &lt;a href=&quot;#env/0&quot;&gt; &lt;code&gt;env/0&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="bf1fdd59778e871792165fd9cd597befae6dbe8a" translate="yes" xml:space="preserve">
          <source>This function should return &lt;code&gt;{:ok, value}&lt;/code&gt; where &lt;code&gt;value&lt;/code&gt; is the value under &lt;code&gt;key&lt;/code&gt; if the key exists in the term, or &lt;code&gt;:error&lt;/code&gt; if the key does not exist in the term.</source>
          <target state="translated">Эта функция должна возвращать &lt;code&gt;{:ok, value}&lt;/code&gt; где &lt;code&gt;value&lt;/code&gt; - это значение под &lt;code&gt;key&lt;/code&gt; если ключ существует в термине, или &lt;code&gt;:error&lt;/code&gt; , если ключ не существует в термине.</target>
        </trans-unit>
        <trans-unit id="ec58ff70bd307ba9cba1f4ad5eec25344d58ad92" translate="yes" xml:space="preserve">
          <source>This function shouldn't be invoked directly, unless when implementing a custom &lt;code&gt;inspect_fun&lt;/code&gt; to be given to &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.Opts.html&quot;&gt;&lt;code&gt;Inspect.Opts&lt;/code&gt;&lt;/a&gt;. Everywhere else, &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.Algebra.html#to_doc/2&quot;&gt;&lt;code&gt;Inspect.Algebra.to_doc/2&lt;/code&gt;&lt;/a&gt; should be preferred as it handles structs and exceptions.</source>
          <target state="translated">Эту функцию не следует вызывать напрямую, за исключением случаев реализации настраиваемого &lt;code&gt;inspect_fun&lt;/code&gt; , передаваемого в &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.Opts.html&quot;&gt; &lt;code&gt;Inspect.Opts&lt;/code&gt; &lt;/a&gt; . В других &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.Algebra.html#to_doc/2&quot;&gt; &lt;code&gt;Inspect.Algebra.to_doc/2&lt;/code&gt; &lt;/a&gt; предпочтительнее Inspect.Algebra.to_doc / 2 , поскольку он обрабатывает структуры и исключения.</target>
        </trans-unit>
        <trans-unit id="4e0b499c79fbb5106ff12e9b189fd33d1ca2f878" translate="yes" xml:space="preserve">
          <source>This function shouldn't be invoked directly, unless when implementing a custom &lt;code&gt;inspect_fun&lt;/code&gt; to be given to &lt;a href=&quot;inspect.opts&quot;&gt;&lt;code&gt;Inspect.Opts&lt;/code&gt;&lt;/a&gt;. Everywhere else, &lt;a href=&quot;inspect.algebra#to_doc/2&quot;&gt;&lt;code&gt;Inspect.Algebra.to_doc/2&lt;/code&gt;&lt;/a&gt; should be preferred as it handles structs and exceptions.</source>
          <target state="translated">Эту функцию не следует вызывать напрямую, кроме случаев, когда реализуется пользовательский &lt;code&gt;inspect_fun&lt;/code&gt; , передаваемый в &lt;a href=&quot;inspect.opts&quot;&gt; &lt;code&gt;Inspect.Opts&lt;/code&gt; &lt;/a&gt; . В любом другом месте следует предпочесть &lt;a href=&quot;inspect.algebra#to_doc/2&quot;&gt; &lt;code&gt;Inspect.Algebra.to_doc/2&lt;/code&gt; &lt;/a&gt; , поскольку он обрабатывает структуры и исключения.</target>
        </trans-unit>
        <trans-unit id="7c7b31de7bb27ac0e240dd4370dcbe439841a348" translate="yes" xml:space="preserve">
          <source>This function simply reads the configuration value for &lt;code&gt;:ansi_enabled&lt;/code&gt; in the &lt;code&gt;:elixir&lt;/code&gt; application. The value is by default &lt;code&gt;false&lt;/code&gt; unless Elixir can detect during startup that both &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; are terminals.</source>
          <target state="translated">Эта функция просто считывает значение конфигурации &lt;code&gt;:ansi_enabled&lt;/code&gt; в &lt;code&gt;:elixir&lt;/code&gt; применения. По умолчанию это значение равно &lt;code&gt;false&lt;/code&gt; , если Elixir не обнаружит при запуске, что и &lt;code&gt;stdout&lt;/code&gt; , и &lt;code&gt;stderr&lt;/code&gt; являются терминалами.</target>
        </trans-unit>
        <trans-unit id="334f3d5e4471a23891371c10f4d6629f6f864306" translate="yes" xml:space="preserve">
          <source>This function spawns a process that is linked to and monitored by the caller process. The linking part is important because it aborts the task if the parent process dies. It also guarantees the code before async/await has the same properties after you add the async call. For example, imagine you have this:</source>
          <target state="translated">Эта функция порождает процесс,который связан с вызывающим процессом и контролируется им.Связывающая часть важна,потому что она прерывает выполнение задачи в случае смерти родительского процесса.Она также гарантирует,что код до async/await имеет те же самые свойства после добавления асинхронного вызова.Например,представьте,что у вас это есть:</target>
        </trans-unit>
        <trans-unit id="c734a84fb40ac9d66210c296db69e31b0a02eadc" translate="yes" xml:space="preserve">
          <source>This function splits the given &lt;code&gt;string&lt;/code&gt; into a list of strings in a similar way to many shells.</source>
          <target state="translated">Эта функция разбивает данную &lt;code&gt;string&lt;/code&gt; на список строк аналогично многим оболочкам.</target>
        </trans-unit>
        <trans-unit id="ef2d261f9369eef612d3e5142c44d6cc0051a05a" translate="yes" xml:space="preserve">
          <source>This function takes the same options as &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html#register_attribute/3&quot;&gt;&lt;code&gt;Module.register_attribute/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта функция принимает те же параметры, что и &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html#register_attribute/3&quot;&gt; &lt;code&gt;Module.register_attribute/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2feb07f1ca6bdd2a159c3be3d1d2d967088b7ce0" translate="yes" xml:space="preserve">
          <source>This function uses &lt;a href=&quot;#expand_once/2&quot;&gt;&lt;code&gt;expand_once/2&lt;/code&gt;&lt;/a&gt; under the hood. Check it out for more information and examples.</source>
          <target state="translated">Эта функция использует под капотом &lt;a href=&quot;#expand_once/2&quot;&gt; &lt;code&gt;expand_once/2&lt;/code&gt; &lt;/a&gt; . Проверьте это для получения дополнительной информации и примеров.</target>
        </trans-unit>
        <trans-unit id="6e2fc530fdd36a8deb023fe2c739cc5eac5cf4d5" translate="yes" xml:space="preserve">
          <source>This function uses Erlang's &lt;a href=&quot;http://www.erlang.org/doc/man/rand.html&quot;&gt;&lt;code&gt;:rand&lt;/code&gt; module&lt;/a&gt; to calculate the random value. Check its documentation for setting a different random algorithm or a different seed.</source>
          <target state="translated">Эта функция использует &lt;a href=&quot;http://www.erlang.org/doc/man/rand.html&quot;&gt;модуль&lt;/a&gt; Erlang &lt;code&gt;:rand&lt;/code&gt; для вычисления случайного значения. Проверьте его документацию, чтобы установить другой случайный алгоритм или другое начальное число.</target>
        </trans-unit>
        <trans-unit id="97aac23199beb8d9422f08074a16068341921614" translate="yes" xml:space="preserve">
          <source>This function uses the &lt;a href=&quot;access&quot;&gt;&lt;code&gt;Access&lt;/code&gt;&lt;/a&gt; module to traverse the structures according to the given &lt;code&gt;keys&lt;/code&gt;, unless the &lt;code&gt;key&lt;/code&gt; is a function, which is detailed in a later section.</source>
          <target state="translated">Эта функция использует модуль &lt;a href=&quot;access&quot;&gt; &lt;code&gt;Access&lt;/code&gt; &lt;/a&gt; для обхода структур в соответствии с заданными &lt;code&gt;keys&lt;/code&gt; , если только &lt;code&gt;key&lt;/code&gt; является функцией, которая подробно описана в следующем разделе.</target>
        </trans-unit>
        <trans-unit id="f5a185e1be937b1dd6a14d707efd0c65f663b9df" translate="yes" xml:space="preserve">
          <source>This function uses the &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html&quot;&gt;&lt;code&gt;Access&lt;/code&gt;&lt;/a&gt; module to traverse the structures according to the given &lt;code&gt;keys&lt;/code&gt;, unless the &lt;code&gt;key&lt;/code&gt; is a function, which is detailed in a later section.</source>
          <target state="translated">Эта функция использует модуль &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html&quot;&gt; &lt;code&gt;Access&lt;/code&gt; &lt;/a&gt; для обхода структур в соответствии с заданными &lt;code&gt;keys&lt;/code&gt; , если &lt;code&gt;key&lt;/code&gt; является функцией, которая подробно описана в следующем разделе.</target>
        </trans-unit>
        <trans-unit id="8aa0a6bd6b734aebad750c42bf0f37171db0b991" translate="yes" xml:space="preserve">
          <source>This function uses the &lt;code&gt;ELIXIR_EDITOR&lt;/code&gt; environment variable and falls back to &lt;code&gt;EDITOR&lt;/code&gt; if the former is not available.</source>
          <target state="translated">Эта функция использует &lt;code&gt;ELIXIR_EDITOR&lt;/code&gt; среды ELIXIR_EDITOR и возвращается к &lt;code&gt;EDITOR&lt;/code&gt; , если первая недоступна.</target>
        </trans-unit>
        <trans-unit id="b61a016ed8075bfc5c39ffca808acebff61a6a18" translate="yes" xml:space="preserve">
          <source>This function uses the merge sort algorithm. Do not use this function to sort structs, see &lt;a href=&quot;#sort/2&quot;&gt;&lt;code&gt;sort/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Эта функция использует алгоритм сортировки слиянием. Не используйте эту функцию для сортировки структур, см. &lt;a href=&quot;#sort/2&quot;&gt; &lt;code&gt;sort/2&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="a8837dfaf4412802924cfa8f14dc7efe7bf20108" translate="yes" xml:space="preserve">
          <source>This function uses the merge sort algorithm. The given function should compare two arguments, and return &lt;code&gt;true&lt;/code&gt; if the first argument precedes or is in the same place as the second one.</source>
          <target state="translated">Эта функция использует алгоритм сортировки слиянием. Данная функция должна сравнивать два аргумента и возвращать &lt;code&gt;true&lt;/code&gt; если первый аргумент предшествует второму или находится на том же месте, что и второй.</target>
        </trans-unit>
        <trans-unit id="9cbfcbb53a61b66a747c2491e188753fa8068b44" translate="yes" xml:space="preserve">
          <source>This function uses the merge sort algorithm. The given function should compare two arguments, and return &lt;code&gt;true&lt;/code&gt; if the first argument precedes the second one.</source>
          <target state="translated">Эта функция использует алгоритм сортировки слиянием. Данная функция должна сравнивать два аргумента и возвращать &lt;code&gt;true&lt;/code&gt; если первый аргумент предшествует второму.</target>
        </trans-unit>
        <trans-unit id="862ee811fb4cabde3cfb7ab7a9097a9d6c254988" translate="yes" xml:space="preserve">
          <source>This function uses the parsing regular expression as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#appendix-B&quot;&gt;RFC 3986, Appendix B&lt;/a&gt;.</source>
          <target state="translated">Эта функция используется при разборе регулярного выражения , как это определено в &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#appendix-B&quot;&gt;RFC 3986, Приложение B&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d26051019e95731e1d7b99be08f5928a37367d27" translate="yes" xml:space="preserve">
          <source>This function was designed to camelize language identifiers/tokens, that's why it belongs to the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Macro&lt;/code&gt;&lt;/a&gt; module. Do not use it as a general mechanism for camelizing strings as it does not support Unicode or characters that are not valid in Elixir identifiers.</source>
          <target state="translated">Эта функция была разработана для преобразования языковых идентификаторов / токенов, поэтому она относится к модулю &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Macro&lt;/code&gt; &lt;/a&gt; . Не используйте его в качестве общего механизма для объединения строк, поскольку он не поддерживает Unicode или символы, недопустимые в идентификаторах Elixir.</target>
        </trans-unit>
        <trans-unit id="582211980e20afdfe93b93a25608463f5c56a8bf" translate="yes" xml:space="preserve">
          <source>This function was designed to underscore language identifiers/tokens, that's why it belongs to the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Macro&lt;/code&gt;&lt;/a&gt; module. Do not use it as a general mechanism for underscoring strings as it does not support Unicode or characters that are not valid in Elixir identifiers.</source>
          <target state="translated">Эта функция предназначена для подчеркивания языковых идентификаторов / токенов, поэтому принадлежит к модулю &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Macro&lt;/code&gt; &lt;/a&gt; . Не используйте его как общий механизм для подчеркивания строк, так как он не поддерживает Unicode или символы, недопустимые в идентификаторах Elixir.</target>
        </trans-unit>
        <trans-unit id="ddcb598fb0ce62c01ead735edd62ec7ef5afb147" translate="yes" xml:space="preserve">
          <source>This function will instrument the given module and load a new version in memory with breakpoints at the given function and arity. If the module is recompiled, all breakpoints are lost.</source>
          <target state="translated">Эта функция уравновешивает данный модуль и загружает новую версию в память с точками останова на данной функции и arity.При перекомпиляции модуля все точки останова теряются.</target>
        </trans-unit>
        <trans-unit id="8b8f47c44e23aa37c7285c683f845cd5e9a96e09" translate="yes" xml:space="preserve">
          <source>This function will merge the given keyword list into the existing metadata, with the exception of setting a key to &lt;code&gt;nil&lt;/code&gt;, which will remove that key from the metadata.</source>
          <target state="translated">Эта функция объединит данный список ключевых слов с существующими метаданными, за исключением установки ключа &lt;code&gt;nil&lt;/code&gt; , что удалит этот ключ из метаданных.</target>
        </trans-unit>
        <trans-unit id="11a397f1ed689beeb86c4bc32143ddefc115ba76" translate="yes" xml:space="preserve">
          <source>This function will raise &lt;a href=&quot;functionclauseerror&quot;&gt;&lt;code&gt;FunctionClauseError&lt;/code&gt;&lt;/a&gt; if the given &lt;code&gt;node&lt;/code&gt; is not alive.</source>
          <target state="translated">Эта функция вызовет ошибку &lt;a href=&quot;functionclauseerror&quot;&gt; &lt;code&gt;FunctionClauseError&lt;/code&gt; ,&lt;/a&gt; если данный &lt;code&gt;node&lt;/code&gt; не активен.</target>
        </trans-unit>
        <trans-unit id="d3549fd2102012a4f6115406e1d4d00d9843abf5" translate="yes" xml:space="preserve">
          <source>This function will raise &lt;a href=&quot;https://hexdocs.pm/elixir/FunctionClauseError.html&quot;&gt;&lt;code&gt;FunctionClauseError&lt;/code&gt;&lt;/a&gt; if the given &lt;code&gt;node&lt;/code&gt; is not alive.</source>
          <target state="translated">Эта функция вызовет ошибку &lt;a href=&quot;https://hexdocs.pm/elixir/FunctionClauseError.html&quot;&gt; &lt;code&gt;FunctionClauseError&lt;/code&gt; ,&lt;/a&gt; если данный &lt;code&gt;node&lt;/code&gt; не активен.</target>
        </trans-unit>
        <trans-unit id="e6b9fdfcab204aeb9ec68e1e7116d2ac8debacde" translate="yes" xml:space="preserve">
          <source>This function will retrieve the available clauses from bytecode and evaluate them against the given arguments. The clauses are returned as a list of &lt;code&gt;{args, guards}&lt;/code&gt; pairs where each argument and each top-level condition in a guard separated by &lt;code&gt;and&lt;/code&gt;/&lt;code&gt;or&lt;/code&gt; is wrapped in a tuple with blame metadata.</source>
          <target state="translated">Эта функция будет извлекать доступные предложения из байт-кода и оценивать их по заданным аргументам. Предложения возвращаются в виде списка пар &lt;code&gt;{args, guards}&lt;/code&gt; где каждый аргумент и каждое условие верхнего уровня в защитном элементе разделены &lt;code&gt;and&lt;/code&gt; / &lt;code&gt;or&lt;/code&gt; заключены в кортеж с метаданными обвинения.</target>
        </trans-unit>
        <trans-unit id="029c82ca4692615f6cc90f101026e01c3b5dc4e0" translate="yes" xml:space="preserve">
          <source>This functionality starts the &lt;code&gt;:net_kernel&lt;/code&gt; and other related processes.</source>
          <target state="translated">Эта функция запускает &lt;code&gt;:net_kernel&lt;/code&gt; и другие связанные процессы.</target>
        </trans-unit>
        <trans-unit id="a5c0fe11d15d66b3e64978f03cccbe68ad69f39c" translate="yes" xml:space="preserve">
          <source>This guarantees all messages sent to &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; prior to this call will be processed. This is useful for testing and it should not be called in production code.</source>
          <target state="translated">Это гарантирует, что все сообщения, отправленные в &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; до этого вызова, будут обработаны. Это полезно для тестирования, и его не следует вызывать в производственном коде.</target>
        </trans-unit>
        <trans-unit id="931eb8597cbb84926c09fb6a3b1aa749f547e621" translate="yes" xml:space="preserve">
          <source>This guide aims to introduce the meta-programming techniques available in Elixir. The ability to represent an Elixir program by its own data structures is at the heart of meta-programming. This chapter starts by exploring those structures and the associated &lt;code&gt;quote&lt;/code&gt; and &lt;code&gt;unquote&lt;/code&gt; constructs, so we can take a look at macros in the next chapter and finally build our own domain specific language.</source>
          <target state="translated">Это руководство предназначено для ознакомления с методами метапрограммирования, доступными в Elixir. Возможность представлять программу на Эликсире своими собственными структурами данных лежит в основе метапрограммирования. Эта глава начинается с изучения этих структур и связанных с &lt;code&gt;unquote&lt;/code&gt; конструкций &lt;code&gt;quote&lt;/code&gt; и отмены кавычек , поэтому мы можем взглянуть на макросы в следующей главе и, наконец, создать наш собственный предметно-ориентированный язык.</target>
        </trans-unit>
        <trans-unit id="217ac3dbe93c0cad13af56d1e1ef16871421d82f" translate="yes" xml:space="preserve">
          <source>This happens because the only place the formatter can introduce a new line without changing the code semantics is in the interpolation. In those scenarios, we recommend developers to directly adjust the code. Here we can use the binary concatenation operator &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#%3C%3E/2&quot;&gt;&lt;code&gt;&amp;lt;&amp;gt;/2&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Это происходит потому, что единственное место, где средство форматирования может ввести новую строку без изменения семантики кода, - это интерполяция. В этих сценариях мы рекомендуем разработчикам напрямую корректировать код. Здесь мы можем использовать оператор двоичной конкатенации &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#%3C%3E/2&quot;&gt; &lt;code&gt;&amp;lt;&amp;gt;/2&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="5849b2456045ed3a32dde6f55db3e066f023528f" translate="yes" xml:space="preserve">
          <source>This happens because the only place the formatter can introduce a new line without changing the code semantics is in the interpolation. In those scenarios, we recommend developers to directly adjust the code. Here we can use the binary concatenation operator &lt;a href=&quot;kernel#%253C%253E/2&quot;&gt;&lt;code&gt;&amp;lt;&amp;gt;/2&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Это происходит потому, что единственное место, где средство форматирования может ввести новую строку без изменения семантики кода, - это интерполяция. В таких случаях мы рекомендуем разработчикам напрямую корректировать код. Здесь мы можем использовать оператор двоичной конкатенации &lt;a href=&quot;kernel#%253C%253E/2&quot;&gt; &lt;code&gt;&amp;lt;&amp;gt;/2&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="ccb1f24686f9c6bcd91b3b281d116c9f04cb68f5" translate="yes" xml:space="preserve">
          <source>This helper only works when IEx is started with a Mix project, for example, &lt;code&gt;iex -S mix&lt;/code&gt;. The application is not restarted after compilation, which means any long running process may crash as any changed module will be temporarily removed and recompiled, without going through the proper code changes callback.</source>
          <target state="translated">Этот помощник работает только тогда, когда IEx запущен с проектом Mix, например, &lt;code&gt;iex -S mix&lt;/code&gt; . Приложение не перезапускается после компиляции, что означает, что любой продолжительный процесс может аварийно завершить работу, поскольку любой измененный модуль будет временно удален и перекомпилирован без выполнения обратного вызова для изменения правильного кода.</target>
        </trans-unit>
        <trans-unit id="af9ea0d60815c82f22be854ae11982e7962bd190" translate="yes" xml:space="preserve">
          <source>This implementation also adds &lt;a href=&quot;#force_unfit/1&quot;&gt;&lt;code&gt;force_unfit/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#next_break_fits/2&quot;&gt;&lt;code&gt;next_break_fits/2&lt;/code&gt;&lt;/a&gt; which give more control over the document fitting.</source>
          <target state="translated">Эта реализация также добавляет &lt;a href=&quot;#force_unfit/1&quot;&gt; &lt;code&gt;force_unfit/1&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#next_break_fits/2&quot;&gt; &lt;code&gt;next_break_fits/2&lt;/code&gt; ,&lt;/a&gt; которые дают больший контроль над подгонкой документа.</target>
        </trans-unit>
        <trans-unit id="ecf1cb6c3f0131a137b0e41a93d52ab7359f8a7c" translate="yes" xml:space="preserve">
          <source>This implementation provides two types of breaks: &lt;code&gt;:strict&lt;/code&gt; and &lt;code&gt;:flex&lt;/code&gt;. When a group does not fit, all strict breaks are treated as newlines. Flex breaks however are re-evaluated on every occurrence and may still be rendered flat. See &lt;a href=&quot;#break/1&quot;&gt;&lt;code&gt;break/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#flex_break/1&quot;&gt;&lt;code&gt;flex_break/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Эта реализация предоставляет два типа разрывов &lt;code&gt;:strict&lt;/code&gt; и &lt;code&gt;:flex&lt;/code&gt; . Если группа не подходит, все строгие разрывы рассматриваются как новые строки. Однако разрывы гибкости переоцениваются при каждом возникновении и могут по-прежнему отображаться плоскими. См. &lt;a href=&quot;#flex_break/1&quot;&gt; &lt;code&gt;flex_break/1&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#break/1&quot;&gt; &lt;code&gt;break/1&lt;/code&gt; &lt;/a&gt; и flex_break / 1 для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="bc54167321bb690ef67cdb4d7c3892839915a92e" translate="yes" xml:space="preserve">
          <source>This information is returned based on the code path. Here is an example:</source>
          <target state="translated">Эта информация возвращается по пути к коду.Приведем пример:</target>
        </trans-unit>
        <trans-unit id="b0ecce7e0d6c0fe3474303fad5ddb7ee794ff9c6" translate="yes" xml:space="preserve">
          <source>This interpretation is the same regardless if &lt;code&gt;--source&lt;/code&gt; or &lt;code&gt;--sink&lt;/code&gt; flags are used. For example, if we use the &lt;code&gt;--sink lib/c.ex&lt;/code&gt; flag, we would see the same tree:</source>
          <target state="translated">Эта интерпретация одинакова независимо от того, &lt;code&gt;--source&lt;/code&gt; &lt;code&gt;--sink&lt;/code&gt; флаги --source или --sink . Например, если мы используем &lt;code&gt;--sink lib/c.ex&lt;/code&gt; , мы увидим то же дерево:</target>
        </trans-unit>
        <trans-unit id="d91881e1d6ed1dd4db7e1e2c49686c721a6638ef" translate="yes" xml:space="preserve">
          <source>This is Mix's default shell when the &lt;code&gt;MIX_QUIET&lt;/code&gt; environment variable is set.</source>
          <target state="translated">Это оболочка Mix по умолчанию, если &lt;code&gt;MIX_QUIET&lt;/code&gt; переменная среды MIX_QUIET .</target>
        </trans-unit>
        <trans-unit id="60031e59b55c11c2eb9a171c6db3ebaf52a6c050" translate="yes" xml:space="preserve">
          <source>This is Mix's default shell.</source>
          <target state="translated">Это оболочка Mix по умолчанию.</target>
        </trans-unit>
        <trans-unit id="5053391a8e72e9d443f680cf9656acc6cdd0a4d5" translate="yes" xml:space="preserve">
          <source>This is a bad idea, as we don&amp;rsquo;t want the registry to crash when a bucket crashes. The proper fix is to actually not link the bucket to the registry. Instead, we will link each bucket to a special type of process called Supervisors, which are explicitly designed to handle failures and crashes. We will learn more about them in the next chapter.</source>
          <target state="translated">Это плохая идея, так как мы не хотим, чтобы реестр аварийно завершал работу при сбое корзины. Правильное решение - фактически не связывать корзину с реестром. Вместо этого мы свяжем каждую корзину с особым типом процесса, называемым супервизорами, которые специально предназначены для обработки сбоев и сбоев. Мы узнаем о них больше в следующей главе.</target>
        </trans-unit>
        <trans-unit id="9e5ab726c57b0fb6f6da70a28676a9b1f70f7bab" translate="yes" xml:space="preserve">
          <source>This is a hard-deprecation as it emits warnings and annotates the documentation as deprecated:</source>
          <target state="translated">Это очень тяжело,так как он выдает предупреждения и аннотирует документацию как устаревшую:</target>
        </trans-unit>
        <trans-unit id="c34842432839543d617525657c5d1288600c6c0e" translate="yes" xml:space="preserve">
          <source>This is a soft-deprecation as it simply annotates the documentation as deprecated:</source>
          <target state="translated">Это мягкое истощение,так как оно просто аннотирует документацию как истощенную:</target>
        </trans-unit>
        <trans-unit id="9b525f4650716afc52d0be5f7a029605ace74f36" translate="yes" xml:space="preserve">
          <source>This is a task that can be aliased by projects that need to execute certain tasks before compiling dependencies:</source>
          <target state="translated">Это задача,которая может быть алиментирована проектами,которым необходимо выполнить определенные задачи перед компиляцией зависимостей:</target>
        </trans-unit>
        <trans-unit id="77df0c1b4e2776653e0c5177f9ffa6268916531c" translate="yes" xml:space="preserve">
          <source>This is actually a common pitfall when developing macros. We are assuming a particular shape in the macro. We can work around it by unquoting the variable inside the quoted expression:</source>
          <target state="translated">На самом деле,это обычная ошибка при разработке макросов.Мы принимаем определенную форму в макросе.Мы можем работать с ней,раскавывая переменную внутри цитируемого выражения:</target>
        </trans-unit>
        <trans-unit id="0dc899362b8fa129cf65071f623d739413cc73aa" translate="yes" xml:space="preserve">
          <source>This is all good and well, but we still want to offer our users an API that allows us to hide our implementation details.</source>
          <target state="translated">Все это хорошо и хорошо,но мы все же хотим предложить нашим пользователям API,который позволит нам скрыть детали реализации.</target>
        </trans-unit>
        <trans-unit id="f7b133b5999cc2d686bfdd612eea0550282bc0a5" translate="yes" xml:space="preserve">
          <source>This is also the syntax that Elixir uses to inspect keyword lists:</source>
          <target state="translated">Это также синтаксис,который Elixir использует для проверки списков ключевых слов:</target>
        </trans-unit>
        <trans-unit id="695d7b0825ac4fbdcbd163159a7fc336c49f943b" translate="yes" xml:space="preserve">
          <source>This is an anti-pattern not only because it convolutes the calculator logic but also because you put the calculator logic behind a single process that will potentially become a bottleneck in your system, especially as the number of calls grow. Instead just define the functions directly:</source>
          <target state="translated">Это антипаттерн не только потому,что он извращает логику калькулятора,но и потому,что вы помещаете логику калькулятора за один процесс,который потенциально может стать узким местом в вашей системе,особенно по мере роста количества звонков.Вместо этого просто определите функции напрямую:</target>
        </trans-unit>
        <trans-unit id="9d1d1dd333c995d40a1c0f70de189cf4bf055fbb" translate="yes" xml:space="preserve">
          <source>This is an extension of &lt;a href=&quot;#myers_difference/2&quot;&gt;&lt;code&gt;myers_difference/2&lt;/code&gt;&lt;/a&gt; where a &lt;code&gt;diff_script&lt;/code&gt; function can be given in case it is desired to compute nested differences. The function may return a list with the inner edit script or &lt;code&gt;nil&lt;/code&gt; in case there is no such script. The returned inner edit script will be under the &lt;code&gt;:diff&lt;/code&gt; key.</source>
          <target state="translated">Это расширение &lt;a href=&quot;#myers_difference/2&quot;&gt; &lt;code&gt;myers_difference/2&lt;/code&gt; ,&lt;/a&gt; в &lt;code&gt;diff_script&lt;/code&gt; может быть задана функция diff_script в случае, если требуется вычислить вложенные различия. Функция может вернуть список с внутренним сценарием редактирования или &lt;code&gt;nil&lt;/code&gt; , если такого сценария нет. Возвращенный внутренний скрипт редактирования будет находиться под ключом &lt;code&gt;:diff&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c0d7fab04e5bf783756a7f428e6b36128d23270" translate="yes" xml:space="preserve">
          <source>This is an optimization for &lt;code&gt;enumerable |&amp;gt; Enum.reverse() |&amp;gt; Enum.concat(tail)&lt;/code&gt;.</source>
          <target state="translated">Это оптимизация для &lt;code&gt;enumerable |&amp;gt; Enum.reverse() |&amp;gt; Enum.concat(tail)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8a27bb1d6f71fa4c6c204cb8cc47805a7ed11d7" translate="yes" xml:space="preserve">
          <source>This is an option determining the prompt displayed to the user when awaiting input.</source>
          <target state="translated">Это опция,определяющая подсказку,отображаемую пользователю при ожидании ввода.</target>
        </trans-unit>
        <trans-unit id="aae1c3bc3412e0ceca9643bedadc02d43a2f03a1" translate="yes" xml:space="preserve">
          <source>This is because by the time Elixir starts, Erlang's kernel has already been started, which means the configuration above would have no effect.</source>
          <target state="translated">Это связано с тем,что к моменту старта Elixir ядро Erlang уже было запущено,что означает,что приведенная выше конфигурация не будет иметь никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="d40bb6ddf99cda982a812b8ae52262c178bb85e3" translate="yes" xml:space="preserve">
          <source>This is because the macro is expecting its arguments to be a keyword list at &lt;strong&gt;compilation&lt;/strong&gt; time. Since in the example above we are passing the representation of the variable &lt;code&gt;kv&lt;/code&gt;, our code fails.</source>
          <target state="translated">Это связано с тем, что макрос ожидает, что его аргументы будут списком ключевых слов во время &lt;strong&gt;компиляции&lt;/strong&gt; . Поскольку в приведенном выше примере мы передаем представление переменной &lt;code&gt;kv&lt;/code&gt; , наш код не работает.</target>
        </trans-unit>
        <trans-unit id="69794bbecc9e248ec94d8fbad95cc7668576d9ad" translate="yes" xml:space="preserve">
          <source>This is done by loading &lt;code&gt;config/runtime.exs&lt;/code&gt; if one exists.</source>
          <target state="translated">Это делается путем загрузки &lt;code&gt;config/runtime.exs&lt;/code&gt; , если таковой существует.</target>
        </trans-unit>
        <trans-unit id="21f107c1b12d2af11cc6fc5fce200280f5598e01" translate="yes" xml:space="preserve">
          <source>This is either a plain PID or a value representing a registered name. See the &quot;Name registration&quot; section of this document for more information.</source>
          <target state="translated">Это либо обычный PID,либо значение,представляющее зарегистрированное имя.Дополнительную информацию см.в разделе &quot;Регистрация имени&quot; данного документа.</target>
        </trans-unit>
        <trans-unit id="08a0e9ee70b7df166382e2da0f79cdb8aafbbed0" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;else if&lt;/code&gt; clauses in many imperative languages (although used much less frequently here).</source>
          <target state="translated">Это эквивалентно предложениям &lt;code&gt;else if&lt;/code&gt; во многих императивных языках (хотя здесь используется гораздо реже).</target>
        </trans-unit>
        <trans-unit id="b9679cc98b384d2fae74f5c4e147d814a3605b34" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;else if&lt;/code&gt; clauses in many imperative languages (although used way less frequently here).</source>
          <target state="translated">Это эквивалентно предложениям &lt;code&gt;else if&lt;/code&gt; во многих императивных языках (хотя здесь используется реже).</target>
        </trans-unit>
        <trans-unit id="20b3f3a29153ddca60608cf1ff19217f8f298150" translate="yes" xml:space="preserve">
          <source>This is implemented as a macro so it can be used in guard clauses.</source>
          <target state="translated">Это реализовано в виде макроса,чтобы его можно было использовать в защитных клаузулах.</target>
        </trans-unit>
        <trans-unit id="b6ca1cc005536f5b89386dac5e9eaab2c71326b3" translate="yes" xml:space="preserve">
          <source>This is in contrast to &lt;a href=&quot;#split/3&quot;&gt;&lt;code&gt;split/3&lt;/code&gt;&lt;/a&gt; which splits the entire string upfront.</source>
          <target state="translated">В этом отличие от &lt;a href=&quot;#split/3&quot;&gt; &lt;code&gt;split/3&lt;/code&gt; ,&lt;/a&gt; который разбивает всю строку вперед.</target>
        </trans-unit>
        <trans-unit id="d6a69df7f8c6fe2ffd7e21f569ce958484e18a07" translate="yes" xml:space="preserve">
          <source>This is mainly useful in tests, allowing us to assert if given messages were received or not instead of performing checks on some captured IO. Since we need to guarantee a clean slate between tests, there is also a &lt;a href=&quot;#flush/1&quot;&gt;&lt;code&gt;flush/1&lt;/code&gt;&lt;/a&gt; function responsible for flushing all &lt;code&gt;:mix_shell&lt;/code&gt; related messages from the process inbox.</source>
          <target state="translated">Это в основном полезно в тестах, позволяя нам утверждать, были ли получены данные сообщения, вместо того, чтобы выполнять проверки некоторых захваченных операций ввода-вывода. Поскольку между тестами нам нужно обеспечить &amp;laquo;чистый лист&amp;raquo;, существует также функция &lt;a href=&quot;#flush/1&quot;&gt; &lt;code&gt;flush/1&lt;/code&gt; ,&lt;/a&gt; отвечающая за &lt;code&gt;:mix_shell&lt;/code&gt; всех сообщений, связанных с mix_shell, из почтового ящика процесса.</target>
        </trans-unit>
        <trans-unit id="a0fa3a9b78fa54d020541ab16426b8460b60af20" translate="yes" xml:space="preserve">
          <source>This is most commonly used by shell implementations but can also be invoked directly.</source>
          <target state="translated">Это наиболее часто используется в реализации оболочки,но также может быть вызвано напрямую.</target>
        </trans-unit>
        <trans-unit id="72d44ff95753d13859fe1556278fcc193088f3be" translate="yes" xml:space="preserve">
          <source>This is most often used to execute conditional code:</source>
          <target state="translated">Чаще всего это используется для выполнения условного кода:</target>
        </trans-unit>
        <trans-unit id="06d6ae37e05a3ae9f28e4ea5d06be5fb1cde0b89" translate="yes" xml:space="preserve">
          <source>This is often represented in the form of target triples, for example, &lt;code&gt;x86_64-unknown-linux-gnu&lt;/code&gt;, &lt;code&gt;x86_64-unknown-linux-musl&lt;/code&gt;, &lt;code&gt;x86_64-apple-darwin&lt;/code&gt;.</source>
          <target state="translated">Это часто представляется в виде целевых троек, например, &lt;code&gt;x86_64-unknown-linux-gnu&lt;/code&gt; , &lt;code&gt;x86_64-unknown-linux-musl&lt;/code&gt; , &lt;code&gt;x86_64-apple-darwin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3cb696d174caaa2396a3c713ad639f81cfe5da1" translate="yes" xml:space="preserve">
          <source>This is often used to emulate configuration across environments:</source>
          <target state="translated">Это часто используется для эмуляции конфигурации в различных средах:</target>
        </trans-unit>
        <trans-unit id="58dabc93b2ce93a10dc83d366ab232e1eea3c140" translate="yes" xml:space="preserve">
          <source>This is often used to start the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; as part of a supervision tree.</source>
          <target state="translated">Это часто используется для запуска &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; как части дерева надзора.</target>
        </trans-unit>
        <trans-unit id="320f2d885658e9db2171a44a753f72f41faf6056" translate="yes" xml:space="preserve">
          <source>This is often used to start the agent as part of a supervision tree.</source>
          <target state="translated">Это часто используется для запуска агента как части дерева наблюдения.</target>
        </trans-unit>
        <trans-unit id="626d510108035955935a541c301f344a380255ad" translate="yes" xml:space="preserve">
          <source>This is often used to start the process as part of a supervision tree.</source>
          <target state="translated">Это часто используется для запуска процесса как часть дерева наблюдения.</target>
        </trans-unit>
        <trans-unit id="71cf2a71b0daa952a75b8e9a75ad4350e4dc2204" translate="yes" xml:space="preserve">
          <source>This is often useful when used with &lt;a href=&quot;#prewalk/2&quot;&gt;&lt;code&gt;Macro.prewalk/2&lt;/code&gt;&lt;/a&gt; to remove information like lines and hygienic counters from the expression for either storage or comparison.</source>
          <target state="translated">Это часто бывает полезно при использовании с &lt;a href=&quot;#prewalk/2&quot;&gt; &lt;code&gt;Macro.prewalk/2&lt;/code&gt; &lt;/a&gt; для удаления информации, такой как строки и гигиенические счетчики, из выражения для хранения или сравнения.</target>
        </trans-unit>
        <trans-unit id="30067513715299ced12cf77d1d47bd85e8cef7ec" translate="yes" xml:space="preserve">
          <source>This is often useful when used with &lt;a href=&quot;macro#prewalk/2&quot;&gt;&lt;code&gt;Macro.prewalk/2&lt;/code&gt;&lt;/a&gt; to remove information like lines and hygienic counters from the expression for either storage or comparison.</source>
          <target state="translated">Это часто бывает полезно при использовании с &lt;a href=&quot;macro#prewalk/2&quot;&gt; &lt;code&gt;Macro.prewalk/2&lt;/code&gt; &lt;/a&gt; для удаления информации, такой как строки и гигиенические счетчики, из выражения для хранения или сравнения.</target>
        </trans-unit>
        <trans-unit id="4240cfedebaf42c2fac3f95a041f2d57c453967e" translate="yes" xml:space="preserve">
          <source>This is only used when the task is used for side-effects (i.e. no interest in the returned result) and it should not be linked to the current process.</source>
          <target state="translated">Используется только тогда,когда задача используется для побочных эффектов (т.е.нет интереса к возвращаемому результату)и не должна быть привязана к текущему процессу.</target>
        </trans-unit>
        <trans-unit id="077e7548b6aaec650e916de489ebe79d6d5f3c44" translate="yes" xml:space="preserve">
          <source>This is pretty much all we need to implement our echo server. Let&amp;rsquo;s give it a try!</source>
          <target state="translated">Это почти все, что нам нужно для реализации нашего эхо-сервера. Давайте попробуем!</target>
        </trans-unit>
        <trans-unit id="6e08b933f971cdb50d5df304426433cd92e87e4c" translate="yes" xml:space="preserve">
          <source>This is reported as &quot;error&quot; in Elixir's logger backends for backwards compatibility reasons.</source>
          <target state="translated">По причинам обратной совместимости в бэкэндах логгера Elixir это называется &quot;ошибкой&quot;.</target>
        </trans-unit>
        <trans-unit id="5ec5639249ca1a34b536a5264b41327593f5fb5f" translate="yes" xml:space="preserve">
          <source>This is reported as &quot;info&quot; in Elixir's logger backends for backwards compatibility reasons.</source>
          <target state="translated">По причинам обратной совместимости в бэкэндах логгера Elixir это называется &quot;информацией&quot;.</target>
        </trans-unit>
        <trans-unit id="a3346bf358b79fcbcf2b055d550e9935fe8f45fd" translate="yes" xml:space="preserve">
          <source>This is reported as &quot;warn&quot; in Elixir's logger backends for backwards compatibility reasons.</source>
          <target state="translated">В регистрационных записях Elixir это &quot;предостережение&quot; по причинам обратной совместимости.</target>
        </trans-unit>
        <trans-unit id="81016b61e7a2b5883ac247d4885c2d149315bdb9" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#get_and_update_in/3&quot;&gt;&lt;code&gt;get_and_update_in/3&lt;/code&gt;&lt;/a&gt;, except the path is extracted via a macro rather than passing a list. For example:</source>
          <target state="translated">Это похоже на &lt;a href=&quot;#get_and_update_in/3&quot;&gt; &lt;code&gt;get_and_update_in/3&lt;/code&gt; &lt;/a&gt; , за исключением того, что путь извлекается через макрос, а не через передачу списка. Например:</target>
        </trans-unit>
        <trans-unit id="50c031832816906ca789ff0f4ad1f1b4dfcf5d4e" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#pop_in/2&quot;&gt;&lt;code&gt;pop_in/2&lt;/code&gt;&lt;/a&gt;, except the path is extracted via a macro rather than passing a list. For example:</source>
          <target state="translated">Это похоже на &lt;a href=&quot;#pop_in/2&quot;&gt; &lt;code&gt;pop_in/2&lt;/code&gt; &lt;/a&gt; , за исключением того, что путь извлекается через макрос, а не через передачу списка. Например:</target>
        </trans-unit>
        <trans-unit id="7523a1751f43741a0a08ddae723c5c9199fa87e6" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#put_in/3&quot;&gt;&lt;code&gt;put_in/3&lt;/code&gt;&lt;/a&gt;, except the path is extracted via a macro rather than passing a list. For example:</source>
          <target state="translated">Это похоже на &lt;a href=&quot;#put_in/3&quot;&gt; &lt;code&gt;put_in/3&lt;/code&gt; &lt;/a&gt; , за исключением того, что путь извлекается через макрос, а не через передачу списка. Например:</target>
        </trans-unit>
        <trans-unit id="22e8ffb1e74ab770f905747e9a80ef5c0478eb99" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#update_in/3&quot;&gt;&lt;code&gt;update_in/3&lt;/code&gt;&lt;/a&gt;, except the path is extracted via a macro rather than passing a list. For example:</source>
          <target state="translated">Это похоже на &lt;a href=&quot;#update_in/3&quot;&gt; &lt;code&gt;update_in/3&lt;/code&gt; &lt;/a&gt; , за исключением того, что путь извлекается через макрос, а не через передачу списка. Например:</target>
        </trans-unit>
        <trans-unit id="08ab0b2ff940cf63760635df2e0fe23beb3cbaa7" translate="yes" xml:space="preserve">
          <source>This is similar to the mistake we made when we called &lt;code&gt;KV.Bucket.start_link/1&lt;/code&gt; straight from the registry. That meant a failure in any bucket would bring the whole registry down.</source>
          <target state="translated">Это похоже на ошибку, которую мы сделали, когда вызывали &lt;code&gt;KV.Bucket.start_link/1&lt;/code&gt; прямо из реестра. Это означало, что сбой в любом сегменте приведет к отключению всего реестра.</target>
        </trans-unit>
        <trans-unit id="3ba1fb1b640495bd967734dfd1acecd010aa5148" translate="yes" xml:space="preserve">
          <source>This is the default used by &lt;a href=&quot;#encode/2&quot;&gt;&lt;code&gt;URI.encode/2&lt;/code&gt;&lt;/a&gt; where both &lt;a href=&quot;#char_reserved?/1&quot;&gt;reserved&lt;/a&gt; and &lt;a href=&quot;#char_unreserved?/1&quot;&gt;unreserved characters&lt;/a&gt; are kept unescaped.</source>
          <target state="translated">Это значение по умолчанию, используемое &lt;a href=&quot;#encode/2&quot;&gt; &lt;code&gt;URI.encode/2&lt;/code&gt; ,&lt;/a&gt; где как &lt;a href=&quot;#char_reserved?/1&quot;&gt;зарезервированные, так&lt;/a&gt; и &lt;a href=&quot;#char_unreserved?/1&quot;&gt;незарезервированные символы&lt;/a&gt; сохраняются без экранирования.</target>
        </trans-unit>
        <trans-unit id="e61420057f50d9b6c715f4347be7ca8efd78730b" translate="yes" xml:space="preserve">
          <source>This is the default used by &lt;a href=&quot;uri#encode/2&quot;&gt;&lt;code&gt;URI.encode/2&lt;/code&gt;&lt;/a&gt; where both reserved and unreserved characters are kept unescaped.</source>
          <target state="translated">Это значение по умолчанию, используемое &lt;a href=&quot;uri#encode/2&quot;&gt; &lt;code&gt;URI.encode/2&lt;/code&gt; ,&lt;/a&gt; где как зарезервированные, так и незарезервированные символы сохраняются без экранирования.</target>
        </trans-unit>
        <trans-unit id="0dc79651e84bb5089915ce0f6bd2c110d8036119" translate="yes" xml:space="preserve">
          <source>This is the function invoked when there is string interpolation.</source>
          <target state="translated">Это функция,вызываемая при строковой интерполяции.</target>
        </trans-unit>
        <trans-unit id="9b687c89eb6e152da4dd73f09f730d0ddb490ab0" translate="yes" xml:space="preserve">
          <source>This is the list of directories the Erlang VM uses for finding module code.</source>
          <target state="translated">Это список каталогов,которые VM Erlang использует для поиска кода модуля.</target>
        </trans-unit>
        <trans-unit id="a08d7b564f58b24087fbb35fa3617eff44897de1" translate="yes" xml:space="preserve">
          <source>This is the moment, in your calendar, when the current day ends and the next day starts.</source>
          <target state="translated">Это момент в календаре,когда заканчивается текущий день и начинается следующий.</target>
        </trans-unit>
        <trans-unit id="9162b52e4ae81113f3c3ee3bea2997ff399ccecc" translate="yes" xml:space="preserve">
          <source>This is the number of days including the fractional part that has passed of the last day since 0000-01-01+00:00T00:00.000000 in ISO 8601 notation (also known as midnight 1 January BC 1 of the proleptic Gregorian calendar).</source>
          <target state="translated">Это количество дней,включая дробную часть,прошедшую последний день с 0000-01-01+00:00T00:00.000000 в нотации ISO 8601 (также известной как полночь 1 января до н.э.1 по пролептическому григорианскому календарю).</target>
        </trans-unit>
        <trans-unit id="289ea50e9ca33fea490350d4d95a5411c3088228" translate="yes" xml:space="preserve">
          <source>This is the same AST as &lt;code&gt;not(left in right)&lt;/code&gt;.</source>
          <target state="translated">Это то же самое AST, что и &lt;code&gt;not(left in right)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e66f4430d7555e8a783dad322115e9a5ec53c0d1" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;#compile_env/3&quot;&gt;&lt;code&gt;compile_env/3&lt;/code&gt;&lt;/a&gt; but it raises an &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the configuration is not available.</source>
          <target state="translated">Это то же самое, что и &lt;a href=&quot;#compile_env/3&quot;&gt; &lt;code&gt;compile_env/3&lt;/code&gt; ,&lt;/a&gt; но вызывает ошибку &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; ,&lt;/a&gt; если конфигурация недоступна.</target>
        </trans-unit>
        <trans-unit id="a74b9fe2a2d8c864a5673ce9cb8533effa232a81" translate="yes" xml:space="preserve">
          <source>This is the same supervisor as used by &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Callbacks.html#start_supervised/2&quot;&gt;&lt;code&gt;ExUnit.Callbacks.start_supervised/2&lt;/code&gt;&lt;/a&gt; and similar, see &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Callbacks.html&quot;&gt;&lt;code&gt;ExUnit.Callbacks&lt;/code&gt;&lt;/a&gt; module documentation for more information.</source>
          <target state="translated">Это тот же супервизор, который используется &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Callbacks.html#start_supervised/2&quot;&gt; &lt;code&gt;ExUnit.Callbacks.start_supervised/2&lt;/code&gt; &lt;/a&gt; и подобными, см. &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Callbacks.html&quot;&gt; &lt;code&gt;ExUnit.Callbacks&lt;/code&gt; &lt;/a&gt; модуля ExUnit.Callbacks для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="b6d704491ec250974e27401b8e2b811c3f199e66" translate="yes" xml:space="preserve">
          <source>This is the same template generated by &lt;code&gt;mix new --sup&lt;/code&gt;.</source>
          <target state="translated">Это тот же шаблон, сгенерированный &lt;code&gt;mix new --sup&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5580fdfd5d3be89e971bd5cfbc417edd38ca5b8e" translate="yes" xml:space="preserve">
          <source>This is the special form used whenever we have a block of expressions in Elixir. This special form is private and should not be invoked directly:</source>
          <target state="translated">Это специальная форма,используемая всякий раз,когда у нас есть блок выражений в Elixir.Эта специальная форма является закрытой и не должна вызываться напрямую:</target>
        </trans-unit>
        <trans-unit id="ac7417af7c2a4cf8300b3d4dd8d7d38b6e9711f6" translate="yes" xml:space="preserve">
          <source>This is the unescaping behaviour used by default in Elixir single- and double-quoted strings. Check &lt;a href=&quot;#unescape_string/2&quot;&gt;&lt;code&gt;unescape_string/2&lt;/code&gt;&lt;/a&gt; for information on how to customize the escaping map.</source>
          <target state="translated">Это поведение без экранирования, используемое по умолчанию в строках Elixir в одинарных и двойных кавычках. Проверьте &lt;a href=&quot;#unescape_string/2&quot;&gt; &lt;code&gt;unescape_string/2&lt;/code&gt; &lt;/a&gt; для получения информации о том, как настроить экранирующую карту.</target>
        </trans-unit>
        <trans-unit id="13cd7a952e7bcf9bdf6ec9068841b4aa1581c6f4" translate="yes" xml:space="preserve">
          <source>This is typically invoked at the end of the &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt; callback of module-based supervisors. See the &quot;Module-based supervisors&quot; section in the module documentation for more information.</source>
          <target state="translated">Обычно это вызывается в конце обратного вызова &lt;a href=&quot;#c:init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt; супервизоров на основе модулей. Дополнительную информацию см. В разделе &amp;laquo;Супервизоры на основе модулей&amp;raquo; в документации модуля.</target>
        </trans-unit>
        <trans-unit id="4c3451cd606049c68c6fdb6bd088a1087ca448fd" translate="yes" xml:space="preserve">
          <source>This is typically invoked at the end of the &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt; callback of module-based supervisors. See the sections &quot;Module-based supervisors&quot; and &quot;start_link/2, init/2, and strategies&quot; in the module documentation for more information.</source>
          <target state="translated">Обычно это вызывается в конце обратного вызова &lt;a href=&quot;#c:init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt; супервизоров на основе модулей. Дополнительную информацию см. В разделах &amp;laquo;Супервизоры на основе модулей&amp;raquo; и &amp;laquo;start_link / 2, init / 2 и стратегии&amp;raquo; в документации модуля.</target>
        </trans-unit>
        <trans-unit id="af7248045672bdf709fa9a7434ee693bbb5b3f33" translate="yes" xml:space="preserve">
          <source>This is used by Elixir's code formatter to avoid breaking code at some specific locations. For example, consider this code:</source>
          <target state="translated">Это используется форматировщиком кода Elixir,чтобы избежать взлома кода в некоторых конкретных местах.Например,рассмотрим этот код:</target>
        </trans-unit>
        <trans-unit id="b9e62f945dfe72ca17b7bcf35230b54a13d5ce33" translate="yes" xml:space="preserve">
          <source>This is used by third-party projects, like QuickCheck, to implement macros like &lt;code&gt;property/3&lt;/code&gt; that works like &lt;code&gt;test&lt;/code&gt; but instead defines a property. See &lt;a href=&quot;#test/3&quot;&gt;&lt;code&gt;test/3&lt;/code&gt;&lt;/a&gt; implementation for an example of invoking this function.</source>
          <target state="translated">Это используется сторонними проектами, такими как QuickCheck, для реализации макросов, таких как &lt;code&gt;property/3&lt;/code&gt; , которые работают как &lt;code&gt;test&lt;/code&gt; , но вместо этого определяют свойство. См. Реализацию &lt;a href=&quot;#test/3&quot;&gt; &lt;code&gt;test/3&lt;/code&gt; &lt;/a&gt; для примера вызова этой функции.</target>
        </trans-unit>
        <trans-unit id="37d46fa38c10dd65a76b1733d8c4d14f6e5122f5" translate="yes" xml:space="preserve">
          <source>This is useful for debugging a particular chunk of code when executed by a particular process. The process becomes the evaluator of IEx commands and is temporarily changed to have a custom group leader. Those values are reverted by calling &lt;a href=&quot;https://hexdocs.pm/iex/IEx.Helpers.html#respawn/0&quot;&gt;&lt;code&gt;IEx.Helpers.respawn/0&lt;/code&gt;&lt;/a&gt;, which starts a new IEx shell, freeing up the pried one.</source>
          <target state="translated">Это полезно для отладки определенного фрагмента кода при выполнении конкретным процессом. Процесс становится оценщиком команд IEx и временно изменен, чтобы иметь настраиваемого лидера группы. Эти значения &lt;a href=&quot;https://hexdocs.pm/iex/IEx.Helpers.html#respawn/0&quot;&gt; &lt;code&gt;IEx.Helpers.respawn/0&lt;/code&gt; &lt;/a&gt; путем вызова IEx.Helpers.respawn / 0 , который запускает новую оболочку IEx, освобождая загруженную.</target>
        </trans-unit>
        <trans-unit id="7c60447d6bcf0312eb4c4e52c080f8e8aeffd1b2" translate="yes" xml:space="preserve">
          <source>This is useful for debugging a particular chunk of code when executed by a particular process. The process becomes the evaluator of IEx commands and is temporarily changed to have a custom group leader. Those values are reverted by calling &lt;a href=&quot;iex.helpers#respawn/0&quot;&gt;&lt;code&gt;IEx.Helpers.respawn/0&lt;/code&gt;&lt;/a&gt;, which starts a new IEx shell, freeing up the pried one.</source>
          <target state="translated">Это полезно для отладки определенного фрагмента кода при выполнении конкретным процессом. Процесс становится оценщиком команд IEx и временно изменяется, чтобы иметь настраиваемого лидера группы. Эти значения &lt;a href=&quot;iex.helpers#respawn/0&quot;&gt; &lt;code&gt;IEx.Helpers.respawn/0&lt;/code&gt; &lt;/a&gt; путем вызова IEx.Helpers.respawn / 0 , который запускает новую оболочку IEx, освобождая загруженную.</target>
        </trans-unit>
        <trans-unit id="aaba5c733f8e5f3a464f80421ccdf2cbfb12126e" translate="yes" xml:space="preserve">
          <source>This is useful if the default value is very expensive to calculate or generally difficult to setup and teardown again.</source>
          <target state="translated">Это полезно,если значение по умолчанию очень дорого вычислить или вообще сложно настроить и снова подшучивать.</target>
        </trans-unit>
        <trans-unit id="e90f6c096938c0c1b08fe0f1a4ed6112b1726e64" translate="yes" xml:space="preserve">
          <source>This is useful if the value is very expensive to calculate or generally difficult to setup and teardown again.</source>
          <target state="translated">Это полезно,если стоимость очень дорогая для расчета или,как правило,трудно настроить и снова дразнить.</target>
        </trans-unit>
        <trans-unit id="c7ade3c8c2220433a36448cb76b4d6669b0207f9" translate="yes" xml:space="preserve">
          <source>This is useful in two cases:</source>
          <target state="translated">Это полезно в двух случаях:</target>
        </trans-unit>
        <trans-unit id="5a46a616db1ce450247219cde25e3ee509bdc87d" translate="yes" xml:space="preserve">
          <source>This is useful when a stream needs to be run, for side effects, and there is no interest in its return result.</source>
          <target state="translated">Это полезно,когда поток нуждается в запуске,для побочных эффектов,и нет интереса к его возврату.</target>
        </trans-unit>
        <trans-unit id="64ec9debc1653fe16f8858cb9974d03451f758f7" translate="yes" xml:space="preserve">
          <source>This is useful when a struct needs to be expanded at compilation time and the struct being expanded may or may not have been compiled. This function is also capable of expanding structs defined under the module being compiled.</source>
          <target state="translated">Это полезно в тех случаях,когда структура должна быть расширена во время компиляции,а расширяемая структура может быть скомпилирована,а может и не быть.Эта функция также способна расширять структуры,определенные под компилируемым модулем.</target>
        </trans-unit>
        <trans-unit id="8454071c897ae3b3f6c5cf6b435c8859ed4d0efe" translate="yes" xml:space="preserve">
          <source>This is useful when a struct needs to be expanded at compilation time and the struct being expanded may or may not have been compiled. This function is even capable of expanding structs defined under the module being compiled.</source>
          <target state="translated">Это полезно в тех случаях,когда структура должна быть расширена во время компиляции,а расширяемая структура может быть скомпилирована,а может и не быть.Эта функция даже способна расширять структуры,определенные под компилируемым модулем.</target>
        </trans-unit>
        <trans-unit id="58f647f53c93e0adaedcaedcde7d2a04c6e11b1a" translate="yes" xml:space="preserve">
          <source>This is useful when the result is something variable (like a PID in the example above) or when the result is a complicated data structure and you don't want to show it all, but just parts of it or some of its properties.</source>
          <target state="translated">Это полезно,когда результат является чем-то переменным (например,PID в примере выше)или когда результат представляет собой сложную структуру данных,и вы не хотите показывать все это,а только части его или некоторые его свойства.</target>
        </trans-unit>
        <trans-unit id="42708290411e38f509da43bac650f9a95ec98921" translate="yes" xml:space="preserve">
          <source>This is useful when there are a set of setup callbacks or a set of functions that should be shared between test modules.</source>
          <target state="translated">Это полезно при наличии набора обратных вызовов или набора функций,которые должны быть распределены между тестовыми модулями.</target>
        </trans-unit>
        <trans-unit id="bca60e4733f4f8f89c26ce0231040f2ac6f94040" translate="yes" xml:space="preserve">
          <source>This is usually called by sessions started with &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#pry/0&quot;&gt;&lt;code&gt;IEx.pry/0&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#break!/4&quot;&gt;&lt;code&gt;IEx.break!/4&lt;/code&gt;&lt;/a&gt;. This allows the current process to execute until the next breakpoint, which will automatically yield control back to IEx without requesting permission to pry.</source>
          <target state="translated">Обычно это вызывается сеансами, запущенными с &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#pry/0&quot;&gt; &lt;code&gt;IEx.pry/0&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#break!/4&quot;&gt; &lt;code&gt;IEx.break!/4&lt;/code&gt; &lt;/a&gt; . Это позволяет текущему процессу выполняться до следующей точки останова, которая автоматически вернет управление IEx без запроса разрешения на отслеживание.</target>
        </trans-unit>
        <trans-unit id="5765e6f4f6c943fc2869a6d958ffb07d4ecdc95a" translate="yes" xml:space="preserve">
          <source>This is usually called by sessions started with &lt;a href=&quot;iex#pry/0&quot;&gt;&lt;code&gt;IEx.pry/0&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;iex#break!/4&quot;&gt;&lt;code&gt;IEx.break!/4&lt;/code&gt;&lt;/a&gt;. This allows the current process to execute until the next breakpoint, which will automatically yield control back to IEx without requesting permission to pry.</source>
          <target state="translated">Обычно это вызывается сеансами, запущенными с &lt;a href=&quot;iex#pry/0&quot;&gt; &lt;code&gt;IEx.pry/0&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;iex#break!/4&quot;&gt; &lt;code&gt;IEx.break!/4&lt;/code&gt; &lt;/a&gt; . Это позволяет текущему процессу выполняться до следующей точки останова, которая автоматически вернет управление IEx без запроса разрешения на отслеживание.</target>
        </trans-unit>
        <trans-unit id="9795df452756bfa4ad139a3e1454b0c1c3e19967" translate="yes" xml:space="preserve">
          <source>This is usually called by tasks that need additional functions on the project to be defined. Since such tasks usually depend on a project being defined, this function raises a &lt;a href=&quot;https://hexdocs.pm/mix/Mix.NoProjectError.html&quot;&gt;&lt;code&gt;Mix.NoProjectError&lt;/code&gt;&lt;/a&gt; exception in case no project is available.</source>
          <target state="translated">Обычно это вызывается задачами, которым необходимо определить дополнительные функции в проекте. Поскольку такие задачи обычно зависят от определяемого проекта, эта функция вызывает исключение &lt;a href=&quot;https://hexdocs.pm/mix/Mix.NoProjectError.html&quot;&gt; &lt;code&gt;Mix.NoProjectError&lt;/code&gt; ,&lt;/a&gt; если проект недоступен.</target>
        </trans-unit>
        <trans-unit id="d5c28e5992d11ab017599cfba8c0660377868c31" translate="yes" xml:space="preserve">
          <source>This is usually called by tasks that need additional functions on the project to be defined. Since such tasks usually depend on a project being defined, this function raises a &lt;a href=&quot;mix.noprojecterror&quot;&gt;&lt;code&gt;Mix.NoProjectError&lt;/code&gt;&lt;/a&gt; exception in case no project is available.</source>
          <target state="translated">Обычно это вызывается задачами, которым необходимо определить дополнительные функции в проекте. Поскольку такие задачи обычно зависят от определяемого проекта, эта функция вызывает исключение &lt;a href=&quot;mix.noprojecterror&quot;&gt; &lt;code&gt;Mix.NoProjectError&lt;/code&gt; &lt;/a&gt; в случае, если проект недоступен.</target>
        </trans-unit>
        <trans-unit id="70a55e5fc2aa3b9db64d4f94cf960265a3232cd2" translate="yes" xml:space="preserve">
          <source>This is where protocols can help us: protocols allow us to extend the original behavior for as many data types as we need. That&amp;rsquo;s because &lt;strong&gt;dispatching on a protocol is available to any data type that has implemented the protocol&lt;/strong&gt; and a protocol can be implemented by anyone, at any time.</source>
          <target state="translated">Здесь нам могут помочь протоколы: протоколы позволяют нам расширить исходное поведение для любого количества типов данных, которые нам нужны. Это связано с тем, что &lt;strong&gt;диспетчеризация по протоколу доступна для любого типа данных, в котором реализован протокол,&lt;/strong&gt; а протокол может быть реализован кем угодно в любое время.</target>
        </trans-unit>
        <trans-unit id="b871a08121731acae06ea58fe3ca7e1bb16748e0" translate="yes" xml:space="preserve">
          <source>This keeps only significant chunks necessary for the VM operation, discarding documentation, debug info, compile information and others.</source>
          <target state="translated">При этом сохраняются только значительные куски,необходимые для работы ВМ,отбрасывается документация,отлаживается информация,компилируется информация и другие.</target>
        </trans-unit>
        <trans-unit id="89c99ecc9ec64bbd119250b6f605dbf4510f1e46" translate="yes" xml:space="preserve">
          <source>This key is optional, only needed for applications that start a supervision tree.</source>
          <target state="translated">Этот ключ является необязательным,необходим только для приложений,которые запускают дерево контроля.</target>
        </trans-unit>
        <trans-unit id="29ecf7d31c543b3beaa11f8d6b32d12f2cddd50a" translate="yes" xml:space="preserve">
          <source>This lets you put imports in &lt;code&gt;.iex.exs&lt;/code&gt; files (including &lt;code&gt;~/.iex.exs&lt;/code&gt;) without getting compile errors if you open a console where the module is not available.</source>
          <target state="translated">Это позволяет вам помещать импорт в файлы &lt;code&gt;.iex.exs&lt;/code&gt; (включая &lt;code&gt;~/.iex.exs&lt;/code&gt; ), не получая ошибок компиляции, если вы открываете консоль, в которой модуль недоступен.</target>
        </trans-unit>
        <trans-unit id="e5847e98d18087e669daaf541b861bb0616506ae" translate="yes" xml:space="preserve">
          <source>This lets you use the module in &lt;code&gt;.iex.exs&lt;/code&gt; files (including &lt;code&gt;~/.iex.exs&lt;/code&gt;) without getting compile errors if you open a console where the module is not available.</source>
          <target state="translated">Это позволяет вам использовать модуль в файлах &lt;code&gt;.iex.exs&lt;/code&gt; (включая &lt;code&gt;~/.iex.exs&lt;/code&gt; ), не получая ошибок компиляции, если вы открываете консоль, в которой модуль недоступен.</target>
        </trans-unit>
        <trans-unit id="e593f23f33013dc92ddfcd3a9c60d10f99bd1858" translate="yes" xml:space="preserve">
          <source>This linear behaviour should also be expected on operations like &lt;a href=&quot;#count/1&quot;&gt;&lt;code&gt;count/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#member?/2&quot;&gt;&lt;code&gt;member?/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#at/2&quot;&gt;&lt;code&gt;at/2&lt;/code&gt;&lt;/a&gt; and similar. While Elixir does allow data types to provide performant variants for such operations, you should not expect it to always be available, since the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; module is meant to work with a large variety of data types and not all data types can provide optimized behaviour.</source>
          <target state="translated">Такого линейного поведения также следует ожидать при таких операциях, как &lt;a href=&quot;#count/1&quot;&gt; &lt;code&gt;count/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#member?/2&quot;&gt; &lt;code&gt;member?/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#at/2&quot;&gt; &lt;code&gt;at/2&lt;/code&gt; &lt;/a&gt; и т.п. Хотя Elixir позволяет типам данных предоставлять эффективные варианты для таких операций, не следует ожидать, что он будет всегда доступен, поскольку модуль &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; предназначен для работы с большим разнообразием типов данных, и не все типы данных могут обеспечивать оптимизированное поведение.</target>
        </trans-unit>
        <trans-unit id="0519fbd8b9b5639ec90e00d83250f771f4f40453" translate="yes" xml:space="preserve">
          <source>This macro addresses this issue by checking if the file exists or not in behalf of the user.</source>
          <target state="translated">Данный макрос решает эту проблему,проверяя,существует ли файл от имени пользователя или нет.</target>
        </trans-unit>
        <trans-unit id="5cc6e8a94ed92b3b0f91dd0c407badd0f4cd9583" translate="yes" xml:space="preserve">
          <source>This macro defines a module with the given &lt;code&gt;alias&lt;/code&gt; as its name and with the given contents. It returns a tuple with four elements:</source>
          <target state="translated">Этот макрос определяет модуль с заданным &lt;code&gt;alias&lt;/code&gt; качестве имени и с заданным содержимым. Он возвращает кортеж из четырех элементов:</target>
        </trans-unit>
        <trans-unit id="ba5022c9c8161864d7b55a2f306a7cb1932890b2" translate="yes" xml:space="preserve">
          <source>This macro evaluates and returns the &lt;code&gt;do&lt;/code&gt; block passed in as the second argument if &lt;code&gt;condition&lt;/code&gt; evaluates to a falsy value (&lt;code&gt;false&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;). Otherwise, it returns the value of the &lt;code&gt;else&lt;/code&gt; block if present or &lt;code&gt;nil&lt;/code&gt; if not.</source>
          <target state="translated">Этот макрос оценивает и возвращает блок &lt;code&gt;do&lt;/code&gt; , переданный в качестве второго аргумента, если &lt;code&gt;condition&lt;/code&gt; оценивается как ложное значение ( &lt;code&gt;false&lt;/code&gt; или &lt;code&gt;nil&lt;/code&gt; ). В противном случае он возвращает значение блока &lt;code&gt;else&lt;/code&gt; , если он присутствует, или &lt;code&gt;nil&lt;/code&gt; , если нет.</target>
        </trans-unit>
        <trans-unit id="ed734b49c8a157748138d4db51538d7e06cee2ee" translate="yes" xml:space="preserve">
          <source>This macro expects a variable and it is typically invoked inside &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#quote/2&quot;&gt;&lt;code&gt;Kernel.SpecialForms.quote/2&lt;/code&gt;&lt;/a&gt; to mark that a variable should not be hygienized. See &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#quote/2&quot;&gt;&lt;code&gt;Kernel.SpecialForms.quote/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Этот макрос ожидает переменную и обычно вызывается внутри &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#quote/2&quot;&gt; &lt;code&gt;Kernel.SpecialForms.quote/2&lt;/code&gt; ,&lt;/a&gt; чтобы отметить, что переменная не должна подвергаться гигиенической обработке. См. &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#quote/2&quot;&gt; &lt;code&gt;Kernel.SpecialForms.quote/2&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="053dc4326086a38d85524369b85300ca1b5d0614" translate="yes" xml:space="preserve">
          <source>This macro expects the first argument to be a condition and the second argument to be a keyword list.</source>
          <target state="translated">Этот макрос ожидает,что первым аргументом будет условие,а вторым-список ключевых слов.</target>
        </trans-unit>
        <trans-unit id="09100845f4d4f229d78b6113f1e6a5dce38e078d" translate="yes" xml:space="preserve">
          <source>This macro is auto-imported with every &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html&quot;&gt;&lt;code&gt;ExUnit.Case&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот макрос автоматически импортируется с каждым &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html&quot;&gt; &lt;code&gt;ExUnit.Case&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="116b64f16c1348abfeaaf5c29004dd2cd4513959" translate="yes" xml:space="preserve">
          <source>This macro is deprecated in favour of &lt;a href=&quot;#warning/2&quot;&gt;&lt;code&gt;warning/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот макрос устарел и заменен &lt;a href=&quot;#warning/2&quot;&gt; &lt;code&gt;warning/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1884b82116e213d51fde668f93db8aefff68f2db" translate="yes" xml:space="preserve">
          <source>This macro is deprecated. Use the Config module instead.</source>
          <target state="translated">Этот макрос устарел.Вместо этого используйте модуль Config.</target>
        </trans-unit>
        <trans-unit id="fa58f8e50bd6c8d47ad7511ec3aec19833923a02" translate="yes" xml:space="preserve">
          <source>This macro is used to generate ExUnit test cases for doctests.</source>
          <target state="translated">Данный макрос используется для генерации тестовых сценариев ExUnit для doctests.</target>
        </trans-unit>
        <trans-unit id="b7318b11fdb5ce2984ea08a62c18118bc9d28bcc" translate="yes" xml:space="preserve">
          <source>This makes your code clearer and easier to test and maintain, as you can invoke and test &lt;code&gt;do_this_that_and_that/3&lt;/code&gt; directly. It also helps you design an actual API for developers that do not want to rely on macros.</source>
          <target state="translated">Это делает ваш код более понятным и легким для тестирования и сопровождения, поскольку вы можете напрямую вызывать и тестировать &lt;code&gt;do_this_that_and_that/3&lt;/code&gt; . Это также поможет вам разработать реальный API для разработчиков, которые не хотят полагаться на макросы.</target>
        </trans-unit>
        <trans-unit id="781a3479b6ef9afbd878f1e315bbde3afc7381db" translate="yes" xml:space="preserve">
          <source>This means &lt;a href=&quot;#get_and_update_in/3&quot;&gt;&lt;code&gt;get_and_update_in/3&lt;/code&gt;&lt;/a&gt; can be extended to provide custom lookups. The downside is that functions cannot be stored as keys in the accessed data structures.</source>
          <target state="translated">Это означает, что &lt;a href=&quot;#get_and_update_in/3&quot;&gt; &lt;code&gt;get_and_update_in/3&lt;/code&gt; &lt;/a&gt; может быть расширен для предоставления пользовательского поиска. Обратной стороной является то, что функции не могут быть сохранены как ключи в структурах данных, к которым осуществляется доступ.</target>
        </trans-unit>
        <trans-unit id="31c83c38260c43e23e00b1d110954e0ba5266ba4" translate="yes" xml:space="preserve">
          <source>This means &lt;a href=&quot;#get_in/2&quot;&gt;&lt;code&gt;get_in/2&lt;/code&gt;&lt;/a&gt; can be extended to provide custom lookups. In the example below, we use a function to get all the maps inside a list:</source>
          <target state="translated">Это означает, что &lt;a href=&quot;#get_in/2&quot;&gt; &lt;code&gt;get_in/2&lt;/code&gt; &lt;/a&gt; может быть расширен для обеспечения пользовательского поиска. В приведенном ниже примере мы используем функцию для получения всех карт внутри списка:</target>
        </trans-unit>
        <trans-unit id="cfd9674170ea7f680e0ec4f0f9ace7b923ad6168" translate="yes" xml:space="preserve">
          <source>This means &lt;a href=&quot;#get_in/2&quot;&gt;&lt;code&gt;get_in/2&lt;/code&gt;&lt;/a&gt; can be extended to provide custom lookups. The downside is that functions cannot be stored as keys in the accessed data structures.</source>
          <target state="translated">Это означает, что &lt;a href=&quot;#get_in/2&quot;&gt; &lt;code&gt;get_in/2&lt;/code&gt; &lt;/a&gt; может быть расширен для обеспечения пользовательского поиска. Обратной стороной является то, что функции не могут быть сохранены как ключи в структурах данных, к которым осуществляется доступ.</target>
        </trans-unit>
        <trans-unit id="7a04c313f02da8b2b423b92a32377c49ecdd6219" translate="yes" xml:space="preserve">
          <source>This means files can be passed between nodes and message passing guarantees they can write to the same file in a network.</source>
          <target state="translated">Это означает,что файлы могут передаваться между узлами,а передача сообщений гарантирует,что они могут записывать в один и тот же файл в сети.</target>
        </trans-unit>
        <trans-unit id="1e15019a33fea88c51d5e497980380e75ee3dd48" translate="yes" xml:space="preserve">
          <source>This means often there are performance costs in using the functions in this module, compared to the more low-level operations that work directly with binaries:</source>
          <target state="translated">Это означает,что при использовании функций в этом модуле часто возникают затраты на производительность по сравнению с более низкоуровневыми операциями,которые работают непосредственно с двоичными файлами:</target>
        </trans-unit>
        <trans-unit id="8571bea1bef1bde6a2d1b2d12776f78df57e4340" translate="yes" xml:space="preserve">
          <source>This means our implementation is going in the correct direction, but it doesn&amp;rsquo;t look very elegant, does it?</source>
          <target state="translated">Это означает, что наша реализация идет в правильном направлении, но выглядит она не очень элегантно, не так ли?</target>
        </trans-unit>
        <trans-unit id="64cb76e001bde4ce0c23b9ae9350ed13f2f87e6d" translate="yes" xml:space="preserve">
          <source>This means reserved characters, such as &lt;code&gt;:&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt;, and the so-called unreserved characters, which have the same meaning both escaped and unescaped, won't be escaped by default.</source>
          <target state="translated">Это означает, что зарезервированные символы, такие как &lt;code&gt;:&lt;/code&gt; и &lt;code&gt;/&lt;/code&gt; , и так называемые незарезервированные символы, которые имеют одно и то же значение как с экранированием, так и без экранирования, по умолчанию не экранируются.</target>
        </trans-unit>
        <trans-unit id="466121cf36d188101adba56c09d86681a5f8592b" translate="yes" xml:space="preserve">
          <source>This means that when performing multiple operations with &lt;code&gt;Enum&lt;/code&gt;, each operation is going to generate an intermediate list until we reach the result:</source>
          <target state="translated">Это означает, что при выполнении нескольких операций с &lt;code&gt;Enum&lt;/code&gt; каждая операция будет генерировать промежуточный список, пока мы не достигнем результата:</target>
        </trans-unit>
        <trans-unit id="e439478d8b723981d4581d054a8682120535699c" translate="yes" xml:space="preserve">
          <source>This means the VM no longer needs to keep the stacktrace once inside an &lt;code&gt;else&lt;/code&gt; clause and so tail recursion is possible when using a &lt;code&gt;try&lt;/code&gt; with a tail call as the final call inside an &lt;code&gt;else&lt;/code&gt; clause. The same is true for &lt;code&gt;rescue&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt; clauses.</source>
          <target state="translated">Это означает, что виртуальной машине больше не нужно сохранять трассировку стека один раз внутри предложения &lt;code&gt;else&lt;/code&gt; , и поэтому хвостовая рекурсия возможна при использовании &lt;code&gt;try&lt;/code&gt; с хвостовым вызовом в качестве последнего вызова внутри предложения &lt;code&gt;else&lt;/code&gt; . То же самое и в отношении оговорок о &lt;code&gt;rescue&lt;/code&gt; и &lt;code&gt;catch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03cbb2743a8fea6a87cdaa1b5871df611958047b" translate="yes" xml:space="preserve">
          <source>This means we can also configure our &lt;code&gt;:routing_table&lt;/code&gt; directly in the &lt;code&gt;config/config.exs&lt;/code&gt; file. However, which configuration value should we use?</source>
          <target state="translated">Это означает, что мы также можем настроить нашу &lt;code&gt;:routing_table&lt;/code&gt; непосредственно в файле &lt;code&gt;config/config.exs&lt;/code&gt; . Однако какое значение конфигурации мы должны использовать?</target>
        </trans-unit>
        <trans-unit id="d88b91b0ac64ad4e82abb4e5d0dae196f85569c8" translate="yes" xml:space="preserve">
          <source>This message was triggered by invoking the helper &lt;code&gt;h()&lt;/code&gt;, usually referred to as &lt;a href=&quot;#h/0&quot;&gt;&lt;code&gt;h/0&lt;/code&gt;&lt;/a&gt; (since it expects 0 arguments).</source>
          <target state="translated">Это сообщение было вызвано вызовом помощника &lt;code&gt;h()&lt;/code&gt; , обычно называемого &lt;a href=&quot;#h/0&quot;&gt; &lt;code&gt;h/0&lt;/code&gt; &lt;/a&gt; (поскольку он ожидает 0 аргументов).</target>
        </trans-unit>
        <trans-unit id="0f38cc8ed71ef5111e6f4d0950287ab1718bd370" translate="yes" xml:space="preserve">
          <source>This module allows a developer to define a test case template to be used throughout their tests. This is useful when there are a set of functions that should be shared between tests or a set of setup callbacks.</source>
          <target state="translated">Этот модуль позволяет разработчику определить шаблон тестового случая,который будет использоваться на протяжении всех тестов.Это полезно,когда есть набор функций,которые должны быть разделены между тестами,или набор обратных вызовов установки.</target>
        </trans-unit>
        <trans-unit id="29465ded0e12b42e58045ba6de87bf204437ce87" translate="yes" xml:space="preserve">
          <source>This module allows developers to specify a string that serves as template for log messages, for example:</source>
          <target state="translated">Этот модуль позволяет разработчикам задавать строку,которая служит шаблоном,например,для сообщений журнала:</target>
        </trans-unit>
        <trans-unit id="4305f790d0ec82e224afef341de114e73b6a1e74" translate="yes" xml:space="preserve">
          <source>This module also documents macros that return information about Elixir's compilation environment, such as (&lt;a href=&quot;#__ENV__/0&quot;&gt;&lt;code&gt;__ENV__/0&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#__MODULE__/0&quot;&gt;&lt;code&gt;__MODULE__/0&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#__DIR__/0&quot;&gt;&lt;code&gt;__DIR__/0&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#__CALLER__/0&quot;&gt;&lt;code&gt;__CALLER__/0&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Этот модуль также документирует макросы, которые возвращают информацию о среде компиляции Elixir, например ( &lt;a href=&quot;#__ENV__/0&quot;&gt; &lt;code&gt;__ENV__/0&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#__MODULE__/0&quot;&gt; &lt;code&gt;__MODULE__/0&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#__DIR__/0&quot;&gt; &lt;code&gt;__DIR__/0&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#__CALLER__/0&quot;&gt; &lt;code&gt;__CALLER__/0&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3741d9dd92ba5c7f8bc185d6546445601bc27a51" translate="yes" xml:space="preserve">
          <source>This module also documents macros that return information about Elixir's compilation environment, such as (&lt;a href=&quot;#__ENV__/0&quot;&gt;&lt;code&gt;__ENV__/0&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#__MODULE__/0&quot;&gt;&lt;code&gt;__MODULE__/0&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#__DIR__/0&quot;&gt;&lt;code&gt;__DIR__/0&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#__STACKTRACE__/0&quot;&gt;&lt;code&gt;__STACKTRACE__/0&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#__CALLER__/0&quot;&gt;&lt;code&gt;__CALLER__/0&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Этот модуль также документирует макросы, которые возвращают информацию о среде компиляции Elixir, например ( &lt;a href=&quot;#__ENV__/0&quot;&gt; &lt;code&gt;__ENV__/0&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#__MODULE__/0&quot;&gt; &lt;code&gt;__MODULE__/0&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#__DIR__/0&quot;&gt; &lt;code&gt;__DIR__/0&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#__STACKTRACE__/0&quot;&gt; &lt;code&gt;__STACKTRACE__/0&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#__CALLER__/0&quot;&gt; &lt;code&gt;__CALLER__/0&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d8c660841c33dff8911e93abdee348ab3a09d4db" translate="yes" xml:space="preserve">
          <source>This module also includes helpers for debugging purposes, see &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#break!/4&quot;&gt;&lt;code&gt;IEx.break!/4&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Этот модуль также включает помощники для целей отладки, см. &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#break!/4&quot;&gt; &lt;code&gt;IEx.break!/4&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="b8d05e55cf46fce50db35799f75e85316f97b59d" translate="yes" xml:space="preserve">
          <source>This module also includes helpers for debugging purposes, see &lt;a href=&quot;iex#break!/4&quot;&gt;&lt;code&gt;IEx.break!/4&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Этот модуль также включает помощников для целей отладки, см. &lt;a href=&quot;iex#break!/4&quot;&gt; &lt;code&gt;IEx.break!/4&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="ef6795d77de60f24997761f8faf2a5faa8a9879b" translate="yes" xml:space="preserve">
          <source>This module also provides low-level functions, such as &lt;a href=&quot;#next/2&quot;&gt;&lt;code&gt;next/2&lt;/code&gt;&lt;/a&gt;, for parsing switches manually, as well as &lt;a href=&quot;#split/1&quot;&gt;&lt;code&gt;split/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#to_argv/1&quot;&gt;&lt;code&gt;to_argv/1&lt;/code&gt;&lt;/a&gt; for parsing from and converting switches to strings.</source>
          <target state="translated">Этот модуль также предоставляет низкоуровневые функции, такие как &lt;a href=&quot;#next/2&quot;&gt; &lt;code&gt;next/2&lt;/code&gt; &lt;/a&gt; , для ручного анализа переключателей, а также &lt;a href=&quot;#split/1&quot;&gt; &lt;code&gt;split/1&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#to_argv/1&quot;&gt; &lt;code&gt;to_argv/1&lt;/code&gt; &lt;/a&gt; для синтаксического анализа и преобразования переключателей в строки.</target>
        </trans-unit>
        <trans-unit id="5a3684a4a565b66b7520e22d3fbaa6d25f44fe28" translate="yes" xml:space="preserve">
          <source>This module also provides many convenience functions for creating streams, like &lt;a href=&quot;#cycle/1&quot;&gt;&lt;code&gt;Stream.cycle/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unfold/2&quot;&gt;&lt;code&gt;Stream.unfold/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#resource/3&quot;&gt;&lt;code&gt;Stream.resource/3&lt;/code&gt;&lt;/a&gt; and more.</source>
          <target state="translated">Этот модуль также предоставляет множество удобных функций для создания потоков, таких как &lt;a href=&quot;#cycle/1&quot;&gt; &lt;code&gt;Stream.cycle/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#unfold/2&quot;&gt; &lt;code&gt;Stream.unfold/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#resource/3&quot;&gt; &lt;code&gt;Stream.resource/3&lt;/code&gt; &lt;/a&gt; и другие.</target>
        </trans-unit>
        <trans-unit id="08818329b397b72cb93efb576183f5c8fee90efe" translate="yes" xml:space="preserve">
          <source>This module also provides many convenience functions for creating streams, like &lt;a href=&quot;stream#cycle/1&quot;&gt;&lt;code&gt;Stream.cycle/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stream#unfold/2&quot;&gt;&lt;code&gt;Stream.unfold/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stream#resource/3&quot;&gt;&lt;code&gt;Stream.resource/3&lt;/code&gt;&lt;/a&gt; and more.</source>
          <target state="translated">Этот модуль также предоставляет множество удобных функций для создания потоков, таких как &lt;a href=&quot;stream#cycle/1&quot;&gt; &lt;code&gt;Stream.cycle/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;stream#unfold/2&quot;&gt; &lt;code&gt;Stream.unfold/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;stream#resource/3&quot;&gt; &lt;code&gt;Stream.resource/3&lt;/code&gt; &lt;/a&gt; и другие.</target>
        </trans-unit>
        <trans-unit id="ad2b3a4e9085aa555ad326d7ab4e688a30372b07" translate="yes" xml:space="preserve">
          <source>This module also provides other convenience functions like &lt;code&gt;assert_in_delta&lt;/code&gt; and &lt;code&gt;assert_raise&lt;/code&gt; to easily handle other common cases such as checking a floating-point number or handling exceptions.</source>
          <target state="translated">Этот модуль также предоставляет другие удобные функции, такие как &lt;code&gt;assert_in_delta&lt;/code&gt; и &lt;code&gt;assert_raise&lt;/code&gt; , для простой обработки других распространенных случаев, таких как проверка числа с плавающей запятой или обработка исключений.</target>
        </trans-unit>
        <trans-unit id="9e2d831a828a6863612cdac8824ced54a83aa6de" translate="yes" xml:space="preserve">
          <source>This module automatically includes all callbacks defined in &lt;a href=&quot;exunit.callbacks&quot;&gt;&lt;code&gt;ExUnit.Callbacks&lt;/code&gt;&lt;/a&gt;. See that module for more information on &lt;code&gt;setup&lt;/code&gt;, &lt;code&gt;start_supervised&lt;/code&gt;, &lt;code&gt;on_exit&lt;/code&gt; and the test process lifecycle.</source>
          <target state="translated">Этот модуль автоматически включает все обратные вызовы, определенные в &lt;a href=&quot;exunit.callbacks&quot;&gt; &lt;code&gt;ExUnit.Callbacks&lt;/code&gt; &lt;/a&gt; . См. &lt;code&gt;start_supervised&lt;/code&gt; модуль для получения дополнительной информации о &lt;code&gt;setup&lt;/code&gt; , start_supervised , &lt;code&gt;on_exit&lt;/code&gt; и жизненном цикле процесса тестирования.</target>
        </trans-unit>
        <trans-unit id="be140f9c425b22d10787335e62d9c0f4bf2df955" translate="yes" xml:space="preserve">
          <source>This module automatically includes all callbacks defined in &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Callbacks.html&quot;&gt;&lt;code&gt;ExUnit.Callbacks&lt;/code&gt;&lt;/a&gt;. See that module for more information on &lt;code&gt;setup&lt;/code&gt;, &lt;code&gt;start_supervised&lt;/code&gt;, &lt;code&gt;on_exit&lt;/code&gt; and the test process life cycle.</source>
          <target state="translated">Этот модуль автоматически включает все обратные вызовы, определенные в &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Callbacks.html&quot;&gt; &lt;code&gt;ExUnit.Callbacks&lt;/code&gt; &lt;/a&gt; . См. &lt;code&gt;start_supervised&lt;/code&gt; модуль для получения дополнительной информации о &lt;code&gt;setup&lt;/code&gt; , start_supervised , &lt;code&gt;on_exit&lt;/code&gt; и жизненном цикле процесса тестирования.</target>
        </trans-unit>
        <trans-unit id="a6257d1fd58c649338860fae4d9c7189fabdb3f2" translate="yes" xml:space="preserve">
          <source>This module complements Erlang's &lt;a href=&quot;http://www.erlang.org/doc/man/code.html&quot;&gt;&lt;code&gt;:code&lt;/code&gt; module&lt;/a&gt; to add behaviour which is specific to Elixir. Almost all of the functions in this module have global side effects on the behaviour of Elixir.</source>
          <target state="translated">Этот модуль дополняет Эрланг &lt;a href=&quot;http://www.erlang.org/doc/man/code.html&quot;&gt; &lt;code&gt;:code&lt;/code&gt; модуль&lt;/a&gt; для поведения надстройки , который является специфичным для эликсира. Почти все функции в этом модуле имеют глобальные побочные эффекты на поведение Elixir.</target>
        </trans-unit>
        <trans-unit id="653ac253ebf8eeb2f4ad27098db4993bb2625263" translate="yes" xml:space="preserve">
          <source>This module contains a set of assertion functions that are imported by default into your test cases.</source>
          <target state="translated">Этот модуль содержит набор функций утверждения,которые по умолчанию импортируются в ваши тестовые случаи.</target>
        </trans-unit>
        <trans-unit id="922f087298c98adf032ad8b0ed4a5b0046285656" translate="yes" xml:space="preserve">
          <source>This module contains functions to manipulate files.</source>
          <target state="translated">Данный модуль содержит функции для работы с файлами.</target>
        </trans-unit>
        <trans-unit id="999b5229e2658017fe9fe551f8ab83bda85a2221" translate="yes" xml:space="preserve">
          <source>This module contains three functions for compiling and evaluating files. Here is a summary of them and their behaviour:</source>
          <target state="translated">Этот модуль содержит три функции для компиляции и оценки файлов.Ниже приведена краткая информация о них и их поведении:</target>
        </trans-unit>
        <trans-unit id="6edd43c8bb392184539818160b2c1a73b42dd599" translate="yes" xml:space="preserve">
          <source>This module defines a behaviour for providing time zone data.</source>
          <target state="translated">Этот модуль определяет поведение для предоставления данных о часовых поясах.</target>
        </trans-unit>
        <trans-unit id="fc612a9ae903e6387df477d371e55523892dcb6f" translate="yes" xml:space="preserve">
          <source>This module defines a supervisor which can be used to dynamically supervise tasks.</source>
          <target state="translated">Данный модуль определяет супервайзер,который может использоваться для динамического контроля задач.</target>
        </trans-unit>
        <trans-unit id="ff54a5422bbcc14ae0339cf9003ae87e696322e7" translate="yes" xml:space="preserve">
          <source>This module defines the &lt;a href=&quot;#setup/1&quot;&gt;&lt;code&gt;setup/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setup/2&quot;&gt;&lt;code&gt;setup/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setup_all/1&quot;&gt;&lt;code&gt;setup_all/1&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#setup_all/2&quot;&gt;&lt;code&gt;setup_all/2&lt;/code&gt;&lt;/a&gt; callbacks, as well as the &lt;a href=&quot;#on_exit/2&quot;&gt;&lt;code&gt;on_exit/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#start_supervised/2&quot;&gt;&lt;code&gt;start_supervised/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stop_supervised/1&quot;&gt;&lt;code&gt;stop_supervised/1&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">Этот модуль определяет обратные вызовы &lt;a href=&quot;#setup/1&quot;&gt; &lt;code&gt;setup/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#setup/2&quot;&gt; &lt;code&gt;setup/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#setup_all/1&quot;&gt; &lt;code&gt;setup_all/1&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#setup_all/2&quot;&gt; &lt;code&gt;setup_all/2&lt;/code&gt; &lt;/a&gt; , а также функции &lt;a href=&quot;#on_exit/2&quot;&gt; &lt;code&gt;on_exit/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#start_supervised/2&quot;&gt; &lt;code&gt;start_supervised/2&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#stop_supervised/1&quot;&gt; &lt;code&gt;stop_supervised/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7bb87d9bb4c75afab1fe54071112deb7c5a60247" translate="yes" xml:space="preserve">
          <source>This module defines the behaviour for a Mix task that does compilation.</source>
          <target state="translated">Этот модуль определяет поведение для задачи Mix,которая выполняет компиляцию.</target>
        </trans-unit>
        <trans-unit id="adca2c4f19b234afbf1c3981b55410081f195e79" translate="yes" xml:space="preserve">
          <source>This module defines the responsibilities for working with calendars, dates, times and datetimes in Elixir.</source>
          <target state="translated">Этот модуль определяет обязанности по работе с календарями,датами,временем и датами в Elixir.</target>
        </trans-unit>
        <trans-unit id="1b157bc741bdfd8ba6ae8d42ded3b63cf4cd77d7" translate="yes" xml:space="preserve">
          <source>This module implements the functionality described in &lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.34.2200&quot;&gt;&quot;Strictly Pretty&quot; (2000) by Christian Lindig&lt;/a&gt; with small additions, like support for binary nodes and a break mode that maximises use of horizontal space.</source>
          <target state="translated">Этот модуль реализует функциональность, описанную &lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.34.2200&quot;&gt;Кристианом Линдигом в книге &quot;Strictly Pretty&quot; (2000),&lt;/a&gt; с небольшими дополнениями, такими как поддержка двоичных узлов и режим прерывания, который максимально использует горизонтальное пространство.</target>
        </trans-unit>
        <trans-unit id="112202a17c89837b3a647d3e666a456f2e4b078d" translate="yes" xml:space="preserve">
          <source>This module includes the built-in guards used by Elixir developers. They are a predefined set of functions and macros that augment pattern matching, typically invoked after the &lt;code&gt;when&lt;/code&gt; operator. For example:</source>
          <target state="translated">Этот модуль включает встроенные средства защиты, используемые разработчиками Elixir. Они представляют собой предопределенный набор функций и макросов, которые дополняют сопоставление с образцом, обычно вызываются после оператора &lt;code&gt;when&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="cc9a3de9fefb0b3c084b5528aedf73062faf9707" translate="yes" xml:space="preserve">
          <source>This module is deprecated, use the &lt;a href=&quot;https://hexdocs.pm/elixir/MapSet.html&quot;&gt;&lt;code&gt;MapSet&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="translated">Этот модуль не рекомендуется, используйте вместо &lt;a href=&quot;https://hexdocs.pm/elixir/MapSet.html&quot;&gt; &lt;code&gt;MapSet&lt;/code&gt; &lt;/a&gt; модуль MapSet .</target>
        </trans-unit>
        <trans-unit id="83714cee8828e8f9110c531415bac329978b2d35" translate="yes" xml:space="preserve">
          <source>This module is deprecated, use the &lt;a href=&quot;mapset&quot;&gt;&lt;code&gt;MapSet&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="translated">Этот модуль не рекомендуется, используйте вместо &lt;a href=&quot;mapset&quot;&gt; &lt;code&gt;MapSet&lt;/code&gt; &lt;/a&gt; модуль MapSet .</target>
        </trans-unit>
        <trans-unit id="0495cc6d49a1f2bcfa929825091c762ee979f726" translate="yes" xml:space="preserve">
          <source>This module is deprecated, use the modules &lt;a href=&quot;https://hexdocs.pm/elixir/Config.html&quot;&gt;&lt;code&gt;Config&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Config.Reader.html&quot;&gt;&lt;code&gt;Config.Reader&lt;/code&gt;&lt;/a&gt; from Elixir's standard library instead.</source>
          <target state="translated">Этот модуль устарел, используйте вместо него модули &lt;a href=&quot;https://hexdocs.pm/elixir/Config.html&quot;&gt; &lt;code&gt;Config&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://hexdocs.pm/elixir/Config.Reader.html&quot;&gt; &lt;code&gt;Config.Reader&lt;/code&gt; &lt;/a&gt; из стандартной библиотеки Elixir.</target>
        </trans-unit>
        <trans-unit id="60fd8da7254ec766067fc2237c8a6fbc5505757a" translate="yes" xml:space="preserve">
          <source>This module is deprecated. Instead of &lt;a href=&quot;#defcallback/1&quot;&gt;&lt;code&gt;defcallback/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#defmacrocallback/1&quot;&gt;&lt;code&gt;defmacrocallback/1&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;@callback&lt;/code&gt; and &lt;code&gt;@macrocallback&lt;/code&gt; module attributes can be used (respectively). See the documentation for &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt; for more information on these attributes.</source>
          <target state="translated">Этот модуль устарел. Вместо того , чтобы &lt;a href=&quot;#defcallback/1&quot;&gt; &lt;code&gt;defcallback/1&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#defmacrocallback/1&quot;&gt; &lt;code&gt;defmacrocallback/1&lt;/code&gt; &lt;/a&gt; , то &lt;code&gt;@callback&lt;/code&gt; и &lt;code&gt;@macrocallback&lt;/code&gt; могут быть использованы атрибуты модуля (соответственно). См. Документацию по &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации об этих атрибутах.</target>
        </trans-unit>
        <trans-unit id="698253e94267be04646f8c090c390fb2cc54ab28" translate="yes" xml:space="preserve">
          <source>This module is deprecated. Instead of &lt;a href=&quot;#defcallback/1&quot;&gt;&lt;code&gt;defcallback/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#defmacrocallback/1&quot;&gt;&lt;code&gt;defmacrocallback/1&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;@callback&lt;/code&gt; and &lt;code&gt;@macrocallback&lt;/code&gt; module attributes can be used (respectively). See the documentation for &lt;a href=&quot;module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt; for more information on these attributes.</source>
          <target state="translated">Этот модуль устарел. Вместо того , чтобы &lt;a href=&quot;#defcallback/1&quot;&gt; &lt;code&gt;defcallback/1&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#defmacrocallback/1&quot;&gt; &lt;code&gt;defmacrocallback/1&lt;/code&gt; &lt;/a&gt; , то &lt;code&gt;@callback&lt;/code&gt; и &lt;code&gt;@macrocallback&lt;/code&gt; могут быть использованы атрибуты модуля (соответственно). См. Документацию по &lt;a href=&quot;module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации об этих атрибутах.</target>
        </trans-unit>
        <trans-unit id="fdf2b70f41d95f88ee9e4aeda784850c33cb6114" translate="yes" xml:space="preserve">
          <source>This module is deprecated. Use @callback and @macrocallback attributes instead.</source>
          <target state="translated">Этот модуль устарел.Вместо этого используйте атрибуты @callback и @macrocallback.</target>
        </trans-unit>
        <trans-unit id="3d00a52e370b2dc890428ed554a01c357e7af552" translate="yes" xml:space="preserve">
          <source>This module is deprecated. Use Config and Config.Reader instead.</source>
          <target state="translated">Этот модуль устарел.Вместо этого используйте Config и Config.Reader.</target>
        </trans-unit>
        <trans-unit id="21c46dbb91fb819b2c0d1361c70dbb30920cffa0" translate="yes" xml:space="preserve">
          <source>This module is deprecated. Use Map instead.</source>
          <target state="translated">Этот модуль устарел.Вместо этого используйте карту.</target>
        </trans-unit>
        <trans-unit id="39e094eeeb209ce88d3bf96eb154f3cef16627e8" translate="yes" xml:space="preserve">
          <source>This module is deprecated. Use Map or Keyword modules instead.</source>
          <target state="translated">Этот модуль устарел.Вместо этого используйте модули &quot;Карта&quot; или &quot;Ключевые слова&quot;.</target>
        </trans-unit>
        <trans-unit id="45cb95722786d1fc420f1550713942a3d2a40ee4" translate="yes" xml:space="preserve">
          <source>This module is deprecated. Use MapSet instead.</source>
          <target state="translated">Этот модуль устарел.Вместо этого используйте MapSet.</target>
        </trans-unit>
        <trans-unit id="8bfe2ac5b2ad8a73d077417b66f5ed47d757f034" translate="yes" xml:space="preserve">
          <source>This module is deprecated. Use the &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="translated">Этот модуль устарел. Вместо этого используйте модуль &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="46e498b026f4f6f31e26916a4df3d6d96afaccb2" translate="yes" xml:space="preserve">
          <source>This module is deprecated. Use the &lt;a href=&quot;https://hexdocs.pm/elixir/MapSet.html&quot;&gt;&lt;code&gt;MapSet&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="translated">Этот модуль устарел. Используйте &lt;a href=&quot;https://hexdocs.pm/elixir/MapSet.html&quot;&gt; &lt;code&gt;MapSet&lt;/code&gt; &lt;/a&gt; вместо модуля.</target>
        </trans-unit>
        <trans-unit id="b8d2e8897e9809b530aad6556d1d82b7d911062f" translate="yes" xml:space="preserve">
          <source>This module is deprecated. Use the &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="translated">Этот модуль устарел. Вместо этого используйте модуль &lt;a href=&quot;map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ff61ace86ab234eb7df8bf6ecf37e092b5b0882a" translate="yes" xml:space="preserve">
          <source>This module is deprecated. Use the &lt;a href=&quot;mapset&quot;&gt;&lt;code&gt;MapSet&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="translated">Этот модуль устарел. Используйте &lt;a href=&quot;mapset&quot;&gt; &lt;code&gt;MapSet&lt;/code&gt; &lt;/a&gt; вместо модуля.</target>
        </trans-unit>
        <trans-unit id="51805cd79a5e913405d55c2dfa613daced6e0652" translate="yes" xml:space="preserve">
          <source>This module is deprecated. Use the new child specifications outlined in the Supervisor module instead.</source>
          <target state="translated">Этот модуль устарел.Вместо этого используйте новые спецификации для детей,описанные в модуле администратора.</target>
        </trans-unit>
        <trans-unit id="090a0510a4b709bb729894c57c0c587dc11055ba" translate="yes" xml:space="preserve">
          <source>This module is most commonly used to define application configuration, typically in &lt;code&gt;config/config.exs&lt;/code&gt;:</source>
          <target state="translated">Этот модуль чаще всего используется для определения конфигурации приложения, обычно в &lt;code&gt;config/config.exs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2befac5116f60db9c19a013fd1aa9a67a87481ad" translate="yes" xml:space="preserve">
          <source>This module must be used in other modules as a way to configure and prepare them for testing.</source>
          <target state="translated">Этот модуль должен использоваться в других модулях как способ их настройки и подготовки к тестированию.</target>
        </trans-unit>
        <trans-unit id="5b22afa6be61052c1f9cdf8dac15ff3c336d6750" translate="yes" xml:space="preserve">
          <source>This module provides 3 main APIs for you to use:</source>
          <target state="translated">Этот модуль предоставляет 3 основных API для использования:</target>
        </trans-unit>
        <trans-unit id="769d078447abaa6265ad7bb0de8a70d942cff612" translate="yes" xml:space="preserve">
          <source>This module provides a Mix shell implementation that uses the current process mailbox for communication instead of IO.</source>
          <target state="translated">Этот модуль предоставляет реализацию оболочки Mix,которая использует текущий почтовый ящик процесса для связи вместо IO.</target>
        </trans-unit>
        <trans-unit id="97378d1871eb3d3c2cbd5fdcf8a5c1c351518c6d" translate="yes" xml:space="preserve">
          <source>This module provides convenience functions for traversing other structures, like tuples and lists. These functions can be used in all the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Access&lt;/code&gt;&lt;/a&gt;-related functions and macros in &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот модуль предоставляет удобные функции для обхода других структур, таких как кортежи и списки. Эти функции могут использоваться во всех связанных с &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Access&lt;/code&gt; &lt;/a&gt; функциях и макросах &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61d141fedc9a9bf97077c1d4c4dd489c9b785e1b" translate="yes" xml:space="preserve">
          <source>This module provides convenience functions for traversing other structures, like tuples and lists. These functions can be used in all the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Access&lt;/code&gt;&lt;/a&gt;-related functions and macros in &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот модуль предоставляет удобные функции для обхода других структур, таких как кортежи и списки. Эти функции можно использовать во всех функциях и макросах, связанных с &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Access&lt;/code&gt; ,&lt;/a&gt; в &lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="782a5e74e17fd10ef3053ba12c4f6db6d729bfdd" translate="yes" xml:space="preserve">
          <source>This module provides conveniences for manipulating or retrieving file system paths.</source>
          <target state="translated">Этот модуль обеспечивает удобство манипулирования или извлечения путей к файловой системе.</target>
        </trans-unit>
        <trans-unit id="da08bc2535ffa10b4ff19a553d1b9ea3a60095e8" translate="yes" xml:space="preserve">
          <source>This module provides conveniences for working with records at compilation time, where compile-time field names are used to manipulate the tuples, providing fast operations on top of the tuples' compact structure.</source>
          <target state="translated">Данный модуль обеспечивает удобство работы с записями во время компиляции,где для манипулирования кортежами используются имена полей компиляционного времени,что обеспечивает быструю работу над компактной структурой кортежей.</target>
        </trans-unit>
        <trans-unit id="d8865f287fbd66961e8c5ed897c4cb1e98bb7854" translate="yes" xml:space="preserve">
          <source>This module provides data encoding and decoding functions according to &lt;a href=&quot;https://tools.ietf.org/html/rfc4648&quot;&gt;RFC 4648&lt;/a&gt;.</source>
          <target state="translated">Этот модуль предоставляет функции кодирования и декодирования данных в соответствии с &lt;a href=&quot;https://tools.ietf.org/html/rfc4648&quot;&gt;RFC 4648&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="775daee9805ae8be33fdd0d2d338cd5f646e58b6" translate="yes" xml:space="preserve">
          <source>This module provides functions for working with URIs (for example, parsing URIs or encoding query strings). The functions in this module are implemented according to &lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC 3986&lt;/a&gt;.</source>
          <target state="translated">Этот модуль предоставляет функции для работы с URI (например, синтаксический анализ URI или кодирование строк запроса). Функции в этом модуле реализованы в соответствии с &lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC 3986&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1925b1b9c75dedb57897285758fc633fa67f4392" translate="yes" xml:space="preserve">
          <source>This module provides helper functions and defines the behaviour required by any source code manager (SCM) used by Mix.</source>
          <target state="translated">Этот модуль предоставляет вспомогательные функции и определяет поведение,требуемое любым менеджером исходного кода (SCM),используемым Mix.</target>
        </trans-unit>
        <trans-unit id="975d761a831604643250ee0022304cbf208c888f" translate="yes" xml:space="preserve">
          <source>This module relies on this behaviour to ignore such invalid characters. For example, &lt;a href=&quot;#length/1&quot;&gt;&lt;code&gt;length/1&lt;/code&gt;&lt;/a&gt; will return a correct result even if an invalid code point is fed into it.</source>
          <target state="translated">Этот модуль полагается на это поведение, чтобы игнорировать такие недопустимые символы. Например, &lt;a href=&quot;#length/1&quot;&gt; &lt;code&gt;length/1&lt;/code&gt; &lt;/a&gt; вернет правильный результат, даже если в него будет введена недопустимая кодовая точка.</target>
        </trans-unit>
        <trans-unit id="c0fcf25a6b73787d9a7e552929b18116ce2e70ec" translate="yes" xml:space="preserve">
          <source>This module uses the byte size to compute how much space there is left. If your document contains strings, then those need to be wrapped in &lt;a href=&quot;#string/1&quot;&gt;&lt;code&gt;string/1&lt;/code&gt;&lt;/a&gt;, which then relies on &lt;a href=&quot;https://hexdocs.pm/elixir/String.html#length/1&quot;&gt;&lt;code&gt;String.length/1&lt;/code&gt;&lt;/a&gt; to precompute the document size.</source>
          <target state="translated">Этот модуль использует размер байта, чтобы вычислить, сколько места осталось. Если ваш документ содержит строки, то они должны быть заключены в &lt;a href=&quot;#string/1&quot;&gt; &lt;code&gt;string/1&lt;/code&gt; &lt;/a&gt; , которая затем использует &lt;a href=&quot;https://hexdocs.pm/elixir/String.html#length/1&quot;&gt; &lt;code&gt;String.length/1&lt;/code&gt; &lt;/a&gt; для предварительного вычисления размера документа.</target>
        </trans-unit>
        <trans-unit id="a2a3fd3d8cfc91e72f80f4c370ccf8f3a32b7b9d" translate="yes" xml:space="preserve">
          <source>This module uses the byte size to compute how much space there is left. If your document contains strings, then those need to be wrapped in &lt;a href=&quot;#string/1&quot;&gt;&lt;code&gt;string/1&lt;/code&gt;&lt;/a&gt;, which then relies on &lt;a href=&quot;string#length/1&quot;&gt;&lt;code&gt;String.length/1&lt;/code&gt;&lt;/a&gt; to precompute the document size.</source>
          <target state="translated">Этот модуль использует размер в байтах, чтобы вычислить, сколько места осталось. Если ваш документ содержит строки, их нужно обернуть в &lt;a href=&quot;#string/1&quot;&gt; &lt;code&gt;string/1&lt;/code&gt; &lt;/a&gt; , которая затем полагается на &lt;a href=&quot;string#length/1&quot;&gt; &lt;code&gt;String.length/1&lt;/code&gt; &lt;/a&gt; для предварительного вычисления размера документа.</target>
        </trans-unit>
        <trans-unit id="bf6c5bbe802615e0aa5a1527fbeb868a3dd4e46f" translate="yes" xml:space="preserve">
          <source>This operation happens in constant time.</source>
          <target state="translated">Эта операция происходит в постоянное время.</target>
        </trans-unit>
        <trans-unit id="0323d90aa13d0480aa31c479eb72ceeb1afc3cbd" translate="yes" xml:space="preserve">
          <source>This operation is meant to be used with &quot;raw&quot; devices that are started without an encoding. The given &lt;code&gt;iodata&lt;/code&gt; is written as is to the device, without conversion. For more information on IO data, see the &quot;IO data&quot; section in the module documentation.</source>
          <target state="translated">Эта операция предназначена для использования с &amp;laquo;сырыми&amp;raquo; устройствами, которые запускаются без кодирования. Указанные &lt;code&gt;iodata&lt;/code&gt; записываются в устройство как есть, без преобразования. Для получения дополнительной информации о данных ввода-вывода см. Раздел &amp;laquo;Данные ввода-вывода&amp;raquo; в документации модуля.</target>
        </trans-unit>
        <trans-unit id="caa455aca538782e938e4b888f46d0efc72ad432" translate="yes" xml:space="preserve">
          <source>This operation is not recursive.</source>
          <target state="translated">Эта операция не является рекурсивной.</target>
        </trans-unit>
        <trans-unit id="6cf233431f4056abd018dbc95c859c52d627d1ab" translate="yes" xml:space="preserve">
          <source>This operation is potentially expensive, as it reads data from the file system, parses beam files, evaluates code and so on.</source>
          <target state="translated">Эта операция потенциально дорогостоящая,так как считывает данные из файловой системы,разбирает лучевые файлы,оценивает код и так далее.</target>
        </trans-unit>
        <trans-unit id="4ac87cbe297ccc151c1adeb864d9d02cdda18b09" translate="yes" xml:space="preserve">
          <source>This operator (which is a macro) simply translates to a call to &lt;a href=&quot;enum#member?/2&quot;&gt;&lt;code&gt;Enum.member?/2&lt;/code&gt;&lt;/a&gt;. The example above would translate to:</source>
          <target state="translated">Этот оператор (который является макросом) просто преобразуется в вызов &lt;a href=&quot;enum#member?/2&quot;&gt; &lt;code&gt;Enum.member?/2&lt;/code&gt; &lt;/a&gt; . Приведенный выше пример можно перевести как:</target>
        </trans-unit>
        <trans-unit id="dce7f3b5f6d1002f08c83e9f800ba97413046570" translate="yes" xml:space="preserve">
          <source>This operator (which is a macro) simply translates to a call to &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html#member?/2&quot;&gt;&lt;code&gt;Enum.member?/2&lt;/code&gt;&lt;/a&gt;. The example above would translate to:</source>
          <target state="translated">Этот оператор (который является макросом) просто преобразуется в вызов &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html#member?/2&quot;&gt; &lt;code&gt;Enum.member?/2&lt;/code&gt; &lt;/a&gt; . Приведенный выше пример можно перевести как:</target>
        </trans-unit>
        <trans-unit id="331fe094cd09d757ad66d6f225117b31c709d88f" translate="yes" xml:space="preserve">
          <source>This operator considers 1 and 1.0 to be equal. For match comparison, use &lt;a href=&quot;#!==/2&quot;&gt;&lt;code&gt;!==/2&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Этот оператор считает, что 1 и 1.0 равны. Для сравнения совпадений используйте &lt;a href=&quot;#!==/2&quot;&gt; &lt;code&gt;!==/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a93d5027785794a41da95cb35f0cd6d2acb007f9" translate="yes" xml:space="preserve">
          <source>This operator considers 1 and 1.0 to be equal. For stricter semantics, use &lt;a href=&quot;#===/2&quot;&gt;&lt;code&gt;===/2&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Этот оператор считает, что 1 и 1.0 равны. Для более строгой семантики используйте вместо этого &lt;a href=&quot;#===/2&quot;&gt; &lt;code&gt;===/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9d9501c58df67371e18635ed16fc7a445f5df561" translate="yes" xml:space="preserve">
          <source>This operator introduces the expression on the left-hand side as the first argument to the function call on the right-hand side.</source>
          <target state="translated">Этот оператор вводит выражение слева в качестве первого аргумента при вызове функции справа.</target>
        </trans-unit>
        <trans-unit id="f341e422c93c5bb9c0446195cea1180bec59b5b7" translate="yes" xml:space="preserve">
          <source>This operator is used in two distinct occasions in Elixir. It is used in typespecs to specify the type of a variable, function or of a type itself:</source>
          <target state="translated">Этот оператор используется в двух различных случаях в Эликсире.Он используется в typpecs для указания типа переменной,функции или самого типа:</target>
        </trans-unit>
        <trans-unit id="0255b05dbc6a872386af8aa97dc81394e15f507f" translate="yes" xml:space="preserve">
          <source>This page describes the semantics of patterns and guards, where they are all allowed, and how to extend them.</source>
          <target state="translated">На этой странице описывается семантика узоров и охранников,где им всем позволено и как их расширять.</target>
        </trans-unit>
        <trans-unit id="769404e29fd0d9c0c1b74fd982594f4931cda146" translate="yes" xml:space="preserve">
          <source>This protocol requires four functions to be implemented, &lt;a href=&quot;#reduce/3&quot;&gt;&lt;code&gt;reduce/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#count/1&quot;&gt;&lt;code&gt;count/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#member?/2&quot;&gt;&lt;code&gt;member?/2&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#slice/1&quot;&gt;&lt;code&gt;slice/1&lt;/code&gt;&lt;/a&gt;. The core of the protocol is the &lt;a href=&quot;#reduce/3&quot;&gt;&lt;code&gt;reduce/3&lt;/code&gt;&lt;/a&gt; function. All other functions exist as optimizations paths for data structures that can implement certain properties in better than linear time.</source>
          <target state="translated">Этот протокол требует реализации четырех функций: &lt;a href=&quot;#reduce/3&quot;&gt; &lt;code&gt;reduce/3&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#count/1&quot;&gt; &lt;code&gt;count/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#member?/2&quot;&gt; &lt;code&gt;member?/2&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#slice/1&quot;&gt; &lt;code&gt;slice/1&lt;/code&gt; &lt;/a&gt; . Ядром протокола является функция &lt;a href=&quot;#reduce/3&quot;&gt; &lt;code&gt;reduce/3&lt;/code&gt; &lt;/a&gt; . Все другие функции существуют как пути оптимизации для структур данных, которые могут реализовать определенные свойства лучше, чем за линейное время.</target>
        </trans-unit>
        <trans-unit id="fb7da1dc23c1e9f315adf4ca89a991f2f576c3b4" translate="yes" xml:space="preserve">
          <source>This protocol uses tagged tuples to exchange information between the reducer function and the data type that implements the protocol. This allows enumeration of resources, such as files, to be done efficiently while also guaranteeing the resource will be closed at the end of the enumeration. This protocol also allows suspension of the enumeration, which is useful when interleaving between many enumerables is required (as in the &lt;code&gt;zip/1&lt;/code&gt; and &lt;code&gt;zip/2&lt;/code&gt; functions).</source>
          <target state="translated">Этот протокол использует тегированные кортежи для обмена информацией между функцией редуктора и типом данных, реализующим протокол. Это позволяет выполнять перечисление ресурсов, таких как файлы, эффективно, а также гарантирует, что ресурс будет закрыт в конце перечисления. Этот протокол также позволяет приостановить перечисление, что полезно, когда требуется чередование между многими перечисляемыми объектами (как в функциях &lt;code&gt;zip/1&lt;/code&gt; и &lt;code&gt;zip/2&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2a476c9109b8e7bd77f398d609ce8b45633486cf" translate="yes" xml:space="preserve">
          <source>This reads from the IO as UTF-8. Check out &lt;a href=&quot;#binstream/2&quot;&gt;&lt;code&gt;IO.binstream/2&lt;/code&gt;&lt;/a&gt; to handle the IO as a raw binary.</source>
          <target state="translated">Это читается из IO как UTF-8. Ознакомьтесь с &lt;a href=&quot;#binstream/2&quot;&gt; &lt;code&gt;IO.binstream/2&lt;/code&gt; ,&lt;/a&gt; чтобы обрабатывать ввод-вывод как необработанный двоичный файл.</target>
        </trans-unit>
        <trans-unit id="0d2faccf1f4cab6a9360849e0c4b192286433613" translate="yes" xml:space="preserve">
          <source>This reads from the IO as UTF-8. Check out &lt;a href=&quot;io#binstream/2&quot;&gt;&lt;code&gt;IO.binstream/2&lt;/code&gt;&lt;/a&gt; to handle the IO as a raw binary.</source>
          <target state="translated">Это читается из IO как UTF-8. Ознакомьтесь с &lt;a href=&quot;io#binstream/2&quot;&gt; &lt;code&gt;IO.binstream/2&lt;/code&gt; ,&lt;/a&gt; чтобы обрабатывать ввод-вывод как необработанный двоичный файл.</target>
        </trans-unit>
        <trans-unit id="fb3289e1168d746e447207053b10b0f0b058ccb5" translate="yes" xml:space="preserve">
          <source>This returns true if a task is marked as recursive and it is being executed inside an umbrella project.</source>
          <target state="translated">Это возвращает true,если задача помечена как рекурсивная и выполняется внутри зонтичного проекта.</target>
        </trans-unit>
        <trans-unit id="ea9af91069aa4c9d64215d6cd9db073871191b73" translate="yes" xml:space="preserve">
          <source>This section covers built-in attributes. However, attributes can also be used by developers or extended by libraries to support custom behaviour.</source>
          <target state="translated">В этом разделе рассматриваются встроенные атрибуты.Однако,атрибуты также могут быть использованы разработчиками или расширены библиотеками для поддержки пользовательского поведения.</target>
        </trans-unit>
        <trans-unit id="cd8870a170daeec23154d49d471c2dd9485fac0a" translate="yes" xml:space="preserve">
          <source>This shortcut will be extremely useful as we build our project, allowing us to quickly iterate by running a single test.</source>
          <target state="translated">Этот ярлык будет чрезвычайно полезен по мере того,как мы строим наш проект,позволяя нам быстро выполнить итерацию,запустив один тест.</target>
        </trans-unit>
        <trans-unit id="bd1e1ed3f015a12c58d63db1a9d93b599be9e3dd" translate="yes" xml:space="preserve">
          <source>This structure is enough to compile our project:</source>
          <target state="translated">Этой структуры достаточно для компиляции нашего проекта:</target>
        </trans-unit>
        <trans-unit id="5aeacadd2f95dc684bd082e5479290a732535d0b" translate="yes" xml:space="preserve">
          <source>This syntax is very convenient as it can be nested arbitrarily:</source>
          <target state="translated">Этот синтаксис очень удобен,так как может быть вложен произвольно:</target>
        </trans-unit>
        <trans-unit id="a3f217bb694fd565ea5471a5519af65161e8bfcb" translate="yes" xml:space="preserve">
          <source>This syntax reflects the fact the effective size is given by multiplying the size by the unit.</source>
          <target state="translated">Этот синтаксис отражает тот факт,что эффективный размер задается умножением размера на единицу измерения.</target>
        </trans-unit>
        <trans-unit id="d91886050dfd3b8b0ffcd36baeadec3113935150" translate="yes" xml:space="preserve">
          <source>This task also removes documentation and debugging chunks from the compiled &lt;code&gt;.beam&lt;/code&gt; files to reduce the size of the escript. If this is not desired, check the &lt;code&gt;:strip_beams&lt;/code&gt; option.</source>
          <target state="translated">Эта задача также удаляет документацию и отладочные фрагменты из скомпилированных файлов &lt;code&gt;.beam&lt;/code&gt; , чтобы уменьшить размер эскрипта. Если это нежелательно, отметьте опцию &lt;code&gt;:strip_beams&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e372a4a60d70f77f44ec0d0a534418195e400445" translate="yes" xml:space="preserve">
          <source>This task attempts to detect if the project contains one of the following files and act accordingly:</source>
          <target state="translated">Эта задача пытается определить,содержит ли проект один из следующих файлов и действовать соответствующим образом:</target>
        </trans-unit>
        <trans-unit id="5435e4488fd4c9f6223b1ef1bcd4f2e99c900fe4" translate="yes" xml:space="preserve">
          <source>This task consolidates all protocols in the code path and outputs the new binary files to the given directory. Defaults to &quot;_build/MIX_ENV/lib/YOUR_APP/consolidated&quot; for regular apps and &quot;_build/MIX_ENV/consolidated&quot; in umbrella projects.</source>
          <target state="translated">Эта задача консолидирует все протоколы в пути к коду и выводит новые двоичные файлы в заданную директорию.По умолчанию &quot;_build/MIX_ENV/lib/YOUR_APP/consolidated&quot; для обычных приложений и &quot;_build/MIX_ENV/consolidated&quot; для зонтичных проектов.</target>
        </trans-unit>
        <trans-unit id="1b4cda0b866fc4bd88710556e9ee176eb8201a71" translate="yes" xml:space="preserve">
          <source>This task guarantees the project and its dependencies are compiled and packages them inside an escript. Before invoking &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;mix escript.build&lt;/code&gt;&lt;/a&gt;, it is only necessary to define a &lt;code&gt;:escript&lt;/code&gt; key with a &lt;code&gt;:main_module&lt;/code&gt; option in your &lt;code&gt;mix.exs&lt;/code&gt; file:</source>
          <target state="translated">Эта задача гарантирует, что проект и его зависимости скомпилированы и упакованы в эскрипт. Перед вызовом &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;mix escript.build&lt;/code&gt; &lt;/a&gt; , необходимо только определить &lt;code&gt;:escript&lt;/code&gt; ключ с &lt;code&gt;:main_module&lt;/code&gt; вариант в вашем &lt;code&gt;mix.exs&lt;/code&gt; файле:</target>
        </trans-unit>
        <trans-unit id="b4e94347be43d3ad1c1f8b54ecc6bc826651d565" translate="yes" xml:space="preserve">
          <source>This task guarantees this option is respected.</source>
          <target state="translated">Эта задача гарантирует,что этот вариант будет соблюдаться.</target>
        </trans-unit>
        <trans-unit id="0d0f25b9bb663d2e0c92536a5493fa56feb94b3f" translate="yes" xml:space="preserve">
          <source>This task is automatically invoked unless the project disables the &lt;code&gt;:consolidate_protocols&lt;/code&gt; option in their configuration.</source>
          <target state="translated">Эта задача вызывается автоматически, если проект не отключит параметр &lt;code&gt;:consolidate_protocols&lt;/code&gt; в своей конфигурации.</target>
        </trans-unit>
        <trans-unit id="7b95bdbfd4b655866a594149ce367ef4e30f87be" translate="yes" xml:space="preserve">
          <source>This task is automatically reenabled, so it can be called multiple times to load different configs.</source>
          <target state="translated">Эта задача включается автоматически,поэтому ее можно вызывать несколько раз для загрузки различных конфигураций.</target>
        </trans-unit>
        <trans-unit id="60b7baa6b3d14e1c34ecb1ce263c22e53b326d02" translate="yes" xml:space="preserve">
          <source>This task is automatically reenabled, so it can be called multiple times with different arguments.</source>
          <target state="translated">Эта задача автоматически возобновляется,поэтому ее можно вызывать несколько раз с разными аргументами.</target>
        </trans-unit>
        <trans-unit id="26dd7e67f1b7b3ef5db86ff692753739683ca6d1" translate="yes" xml:space="preserve">
          <source>This task is automatically reenabled, so it can be called multiple times.</source>
          <target state="translated">Эта задача автоматически включается,поэтому ее можно вызывать несколько раз.</target>
        </trans-unit>
        <trans-unit id="ee1da0440bde8a127669b55f6844894777d90f76" translate="yes" xml:space="preserve">
          <source>This task is automatically reenabled, so you can perform multiple cross reference checks in the same Mix invocation.</source>
          <target state="translated">Эта задача автоматически включается снова,так что вы можете выполнять несколько проверок перекрестных ссылок в одном и том же вызове Mix.</target>
        </trans-unit>
        <trans-unit id="83f0ea3aa09fb8c86fe400793e6f276b65a06e3e" translate="yes" xml:space="preserve">
          <source>This task is automatically reenabled, so you can print information multiple times in the same Mix invocation.</source>
          <target state="translated">Это задание автоматически включается снова,так что вы можете распечатать информацию несколько раз в одном и том же вызове &quot;Смешать&quot;.</target>
        </trans-unit>
        <trans-unit id="59102e430969db44aa9dbab5520c01e316dd3de5" translate="yes" xml:space="preserve">
          <source>This task is automatically reenabled, so you can profile multiple times in the same Mix invocation.</source>
          <target state="translated">Эта задача автоматически включается снова,так что вы можете создать профиль несколько раз в одном и том же вызове Mix.</target>
        </trans-unit>
        <trans-unit id="092ef0d136b59efa09b303487e88d69e710c4f88" translate="yes" xml:space="preserve">
          <source>This task is never directly invoked from the command line, but it is rather used as building block by other tasks.</source>
          <target state="translated">Эта задача никогда не вызывается напрямую из командной строки,а используется в качестве строительного блока другими задачами.</target>
        </trans-unit>
        <trans-unit id="25ec3e34affdc5b118add6428766793ecf3c3afd" translate="yes" xml:space="preserve">
          <source>This task starts the current application, loads up &lt;code&gt;test/test_helper.exs&lt;/code&gt; and then requires all files matching the &lt;code&gt;test/**/*_test.exs&lt;/code&gt; pattern in parallel.</source>
          <target state="translated">Эта задача запускает текущее приложение, загружает &lt;code&gt;test/test_helper.exs&lt;/code&gt; , а затем требует, чтобы все файлы, соответствующие шаблону &lt;code&gt;test/**/*_test.exs&lt;/code&gt; ,были параллельны.</target>
        </trans-unit>
        <trans-unit id="1c60c4d233c9160c073150ba4ff8097d082b6e81" translate="yes" xml:space="preserve">
          <source>This task supports importing formatter configuration from dependencies.</source>
          <target state="translated">Эта задача поддерживает импорт конфигурации форматов из зависимостей.</target>
        </trans-unit>
        <trans-unit id="b4d9fcf010b1211b86ea4237770d26b428fafb33" translate="yes" xml:space="preserve">
          <source>This time all tests passed and ExUnit warned us that distributed tests were being excluded. If you run tests with &lt;code&gt;$ elixir --sname foo -S mix test&lt;/code&gt;, one extra test should run and successfully pass as long as the &lt;code&gt;bar@computer-name&lt;/code&gt; node is available.</source>
          <target state="translated">На этот раз все тесты прошли, и ExUnit предупредил нас об исключении распределенных тестов. Если вы запускаете тесты с помощью &lt;code&gt;$ elixir --sname foo -S mix test&lt;/code&gt; , один дополнительный тест должен выполняться и успешно проходить, пока доступен узел &lt;code&gt;bar@computer-name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="477d833785327cf68017043ef90fe5f9da786575" translate="yes" xml:space="preserve">
          <source>This time is monotonically increasing and starts in an unspecified point in time.</source>
          <target state="translated">Это время монотонно увеличивается и начинается в неопределенный момент времени.</target>
        </trans-unit>
        <trans-unit id="d29fa001afdf2d6ca161492ebf202a329eec33bb" translate="yes" xml:space="preserve">
          <source>This time let&amp;rsquo;s add a &lt;code&gt;:distributed&lt;/code&gt; tag to &lt;code&gt;test/kv/router_test.exs&lt;/code&gt;:</source>
          <target state="translated">На этот раз добавим тег &lt;code&gt;:distributed&lt;/code&gt; в &lt;code&gt;test/kv/router_test.exs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8a08500e8bc91707c167cbe26d52c3bd3806ea0d" translate="yes" xml:space="preserve">
          <source>This time may be adjusted forwards or backwards in time with no limitation and is not monotonic.</source>
          <target state="translated">Это время может быть отрегулировано вперед или назад во времени без ограничений и не является монотонным.</target>
        </trans-unit>
        <trans-unit id="6d3ccee502b139d7db4ac43bc5181f6363d2dc18" translate="yes" xml:space="preserve">
          <source>This time the supervisor started a named registry, allowing us to create buckets without having to explicitly fetch the PID from the supervisor. You should also know how to make the registry crash again, without looking up its PID: give it a try.</source>
          <target state="translated">На этот раз супервизор запустил именованный реестр,позволяющий нам создавать ведра без необходимости явного получения PID от супервизора.Вы также должны знать,как сделать так,чтобы реестр снова аварийно завершал свою работу,не просматривая его PID:попробуйте.</target>
        </trans-unit>
        <trans-unit id="2674a77869b19062b86e06c05052e9cdedb0c192" translate="yes" xml:space="preserve">
          <source>This time, since our test relies on global data, we have not given &lt;code&gt;async: true&lt;/code&gt; to &lt;code&gt;use ExUnit.Case&lt;/code&gt;. Furthermore, in order to guarantee our test is always in a clean state, we stop and start the &lt;code&gt;:kv&lt;/code&gt; application before each test. In fact, stopping the &lt;code&gt;:kv&lt;/code&gt; application even prints a warning on the terminal:</source>
          <target state="translated">На этот раз, поскольку наш тест основан на глобальных данных, мы не &lt;code&gt;use ExUnit.Case&lt;/code&gt; &lt;code&gt;async: true&lt;/code&gt; для использования ExUnit.Case . Кроме того, чтобы гарантировать, что наш тест всегда находится в чистом состоянии, мы останавливаем и запускаем приложение &lt;code&gt;:kv&lt;/code&gt; перед каждым тестом. Фактически, остановка приложения &lt;code&gt;:kv&lt;/code&gt; даже выводит предупреждение на терминал:</target>
        </trans-unit>
        <trans-unit id="c22b7275344f29b83a9a0084e4877ef048fc7831" translate="yes" xml:space="preserve">
          <source>This time, we have joined two aliases, defining the final alias &lt;code&gt;Hello.World&lt;/code&gt;.</source>
          <target state="translated">На этот раз мы объединили два псевдонима, определив окончательный псевдоним &lt;code&gt;Hello.World&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b92fdce12a5311e4693203aaafe3726c0337e1b5" translate="yes" xml:space="preserve">
          <source>This tree means that &lt;code&gt;lib/a.ex&lt;/code&gt; depends on &lt;code&gt;lib/b.ex&lt;/code&gt; at compile time which then depends on &lt;code&gt;lib/c.ex&lt;/code&gt; at runtime. This is often problematic because if &lt;code&gt;lib/c.ex&lt;/code&gt; changes, &lt;code&gt;lib/a.ex&lt;/code&gt; also has to recompile due to this indirect compile time dependency.</source>
          <target state="translated">Это дерево означает, что &lt;code&gt;lib/a.ex&lt;/code&gt; зависит от &lt;code&gt;lib/b.ex&lt;/code&gt; во время компиляции, а затем зависит от &lt;code&gt;lib/c.ex&lt;/code&gt; во время выполнения. Это часто проблематично, потому что, если &lt;code&gt;lib/c.ex&lt;/code&gt; изменяется, &lt;code&gt;lib/a.ex&lt;/code&gt; также придется перекомпилировать из-за этой косвенной зависимости от времени компиляции.</target>
        </trans-unit>
        <trans-unit id="2295ba054b7587077fd7b62e8108fca19b1176d6" translate="yes" xml:space="preserve">
          <source>This tuple follows the general quoted expression structure in Elixir, with the name as first argument, some keyword list as metadata as second, and the list of arguments as third. In this case, the arguments are the alias &lt;a href=&quot;https://hexdocs.pm/elixir/String.html&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and the atom &lt;code&gt;:downcase&lt;/code&gt;. The second argument in a remote call is &lt;strong&gt;always&lt;/strong&gt; an atom.</source>
          <target state="translated">Этот кортеж следует общей структуре выражений в кавычках в Elixir, с именем в качестве первого аргумента, некоторым списком ключевых слов в качестве метаданных в качестве второго и списком аргументов в качестве третьего. В этом случае аргументами являются псевдоним &lt;a href=&quot;https://hexdocs.pm/elixir/String.html&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; и атом &lt;code&gt;:downcase&lt;/code&gt; . Второй аргумент в удаленном вызове &lt;strong&gt;всегда&lt;/strong&gt; атом.</target>
        </trans-unit>
        <trans-unit id="5f412811fd9f81fa6e535feea04f5cd402448c56" translate="yes" xml:space="preserve">
          <source>This tuple follows the general quoted expression structure in Elixir, with the name as first argument, some keyword list as metadata as second, and the list of arguments as third. In this case, the arguments are the alias &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and the atom &lt;code&gt;:downcase&lt;/code&gt;. The second argument in a remote call is &lt;strong&gt;always&lt;/strong&gt; an atom.</source>
          <target state="translated">Этот кортеж следует общей структуре выражений в кавычках в Elixir, с именем в качестве первого аргумента, некоторым списком ключевых слов в качестве метаданных в качестве второго и списком аргументов в качестве третьего. В этом случае аргументами являются псевдоним &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; и атом &lt;code&gt;:downcase&lt;/code&gt; . Второй аргумент в удаленном вызове &lt;strong&gt;всегда&lt;/strong&gt; атом.</target>
        </trans-unit>
        <trans-unit id="7ecec438aa5cf5d56bd4c9ece80a8b63bd733893" translate="yes" xml:space="preserve">
          <source>This value will have no effect as the code was compiled to connect to &quot;db.local&quot;, which is mostly likely unavailable in the production environment.</source>
          <target state="translated">Это значение не будет иметь эффекта,так как код был скомпилирован для подключения к &quot;db.local&quot;,который,скорее всего,недоступен в производственной среде.</target>
        </trans-unit>
        <trans-unit id="09127719cfc463768ae7ae77dbace1cb3021f292" translate="yes" xml:space="preserve">
          <source>This way if you have a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; in one time zone, you can get the same wall time in another time zone. For instance if you have 2018-08-24 10:00:00 in Copenhagen and want a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; for 2018-08-24 10:00:00 in UTC you can do:</source>
          <target state="translated">Таким образом, если у вас есть &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; в одном часовом поясе, вы можете получить такое же время на стене в другом часовом поясе. Например, если у вас есть 2018-08-24 10:00:00 в Копенгагене и вы хотите &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; для 2018-08-24 10:00:00 по всемирному координированному времени, вы можете сделать:</target>
        </trans-unit>
        <trans-unit id="07671b087d75abe1588362cd61ce69e954d8e6a8" translate="yes" xml:space="preserve">
          <source>This will appear to the &lt;code&gt;node&lt;/code&gt; as if the local node has crashed. This function is mainly used in the Erlang network authentication protocols. Returns &lt;code&gt;true&lt;/code&gt; if disconnection succeeds, otherwise &lt;code&gt;false&lt;/code&gt;. If the local node is not alive, the function returns &lt;code&gt;:ignored&lt;/code&gt;.</source>
          <target state="translated">Это будет отображаться на &lt;code&gt;node&lt;/code&gt; , как если локальный узел разбился. Эта функция в основном используется в протоколах сетевой аутентификации Erlang. Возвращает &lt;code&gt;true&lt;/code&gt; , если отключение прошло успешно, иначе &lt;code&gt;false&lt;/code&gt; . Если локальный узел не активен, функция возвращает &lt;code&gt;:ignored&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3db39e63e0c8d60956e47f7856c88ea07f5720f2" translate="yes" xml:space="preserve">
          <source>This will cause the operating system process to exit with the status given by &lt;code&gt;integer&lt;/code&gt; while signaling all linked Erlang processes to politely shut down.</source>
          <target state="translated">Это приведет к завершению процесса операционной системы со статусом, заданным &lt;code&gt;integer&lt;/code&gt; при этом все связанные процессы Erlang будут вежливо завершены.</target>
        </trans-unit>
        <trans-unit id="932ec01a6dc27cb0bacb799b1bb13427b2604043" translate="yes" xml:space="preserve">
          <source>This will generate a file named &lt;code&gt;Elixir.Math.beam&lt;/code&gt; containing the bytecode for the defined module. If we start &lt;code&gt;iex&lt;/code&gt; again, our module definition will be available (provided that &lt;code&gt;iex&lt;/code&gt; is started in the same directory the bytecode file is in):</source>
          <target state="translated">Это сгенерирует файл с именем &lt;code&gt;Elixir.Math.beam&lt;/code&gt; , содержащий байт-код для определенного модуля. Если мы снова запустим &lt;code&gt;iex&lt;/code&gt; , наше определение модуля будет доступно (при условии, что &lt;code&gt;iex&lt;/code&gt; запущен в том же каталоге, в котором находится файл байт-кода):</target>
        </trans-unit>
        <trans-unit id="8486c3ebf35a38d29570441bb6cd8b2ae73dbe68" translate="yes" xml:space="preserve">
          <source>This will take priority over the primary level set, so it can be used to increase or decrease verbosity of some parts of the project.</source>
          <target state="translated">Это будет иметь приоритет над набором первичного уровня,поэтому его можно использовать для увеличения или уменьшения глаголов некоторых частей проекта.</target>
        </trans-unit>
        <trans-unit id="3e50caa68b186c476cfb0083912fddaf93761ce6" translate="yes" xml:space="preserve">
          <source>This won't work as it will rather try to invoke the local function &lt;code&gt;fun&lt;/code&gt;:</source>
          <target state="translated">Это не сработает, так как скорее попытается вызвать локальную функцию &lt;code&gt;fun&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="988a9f0b35eb11882e7b92d107c2e4d9a3c956cd" translate="yes" xml:space="preserve">
          <source>This works because accessing anything on a &lt;code&gt;nil&lt;/code&gt; value, returns &lt;code&gt;nil&lt;/code&gt; itself:</source>
          <target state="translated">Это работает , потому что доступ к ничего на &lt;code&gt;nil&lt;/code&gt; значение, возвращает &lt;code&gt;nil&lt;/code&gt; себя:</target>
        </trans-unit>
        <trans-unit id="504c9c579f50eb0d399c3090d69552f011806877" translate="yes" xml:space="preserve">
          <source>This works because the &lt;code&gt;--partitions&lt;/code&gt; option automatically exports the coverage results.</source>
          <target state="translated">Это работает, потому что опция &lt;code&gt;--partitions&lt;/code&gt; автоматически экспортирует результаты покрытия.</target>
        </trans-unit>
        <trans-unit id="a9ae4006317b94bfaa968ed593d618d9dbca367b" translate="yes" xml:space="preserve">
          <source>This works:</source>
          <target state="translated">Это работает:</target>
        </trans-unit>
        <trans-unit id="35b2e50e251cc0ba39a82b26384abdc7366f7bc3" translate="yes" xml:space="preserve">
          <source>This would be repetitive to write every time we need this check, so, as mentioned at the beginning of this section, we can abstract this away using a macro. Remember that defining a function that performs this check wouldn't work because we can't use custom functions in guards. Use &lt;code&gt;defguard&lt;/code&gt; and &lt;code&gt;defguardp&lt;/code&gt; to create guard macros. Here's an example:</source>
          <target state="translated">Это будет повторяться каждый раз, когда нам понадобится эта проверка, поэтому, как упоминалось в начале этого раздела, мы можем абстрагироваться от этого с помощью макроса. Помните, что определение функции, выполняющей эту проверку, не сработает, потому что мы не можем использовать пользовательские функции в охранниках. Используйте &lt;code&gt;defguard&lt;/code&gt; и &lt;code&gt;defguardp&lt;/code&gt; для создания макросов защиты. Вот пример:</target>
        </trans-unit>
        <trans-unit id="e6043c141b8f19b7be4caf31617881f52b255da5" translate="yes" xml:space="preserve">
          <source>This would be the equivalent of getting all of the file contents and packing it all into a single line in IEx and executing it.</source>
          <target state="translated">Это было бы эквивалентно получению всего содержимого файла и упаковке его в единую строку в IEx и его выполнению.</target>
        </trans-unit>
        <trans-unit id="6ff1d4baf9340ffd06f6ffb996d0e212cbfa8737" translate="yes" xml:space="preserve">
          <source>Those are all protocols that ship with Elixir and they are being consolidated. Because a protocol can dispatch to any data type, the protocol must check on every call if an implementation for the given type exists. This may be expensive.</source>
          <target state="translated">Это все протоколы,которые поставляются с Эликсиром,и они консолидируются.Поскольку протокол может отправлять данные любого типа,он должен проверять каждый вызов на наличие реализации для данного типа.Это может быть дорогостоящим.</target>
        </trans-unit>
        <trans-unit id="20eb63dea1b46358d700b88edabba7314d37424c" translate="yes" xml:space="preserve">
          <source>Those constructs exist only at the syntax level. All of the examples above are represented as their underlying integers in the AST.</source>
          <target state="translated">Эти конструкции существуют только на синтаксическом уровне.Все вышеприведенные примеры представлены в AST в виде их базовых целых чисел.</target>
        </trans-unit>
        <trans-unit id="2a23b257e1a8396bae8e624da37c5fa4a14cd69d" translate="yes" xml:space="preserve">
          <source>Those files are compiled in parallel and can automatically detect dependencies between them. Once a dependency is found, the current file stops being compiled until the dependency is resolved.</source>
          <target state="translated">Эти файлы компилируются параллельно и могут автоматически определять зависимости между ними.Как только зависимость найдена,текущий файл перестает компилироваться до тех пор,пока зависимость не будет устранена.</target>
        </trans-unit>
        <trans-unit id="e697466781be26b9795959553f68c3100b1e1fc6" translate="yes" xml:space="preserve">
          <source>Those functions are optimized to deal with common epochs, such as the Unix Epoch above or the Gregorian Epoch (0000-01-01 00:00:00).</source>
          <target state="translated">Эти функции оптимизированы для работы с обычными эпохами,такими как Эпоха Unix выше или Грегорианская эпоха (0000-01-01 00:00:00).</target>
        </trans-unit>
        <trans-unit id="c4de8ddc259e007e8ba142a7f915e7b9f301d071" translate="yes" xml:space="preserve">
          <source>Those functions are optimized to deal with common epochs, such as the Unix Epoch above or the Gregorian Epoch (0000-01-01).</source>
          <target state="translated">Эти функции оптимизированы для работы с обычными эпохами,такими как Эпоха Unix выше или Грегорианская Эпоха (0000-01-01).</target>
        </trans-unit>
        <trans-unit id="394d2aacfa0d4e93088c549af6bbb4449e2dc409" translate="yes" xml:space="preserve">
          <source>Those functions will be explicitly marked in their docs as &quot;inlined by the compiler&quot;.</source>
          <target state="translated">Эти функции будут явно помечены в своих документах как &quot;inlined by the компилятор&quot;.</target>
        </trans-unit>
        <trans-unit id="63c1f7abeafa00aa21caec35b0a45a7d4562b860" translate="yes" xml:space="preserve">
          <source>Those options are shared across all modes:</source>
          <target state="translated">Эти опции доступны для всех режимов:</target>
        </trans-unit>
        <trans-unit id="d6d6ce8d2fc67ab737881fd056832c2d5309c627" translate="yes" xml:space="preserve">
          <source>Those options can be configured in your project configuration file or globally by calling &lt;a href=&quot;#configure/1&quot;&gt;&lt;code&gt;IEx.configure/1&lt;/code&gt;&lt;/a&gt; from your &lt;code&gt;~/.iex.exs&lt;/code&gt; file. For example:</source>
          <target state="translated">Эти параметры можно настроить в файле конфигурации вашего проекта или глобально, вызвав &lt;a href=&quot;#configure/1&quot;&gt; &lt;code&gt;IEx.configure/1&lt;/code&gt; &lt;/a&gt; из файла &lt;code&gt;~/.iex.exs&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="7600e9dc66e9f49a5eef98b40a90050ef4b71a9b" translate="yes" xml:space="preserve">
          <source>Those options can be configured in your project configuration file or globally by calling &lt;a href=&quot;iex#configure/1&quot;&gt;&lt;code&gt;IEx.configure/1&lt;/code&gt;&lt;/a&gt; from your &lt;code&gt;~/.iex.exs&lt;/code&gt; file. For example:</source>
          <target state="translated">Эти параметры можно настроить в файле конфигурации вашего проекта или глобально, вызвав &lt;a href=&quot;iex#configure/1&quot;&gt; &lt;code&gt;IEx.configure/1&lt;/code&gt; &lt;/a&gt; из файла &lt;code&gt;~/.iex.exs&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="74a14ac9f70e4b2f7b26991bd0d257ac84bd9ed1" translate="yes" xml:space="preserve">
          <source>Those options mean all dependencies will be checked out to &lt;code&gt;kv_umbrella/deps&lt;/code&gt;, and they will share the same build, config and lock files. We haven&amp;rsquo;t talked about configuration yet, but from here we can build the intuition that all configuration and dependencies are shared across all projects in an umbrella, and it is not per application.</source>
          <target state="translated">Эти параметры означают, что все зависимости будут проверены в &lt;code&gt;kv_umbrella/deps&lt;/code&gt; , и они будут использовать одни и те же файлы сборки, конфигурации и блокировки. Мы еще не говорили о конфигурации, но отсюда мы можем создать интуицию, что все конфигурации и зависимости являются общими для всех проектов в едином зонтике, а не для каждого приложения.</target>
        </trans-unit>
        <trans-unit id="ff34978b55b28c6dbd12a23ca68d40a4861e6f90" translate="yes" xml:space="preserve">
          <source>Those performance characteristics dictate the usage of those data structures. One very common use case for tuples is to use them to return extra information from a function. For example, &lt;code&gt;File.read/1&lt;/code&gt; is a function that can be used to read file contents. It returns a tuple:</source>
          <target state="translated">Эти характеристики производительности диктуют использование этих структур данных. Один из очень распространенных вариантов использования кортежей - их использование для возврата дополнительной информации из функции. Например, &lt;code&gt;File.read/1&lt;/code&gt; - это функция, которую можно использовать для чтения содержимого файла. Он возвращает кортеж:</target>
        </trans-unit>
        <trans-unit id="c4f3c9a9eefe9427c2dedc41fe39d6f07ee20806" translate="yes" xml:space="preserve">
          <source>Those situations are quite uncommon in practice except when interfacing with libraries that do not provide a proper API. For example, let&amp;rsquo;s imagine the &lt;code&gt;Enum&lt;/code&gt; module did not provide any API for finding a value and that we needed to find the first multiple of 13 in a list of numbers:</source>
          <target state="translated">Эти ситуации довольно редки на практике, за исключением случаев взаимодействия с библиотеками, которые не предоставляют надлежащий API. Например, представим, что модуль &lt;code&gt;Enum&lt;/code&gt; не предоставляет никакого API для поиска значения и что нам нужно найти первое кратное 13 в списке чисел:</target>
        </trans-unit>
        <trans-unit id="aad090c769c6e03a992f9e5138ceea80922ae0f4" translate="yes" xml:space="preserve">
          <source>Throughout the guide, we have built a very simple distributed key-value store as an opportunity to explore many constructs like generic servers, supervisors, tasks, agents, applications and more. Not only that, we have written tests for the whole application, got familiar with ExUnit, and learned how to use the Mix build tool to accomplish a wide range of tasks.</source>
          <target state="translated">На протяжении всего руководства мы создали очень простое хранилище распределенных ключей как возможность исследовать множество конструкций,таких как общие серверы,супервизоры,задачи,агенты,приложения и многое другое.Кроме того,мы написали тесты для всего приложения,познакомились с ExUnit и узнали,как использовать инструмент Mix build для выполнения широкого спектра задач.</target>
        </trans-unit>
        <trans-unit id="d3b0d5df9824877f9b29731225c4ba90e068aada" translate="yes" xml:space="preserve">
          <source>Throughout the tutorial, we will talk a lot about the head and tail of a list. The head is the first element of a list and the tail is the remainder of the list. They can be retrieved with the functions &lt;code&gt;hd/1&lt;/code&gt; and &lt;code&gt;tl/1&lt;/code&gt;. Let&amp;rsquo;s assign a list to a variable and retrieve its head and tail:</source>
          <target state="translated">На протяжении всего урока мы много будем говорить о начале и конце списка. Голова - это первый элемент списка, а хвост - остаток списка. Их можно получить с помощью функций &lt;code&gt;hd/1&lt;/code&gt; и &lt;code&gt;tl/1&lt;/code&gt; . Давайте назначим список переменной и получим его заголовок и хвост:</target>
        </trans-unit>
        <trans-unit id="090c252d7880a95a839fb25bf07e4aad923532bf" translate="yes" xml:space="preserve">
          <source>Throughout this tutorial, we have been using the notation &lt;code&gt;name/arity&lt;/code&gt; to refer to functions. It happens that this notation can actually be used to retrieve a named function as a function type. Start &lt;code&gt;iex&lt;/code&gt;, running the &lt;code&gt;math.exs&lt;/code&gt; file defined above:</source>
          <target state="translated">На протяжении всего этого руководства мы использовали обозначение &lt;code&gt;name/arity&lt;/code&gt; для обозначения функций. Бывает, что эту нотацию можно использовать для получения именованной функции как типа функции. Запустите &lt;code&gt;iex&lt;/code&gt; , запустив указанный выше файл &lt;code&gt;math.exs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f9f4b0f30b3f06e61b21febef173645d29891305" translate="yes" xml:space="preserve">
          <source>Throws</source>
          <target state="translated">Throws</target>
        </trans-unit>
        <trans-unit id="6c82e6dd86807ee3db07e3c82bec1ae1ce00b08b" translate="yes" xml:space="preserve">
          <source>Time</source>
          <target state="translated">Time</target>
        </trans-unit>
        <trans-unit id="4dc17499006fce61c64e8dfd0c8c4c038df992f0" translate="yes" xml:space="preserve">
          <source>Time representations with reduced accuracy are not supported.</source>
          <target state="translated">Представления времени с пониженной точностью не поддерживаются.</target>
        </trans-unit>
        <trans-unit id="c9e59bfbdd7898eae663b5796d19938441eff8ed" translate="yes" xml:space="preserve">
          <source>Time units in its plural form, such as: &lt;code&gt;:seconds&lt;/code&gt;, &lt;code&gt;:milliseconds&lt;/code&gt;, and the like</source>
          <target state="translated">Временные единицы в ее форме множественного числа, например: &lt;code&gt;:seconds&lt;/code&gt; , &lt;code&gt;:milliseconds&lt;/code&gt; , и т.п.</target>
        </trans-unit>
        <trans-unit id="adb40cd5eccc115002264851e51de0dcee9fe00b" translate="yes" xml:space="preserve">
          <source>Time zone abbreviation (empty string if naive)</source>
          <target state="translated">Сокращение часового пояса (пустая строка,если наивно)</target>
        </trans-unit>
        <trans-unit id="9452a856dc424a6f92632b47f9b6540703986d72" translate="yes" xml:space="preserve">
          <source>Time zone database</source>
          <target state="translated">База данных часовых поясов</target>
        </trans-unit>
        <trans-unit id="dad962fdacc68e64400f9f34e93f5814f862947c" translate="yes" xml:space="preserve">
          <source>Time zone offset may be included in the string but they will be simply discarded as such information is not included in naive date times.</source>
          <target state="translated">Смещение часового пояса может быть включено в строку,но оно будет просто отброшено,так как такая информация не включена в наивное время даты.</target>
        </trans-unit>
        <trans-unit id="55ded65dce8b65205b0b4f7c820bffa416a68f37" translate="yes" xml:space="preserve">
          <source>Time zone offset may be included in the string but they will be simply discarded as such information is not included in times.</source>
          <target state="translated">Смещение часового пояса может быть включено в строку,но оно будет просто отброшено,так как такая информация не включается во времена.</target>
        </trans-unit>
        <trans-unit id="f905b9189d8d13ac7a8491eceeb00e40cf5247c7" translate="yes" xml:space="preserve">
          <source>Time zone period for a point in time in UTC for a specific time zone.</source>
          <target state="translated">Период часового пояса для точки времени в UTC для определенного часового пояса.</target>
        </trans-unit>
        <trans-unit id="4ca2fde51c11eb446c9f4471c5d166e6cd917c52" translate="yes" xml:space="preserve">
          <source>Timeout is set to 0, so there is no waiting time.</source>
          <target state="translated">Тайм-аут установлен на 0,так что времени ожидания нет.</target>
        </trans-unit>
        <trans-unit id="27a4f2c5a6aa7d957af2668e0ec53e32944aba26" translate="yes" xml:space="preserve">
          <source>Timeouts</source>
          <target state="translated">Timeouts</target>
        </trans-unit>
        <trans-unit id="25e1a3000b3069b54f62fa349e25e048a6ebb374" translate="yes" xml:space="preserve">
          <source>Tmp Dir</source>
          <target state="translated">Тэмп-Дир</target>
        </trans-unit>
        <trans-unit id="4b72f11edef4c0745d904f701fa487d703c27edf" translate="yes" xml:space="preserve">
          <source>To access atom keys, one may also use the &lt;code&gt;map.key&lt;/code&gt; notation. Note that &lt;code&gt;map.key&lt;/code&gt; will raise a &lt;a href=&quot;https://hexdocs.pm/elixir/KeyError.html&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the &lt;code&gt;map&lt;/code&gt; doesn't contain the key &lt;code&gt;:key&lt;/code&gt;, compared to &lt;code&gt;map[:key]&lt;/code&gt;, that would return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Для доступа к атомным ключам можно также использовать нотацию &lt;code&gt;map.key&lt;/code&gt; . Обратите внимание, что &lt;code&gt;map.key&lt;/code&gt; вызовет &lt;a href=&quot;https://hexdocs.pm/elixir/KeyError.html&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; ,&lt;/a&gt; если &lt;code&gt;map&lt;/code&gt; не содержит key &lt;code&gt;:key&lt;/code&gt; , по сравнению с &lt;code&gt;map[:key]&lt;/code&gt; , которая вернет &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1b3091799895b01e6aa24802a8c476d47d3c391" translate="yes" xml:space="preserve">
          <source>To act according to the Unicode Standard, many functions in this module run in linear time, as they need to traverse the whole string considering the proper Unicode code points.</source>
          <target state="translated">Для того,чтобы действовать в соответствии со стандартом Unicode,многие функции в этом модуле работают в линейном времени,так как они должны пересекать всю строку с учетом соответствующих точек кода Юникода.</target>
        </trans-unit>
        <trans-unit id="ce008b888ee0241e97659cba8355716eba5bef7f" translate="yes" xml:space="preserve">
          <source>To add a new key:</source>
          <target state="translated">Чтобы добавить новый ключ:</target>
        </trans-unit>
        <trans-unit id="916b5fa900a6f384af0597e7d8f402a05c3c1c1f" translate="yes" xml:space="preserve">
          <source>To aid in the correct implementation of behaviours, you may optionally declare &lt;code&gt;@impl&lt;/code&gt; for implemented callbacks of a behaviour. This makes callbacks explicit and can help you to catch errors in your code. The compiler will warn in these cases:</source>
          <target state="translated">Чтобы помочь в правильной реализации поведения, вы можете дополнительно объявить &lt;code&gt;@impl&lt;/code&gt; для реализованных обратных вызовов поведения. Это делает обратные вызовы явными и может помочь вам отловить ошибки в вашем коде. Компилятор предупредит в следующих случаях:</target>
        </trans-unit>
        <trans-unit id="688d49bd28e977f5619e4299defc87b3580ff416" translate="yes" xml:space="preserve">
          <source>To assert exits from linked processes started from the test, trap exits with &lt;a href=&quot;https://hexdocs.pm/elixir/Process.html#flag/2&quot;&gt;&lt;code&gt;Process.flag/2&lt;/code&gt;&lt;/a&gt; and assert the exit message with &lt;a href=&quot;#assert_received/2&quot;&gt;&lt;code&gt;assert_received/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы подтвердить выход из связанных процессов, запущенных из теста, прерывание завершается с помощью &lt;a href=&quot;https://hexdocs.pm/elixir/Process.html#flag/2&quot;&gt; &lt;code&gt;Process.flag/2&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#assert_received/2&quot;&gt; &lt;code&gt;assert_received/2&lt;/code&gt; &lt;/a&gt; сообщение о выходе с помощью assert_received / 2 .</target>
        </trans-unit>
        <trans-unit id="60dda8ca6a65152c1c53235c6221b24d765a7234" translate="yes" xml:space="preserve">
          <source>To avoid printing log messages during tests, ExUnit provides a neat feature called &lt;code&gt;:capture_log&lt;/code&gt;. By setting &lt;code&gt;@tag :capture_log&lt;/code&gt; before each test or &lt;code&gt;@moduletag :capture_log&lt;/code&gt; for the whole test case, ExUnit will automatically capture anything that is logged while the test runs. In case our test fails, the captured logs will be printed alongside the ExUnit report.</source>
          <target state="translated">Чтобы избежать вывода сообщений журнала во время тестов, ExUnit предоставляет удобную функцию, которая называется &lt;code&gt;:capture_log&lt;/code&gt; . Установив &lt;code&gt;@tag :capture_log&lt;/code&gt; перед каждым тестом или &lt;code&gt;@moduletag :capture_log&lt;/code&gt; для всего тестового примера, ExUnit автоматически захватит все, что записывается в журнал во время выполнения теста. В случае неудачи нашего теста захваченные журналы будут напечатаны вместе с отчетом ExUnit.</target>
        </trans-unit>
        <trans-unit id="f974b60e8a8ca0fdff2c240dbeb8be96e5b7e1d4" translate="yes" xml:space="preserve">
          <source>To avoid that late answers (after the timeout) pollute the caller's message queue, a middleman process is used to do the actual calls. Late answers will then be discarded when they arrive to a terminated process.</source>
          <target state="translated">Чтобы избежать загрязнения очереди сообщений вызывающего абонента поздними ответами (после таймаута),для выполнения реальных вызовов используется процесс посредника.Поздние ответы будут отбрасываться по прибытии в завершенный процесс.</target>
        </trans-unit>
        <trans-unit id="915324fb4db3a9cfde09b72fdeb57083f3b6ada4" translate="yes" xml:space="preserve">
          <source>To be converted to a string, a list must either be empty or only contain the following elements:</source>
          <target state="translated">Чтобы быть преобразованным в строку,список должен быть либо пустым,либо содержать только следующие элементы:</target>
        </trans-unit>
        <trans-unit id="e45579800e96aeff05376f3bbc05633e2fce0d09" translate="yes" xml:space="preserve">
          <source>To be precise, &lt;code&gt;nil&lt;/code&gt; is returned whenever a &lt;code&gt;pid&lt;/code&gt; or &lt;code&gt;{name, node}&lt;/code&gt; cannot be returned. Note there is no guarantee the returned &lt;code&gt;pid&lt;/code&gt; or &lt;code&gt;{name, node}&lt;/code&gt; is alive, as a process could terminate immediately after it is looked up.</source>
          <target state="translated">Если быть точным, &lt;code&gt;nil&lt;/code&gt; возвращается всякий раз, когда невозможно вернуть &lt;code&gt;pid&lt;/code&gt; или &lt;code&gt;{name, node}&lt;/code&gt; . Обратите внимание, что нет гарантии, что возвращенный &lt;code&gt;pid&lt;/code&gt; или &lt;code&gt;{name, node}&lt;/code&gt; жив, так как процесс может завершиться сразу после его поиска.</target>
        </trans-unit>
        <trans-unit id="f3b6088332075b01c651b352f9aa53d48a4e4c87" translate="yes" xml:space="preserve">
          <source>To capture a definition within the current module, you can skip the module prefix, such as &lt;code&gt;&amp;amp;my_fun/2&lt;/code&gt;. In those cases, the captured function can be public (&lt;code&gt;def&lt;/code&gt;) or private (&lt;code&gt;defp&lt;/code&gt;).</source>
          <target state="translated">Чтобы &lt;code&gt;&amp;amp;my_fun/2&lt;/code&gt; определение в текущем модуле, вы можете пропустить префикс модуля, например &amp;amp; my_fun / 2 . В этих случаях захваченная функция может быть публичной ( &lt;code&gt;def&lt;/code&gt; ) или частной ( &lt;code&gt;defp&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fc7a4b67b1cf2b13d1bec5831057b11f1a8ac991" translate="yes" xml:space="preserve">
          <source>To check the Unicode version of your current Elixir installation, run &lt;code&gt;String.Unicode.version()&lt;/code&gt;.</source>
          <target state="translated">Чтобы проверить версию Unicode вашей текущей установки Elixir, запустите &lt;code&gt;String.Unicode.version()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32741725588800279ae172b79b44e5964f47f63a" translate="yes" xml:space="preserve">
          <source>To convert maps into keywords and vice-versa, use the &lt;code&gt;new&lt;/code&gt; function in the respective modules.</source>
          <target state="translated">Чтобы преобразовать карты в ключевые слова и наоборот, используйте &lt;code&gt;new&lt;/code&gt; функцию в соответствующих модулях.</target>
        </trans-unit>
        <trans-unit id="90fe397a356898d27888dc41d52d7983ef57d2b2" translate="yes" xml:space="preserve">
          <source>To create a custom sigil, define a function with the name &lt;code&gt;sigil_{identifier}&lt;/code&gt; that takes two arguments. The first argument will be the string, the second will be a charlist containing any modifiers. If the sigil is lower case (such as &lt;code&gt;sigil_x&lt;/code&gt;) then the string argument will allow interpolation. If the sigil is upper case (such as &lt;code&gt;sigil_X&lt;/code&gt;) then the string will not be interpolated.</source>
          <target state="translated">Чтобы создать собственный сигил, определите функцию с именем &lt;code&gt;sigil_{identifier}&lt;/code&gt; которая принимает два аргумента. Первым аргументом будет строка, вторым - список символов, содержащий любые модификаторы. Если сигил имеет нижний регистр (например, &lt;code&gt;sigil_x&lt;/code&gt; ), то строковый аргумент разрешает интерполяцию. Если сигил имеет верхний регистр (например, &lt;code&gt;sigil_X&lt;/code&gt; ), то строка не будет интерполироваться.</target>
        </trans-unit>
        <trans-unit id="bb585bff51bf0b0752f3b9643ada939cb21bacf2" translate="yes" xml:space="preserve">
          <source>To define a behaviour module, it's enough to define one or more callbacks in that module. To define callbacks, the &lt;code&gt;@callback&lt;/code&gt; and &lt;code&gt;@macrocallback&lt;/code&gt; module attributes can be used (for function callbacks and macro callbacks respectively).</source>
          <target state="translated">Чтобы определить модуль поведения, достаточно определить один или несколько обратных вызовов в этом модуле. Для определения обратных вызовов можно использовать атрибуты модуля &lt;code&gt;@callback&lt;/code&gt; и &lt;code&gt;@macrocallback&lt;/code&gt; (для обратных вызовов функций и обратных вызовов макросов соответственно).</target>
        </trans-unit>
        <trans-unit id="748c36f2db63d3a03dc4e6fadef52aac3b262d3c" translate="yes" xml:space="preserve">
          <source>To define a struct, a developer must define both &lt;code&gt;__struct__/0&lt;/code&gt; and &lt;code&gt;__struct__/1&lt;/code&gt; functions. &lt;a href=&quot;#defstruct/1&quot;&gt;&lt;code&gt;defstruct/1&lt;/code&gt;&lt;/a&gt; is a convenience macro which defines such functions with some conveniences.</source>
          <target state="translated">Чтобы определить структуру, разработчик должен определить функции &lt;code&gt;__struct__/0&lt;/code&gt; и &lt;code&gt;__struct__/1&lt;/code&gt; . &lt;a href=&quot;#defstruct/1&quot;&gt; &lt;code&gt;defstruct/1&lt;/code&gt; &lt;/a&gt; - это удобный макрос, который определяет такие функции с некоторыми удобствами.</target>
        </trans-unit>
        <trans-unit id="5e46e68069cc59aab3678e72e8671077b9e1f5c1" translate="yes" xml:space="preserve">
          <source>To define a struct, the &lt;code&gt;defstruct&lt;/code&gt; construct is used:</source>
          <target state="translated">Для определения структуры &lt;code&gt;defstruct&lt;/code&gt; конструкция defstruct :</target>
        </trans-unit>
        <trans-unit id="15c7a0bd6bb05c83760ad9659631936c1f603b9d" translate="yes" xml:space="preserve">
          <source>To define an operator, you can use the usual &lt;code&gt;def*&lt;/code&gt; constructs (&lt;code&gt;def&lt;/code&gt;, &lt;code&gt;defp&lt;/code&gt;, &lt;code&gt;defmacro&lt;/code&gt;, and so on) but with a syntax similar to how the operator is used:</source>
          <target state="translated">Чтобы определить оператор, вы можете использовать обычные конструкции &lt;code&gt;def*&lt;/code&gt; ( &lt;code&gt;def&lt;/code&gt; , &lt;code&gt;defp&lt;/code&gt; , &lt;code&gt;defmacro&lt;/code&gt; и т. Д.), Но с синтаксисом, аналогичным тому, как используется оператор:</target>
        </trans-unit>
        <trans-unit id="97bc558ded88de997eb4b20c7b44aa7a1d127e07" translate="yes" xml:space="preserve">
          <source>To deploy straight from a host to a separate target without cross-compilation, the following must be the same between the host and the target:</source>
          <target state="translated">Для развертывания непосредственно от узла к отдельной цели без перекрестной компиляции между узлом и целью должно быть одно и то же:</target>
        </trans-unit>
        <trans-unit id="b1416bbc268b001f44ff03e41dd657568db375a9" translate="yes" xml:space="preserve">
          <source>To determine how many seconds the &lt;code&gt;:native&lt;/code&gt; unit represents in your current runtime, you can can call this function to convert 1 second to the &lt;code&gt;:native&lt;/code&gt; time unit: &lt;code&gt;System.convert_time_unit(1, :second, :native)&lt;/code&gt;.</source>
          <target state="translated">Чтобы определить, сколько секунд представляет модуль &lt;code&gt;:native&lt;/code&gt; в вашей текущей среде выполнения, вы можете вызвать эту функцию для преобразования 1 секунды в единицу времени &lt;code&gt;:native&lt;/code&gt; : &lt;code&gt;System.convert_time_unit(1, :second, :native)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb35bc4715abc885d6ad16dcca4ef00591e6ce0e" translate="yes" xml:space="preserve">
          <source>To differentiate the program behavior depending on the environment, it is recommended to use application environment through &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#get_env/3&quot;&gt;&lt;code&gt;Application.get_env/3&lt;/code&gt;&lt;/a&gt;. Proper configuration can be set in config files, often per-environment (see the &lt;a href=&quot;https://hexdocs.pm/elixir/Config.html&quot;&gt;&lt;code&gt;Config&lt;/code&gt;&lt;/a&gt; module for more information).</source>
          <target state="translated">Чтобы различать поведение программы в зависимости от среды, рекомендуется использовать среду приложения через &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#get_env/3&quot;&gt; &lt;code&gt;Application.get_env/3&lt;/code&gt; &lt;/a&gt; . Правильная конфигурация может быть установлена ​​в файлах конфигурации, часто для каждой среды (см. Модуль &lt;a href=&quot;https://hexdocs.pm/elixir/Config.html&quot;&gt; &lt;code&gt;Config&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации).</target>
        </trans-unit>
        <trans-unit id="ade0297c81614f897441b308bffb7079cbf4b959" translate="yes" xml:space="preserve">
          <source>To discover a module's public functions or other modules, type the module name followed by a dot, then press tab to trigger autocomplete. For example:</source>
          <target state="translated">Для обнаружения открытых функций модуля или других модулей,введите имя модуля,за которым следует точка,затем нажмите вкладку,чтобы вызвать автозаполнение.Например:</target>
        </trans-unit>
        <trans-unit id="0f350e9537ca99b19347d61d7b15f4ba1b815fe4" translate="yes" xml:space="preserve">
          <source>To display &quot;What is your name?&quot; as a prompt and await user input:</source>
          <target state="translated">Отобразить &quot;What is your name?&quot; в качестве подсказки и дождаться ввода данных от пользователя:</target>
        </trans-unit>
        <trans-unit id="9392c58481cde14e24d585ca66473875cbcb0d13" translate="yes" xml:space="preserve">
          <source>To drive the point home, imagine you want to validate a certain attribute only if a given condition is met. We could easily achieve it with the first solution, by manipulating the data structure accordingly, or with the second solution by using conditionals (if/else) before invoking the function. However, it is impossible to do so with the macros approach unless its DSL is augmented.</source>
          <target state="translated">Чтобы проехать точку домой,представьте,что вы хотите проверить определенный атрибут,только если заданное условие выполнено.Этого можно легко добиться с помощью первого решения,соответствующим образом манипулируя структурой данных,или со вторым решением,используя conditionals (if/else)перед вызовом функции.Однако это невозможно сделать с помощью макроподхода,если не будет дополнена его DSL.</target>
        </trans-unit>
        <trans-unit id="691c11ca8ab2ebe304045dcb2e0736f03a5a8a17" translate="yes" xml:space="preserve">
          <source>To dynamically supervise children, see &lt;a href=&quot;https://hexdocs.pm/elixir/DynamicSupervisor.html&quot;&gt;&lt;code&gt;DynamicSupervisor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы динамически контролировать детей, см. &lt;a href=&quot;https://hexdocs.pm/elixir/DynamicSupervisor.html&quot;&gt; &lt;code&gt;DynamicSupervisor&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f7191bed803a12f545045cca3f35df2867866ca" translate="yes" xml:space="preserve">
          <source>To enable runtime configuration in your release, all you need to do is to create a file named &lt;code&gt;config/runtime.exs&lt;/code&gt;:</source>
          <target state="translated">Чтобы включить конфигурацию среды выполнения в вашем выпуске, все, что вам нужно сделать, это создать файл с именем &lt;code&gt;config/runtime.exs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f2fa53a2359799d77d9a3c808a0fe3f75458448c" translate="yes" xml:space="preserve">
          <source>To escape an EEx expression in EEx use &lt;code&gt;&amp;lt;%% content %&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="translated">Чтобы избежать выражения EEx в EEx, используйте &lt;code&gt;&amp;lt;%% content %&amp;gt;&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="842501ce37fce5610a16f26dd98d6da220a3b08e" translate="yes" xml:space="preserve">
          <source>To exit a breakpoint, the developer can either invoke &lt;code&gt;continue()&lt;/code&gt;, which will block the shell until the next breakpoint is found or the process terminates, or invoke &lt;code&gt;respawn()&lt;/code&gt;, which starts a new IEx shell, freeing up the pried one.</source>
          <target state="translated">Чтобы выйти из точки останова, разработчик может либо вызвать &lt;code&gt;continue()&lt;/code&gt; , который заблокирует оболочку до тех пор, пока не будет найдена следующая точка останова или процесс не завершится, либо вызвать &lt;code&gt;respawn()&lt;/code&gt; , который запускает новую оболочку IEx, освобождая обработанную оболочку.</target>
        </trans-unit>
        <trans-unit id="77caae61840ab6ad348e3ba1e35de2b7d3be118d" translate="yes" xml:space="preserve">
          <source>To fix the failure we need to make &lt;code&gt;KV.Registry.create/2&lt;/code&gt; synchronous by using &lt;code&gt;call/2&lt;/code&gt; rather than &lt;code&gt;cast/2&lt;/code&gt;. This will guarantee that the client will only continue after changes have been made to the table. Let&amp;rsquo;s back to &lt;code&gt;lib/kv/registry.ex&lt;/code&gt; and change the function and its callback as follows:</source>
          <target state="translated">Чтобы исправить ошибку, нам нужно сделать &lt;code&gt;KV.Registry.create/2&lt;/code&gt; синхронным, используя &lt;code&gt;call/2&lt;/code&gt; , а не &lt;code&gt;cast/2&lt;/code&gt; . Это гарантирует, что клиент продолжит работу только после внесения изменений в таблицу. Вернемся к &lt;code&gt;lib/kv/registry.ex&lt;/code&gt; и изменим функцию и ее обратный вызов следующим образом:</target>
        </trans-unit>
        <trans-unit id="a3c693fb70a5169722986ac65b4c67dfb305f68f" translate="yes" xml:space="preserve">
          <source>To fix the failure we need to make &lt;code&gt;KV.Registry.create/2&lt;/code&gt; synchronous by using &lt;code&gt;call/2&lt;/code&gt; rather than &lt;code&gt;cast/2&lt;/code&gt;. This will guarantee that the client will only continue after changes have been made to the table. Let&amp;rsquo;s change the function and its callback as follows:</source>
          <target state="translated">Чтобы исправить ошибку, нам нужно сделать &lt;code&gt;KV.Registry.create/2&lt;/code&gt; синхронным, используя &lt;code&gt;call/2&lt;/code&gt; , а не &lt;code&gt;cast/2&lt;/code&gt; . Это гарантирует, что клиент продолжит работу только после внесения изменений в таблицу. Давайте изменим функцию и ее обратный вызов следующим образом:</target>
        </trans-unit>
        <trans-unit id="248a8954323fae01b279eb29892eb672151e34bd" translate="yes" xml:space="preserve">
          <source>To generate an app with a supervision tree and an application callback:</source>
          <target state="translated">Для создания приложения с деревом контроля и обратным вызовом приложения:</target>
        </trans-unit>
        <trans-unit id="57b84e64c358c14778edadcae30a553429d81661" translate="yes" xml:space="preserve">
          <source>To generate an umbrella application with sub applications:</source>
          <target state="translated">Для создания зонтичного приложения с под-приложениями:</target>
        </trans-unit>
        <trans-unit id="1859a67f28b2dad5db51af942e1a02086e453015" translate="yes" xml:space="preserve">
          <source>To get individual options, see &lt;a href=&quot;#get_compiler_option/1&quot;&gt;&lt;code&gt;get_compiler_option/1&lt;/code&gt;&lt;/a&gt;. For a description of all options, see &lt;a href=&quot;#put_compiler_option/2&quot;&gt;&lt;code&gt;put_compiler_option/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы получить отдельные параметры, см. &lt;a href=&quot;#get_compiler_option/1&quot;&gt; &lt;code&gt;get_compiler_option/1&lt;/code&gt; &lt;/a&gt; . Для описания всех опций см. &lt;a href=&quot;#put_compiler_option/2&quot;&gt; &lt;code&gt;put_compiler_option/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d939e666619b837bbfc72a19c0edb64540f7b914" translate="yes" xml:space="preserve">
          <source>To give the formatter a try, change a file in the &lt;code&gt;lib&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt; directories to include extra spaces or extra newlines, such as &lt;code&gt;def  hello  do&lt;/code&gt;, and then run &lt;code&gt;mix format&lt;/code&gt;.</source>
          <target state="translated">Чтобы попробовать форматировщик, измените файл в каталогах &lt;code&gt;lib&lt;/code&gt; или &lt;code&gt;test&lt;/code&gt; , включив в него лишние пробелы или дополнительные строки новой строки, например &lt;code&gt;def hello do&lt;/code&gt; , а затем запустите &lt;code&gt;mix format&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a15120dae8d76afe9639289d60fb9093810c397a" translate="yes" xml:space="preserve">
          <source>To help developers remember the differences between call, cast and info, the supported return values and more, we have a tiny &lt;a href=&quot;https://elixir-lang.org/cheatsheets/gen-server.pdf&quot;&gt;GenServer cheat sheet&lt;/a&gt;.</source>
          <target state="translated">Чтобы помочь разработчикам запомнить разницу между вызовом, приведением и информацией, поддерживаемыми возвращаемыми значениями и т. Д., У нас есть &lt;a href=&quot;https://elixir-lang.org/cheatsheets/gen-server.pdf&quot;&gt;небольшая шпаргалка по GenServer&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="555a879eb773cd3d2dff7da0f2a52cb90ca0b876" translate="yes" xml:space="preserve">
          <source>To implement the &lt;code&gt;Application&lt;/code&gt; behaviour, we have to &lt;code&gt;use Application&lt;/code&gt; and define a &lt;code&gt;start/2&lt;/code&gt; function. The goal of &lt;code&gt;start/2&lt;/code&gt; is to start a supervisor, which will then start any child services or execute any other code our application may need. Let&amp;rsquo;s use this opportunity to start the &lt;code&gt;KV.Supervisor&lt;/code&gt; we have implemented earlier in this chapter.</source>
          <target state="translated">Чтобы реализовать поведение &lt;code&gt;Application&lt;/code&gt; , мы должны &lt;code&gt;use Application&lt;/code&gt; и определить функцию &lt;code&gt;start/2&lt;/code&gt; . Цель &lt;code&gt;start/2&lt;/code&gt; - запустить супервизор, который затем запустит любые дочерние службы или выполнит любой другой код, который может понадобиться нашему приложению. Давайте воспользуемся этой возможностью, чтобы запустить &lt;code&gt;KV.Supervisor&lt;/code&gt; ,который мы реализовали ранее в этой главе.</target>
        </trans-unit>
        <trans-unit id="4febdf906d953be4fd2821fd877395877b196fe9" translate="yes" xml:space="preserve">
          <source>To learn more about Elixir's AST and how to build them programmatically, see &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#quote/2&quot;&gt;&lt;code&gt;quote/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы узнать больше об AST от Elixir и о том, как их создавать программно, см. &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#quote/2&quot;&gt; &lt;code&gt;quote/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ee64280d1fb25258cd437b5d0c77efe55acbd252" translate="yes" xml:space="preserve">
          <source>To learn more about IEx as a whole, type &lt;code&gt;h(IEx)&lt;/code&gt;.</source>
          <target state="translated">Чтобы узнать больше о IEx в целом, введите &lt;code&gt;h(IEx)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="699ef2c862a7af01ce3ea7b060fc68320ed60961" translate="yes" xml:space="preserve">
          <source>To learn more about floating-point arithmetic visit:</source>
          <target state="translated">Узнать больше о посещении арифметики с плавающей точкой:</target>
        </trans-unit>
        <trans-unit id="101e8672c7193137af23129687e2ed29b0030ea4" translate="yes" xml:space="preserve">
          <source>To learn more about specific optimizations and performance considerations, check out &lt;a href=&quot;http://www.erlang.org/doc/efficiency_guide/binaryhandling.html&quot;&gt;Erlang's Efficiency Guide on handling binaries&lt;/a&gt;.</source>
          <target state="translated">Чтобы узнать больше о конкретных оптимизациях и соображениях производительности, ознакомьтесь с &lt;a href=&quot;http://www.erlang.org/doc/efficiency_guide/binaryhandling.html&quot;&gt;Руководством по эффективности Erlang по обработке двоичных файлов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a32f6bfbd0a46a1fe8412990dabfb9a92464fbb" translate="yes" xml:space="preserve">
          <source>To list all IEx helpers available, which is effectively all exports (functions and macros) in the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;IEx.Helpers&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">Чтобы перечислить все доступные помощники IEx, которые фактически являются всеми экспортами (функциями и макросами) в модуле &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;IEx.Helpers&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="93e48689655deecbe42b747b91efa43959aec278" translate="yes" xml:space="preserve">
          <source>To list all available keys showing the keys themselves:</source>
          <target state="translated">Перечислить все доступные клавиши,показывающие сами клавиши:</target>
        </trans-unit>
        <trans-unit id="77bfde2bf5fe079fb8473d1b45bac69e05a6486e" translate="yes" xml:space="preserve">
          <source>To list all available keys:</source>
          <target state="translated">Перечислить все доступные ключи:</target>
        </trans-unit>
        <trans-unit id="97e7dd0dfd16f5649cf89b74d291b7e7a795f96b" translate="yes" xml:space="preserve">
          <source>To profile the code, you can use syntax similar to the &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Run.html&quot;&gt;&lt;code&gt;mix run&lt;/code&gt;&lt;/a&gt; task:</source>
          <target state="translated">Чтобы профилировать код, вы можете использовать синтаксис, аналогичный задаче &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Run.html&quot;&gt; &lt;code&gt;mix run&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="34f6e4a2bb843898b6a1a63430d9ad523188262e" translate="yes" xml:space="preserve">
          <source>To profile the code, you can use syntax similar to the &lt;a href=&quot;mix.tasks.run&quot;&gt;&lt;code&gt;mix run&lt;/code&gt;&lt;/a&gt; task:</source>
          <target state="translated">Чтобы профилировать код, вы можете использовать синтаксис, аналогичный задаче &lt;a href=&quot;mix.tasks.run&quot;&gt; &lt;code&gt;mix run&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="b90e482b9b75d2e1ab9c0ff8e4d1e0e5aecc5f06" translate="yes" xml:space="preserve">
          <source>To quote &lt;a href=&quot;https://elixir-lang.org/getting-started/meta/macros.html&quot;&gt;the official guide on Macros&lt;/a&gt;:</source>
          <target state="translated">Процитируем &lt;a href=&quot;https://elixir-lang.org/getting-started/meta/macros.html&quot;&gt;официальное руководство по макросам&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="e5139cf2a16e17732e5bda38b6b67324152e536b" translate="yes" xml:space="preserve">
          <source>To reply after returning from the callback because the response is not yet available.</source>
          <target state="translated">Ответить после возвращения с обратного вызова,потому что ответ еще недоступен.</target>
        </trans-unit>
        <trans-unit id="716f6562922e06c13563ae83ce61a300e8352363" translate="yes" xml:space="preserve">
          <source>To reply before returning from the callback because the response is known before calling a slow function.</source>
          <target state="translated">Чтобы ответить перед возвращением из обратного вызова,потому что ответ известен перед вызовом медленной функции.</target>
        </trans-unit>
        <trans-unit id="e57aadf0943d8ee32b1daf18536595cdf4b85435" translate="yes" xml:space="preserve">
          <source>To reply from another process, such as a task.</source>
          <target state="translated">Для ответа из другого процесса,например,из задачи.</target>
        </trans-unit>
        <trans-unit id="5ca8eab4577e8b135c578b17a24c88f164743db6" translate="yes" xml:space="preserve">
          <source>To retrieve all dates in descending order, you can wrap the module in a tuple with &lt;code&gt;:asc&lt;/code&gt; or &lt;code&gt;:desc&lt;/code&gt; as first element:</source>
          <target state="translated">Чтобы получить все даты в порядке убывания, вы можете заключить модуль в кортеж с &lt;code&gt;:asc&lt;/code&gt; или &lt;code&gt;:desc&lt;/code&gt; в качестве первого элемента:</target>
        </trans-unit>
        <trans-unit id="07b5421b45e250d1129a17a5d3f7268bca4e4081" translate="yes" xml:space="preserve">
          <source>To retrieve code points in their natural integer representation, see &lt;a href=&quot;#to_charlist/1&quot;&gt;&lt;code&gt;to_charlist/1&lt;/code&gt;&lt;/a&gt;. For details about code points and graphemes, see the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; module documentation.</source>
          <target state="translated">Чтобы получить кодовые точки в их естественном целочисленном представлении, см. &lt;a href=&quot;#to_charlist/1&quot;&gt; &lt;code&gt;to_charlist/1&lt;/code&gt; &lt;/a&gt; . Подробнее о кодовых точках и графемах см. В документации модуля &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aa09c7d0058c95fdae6640e10ab83ae7e2c7d29c" translate="yes" xml:space="preserve">
          <source>To retrieve the stacktrace of the current process, use &lt;code&gt;Process.info(self(), :current_stacktrace)&lt;/code&gt; instead.</source>
          <target state="translated">Чтобы получить трассировку стека текущего процесса, используйте &lt;code&gt;Process.info(self(), :current_stacktrace)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6478efdf0d6ae4efc7373afc872fb60986f2bb5" translate="yes" xml:space="preserve">
          <source>To run doctests include them in an ExUnit case with a &lt;code&gt;doctest&lt;/code&gt; macro:</source>
          <target state="translated">Чтобы запустить тесты, включите их в кейс ExUnit с помощью макроса &lt;code&gt;doctest&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a9be81917be7c5a65d20c56cce5430337e7437a2" translate="yes" xml:space="preserve">
          <source>To run our doctests, we&amp;rsquo;ll create a file at &lt;code&gt;test/kv_server/command_test.exs&lt;/code&gt; and call &lt;code&gt;doctest KVServer.Command&lt;/code&gt; in the test case:</source>
          <target state="translated">Чтобы запустить наши доктесты, мы создадим файл в &lt;code&gt;test/kv_server/command_test.exs&lt;/code&gt; и вызовем &lt;code&gt;doctest KVServer.Command&lt;/code&gt; в тестовом примере:</target>
        </trans-unit>
        <trans-unit id="c550ca70984ac8e2f646e72f7f0c9faa1dd704b7" translate="yes" xml:space="preserve">
          <source>To run the tests above, run the file using &lt;code&gt;elixir&lt;/code&gt; from the command line. Assuming you named the file &lt;code&gt;assertion_test.exs&lt;/code&gt;, you can run it as:</source>
          <target state="translated">Чтобы запустить тесты, указанные выше, запустите файл с помощью &lt;code&gt;elixir&lt;/code&gt; из командной строки. Предполагая, что вы назвали файл &lt;code&gt;assertion_test.exs&lt;/code&gt; , вы можете запустить его как:</target>
        </trans-unit>
        <trans-unit id="e079c912f8f4dac650321807cd475663a5b52c69" translate="yes" xml:space="preserve">
          <source>To see an example of using module attributes as for storage, look no further than Elixir&amp;rsquo;s unit test framework called &lt;a href=&quot;https://hexdocs.pm/ex_unit/&quot;&gt;ExUnit&lt;/a&gt;. ExUnit uses module attributes for multiple different purposes:</source>
          <target state="translated">Чтобы увидеть пример использования атрибутов модуля в качестве хранилища, обратите внимание на платформу модульного тестирования Elixir под названием &lt;a href=&quot;https://hexdocs.pm/ex_unit/&quot;&gt;ExUnit&lt;/a&gt; . ExUnit использует атрибуты модуля для различных целей:</target>
        </trans-unit>
        <trans-unit id="f88b35a6396b6373f09d679595715d5f894666f2" translate="yes" xml:space="preserve">
          <source>To see documentation for each specific compiler, you must invoke &lt;code&gt;help&lt;/code&gt; directly for the compiler command:</source>
          <target state="translated">Чтобы просмотреть документацию для каждого конкретного компилятора, вы должны вызвать &lt;code&gt;help&lt;/code&gt; непосредственно для команды компилятора:</target>
        </trans-unit>
        <trans-unit id="7fcc2e5f60178276dfc7759916301cae9d1d546f" translate="yes" xml:space="preserve">
          <source>To show all entries, configure the limit to &lt;code&gt;:infinity&lt;/code&gt;:</source>
          <target state="translated">Чтобы отобразить все записи, настройте ограничение на &lt;code&gt;:infinity&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6d46460a95ec8fd91d8032b072da8de876729d16" translate="yes" xml:space="preserve">
          <source>To show how the protocol can be implemented, we can again look at the implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/MapSet.html&quot;&gt;&lt;code&gt;MapSet&lt;/code&gt;&lt;/a&gt;. In this implementation &quot;collecting&quot; elements simply means inserting them in the set through &lt;a href=&quot;https://hexdocs.pm/elixir/MapSet.html#put/2&quot;&gt;&lt;code&gt;MapSet.put/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы показать, как можно реализовать протокол, мы можем снова взглянуть на реализацию для &lt;a href=&quot;https://hexdocs.pm/elixir/MapSet.html&quot;&gt; &lt;code&gt;MapSet&lt;/code&gt; &lt;/a&gt; . В этой реализации &quot;сбор&quot; элементов означает просто вставку их в набор через &lt;a href=&quot;https://hexdocs.pm/elixir/MapSet.html#put/2&quot;&gt; &lt;code&gt;MapSet.put/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b50964644227148ad32fc703cd3d520d71c70f6b" translate="yes" xml:space="preserve">
          <source>To show how the protocol can be implemented, we can take again a look at the implementation for &lt;a href=&quot;mapset&quot;&gt;&lt;code&gt;MapSet&lt;/code&gt;&lt;/a&gt;. In this implementation &quot;collecting&quot; elements simply means inserting them in the set through &lt;a href=&quot;mapset#put/2&quot;&gt;&lt;code&gt;MapSet.put/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы показать, как можно реализовать протокол, мы можем еще раз взглянуть на реализацию &lt;a href=&quot;mapset&quot;&gt; &lt;code&gt;MapSet&lt;/code&gt; &lt;/a&gt; . В этой реализации &quot;сбор&quot; элементов означает просто вставку их в набор через &lt;a href=&quot;mapset#put/2&quot;&gt; &lt;code&gt;MapSet.put/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="987c795e4ee5f17f665e41830d152e223b2b4556" translate="yes" xml:space="preserve">
          <source>To show how to manually use the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Collectable&lt;/code&gt;&lt;/a&gt; protocol, let's play with its implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/MapSet.html&quot;&gt;&lt;code&gt;MapSet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы показать, как вручную использовать протокол &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Collectable&lt;/code&gt; &lt;/a&gt; , давайте поиграем с его реализацией для &lt;a href=&quot;https://hexdocs.pm/elixir/MapSet.html&quot;&gt; &lt;code&gt;MapSet&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6baefde74a3b1948259d37f28d66b2da3cc95503" translate="yes" xml:space="preserve">
          <source>To show how to manually use the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Collectable&lt;/code&gt;&lt;/a&gt; protocol, let's play with its implementation for &lt;a href=&quot;mapset&quot;&gt;&lt;code&gt;MapSet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы показать, как вручную использовать протокол &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Collectable&lt;/code&gt; &lt;/a&gt; , давайте поиграем с его реализацией для &lt;a href=&quot;mapset&quot;&gt; &lt;code&gt;MapSet&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5683b1948dc754efdfed9ba11dc087a421c0449e" translate="yes" xml:space="preserve">
          <source>To specify that a module implements a given behaviour, the &lt;code&gt;@behaviour&lt;/code&gt; attribute must be used:</source>
          <target state="translated">Чтобы указать, что модуль реализует заданное поведение, необходимо использовать атрибут &lt;code&gt;@behaviour&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e0fee1e5263eb41b6e360a95cfaf76805e6190b5" translate="yes" xml:space="preserve">
          <source>To start the supervisor, the &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt; callback will be invoked in the given &lt;code&gt;module&lt;/code&gt;, with &lt;code&gt;arg&lt;/code&gt; as its argument. The &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt; callback must return a supervisor specification which can be created with the help of the &lt;a href=&quot;#init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Чтобы запустить супервизор, в данном &lt;code&gt;module&lt;/code&gt; будет вызван обратный вызов &lt;a href=&quot;#c:init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt; с &lt;code&gt;arg&lt;/code&gt; . &lt;a href=&quot;#c:init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt; обратный вызов должен возвращать спецификации супервизора , который может быть создан с помощью &lt;a href=&quot;#init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt; функции.</target>
        </trans-unit>
        <trans-unit id="340467355095ab2102cf53f317a261f28f43cfa1" translate="yes" xml:space="preserve">
          <source>To start the supervisor, the &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt; callback will be invoked in the given &lt;code&gt;module&lt;/code&gt;, with &lt;code&gt;init_arg&lt;/code&gt; as its argument. The &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt; callback must return a supervisor specification which can be created with the help of the &lt;a href=&quot;#init/2&quot;&gt;&lt;code&gt;init/2&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Чтобы запустить супервизор, в данном &lt;code&gt;module&lt;/code&gt; будет вызван обратный вызов &lt;a href=&quot;#c:init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt; с аргументом &lt;code&gt;init_arg&lt;/code&gt; . &lt;a href=&quot;#c:init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt; обратный вызов должен возвращать спецификации супервизора , который может быть создан с помощью &lt;a href=&quot;#init/2&quot;&gt; &lt;code&gt;init/2&lt;/code&gt; &lt;/a&gt; функции.</target>
        </trans-unit>
        <trans-unit id="ea3cc861aafddb9c5584732baff0a5d8fc163c1d" translate="yes" xml:space="preserve">
          <source>To store individual options, see &lt;a href=&quot;#put_compiler_option/2&quot;&gt;&lt;code&gt;put_compiler_option/2&lt;/code&gt;&lt;/a&gt;. For a description of all options, see &lt;a href=&quot;#put_compiler_option/2&quot;&gt;&lt;code&gt;put_compiler_option/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы сохранить отдельные параметры, см. &lt;a href=&quot;#put_compiler_option/2&quot;&gt; &lt;code&gt;put_compiler_option/2&lt;/code&gt; &lt;/a&gt; . Для описания всех опций см. &lt;a href=&quot;#put_compiler_option/2&quot;&gt; &lt;code&gt;put_compiler_option/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6bd659c0fd4a88cb66bdff02f16f40278b81dd1f" translate="yes" xml:space="preserve">
          <source>To sum it up: since the formatter cannot change the semantics of your code, sometimes it is necessary to tweak or refactor the code to get optimal formatting. To help better understand how to control the formatter, we describe in the next sections the cases where the formatter keeps the user encoding and how to control multiline expressions.</source>
          <target state="translated">Подводя итог,можно сказать,что поскольку форматирование не может изменить семантику вашего кода,иногда для получения оптимального форматирования необходимо подкорректировать или рефакторизовать код.Чтобы лучше понять,как управлять форматировщиком,в следующих разделах мы опишем случаи,когда форматировщик сохраняет пользовательскую кодировку и как управлять многострочными выражениями.</target>
        </trans-unit>
        <trans-unit id="dc5e717b9aecb2c9e25ade231bba83d35b0f1df7" translate="yes" xml:space="preserve">
          <source>To this point, we have been starting &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Registry&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;#start_link/1&quot;&gt;&lt;code&gt;start_link/1&lt;/code&gt;&lt;/a&gt;. Typically the registry is started as part of a supervision tree though:</source>
          <target state="translated">К этому моменту мы &lt;a href=&quot;#start_link/1&quot;&gt; &lt;code&gt;start_link/1&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Registry&lt;/code&gt; &lt;/a&gt; используя start_link / 1 . Обычно реестр запускается как часть дерева надзора:</target>
        </trans-unit>
        <trans-unit id="16500310cbb3ebb314cb2217a6e54228c69e7280" translate="yes" xml:space="preserve">
          <source>To track the relationship between your code and the task, we use the &lt;code&gt;$callers&lt;/code&gt; key in the process dictionary. Therefore, assuming the &lt;a href=&quot;https://hexdocs.pm/elixir/Task.Supervisor.html&quot;&gt;&lt;code&gt;Task.Supervisor&lt;/code&gt;&lt;/a&gt; call above, we have:</source>
          <target state="translated">Чтобы отслеживать взаимосвязь между вашим кодом и задачей, мы используем ключ &lt;code&gt;$callers&lt;/code&gt; в словаре процесса. Следовательно, предполагая вызов &lt;a href=&quot;https://hexdocs.pm/elixir/Task.Supervisor.html&quot;&gt; &lt;code&gt;Task.Supervisor&lt;/code&gt; &lt;/a&gt; выше, мы имеем:</target>
        </trans-unit>
        <trans-unit id="f69493266441ce87de2c6a579e769590bf4ddfcf" translate="yes" xml:space="preserve">
          <source>To track the relationship between your code and the task, we use the &lt;code&gt;$callers&lt;/code&gt; key in the process dictionary. Therefore, assuming the &lt;a href=&quot;task.supervisor&quot;&gt;&lt;code&gt;Task.Supervisor&lt;/code&gt;&lt;/a&gt; call above, we have:</source>
          <target state="translated">Для того, чтобы отслеживать связь между вашим кодом и задачами, мы используем &lt;code&gt;$callers&lt;/code&gt; ключ в словаре процесса. Следовательно, предполагая вызов &lt;a href=&quot;task.supervisor&quot;&gt; &lt;code&gt;Task.Supervisor&lt;/code&gt; &lt;/a&gt; выше, мы имеем:</target>
        </trans-unit>
        <trans-unit id="4d8cdd3c2f7959e04910020a7c04a125591711d6" translate="yes" xml:space="preserve">
          <source>To use &lt;a href=&quot;#break!/4&quot;&gt;&lt;code&gt;IEx.break!/4&lt;/code&gt;&lt;/a&gt; during tests, you need to run &lt;code&gt;mix&lt;/code&gt; inside the &lt;code&gt;iex&lt;/code&gt; command and pass the &lt;code&gt;--trace&lt;/code&gt; to &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt;&lt;code&gt;mix test&lt;/code&gt;&lt;/a&gt; to avoid running into timeouts:</source>
          <target state="translated">Чтобы использовать &lt;a href=&quot;#break!/4&quot;&gt; &lt;code&gt;IEx.break!/4&lt;/code&gt; &lt;/a&gt; во время тестов, вам нужно запустить &lt;code&gt;mix&lt;/code&gt; внутри команды &lt;code&gt;iex&lt;/code&gt; и передать &lt;code&gt;--trace&lt;/code&gt; to &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt; &lt;code&gt;mix test&lt;/code&gt; ,&lt;/a&gt; чтобы избежать таймаутов:</target>
        </trans-unit>
        <trans-unit id="aac68b9ffcf6a8ac8be05349df7088ceecbb4122" translate="yes" xml:space="preserve">
          <source>To use &lt;a href=&quot;#pry/0&quot;&gt;&lt;code&gt;IEx.pry/0&lt;/code&gt;&lt;/a&gt; during tests, you need to run &lt;code&gt;mix&lt;/code&gt; inside the &lt;code&gt;iex&lt;/code&gt; command and pass the &lt;code&gt;--trace&lt;/code&gt; to &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt;&lt;code&gt;mix test&lt;/code&gt;&lt;/a&gt; to avoid running into timeouts:</source>
          <target state="translated">Чтобы использовать &lt;a href=&quot;#pry/0&quot;&gt; &lt;code&gt;IEx.pry/0&lt;/code&gt; &lt;/a&gt; во время тестов, вам нужно запустить &lt;code&gt;mix&lt;/code&gt; внутри команды &lt;code&gt;iex&lt;/code&gt; и передать &lt;code&gt;--trace&lt;/code&gt; to &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt; &lt;code&gt;mix test&lt;/code&gt; ,&lt;/a&gt; чтобы избежать таймаутов:</target>
        </trans-unit>
        <trans-unit id="97175bd03b3eda9bcbde862759fc67493bd67482" translate="yes" xml:space="preserve">
          <source>To use &lt;a href=&quot;iex#break!/4&quot;&gt;&lt;code&gt;IEx.break!/4&lt;/code&gt;&lt;/a&gt; during tests, you need to run &lt;code&gt;mix&lt;/code&gt; inside the &lt;code&gt;iex&lt;/code&gt; command and pass the &lt;code&gt;--trace&lt;/code&gt; to &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt;&lt;code&gt;mix test&lt;/code&gt;&lt;/a&gt; to avoid running into timeouts:</source>
          <target state="translated">Чтобы использовать &lt;a href=&quot;iex#break!/4&quot;&gt; &lt;code&gt;IEx.break!/4&lt;/code&gt; &lt;/a&gt; во время тестов, вам нужно запустить &lt;code&gt;mix&lt;/code&gt; внутри команды &lt;code&gt;iex&lt;/code&gt; и передать &lt;code&gt;--trace&lt;/code&gt; to &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt; &lt;code&gt;mix test&lt;/code&gt; ,&lt;/a&gt; чтобы избежать таймаутов:</target>
        </trans-unit>
        <trans-unit id="ad497a0e7b4707958b2bbdf25658f61ced2eef66" translate="yes" xml:space="preserve">
          <source>To use &lt;a href=&quot;iex#pry/0&quot;&gt;&lt;code&gt;IEx.pry/0&lt;/code&gt;&lt;/a&gt; during tests, you need to run &lt;code&gt;mix&lt;/code&gt; inside the &lt;code&gt;iex&lt;/code&gt; command and pass the &lt;code&gt;--trace&lt;/code&gt; to &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt;&lt;code&gt;mix test&lt;/code&gt;&lt;/a&gt; to avoid running into timeouts:</source>
          <target state="translated">Чтобы использовать &lt;a href=&quot;iex#pry/0&quot;&gt; &lt;code&gt;IEx.pry/0&lt;/code&gt; &lt;/a&gt; во время тестов, вам нужно запустить &lt;code&gt;mix&lt;/code&gt; внутри команды &lt;code&gt;iex&lt;/code&gt; и передать &lt;code&gt;--trace&lt;/code&gt; to &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt; &lt;code&gt;mix test&lt;/code&gt; ,&lt;/a&gt; чтобы избежать таймаутов:</target>
        </trans-unit>
        <trans-unit id="525e76db8eaa15a02d475c0b25c1748678200a4e" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;:keep&lt;/code&gt; with a type other than &lt;code&gt;:string&lt;/code&gt;, use a list as the type for the switch. For example: &lt;code&gt;[foo: [:integer, :keep]]&lt;/code&gt;.</source>
          <target state="translated">Чтобы использовать &lt;code&gt;:keep&lt;/code&gt; с типом, отличным от &lt;code&gt;:string&lt;/code&gt; , используйте список в качестве типа для переключателя. Например: &lt;code&gt;[foo: [:integer, :keep]]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b67f756b7a47a192314501d13fc2788976f1a9c" translate="yes" xml:space="preserve">
          <source>To use the newly defined operators, we &lt;strong&gt;have to&lt;/strong&gt; import the module that defines them:</source>
          <target state="translated">Чтобы использовать вновь определенные операторы, мы &lt;strong&gt;должны&lt;/strong&gt; импортировать модуль, который их определяет:</target>
        </trans-unit>
        <trans-unit id="2c8de6b1ffba1e94f756b45cb853dd0d24f391d0" translate="yes" xml:space="preserve">
          <source>To use them, first make sure it is added as a dependency in &lt;code&gt;mix.exs&lt;/code&gt;. It can then be configured either via configuration:</source>
          <target state="translated">Чтобы использовать их, сначала убедитесь, что он добавлен как зависимость в &lt;code&gt;mix.exs&lt;/code&gt; . Затем его можно настроить либо с помощью конфигурации:</target>
        </trans-unit>
        <trans-unit id="f4e084ee0583dab5cdb8f2aaa6336b9ae8900f06" translate="yes" xml:space="preserve">
          <source>To work around this error, redefine the field with your own &amp;amp;M.f/a function, like so:</source>
          <target state="translated">Чтобы обойти эту ошибку, переопределите поле с помощью собственной функции &amp;amp; M.f / a, например:</target>
        </trans-unit>
        <trans-unit id="123be2f9bdd25b0f49703cfe940d72bfca8fdce4" translate="yes" xml:space="preserve">
          <source>TokenMissingError</source>
          <target state="translated">TokenMissingError</target>
        </trans-unit>
        <trans-unit id="42d5db27696210e57467dc675285521f0930aa67" translate="yes" xml:space="preserve">
          <source>TokenMissingError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">TokenMissingError &lt;small&gt;исключение&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4fc60ef5d69079c451ea67854c51808d9ec41c01" translate="yes" xml:space="preserve">
          <source>Tooling</source>
          <target state="translated">Tooling</target>
        </trans-unit>
        <trans-unit id="cd770bf19fa776a62cbc130cb90d8f5cd6a0b438" translate="yes" xml:space="preserve">
          <source>Tools like Mix may use this information to ensure the module is recompiled in case any of the external resources change.</source>
          <target state="translated">Такие инструменты,как Mix,могут использовать эту информацию для обеспечения перекомпиляции модуля в случае изменения каких-либо внешних ресурсов.</target>
        </trans-unit>
        <trans-unit id="71f3b1bc352a87eabb6f98c3505cc5cd7766eaec" translate="yes" xml:space="preserve">
          <source>Tools may use this information to ensure the module is recompiled in case any of the external resources change, see for example: &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Compile.Elixir.html&quot;&gt;&lt;code&gt;mix compile.elixir&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Инструменты могут использовать эту информацию для обеспечения перекомпиляции модуля в случае изменения любого из внешних ресурсов, см., Например: &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Compile.Elixir.html&quot;&gt; &lt;code&gt;mix compile.elixir&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="77431b38c8bb01a363da5bccdb519bd75745358b" translate="yes" xml:space="preserve">
          <source>Trailing bang (&lt;code&gt;foo!&lt;/code&gt;)</source>
          <target state="translated">Конечный взрыв ( &lt;code&gt;foo!&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ff6cffeaff58c52204a5122da57dc4b26f381da0" translate="yes" xml:space="preserve">
          <source>Trailing question mark (&lt;code&gt;foo?&lt;/code&gt;)</source>
          <target state="translated">Завершающий вопросительный знак ( &lt;code&gt;foo?&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b7a933d6378a29d15a7b6795f6516bd8c8f0c0ab" translate="yes" xml:space="preserve">
          <source>Transforms an existing stream with function-based start and finish.</source>
          <target state="translated">Преобразование существующего потока с функциональным началом и концом.</target>
        </trans-unit>
        <trans-unit id="0183630f154b045739040c0a476db00c0d8d8489" translate="yes" xml:space="preserve">
          <source>Transforms an existing stream.</source>
          <target state="translated">Преобразовывает существующий поток.</target>
        </trans-unit>
        <trans-unit id="a0bf22bc28c174dfbe4750edd483edd80c1c1f1c" translate="yes" xml:space="preserve">
          <source>Translates to:</source>
          <target state="translated">Переводит на:</target>
        </trans-unit>
        <trans-unit id="ac26a7a94ea2e66490f932b6415a09ef6f2a913c" translate="yes" xml:space="preserve">
          <source>Translation</source>
          <target state="translated">Translation</target>
        </trans-unit>
        <trans-unit id="eb726f366153f5273c287e7afe4de066bacf45f4" translate="yes" xml:space="preserve">
          <source>Traverses paths according to the given &lt;code&gt;glob&lt;/code&gt; expression and returns a list of matches.</source>
          <target state="translated">Обходит пути в соответствии с заданным &lt;code&gt;glob&lt;/code&gt; выражением и возвращает список совпадений.</target>
        </trans-unit>
        <trans-unit id="2b9bae059da0df068a9a43bf70813a2cc0165c80" translate="yes" xml:space="preserve">
          <source>Tries to create the directory &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">Пытается создать &lt;code&gt;path&lt;/code&gt; к каталогу .</target>
        </trans-unit>
        <trans-unit id="1274a0f5d2ed4698598c860012ff8d0e34e7aeca" translate="yes" xml:space="preserve">
          <source>Tries to delete the dir at &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">Пытается удалить каталог по &lt;code&gt;path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79494b7d121b41ed702af12c8820f16d4b440ca4" translate="yes" xml:space="preserve">
          <source>Tries to delete the file &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">Пытается удалить &lt;code&gt;path&lt;/code&gt; к файлу .</target>
        </trans-unit>
        <trans-unit id="7267f3b3b246e3958379e99f6b106bc8021e929a" translate="yes" xml:space="preserve">
          <source>Tries to set up a connection to node.</source>
          <target state="translated">Пытается установить соединение с узлом.</target>
        </trans-unit>
        <trans-unit id="836d86c6c848f493d3ff2e48bb6f5f308c9c411f" translate="yes" xml:space="preserve">
          <source>Truthy and falsy values</source>
          <target state="translated">Правдивые и фальшивые ценности</target>
        </trans-unit>
        <trans-unit id="a0d62e00a429e56556bf1455c0175bc4654fbf2a" translate="yes" xml:space="preserve">
          <source>Truthy values:</source>
          <target state="translated">Истинные ценности:</target>
        </trans-unit>
        <trans-unit id="ccf6e0cd6e8c63d5ae42d6c2569741d54c61f4d5" translate="yes" xml:space="preserve">
          <source>Try to connect two telnet clients at the same time. When you do so, you will notice that the second client doesn&amp;rsquo;t echo:</source>
          <target state="translated">Попробуйте подключить одновременно два telnet-клиента. Когда вы это сделаете, вы заметите, что второй клиент не выводит эхо:</target>
        </trans-unit>
        <trans-unit id="965b5b1e76f73cc1dd48f82e36854d491ebbe607" translate="yes" xml:space="preserve">
          <source>TryClauseError</source>
          <target state="translated">TryClauseError</target>
        </trans-unit>
        <trans-unit id="bb04413eca53d9d4f9ada422b12b458b1a19dc69" translate="yes" xml:space="preserve">
          <source>TryClauseError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Исключение&lt;/small&gt; TryClauseError&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f3d6d3a96a93234d43a687b1131b3901f142d46c" translate="yes" xml:space="preserve">
          <source>Trying to access an attribute that was not defined will print a warning:</source>
          <target state="translated">Попытка получить доступ к атрибуту,который не был определен,выведет предупреждение:</target>
        </trans-unit>
        <trans-unit id="c41a2be51027c17da2914785c19c9af65da7231f" translate="yes" xml:space="preserve">
          <source>Tuple</source>
          <target state="translated">Tuple</target>
        </trans-unit>
        <trans-unit id="dc4f3a01c46fc5525a4e91e907b957d6688cd48a" translate="yes" xml:space="preserve">
          <source>Tuple describing the client of a call request.</source>
          <target state="translated">Кортеж,описывающий клиента запроса на вызов.</target>
        </trans-unit>
        <trans-unit id="eb4abd3a92bef73903da00d10d474ba4501f6bab" translate="yes" xml:space="preserve">
          <source>Tuple-based HashDict implementation.</source>
          <target state="translated">Внедрение HashDict в кортеже.</target>
        </trans-unit>
        <trans-unit id="91c1b6c09400f880e21ca1e3d43c7f7b3443b423" translate="yes" xml:space="preserve">
          <source>Tuple-based HashSet implementation.</source>
          <target state="translated">Внедрение HashSet на базе кортежа.</target>
        </trans-unit>
        <trans-unit id="538a8ce3fbdcaee00a14353bd57bcf3600c6e0d0" translate="yes" xml:space="preserve">
          <source>Tuples</source>
          <target state="translated">Tuples</target>
        </trans-unit>
        <trans-unit id="a76966417cbfeb7cb220fffc01419f6c11debbd2" translate="yes" xml:space="preserve">
          <source>Tuples are a compound type and each tuple is identified by the types inside it (in this case, a number and a string). To understand why &lt;code&gt;String.t&lt;/code&gt; is not written as &lt;code&gt;string&lt;/code&gt;, have another look at the &lt;a href=&quot;https://hexdocs.pm/elixir/typespecs.html#the-string-type&quot;&gt;typespecs docs&lt;/a&gt;.</source>
          <target state="translated">Кортежи являются составным типом, и каждый кортеж идентифицируется типами внутри него (в данном случае числом и строкой). Чтобы понять, почему &lt;code&gt;String.t&lt;/code&gt; не записывается как &lt;code&gt;string&lt;/code&gt; , еще раз взгляните на &lt;a href=&quot;https://hexdocs.pm/elixir/typespecs.html#the-string-type&quot;&gt;документацию&lt;/a&gt; со спецификациями типов .</target>
        </trans-unit>
        <trans-unit id="793259df3cfbea29ea94e801a3dc852ba0481364" translate="yes" xml:space="preserve">
          <source>Tuples are compared by size, then element by element.</source>
          <target state="translated">Кортежи сравниваются по размеру,затем по элементам.</target>
        </trans-unit>
        <trans-unit id="cbb1dd7716c923dc57835e6545295dd3e5141a82" translate="yes" xml:space="preserve">
          <source>Tuples are denoted with curly braces:</source>
          <target state="translated">Кортежи обозначаются фигурными скобками:</target>
        </trans-unit>
        <trans-unit id="f9d295b48169d12e8a4a885f2969f7ebb5f288bf" translate="yes" xml:space="preserve">
          <source>Tuples are intended as fixed-size containers for multiple elements. To manipulate a collection of elements, use a list instead. &lt;a href=&quot;enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; functions do not work on tuples.</source>
          <target state="translated">Кортежи предназначены как контейнеры фиксированного размера для нескольких элементов. Вместо этого для управления коллекцией элементов используйте список. Функции &lt;a href=&quot;enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; не работают с кортежами.</target>
        </trans-unit>
        <trans-unit id="9c44772da431d393d0ff2d0292ec743fdb504db7" translate="yes" xml:space="preserve">
          <source>Tuples are intended as fixed-size containers for multiple elements. To manipulate a collection of elements, use a list instead. &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; functions do not work on tuples.</source>
          <target state="translated">Кортежи предназначены как контейнеры фиксированного размера для нескольких элементов. Вместо этого для управления коллекцией элементов используйте список. Функции &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; не работают с кортежами.</target>
        </trans-unit>
        <trans-unit id="6007daf5620486dbca1cb7e87969100af322cc9f" translate="yes" xml:space="preserve">
          <source>Tuples are typically used either when a function has multiple return values or for error handling. &lt;a href=&quot;file#read/1&quot;&gt;&lt;code&gt;File.read/1&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;{:ok, contents}&lt;/code&gt; if reading the given file is successful, or else &lt;code&gt;{:error, reason}&lt;/code&gt; such as when the file does not exist.</source>
          <target state="translated">Кортежи обычно используются, когда функция имеет несколько возвращаемых значений, или для обработки ошибок. &lt;a href=&quot;file#read/1&quot;&gt; &lt;code&gt;File.read/1&lt;/code&gt; &lt;/a&gt; возвращает &lt;code&gt;{:ok, contents}&lt;/code&gt; если чтение данного файла прошло успешно, или же &lt;code&gt;{:error, reason}&lt;/code&gt; например, когда файл не существует.</target>
        </trans-unit>
        <trans-unit id="c05d54cdc90ebeef0a2917964fc5bc31fa686547" translate="yes" xml:space="preserve">
          <source>Tuples are typically used either when a function has multiple return values or for error handling. &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#read/1&quot;&gt;&lt;code&gt;File.read/1&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;{:ok, contents}&lt;/code&gt; if reading the given file is successful, or else &lt;code&gt;{:error, reason}&lt;/code&gt; such as when the file does not exist.</source>
          <target state="translated">Кортежи обычно используются, когда функция имеет несколько возвращаемых значений, или для обработки ошибок. &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#read/1&quot;&gt; &lt;code&gt;File.read/1&lt;/code&gt; &lt;/a&gt; возвращает &lt;code&gt;{:ok, contents}&lt;/code&gt; если чтение данного файла прошло успешно, или же &lt;code&gt;{:error, reason}&lt;/code&gt; например, когда файл не существует.</target>
        </trans-unit>
        <trans-unit id="db66b3f610de5841b308865fc05862649e3b269d" translate="yes" xml:space="preserve">
          <source>Tuples have their own representation, except for two-element tuples, which are represented as themselves:</source>
          <target state="translated">Кортежи имеют свое собственное представление,за исключением двухэлементных кортежей,которые представлены как сами по себе:</target>
        </trans-unit>
        <trans-unit id="c8f2c5c5f76542db20a27b0649c5619472b41e0e" translate="yes" xml:space="preserve">
          <source>Tuples may appear in patterns using the curly brackets syntax (&lt;code&gt;{}&lt;/code&gt;). A tuple in a pattern will match only tuples of the same size, where each individual tuple element must also match:</source>
          <target state="translated">Кортежи могут появляться в шаблонах с использованием синтаксиса фигурных скобок ( &lt;code&gt;{}&lt;/code&gt; ). Кортеж в шаблоне будет соответствовать только кортежам одинакового размера, причем каждый отдельный элемент кортежа также должен соответствовать:</target>
        </trans-unit>
        <trans-unit id="6d23bff74f82a432abab310b02bda096c901d05c" translate="yes" xml:space="preserve">
          <source>Tuples store elements contiguously in memory. This means accessing a tuple element by index or getting the tuple size is a fast operation. Indexes start from zero:</source>
          <target state="translated">Кортежи хранят элементы непрерывно в памяти.Это означает,что доступ к элементу кортежа по индексу или получение размера кортежа является быстрой операцией.Индексы начинаются с нуля:</target>
        </trans-unit>
        <trans-unit id="4827be384e5b92dfa89593fd34e759c469d83f68" translate="yes" xml:space="preserve">
          <source>Tuples, on the other hand, are stored contiguously in memory. This means getting the tuple size or accessing an element by index is fast. However, updating or adding elements to tuples is expensive because it requires creating a new tuple in memory:</source>
          <target state="translated">Кортежи,с другой стороны,хранятся в постоянной памяти.Это означает,что получение размера кортежа или доступ к элементу по индексу происходит быстро.Однако обновление или добавление элементов в кортежи стоит дорого,так как требует создания нового кортежа в памяти:</target>
        </trans-unit>
        <trans-unit id="c4eeec2166369454fe72d485310480999d9e41ff" translate="yes" xml:space="preserve">
          <source>Turns a distributed node into a non-distributed node.</source>
          <target state="translated">Превращает распределенный узел в нераспределенный.</target>
        </trans-unit>
        <trans-unit id="78cb13dab8abb15c4418dcf574cee609f60fff10" translate="yes" xml:space="preserve">
          <source>Turns a non-distributed node into a distributed node.</source>
          <target state="translated">Превращает нераспределенный узел в распределенный.</target>
        </trans-unit>
        <trans-unit id="0d200b5cca6122d2ea47ef95bc1ae207e6bed360" translate="yes" xml:space="preserve">
          <source>Two keywords are considered to be equal if they contain the same keys and those keys contain the same values.</source>
          <target state="translated">Два ключевых слова считаются равными,если они содержат одинаковые ключи,и эти ключи содержат одинаковые значения.</target>
        </trans-unit>
        <trans-unit id="ef661032731cfceb2a4bb6e8a73cfcacce40a182" translate="yes" xml:space="preserve">
          <source>Two lists can be concatenated and subtracted using the &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#++/2&quot;&gt;&lt;code&gt;Kernel.++/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#--/2&quot;&gt;&lt;code&gt;Kernel.--/2&lt;/code&gt;&lt;/a&gt; operators:</source>
          <target state="translated">Два списка можно объединить и вычесть с помощью операторов &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#++/2&quot;&gt; &lt;code&gt;Kernel.++/2&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#--/2&quot;&gt; &lt;code&gt;Kernel.--/2&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="fddf4faa5ad6ac7c7817431eda4bde5737ecc7a7" translate="yes" xml:space="preserve">
          <source>Two lists can be concatenated and subtracted using the &lt;a href=&quot;kernel#++/2&quot;&gt;&lt;code&gt;Kernel.++/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;kernel#--/2&quot;&gt;&lt;code&gt;Kernel.--/2&lt;/code&gt;&lt;/a&gt; operators:</source>
          <target state="translated">Два списка можно объединить и вычесть с помощью операторов &lt;a href=&quot;kernel#++/2&quot;&gt; &lt;code&gt;Kernel.++/2&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;kernel#--/2&quot;&gt; &lt;code&gt;Kernel.--/2&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c6eb24ea9f355df425e35046856649369306137b" translate="yes" xml:space="preserve">
          <source>Two lists can be concatenated or subtracted using the &lt;code&gt;++/2&lt;/code&gt; and &lt;code&gt;--/2&lt;/code&gt; operators respectively:</source>
          <target state="translated">Два списка можно объединить или вычесть с помощью операторов &lt;code&gt;++/2&lt;/code&gt; и &lt;code&gt;--/2&lt;/code&gt; соответственно:</target>
        </trans-unit>
        <trans-unit id="28dd04de329219b61258e459b05052b6d195ed8c" translate="yes" xml:space="preserve">
          <source>Two maps are considered to be equal if they contain the same keys and those keys contain the same values.</source>
          <target state="translated">Две карты считаются равными,если они содержат одни и те же клавиши,и эти клавиши содержат одни и те же значения.</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="130c35a2878e328189066b98bf54e31f721289db" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;hello&amp;rdquo;, press enter, and you will get &amp;ldquo;hello&amp;rdquo; back. Excellent!</source>
          <target state="translated">Введите &amp;laquo;привет&amp;raquo;, нажмите &amp;laquo;Ввод&amp;raquo;, и вы получите ответ &amp;laquo;привет&amp;raquo;. Превосходно!</target>
        </trans-unit>
        <trans-unit id="e252ef20859612096fbf35e99f3db43d0d903502" translate="yes" xml:space="preserve">
          <source>Type checks and other boolean checks that are allowed in guard clauses are named with an &lt;code&gt;is_&lt;/code&gt; prefix.</source>
          <target state="translated">Проверки типа и другие логические проверки, разрешенные в защитных предложениях, называются с префиксом &lt;code&gt;is_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63885d680ea99a25f2552e75b805c2d3723587d4" translate="yes" xml:space="preserve">
          <source>Type operator. Used by types and bitstrings to specify types.</source>
          <target state="translated">Типовой оператор.Используется по типам и битовым строкам для указания типов.</target>
        </trans-unit>
        <trans-unit id="ce1a99d47d96ec4a8d262432fdeeb24d34842d1c" translate="yes" xml:space="preserve">
          <source>Type specifications (sometimes referred to as &lt;em&gt;typespecs&lt;/em&gt;) are defined in different contexts using the following attributes:</source>
          <target state="translated">Спецификации типов (иногда называемые &lt;em&gt;спецификациями типов&lt;/em&gt; ) определяются в разных контекстах с использованием следующих атрибутов:</target>
        </trans-unit>
        <trans-unit id="c6f295ce9af290691ba77bd28066b72b6d97e560" translate="yes" xml:space="preserve">
          <source>Type variables with no restriction can also be defined using &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="translated">Переменные типа без ограничений также можно определить с помощью &lt;code&gt;var&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="9c292c75a9bfb2deb75a816df8b4fa93d8b86cdf" translate="yes" xml:space="preserve">
          <source>Types and specs</source>
          <target state="translated">Типы и спецификации</target>
        </trans-unit>
        <trans-unit id="cd76b0391fb1a7a64c931e4a4dc1d98639420e28" translate="yes" xml:space="preserve">
          <source>Types and their syntax</source>
          <target state="translated">Типы и их синтаксис</target>
        </trans-unit>
        <trans-unit id="0bc4703b28f4924a9c44bceee00bf1363064b5ea" translate="yes" xml:space="preserve">
          <source>Types can be defined for tuples with the &lt;code&gt;record/2&lt;/code&gt; macro (only available in typespecs). This macro will expand to a tuple as seen in the example below:</source>
          <target state="translated">Типы могут быть определены для кортежей с помощью макроса &lt;code&gt;record/2&lt;/code&gt; (доступно только в спецификациях типов). Этот макрос будет расширен до кортежа, как показано в примере ниже:</target>
        </trans-unit>
        <trans-unit id="aa2e6017cafdcec12ffadda705782bbfa3365007" translate="yes" xml:space="preserve">
          <source>Types can be parameterized by defining variables as parameters; these variables can then be used to define the type.</source>
          <target state="translated">Типы могут быть параметризованы путем определения переменных как параметров;эти переменные затем могут быть использованы для определения типа.</target>
        </trans-unit>
        <trans-unit id="9642fee222699c21f35d30c296f0220d194b3b26" translate="yes" xml:space="preserve">
          <source>Typespec attributes</source>
          <target state="translated">Атрибуты Typespec</target>
        </trans-unit>
        <trans-unit id="ec4586f03bdf53faaacd4a0a1f5bfd0f6c72e82a" translate="yes" xml:space="preserve">
          <source>Typespecs</source>
          <target state="translated">Typespecs</target>
        </trans-unit>
        <trans-unit id="12ee67883b50a8a9b8616d935b79570fd90fb391" translate="yes" xml:space="preserve">
          <source>Typespecs and behaviours</source>
          <target state="translated">Типеспекты и поведение</target>
        </trans-unit>
        <trans-unit id="426efe2f128e5103f26a5651730adbe39dfe3a7f" translate="yes" xml:space="preserve">
          <source>Typespecs are not only useful to developers as additional documentation. The Erlang tool &lt;a href=&quot;http://www.erlang.org/doc/man/dialyzer.html&quot;&gt;Dialyzer&lt;/a&gt;, for example, uses typespecs in order to perform static analysis of code. That&amp;rsquo;s why, in the &lt;code&gt;QuietCalculator&lt;/code&gt; example, we wrote a spec for the &lt;code&gt;make_quiet/1&lt;/code&gt; function even though it was defined as a private function.</source>
          <target state="translated">Типовые характеристики полезны не только для разработчиков в качестве дополнительной документации. Инструмент &lt;a href=&quot;http://www.erlang.org/doc/man/dialyzer.html&quot;&gt;Dialyzer&lt;/a&gt; на Erlang , например, использует спецификации типов для выполнения статического анализа кода. Вот почему в примере &lt;code&gt;QuietCalculator&lt;/code&gt; мы написали спецификацию для функции &lt;code&gt;make_quiet/1&lt;/code&gt; , хотя она была определена как частная функция.</target>
        </trans-unit>
        <trans-unit id="27a01a6204a37c38992dd52cc20fa3db2b61cbf1" translate="yes" xml:space="preserve">
          <source>Typical error reasons are the same as in &lt;a href=&quot;#open/2&quot;&gt;&lt;code&gt;open/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#read/1&quot;&gt;&lt;code&gt;read/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#write/3&quot;&gt;&lt;code&gt;write/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Типичные причины ошибок такие же, как при &lt;a href=&quot;#open/2&quot;&gt; &lt;code&gt;open/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#read/1&quot;&gt; &lt;code&gt;read/1&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#write/3&quot;&gt; &lt;code&gt;write/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="67c8d97f0dcec5fe713e0be3b64521ea6acf59de" translate="yes" xml:space="preserve">
          <source>Typical error reasons are:</source>
          <target state="translated">Типичными причинами ошибок являются:</target>
        </trans-unit>
        <trans-unit id="2f629170b36b9e9384cae62822a95fe4136c915d" translate="yes" xml:space="preserve">
          <source>Typical error reasons:</source>
          <target state="translated">Типичные причины ошибок:</target>
        </trans-unit>
        <trans-unit id="29820537aaefd464fe53b0df62deac28df35005d" translate="yes" xml:space="preserve">
          <source>Typically called after formatting when the data cannot be printed.</source>
          <target state="translated">Обычно вызывается после форматирования,когда данные не могут быть распечатаны.</target>
        </trans-unit>
        <trans-unit id="0018f0d1c5a28ac0ba1af21c25d258db67bae7ff" translate="yes" xml:space="preserve">
          <source>Typically developers do not use the &lt;code&gt;spawn&lt;/code&gt; functions, instead they use abstractions such as &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Agent.html&quot;&gt;&lt;code&gt;Agent&lt;/code&gt;&lt;/a&gt;, built on top of &lt;code&gt;spawn&lt;/code&gt;, that spawns processes with more conveniences in terms of introspection and debugging.</source>
          <target state="translated">Обычно разработчики не используют функции &lt;code&gt;spawn&lt;/code&gt; , вместо этого они используют абстракции, такие как &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://hexdocs.pm/elixir/Agent.html&quot;&gt; &lt;code&gt;Agent&lt;/code&gt; &lt;/a&gt; , построенные поверх &lt;code&gt;spawn&lt;/code&gt; , которые порождают процессы с большим удобством с точки зрения самоанализа и отладки.</target>
        </trans-unit>
        <trans-unit id="2ebdb0dbd819b614930942168eaeeb854d37cbf9" translate="yes" xml:space="preserve">
          <source>Typically developers do not use the &lt;code&gt;spawn&lt;/code&gt; functions, instead they use abstractions such as &lt;a href=&quot;task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;genserver&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;agent&quot;&gt;&lt;code&gt;Agent&lt;/code&gt;&lt;/a&gt;, built on top of &lt;code&gt;spawn&lt;/code&gt;, that spawns processes with more conveniences in terms of introspection and debugging.</source>
          <target state="translated">Обычно разработчики не используют функции &lt;code&gt;spawn&lt;/code&gt; , вместо этого они используют абстракции, такие как &lt;a href=&quot;task&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;genserver&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;agent&quot;&gt; &lt;code&gt;Agent&lt;/code&gt; &lt;/a&gt; , построенные поверх &lt;code&gt;spawn&lt;/code&gt; , которые порождают процессы с большим удобством с точки зрения самоанализа и отладки.</target>
        </trans-unit>
        <trans-unit id="a41048f60fc8036bd19784fff24807617c9ba6f2" translate="yes" xml:space="preserve">
          <source>Typically, stable releases are pushed to Hex. If you want to depend on an external dependency still in development, Mix is able to manage Git dependencies too:</source>
          <target state="translated">Обычно стабильные релизы подталкивают к Гексу.Если вы хотите зависеть от внешней зависимости,находящейся в разработке,Mix может управлять и Git-зависимостями:</target>
        </trans-unit>
        <trans-unit id="e81c0c3d0d9554aaaa890589c591cb2c6de83b83" translate="yes" xml:space="preserve">
          <source>Typically, this is used when a process started from a certain shell should have a group leader other than &lt;code&gt;:init&lt;/code&gt;.</source>
          <target state="translated">Обычно это используется, когда процесс, запускаемый из определенной оболочки, должен иметь лидера группы, кроме &lt;code&gt;:init&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19526e6dfc6064b512194499eae8afdcd81dca35" translate="yes" xml:space="preserve">
          <source>Typically, you use &lt;a href=&quot;#async_nolink/3&quot;&gt;&lt;code&gt;async_nolink/3&lt;/code&gt;&lt;/a&gt; when there is a reasonable expectation that the task may fail, and you don't want it to take down the caller. Let's see an example where a &lt;a href=&quot;genserver&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; is meant to run a single task and track its status:</source>
          <target state="translated">Как правило, вы используете &lt;a href=&quot;#async_nolink/3&quot;&gt; &lt;code&gt;async_nolink/3&lt;/code&gt; ,&lt;/a&gt; когда есть разумные основания полагать, что задача может завершиться неудачно, и вы не хотите, чтобы она отключила вызывающего. Давайте посмотрим на пример, в котором &lt;a href=&quot;genserver&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; предназначен для запуска одной задачи и отслеживания ее статуса:</target>
        </trans-unit>
        <trans-unit id="8798d630c8e10ea5c64e566bec0b0fe8e5e77e30" translate="yes" xml:space="preserve">
          <source>Typically, you use &lt;a href=&quot;#async_nolink/3&quot;&gt;&lt;code&gt;async_nolink/3&lt;/code&gt;&lt;/a&gt; when there is a reasonable expectation that the task may fail, and you don't want it to take down the caller. Let's see an example where a &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; is meant to run a single task and track its status:</source>
          <target state="translated">Обычно вы используете &lt;a href=&quot;#async_nolink/3&quot;&gt; &lt;code&gt;async_nolink/3&lt;/code&gt; ,&lt;/a&gt; когда есть разумные основания полагать, что задача может завершиться ошибкой, и вы не хотите, чтобы она отключила вызывающего. Давайте посмотрим на пример, в котором &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; предназначен для запуска одной задачи и отслеживания ее статуса:</target>
        </trans-unit>
        <trans-unit id="b2c7c0caa10a0cca5ea7d69e54018ae0c0389dd6" translate="yes" xml:space="preserve">
          <source>U</source>
          <target state="translated">U</target>
        </trans-unit>
        <trans-unit id="cb371c93c5aa0e62198efd303ae2c17474416d1a" translate="yes" xml:space="preserve">
          <source>URI</source>
          <target state="translated">URI</target>
        </trans-unit>
        <trans-unit id="09f0409f5ecd55093b52d29617566df8dfd0cc27" translate="yes" xml:space="preserve">
          <source>UTF-8 and Encodings</source>
          <target state="translated">UTF-8 и кодирование</target>
        </trans-unit>
        <trans-unit id="40d44fb77280648f021d454874b73243b9965e08" translate="yes" xml:space="preserve">
          <source>UTF-8 and Unicode</source>
          <target state="translated">UTF-8 и Юникод</target>
        </trans-unit>
        <trans-unit id="93fa3107e0f78c4c5bf63b64e4e03caae13e12dc" translate="yes" xml:space="preserve">
          <source>UTF-8 requires one byte to represent the characters &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;e&lt;/code&gt;, and &lt;code&gt;o&lt;/code&gt;, but two bytes to represent &lt;code&gt;ł&lt;/code&gt;. In Elixir, you can get a character&amp;rsquo;s code point by using &lt;code&gt;?&lt;/code&gt;:</source>
          <target state="translated">UTF-8 требует, чтобы один байт представлял символы &lt;code&gt;h&lt;/code&gt; , &lt;code&gt;e&lt;/code&gt; и &lt;code&gt;o&lt;/code&gt; , но два байта представляли &lt;code&gt;ł&lt;/code&gt; . В Elixir вы можете получить код персонажа, используя &lt;code&gt;?&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4ba0eecf4f2b37abbf01f86b85c444b51d79130b" translate="yes" xml:space="preserve">
          <source>Umbrella applications can also be used as a stepping stone for eventually extracting an application from your codebase. For example, imagine a web application that has to send &amp;ldquo;push notifications&amp;rdquo; to its users. The whole &amp;ldquo;push notifications system&amp;rdquo; can be developed as a separate application in the umbrella, with its own supervision tree and APIs. If you ever run into a situation where another project needs the push notifications system, the system can be moved to a private repository or a Hex package.</source>
          <target state="translated">Приложения Umbrella также можно использовать как ступеньку для извлечения приложения из вашей кодовой базы. Например, представьте себе веб-приложение, которое должно отправлять своим пользователям &amp;laquo;push-уведомления&amp;raquo;. Вся &amp;laquo;система push-уведомлений&amp;raquo; может быть разработана как отдельное приложение в составе зонтика, с собственным деревом наблюдения и API. Если вы когда-нибудь столкнетесь с ситуацией, когда другому проекту потребуется система push-уведомлений, систему можно переместить в частный репозиторий или в Hex-пакет.</target>
        </trans-unit>
        <trans-unit id="851ed712aa0571dbe2c6f112b44c8797ec7c4c5e" translate="yes" xml:space="preserve">
          <source>Umbrella projects</source>
          <target state="translated">зонтичные проекты</target>
        </trans-unit>
        <trans-unit id="43c968179421920425ac688f848988a9c56a1013" translate="yes" xml:space="preserve">
          <source>Umbrella projects are a convenience to help you organize and manage multiple applications. While it provides a degree of separation between applications, those applications are not fully decoupled, as they share the same configuration and the same dependencies.</source>
          <target state="translated">Зонтичные проекты-это удобство,которое поможет вам организовать и управлять несколькими приложениями.Хотя это обеспечивает определенную степень разделения между приложениями,эти приложения не полностью развязаны,так как они имеют одинаковую конфигурацию и одинаковые зависимости.</target>
        </trans-unit>
        <trans-unit id="b04e40d6c4b172a53c1b297ef8e44dbbe21358ea" translate="yes" xml:space="preserve">
          <source>Umbrellas</source>
          <target state="translated">Umbrellas</target>
        </trans-unit>
        <trans-unit id="7d6b777bb78f858357184c0cf5af750b3f2ffa24" translate="yes" xml:space="preserve">
          <source>Unary</source>
          <target state="translated">Unary</target>
        </trans-unit>
        <trans-unit id="de5d06c8499ec2b6ae1a8811f2fac4af788e75b6" translate="yes" xml:space="preserve">
          <source>UndefinedFunctionError</source>
          <target state="translated">UndefinedFunctionError</target>
        </trans-unit>
        <trans-unit id="305519a8e77b6e01d180181d201634eba9423ae4" translate="yes" xml:space="preserve">
          <source>UndefinedFunctionError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">UndefinedFunctionError &lt;small&gt;исключение&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="47bcfae4a535fdd5dc3c9474709313c0c05cda2a" translate="yes" xml:space="preserve">
          <source>Underline: none.</source>
          <target state="translated">Подчеркните:нет.</target>
        </trans-unit>
        <trans-unit id="74cc1e1026bd71e93c70958a6c844e8826bbbfcc" translate="yes" xml:space="preserve">
          <source>Underline: single.</source>
          <target state="translated">Подчеркните:холостяк.</target>
        </trans-unit>
        <trans-unit id="f97b844a47d0ddc9c28ad5334d4b5c8bebe7ba04" translate="yes" xml:space="preserve">
          <source>Underneath a struct is just a map with a &lt;code&gt;:__struct__&lt;/code&gt; key pointing to the &lt;code&gt;User&lt;/code&gt; module:</source>
          <target state="translated">Под структурой находится просто карта с ключом &lt;code&gt;:__struct__&lt;/code&gt; , указывающим на модуль &lt;code&gt;User&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8ecb7df30047a87c4fc859f515326bcb1df1fdc5" translate="yes" xml:space="preserve">
          <source>Underscore (&lt;code&gt;_foo&lt;/code&gt;)</source>
          <target state="translated">Подчеркивание ( &lt;code&gt;_foo&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="860a89de764183b070c833d2c56a715407fdf5ae" translate="yes" xml:space="preserve">
          <source>Underscore functions</source>
          <target state="translated">Функции подсветки</target>
        </trans-unit>
        <trans-unit id="07214c1f037134f45b6afd6fb6be34b85a19cbdd" translate="yes" xml:space="preserve">
          <source>Understanding Aliases</source>
          <target state="translated">Понимание псевдонимов</target>
        </trans-unit>
        <trans-unit id="cf49459d86609fbaea12c1c990c331d67fab00b7" translate="yes" xml:space="preserve">
          <source>Understanding applications</source>
          <target state="translated">Понимание приложений</target>
        </trans-unit>
        <trans-unit id="a5d78374ca4469419766b74347b324cc8a588c26" translate="yes" xml:space="preserve">
          <source>Understanding the printed graph</source>
          <target state="translated">Понимание печатного графика</target>
        </trans-unit>
        <trans-unit id="7e6e7909c64b19402a59c9e41bf6f2ead8be7854" translate="yes" xml:space="preserve">
          <source>Unescapes the given chars according to the map given.</source>
          <target state="translated">Снимает показанные диаграммы в соответствии с заданной картой.</target>
        </trans-unit>
        <trans-unit id="17a4b21d25e341e163b3fc9fec0b7c0beae4ac5a" translate="yes" xml:space="preserve">
          <source>Unescapes the given chars.</source>
          <target state="translated">Снимает с себя эти символы.</target>
        </trans-unit>
        <trans-unit id="4f4713c47fdabdbf578d4a71eec889931003b842" translate="yes" xml:space="preserve">
          <source>Unfortunately, similar to &lt;code&gt;IO.inspect/2&lt;/code&gt;, &lt;code&gt;IEx.pry/0&lt;/code&gt; also requires us to change the code we intend to debug. Luckily IEx also provides a &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#break!/2&quot;&gt;&lt;code&gt;break!/2&lt;/code&gt;&lt;/a&gt; function which allows you set and manage breakpoints on any Elixir code without modifying its source:</source>
          <target state="translated">К сожалению, как и &lt;code&gt;IO.inspect/2&lt;/code&gt; , &lt;code&gt;IEx.pry/0&lt;/code&gt; также требует от нас изменения кода, который мы собираемся отлаживать. К счастью, IEx также предоставляет функцию &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#break!/2&quot;&gt; &lt;code&gt;break!/2&lt;/code&gt; ,&lt;/a&gt; которая позволяет вам устанавливать и управлять точками останова в любом коде Elixir без изменения его источника:</target>
        </trans-unit>
        <trans-unit id="9ab0bd9a6126ee4b9d7538d5c6cba7aa587f31ed" translate="yes" xml:space="preserve">
          <source>Unicode</source>
          <target state="translated">Unicode</target>
        </trans-unit>
        <trans-unit id="c9219d4bebf3a43b3cb39fddf36fce444eec5523" translate="yes" xml:space="preserve">
          <source>Unicode Syntax</source>
          <target state="translated">синтаксис Юникода</target>
        </trans-unit>
        <trans-unit id="0b474ff440f8ab612fe1e1943a887fd958d5ed36" translate="yes" xml:space="preserve">
          <source>Unicode and Code Points</source>
          <target state="translated">Юникод и кодовые точки</target>
        </trans-unit>
        <trans-unit id="9230bbe0897bd3834d6a401ee2097bdf85ecad8d" translate="yes" xml:space="preserve">
          <source>Unicode atoms in Elixir follow the identifier rule above with the following modifications:</source>
          <target state="translated">Атомы Юникода в Elixir следуют правилу идентификатора,приведенному выше,со следующими изменениями:</target>
        </trans-unit>
        <trans-unit id="7372ec76fd7737f65218f4920228b83bfa1d58d4" translate="yes" xml:space="preserve">
          <source>Unicode organizes all of the characters in its repertoire into code charts, and each character is given a unique numerical index. This numerical index is known as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Code_point&quot;&gt;Code Point&lt;/a&gt;.</source>
          <target state="translated">Unicode организует все символы в своем репертуаре в кодовые таблицы, и каждому символу присваивается уникальный числовой индекс. Этот числовой индекс известен как &lt;a href=&quot;https://en.wikipedia.org/wiki/Code_point&quot;&gt;кодовая точка&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c1cd0bc55280570ee38ec7b425e9a53867a918b8" translate="yes" xml:space="preserve">
          <source>UnicodeConversionError</source>
          <target state="translated">UnicodeConversionError</target>
        </trans-unit>
        <trans-unit id="17431ce3c7303d531227e8a58c83d5667bb2fc09" translate="yes" xml:space="preserve">
          <source>UnicodeConversionError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">UnicodeConversionError &lt;small&gt;исключение&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="39e7100b363b0c844d4355a58d8d2bcf3d045da9" translate="yes" xml:space="preserve">
          <source>Uninstalls local archives.</source>
          <target state="translated">Уничтожает местные архивы.</target>
        </trans-unit>
        <trans-unit id="987e61e41c4febfea2dd5909d903f8a6923f84be" translate="yes" xml:space="preserve">
          <source>Uninstalls local escripts</source>
          <target state="translated">отменяет местные эскрипты</target>
        </trans-unit>
        <trans-unit id="6c7917e8b4eb34e9ee648bbddd83c2ea876861aa" translate="yes" xml:space="preserve">
          <source>Uninstalls local escripts:</source>
          <target state="translated">Уничтожает местные эскрипты:</target>
        </trans-unit>
        <trans-unit id="d24756b8871b9d0b4227e2aeadf94c161941dedb" translate="yes" xml:space="preserve">
          <source>Unit and Size</source>
          <target state="translated">Единица измерения и размер</target>
        </trans-unit>
        <trans-unit id="7476fffdc753c76439401e20c5fa467d3860aa0e" translate="yes" xml:space="preserve">
          <source>Unit testing framework for Elixir.</source>
          <target state="translated">Рамки тестирования для Эликсира.</target>
        </trans-unit>
        <trans-unit id="cecc0d8500754b34f5bd7f11dfabb25c3a770aaf" translate="yes" xml:space="preserve">
          <source>Unix</source>
          <target state="translated">Unix</target>
        </trans-unit>
        <trans-unit id="cfbf337783a51f862d0cc59c306e1cd8f3532bc3" translate="yes" xml:space="preserve">
          <source>Unix times are always in UTC and therefore the DateTime will be returned in UTC.</source>
          <target state="translated">Unix-время всегда находится в UTC,поэтому DateTime будет возвращено по UTC.</target>
        </trans-unit>
        <trans-unit id="ada7bf7ca1b8ad5c554b83d4ab0831e359db85dc" translate="yes" xml:space="preserve">
          <source>Unix-like operating systems</source>
          <target state="translated">Unix-подобные операционные системы</target>
        </trans-unit>
        <trans-unit id="37ac014f65a6115890eb6cc91e8f2865ac295f23" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#expand/2&quot;&gt;&lt;code&gt;expand/2&lt;/code&gt;&lt;/a&gt;, no attempt is made to resolve &lt;code&gt;..&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;~&lt;/code&gt;.</source>
          <target state="translated">В отличие от &lt;a href=&quot;#expand/2&quot;&gt; &lt;code&gt;expand/2&lt;/code&gt; &lt;/a&gt; , попытки разрешить &lt;code&gt;..&lt;/code&gt; , &lt;code&gt;.&lt;/code&gt; или &lt;code&gt;~&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e18509c97a5b05619653ea5f9061749ced83e99e" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;assert_received&lt;/code&gt;, it has a default &lt;code&gt;timeout&lt;/code&gt; of 100 milliseconds.</source>
          <target state="translated">В отличие от &lt;code&gt;assert_received&lt;/code&gt; , &lt;code&gt;timeout&lt;/code&gt; по умолчанию составляет 100 миллисекунд.</target>
        </trans-unit>
        <trans-unit id="90388e527e157889a4f6398ea86608eb36a3d8e9" translate="yes" xml:space="preserve">
          <source>Unlike Erlang, such attributes are not stored in the module by default since it is common in Elixir to use custom attributes to store temporary data that will be available at compile-time. Custom attributes may be configured to behave closer to Erlang by using &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html#register_attribute/3&quot;&gt;&lt;code&gt;Module.register_attribute/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В отличие от Erlang, такие атрибуты по умолчанию не хранятся в модуле, поскольку в Elixir принято использовать настраиваемые атрибуты для хранения временных данных, которые будут доступны во время компиляции. Настраиваемые атрибуты можно настроить так, чтобы они &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html#register_attribute/3&quot;&gt; &lt;code&gt;Module.register_attribute/3&lt;/code&gt; &lt;/a&gt; ближе к Erlang, используя Module.register_attribute / 3 .</target>
        </trans-unit>
        <trans-unit id="2436badc9eff92032ec9ac619271277eb100f7c7" translate="yes" xml:space="preserve">
          <source>Unlike Erlang, such attributes are not stored in the module by default since it is common in Elixir to use custom attributes to store temporary data that will be available at compile-time. Custom attributes may be configured to behave closer to Erlang by using &lt;a href=&quot;module#register_attribute/3&quot;&gt;&lt;code&gt;Module.register_attribute/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В отличие от Erlang, такие атрибуты не сохраняются в модуле по умолчанию, поскольку в Elixir принято использовать настраиваемые атрибуты для хранения временных данных, которые будут доступны во время компиляции. Пользовательские атрибуты могут быть настроены так, чтобы вести себя ближе к Erlang, используя &lt;a href=&quot;module#register_attribute/3&quot;&gt; &lt;code&gt;Module.register_attribute/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b56b7c857aa7ffa6e7b36170f0491a230a7cf9f0" translate="yes" xml:space="preserve">
          <source>Unlike other hooks, &lt;code&gt;@on_definition&lt;/code&gt; will only invoke functions and never macros. This is to avoid &lt;code&gt;@on_definition&lt;/code&gt; callbacks from redefining functions that have just been defined in favor of more explicit approaches.</source>
          <target state="translated">В отличие от других хуков, &lt;code&gt;@on_definition&lt;/code&gt; будет вызывать только функции, а не макросы. Это &lt;code&gt;@on_definition&lt;/code&gt; для того, чтобы обратные вызовы @on_definition не переопределяли функции, которые только что были определены, в пользу более явных подходов.</target>
        </trans-unit>
        <trans-unit id="94507a67a9f296aef298df58dcc28d14f54c548d" translate="yes" xml:space="preserve">
          <source>Unlike pattern matching via &lt;code&gt;=&lt;/code&gt;, if the sizes of the left and right lists don't match, destructuring simply stops instead of raising an error.</source>
          <target state="translated">В отличие от сопоставления с образцом через &lt;code&gt;=&lt;/code&gt; , если размеры левого и правого списков не совпадают, деструктуризация просто останавливается, вместо того, чтобы вызывать ошибку.</target>
        </trans-unit>
        <trans-unit id="d9890160c4982970542ec14738f7c0e637cd08c2" translate="yes" xml:space="preserve">
          <source>Unlinking the task process started with &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt;. If you unlink the processes and the task does not belong to any supervisor, you may leave dangling tasks in case the parent dies.</source>
          <target state="translated">Отключение процесса задачи, запущенного с помощью &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt; . Если вы отключите процессы и задача не принадлежит какому-либо супервизору, вы можете оставить зависшие задачи на случай, если родитель умрет.</target>
        </trans-unit>
        <trans-unit id="11bf0305dcee4e7f1f93ac8f6d2c882005c71769" translate="yes" xml:space="preserve">
          <source>Unlinks and shuts down the task, and then checks for a reply.</source>
          <target state="translated">Разъединяет и закрывает задачу,а затем проверяет ответ.</target>
        </trans-unit>
        <trans-unit id="e12be5ddb337ed9c6e7cda41d5621c3350bb29f0" translate="yes" xml:space="preserve">
          <source>Unloads the given &lt;code&gt;app&lt;/code&gt;.</source>
          <target state="translated">Выгружает данное &lt;code&gt;app&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91e4a94ba2bbaf79b224a6d7c13a57d58235dccd" translate="yes" xml:space="preserve">
          <source>Unlocks the given dependencies.</source>
          <target state="translated">Разблокирует данные зависимости.</target>
        </trans-unit>
        <trans-unit id="4a00f27d2826c92443fcf4fb80f0a03b5f251cb2" translate="yes" xml:space="preserve">
          <source>Unquoted atoms start with a colon (&lt;code&gt;:&lt;/code&gt;) which must be immediately followed by an underscore or a Unicode letter. The atom may continue using a sequence of Unicode letters, numbers, underscores, and &lt;code&gt;@&lt;/code&gt;. Atoms may end in &lt;code&gt;!&lt;/code&gt; or &lt;code&gt;?&lt;/code&gt;. See &lt;a href=&quot;unicode-syntax&quot;&gt;Unicode Syntax&lt;/a&gt; for a formal specification. Valid unquoted atoms are: &lt;code&gt;:ok&lt;/code&gt;, &lt;code&gt;:ISO8601&lt;/code&gt;, and &lt;code&gt;:integer?&lt;/code&gt;.</source>
          <target state="translated">Некотируемые атомы начинают с двоеточием ( &lt;code&gt;:&lt;/code&gt; ) , который должен быть немедленно сопровождаемым подчеркиванием или буквами Unicode. Атом может продолжать использовать последовательность букв Unicode, цифр, знаков подчеркивания и &lt;code&gt;@&lt;/code&gt; . Атомы могут заканчиваться &lt;code&gt;!&lt;/code&gt; или &lt;code&gt;?&lt;/code&gt; , См. Формальную спецификацию в &lt;a href=&quot;unicode-syntax&quot;&gt;синтаксисе Unicode&lt;/a&gt; . Допустимые котируемые атомы: &lt;code&gt;:ok&lt;/code&gt; , &lt;code&gt;:ISO8601&lt;/code&gt; , и &lt;code&gt;:integer?&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="9dac4c6b4443202cc8583016a137c1afc9253dd0" translate="yes" xml:space="preserve">
          <source>Unquotes the given expression inside a quoted expression.</source>
          <target state="translated">Разводит данное выражение в кавычки внутри цитируемого выражения.</target>
        </trans-unit>
        <trans-unit id="51a3755b8963981e97be12c3f11d259db2190b9a" translate="yes" xml:space="preserve">
          <source>Unquotes the given list expanding its arguments.</source>
          <target state="translated">Снимает кавычки с данного списка,расширяя его аргументы.</target>
        </trans-unit>
        <trans-unit id="08053b86ce7b78d018827349dcd3d261a98511fd" translate="yes" xml:space="preserve">
          <source>Unquoting</source>
          <target state="translated">Unquoting</target>
        </trans-unit>
        <trans-unit id="3494d6cc701ad4351f6f7781151b09d2bb134df7" translate="yes" xml:space="preserve">
          <source>Unquoting is very useful when working with macros. When writing macros, developers are able to receive code chunks and inject them inside other code chunks, which can be used to transform code or write code that generates code during compilation.</source>
          <target state="translated">Удаление кавычек очень полезно при работе с макросами.При написании макросов разработчики могут получать куски кода и впрыскивать их в другие куски кода,которые могут быть использованы для преобразования кода или написания кода,который генерирует код в процессе компиляции.</target>
        </trans-unit>
        <trans-unit id="70957cdc250ef56f1d10dffbca7af3e59a0b3d13" translate="yes" xml:space="preserve">
          <source>Unregister entries for a given key matching a pattern.</source>
          <target state="translated">Отмените регистрацию записей для заданного ключа,совпадающего с шаблоном.</target>
        </trans-unit>
        <trans-unit id="e900939218e97f5edc5de0f78b18c10f6778936f" translate="yes" xml:space="preserve">
          <source>Unregisters all entries for the given &lt;code&gt;key&lt;/code&gt; associated to the current process in &lt;code&gt;registry&lt;/code&gt;.</source>
          <target state="translated">Отменяет регистрацию всех записей для данного &lt;code&gt;key&lt;/code&gt; связанных с текущим процессом в &lt;code&gt;registry&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8766d37827e5742cd1fbee4aed47607e97dcf45" translate="yes" xml:space="preserve">
          <source>Unregisters entries for keys matching a pattern associated to the current process in &lt;code&gt;registry&lt;/code&gt;.</source>
          <target state="translated">Отменяет регистрацию записей для ключей, соответствующих шаблону, связанному с текущим процессом в &lt;code&gt;registry&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="872098875ed11d68f92691129750cd5f8910e31e" translate="yes" xml:space="preserve">
          <source>Updates &lt;code&gt;key&lt;/code&gt; with the given function.</source>
          <target state="translated">Обновляет &lt;code&gt;key&lt;/code&gt; заданной функцией.</target>
        </trans-unit>
        <trans-unit id="bd67c840db661b5ff35c7988f0c313e081b6c4a7" translate="yes" xml:space="preserve">
          <source>Updates a key in a nested structure.</source>
          <target state="translated">Обновляет ключ во вложенной структуре.</target>
        </trans-unit>
        <trans-unit id="913040a7783b16d3a66109d11466e1f3715b2f23" translate="yes" xml:space="preserve">
          <source>Updates a nested structure via the given &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">Обновляет вложенную структуру по заданному &lt;code&gt;path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6ff992d51a35ca8eeaea3b46d7a9f9c7a1d02bf" translate="yes" xml:space="preserve">
          <source>Updates modification time (mtime) and access time (atime) of the given file.</source>
          <target state="translated">Обновляет время модификации (mtime)и время доступа (atime)к данному файлу.</target>
        </trans-unit>
        <trans-unit id="97ba8cd55c834ecfd3ee8f8cbce9327196d85da6" translate="yes" xml:space="preserve">
          <source>Updates the &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;keywords&lt;/code&gt; with the given function.</source>
          <target state="translated">Обновляет &lt;code&gt;key&lt;/code&gt; в &lt;code&gt;keywords&lt;/code&gt; заданной функцией.</target>
        </trans-unit>
        <trans-unit id="b837a72c944278925f970add9604780f7fe0b85f" translate="yes" xml:space="preserve">
          <source>Updates the &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;map&lt;/code&gt; with the given function.</source>
          <target state="translated">Обновляет &lt;code&gt;key&lt;/code&gt; на &lt;code&gt;map&lt;/code&gt; заданной функцией.</target>
        </trans-unit>
        <trans-unit id="37bc2bc502a7c11dcf205d8472d9e975015a6ad3" translate="yes" xml:space="preserve">
          <source>Updates the &lt;code&gt;key&lt;/code&gt; with the given function.</source>
          <target state="translated">Обновляет &lt;code&gt;key&lt;/code&gt; заданной функцией.</target>
        </trans-unit>
        <trans-unit id="40277704761ae2f8a4bc8d33a1fd26a3d503725b" translate="yes" xml:space="preserve">
          <source>Updates the agent state via the given anonymous function.</source>
          <target state="translated">Обновляет состояние агента с помощью данной анонимной функции.</target>
        </trans-unit>
        <trans-unit id="f8a3623b94bb3839740129bc6596f649a9a9ecf0" translate="yes" xml:space="preserve">
          <source>Updates the agent state via the given function.</source>
          <target state="translated">Обновление состояния агента с помощью данной функции.</target>
        </trans-unit>
        <trans-unit id="9f675d5eaf4774279a670e6224dcc645e0067b54" translate="yes" xml:space="preserve">
          <source>Updates the given dependencies.</source>
          <target state="translated">Обновляет заданные зависимости.</target>
        </trans-unit>
        <trans-unit id="416682303e7f5a28e1fe42385084449506b18f32" translate="yes" xml:space="preserve">
          <source>Updates the value for &lt;code&gt;key&lt;/code&gt; for the current process in the unique &lt;code&gt;registry&lt;/code&gt;.</source>
          <target state="translated">Обновляет значение &lt;code&gt;key&lt;/code&gt; для текущего процесса в уникальном &lt;code&gt;registry&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c9bcfae2fb3ebecd029c8eccc3ce697839499a2" translate="yes" xml:space="preserve">
          <source>Upgrading a dependency often requires the projects it depends on to upgrade too. If you would rather update a single dependency and not touch its children, you can explicitly unlock the single dependency and run &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Deps.Get.html&quot;&gt;&lt;code&gt;mix deps.get&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Для обновления зависимости часто требуются и проекты, от которых она зависит. Если вы предпочитаете обновлять отдельную зависимость и не трогать ее дочерние &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Deps.Get.html&quot;&gt; &lt;code&gt;mix deps.get&lt;/code&gt; &lt;/a&gt; , вы можете явно разблокировать эту зависимость и запустить mix deps.get :</target>
        </trans-unit>
        <trans-unit id="e3b2c87fbdfa81069562e3801f3b834f583f3068" translate="yes" xml:space="preserve">
          <source>Usage would be:</source>
          <target state="translated">Это было бы полезно:</target>
        </trans-unit>
        <trans-unit id="ad0ecf3efc2fafd77bbedf42c03404f90e27c42f" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#defines?/3&quot;&gt;&lt;code&gt;defines?/3&lt;/code&gt;&lt;/a&gt; to assert for a specific type.</source>
          <target state="translated">Используйте &lt;a href=&quot;#defines?/3&quot;&gt; &lt;code&gt;defines?/3&lt;/code&gt; &lt;/a&gt; для утверждения для определенного типа.</target>
        </trans-unit>
        <trans-unit id="787801e07ca737f4cd69bf93e70004cb3e751db3" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#query_decoder/1&quot;&gt;&lt;code&gt;query_decoder/1&lt;/code&gt;&lt;/a&gt; if you want to iterate over each value manually.</source>
          <target state="translated">Используйте &lt;a href=&quot;#query_decoder/1&quot;&gt; &lt;code&gt;query_decoder/1&lt;/code&gt; ,&lt;/a&gt; если вы хотите перебирать каждое значение вручную.</target>
        </trans-unit>
        <trans-unit id="3797a8276a8bc54fb5a97169a1b9a858a6ddd368" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#write/2&quot;&gt;&lt;code&gt;write/2&lt;/code&gt;&lt;/a&gt; for devices with encoding.</source>
          <target state="translated">Используйте &lt;a href=&quot;#write/2&quot;&gt; &lt;code&gt;write/2&lt;/code&gt; &lt;/a&gt; для устройств с кодировкой.</target>
        </trans-unit>
        <trans-unit id="1b36f40ce27bbfefdab4f321df212af5d062ba4c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;enum#map/2&quot;&gt;&lt;code&gt;Enum.map/2&lt;/code&gt;&lt;/a&gt; to traverse over the arguments (v1.0)</source>
          <target state="translated">Используйте &lt;a href=&quot;enum#map/2&quot;&gt; &lt;code&gt;Enum.map/2&lt;/code&gt; &lt;/a&gt; для обхода аргументов (v1.0)</target>
        </trans-unit>
        <trans-unit id="e5cf1dfe97340fea8a70dd96826ef4351d80ad46" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://www.erlang.org/doc/man/binary.html#replace-4&quot;&gt;&lt;code&gt;:binary.replace/4&lt;/code&gt;&lt;/a&gt; (v1.0)</source>
          <target state="translated">Используйте &lt;a href=&quot;http://www.erlang.org/doc/man/binary.html#replace-4&quot;&gt; &lt;code&gt;:binary.replace/4&lt;/code&gt; &lt;/a&gt; (v1.0)</target>
        </trans-unit>
        <trans-unit id="b10d005a7cda664f5d2f9f25b76adbe1cd127651" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html#map/2&quot;&gt;&lt;code&gt;Enum.map/2&lt;/code&gt;&lt;/a&gt; to traverse over the arguments (v1.0)</source>
          <target state="translated">Используйте &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html#map/2&quot;&gt; &lt;code&gt;Enum.map/2&lt;/code&gt; &lt;/a&gt; для обхода аргументов (v1.0)</target>
        </trans-unit>
        <trans-unit id="14cd7437712581c1861b1448cca82e849c0c602e" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#def/2&quot;&gt;public functions&lt;/a&gt; (v1.0)</source>
          <target state="translated">Использовать &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#def/2&quot;&gt;публичные функции&lt;/a&gt; (v1.0)</target>
        </trans-unit>
        <trans-unit id="5b50f96a6422a56c25eb2e39a749132fd99302b1" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://hexdocs.pm/elixir/String.html#pad_leading/3&quot;&gt;&lt;code&gt;String.pad_leading/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/String.html#pad_trailing/3&quot;&gt;&lt;code&gt;String.pad_trailing/3&lt;/code&gt;&lt;/a&gt; with a binary padding (v1.3)</source>
          <target state="translated">Используйте &lt;a href=&quot;https://hexdocs.pm/elixir/String.html#pad_leading/3&quot;&gt; &lt;code&gt;String.pad_leading/3&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://hexdocs.pm/elixir/String.html#pad_trailing/3&quot;&gt; &lt;code&gt;String.pad_trailing/3&lt;/code&gt; &lt;/a&gt; с двоичным заполнением (v1.3)</target>
        </trans-unit>
        <trans-unit id="12d593b29c9401cb9ed1f77973372f98c62abba4" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://hexdocs.pm/elixir/String.html#trim_leading/2&quot;&gt;&lt;code&gt;String.trim_leading/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/String.html#trim_trailing/2&quot;&gt;&lt;code&gt;String.trim_trailing/2&lt;/code&gt;&lt;/a&gt; with a binary as second argument (v1.3)</source>
          <target state="translated">Используйте &lt;a href=&quot;https://hexdocs.pm/elixir/String.html#trim_leading/2&quot;&gt; &lt;code&gt;String.trim_leading/2&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://hexdocs.pm/elixir/String.html#trim_trailing/2&quot;&gt; &lt;code&gt;String.trim_trailing/2&lt;/code&gt; &lt;/a&gt; с двоичным кодом в качестве второго аргумента (v1.3)</target>
        </trans-unit>
        <trans-unit id="b4a9dd9a756931a4a385ac5c2dd7ee781d1b07f9" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;string#pad_leading/3&quot;&gt;&lt;code&gt;String.pad_leading/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;string#pad_trailing/3&quot;&gt;&lt;code&gt;String.pad_trailing/3&lt;/code&gt;&lt;/a&gt; with a binary padding (v1.3)</source>
          <target state="translated">Используйте &lt;a href=&quot;string#pad_leading/3&quot;&gt; &lt;code&gt;String.pad_leading/3&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;string#pad_trailing/3&quot;&gt; &lt;code&gt;String.pad_trailing/3&lt;/code&gt; &lt;/a&gt; с двоичным заполнением (v1.3)</target>
        </trans-unit>
        <trans-unit id="20040427069949a8d4027129b310722c2c30b8ff" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;string#trim_leading/2&quot;&gt;&lt;code&gt;String.trim_leading/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;string#trim_trailing/2&quot;&gt;&lt;code&gt;String.trim_trailing/2&lt;/code&gt;&lt;/a&gt; with a binary as second argument (v1.3)</source>
          <target state="translated">Используйте &lt;a href=&quot;string#trim_leading/2&quot;&gt; &lt;code&gt;String.trim_leading/2&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;string#trim_trailing/2&quot;&gt; &lt;code&gt;String.trim_trailing/2&lt;/code&gt; &lt;/a&gt; с двоичным кодом в качестве второго аргумента (v1.3)</target>
        </trans-unit>
        <trans-unit id="2f9b8c50f1c8c820e6db1607e6e6745fc6ae1b90" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&amp;lt;%&lt;/code&gt; (&lt;code&gt;&amp;lt;%=&lt;/code&gt; is allowed only in start expressions) (v1.0)</source>
          <target state="translated">Используйте &lt;code&gt;&amp;lt;%&lt;/code&gt; ( &lt;code&gt;&amp;lt;%=&lt;/code&gt; допускается только в начальных выражениях) (v1.0)</target>
        </trans-unit>
        <trans-unit id="c58ca1ae3a377183620422c237e986e4c5bfdee5" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&amp;lt;%&lt;/code&gt; (&lt;code&gt;&amp;lt;%=&lt;/code&gt; is allowed only on start expressions) (v1.0)</source>
          <target state="translated">Используйте &lt;code&gt;&amp;lt;%&lt;/code&gt; ( &lt;code&gt;&amp;lt;%=&lt;/code&gt; допускается только в начальных выражениях) (v1.0)</target>
        </trans-unit>
        <trans-unit id="ee94c06bb86bdaca513c3a62f49490454be42e9c" translate="yes" xml:space="preserve">
          <source>Use a map (v1.0)</source>
          <target state="translated">Используйте карту (v1.0)</target>
        </trans-unit>
        <trans-unit id="4d74b43fbed5164c7d0cf7a52539703c48335b7c" translate="yes" xml:space="preserve">
          <source>Use an expression or explicitly return &lt;code&gt;nil&lt;/code&gt; (v1.0)</source>
          <target state="translated">Используйте выражение или явно верните &lt;code&gt;nil&lt;/code&gt; (v1.0)</target>
        </trans-unit>
        <trans-unit id="695acd02888c70a7bd24e240078a062e8cefd82c" translate="yes" xml:space="preserve">
          <source>Use cases for IO data</source>
          <target state="translated">Случаи использования данных ввода-вывода</target>
        </trans-unit>
        <trans-unit id="17ecf402c8b50a984590bda594e338082a23c4c0" translate="yes" xml:space="preserve">
          <source>Use direct message matching (v1.0)</source>
          <target state="translated">Использовать прямое сопоставление сообщений (v1.0).</target>
        </trans-unit>
        <trans-unit id="7d7bc258dd57ccdb77c4d94fa239755b4e4dbe79" translate="yes" xml:space="preserve">
          <source>Use parentheses (v1.0)</source>
          <target state="translated">Используйте скобки (v1.0).</target>
        </trans-unit>
        <trans-unit id="d1a132274b1eb6b7319062ced70e808cf7c404ca" translate="yes" xml:space="preserve">
          <source>Use processes only to model runtime properties, never for code organization. And even when you think something could be done in parallel with processes, often it is best to let the callers of your library decide how to parallelize, rather than impose a certain execution flow in users of your code.</source>
          <target state="translated">Используйте процессы только для моделирования свойств времени исполнения,никогда для организации кода.И даже если вы думаете,что что-то можно делать параллельно с процессами,зачастую лучше всего дать возможность звонящим в вашу библиотеку решать,как распараллелить,а не навязывать пользователям вашего кода определенный поток выполнения.</target>
        </trans-unit>
        <trans-unit id="72ac53e8279e1fbc4a4e474748dc78b85a97986e" translate="yes" xml:space="preserve">
          <source>Use public functions (v1.0)</source>
          <target state="translated">Использовать публичные функции (v1.0)</target>
        </trans-unit>
        <trans-unit id="e7e9e97b63195c13fec074e748d6a1b624c2147f" translate="yes" xml:space="preserve">
          <source>Use single-letter aliases (v1.0)</source>
          <target state="translated">Используйте однобуквенные псевдонимы (v1.0).</target>
        </trans-unit>
        <trans-unit id="5d5567686d3e6ae0d4956f84da54e7d67f04b834" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;:since&lt;/code&gt; key in the documentation metadata to annotate whenever new functions or modules are added to your API.</source>
          <target state="translated">Используйте ключ &lt;code&gt;:since&lt;/code&gt; Since в метаданных документации, чтобы комментировать каждый раз, когда в ваш API добавляются новые функции или модули.</target>
        </trans-unit>
        <trans-unit id="47f85339a5f0f7ba3fc69739fe71460337f1ced4" translate="yes" xml:space="preserve">
          <source>Use the pin operator &lt;code&gt;^&lt;/code&gt; when you want to pattern match against a variable&amp;rsquo;s &lt;em&gt;existing value&lt;/em&gt; rather than rebinding the variable.</source>
          <target state="translated">Используйте оператор булавки &lt;code&gt;^&lt;/code&gt; , если вы хотите сопоставить шаблон с &lt;em&gt;существующим значением&lt;/em&gt; переменной, а не повторно связывать переменную.</target>
        </trans-unit>
        <trans-unit id="2fb9026bf683fe97be9805f8d4ee8da3a7030195" translate="yes" xml:space="preserve">
          <source>Use the pin operator &lt;code&gt;^&lt;/code&gt; when you want to pattern match against an existing variable&amp;rsquo;s value rather than rebinding the variable:</source>
          <target state="translated">Используйте оператор булавки &lt;code&gt;^&lt;/code&gt; , если вы хотите сопоставить шаблон с существующим значением переменной, а не повторно связывать переменную:</target>
        </trans-unit>
        <trans-unit id="0b63a0f2b65fabcf35daab1c96a88a9c4182865a" translate="yes" xml:space="preserve">
          <source>Use the singular form, such as: &lt;code&gt;:second&lt;/code&gt;, &lt;code&gt;:millisecond&lt;/code&gt;, and so on (v1.4)</source>
          <target state="translated">Используйте форму единственного числа, например: &lt;code&gt;:second&lt;/code&gt; , &lt;code&gt;:millisecond&lt;/code&gt; , и так далее (v1.4)</target>
        </trans-unit>
        <trans-unit id="d62760f6801ea132b87f52fc490f15e5c30ebb87" translate="yes" xml:space="preserve">
          <source>Use this only for debugging information.</source>
          <target state="translated">Используйте это только для отладки информации.</target>
        </trans-unit>
        <trans-unit id="654833a705a392b91db5fb486d867850f6f6d4da" translate="yes" xml:space="preserve">
          <source>Used by helpers and it has a default maximum cap of 80 chars.</source>
          <target state="translated">Используется помощниками и по умолчанию имеет максимальный колпачок 80 символов.</target>
        </trans-unit>
        <trans-unit id="6f19f4b56cd4eb0479f604b05000a49967ca0779" translate="yes" xml:space="preserve">
          <source>Used by types and bitstrings to specify types.</source>
          <target state="translated">Используется по типам и битовым строкам для указания типов.</target>
        </trans-unit>
        <trans-unit id="27f134f77aed07ba771f04e70c26fcde14c293be" translate="yes" xml:space="preserve">
          <source>Used to combine matching clauses.</source>
          <target state="translated">Используется для комбинирования подходящих оговорок.</target>
        </trans-unit>
        <trans-unit id="d3e14268db3616058b87c0710752c8757db571c3" translate="yes" xml:space="preserve">
          <source>Useful for adding side effects (like printing) to a stream.</source>
          <target state="translated">Полезно для добавления побочных эффектов (например,печати)в поток.</target>
        </trans-unit>
        <trans-unit id="b4a25e416b54812cf786abc2853d57e8a5a5d837" translate="yes" xml:space="preserve">
          <source>Useful in umbrella applications to execute a command on each child app:</source>
          <target state="translated">Полезно в зонтичных приложениях для выполнения команды на каждом дочернем приложении:</target>
        </trans-unit>
        <trans-unit id="ccd0085c486cb23718479523b31aac167b10d224" translate="yes" xml:space="preserve">
          <source>Useful when dependencies need to be reloaded due to change of global state.</source>
          <target state="translated">Полезно,когда необходимо перезагрузить зависимости в связи с изменением глобального состояния.</target>
        </trans-unit>
        <trans-unit id="52dd4a7101ad34727c991e5c7418caedb4c5ab1e" translate="yes" xml:space="preserve">
          <source>User home directory, exception on error.</source>
          <target state="translated">Домашний каталог пользователя,исключение по ошибке.</target>
        </trans-unit>
        <trans-unit id="3b425e136b2a26688fb41476a54559087648780b" translate="yes" xml:space="preserve">
          <source>User home directory.</source>
          <target state="translated">Домашний каталог пользователей.</target>
        </trans-unit>
        <trans-unit id="c0ef205df825ba4213dcb43cc225636454550c49" translate="yes" xml:space="preserve">
          <source>User-defined types</source>
          <target state="translated">Определяемые пользователем типы</target>
        </trans-unit>
        <trans-unit id="9718cbc91389f0a24d01843793c6b8f5bef22b1f" translate="yes" xml:space="preserve">
          <source>Users can read the documentation for public Mix tasks by running &lt;code&gt;mix help my_task&lt;/code&gt;. The documentation that will be shown is the &lt;code&gt;@moduledoc&lt;/code&gt; of the task's module.</source>
          <target state="translated">Пользователи могут прочитать документацию по общедоступным задачам Mix, запустив &lt;code&gt;mix help my_task&lt;/code&gt; . Документация, которая будет показана, - это &lt;code&gt;@moduledoc&lt;/code&gt; модуля задачи.</target>
        </trans-unit>
        <trans-unit id="30bca3fe935d22a9fb82d1874f535be3bcc5d54b" translate="yes" xml:space="preserve">
          <source>Uses the &lt;a href=&quot;access&quot;&gt;&lt;code&gt;Access&lt;/code&gt;&lt;/a&gt; module to traverse the structures according to the given &lt;code&gt;keys&lt;/code&gt;, unless the &lt;code&gt;key&lt;/code&gt; is a function, which is detailed in a later section.</source>
          <target state="translated">Использует модуль &lt;a href=&quot;access&quot;&gt; &lt;code&gt;Access&lt;/code&gt; &lt;/a&gt; для перемещения по структурам в соответствии с заданными &lt;code&gt;keys&lt;/code&gt; , если &lt;code&gt;key&lt;/code&gt; является функцией, которая подробно описана в следующем разделе.</target>
        </trans-unit>
        <trans-unit id="7504c890d2e677e3b9b91ddd28b0a2c13353b513" translate="yes" xml:space="preserve">
          <source>Uses the &lt;a href=&quot;access&quot;&gt;&lt;code&gt;Access&lt;/code&gt;&lt;/a&gt; module to traverse the structures according to the given &lt;code&gt;keys&lt;/code&gt;, unless the &lt;code&gt;key&lt;/code&gt; is a function. If the key is a function, it will be invoked as specified in &lt;a href=&quot;#get_and_update_in/3&quot;&gt;&lt;code&gt;get_and_update_in/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Использует модуль &lt;a href=&quot;access&quot;&gt; &lt;code&gt;Access&lt;/code&gt; &lt;/a&gt; для обхода структур в соответствии с заданными &lt;code&gt;keys&lt;/code&gt; , если &lt;code&gt;key&lt;/code&gt; является функцией. Если ключ является функцией, она будет вызываться, как указано в &lt;a href=&quot;#get_and_update_in/3&quot;&gt; &lt;code&gt;get_and_update_in/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cb5ab22fadbe3ddb46c966e8ef4864a52c44d738" translate="yes" xml:space="preserve">
          <source>Uses the &lt;a href=&quot;access&quot;&gt;&lt;code&gt;Access&lt;/code&gt;&lt;/a&gt; protocol to traverse the structures according to the given &lt;code&gt;keys&lt;/code&gt;, unless the &lt;code&gt;key&lt;/code&gt; is a function. If the key is a function, it will be invoked as specified in &lt;a href=&quot;#get_and_update_in/3&quot;&gt;&lt;code&gt;get_and_update_in/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Использует протокол &lt;a href=&quot;access&quot;&gt; &lt;code&gt;Access&lt;/code&gt; &lt;/a&gt; для обхода структур в соответствии с заданными &lt;code&gt;keys&lt;/code&gt; , если &lt;code&gt;key&lt;/code&gt; является функцией. Если ключ является функцией, она будет вызываться, как указано в &lt;a href=&quot;#get_and_update_in/3&quot;&gt; &lt;code&gt;get_and_update_in/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b648c806a5b72ce2e22dd69f6650416bf9c513d5" translate="yes" xml:space="preserve">
          <source>Uses the &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html&quot;&gt;&lt;code&gt;Access&lt;/code&gt;&lt;/a&gt; module to traverse the structures according to the given &lt;code&gt;keys&lt;/code&gt;, unless the &lt;code&gt;key&lt;/code&gt; is a function, which is detailed in a later section.</source>
          <target state="translated">Использует модуль &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html&quot;&gt; &lt;code&gt;Access&lt;/code&gt; &lt;/a&gt; для перемещения по структурам в соответствии с заданными &lt;code&gt;keys&lt;/code&gt; , если &lt;code&gt;key&lt;/code&gt; является функцией, которая подробно описана в следующем разделе.</target>
        </trans-unit>
        <trans-unit id="ccc9c406282a5ba917ce4d72d479e6ebb00bca8f" translate="yes" xml:space="preserve">
          <source>Uses the &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html&quot;&gt;&lt;code&gt;Access&lt;/code&gt;&lt;/a&gt; module to traverse the structures according to the given &lt;code&gt;keys&lt;/code&gt;, unless the &lt;code&gt;key&lt;/code&gt; is a function. If the key is a function, it will be invoked as specified in &lt;a href=&quot;#get_and_update_in/3&quot;&gt;&lt;code&gt;get_and_update_in/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Использует модуль &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html&quot;&gt; &lt;code&gt;Access&lt;/code&gt; &lt;/a&gt; для обхода структур в соответствии с заданными &lt;code&gt;keys&lt;/code&gt; , если &lt;code&gt;key&lt;/code&gt; является функцией. Если ключ является функцией, она будет вызываться, как указано в &lt;a href=&quot;#get_and_update_in/3&quot;&gt; &lt;code&gt;get_and_update_in/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="649170178c35bb19e659a8d532a363cd019f5cd4" translate="yes" xml:space="preserve">
          <source>Uses the &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html&quot;&gt;&lt;code&gt;Access&lt;/code&gt;&lt;/a&gt; protocol to traverse the structures according to the given &lt;code&gt;keys&lt;/code&gt;, unless the &lt;code&gt;key&lt;/code&gt; is a function. If the key is a function, it will be invoked as specified in &lt;a href=&quot;#get_and_update_in/3&quot;&gt;&lt;code&gt;get_and_update_in/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Использует протокол &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html&quot;&gt; &lt;code&gt;Access&lt;/code&gt; &lt;/a&gt; для обхода структур в соответствии с заданными &lt;code&gt;keys&lt;/code&gt; , если &lt;code&gt;key&lt;/code&gt; является функцией. Если ключ является функцией, она будет вызываться, как указано в &lt;a href=&quot;#get_and_update_in/3&quot;&gt; &lt;code&gt;get_and_update_in/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ef97952dc7c1cf9b1acf2d4929c04b260422cc0c" translate="yes" xml:space="preserve">
          <source>Uses the given module in the current context.</source>
          <target state="translated">Использует данный модуль в текущем контексте.</target>
        </trans-unit>
        <trans-unit id="90cad9ec714dc9a102448582d410c612025f4e51" translate="yes" xml:space="preserve">
          <source>Uses the merge sort algorithm.</source>
          <target state="translated">Использует алгоритм сортировки слияния.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
