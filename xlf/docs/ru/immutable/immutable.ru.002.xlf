<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="immutable">
    <body>
      <group id="immutable">
        <trans-unit id="63a218e6ca5a0bb7ba2f72a71e6ea339995d89b2" translate="yes" xml:space="preserve">
          <source>OrderedSet#delete()</source>
          <target state="translated">OrderedSet#delete()</target>
        </trans-unit>
        <trans-unit id="9188221240b70d5992db678240fb9c0b75005dd9" translate="yes" xml:space="preserve">
          <source>OrderedSet#entries()</source>
          <target state="translated">OrderedSet#entries()</target>
        </trans-unit>
        <trans-unit id="b8624a7b97a48b3c7ff13d5fa70c44c34aea11c6" translate="yes" xml:space="preserve">
          <source>OrderedSet#entrySeq()</source>
          <target state="translated">OrderedSet#entrySeq()</target>
        </trans-unit>
        <trans-unit id="924c5e8c93095f9d8729f0b86e2dfa403485ba6b" translate="yes" xml:space="preserve">
          <source>OrderedSet#equals()</source>
          <target state="translated">OrderedSet#equals()</target>
        </trans-unit>
        <trans-unit id="8647da9a19e9ae0edad3c12491f8dea27ff1dc79" translate="yes" xml:space="preserve">
          <source>OrderedSet#every()</source>
          <target state="translated">OrderedSet#every()</target>
        </trans-unit>
        <trans-unit id="8713319c8b589a43da2d271f7c6e4308b5bfc4ac" translate="yes" xml:space="preserve">
          <source>OrderedSet#filter()</source>
          <target state="translated">OrderedSet#filter()</target>
        </trans-unit>
        <trans-unit id="3b95954856ea154cf38460c65cca1e59e59915c0" translate="yes" xml:space="preserve">
          <source>OrderedSet#filterNot()</source>
          <target state="translated">OrderedSet#filterNot()</target>
        </trans-unit>
        <trans-unit id="4081f115c559f1d691f936183980331bfcd3fc21" translate="yes" xml:space="preserve">
          <source>OrderedSet#find()</source>
          <target state="translated">OrderedSet#find()</target>
        </trans-unit>
        <trans-unit id="493104c0418815b1ab2fe53572abdf589dbe79d3" translate="yes" xml:space="preserve">
          <source>OrderedSet#findEntry()</source>
          <target state="translated">OrderedSet#findEntry()</target>
        </trans-unit>
        <trans-unit id="71554bcbbf407ceba2697f57263f3c68a352f8e9" translate="yes" xml:space="preserve">
          <source>OrderedSet#findKey()</source>
          <target state="translated">OrderedSet#findKey()</target>
        </trans-unit>
        <trans-unit id="665c65280d71eabaf22adae2c7175924ebc621be" translate="yes" xml:space="preserve">
          <source>OrderedSet#findLast()</source>
          <target state="translated">OrderedSet#findLast()</target>
        </trans-unit>
        <trans-unit id="857934b4f497f73338ed64b9dec267078a1c7668" translate="yes" xml:space="preserve">
          <source>OrderedSet#findLastEntry()</source>
          <target state="translated">OrderedSet#findLastEntry()</target>
        </trans-unit>
        <trans-unit id="cc4d4bc0d192fff7437eb5fb45fc1fbb01ed8ab0" translate="yes" xml:space="preserve">
          <source>OrderedSet#findLastKey()</source>
          <target state="translated">OrderedSet#findLastKey()</target>
        </trans-unit>
        <trans-unit id="83108655a00fa5c09b90fbe97709f7657a283d56" translate="yes" xml:space="preserve">
          <source>OrderedSet#first()</source>
          <target state="translated">OrderedSet#first()</target>
        </trans-unit>
        <trans-unit id="f09fafa4235f1fd7f2cf95dbe917376b44590a50" translate="yes" xml:space="preserve">
          <source>OrderedSet#flatMap()</source>
          <target state="translated">OrderedSet#flatMap()</target>
        </trans-unit>
        <trans-unit id="b0a0683e58a55707ae7516f284d62c549ab8de40" translate="yes" xml:space="preserve">
          <source>OrderedSet#flatten()</source>
          <target state="translated">OrderedSet#flatten()</target>
        </trans-unit>
        <trans-unit id="42cc16ba266cf88a190bb1efdebd300a770f76df" translate="yes" xml:space="preserve">
          <source>OrderedSet#forEach()</source>
          <target state="translated">OrderedSet#forEach()</target>
        </trans-unit>
        <trans-unit id="9b2ac6987af1eb6c1e65ad74ff54029d4d42fde5" translate="yes" xml:space="preserve">
          <source>OrderedSet#get()</source>
          <target state="translated">OrderedSet#get()</target>
        </trans-unit>
        <trans-unit id="49af1043bb48463df2478df30ad35f3661e32862" translate="yes" xml:space="preserve">
          <source>OrderedSet#getIn()</source>
          <target state="translated">OrderedSet#getIn()</target>
        </trans-unit>
        <trans-unit id="c98882bf204b7906aaa161a1a2cef072d99f78f0" translate="yes" xml:space="preserve">
          <source>OrderedSet#groupBy()</source>
          <target state="translated">OrderedSet#groupBy()</target>
        </trans-unit>
        <trans-unit id="091223f9d0e69b82aed05137e4e359311eab19a6" translate="yes" xml:space="preserve">
          <source>OrderedSet#has()</source>
          <target state="translated">OrderedSet#has()</target>
        </trans-unit>
        <trans-unit id="eb144b0d5a985533edfbed5aeea353c47583f877" translate="yes" xml:space="preserve">
          <source>OrderedSet#hasIn()</source>
          <target state="translated">OrderedSet#hasIn()</target>
        </trans-unit>
        <trans-unit id="185d237263707ca6b11134331d8b28f2035869b1" translate="yes" xml:space="preserve">
          <source>OrderedSet#hashCode()</source>
          <target state="translated">OrderedSet#hashCode()</target>
        </trans-unit>
        <trans-unit id="3f83d69c335fd70df3f1779a84c9e4307d7debab" translate="yes" xml:space="preserve">
          <source>OrderedSet#includes()</source>
          <target state="translated">OrderedSet#includes()</target>
        </trans-unit>
        <trans-unit id="8498126876b29d1892b5d2bac1519c41de862310" translate="yes" xml:space="preserve">
          <source>OrderedSet#intersect()</source>
          <target state="translated">OrderedSet#intersect()</target>
        </trans-unit>
        <trans-unit id="42bdb2ba7143629d759c8642eb45e677322354a2" translate="yes" xml:space="preserve">
          <source>OrderedSet#isEmpty()</source>
          <target state="translated">OrderedSet#isEmpty()</target>
        </trans-unit>
        <trans-unit id="dd58f458c2f696ebf1ce29fdf3f814505a682457" translate="yes" xml:space="preserve">
          <source>OrderedSet#isSubset()</source>
          <target state="translated">OrderedSet#isSubset()</target>
        </trans-unit>
        <trans-unit id="f0fd3a285664d97a6b9a8e1c16a2794d70f38447" translate="yes" xml:space="preserve">
          <source>OrderedSet#isSuperset()</source>
          <target state="translated">OrderedSet#isSuperset()</target>
        </trans-unit>
        <trans-unit id="967f9ce00a08de2598205a6947dd9b864b847219" translate="yes" xml:space="preserve">
          <source>OrderedSet#join()</source>
          <target state="translated">OrderedSet#join()</target>
        </trans-unit>
        <trans-unit id="a899fda1aba0ab45ee68164285e13d30577ecd7c" translate="yes" xml:space="preserve">
          <source>OrderedSet#keyOf()</source>
          <target state="translated">OrderedSet#keyOf()</target>
        </trans-unit>
        <trans-unit id="05cfeab5f6e4ca4999bcdfb28184edc3bf30cbd7" translate="yes" xml:space="preserve">
          <source>OrderedSet#keySeq()</source>
          <target state="translated">OrderedSet#keySeq()</target>
        </trans-unit>
        <trans-unit id="7eb8a875d12c190030f1bb58b603439c3734e1c8" translate="yes" xml:space="preserve">
          <source>OrderedSet#keys()</source>
          <target state="translated">OrderedSet#keys()</target>
        </trans-unit>
        <trans-unit id="788f291e6f57b602d02276c2db0c67bf9f929ce0" translate="yes" xml:space="preserve">
          <source>OrderedSet#last()</source>
          <target state="translated">OrderedSet#last()</target>
        </trans-unit>
        <trans-unit id="60663006848311bb2132798e8f9e72b78a91d5c7" translate="yes" xml:space="preserve">
          <source>OrderedSet#lastKeyOf()</source>
          <target state="translated">OrderedSet#lastKeyOf()</target>
        </trans-unit>
        <trans-unit id="a6600af94879b99ef5fc6be6f104c3423916d3ff" translate="yes" xml:space="preserve">
          <source>OrderedSet#map()</source>
          <target state="translated">OrderedSet#map()</target>
        </trans-unit>
        <trans-unit id="de1121c058dbd206cdfb1eb8b86b2ffbbe3f4781" translate="yes" xml:space="preserve">
          <source>OrderedSet#max()</source>
          <target state="translated">OrderedSet#max()</target>
        </trans-unit>
        <trans-unit id="9f538eb7badc1040dfe06af8c1906491e32c8b2d" translate="yes" xml:space="preserve">
          <source>OrderedSet#maxBy()</source>
          <target state="translated">OrderedSet#maxBy()</target>
        </trans-unit>
        <trans-unit id="4388852b96bda1104ddfaca63c2c9deeca71e34d" translate="yes" xml:space="preserve">
          <source>OrderedSet#min()</source>
          <target state="translated">OrderedSet#min()</target>
        </trans-unit>
        <trans-unit id="971555a91a0eaa800174e03aecbf7a5287e1a5da" translate="yes" xml:space="preserve">
          <source>OrderedSet#minBy()</source>
          <target state="translated">OrderedSet#minBy()</target>
        </trans-unit>
        <trans-unit id="2129fe1d76684d48d7916b429dec07eb197938bd" translate="yes" xml:space="preserve">
          <source>OrderedSet#reduce()</source>
          <target state="translated">OrderedSet#reduce()</target>
        </trans-unit>
        <trans-unit id="14a7357d70db9905902f1133bb35f1d197d49836" translate="yes" xml:space="preserve">
          <source>OrderedSet#reduceRight()</source>
          <target state="translated">OrderedSet#reduceRight()</target>
        </trans-unit>
        <trans-unit id="67460daa2878c9be284f62a9e5d6c75e1d8232e5" translate="yes" xml:space="preserve">
          <source>OrderedSet#rest()</source>
          <target state="translated">OrderedSet#rest()</target>
        </trans-unit>
        <trans-unit id="f31e53571969a8715fc01cdc9ace32acb03fa7e3" translate="yes" xml:space="preserve">
          <source>OrderedSet#reverse()</source>
          <target state="translated">OrderedSet#reverse()</target>
        </trans-unit>
        <trans-unit id="20327c6f04c8806824aebb5523432b690d69235e" translate="yes" xml:space="preserve">
          <source>OrderedSet#size</source>
          <target state="translated">OrderedSet#size</target>
        </trans-unit>
        <trans-unit id="d99b93512e5e314b46b8500a94275b53c24aaccb" translate="yes" xml:space="preserve">
          <source>OrderedSet#skip()</source>
          <target state="translated">OrderedSet#skip()</target>
        </trans-unit>
        <trans-unit id="b65eb1f836804f25e3018e05b234bdcf5c85a818" translate="yes" xml:space="preserve">
          <source>OrderedSet#skipLast()</source>
          <target state="translated">OrderedSet#skipLast()</target>
        </trans-unit>
        <trans-unit id="081f59dc33bdb3a147852ea144755785d9e2ec0c" translate="yes" xml:space="preserve">
          <source>OrderedSet#skipUntil()</source>
          <target state="translated">OrderedSet#skipUntil()</target>
        </trans-unit>
        <trans-unit id="9390f1cf124e4697ed6ea9d969889bfbd92fec50" translate="yes" xml:space="preserve">
          <source>OrderedSet#skipWhile()</source>
          <target state="translated">OrderedSet#skipWhile()</target>
        </trans-unit>
        <trans-unit id="1c827b9b16fdfe24313b6e0c45515022c12c6bdd" translate="yes" xml:space="preserve">
          <source>OrderedSet#slice()</source>
          <target state="translated">OrderedSet#slice()</target>
        </trans-unit>
        <trans-unit id="5ac9474d657e96f91c13aa204df1cbb3de8ee393" translate="yes" xml:space="preserve">
          <source>OrderedSet#some()</source>
          <target state="translated">OrderedSet#some()</target>
        </trans-unit>
        <trans-unit id="07c4dc7cf75260fc23ca1fad861b2e8672e350b0" translate="yes" xml:space="preserve">
          <source>OrderedSet#sort()</source>
          <target state="translated">OrderedSet#sort()</target>
        </trans-unit>
        <trans-unit id="bd88e3f130041e8f5bd0ab5f2291caf3ca554100" translate="yes" xml:space="preserve">
          <source>OrderedSet#sortBy()</source>
          <target state="translated">OrderedSet#sortBy()</target>
        </trans-unit>
        <trans-unit id="b57d12dba39f218a810ba1b6a5a6109233a69e76" translate="yes" xml:space="preserve">
          <source>OrderedSet#subtract()</source>
          <target state="translated">OrderedSet#subtract()</target>
        </trans-unit>
        <trans-unit id="684292ddb6083d14204ed489387932d8653f7642" translate="yes" xml:space="preserve">
          <source>OrderedSet#take()</source>
          <target state="translated">OrderedSet#take()</target>
        </trans-unit>
        <trans-unit id="2ac0695aea02ee9b5b531cc0e5bc9934656add28" translate="yes" xml:space="preserve">
          <source>OrderedSet#takeLast()</source>
          <target state="translated">OrderedSet#takeLast()</target>
        </trans-unit>
        <trans-unit id="c8c974208aea5eec3f41a32fc58a523951164f31" translate="yes" xml:space="preserve">
          <source>OrderedSet#takeUntil()</source>
          <target state="translated">OrderedSet#takeUntil()</target>
        </trans-unit>
        <trans-unit id="1736dd1e853614725ecb75fe4cf912a4446bcf4f" translate="yes" xml:space="preserve">
          <source>OrderedSet#takeWhile()</source>
          <target state="translated">OrderedSet#takeWhile()</target>
        </trans-unit>
        <trans-unit id="a3b025943d71f1f06cbaeacc1361831c1fd129ce" translate="yes" xml:space="preserve">
          <source>OrderedSet#toArray()</source>
          <target state="translated">OrderedSet#toArray()</target>
        </trans-unit>
        <trans-unit id="2c2e6d8e5a2bd8d5b3c9be1b5f9244fc95ab7822" translate="yes" xml:space="preserve">
          <source>OrderedSet#toIndexedSeq()</source>
          <target state="translated">OrderedSet#toIndexedSeq()</target>
        </trans-unit>
        <trans-unit id="4825445eb925e504902d05fab8311253465f0f20" translate="yes" xml:space="preserve">
          <source>OrderedSet#toJS()</source>
          <target state="translated">OrderedSet#toJS()</target>
        </trans-unit>
        <trans-unit id="7727ece9e0660d4591dd612f9ab97d8816ed284d" translate="yes" xml:space="preserve">
          <source>OrderedSet#toKeyedSeq()</source>
          <target state="translated">OrderedSet#toKeyedSeq()</target>
        </trans-unit>
        <trans-unit id="8b0948650d788fd6b8d242efdac185c60a2dc34a" translate="yes" xml:space="preserve">
          <source>OrderedSet#toList()</source>
          <target state="translated">OrderedSet#toList()</target>
        </trans-unit>
        <trans-unit id="606233eb9fb5920aa1d65368a827ec241e255f69" translate="yes" xml:space="preserve">
          <source>OrderedSet#toMap()</source>
          <target state="translated">OrderedSet#toMap()</target>
        </trans-unit>
        <trans-unit id="3aac7853fe88c82ab3a478ac8afdbb1b37d942d4" translate="yes" xml:space="preserve">
          <source>OrderedSet#toObject()</source>
          <target state="translated">OrderedSet#toObject()</target>
        </trans-unit>
        <trans-unit id="d9f147582c1edda5b0118f712bc297004a61221d" translate="yes" xml:space="preserve">
          <source>OrderedSet#toOrderedMap()</source>
          <target state="translated">OrderedSet#toOrderedMap()</target>
        </trans-unit>
        <trans-unit id="aa1a806a1e2d0bfe7a349f93257b53c26c9d3e73" translate="yes" xml:space="preserve">
          <source>OrderedSet#toOrderedSet()</source>
          <target state="translated">OrderedSet#toOrderedSet()</target>
        </trans-unit>
        <trans-unit id="9a5c62da4473f15e9e4828223b6b0c3de565e2d9" translate="yes" xml:space="preserve">
          <source>OrderedSet#toSeq()</source>
          <target state="translated">OrderedSet#toSeq()</target>
        </trans-unit>
        <trans-unit id="3376f6a9f8f286f70366c45df6b440a92e776c0f" translate="yes" xml:space="preserve">
          <source>OrderedSet#toSet()</source>
          <target state="translated">OrderedSet#toSet()</target>
        </trans-unit>
        <trans-unit id="519cb4ef5b9d8ce11f8a431f934591ec80d14c3a" translate="yes" xml:space="preserve">
          <source>OrderedSet#toSetSeq()</source>
          <target state="translated">OrderedSet#toSetSeq()</target>
        </trans-unit>
        <trans-unit id="141ea386a160b30bb190454c2d202fadf9b36d95" translate="yes" xml:space="preserve">
          <source>OrderedSet#toStack()</source>
          <target state="translated">OrderedSet#toStack()</target>
        </trans-unit>
        <trans-unit id="863853b200f278378ef27703509fb1ca63fa5b71" translate="yes" xml:space="preserve">
          <source>OrderedSet#union()</source>
          <target state="translated">OrderedSet#union()</target>
        </trans-unit>
        <trans-unit id="a71735c2f0e0e35e44a0dc1e6d97d6a629fcedb9" translate="yes" xml:space="preserve">
          <source>OrderedSet#valueSeq()</source>
          <target state="translated">OrderedSet#valueSeq()</target>
        </trans-unit>
        <trans-unit id="841f359c3a9ec7d55ad822f6285f2ccf01968c68" translate="yes" xml:space="preserve">
          <source>OrderedSet#values()</source>
          <target state="translated">OrderedSet#values()</target>
        </trans-unit>
        <trans-unit id="715e85a97967a8152b4c917c5632a3e65141eb9d" translate="yes" xml:space="preserve">
          <source>OrderedSet#withMutations()</source>
          <target state="translated">OrderedSet#withMutations()</target>
        </trans-unit>
        <trans-unit id="220bd58955fc2f3a7fac723806ea3ac17d87cc08" translate="yes" xml:space="preserve">
          <source>OrderedSet()</source>
          <target state="translated">OrderedSet()</target>
        </trans-unit>
        <trans-unit id="81dd857a51afa3ce2eecb3f2c61a1907ef88b95b" translate="yes" xml:space="preserve">
          <source>OrderedSet.fromKeys()</source>
          <target state="translated">OrderedSet.fromKeys()</target>
        </trans-unit>
        <trans-unit id="732f0e771e05641d5af79926af5b5d48816a4f44" translate="yes" xml:space="preserve">
          <source>OrderedSet.isOrderedSet()</source>
          <target state="translated">OrderedSet.isOrderedSet()</target>
        </trans-unit>
        <trans-unit id="48eedb9a7ee5d1841f10bd5df77d271459d7dd6e" translate="yes" xml:space="preserve">
          <source>OrderedSet.of()</source>
          <target state="translated">OrderedSet.of()</target>
        </trans-unit>
        <trans-unit id="8df71d5f690e7f8de3846dd9c5641e747fb17386" translate="yes" xml:space="preserve">
          <source>Overrides</source>
          <target state="translated">Overrides</target>
        </trans-unit>
        <trans-unit id="0ff1663b1cde5bb6ed56ffe1197e4ded015abf14" translate="yes" xml:space="preserve">
          <source>Persistent changes</source>
          <target state="translated">Постоянные изменения</target>
        </trans-unit>
        <trans-unit id="1fb0546386d85f96319fd7a3b83039f85a2bdefe" translate="yes" xml:space="preserve">
          <source>Property access for JavaScript Objects first converts the key to a string, but since Immutable Map keys can be of any type the argument to &lt;code&gt;&lt;a href=&quot;#map.get&quot;&gt;get()&lt;/a&gt;&lt;/code&gt; is not altered.</source>
          <target state="translated">Доступ к свойствам для объектов JavaScript сначала преобразует ключ в строку, но, поскольку ключи неизменяемой карты могут быть любого типа, аргумент &lt;code&gt;&lt;a href=&quot;#map.get&quot;&gt;get()&lt;/a&gt;&lt;/code&gt; не изменяется.</target>
        </trans-unit>
        <trans-unit id="d61163171abe4a4e0653bc4a680c35ce74105b2a" translate="yes" xml:space="preserve">
          <source>Property access for JavaScript Objects first converts the key to a string, but since Immutable Map keys can be of any type the argument to &lt;code&gt;get()&lt;/code&gt; is not altered.</source>
          <target state="translated">Доступ к свойствам для объектов JavaScript сначала преобразует ключ в строку, но, поскольку ключи неизменяемой карты могут быть любого типа, аргумент &lt;code&gt;get()&lt;/code&gt; не изменяется.</target>
        </trans-unit>
        <trans-unit id="a7d74baa1eb2c7315c31b3ad4995ce6b2459ecb3" translate="yes" xml:space="preserve">
          <source>Range()</source>
          <target state="translated">Range()</target>
        </trans-unit>
        <trans-unit id="2c0ef348a69c92ec28d0ce17e9e623ccbb02ec9e" translate="yes" xml:space="preserve">
          <source>Reading deep values</source>
          <target state="translated">Чтение глубоких ценностей</target>
        </trans-unit>
        <trans-unit id="7421207f915a61053be48ee1f81c1396400af83a" translate="yes" xml:space="preserve">
          <source>Reading values</source>
          <target state="translated">Чтение значений</target>
        </trans-unit>
        <trans-unit id="1c54132b8e5a9fa44a9a1a7d30b1be36ab3c4247" translate="yes" xml:space="preserve">
          <source>Record</source>
          <target state="translated">Record</target>
        </trans-unit>
        <trans-unit id="01f378d51783c22b063b272b1f25472fad303488" translate="yes" xml:space="preserve">
          <source>Record Classes can be extended as well, allowing for custom methods on your Record. This is not a common pattern in functional environments, but is in many JS programs.</source>
          <target state="translated">Классы записи также могут быть расширены,что позволяет использовать пользовательские методы в вашей записи.Это не распространенная закономерность в функциональных средах,но присутствует во многих JS-программах.</target>
        </trans-unit>
        <trans-unit id="fe9ef3919b279706502c75ff202ab0763ea3323a" translate="yes" xml:space="preserve">
          <source>Record()</source>
          <target state="translated">Record()</target>
        </trans-unit>
        <trans-unit id="580f9910fcdcd8462aafa320ac5ecd7f3c7a3d35" translate="yes" xml:space="preserve">
          <source>Record.Class</source>
          <target state="translated">Record.Class</target>
        </trans-unit>
        <trans-unit id="4a101285e1d4b04d0f7814314c0bfabdcb8968ae" translate="yes" xml:space="preserve">
          <source>Records always have a value for the keys they define. &lt;code&gt;remove&lt;/code&gt;ing a key from a record simply resets it to the default value for that key.</source>
          <target state="translated">Записи всегда имеют значение для ключей, которые они определяют. &lt;code&gt;remove&lt;/code&gt; ключа из записи просто сбрасывает его до значения по умолчанию для этого ключа.</target>
        </trans-unit>
        <trans-unit id="d28885fe51839b9b1efdb4e2059bc78e1e036aa9" translate="yes" xml:space="preserve">
          <source>Reduces the Iterable in reverse (from the right side).</source>
          <target state="translated">Уменьшает &quot;Iterable&quot; в обратном направлении (с правой стороны).</target>
        </trans-unit>
        <trans-unit id="fef676dfcb591136254f40141d57c8e156c1c1b9" translate="yes" xml:space="preserve">
          <source>Reduces the Iterable to a value by calling the &lt;code&gt;reducer&lt;/code&gt; for every entry in the Iterable and passing along the reduced value.</source>
          <target state="translated">Уменьшает Iterable до значения, вызывая &lt;code&gt;reducer&lt;/code&gt; для каждой записи в Iterable и передавая уменьшенное значение.</target>
        </trans-unit>
        <trans-unit id="9144c32126b4479ae0e5a46598856fffda89e810" translate="yes" xml:space="preserve">
          <source>Reducing a value</source>
          <target state="translated">Уменьшение стоимости</target>
        </trans-unit>
        <trans-unit id="4945009f8507e00d5cac9bcf711beba5632da9da" translate="yes" xml:space="preserve">
          <source>Regardless of if this Iterable can describe its size lazily (some Seqs cannot), this method will always return the correct size. E.g. it evaluates a lazy &lt;code&gt;&lt;a href=&quot;#seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; if necessary.</source>
          <target state="translated">Независимо от того, может ли этот Iterable лениво описывать свой размер (некоторые Seqs не могут), этот метод всегда будет возвращать правильный размер. Например, при необходимости он оценивает ленивую &lt;code&gt;&lt;a href=&quot;#seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a33797eead8f2361b3924b201dee5d550c0342e" translate="yes" xml:space="preserve">
          <source>Repeat()</source>
          <target state="translated">Repeat()</target>
        </trans-unit>
        <trans-unit id="b749f822c3598488e9625e81c20eedd36727b86a" translate="yes" xml:space="preserve">
          <source>Represents a sequence of values, but may not be backed by a concrete data structure.</source>
          <target state="translated">Представляет собой последовательность значений,но не может быть подкреплена конкретной структурой данных.</target>
        </trans-unit>
        <trans-unit id="55260a055de371f4d79c104a884abb47664d9ba6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;-1&lt;/code&gt; (or any negative number) if &lt;code&gt;valueA&lt;/code&gt; comes before &lt;code&gt;valueB&lt;/code&gt;</source>
          <target state="translated">Возвращает &lt;code&gt;-1&lt;/code&gt; (или любое отрицательное число), если значение &lt;code&gt;valueA&lt;/code&gt; предшествует &lt;code&gt;valueB&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2dbcb0d5f09209d5ef5e042b80e3e31a09eb12a7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; if the elements should not be swapped.</source>
          <target state="translated">Возвращает &lt;code&gt;0&lt;/code&gt; , если элементы не нужно менять местами.</target>
        </trans-unit>
        <trans-unit id="68c8158dc18409a6bb37121c00dffe2aff10d7ec" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; (or any positive number) if &lt;code&gt;valueA&lt;/code&gt; comes after &lt;code&gt;valueB&lt;/code&gt;</source>
          <target state="translated">Возвращает &lt;code&gt;1&lt;/code&gt; (или любое положительное число), если &lt;code&gt;valueA&lt;/code&gt; стоит после &lt;code&gt;valueB&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a0dc31903e5d416fba9ef2217d9624ad1fdc2ac" translate="yes" xml:space="preserve">
          <source>Returns Seq.Indexed.</source>
          <target state="translated">Возвращает Seq.Indexed.</target>
        </trans-unit>
        <trans-unit id="c3b671d6c783f795f2e0198a65ee93dfce999ac7" translate="yes" xml:space="preserve">
          <source>Returns Seq.Keyed.</source>
          <target state="translated">Возвращается Seq.keyed.</target>
        </trans-unit>
        <trans-unit id="2ee347efe77ef9178ee8406c9715c748e6dbee57" translate="yes" xml:space="preserve">
          <source>Returns Seq.Set.</source>
          <target state="translated">Возвращает Seq.Set.</target>
        </trans-unit>
        <trans-unit id="7bfbbdad6fde9d003aacd9ba2d893e0c314a649d" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;&lt;a href=&quot;#iterable.keyed&quot;&gt;Iterable.Keyed&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Iterable.Keyeds&lt;/code&gt;, grouped by the return value of the &lt;code&gt;grouper&lt;/code&gt; function.</source>
          <target state="translated">Возвращает &lt;code&gt;&lt;a href=&quot;#iterable.keyed&quot;&gt;Iterable.Keyed&lt;/a&gt;&lt;/code&gt; из &lt;code&gt;Iterable.Keyeds&lt;/code&gt; , сгруппированный по возвращаемому значению функции &lt;code&gt;grouper&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d7269e105fd2b2033e56f364d074eefc4841f7b" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;&lt;a href=&quot;#seq.keyed&quot;&gt;Seq.Keyed&lt;/a&gt;&lt;/code&gt; of counts, grouped by the return value of the &lt;code&gt;grouper&lt;/code&gt; function.</source>
          <target state="translated">Возвращает &lt;code&gt;&lt;a href=&quot;#seq.keyed&quot;&gt;Seq.Keyed&lt;/a&gt;&lt;/code&gt; счетчиков, сгруппированных по возвращаемому значению функции &lt;code&gt;grouper&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f79d4a187810535423a62accd24e879a67e9679" translate="yes" xml:space="preserve">
          <source>Returns a Seq of the values provided. Alias for &lt;code&gt;Seq.Indexed.of()&lt;/code&gt;.</source>
          <target state="translated">Возвращает Seq предоставленных значений. Псевдоним для &lt;code&gt;Seq.Indexed.of()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d517ca4df23e6ed9bedf59945ebca928365e1a6" translate="yes" xml:space="preserve">
          <source>Returns a Seq.Indexed of &lt;code&gt;value&lt;/code&gt; repeated &lt;code&gt;times&lt;/code&gt; times. When &lt;code&gt;times&lt;/code&gt; is not defined, returns an infinite &lt;code&gt;&lt;a href=&quot;#seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">Возвращает Seq.Indexed из &lt;code&gt;value&lt;/code&gt; повторяется &lt;code&gt;times&lt;/code&gt; раз. Когда &lt;code&gt;times&lt;/code&gt; не определена, возвращает бесконечное &lt;code&gt;&lt;a href=&quot;#seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; из &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78c1fd213445678f59530abc7b06392c30f006c8" translate="yes" xml:space="preserve">
          <source>Returns a Seq.Indexed of numbers from &lt;code&gt;start&lt;/code&gt; (inclusive) to &lt;code&gt;end&lt;/code&gt; (exclusive), by &lt;code&gt;step&lt;/code&gt;, where &lt;code&gt;start&lt;/code&gt; defaults to 0, &lt;code&gt;step&lt;/code&gt; to 1, and &lt;code&gt;end&lt;/code&gt; to infinity. When &lt;code&gt;start&lt;/code&gt; is equal to &lt;code&gt;end&lt;/code&gt;, returns empty range.</source>
          <target state="translated">Возвращает Seq.Indexed чисел от &lt;code&gt;start&lt;/code&gt; (включительно) до &lt;code&gt;end&lt;/code&gt; ( исключая ), &lt;code&gt;step&lt;/code&gt; , где &lt;code&gt;start&lt;/code&gt; умолчанию равно 0, &lt;code&gt;step&lt;/code&gt; - 1 и &lt;code&gt;end&lt;/code&gt; - бесконечность. Когда &lt;code&gt;start&lt;/code&gt; равно &lt;code&gt;end&lt;/code&gt; , возвращается пустой диапазон.</target>
        </trans-unit>
        <trans-unit id="0c82974abeb02fe943f4405f026c90bcd4f7fd61" translate="yes" xml:space="preserve">
          <source>Returns a Seq.Keyed from this Iterable where indices are treated as keys.</source>
          <target state="translated">Возвращает Seq.keyed из этого измененного файла,где индексы рассматриваются как ключи.</target>
        </trans-unit>
        <trans-unit id="b0193c6266cc8330e05d11569d32e8651048242f" translate="yes" xml:space="preserve">
          <source>Returns a Seq.Set of the values of this Iterable, discarding keys.</source>
          <target state="translated">Возвращает Seq.Set значений этих изменяемых,отбрасывающих клавиш.</target>
        </trans-unit>
        <trans-unit id="94062fbf312acc1b300f30c9fbf00f329a4818a0" translate="yes" xml:space="preserve">
          <source>Returns a Set excluding any values contained within &lt;code&gt;iterables&lt;/code&gt;.</source>
          <target state="translated">Возвращает Set, исключая любые значения, содержащиеся в &lt;code&gt;iterables&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e333c618c074337eb79ced11ab25c18526594d6" translate="yes" xml:space="preserve">
          <source>Returns a Set including any value from &lt;code&gt;iterables&lt;/code&gt; that does not already exist in this Set.</source>
          <target state="translated">Возвращает Set, включая любое значение из &lt;code&gt;iterables&lt;/code&gt; , которого еще нет в этом Set.</target>
        </trans-unit>
        <trans-unit id="658d0831a897553a7a4eddcb16f303e1430b83e4" translate="yes" xml:space="preserve">
          <source>Returns a Set which has removed any values not also contained within &lt;code&gt;iterables&lt;/code&gt;.</source>
          <target state="translated">Возвращает Set, который удалил все значения, не содержащиеся в &lt;code&gt;iterables&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2bacaf63aa9572de8dea5bf4917717b89a864ee8" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable of the same type containing all entries except the first.</source>
          <target state="translated">Возвращает новое поле для проверки одного и того же типа,содержащее все записи,кроме первой.</target>
        </trans-unit>
        <trans-unit id="87fb2a67553fcad40d4a9837011115c9d6eaecd3" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable of the same type containing all entries except the last.</source>
          <target state="translated">Возвращает новое проставление того же типа,содержащее все записи,кроме последней.</target>
        </trans-unit>
        <trans-unit id="2e6fa3f997d36372a981d2055518b11ffa89c32c" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable of the same type in reverse order.</source>
          <target state="translated">Возвращает новый итерабель того же типа в обратном порядке.</target>
        </trans-unit>
        <trans-unit id="fd6a13849900fc381d77dba3be74afa8b15c997e" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable of the same type representing a portion of this Iterable from start up to but not including end.</source>
          <target state="translated">Возвращает новый тип,представляющий часть этого типа,от начала до конца,но не включая конец.</target>
        </trans-unit>
        <trans-unit id="1df34b981d65b68c7f508534c7e0550660043bb0" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable of the same type which excludes the first &lt;code&gt;amount&lt;/code&gt; entries from this Iterable.</source>
          <target state="translated">Возвращает новый Iterable того же типа, который исключает первые записи &lt;code&gt;amount&lt;/code&gt; из этого Iterable.</target>
        </trans-unit>
        <trans-unit id="3afbd24f402e1a481114a27df080e8540e182bac" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable of the same type which excludes the last &lt;code&gt;amount&lt;/code&gt; entries from this Iterable.</source>
          <target state="translated">Возвращает новый Iterable того же типа, который исключает последние записи &lt;code&gt;amount&lt;/code&gt; из этого Iterable.</target>
        </trans-unit>
        <trans-unit id="aca6094a868472f6c6bc4297dee4075ece5cadb3" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable of the same type which includes entries from this Iterable as long as the &lt;code&gt;predicate&lt;/code&gt; returns false.</source>
          <target state="translated">Возвращает новый Iterable того же типа, который включает в себя записи из этого Iterable, пока &lt;code&gt;predicate&lt;/code&gt; возвращает false.</target>
        </trans-unit>
        <trans-unit id="470545ef28ede457e6cd7147fb6c096fbd33bdd5" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable of the same type which includes entries from this Iterable as long as the &lt;code&gt;predicate&lt;/code&gt; returns true.</source>
          <target state="translated">Возвращает новый Iterable того же типа, который включает записи из этого Iterable, пока &lt;code&gt;predicate&lt;/code&gt; возвращает true.</target>
        </trans-unit>
        <trans-unit id="606dc1912b3007dc60c861419cb12833acce81ce" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable of the same type which includes entries starting from when &lt;code&gt;predicate&lt;/code&gt; first returns false.</source>
          <target state="translated">Возвращает новый Iterable того же типа, который включает записи, начиная с момента, когда &lt;code&gt;predicate&lt;/code&gt; сначала возвращает false.</target>
        </trans-unit>
        <trans-unit id="d4040e67119f48678dffc0b6cbf9dd521dafe08f" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable of the same type which includes entries starting from when &lt;code&gt;predicate&lt;/code&gt; first returns true.</source>
          <target state="translated">Возвращает новый Iterable того же типа, который включает записи, начиная с момента, когда &lt;code&gt;predicate&lt;/code&gt; впервые возвращает true.</target>
        </trans-unit>
        <trans-unit id="834a72c7142d77bd0953e7cfab21c1fc2d9ef3b5" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable of the same type which includes the first &lt;code&gt;amount&lt;/code&gt; entries from this Iterable.</source>
          <target state="translated">Возвращает новый объект Iterable того же типа, который включает первые записи &lt;code&gt;amount&lt;/code&gt; из этого объекта Iterable.</target>
        </trans-unit>
        <trans-unit id="f49dfc27b685c3ee7f748c95af1c53c86e92ca01" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable of the same type which includes the last &lt;code&gt;amount&lt;/code&gt; entries from this Iterable.</source>
          <target state="translated">Возвращает новый Iterable того же типа, который включает в себя последние записи &lt;code&gt;amount&lt;/code&gt; из этого Iterable.</target>
        </trans-unit>
        <trans-unit id="cff6f197f8738a9144fd1627bf137935924be637" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable of the same type which includes the same entries, stably sorted by using a &lt;code&gt;comparator&lt;/code&gt;.</source>
          <target state="translated">Возвращает новый объект Iterable того же типа, который включает те же записи, стабильно отсортированные с помощью &lt;code&gt;comparator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="758c7155eb2847fa558e6ab269ae06aa7be83ea3" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable of the same type with only the entries for which the &lt;code&gt;predicate&lt;/code&gt; function returns false.</source>
          <target state="translated">Возвращает новый Iterable того же типа только с записями, для которых функция &lt;code&gt;predicate&lt;/code&gt; возвращает false.</target>
        </trans-unit>
        <trans-unit id="b064e2a4fb1c875b2a32b3e1c61bc6e1f7f10d48" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable of the same type with only the entries for which the &lt;code&gt;predicate&lt;/code&gt; function returns true.</source>
          <target state="translated">Возвращает новый Iterable того же типа только с записями, для которых функция &lt;code&gt;predicate&lt;/code&gt; возвращает true.</target>
        </trans-unit>
        <trans-unit id="a25c0f244c82ac17b0aae997ca2299940e10c2a0" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable of the same type with other values and iterable-like concatenated to this one.</source>
          <target state="translated">Возвращает новый итерабельный тип с другими значениями и итерабельный тип,связанный с этим типом.</target>
        </trans-unit>
        <trans-unit id="0e346a6c4983bb1b6dfba834174219b7aee0c17a" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable of the same type with values passed through a &lt;code&gt;mapper&lt;/code&gt; function.</source>
          <target state="translated">Возвращает новый объект Iterable того же типа со значениями, переданными через функцию &lt;code&gt;mapper&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01efecf87a7fe747a4107d5d687645fd60470d83" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable.Keyed of the same type where the keys and values have been flipped.</source>
          <target state="translated">Возвращает новый Iterable.keyed того же типа,где клавиши и значения были перевернуты.</target>
        </trans-unit>
        <trans-unit id="e1e56c36a9242515b36f3862bf6e12a773d3505e" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable.Keyed of the same type with entries ([key, value] tuples) passed through a &lt;code&gt;mapper&lt;/code&gt; function.</source>
          <target state="translated">Возвращает новый Iterable.Keyed того же типа с записями ([ключ, значение] кортежи), переданными через функцию &lt;code&gt;mapper&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f56d9e81e478ab631d868ad01b0734a4073de0f" translate="yes" xml:space="preserve">
          <source>Returns a new Iterable.Keyed of the same type with keys passed through a &lt;code&gt;mapper&lt;/code&gt; function.</source>
          <target state="translated">Возвращает новый Iterable.Keyed того же типа с ключами, переданными через функцию &lt;code&gt;mapper&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72ca5a51471833acafa493199a66a0b773744a46" translate="yes" xml:space="preserve">
          <source>Returns a new List having removed the value at this &lt;code&gt;keyPath&lt;/code&gt;. If any keys in &lt;code&gt;keyPath&lt;/code&gt; do not exist, no change will occur.</source>
          <target state="translated">Возвращает новый список, удалив значение в этом &lt;code&gt;keyPath&lt;/code&gt; . Если какие-либо ключи в &lt;code&gt;keyPath&lt;/code&gt; не существуют, никаких изменений не произойдет.</target>
        </trans-unit>
        <trans-unit id="0804d74c401e78312b625d480f41113c12664902" translate="yes" xml:space="preserve">
          <source>Returns a new List having set &lt;code&gt;value&lt;/code&gt; at this &lt;code&gt;keyPath&lt;/code&gt;. If any keys in &lt;code&gt;keyPath&lt;/code&gt; do not exist, a new immutable Map will be created at that key.</source>
          <target state="translated">Возвращает новый список со &lt;code&gt;value&lt;/code&gt; установленным в этом &lt;code&gt;keyPath&lt;/code&gt; . Если какие-либо ключи в &lt;code&gt;keyPath&lt;/code&gt; не существуют, для этого ключа будет создана новая неизменяемая карта.</target>
        </trans-unit>
        <trans-unit id="7ab3541f3413f2ca395620b92242119458c25dc7" translate="yes" xml:space="preserve">
          <source>Returns a new List which excludes this &lt;code&gt;index&lt;/code&gt; and with a size 1 less than this List. Values at indices above &lt;code&gt;index&lt;/code&gt; are shifted down by 1 to fill the position.</source>
          <target state="translated">Возвращает новый список, который исключает этот &lt;code&gt;index&lt;/code&gt; и имеет размер на 1 меньше, чем этот список. Значения в индексах над &lt;code&gt;index&lt;/code&gt; сдвигаются вниз на 1, чтобы заполнить позицию.</target>
        </trans-unit>
        <trans-unit id="aebcf08590e6183160c7b9f5bdcc35a5e1fae66b" translate="yes" xml:space="preserve">
          <source>Returns a new List which includes &lt;code&gt;value&lt;/code&gt; at &lt;code&gt;index&lt;/code&gt;. If &lt;code&gt;index&lt;/code&gt; already exists in this List, it will be replaced.</source>
          <target state="translated">Возвращает новый список, который включает &lt;code&gt;value&lt;/code&gt; по &lt;code&gt;index&lt;/code&gt; . Если &lt;code&gt;index&lt;/code&gt; уже существует в этом списке, он будет заменен.</target>
        </trans-unit>
        <trans-unit id="1e6209cae3997a5d41144f3af3c320fc9ee21f58" translate="yes" xml:space="preserve">
          <source>Returns a new List with 0 size and no values.</source>
          <target state="translated">Возвращает новый Список с 0 размером и без значений.</target>
        </trans-unit>
        <trans-unit id="ec7c01bbc7f24a6dc5e308f1a3d3f219a2239009" translate="yes" xml:space="preserve">
          <source>Returns a new List with &lt;code&gt;value&lt;/code&gt; at &lt;code&gt;index&lt;/code&gt; with a size 1 more than this List. Values at indices above &lt;code&gt;index&lt;/code&gt; are shifted over by 1.</source>
          <target state="translated">Возвращает новый список со &lt;code&gt;value&lt;/code&gt; в &lt;code&gt;index&lt;/code&gt; размер которого на 1 больше, чем этот список. Значения индексов выше &lt;code&gt;index&lt;/code&gt; смещены на 1.</target>
        </trans-unit>
        <trans-unit id="d406401a23a62efab45c7d56dd40b98e65a57b7e" translate="yes" xml:space="preserve">
          <source>Returns a new List with a size ones less than this List, excluding the first index in this List, shifting all other values to a lower index.</source>
          <target state="translated">Возвращает новый Список,размер которого меньше этого Списка,исключая первый индекс в этом Списке,сдвигая все остальные значения на более низкий индекс.</target>
        </trans-unit>
        <trans-unit id="bd04c66836b909e76712a96b6de1a9ac9c09b2ca" translate="yes" xml:space="preserve">
          <source>Returns a new List with a size ones less than this List, excluding the last index in this List.</source>
          <target state="translated">Возвращает новый Список,размер которого меньше этого Списка,исключая последний индекс в этом Списке.</target>
        </trans-unit>
        <trans-unit id="13906c83fc19b343e44aba067c9e44889ec5811e" translate="yes" xml:space="preserve">
          <source>Returns a new List with an updated value at &lt;code&gt;index&lt;/code&gt; with the return value of calling &lt;code&gt;updater&lt;/code&gt; with the existing value, or &lt;code&gt;notSetValue&lt;/code&gt; if &lt;code&gt;index&lt;/code&gt; was not set. If called with a single argument, &lt;code&gt;updater&lt;/code&gt; is called with the List itself.</source>
          <target state="translated">Возвращает новый список с обновленным значением по &lt;code&gt;index&lt;/code&gt; с возвращаемым значением вызывающего средства &lt;code&gt;updater&lt;/code&gt; с существующим значением или &lt;code&gt;notSetValue&lt;/code&gt; , если &lt;code&gt;index&lt;/code&gt; не был установлен. Если вызывается с одним аргументом, &lt;code&gt;updater&lt;/code&gt; вызывается с самим списком.</target>
        </trans-unit>
        <trans-unit id="b031aeea5d7c9c63086564a2bcb846bddd2cc130" translate="yes" xml:space="preserve">
          <source>Returns a new List with size &lt;code&gt;size&lt;/code&gt;. If &lt;code&gt;size&lt;/code&gt; is less than this List's size, the new List will exclude values at the higher indices. If &lt;code&gt;size&lt;/code&gt; is greater than this List's size, the new List will have undefined values for the newly available indices.</source>
          <target state="translated">Возвращает новый список с размером &lt;code&gt;size&lt;/code&gt; . Если &lt;code&gt;size&lt;/code&gt; меньше, чем размер этого списка, новый список исключит значения с более высокими индексами. Если &lt;code&gt;size&lt;/code&gt; больше, чем размер этого списка, новый список будет иметь неопределенные значения для вновь доступных индексов.</target>
        </trans-unit>
        <trans-unit id="e1ce836943b7747810de5b31f8914b83f75b0415" translate="yes" xml:space="preserve">
          <source>Returns a new List with the provided &lt;code&gt;values&lt;/code&gt; appended, starting at this List's &lt;code&gt;&lt;a href=&quot;#list.size&quot;&gt;size&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Возвращает новый список с добавленными предоставленными &lt;code&gt;values&lt;/code&gt; , начиная с &lt;code&gt;&lt;a href=&quot;#list.size&quot;&gt;size&lt;/a&gt;&lt;/code&gt; этого списка .</target>
        </trans-unit>
        <trans-unit id="8fe99f3a798efd4c547455167df1810cdd7532b4" translate="yes" xml:space="preserve">
          <source>Returns a new List with the provided &lt;code&gt;values&lt;/code&gt; prepended, shifting other values ahead to higher indices.</source>
          <target state="translated">Возвращает новый список с предустановленными &lt;code&gt;values&lt;/code&gt; , сдвигая другие значения вперед к более высоким индексам.</target>
        </trans-unit>
        <trans-unit id="51f35f2394a92a0b907fa89f685e91ac3cfbcb40" translate="yes" xml:space="preserve">
          <source>Returns a new Map also containing the new key, value pair. If an equivalent key already exists in this Map, it will be replaced.</source>
          <target state="translated">Возвращает новую карту,также содержащую новый ключ,пару значений.Если эквивалентный ключ уже существует на этой карте,он будет заменен.</target>
        </trans-unit>
        <trans-unit id="06736a0cb5f9c5038d7f8014d67c12362bc740b9" translate="yes" xml:space="preserve">
          <source>Returns a new Map containing no keys or values.</source>
          <target state="translated">Возвращает новую карту,на которой нет клавиш и значений.</target>
        </trans-unit>
        <trans-unit id="2f782a3f4b0bb78a858480f7cc2db5d1ecf6ede2" translate="yes" xml:space="preserve">
          <source>Returns a new Map having applied the &lt;code&gt;updater&lt;/code&gt; to the entry found at the keyPath.</source>
          <target state="translated">Возвращает новую карту, применив средство &lt;code&gt;updater&lt;/code&gt; к записи, найденной в keyPath.</target>
        </trans-unit>
        <trans-unit id="998de8ea5f5b3f2672326de1d50e981912bc5903" translate="yes" xml:space="preserve">
          <source>Returns a new Map having removed the value at this &lt;code&gt;keyPath&lt;/code&gt;. If any keys in &lt;code&gt;keyPath&lt;/code&gt; do not exist, no change will occur.</source>
          <target state="translated">Возвращает новую карту, удалив значение в этом &lt;code&gt;keyPath&lt;/code&gt; . Если какие-либо ключи в &lt;code&gt;keyPath&lt;/code&gt; не существуют, никаких изменений не произойдет.</target>
        </trans-unit>
        <trans-unit id="a8b25110de24f3bc29b882a40aad7fc01cb70c36" translate="yes" xml:space="preserve">
          <source>Returns a new Map having set &lt;code&gt;value&lt;/code&gt; at this &lt;code&gt;keyPath&lt;/code&gt;. If any keys in &lt;code&gt;keyPath&lt;/code&gt; do not exist, a new immutable Map will be created at that key.</source>
          <target state="translated">Возвращает новую карту, имеющую &lt;code&gt;value&lt;/code&gt; для этого &lt;code&gt;keyPath&lt;/code&gt; . Если какие-либо ключи в &lt;code&gt;keyPath&lt;/code&gt; не существуют, для этого ключа будет создана новая неизменяемая карта.</target>
        </trans-unit>
        <trans-unit id="fef913a8b53e3d9eb744c35a387e892e7a34546f" translate="yes" xml:space="preserve">
          <source>Returns a new Map having updated the value at this &lt;code&gt;key&lt;/code&gt; with the return value of calling &lt;code&gt;updater&lt;/code&gt; with the existing value, or &lt;code&gt;notSetValue&lt;/code&gt; if the key was not set. If called with only a single argument, &lt;code&gt;updater&lt;/code&gt; is called with the Map itself.</source>
          <target state="translated">Возвращает новую карту, обновив значение в этом &lt;code&gt;key&lt;/code&gt; с возвращаемым значением вызывающего средства &lt;code&gt;updater&lt;/code&gt; с существующим значением, или &lt;code&gt;notSetValue&lt;/code&gt; , если ключ не был установлен. Если вызывается только с одним аргументом, средство &lt;code&gt;updater&lt;/code&gt; вызывается с самой картой.</target>
        </trans-unit>
        <trans-unit id="1ce20d5ed7a0ae0eb51c18ff4b8beaa337aa2512" translate="yes" xml:space="preserve">
          <source>Returns a new Map resulting from merging the provided Iterables (or JS objects) into this Map. In other words, this takes each entry of each iterable and sets it on this Map.</source>
          <target state="translated">Возвращает новую карту,полученную в результате слияния предоставленных Иterables (или JS-объектов)с этой картой.Другими словами,это берёт каждую запись каждой итерабельной и устанавливает её на эту Карту.</target>
        </trans-unit>
        <trans-unit id="d025317fac33bd11bc09618f12c860a65c3cfe4f" translate="yes" xml:space="preserve">
          <source>Returns a new Map which excludes this &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">Возвращает новую карту, исключающую этот &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5da25fe0d83502c53425fea8592a977db6bdbb3a" translate="yes" xml:space="preserve">
          <source>Returns a new Seq.Indexed of [key, value] tuples.</source>
          <target state="translated">Возвращает новый кортеж Seq.Indexed из [ключ,значение].</target>
        </trans-unit>
        <trans-unit id="04b3724b15861b9bd3f876886c4ecac228c59f61" translate="yes" xml:space="preserve">
          <source>Returns a new Seq.Indexed of the keys of this Iterable, discarding values.</source>
          <target state="translated">Возвращает новый Seq.Indexed ключей этого Iterable,отбрасывая значения.</target>
        </trans-unit>
        <trans-unit id="fb9a8324c8c4f63cea0bdd365d448f9d646b98dc" translate="yes" xml:space="preserve">
          <source>Returns a new Set containing no values.</source>
          <target state="translated">Возвращает новый набор,не содержащий значений.</target>
        </trans-unit>
        <trans-unit id="8dc16b3d9299b41e3851beca93892097af26a131" translate="yes" xml:space="preserve">
          <source>Returns a new Set which also includes this value.</source>
          <target state="translated">Возвращает новый Набор,который также включает это значение.</target>
        </trans-unit>
        <trans-unit id="1310386846a090c86f5f823f6ab2d7b08021d951" translate="yes" xml:space="preserve">
          <source>Returns a new Set which excludes this value.</source>
          <target state="translated">Возвращает новый набор,который исключает это значение.</target>
        </trans-unit>
        <trans-unit id="a8a577da803f1757cee89a50b8bbb2f55f5df780" translate="yes" xml:space="preserve">
          <source>Returns a new Stack with 0 size and no values.</source>
          <target state="translated">Возвращает новый Стек с 0 размером и без значений.</target>
        </trans-unit>
        <trans-unit id="1de0b7ce3a36e243e2aa5557f5a35d40196a72ff" translate="yes" xml:space="preserve">
          <source>Returns a new Stack with a size ones less than this Stack, excluding the first item in this Stack, shifting all other values to a lower index.</source>
          <target state="translated">Возвращает новый Стек с размером меньше этого Стека,исключая первый элемент в этом Стеке,сдвигая все остальные значения на более низкий индекс.</target>
        </trans-unit>
        <trans-unit id="ef04cb2a271ad0eef5e80a1fdf890674a878f95a" translate="yes" xml:space="preserve">
          <source>Returns a new Stack with the provided &lt;code&gt;values&lt;/code&gt; prepended, shifting other values ahead to higher indices.</source>
          <target state="translated">Возвращает новый стек с предустановленными &lt;code&gt;values&lt;/code&gt; , сдвигая другие значения вперед к более высоким индексам.</target>
        </trans-unit>
        <trans-unit id="2fa45b034a968a6819a21012c79135c652cb6bb3" translate="yes" xml:space="preserve">
          <source>Returns a particular kind of &lt;code&gt;Seq&lt;/code&gt; based on the input.</source>
          <target state="translated">Возвращает определенный вид &lt;code&gt;Seq&lt;/code&gt; на основе ввода.</target>
        </trans-unit>
        <trans-unit id="ff475fcf68d4eda1d017f04cabb248dba5491293" translate="yes" xml:space="preserve">
          <source>Returns an Iterable of the same type &quot;zipped&quot; with the provided iterables by using a custom &lt;code&gt;zipper&lt;/code&gt; function.</source>
          <target state="translated">Возвращает Iterable того же типа, &amp;laquo;заархивированный&amp;raquo; с предоставленными итерациями, используя пользовательскую функцию &lt;code&gt;zipper&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9743bae0ee567b7628ec7fdefaca5965de329d76" translate="yes" xml:space="preserve">
          <source>Returns an Iterable of the same type &quot;zipped&quot; with the provided iterables.</source>
          <target state="translated">Возвращает итерабель того же типа &quot;застегнутый на молнию&quot; с прилагаемыми итерабелями.</target>
        </trans-unit>
        <trans-unit id="2b5e68e2813be7d7eabe41161f4fda4a231d0023" translate="yes" xml:space="preserve">
          <source>Returns an Iterable of the same type with &lt;code&gt;separator&lt;/code&gt; between each item in this Iterable.</source>
          <target state="translated">Возвращает Iterable того же типа с &lt;code&gt;separator&lt;/code&gt; между каждым элементом в этом Iterable.</target>
        </trans-unit>
        <trans-unit id="66d85893351eaafa2c24429c65cb7c3f1b487fad" translate="yes" xml:space="preserve">
          <source>Returns an Iterable of the same type with the provided &lt;code&gt;iterables&lt;/code&gt; interleaved into this iterable.</source>
          <target state="translated">Возвращает Iterable того же типа с предоставленными &lt;code&gt;iterables&lt;/code&gt; чередующимися в этот итеративный объект.</target>
        </trans-unit>
        <trans-unit id="4f41eef4b132743d051d869fd4e97ddc6ec8b17b" translate="yes" xml:space="preserve">
          <source>Returns an Seq.Indexed of the values of this Iterable, discarding keys.</source>
          <target state="translated">Возвращает Seq.Indexed из значений этого изменяемого,отбрасывающего ключа.</target>
        </trans-unit>
        <trans-unit id="e33c46b99ad1b1cb0d8bad803311c06eb6c2d5c1" translate="yes" xml:space="preserve">
          <source>Returns itself</source>
          <target state="translated">Возвращается</target>
        </trans-unit>
        <trans-unit id="55c073d08aa2d7df99f20fe08f0bc3a2b4995a58" translate="yes" xml:space="preserve">
          <source>Returns the first [key, value] entry for which the &lt;code&gt;predicate&lt;/code&gt; returns true.</source>
          <target state="translated">Возвращает первую запись [ключ, значение], для которой &lt;code&gt;predicate&lt;/code&gt; возвращает истину.</target>
        </trans-unit>
        <trans-unit id="11c2c16430e51a9a481bcaf416bfe314218511a4" translate="yes" xml:space="preserve">
          <source>Returns the first index at which a given value can be found in the Iterable, or -1 if it is not present.</source>
          <target state="translated">Возвращает первый индекс,при котором заданное значение может быть найдено в Iterable,или -1,если его нет.</target>
        </trans-unit>
        <trans-unit id="daaa55a3015edacd45bdbb25ffbdc472739dbbf4" translate="yes" xml:space="preserve">
          <source>Returns the first index in the Iterable where a value satisfies the provided predicate function. Otherwise -1 is returned.</source>
          <target state="translated">Возвращает первый индекс в Iterable,где значение удовлетворяет заданной предикатной функции.В противном случае возвращается -1.</target>
        </trans-unit>
        <trans-unit id="8fc00a81689009968dee1126b7c350913513b2b5" translate="yes" xml:space="preserve">
          <source>Returns the first value for which the &lt;code&gt;predicate&lt;/code&gt; returns true.</source>
          <target state="translated">Возвращает первое значение, для которого &lt;code&gt;predicate&lt;/code&gt; возвращает истину.</target>
        </trans-unit>
        <trans-unit id="cf47b67ab3a84521ed8fd6c346eba0357026c762" translate="yes" xml:space="preserve">
          <source>Returns the key associated with the search value, or undefined.</source>
          <target state="translated">Возвращает ключ,связанный со значением поиска,или неопределенный.</target>
        </trans-unit>
        <trans-unit id="12d76e21cac8913b9d39235913be41ea22fa0b33" translate="yes" xml:space="preserve">
          <source>Returns the key for which the &lt;code&gt;predicate&lt;/code&gt; returns true.</source>
          <target state="translated">Возвращает ключ, для которого &lt;code&gt;predicate&lt;/code&gt; возвращает истину.</target>
        </trans-unit>
        <trans-unit id="9d0f3018a2b519c9194f6649d0a5872fafe49040" translate="yes" xml:space="preserve">
          <source>Returns the last [key, value] entry for which the &lt;code&gt;predicate&lt;/code&gt; returns true.</source>
          <target state="translated">Возвращает последнюю запись [ключ, значение], для которой &lt;code&gt;predicate&lt;/code&gt; возвращает истину.</target>
        </trans-unit>
        <trans-unit id="1f0fb252aff5b199af60cabe458c7d6d5d22b61f" translate="yes" xml:space="preserve">
          <source>Returns the last index at which a given value can be found in the Iterable, or -1 if it is not present.</source>
          <target state="translated">Возвращает последний индекс,при котором заданное значение может быть найдено в Iterable,или -1,если его нет.</target>
        </trans-unit>
        <trans-unit id="a22b7433cd6a5aeda082c24f91c015664275a096" translate="yes" xml:space="preserve">
          <source>Returns the last index in the Iterable where a value satisfies the provided predicate function. Otherwise -1 is returned.</source>
          <target state="translated">Возвращает последний индекс в Iterable,где значение удовлетворяет предоставленной функции предиката.В противном случае возвращается -1.</target>
        </trans-unit>
        <trans-unit id="468a6fc12b548dad7ac7ea3818dff5b165c26278" translate="yes" xml:space="preserve">
          <source>Returns the last key associated with the search value, or undefined.</source>
          <target state="translated">Возвращает последний ключ,связанный со значением поиска,или неопределенный.</target>
        </trans-unit>
        <trans-unit id="577699e52bb7a5aeff4b246cc2f889713ea22ed6" translate="yes" xml:space="preserve">
          <source>Returns the last key for which the &lt;code&gt;predicate&lt;/code&gt; returns true.</source>
          <target state="translated">Возвращает последний ключ, для которого &lt;code&gt;predicate&lt;/code&gt; возвращает истину.</target>
        </trans-unit>
        <trans-unit id="f501043bc7656138f2be4b4774e7c59d5e7c2598" translate="yes" xml:space="preserve">
          <source>Returns the last value for which the &lt;code&gt;predicate&lt;/code&gt; returns true.</source>
          <target state="translated">Возвращает последнее значение, для которого &lt;code&gt;predicate&lt;/code&gt; возвращает истину.</target>
        </trans-unit>
        <trans-unit id="4c86ef3972114e49d965afa2d4e1032478f14125" translate="yes" xml:space="preserve">
          <source>Returns the maximum value in this collection. If any values are comparatively equivalent, the first one found will be returned.</source>
          <target state="translated">Возвращает максимальное значение в этой коллекции.Если какие-либо значения сравнительно эквивалентны,то возвращается первое найденное.</target>
        </trans-unit>
        <trans-unit id="7012af9955b008f89083a0bee20d225738f8f770" translate="yes" xml:space="preserve">
          <source>Returns the minimum value in this collection. If any values are comparatively equivalent, the first one found will be returned.</source>
          <target state="translated">Возвращает минимальное значение в этой коллекции.Если какие-либо значения сравнительно эквивалентны,то возвращается первое найденное.</target>
        </trans-unit>
        <trans-unit id="a95588b242cef7aa9fc33411044fbdc077694bab" translate="yes" xml:space="preserve">
          <source>Returns the size of this Iterable.</source>
          <target state="translated">Возвращает размер этого фильма.</target>
        </trans-unit>
        <trans-unit id="0313757e6748ebbcbd1a51d1b907c21fd013f0de" translate="yes" xml:space="preserve">
          <source>Returns the value associated with the provided key, or notSetValue if the Iterable does not contain this key.</source>
          <target state="translated">Возвращает значение,связанное с предоставленным ключом,или notSetValue,если Iterable не содержит этот ключ.</target>
        </trans-unit>
        <trans-unit id="e2a7b9b9a53b49a1f016195e4a8c8227d2dc065b" translate="yes" xml:space="preserve">
          <source>Returns the value found by following a path of keys or indices through nested Iterables.</source>
          <target state="translated">Возвращает найденное значение,следуя по пути ключей или индексов через вложенные итериалы.</target>
        </trans-unit>
        <trans-unit id="b0b0033c3dc9a9126092e7c0d07dcc02d9774e74" translate="yes" xml:space="preserve">
          <source>Returns true if this Iterable includes no values.</source>
          <target state="translated">Возвращает true,если в этом параметре нет значений.</target>
        </trans-unit>
        <trans-unit id="7bc08e35bd9cc1e7f2ec887462f810b873031124" translate="yes" xml:space="preserve">
          <source>Search for value</source>
          <target state="translated">Поиск значения</target>
        </trans-unit>
        <trans-unit id="fa328f49b32e6dbe61c90ab9a659303e1d388d15" translate="yes" xml:space="preserve">
          <source>Seq</source>
          <target state="translated">Seq</target>
        </trans-unit>
        <trans-unit id="cade76f6bb3612765a14688c9cbca1f3ce2a2d08" translate="yes" xml:space="preserve">
          <source>Seq allows for the efficient chaining of operations, allowing for the expression of logic that can otherwise be very tedious:</source>
          <target state="translated">Seq обеспечивает эффективную цепочку операций,позволяя выражать логику,которая в противном случае может быть очень утомительной:</target>
        </trans-unit>
        <trans-unit id="a53e9c4026a036614679471f2d55fdf065c2b35a" translate="yes" xml:space="preserve">
          <source>Seq is often used to provide a rich collection API to JavaScript Object.</source>
          <target state="translated">Seq часто используется для предоставления богатой коллекции API к JavaScript Object.</target>
        </trans-unit>
        <trans-unit id="a90973cfe1191bd06412346165d52ebbaa976393" translate="yes" xml:space="preserve">
          <source>Seq#butLast()</source>
          <target state="translated">Seq#butLast()</target>
        </trans-unit>
        <trans-unit id="f6ebcdfcf0b0099e9e1402d568eae95ea7faefd6" translate="yes" xml:space="preserve">
          <source>Seq#cacheResult()</source>
          <target state="translated">Seq#cacheResult()</target>
        </trans-unit>
        <trans-unit id="34d08adb25fa9de29c46b986f2f1f8a545411a5e" translate="yes" xml:space="preserve">
          <source>Seq#concat()</source>
          <target state="translated">Seq#concat()</target>
        </trans-unit>
        <trans-unit id="0760fc24f7cf271f3635bafbc5c04c7f332aad11" translate="yes" xml:space="preserve">
          <source>Seq#count()</source>
          <target state="translated">Seq#count()</target>
        </trans-unit>
        <trans-unit id="ed7d57cff06122f814bb6160cfba261addfd1eef" translate="yes" xml:space="preserve">
          <source>Seq#countBy()</source>
          <target state="translated">Seq#countBy()</target>
        </trans-unit>
        <trans-unit id="7cc24f58af4a48d16a65a1edb58064dfb1c0f087" translate="yes" xml:space="preserve">
          <source>Seq#entries()</source>
          <target state="translated">Seq#entries()</target>
        </trans-unit>
        <trans-unit id="0342eb1d7f7ede54a9e6335e440c15dd151e5740" translate="yes" xml:space="preserve">
          <source>Seq#entrySeq()</source>
          <target state="translated">Seq#entrySeq()</target>
        </trans-unit>
        <trans-unit id="42f4237bbb1608b2c0aa6b5d0294fd5194a78626" translate="yes" xml:space="preserve">
          <source>Seq#equals()</source>
          <target state="translated">Seq#equals()</target>
        </trans-unit>
        <trans-unit id="784f2dd68274c99e8ebdf1f8548e9773f8e221fd" translate="yes" xml:space="preserve">
          <source>Seq#every()</source>
          <target state="translated">Seq#every()</target>
        </trans-unit>
        <trans-unit id="fe13859dc16e58860df36254b8ada25492d4e157" translate="yes" xml:space="preserve">
          <source>Seq#filter()</source>
          <target state="translated">Seq#filter()</target>
        </trans-unit>
        <trans-unit id="d39729e01a59a00e9d486506bb58aa0bab136590" translate="yes" xml:space="preserve">
          <source>Seq#filterNot()</source>
          <target state="translated">Seq#filterNot()</target>
        </trans-unit>
        <trans-unit id="4a55af829e0b7ed3ba9282d272fc91e042650088" translate="yes" xml:space="preserve">
          <source>Seq#find()</source>
          <target state="translated">Seq#find()</target>
        </trans-unit>
        <trans-unit id="bd1316dcb4612576fa82170926c54ef71aa9c451" translate="yes" xml:space="preserve">
          <source>Seq#findEntry()</source>
          <target state="translated">Seq#findEntry()</target>
        </trans-unit>
        <trans-unit id="b8bae9b7b87bdbee01611bc2bf646fbb9543b007" translate="yes" xml:space="preserve">
          <source>Seq#findKey()</source>
          <target state="translated">Seq#findKey()</target>
        </trans-unit>
        <trans-unit id="958a6b164407e926798e84cd1a58532f3be7b178" translate="yes" xml:space="preserve">
          <source>Seq#findLast()</source>
          <target state="translated">Seq#findLast()</target>
        </trans-unit>
        <trans-unit id="5fb50a73b8146e897830b49350ffda9c202c6ff2" translate="yes" xml:space="preserve">
          <source>Seq#findLastEntry()</source>
          <target state="translated">Seq#findLastEntry()</target>
        </trans-unit>
        <trans-unit id="ad49e5b294ac1a51edf0cf5b2c57f160565584c6" translate="yes" xml:space="preserve">
          <source>Seq#findLastKey()</source>
          <target state="translated">Seq#findLastKey()</target>
        </trans-unit>
        <trans-unit id="11fffa671a57b395357c78ebb9cb41735557aea5" translate="yes" xml:space="preserve">
          <source>Seq#first()</source>
          <target state="translated">Seq#first()</target>
        </trans-unit>
        <trans-unit id="f302dad3e7408de75e060340d1aae0036dbad83a" translate="yes" xml:space="preserve">
          <source>Seq#flatMap()</source>
          <target state="translated">Seq#flatMap()</target>
        </trans-unit>
        <trans-unit id="66217de52ade66bf3e1dcc24b353f2bcd17c1532" translate="yes" xml:space="preserve">
          <source>Seq#flatten()</source>
          <target state="translated">Seq#flatten()</target>
        </trans-unit>
        <trans-unit id="2c34465bef79a4a0c2e7767050a773d15792f0f6" translate="yes" xml:space="preserve">
          <source>Seq#forEach()</source>
          <target state="translated">Seq#forEach()</target>
        </trans-unit>
        <trans-unit id="6e242dad17b141264b85fabaa1ec1c66d7c3de64" translate="yes" xml:space="preserve">
          <source>Seq#get()</source>
          <target state="translated">Seq#get()</target>
        </trans-unit>
        <trans-unit id="eb491c1b4134637e1273c2a175ecf06b79732357" translate="yes" xml:space="preserve">
          <source>Seq#getIn()</source>
          <target state="translated">Seq#getIn()</target>
        </trans-unit>
        <trans-unit id="7358d57dc11f56c92a6a012bb3c594e908857811" translate="yes" xml:space="preserve">
          <source>Seq#groupBy()</source>
          <target state="translated">Seq#groupBy()</target>
        </trans-unit>
        <trans-unit id="ee875d4ac9307f04958690dea2ddb4d15b09f5f7" translate="yes" xml:space="preserve">
          <source>Seq#has()</source>
          <target state="translated">Seq#has()</target>
        </trans-unit>
        <trans-unit id="4af74afe3e93dacec16c7684b8e6fee4fd8769d5" translate="yes" xml:space="preserve">
          <source>Seq#hasIn()</source>
          <target state="translated">Seq#hasIn()</target>
        </trans-unit>
        <trans-unit id="42bb69417d541220d06fc5f94e691512caf3bc7c" translate="yes" xml:space="preserve">
          <source>Seq#hashCode()</source>
          <target state="translated">Seq#hashCode()</target>
        </trans-unit>
        <trans-unit id="8210e4215d8d42cb45bf5d04682832d340444f4e" translate="yes" xml:space="preserve">
          <source>Seq#includes()</source>
          <target state="translated">Seq#includes()</target>
        </trans-unit>
        <trans-unit id="08e5177394a96280c37fca3e5fe3a6c27c970547" translate="yes" xml:space="preserve">
          <source>Seq#isEmpty()</source>
          <target state="translated">Seq#isEmpty()</target>
        </trans-unit>
        <trans-unit id="38c46f7e52c9a9cdf023a10b184d05c15be14a3f" translate="yes" xml:space="preserve">
          <source>Seq#isSubset()</source>
          <target state="translated">Seq#isSubset()</target>
        </trans-unit>
        <trans-unit id="a877e29c0366b92c049683c77903101e607135cf" translate="yes" xml:space="preserve">
          <source>Seq#isSuperset()</source>
          <target state="translated">Seq#isSuperset()</target>
        </trans-unit>
        <trans-unit id="efa60a0d5cfb9d6f3b5d67310178a91ef8621783" translate="yes" xml:space="preserve">
          <source>Seq#join()</source>
          <target state="translated">Seq#join()</target>
        </trans-unit>
        <trans-unit id="2827778e3127df76eaf9b05f9f483d463b47a5e1" translate="yes" xml:space="preserve">
          <source>Seq#keyOf()</source>
          <target state="translated">Seq#keyOf()</target>
        </trans-unit>
        <trans-unit id="32d6fb9ef62373088832c6097571c7f2492366f6" translate="yes" xml:space="preserve">
          <source>Seq#keySeq()</source>
          <target state="translated">Seq#keySeq()</target>
        </trans-unit>
        <trans-unit id="2ea3b8af422daa39f1da738ff3bebeb20fa35699" translate="yes" xml:space="preserve">
          <source>Seq#keys()</source>
          <target state="translated">Seq#keys()</target>
        </trans-unit>
        <trans-unit id="55049d5ec918e236e2d803f7dd19474a4e111338" translate="yes" xml:space="preserve">
          <source>Seq#last()</source>
          <target state="translated">Seq#last()</target>
        </trans-unit>
        <trans-unit id="53321f4a0bc07eef38ffa60d903b4c1e1161f19f" translate="yes" xml:space="preserve">
          <source>Seq#lastKeyOf()</source>
          <target state="translated">Seq#lastKeyOf()</target>
        </trans-unit>
        <trans-unit id="93b9fb255299e2eb9e8d8da852401585757e25f4" translate="yes" xml:space="preserve">
          <source>Seq#map()</source>
          <target state="translated">Seq#map()</target>
        </trans-unit>
        <trans-unit id="cbfd1d18c40c3ba0f12ee1a3d1fb2a5d5ec5bbe4" translate="yes" xml:space="preserve">
          <source>Seq#max()</source>
          <target state="translated">Seq#max()</target>
        </trans-unit>
        <trans-unit id="40d677970006095a1dcbc1a81bf27e65a87318ff" translate="yes" xml:space="preserve">
          <source>Seq#maxBy()</source>
          <target state="translated">Seq#maxBy()</target>
        </trans-unit>
        <trans-unit id="a671a2ee1176c9d55772c7dd61c4a3d0dfa9ac83" translate="yes" xml:space="preserve">
          <source>Seq#min()</source>
          <target state="translated">Seq#min()</target>
        </trans-unit>
        <trans-unit id="ea0b9342b030f4a7eb02b50cfd3630cad7b31fc1" translate="yes" xml:space="preserve">
          <source>Seq#minBy()</source>
          <target state="translated">Seq#minBy()</target>
        </trans-unit>
        <trans-unit id="bf1383ce9e8351cd51ffa283b01ccdba80ab2c4c" translate="yes" xml:space="preserve">
          <source>Seq#reduce()</source>
          <target state="translated">Seq#reduce()</target>
        </trans-unit>
        <trans-unit id="6e01103e4d7ba938fc58f0f7119799ca5e2ade51" translate="yes" xml:space="preserve">
          <source>Seq#reduceRight()</source>
          <target state="translated">Seq#reduceRight()</target>
        </trans-unit>
        <trans-unit id="c34315d03388360d3cb2c97cd8175d0adba09b5f" translate="yes" xml:space="preserve">
          <source>Seq#rest()</source>
          <target state="translated">Seq#rest()</target>
        </trans-unit>
        <trans-unit id="dcc9c61239e07ccd48bd450a2fd0aa3c1f84d75d" translate="yes" xml:space="preserve">
          <source>Seq#reverse()</source>
          <target state="translated">Seq#reverse()</target>
        </trans-unit>
        <trans-unit id="dd4d9903c67d8d0c2fae836a6be20e9b959a5790" translate="yes" xml:space="preserve">
          <source>Seq#size</source>
          <target state="translated">Seq#size</target>
        </trans-unit>
        <trans-unit id="09021aa50e41c9010bf333b03b33a99459f75ce6" translate="yes" xml:space="preserve">
          <source>Seq#skip()</source>
          <target state="translated">Seq#skip()</target>
        </trans-unit>
        <trans-unit id="3dcf64d0332b64988d64f80c366dbb87b0677c27" translate="yes" xml:space="preserve">
          <source>Seq#skipLast()</source>
          <target state="translated">Seq#skipLast()</target>
        </trans-unit>
        <trans-unit id="9ca73368bd128815e0e66e09805f4b2c3ddec228" translate="yes" xml:space="preserve">
          <source>Seq#skipUntil()</source>
          <target state="translated">Seq#skipUntil()</target>
        </trans-unit>
        <trans-unit id="84d81503a094b35f7d9e4b228c6f2e798f69b2b7" translate="yes" xml:space="preserve">
          <source>Seq#skipWhile()</source>
          <target state="translated">Seq#skipWhile()</target>
        </trans-unit>
        <trans-unit id="bded9119648e6145508353e326b9df4243191155" translate="yes" xml:space="preserve">
          <source>Seq#slice()</source>
          <target state="translated">Seq#slice()</target>
        </trans-unit>
        <trans-unit id="ec4f2f3d4f2e384b52b7f2e20893b6a7a1cdb4cb" translate="yes" xml:space="preserve">
          <source>Seq#some()</source>
          <target state="translated">Seq#some()</target>
        </trans-unit>
        <trans-unit id="4b9ad6529f37b8fcbdd798660a048d7f316a4f8e" translate="yes" xml:space="preserve">
          <source>Seq#sort()</source>
          <target state="translated">Seq#sort()</target>
        </trans-unit>
        <trans-unit id="b6fed0ffc427a752850f15084f5ccc42ab6db4c6" translate="yes" xml:space="preserve">
          <source>Seq#sortBy()</source>
          <target state="translated">Seq#sortBy()</target>
        </trans-unit>
        <trans-unit id="436dcc3ab4e8c5862371fe7ea51b014ea5ce1e32" translate="yes" xml:space="preserve">
          <source>Seq#take()</source>
          <target state="translated">Seq#take()</target>
        </trans-unit>
        <trans-unit id="577a90453c6e49968dc6604cdfa2ac288b3eae31" translate="yes" xml:space="preserve">
          <source>Seq#takeLast()</source>
          <target state="translated">Seq#takeLast()</target>
        </trans-unit>
        <trans-unit id="751bb95babaf56d030d101dd63427932943152a3" translate="yes" xml:space="preserve">
          <source>Seq#takeUntil()</source>
          <target state="translated">Seq#takeUntil()</target>
        </trans-unit>
        <trans-unit id="3587fea1e94fc547f3a020f7858945ade44eaf9a" translate="yes" xml:space="preserve">
          <source>Seq#takeWhile()</source>
          <target state="translated">Seq#takeWhile()</target>
        </trans-unit>
        <trans-unit id="51f0328de42ac5398079d7e00c4ab6de75e625de" translate="yes" xml:space="preserve">
          <source>Seq#toArray()</source>
          <target state="translated">Seq#toArray()</target>
        </trans-unit>
        <trans-unit id="7ae2705dfc0a655e6edc16735216e36f24344a33" translate="yes" xml:space="preserve">
          <source>Seq#toIndexedSeq()</source>
          <target state="translated">Seq#toIndexedSeq()</target>
        </trans-unit>
        <trans-unit id="c4c2e9257a20c1de8f0217c9249fee92fe44ade1" translate="yes" xml:space="preserve">
          <source>Seq#toJS()</source>
          <target state="translated">Seq#toJS()</target>
        </trans-unit>
        <trans-unit id="ad9dd15aecf6b46c46654c82e6d4940f3176b511" translate="yes" xml:space="preserve">
          <source>Seq#toKeyedSeq()</source>
          <target state="translated">Seq#toKeyedSeq()</target>
        </trans-unit>
        <trans-unit id="db0dad10616990ce3ee7b289d8fa9c09d90338c9" translate="yes" xml:space="preserve">
          <source>Seq#toList()</source>
          <target state="translated">Seq#toList()</target>
        </trans-unit>
        <trans-unit id="90587e1b030027114951053b4c803223d771a1ac" translate="yes" xml:space="preserve">
          <source>Seq#toMap()</source>
          <target state="translated">Seq#toMap()</target>
        </trans-unit>
        <trans-unit id="53c45fd33e806ebb9fae010cbeba9cc8cf3a27b8" translate="yes" xml:space="preserve">
          <source>Seq#toObject()</source>
          <target state="translated">Seq#toObject()</target>
        </trans-unit>
        <trans-unit id="db065fbd1b8eeb56c5a86db54028605e0c37f7c7" translate="yes" xml:space="preserve">
          <source>Seq#toOrderedMap()</source>
          <target state="translated">Seq#toOrderedMap()</target>
        </trans-unit>
        <trans-unit id="2eb2aca939b87859bc1eadb3b41bd5ecdadbc6bb" translate="yes" xml:space="preserve">
          <source>Seq#toOrderedSet()</source>
          <target state="translated">Seq#toOrderedSet()</target>
        </trans-unit>
        <trans-unit id="46d41207f5558eddd853c1e2815c4c77b718fe34" translate="yes" xml:space="preserve">
          <source>Seq#toSeq()</source>
          <target state="translated">Seq#toSeq()</target>
        </trans-unit>
        <trans-unit id="73df53ab50e22ef6cd39d892e22009de3cee1350" translate="yes" xml:space="preserve">
          <source>Seq#toSet()</source>
          <target state="translated">Seq#toSet()</target>
        </trans-unit>
        <trans-unit id="c53725139139019ccb869b5e6d159a3803ce2c08" translate="yes" xml:space="preserve">
          <source>Seq#toSetSeq()</source>
          <target state="translated">Seq#toSetSeq()</target>
        </trans-unit>
        <trans-unit id="bfd7776e9b60f5c2132e65b274dcd2b980cfee70" translate="yes" xml:space="preserve">
          <source>Seq#toStack()</source>
          <target state="translated">Seq#toStack()</target>
        </trans-unit>
        <trans-unit id="8212f318a5aba6a52f22fbcfbcafceee68f6d1b7" translate="yes" xml:space="preserve">
          <source>Seq#valueSeq()</source>
          <target state="translated">Seq#valueSeq()</target>
        </trans-unit>
        <trans-unit id="84af7a7b31ca4d207d32989fe2b5cadec89a62b4" translate="yes" xml:space="preserve">
          <source>Seq#values()</source>
          <target state="translated">Seq#values()</target>
        </trans-unit>
        <trans-unit id="7d99141bb185b07e93a87fa35381b22201ae00e6" translate="yes" xml:space="preserve">
          <source>Seq()</source>
          <target state="translated">Seq()</target>
        </trans-unit>
        <trans-unit id="95f6df495ec701cb9f7cf320d8d5ccecd0b36c9b" translate="yes" xml:space="preserve">
          <source>Seq.Keyed</source>
          <target state="translated">Seq.Keyed</target>
        </trans-unit>
        <trans-unit id="fbb9f766f7bbb5f35816b48e5c2f4b52b64f0c65" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#butLast()</source>
          <target state="translated">Seq.Keyed#butLast()</target>
        </trans-unit>
        <trans-unit id="51871edafefb6dddc99a12fb9e48dfcaac00bf73" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#cacheResult()</source>
          <target state="translated">Seq.Keyed#cacheResult()</target>
        </trans-unit>
        <trans-unit id="584fb4052f0425a134ddd58936789b370946182d" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#concat()</source>
          <target state="translated">Seq.Keyed#concat()</target>
        </trans-unit>
        <trans-unit id="be3e9153d4d3b7de942147d5dac0e064ce14d83e" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#count()</source>
          <target state="translated">Seq.Keyed#count()</target>
        </trans-unit>
        <trans-unit id="486c6689e86d9cb3636869eabd7a935898523d4a" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#countBy()</source>
          <target state="translated">Seq.Keyed#countBy()</target>
        </trans-unit>
        <trans-unit id="46b3c4dc09192a4d1dc0a08891d9a14d0b0ae2ea" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#entries()</source>
          <target state="translated">Seq.Keyed#entries()</target>
        </trans-unit>
        <trans-unit id="fd00c6380501372e789497c5622326354fb42ac2" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#entrySeq()</source>
          <target state="translated">Seq.Keyed#entrySeq()</target>
        </trans-unit>
        <trans-unit id="ef551879cfc1df34c16800395cc0fe5ed5a867c6" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#equals()</source>
          <target state="translated">Seq.Keyed#equals()</target>
        </trans-unit>
        <trans-unit id="678448cc91b3c5b72da7f1f6542fa30571074afc" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#every()</source>
          <target state="translated">Seq.Keyed#every()</target>
        </trans-unit>
        <trans-unit id="c0edd404f885a3af0b067fbe029a46567920163b" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#filter()</source>
          <target state="translated">Seq.Keyed#filter()</target>
        </trans-unit>
        <trans-unit id="5293d3cfc51f4c78e22e1624768a50e2fe6906e6" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#filterNot()</source>
          <target state="translated">Seq.Keyed#filterNot()</target>
        </trans-unit>
        <trans-unit id="640adafb7bf8eebfea4e6aa3a2aa5990bee15471" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#find()</source>
          <target state="translated">Seq.Keyed#find()</target>
        </trans-unit>
        <trans-unit id="c5e17a4c96e13096be9ce42e277a327a866c0d72" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#findEntry()</source>
          <target state="translated">Seq.Keyed#findEntry()</target>
        </trans-unit>
        <trans-unit id="899e6bca60d8f1de6952c09805428b5dadaa01df" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#findKey()</source>
          <target state="translated">Seq.Keyed#findKey()</target>
        </trans-unit>
        <trans-unit id="08bc204d00d20fc68300a67a6643b0f8b6afe5b3" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#findLast()</source>
          <target state="translated">Seq.Keyed#findLast()</target>
        </trans-unit>
        <trans-unit id="7f2c447d7844155042bab3b5256b655c8f1c3efe" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#findLastEntry()</source>
          <target state="translated">Seq.Keyed#findLastEntry()</target>
        </trans-unit>
        <trans-unit id="273018e60213ce89e39519c7148df5282a1bc056" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#findLastKey()</source>
          <target state="translated">Seq.Keyed#findLastKey()</target>
        </trans-unit>
        <trans-unit id="ac0bb4869a34825c92e2b650e7e8bf5d87da91db" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#first()</source>
          <target state="translated">Seq.Keyed#first()</target>
        </trans-unit>
        <trans-unit id="5928255dca392b6304e70565ce2d9f97bf12a679" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#flatMap()</source>
          <target state="translated">Seq.Keyed#flatMap()</target>
        </trans-unit>
        <trans-unit id="9cb20c6577ae5d4a935be6b3a4108cf8ceb8ebc4" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#flatten()</source>
          <target state="translated">Seq.Keyed#flatten()</target>
        </trans-unit>
        <trans-unit id="6cfe100e481d68f497ecf3e374d4806a953637cd" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#flip()</source>
          <target state="translated">Seq.Keyed#flip()</target>
        </trans-unit>
        <trans-unit id="7490674b024c7f9c1b564992031e2c00e9c226e3" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#forEach()</source>
          <target state="translated">Seq.Keyed#forEach()</target>
        </trans-unit>
        <trans-unit id="59e928afe4cbaf3be890b4723f50e1bd20e6a30c" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#get()</source>
          <target state="translated">Seq.Keyed#get()</target>
        </trans-unit>
        <trans-unit id="8f911ffdc649760c1fa950b3cd4a87963ca36fd4" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#getIn()</source>
          <target state="translated">Seq.Keyed#getIn()</target>
        </trans-unit>
        <trans-unit id="1bec8facc75a0ddd6321b2345a65fd4df81dc489" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#groupBy()</source>
          <target state="translated">Seq.Keyed#groupBy()</target>
        </trans-unit>
        <trans-unit id="285c395e21675b39885be4083a39e30fe1ec974d" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#has()</source>
          <target state="translated">Seq.Keyed#has()</target>
        </trans-unit>
        <trans-unit id="5a2e4a50d8cef71ce011c405b436f7e7cf063a13" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#hasIn()</source>
          <target state="translated">Seq.Keyed#hasIn()</target>
        </trans-unit>
        <trans-unit id="a796a48cf0cb4be6de268f2cd9030e0bf3c8c171" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#hashCode()</source>
          <target state="translated">Seq.Keyed#hashCode()</target>
        </trans-unit>
        <trans-unit id="f394110f8b0668e23529b5c5a5dfe4434969903d" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#includes()</source>
          <target state="translated">Seq.Keyed#includes()</target>
        </trans-unit>
        <trans-unit id="a8615be23177fa8ff2b815c4c6415efc0e0912f2" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#isEmpty()</source>
          <target state="translated">Seq.Keyed#isEmpty()</target>
        </trans-unit>
        <trans-unit id="012c087d8230cb71d96021861d572933ff0cfac0" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#isSubset()</source>
          <target state="translated">Seq.Keyed#isSubset()</target>
        </trans-unit>
        <trans-unit id="793868e9a9036062502ec1d79d2d873504aff7f3" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#isSuperset()</source>
          <target state="translated">Seq.Keyed#isSuperset()</target>
        </trans-unit>
        <trans-unit id="4a2222a50c0eb58745c386574eb49732b13e6e52" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#join()</source>
          <target state="translated">Seq.Keyed#join()</target>
        </trans-unit>
        <trans-unit id="a4094cbc27d51b7acd75695d6211a21c5a1c1101" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#keyOf()</source>
          <target state="translated">Seq.Keyed#keyOf()</target>
        </trans-unit>
        <trans-unit id="766a5b714191a426963b6804961f80b9092ca8aa" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#keySeq()</source>
          <target state="translated">Seq.Keyed#keySeq()</target>
        </trans-unit>
        <trans-unit id="6dff9fb3987dbc6b23ab09662bb2de3d5ea7e2d8" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#keys()</source>
          <target state="translated">Seq.Keyed#keys()</target>
        </trans-unit>
        <trans-unit id="5abd3172ed45bdb7a6da8e547e1be30ac072c61b" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#last()</source>
          <target state="translated">Seq.Keyed#last()</target>
        </trans-unit>
        <trans-unit id="4c7a620ddd3ed5522cfb66b5954a1459e208ea24" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#lastKeyOf()</source>
          <target state="translated">Seq.Keyed#lastKeyOf()</target>
        </trans-unit>
        <trans-unit id="eaa9861bf1185cc7cff59ad4670052d442acc1a9" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#map()</source>
          <target state="translated">Seq.Keyed#map()</target>
        </trans-unit>
        <trans-unit id="1cffc29fb7f40334f98212b99c5899d55d1ee983" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#mapEntries()</source>
          <target state="translated">Seq.Keyed#mapEntries()</target>
        </trans-unit>
        <trans-unit id="87b60643638cc4a4771f85e4649b296d6a8386df" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#mapKeys()</source>
          <target state="translated">Seq.Keyed#mapKeys()</target>
        </trans-unit>
        <trans-unit id="38148640375a4dd1108000d547a735b544a236d5" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#max()</source>
          <target state="translated">Seq.Keyed#max()</target>
        </trans-unit>
        <trans-unit id="ed16a71689cb41b8152b771192d5a37524c3acdf" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#maxBy()</source>
          <target state="translated">Seq.Keyed#maxBy()</target>
        </trans-unit>
        <trans-unit id="822be1adec0a8a98692de65cd2cbd61f486f6e4d" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#min()</source>
          <target state="translated">Seq.Keyed#min()</target>
        </trans-unit>
        <trans-unit id="90ca61628cc7360b75822290f1d39b81c1a85ba7" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#minBy()</source>
          <target state="translated">Seq.Keyed#minBy()</target>
        </trans-unit>
        <trans-unit id="591c3159904d011320a3e9e8499c3be72584d029" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#reduce()</source>
          <target state="translated">Seq.Keyed#reduce()</target>
        </trans-unit>
        <trans-unit id="2b826df7af445eae150138dfee5b194983144af7" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#reduceRight()</source>
          <target state="translated">Seq.Keyed#reduceRight()</target>
        </trans-unit>
        <trans-unit id="1cc96eb11a8b104e990a4c8bb58f7cb0c71f5a03" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#rest()</source>
          <target state="translated">Seq.Keyed#rest()</target>
        </trans-unit>
        <trans-unit id="58e313c36f186d0bf74e78feda5cd4da4bddc8be" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#reverse()</source>
          <target state="translated">Seq.Keyed#reverse()</target>
        </trans-unit>
        <trans-unit id="dbab8d3a35edae857caf82254aa2c03bc14abe06" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#size</source>
          <target state="translated">Seq.Keyed#size</target>
        </trans-unit>
        <trans-unit id="2624244e5e0ccd8602fd061e7941c132f1ec75dc" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#skip()</source>
          <target state="translated">Seq.Keyed#skip()</target>
        </trans-unit>
        <trans-unit id="708d1c76ab2f6b6160acf3575286ae0e8f64d23c" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#skipLast()</source>
          <target state="translated">Seq.Keyed#skipLast()</target>
        </trans-unit>
        <trans-unit id="f30f44122684f7d7f31993f3577b0fdc0c5f6dd8" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#skipUntil()</source>
          <target state="translated">Seq.Keyed#skipUntil()</target>
        </trans-unit>
        <trans-unit id="f4e39f69ee5abe8e7ea108c62f3514ab229de44c" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#skipWhile()</source>
          <target state="translated">Seq.Keyed#skipWhile()</target>
        </trans-unit>
        <trans-unit id="396965c14e85fdec7931f8bfe79ae770a2c7c9df" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#slice()</source>
          <target state="translated">Seq.Keyed#slice()</target>
        </trans-unit>
        <trans-unit id="36bf2063df923966de55514f8f964c675af1bc51" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#some()</source>
          <target state="translated">Seq.Keyed#some()</target>
        </trans-unit>
        <trans-unit id="98dbbc141f35636d535be1e230cdb7e28381a077" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#sort()</source>
          <target state="translated">Seq.Keyed#sort()</target>
        </trans-unit>
        <trans-unit id="62661b7bc2dd61acdbdb400e16c401db97527144" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#sortBy()</source>
          <target state="translated">Seq.Keyed#sortBy()</target>
        </trans-unit>
        <trans-unit id="5adca01b3d85a95d9d754ce3a54261f189558b4b" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#take()</source>
          <target state="translated">Seq.Keyed#take()</target>
        </trans-unit>
        <trans-unit id="3026cbb12b890aac6a70ade23523568bb943b383" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#takeLast()</source>
          <target state="translated">Seq.Keyed#takeLast()</target>
        </trans-unit>
        <trans-unit id="b1a58ccbcd15eb5cdd524cb7536fbb70876883b5" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#takeUntil()</source>
          <target state="translated">Seq.Keyed#takeUntil()</target>
        </trans-unit>
        <trans-unit id="9ef85abea9a0707b9433a47dd7b76860d63752c3" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#takeWhile()</source>
          <target state="translated">Seq.Keyed#takeWhile()</target>
        </trans-unit>
        <trans-unit id="b005dfae551f6cca61ced6b136eafa5f03f06cab" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#toArray()</source>
          <target state="translated">Seq.Keyed#toArray()</target>
        </trans-unit>
        <trans-unit id="cff7b2e20bb0b9cd3c0e37c9ef4d0ca237fe8416" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#toIndexedSeq()</source>
          <target state="translated">Seq.Keyed#toIndexedSeq()</target>
        </trans-unit>
        <trans-unit id="85cbfafe22ac1c8029c95fb6914e47fde250ffcd" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#toJS()</source>
          <target state="translated">Seq.Keyed#toJS()</target>
        </trans-unit>
        <trans-unit id="b0ffd128b43c13e5fd601ce2a0eaa0cdd5fbefc5" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#toKeyedSeq()</source>
          <target state="translated">Seq.Keyed#toKeyedSeq()</target>
        </trans-unit>
        <trans-unit id="5fd75451af55db4abd0e26570f17eb7e2bebcb80" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#toList()</source>
          <target state="translated">Seq.Keyed#toList()</target>
        </trans-unit>
        <trans-unit id="47a91eefa7f11a26651d5dbd7b02a1028f6aa641" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#toMap()</source>
          <target state="translated">Seq.Keyed#toMap()</target>
        </trans-unit>
        <trans-unit id="b1895992b8e348bea7632cf94da882cf1cf03b7f" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#toObject()</source>
          <target state="translated">Seq.Keyed#toObject()</target>
        </trans-unit>
        <trans-unit id="71745f854cc8b6e5e46c049363e7f48c5f5a1d16" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#toOrderedMap()</source>
          <target state="translated">Seq.Keyed#toOrderedMap()</target>
        </trans-unit>
        <trans-unit id="63c30434cbd5dcb0f2b292fa7825649288aa7631" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#toOrderedSet()</source>
          <target state="translated">Seq.Keyed#toOrderedSet()</target>
        </trans-unit>
        <trans-unit id="72cb0caa23bd9d7dd59215bd530791f2ec9eecb5" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#toSeq()</source>
          <target state="translated">Seq.Keyed#toSeq()</target>
        </trans-unit>
        <trans-unit id="e814703299585fef1cb47e7c4295e1eea44dbb16" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#toSet()</source>
          <target state="translated">Seq.Keyed#toSet()</target>
        </trans-unit>
        <trans-unit id="5ee2cbb14f1de5e2d9450e3327fd950b0859a977" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#toSetSeq()</source>
          <target state="translated">Seq.Keyed#toSetSeq()</target>
        </trans-unit>
        <trans-unit id="201283513c17fe00e25f3fa9f1e9e160ab7d6b48" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#toStack()</source>
          <target state="translated">Seq.Keyed#toStack()</target>
        </trans-unit>
        <trans-unit id="b9bf206302e0ba30ee48f4f9627e9081a0be2937" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#valueSeq()</source>
          <target state="translated">Seq.Keyed#valueSeq()</target>
        </trans-unit>
        <trans-unit id="2a9031b5ca23dd5526f7ced2dec4b27c565bcad4" translate="yes" xml:space="preserve">
          <source>Seq.Keyed#values()</source>
          <target state="translated">Seq.Keyed#values()</target>
        </trans-unit>
        <trans-unit id="0bdd24c9a0ad5ef3c4eb9b8c77c9edcb970a414f" translate="yes" xml:space="preserve">
          <source>Seq.Keyed()</source>
          <target state="translated">Seq.Keyed()</target>
        </trans-unit>
        <trans-unit id="6c1344a84cd691b22d4e1438ef8c9a5aa3b203c7" translate="yes" xml:space="preserve">
          <source>Seq.isSeq()</source>
          <target state="translated">Seq.isSeq()</target>
        </trans-unit>
        <trans-unit id="2fe49a4164f32d32639cfc554321cc1361815857" translate="yes" xml:space="preserve">
          <source>Seq.of()</source>
          <target state="translated">Seq.of()</target>
        </trans-unit>
        <trans-unit id="c80aaad72adcedb29d3a9748ab67d3d6a9af9de5" translate="yes" xml:space="preserve">
          <source>Sequence algorithms</source>
          <target state="translated">Алгоритмы последовательности</target>
        </trans-unit>
        <trans-unit id="c4b854a59e9e7aff11416a488d0d7d37708a262f" translate="yes" xml:space="preserve">
          <source>Sequence functions</source>
          <target state="translated">Функции последовательности</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="9f0398eb369f7a6432948dab70133cc8c795945b" translate="yes" xml:space="preserve">
          <source>Set values, like Map keys, may be of any type. Equality is determined using &lt;code&gt;&lt;a href=&quot;#is&quot;&gt;Immutable.is&lt;/a&gt;&lt;/code&gt;, enabling Sets to uniquely include other Immutable collections, custom value types, and NaN.</source>
          <target state="translated">Значения набора, такие как ключи карты, могут быть любого типа. Равенство определяется с помощью &lt;code&gt;&lt;a href=&quot;#is&quot;&gt;Immutable.is&lt;/a&gt;&lt;/code&gt; , что позволяет сетам однозначно включать другие неизменяемые коллекции, настраиваемые типы значений и NaN.</target>
        </trans-unit>
        <trans-unit id="2b45fda477b21e4f16014a69fd262497947ad40a" translate="yes" xml:space="preserve">
          <source>Set#add()</source>
          <target state="translated">Set#add()</target>
        </trans-unit>
        <trans-unit id="deb7e55331f83029ab020e476769951dd883071e" translate="yes" xml:space="preserve">
          <source>Set#asImmutable()</source>
          <target state="translated">Set#asImmutable()</target>
        </trans-unit>
        <trans-unit id="b19e858e215aa0feb24b15da65569f57dd48c47d" translate="yes" xml:space="preserve">
          <source>Set#asMutable()</source>
          <target state="translated">Set#asMutable()</target>
        </trans-unit>
        <trans-unit id="39a7455130bc8fbacf13fbce66076116f1b05b92" translate="yes" xml:space="preserve">
          <source>Set#butLast()</source>
          <target state="translated">Set#butLast()</target>
        </trans-unit>
        <trans-unit id="d58182da64fd7d21e074968f860f94afff009b41" translate="yes" xml:space="preserve">
          <source>Set#clear()</source>
          <target state="translated">Set#clear()</target>
        </trans-unit>
        <trans-unit id="88d3066b2f4507f7950c9483e9a2970c594788fa" translate="yes" xml:space="preserve">
          <source>Set#concat()</source>
          <target state="translated">Set#concat()</target>
        </trans-unit>
        <trans-unit id="ce99be4e1a81c7864e6011aabaaaa06e2ff12e20" translate="yes" xml:space="preserve">
          <source>Set#count()</source>
          <target state="translated">Set#count()</target>
        </trans-unit>
        <trans-unit id="ab13e95013016d805f262d90d7d21378f69baac7" translate="yes" xml:space="preserve">
          <source>Set#countBy()</source>
          <target state="translated">Set#countBy()</target>
        </trans-unit>
        <trans-unit id="d9f49e71197f04e81fb14b593cc3f6ee76d902a0" translate="yes" xml:space="preserve">
          <source>Set#delete()</source>
          <target state="translated">Set#delete()</target>
        </trans-unit>
        <trans-unit id="c904dd4ba0afb859fd6bcbc8493bee9c5b37076a" translate="yes" xml:space="preserve">
          <source>Set#entries()</source>
          <target state="translated">Set#entries()</target>
        </trans-unit>
        <trans-unit id="7733be0de5b69dbe772a92b35fd2d6b8fae7495a" translate="yes" xml:space="preserve">
          <source>Set#entrySeq()</source>
          <target state="translated">Set#entrySeq()</target>
        </trans-unit>
        <trans-unit id="bb942b7bd7c46410bbe809e0e2a6daa8bca3dec7" translate="yes" xml:space="preserve">
          <source>Set#equals()</source>
          <target state="translated">Set#equals()</target>
        </trans-unit>
        <trans-unit id="724660c5f5e8203f8f9ec91255f3926d854f45b9" translate="yes" xml:space="preserve">
          <source>Set#every()</source>
          <target state="translated">Set#every()</target>
        </trans-unit>
        <trans-unit id="e22b6b16b097fe992e7878f5df5d5e00915628dd" translate="yes" xml:space="preserve">
          <source>Set#filter()</source>
          <target state="translated">Set#filter()</target>
        </trans-unit>
        <trans-unit id="f88e05f87c06216d881f8c93b7eb714214faa42c" translate="yes" xml:space="preserve">
          <source>Set#filterNot()</source>
          <target state="translated">Set#filterNot()</target>
        </trans-unit>
        <trans-unit id="a468ddcf30a37781a349aaa6621bb4ae1f84884a" translate="yes" xml:space="preserve">
          <source>Set#find()</source>
          <target state="translated">Set#find()</target>
        </trans-unit>
        <trans-unit id="3c38d0f222f1f8d634b3291a1570bbb3d0970d3e" translate="yes" xml:space="preserve">
          <source>Set#findEntry()</source>
          <target state="translated">Set#findEntry()</target>
        </trans-unit>
        <trans-unit id="386701bcee453b058f15a84d82810a0090af5a46" translate="yes" xml:space="preserve">
          <source>Set#findKey()</source>
          <target state="translated">Set#findKey()</target>
        </trans-unit>
        <trans-unit id="14ac6c6c9f33b02190cf480911d1eebb5c8f4909" translate="yes" xml:space="preserve">
          <source>Set#findLast()</source>
          <target state="translated">Set#findLast()</target>
        </trans-unit>
        <trans-unit id="22c748731b199f310139dc80f22a75f1289985b8" translate="yes" xml:space="preserve">
          <source>Set#findLastEntry()</source>
          <target state="translated">Set#findLastEntry()</target>
        </trans-unit>
        <trans-unit id="2cf6e62bb71402e07a5bb3e5949a77fb67e032d3" translate="yes" xml:space="preserve">
          <source>Set#findLastKey()</source>
          <target state="translated">Set#findLastKey()</target>
        </trans-unit>
        <trans-unit id="d47f132937185aa96f91942cd2523beaa7f20b8e" translate="yes" xml:space="preserve">
          <source>Set#first()</source>
          <target state="translated">Set#first()</target>
        </trans-unit>
        <trans-unit id="323851efb6cf06fa6a1ab78adb6e671019519150" translate="yes" xml:space="preserve">
          <source>Set#flatMap()</source>
          <target state="translated">Set#flatMap()</target>
        </trans-unit>
        <trans-unit id="ac5d22ec70e43ed271b63c219f41e03bb9642b86" translate="yes" xml:space="preserve">
          <source>Set#flatten()</source>
          <target state="translated">Set#flatten()</target>
        </trans-unit>
        <trans-unit id="049eea119deb365fd9859db5898990479794904d" translate="yes" xml:space="preserve">
          <source>Set#forEach()</source>
          <target state="translated">Set#forEach()</target>
        </trans-unit>
        <trans-unit id="909534dc85d3468390e66f7cebe77bf24d9bc3db" translate="yes" xml:space="preserve">
          <source>Set#get()</source>
          <target state="translated">Set#get()</target>
        </trans-unit>
        <trans-unit id="2b9ae8459c389a29a25eac02fcd6f13c76eb100e" translate="yes" xml:space="preserve">
          <source>Set#getIn()</source>
          <target state="translated">Set#getIn()</target>
        </trans-unit>
        <trans-unit id="da1f006bd6a319e9860140ef336c7052ef38effd" translate="yes" xml:space="preserve">
          <source>Set#groupBy()</source>
          <target state="translated">Set#groupBy()</target>
        </trans-unit>
        <trans-unit id="1255bddbe33672e9c4fe4330653bbb8af4596bd5" translate="yes" xml:space="preserve">
          <source>Set#has()</source>
          <target state="translated">Set#has()</target>
        </trans-unit>
        <trans-unit id="1568f7b8822ed802cbf827c5b591ce3a7c99031b" translate="yes" xml:space="preserve">
          <source>Set#hasIn()</source>
          <target state="translated">Set#hasIn()</target>
        </trans-unit>
        <trans-unit id="170dfd144e42c0edc610dc0af70f400cbac3ba4c" translate="yes" xml:space="preserve">
          <source>Set#hashCode()</source>
          <target state="translated">Set#hashCode()</target>
        </trans-unit>
        <trans-unit id="648d3e3c95f213c87cf312069ad38de0308bbaf5" translate="yes" xml:space="preserve">
          <source>Set#includes()</source>
          <target state="translated">Set#includes()</target>
        </trans-unit>
        <trans-unit id="daac326bbbc6acda8f1f5764bc746b9d0eb53df9" translate="yes" xml:space="preserve">
          <source>Set#intersect()</source>
          <target state="translated">Set#intersect()</target>
        </trans-unit>
        <trans-unit id="469536fd3a0be849d4f1efe71d835503a1827d0c" translate="yes" xml:space="preserve">
          <source>Set#isEmpty()</source>
          <target state="translated">Set#isEmpty()</target>
        </trans-unit>
        <trans-unit id="af1f27db01c41e63853e8f3d185ebadce1dd73ad" translate="yes" xml:space="preserve">
          <source>Set#isSubset()</source>
          <target state="translated">Set#isSubset()</target>
        </trans-unit>
        <trans-unit id="2932709749fe45a67f16c0a2ab50bc8cbf328922" translate="yes" xml:space="preserve">
          <source>Set#isSuperset()</source>
          <target state="translated">Set#isSuperset()</target>
        </trans-unit>
        <trans-unit id="98a681bbe78f3cdd5095c1738f77dba5ca991108" translate="yes" xml:space="preserve">
          <source>Set#join()</source>
          <target state="translated">Set#join()</target>
        </trans-unit>
        <trans-unit id="f13d64080f4b6319f93e6a84af39ecd7bdddef7a" translate="yes" xml:space="preserve">
          <source>Set#keyOf()</source>
          <target state="translated">Set#keyOf()</target>
        </trans-unit>
        <trans-unit id="2995d3efac7976a205a7caccdefb3c581d4a1fe7" translate="yes" xml:space="preserve">
          <source>Set#keySeq()</source>
          <target state="translated">Set#keySeq()</target>
        </trans-unit>
        <trans-unit id="7b453ddd014b0c3437c59fcf13157b7d1e9ea0d9" translate="yes" xml:space="preserve">
          <source>Set#keys()</source>
          <target state="translated">Set#keys()</target>
        </trans-unit>
        <trans-unit id="ee4ebb1fc390253db3f2ff28cdc74cfffff0c9f3" translate="yes" xml:space="preserve">
          <source>Set#last()</source>
          <target state="translated">Set#last()</target>
        </trans-unit>
        <trans-unit id="c3bfde258f7ea8aa7adf986d5eea013ea3193efc" translate="yes" xml:space="preserve">
          <source>Set#lastKeyOf()</source>
          <target state="translated">Set#lastKeyOf()</target>
        </trans-unit>
        <trans-unit id="ff1c1bc53a1a859641a72cd8438e42e34da309d7" translate="yes" xml:space="preserve">
          <source>Set#map()</source>
          <target state="translated">Set#map()</target>
        </trans-unit>
        <trans-unit id="c61fcdff82f10133b892273431e6ee9676775523" translate="yes" xml:space="preserve">
          <source>Set#max()</source>
          <target state="translated">Set#max()</target>
        </trans-unit>
        <trans-unit id="3aa74126cbfc17832f1e3c563afe5b35443dfe74" translate="yes" xml:space="preserve">
          <source>Set#maxBy()</source>
          <target state="translated">Set#maxBy()</target>
        </trans-unit>
        <trans-unit id="a324e97d084b54f43989dc428a43ac6f8676d816" translate="yes" xml:space="preserve">
          <source>Set#min()</source>
          <target state="translated">Set#min()</target>
        </trans-unit>
        <trans-unit id="72931038defb920f4b0728b8ed09cfb2f63b36ae" translate="yes" xml:space="preserve">
          <source>Set#minBy()</source>
          <target state="translated">Set#minBy()</target>
        </trans-unit>
        <trans-unit id="b37e98828c46df41566f9e0d9ce913c03cc69311" translate="yes" xml:space="preserve">
          <source>Set#reduce()</source>
          <target state="translated">Set#reduce()</target>
        </trans-unit>
        <trans-unit id="55c8d04ce9f6a3d192b8636bfe805aadcc4702a8" translate="yes" xml:space="preserve">
          <source>Set#reduceRight()</source>
          <target state="translated">Set#reduceRight()</target>
        </trans-unit>
        <trans-unit id="0ddda2cbb12c831e3a0cceea22d73a96b76d8bf2" translate="yes" xml:space="preserve">
          <source>Set#rest()</source>
          <target state="translated">Set#rest()</target>
        </trans-unit>
        <trans-unit id="a77f3638399d8c0d68c0f7038117825ea16677d1" translate="yes" xml:space="preserve">
          <source>Set#reverse()</source>
          <target state="translated">Set#reverse()</target>
        </trans-unit>
        <trans-unit id="d6fd41985a486919195c7c683229548660ef92b5" translate="yes" xml:space="preserve">
          <source>Set#size</source>
          <target state="translated">Set#size</target>
        </trans-unit>
        <trans-unit id="039689e51a5b282916f98f02d413f8c8c22f81ca" translate="yes" xml:space="preserve">
          <source>Set#skip()</source>
          <target state="translated">Set#skip()</target>
        </trans-unit>
        <trans-unit id="912ea074098a7abed665a181eb6e604bb4e1dfa9" translate="yes" xml:space="preserve">
          <source>Set#skipLast()</source>
          <target state="translated">Set#skipLast()</target>
        </trans-unit>
        <trans-unit id="8457ca8f0ac342dfc57fed79fde27410114365ad" translate="yes" xml:space="preserve">
          <source>Set#skipUntil()</source>
          <target state="translated">Set#skipUntil()</target>
        </trans-unit>
        <trans-unit id="9e89ff08cf375578b47540775548a03b48430a63" translate="yes" xml:space="preserve">
          <source>Set#skipWhile()</source>
          <target state="translated">Set#skipWhile()</target>
        </trans-unit>
        <trans-unit id="2e2f71c0a98462bcfab96d9f54c62a1b3b061666" translate="yes" xml:space="preserve">
          <source>Set#slice()</source>
          <target state="translated">Set#slice()</target>
        </trans-unit>
        <trans-unit id="e620bc512639112f2c137a51b5e870d34af7a793" translate="yes" xml:space="preserve">
          <source>Set#some()</source>
          <target state="translated">Set#some()</target>
        </trans-unit>
        <trans-unit id="5f2a7dedb021868a99202df4726aee652aac7c85" translate="yes" xml:space="preserve">
          <source>Set#sort()</source>
          <target state="translated">Set#sort()</target>
        </trans-unit>
        <trans-unit id="f86b64156c40c8e0351419fd753d2c5d9c15f8c8" translate="yes" xml:space="preserve">
          <source>Set#sortBy()</source>
          <target state="translated">Set#sortBy()</target>
        </trans-unit>
        <trans-unit id="25f043bc35ec05b116d510f15bffe4bbe76b79b3" translate="yes" xml:space="preserve">
          <source>Set#subtract()</source>
          <target state="translated">Set#subtract()</target>
        </trans-unit>
        <trans-unit id="0790e102f0a742de4146479439c9fc98607c21a8" translate="yes" xml:space="preserve">
          <source>Set#take()</source>
          <target state="translated">Set#take()</target>
        </trans-unit>
        <trans-unit id="fb65d22e64c1cb7f423c71afda506d8f689023bf" translate="yes" xml:space="preserve">
          <source>Set#takeLast()</source>
          <target state="translated">Set#takeLast()</target>
        </trans-unit>
        <trans-unit id="5cff2a2c3a0844501160b79b566024c53308af9d" translate="yes" xml:space="preserve">
          <source>Set#takeUntil()</source>
          <target state="translated">Set#takeUntil()</target>
        </trans-unit>
        <trans-unit id="a441be92d32b6b421157c565e7bb2c5a516b8750" translate="yes" xml:space="preserve">
          <source>Set#takeWhile()</source>
          <target state="translated">Set#takeWhile()</target>
        </trans-unit>
        <trans-unit id="6200633206bb69fbf9ba7a6f7a35e10733429779" translate="yes" xml:space="preserve">
          <source>Set#toArray()</source>
          <target state="translated">Set#toArray()</target>
        </trans-unit>
        <trans-unit id="8270194496b6d4881c081e0c63e5151b1c654860" translate="yes" xml:space="preserve">
          <source>Set#toIndexedSeq()</source>
          <target state="translated">Set#toIndexedSeq()</target>
        </trans-unit>
        <trans-unit id="62853a2ea92856d43a0637614a660b075ae1f72e" translate="yes" xml:space="preserve">
          <source>Set#toJS()</source>
          <target state="translated">Set#toJS()</target>
        </trans-unit>
        <trans-unit id="82686d0696e6d73f84680ab6261ee966ce419f6c" translate="yes" xml:space="preserve">
          <source>Set#toKeyedSeq()</source>
          <target state="translated">Set#toKeyedSeq()</target>
        </trans-unit>
        <trans-unit id="9343e0d698c85ee5a2af32e8a15aec44e62bb295" translate="yes" xml:space="preserve">
          <source>Set#toList()</source>
          <target state="translated">Set#toList()</target>
        </trans-unit>
        <trans-unit id="76249190b686ea11b7e4beaac5c15a0ef39f66ca" translate="yes" xml:space="preserve">
          <source>Set#toMap()</source>
          <target state="translated">Set#toMap()</target>
        </trans-unit>
        <trans-unit id="0b265412c014025d90c2e0e3453f28976eab0483" translate="yes" xml:space="preserve">
          <source>Set#toObject()</source>
          <target state="translated">Set#toObject()</target>
        </trans-unit>
        <trans-unit id="c016d7b98ad616a001242860eff219f6667bd0eb" translate="yes" xml:space="preserve">
          <source>Set#toOrderedMap()</source>
          <target state="translated">Set#toOrderedMap()</target>
        </trans-unit>
        <trans-unit id="1053406cd1cd66fed618dbc23b21f4afd9969320" translate="yes" xml:space="preserve">
          <source>Set#toOrderedSet()</source>
          <target state="translated">Set#toOrderedSet()</target>
        </trans-unit>
        <trans-unit id="5015b13aeafc6be10cdeeddb7d16d677e3116129" translate="yes" xml:space="preserve">
          <source>Set#toSeq()</source>
          <target state="translated">Set#toSeq()</target>
        </trans-unit>
        <trans-unit id="1e37acb83491a53ba5e0fdfc68191639fbd1770f" translate="yes" xml:space="preserve">
          <source>Set#toSet()</source>
          <target state="translated">Set#toSet()</target>
        </trans-unit>
        <trans-unit id="49cbc4b5f7097c212b3cc215adf3711dae70ebcb" translate="yes" xml:space="preserve">
          <source>Set#toSetSeq()</source>
          <target state="translated">Set#toSetSeq()</target>
        </trans-unit>
        <trans-unit id="1f3ca4a87510720b1f64e80cce5e28dcd9047590" translate="yes" xml:space="preserve">
          <source>Set#toStack()</source>
          <target state="translated">Set#toStack()</target>
        </trans-unit>
        <trans-unit id="cbbdbe5bf7fb862017a964c2bf19117695a26dc2" translate="yes" xml:space="preserve">
          <source>Set#union()</source>
          <target state="translated">Set#union()</target>
        </trans-unit>
        <trans-unit id="1706eb37bf24dc7e5854040232c324c07151bb71" translate="yes" xml:space="preserve">
          <source>Set#valueSeq()</source>
          <target state="translated">Set#valueSeq()</target>
        </trans-unit>
        <trans-unit id="c12d92c4cbfd9ce5c01c65f0810be90f3b8cdc9e" translate="yes" xml:space="preserve">
          <source>Set#values()</source>
          <target state="translated">Set#values()</target>
        </trans-unit>
        <trans-unit id="31e4d5adfdb7f35f2d623cc7be36cacc157cc1fb" translate="yes" xml:space="preserve">
          <source>Set#withMutations()</source>
          <target state="translated">Set#withMutations()</target>
        </trans-unit>
        <trans-unit id="8c508756b6b9c73f1bee3456750e6ecc6296afab" translate="yes" xml:space="preserve">
          <source>Set()</source>
          <target state="translated">Set()</target>
        </trans-unit>
        <trans-unit id="2383ce503ce8ead010b3bf0215513bc5a49e3588" translate="yes" xml:space="preserve">
          <source>Set.fromKeys()</source>
          <target state="translated">Set.fromKeys()</target>
        </trans-unit>
        <trans-unit id="2e4d042ff0bd995ed926da47ec24d451429989e9" translate="yes" xml:space="preserve">
          <source>Set.isSet()</source>
          <target state="translated">Set.isSet()</target>
        </trans-unit>
        <trans-unit id="6ea02508afce86d55201855f6998fc9a93b228fa" translate="yes" xml:space="preserve">
          <source>Set.of()</source>
          <target state="translated">Set.of()</target>
        </trans-unit>
        <trans-unit id="30d8d0d8e5a80f817a3d29adaea95f794fede4cc" translate="yes" xml:space="preserve">
          <source>Shallowly converts this Iterable to an Object.</source>
          <target state="translated">Мелко преобразует эту изменчивую в Объект.</target>
        </trans-unit>
        <trans-unit id="46397a52bbe5ee2a71e3d50e9380adfe60056f1c" translate="yes" xml:space="preserve">
          <source>Shallowly converts this iterable to an Array, discarding keys.</source>
          <target state="translated">Мелко преобразует это итерабельное устройство в массив,отбрасывая клавиши.</target>
        </trans-unit>
        <trans-unit id="f9b9f5929894997ad56cc3c83383ff218a8e4e68" translate="yes" xml:space="preserve">
          <source>Side effects</source>
          <target state="translated">Побочные эффекты</target>
        </trans-unit>
        <trans-unit id="335542a39450d48685a0699aa1577d2f4fcd677f" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;Iterable()&lt;/code&gt;, however it expects iterable-likes of [K, V] tuples if not constructed from a Iterable.Keyed or JS Object.</source>
          <target state="translated">Подобно &lt;code&gt;Iterable()&lt;/code&gt; , однако он ожидает итерируемых кортежей [K, V], если они не построены из Iterable.Keyed или JS Object.</target>
        </trans-unit>
        <trans-unit id="82f426965c818e43816bda97b570b7bc59df6df8" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;iter.map(...).flatten(true)&lt;/code&gt;.</source>
          <target state="translated">Аналогично &lt;code&gt;iter.map(...).flatten(true)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9b0081234d475f350684c8d3a506ac59cb26479" translate="yes" xml:space="preserve">
          <source>Splice returns a new indexed Iterable by replacing a region of this Iterable with new values. If values are not provided, it only skips the region to be removed.</source>
          <target state="translated">Splice возвращает новую индексируемую переменную,заменяя область этой переменной новыми значениями.Если значения не предоставляются,то пропускается только та область,которая должна быть удалена.</target>
        </trans-unit>
        <trans-unit id="83e5a0d3d2ef19df258412a4d3ef3f9533b0c0c1" translate="yes" xml:space="preserve">
          <source>Stack</source>
          <target state="translated">Stack</target>
        </trans-unit>
        <trans-unit id="b800fda2995b3db7f4d12b3a7314553274dfaf01" translate="yes" xml:space="preserve">
          <source>Stack is implemented with a Single-Linked List.</source>
          <target state="translated">Стек реализуется с помощью односвязного списка.</target>
        </trans-unit>
        <trans-unit id="74b29ff90a4ac647452e37e690a1d293a6cb558d" translate="yes" xml:space="preserve">
          <source>Stack#asImmutable()</source>
          <target state="translated">Stack#asImmutable()</target>
        </trans-unit>
        <trans-unit id="e217de31d3cf379b0d90a739ecddd2cc91bbb4b1" translate="yes" xml:space="preserve">
          <source>Stack#asMutable()</source>
          <target state="translated">Stack#asMutable()</target>
        </trans-unit>
        <trans-unit id="adcebf3b53125e5ace02460deb7566e3b14fd36c" translate="yes" xml:space="preserve">
          <source>Stack#butLast()</source>
          <target state="translated">Stack#butLast()</target>
        </trans-unit>
        <trans-unit id="2e94813a555403a589694f38d4e00f4ef0004774" translate="yes" xml:space="preserve">
          <source>Stack#clear()</source>
          <target state="translated">Stack#clear()</target>
        </trans-unit>
        <trans-unit id="630f1f28c1eaccf74b053f90807b2acbdb507d4f" translate="yes" xml:space="preserve">
          <source>Stack#concat()</source>
          <target state="translated">Stack#concat()</target>
        </trans-unit>
        <trans-unit id="a93d153be6c3490902c103a8219f0c54157fa01c" translate="yes" xml:space="preserve">
          <source>Stack#count()</source>
          <target state="translated">Stack#count()</target>
        </trans-unit>
        <trans-unit id="bc10019d8a5f3c172b2fb7c83775cf4fc658cc92" translate="yes" xml:space="preserve">
          <source>Stack#countBy()</source>
          <target state="translated">Stack#countBy()</target>
        </trans-unit>
        <trans-unit id="f28e59c21fa2925030cc3416976409707f2e2f3d" translate="yes" xml:space="preserve">
          <source>Stack#entries()</source>
          <target state="translated">Stack#entries()</target>
        </trans-unit>
        <trans-unit id="fe35581a2951a3e812233620e2312c911a9f0c09" translate="yes" xml:space="preserve">
          <source>Stack#entrySeq()</source>
          <target state="translated">Stack#entrySeq()</target>
        </trans-unit>
        <trans-unit id="8378bdfb337bf1f32eca8f69d0843234e3b2b50b" translate="yes" xml:space="preserve">
          <source>Stack#equals()</source>
          <target state="translated">Stack#equals()</target>
        </trans-unit>
        <trans-unit id="a4c8cd9132f50b6987732da1e37bad70eff4533b" translate="yes" xml:space="preserve">
          <source>Stack#every()</source>
          <target state="translated">Stack#every()</target>
        </trans-unit>
        <trans-unit id="6696c6b445581d2686d6164ad3e7f69c0bbc6170" translate="yes" xml:space="preserve">
          <source>Stack#filter()</source>
          <target state="translated">Stack#filter()</target>
        </trans-unit>
        <trans-unit id="bed4a044deb33b89e5f34574e20abcdd56bde037" translate="yes" xml:space="preserve">
          <source>Stack#filterNot()</source>
          <target state="translated">Stack#filterNot()</target>
        </trans-unit>
        <trans-unit id="9add4ac01186fdfc9b7142cbd4039ae0ff607a32" translate="yes" xml:space="preserve">
          <source>Stack#find()</source>
          <target state="translated">Stack#find()</target>
        </trans-unit>
        <trans-unit id="0f8fb5aa181021355e4848937f5688b81bc50779" translate="yes" xml:space="preserve">
          <source>Stack#findEntry()</source>
          <target state="translated">Stack#findEntry()</target>
        </trans-unit>
        <trans-unit id="20495f1688d1e95eeffd47b071fdf82e5d38b205" translate="yes" xml:space="preserve">
          <source>Stack#findIndex()</source>
          <target state="translated">Stack#findIndex()</target>
        </trans-unit>
        <trans-unit id="6d24f723bb6955ef498e8b99d8e395b0d2c90739" translate="yes" xml:space="preserve">
          <source>Stack#findKey()</source>
          <target state="translated">Stack#findKey()</target>
        </trans-unit>
        <trans-unit id="b47365dd4e2af973eef42272756f823489fcd038" translate="yes" xml:space="preserve">
          <source>Stack#findLast()</source>
          <target state="translated">Stack#findLast()</target>
        </trans-unit>
        <trans-unit id="96338b8654e39aab2b1892789c56d8cc66f24c94" translate="yes" xml:space="preserve">
          <source>Stack#findLastEntry()</source>
          <target state="translated">Stack#findLastEntry()</target>
        </trans-unit>
        <trans-unit id="6a8480f97174b7408dce118a82b1f1babf2daccb" translate="yes" xml:space="preserve">
          <source>Stack#findLastIndex()</source>
          <target state="translated">Stack#findLastIndex()</target>
        </trans-unit>
        <trans-unit id="31bb665c53bc82ae5e033f6cbd79c38350e00469" translate="yes" xml:space="preserve">
          <source>Stack#findLastKey()</source>
          <target state="translated">Stack#findLastKey()</target>
        </trans-unit>
        <trans-unit id="2fc875421da0e91066ece28f7103eb817eef8462" translate="yes" xml:space="preserve">
          <source>Stack#first()</source>
          <target state="translated">Stack#first()</target>
        </trans-unit>
        <trans-unit id="8f29dd948406e0f4a36e72eddc6c8a6ef695265e" translate="yes" xml:space="preserve">
          <source>Stack#flatMap()</source>
          <target state="translated">Stack#flatMap()</target>
        </trans-unit>
        <trans-unit id="233721b28d30e0618460e932c5b7190f471730ff" translate="yes" xml:space="preserve">
          <source>Stack#flatten()</source>
          <target state="translated">Stack#flatten()</target>
        </trans-unit>
        <trans-unit id="2bcb3fa255e6afe5c55a8f5a13449a5dacd8c40d" translate="yes" xml:space="preserve">
          <source>Stack#forEach()</source>
          <target state="translated">Stack#forEach()</target>
        </trans-unit>
        <trans-unit id="4bf26b9be27fdfd1084499687d33e779a7d99260" translate="yes" xml:space="preserve">
          <source>Stack#fromEntrySeq()</source>
          <target state="translated">Stack#fromEntrySeq()</target>
        </trans-unit>
        <trans-unit id="874aea44376017f0e3c19e2e8352a245e39792ea" translate="yes" xml:space="preserve">
          <source>Stack#get()</source>
          <target state="translated">Stack#get()</target>
        </trans-unit>
        <trans-unit id="06a3479faf894301018981de1b4f66f4ecffb58e" translate="yes" xml:space="preserve">
          <source>Stack#getIn()</source>
          <target state="translated">Stack#getIn()</target>
        </trans-unit>
        <trans-unit id="4dd8461d39476ff1ca37c21331c8ba6e4bd15113" translate="yes" xml:space="preserve">
          <source>Stack#groupBy()</source>
          <target state="translated">Stack#groupBy()</target>
        </trans-unit>
        <trans-unit id="dbfebff2af11575267f2a348e8cb1bc0d7a7c214" translate="yes" xml:space="preserve">
          <source>Stack#has()</source>
          <target state="translated">Stack#has()</target>
        </trans-unit>
        <trans-unit id="180ce4f1f880916681d492d692a165a5b6f6ad0c" translate="yes" xml:space="preserve">
          <source>Stack#hasIn()</source>
          <target state="translated">Stack#hasIn()</target>
        </trans-unit>
        <trans-unit id="df7d0379961fca46f714dd618d65e48966980655" translate="yes" xml:space="preserve">
          <source>Stack#hashCode()</source>
          <target state="translated">Stack#hashCode()</target>
        </trans-unit>
        <trans-unit id="0a880a0b6804e80cb079e9303e038c2b0cc9df68" translate="yes" xml:space="preserve">
          <source>Stack#includes()</source>
          <target state="translated">Stack#includes()</target>
        </trans-unit>
        <trans-unit id="a92b2c9afd8ad07058c73762abbc555d50c2d277" translate="yes" xml:space="preserve">
          <source>Stack#indexOf()</source>
          <target state="translated">Stack#indexOf()</target>
        </trans-unit>
        <trans-unit id="eda2ff6f7c1e8f8fa44ba3e1c3ea7e65859fbd81" translate="yes" xml:space="preserve">
          <source>Stack#interleave()</source>
          <target state="translated">Stack#interleave()</target>
        </trans-unit>
        <trans-unit id="94b29c6f9fc7c03ebf0bd472e81957ee798c61bb" translate="yes" xml:space="preserve">
          <source>Stack#interpose()</source>
          <target state="translated">Stack#interpose()</target>
        </trans-unit>
        <trans-unit id="87b36b59fd33fec1ea7b44acdc02ffe92ddf8ee0" translate="yes" xml:space="preserve">
          <source>Stack#isEmpty()</source>
          <target state="translated">Stack#isEmpty()</target>
        </trans-unit>
        <trans-unit id="a2006f13b8867c4e1147bb520f07c1dd59366e15" translate="yes" xml:space="preserve">
          <source>Stack#isSubset()</source>
          <target state="translated">Stack#isSubset()</target>
        </trans-unit>
        <trans-unit id="3e2ee809fb30b236b70c93118c4258d8c4409d8e" translate="yes" xml:space="preserve">
          <source>Stack#isSuperset()</source>
          <target state="translated">Stack#isSuperset()</target>
        </trans-unit>
        <trans-unit id="7372a2ed47dfde80c687848dc25bf6658785314e" translate="yes" xml:space="preserve">
          <source>Stack#join()</source>
          <target state="translated">Stack#join()</target>
        </trans-unit>
        <trans-unit id="ebafbcddb6f0cc3b24f283cd2ce2aa0c16a16b6c" translate="yes" xml:space="preserve">
          <source>Stack#keyOf()</source>
          <target state="translated">Stack#keyOf()</target>
        </trans-unit>
        <trans-unit id="a1394729f6305b99f0113549140d4ebdd938058a" translate="yes" xml:space="preserve">
          <source>Stack#keySeq()</source>
          <target state="translated">Stack#keySeq()</target>
        </trans-unit>
        <trans-unit id="980d7d4749bbbf9957ec94d4d0cd0d2f39ea9bc7" translate="yes" xml:space="preserve">
          <source>Stack#keys()</source>
          <target state="translated">Stack#keys()</target>
        </trans-unit>
        <trans-unit id="7b909dfc5159b94d482381ac2bcd37a9b78bb680" translate="yes" xml:space="preserve">
          <source>Stack#last()</source>
          <target state="translated">Stack#last()</target>
        </trans-unit>
        <trans-unit id="393df639dc55c20d9521e472c0f9ad03974611cd" translate="yes" xml:space="preserve">
          <source>Stack#lastIndexOf()</source>
          <target state="translated">Stack#lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="9dfd8e6b6b2f9c0e78509350aaf9b02c2dd154c3" translate="yes" xml:space="preserve">
          <source>Stack#lastKeyOf()</source>
          <target state="translated">Stack#lastKeyOf()</target>
        </trans-unit>
        <trans-unit id="2b12ca3e59d80238a0f999fcb294e2db5841ed99" translate="yes" xml:space="preserve">
          <source>Stack#map()</source>
          <target state="translated">Stack#map()</target>
        </trans-unit>
        <trans-unit id="2f884c97e4bf633ba2b1052cb6ed50bd0c2d3d3a" translate="yes" xml:space="preserve">
          <source>Stack#max()</source>
          <target state="translated">Stack#max()</target>
        </trans-unit>
        <trans-unit id="88552d88900e7e88cba305fb54cb51e0506ccf6b" translate="yes" xml:space="preserve">
          <source>Stack#maxBy()</source>
          <target state="translated">Stack#maxBy()</target>
        </trans-unit>
        <trans-unit id="399ffee9516fc580307455ed9ff3641d946a4fb5" translate="yes" xml:space="preserve">
          <source>Stack#min()</source>
          <target state="translated">Stack#min()</target>
        </trans-unit>
        <trans-unit id="84c52700eff7a35dc1592141ff3f1e205a4c3a1f" translate="yes" xml:space="preserve">
          <source>Stack#minBy()</source>
          <target state="translated">Stack#minBy()</target>
        </trans-unit>
        <trans-unit id="435290ef2d751b3dd34a7a680f31ffa804d540a3" translate="yes" xml:space="preserve">
          <source>Stack#peek()</source>
          <target state="translated">Stack#peek()</target>
        </trans-unit>
        <trans-unit id="de25df000cb00e435761c7e99516c407eedf1a18" translate="yes" xml:space="preserve">
          <source>Stack#pop()</source>
          <target state="translated">Stack#pop()</target>
        </trans-unit>
        <trans-unit id="58116fc0d20d39e5e6c1ca7a5e401b9a97383f3f" translate="yes" xml:space="preserve">
          <source>Stack#push()</source>
          <target state="translated">Stack#push()</target>
        </trans-unit>
        <trans-unit id="578eed1f7caca649e73760b03abefa56aae85b42" translate="yes" xml:space="preserve">
          <source>Stack#pushAll()</source>
          <target state="translated">Stack#pushAll()</target>
        </trans-unit>
        <trans-unit id="ea0eff6f7f3517c6a6707d617720a30a44427328" translate="yes" xml:space="preserve">
          <source>Stack#reduce()</source>
          <target state="translated">Stack#reduce()</target>
        </trans-unit>
        <trans-unit id="e20c459f152dacc12dbfaeb722e3358661f5c987" translate="yes" xml:space="preserve">
          <source>Stack#reduceRight()</source>
          <target state="translated">Stack#reduceRight()</target>
        </trans-unit>
        <trans-unit id="f2cd66f60c72b4cf23c3dcedb73347c690ff9a45" translate="yes" xml:space="preserve">
          <source>Stack#rest()</source>
          <target state="translated">Stack#rest()</target>
        </trans-unit>
        <trans-unit id="205ddf76ced5fc63a3b83821a20a64baa1817641" translate="yes" xml:space="preserve">
          <source>Stack#reverse()</source>
          <target state="translated">Stack#reverse()</target>
        </trans-unit>
        <trans-unit id="fa1704dd2f90aeebaa194e0dd9af5b4f64d56296" translate="yes" xml:space="preserve">
          <source>Stack#shift()</source>
          <target state="translated">Stack#shift()</target>
        </trans-unit>
        <trans-unit id="4365f0bc5a14714f1c3216e90cb69e79cd698d9f" translate="yes" xml:space="preserve">
          <source>Stack#size</source>
          <target state="translated">Stack#size</target>
        </trans-unit>
        <trans-unit id="6879ab64bb94a0fadef511452abf695dac8a8b73" translate="yes" xml:space="preserve">
          <source>Stack#skip()</source>
          <target state="translated">Stack#skip()</target>
        </trans-unit>
        <trans-unit id="6f769b10fbddc564fbd26308f48b8cc2749f5c25" translate="yes" xml:space="preserve">
          <source>Stack#skipLast()</source>
          <target state="translated">Stack#skipLast()</target>
        </trans-unit>
        <trans-unit id="d00c724dfec094f39bfcb11a0d67b7589845ea16" translate="yes" xml:space="preserve">
          <source>Stack#skipUntil()</source>
          <target state="translated">Stack#skipUntil()</target>
        </trans-unit>
        <trans-unit id="b833e5b2657811228f8c4c5197a400c52b3f0d50" translate="yes" xml:space="preserve">
          <source>Stack#skipWhile()</source>
          <target state="translated">Stack#skipWhile()</target>
        </trans-unit>
        <trans-unit id="5ffc8774b94df547f746e6d4f3ee787f0623d0c2" translate="yes" xml:space="preserve">
          <source>Stack#slice()</source>
          <target state="translated">Stack#slice()</target>
        </trans-unit>
        <trans-unit id="264a56114265aa8cf9de6752d072b4ef7f002548" translate="yes" xml:space="preserve">
          <source>Stack#some()</source>
          <target state="translated">Stack#some()</target>
        </trans-unit>
        <trans-unit id="9663e892c346c01da31ad93a30f407284412a15f" translate="yes" xml:space="preserve">
          <source>Stack#sort()</source>
          <target state="translated">Stack#sort()</target>
        </trans-unit>
        <trans-unit id="bf9fb209a1f406e9cb6923b624ffa82601e4f519" translate="yes" xml:space="preserve">
          <source>Stack#sortBy()</source>
          <target state="translated">Stack#sortBy()</target>
        </trans-unit>
        <trans-unit id="42af09a96c056b3bc62b676c71a2a12d781c7952" translate="yes" xml:space="preserve">
          <source>Stack#splice()</source>
          <target state="translated">Stack#splice()</target>
        </trans-unit>
        <trans-unit id="77af704d3ed488d91a1382031542fd5ee9126daa" translate="yes" xml:space="preserve">
          <source>Stack#take()</source>
          <target state="translated">Stack#take()</target>
        </trans-unit>
        <trans-unit id="cf877ea628224d41c53eb3a314db1371958181e0" translate="yes" xml:space="preserve">
          <source>Stack#takeLast()</source>
          <target state="translated">Stack#takeLast()</target>
        </trans-unit>
        <trans-unit id="e3a2dcb12625f645ede7e5fa43387d581d66fd55" translate="yes" xml:space="preserve">
          <source>Stack#takeUntil()</source>
          <target state="translated">Stack#takeUntil()</target>
        </trans-unit>
        <trans-unit id="c8ab147b7eaf41a79f45ea03a4852d3621a588bc" translate="yes" xml:space="preserve">
          <source>Stack#takeWhile()</source>
          <target state="translated">Stack#takeWhile()</target>
        </trans-unit>
        <trans-unit id="97d949c8c8af0b62712882e4903bc02dead6ef8e" translate="yes" xml:space="preserve">
          <source>Stack#toArray()</source>
          <target state="translated">Stack#toArray()</target>
        </trans-unit>
        <trans-unit id="0c0860500b1b1654275113d36b925fb2ca069068" translate="yes" xml:space="preserve">
          <source>Stack#toIndexedSeq()</source>
          <target state="translated">Stack#toIndexedSeq()</target>
        </trans-unit>
        <trans-unit id="84148cba22c4ea3a229b57641aca1e58726c26bb" translate="yes" xml:space="preserve">
          <source>Stack#toJS()</source>
          <target state="translated">Stack#toJS()</target>
        </trans-unit>
        <trans-unit id="45e979baa606de9e5f2f80a8e5ca4f9576e0ecde" translate="yes" xml:space="preserve">
          <source>Stack#toKeyedSeq()</source>
          <target state="translated">Stack#toKeyedSeq()</target>
        </trans-unit>
        <trans-unit id="66a456e5f56ad87d038b19e1f16aabfcaeb31792" translate="yes" xml:space="preserve">
          <source>Stack#toList()</source>
          <target state="translated">Stack#toList()</target>
        </trans-unit>
        <trans-unit id="7aa50bb1a3744a67895d35e53fbd1e6b39af1c65" translate="yes" xml:space="preserve">
          <source>Stack#toMap()</source>
          <target state="translated">Stack#toMap()</target>
        </trans-unit>
        <trans-unit id="f7ca37017389a63bb81d1ae8e68370216a5f093a" translate="yes" xml:space="preserve">
          <source>Stack#toObject()</source>
          <target state="translated">Stack#toObject()</target>
        </trans-unit>
        <trans-unit id="7995c0432363199183fd397eb657e94b33d76009" translate="yes" xml:space="preserve">
          <source>Stack#toOrderedMap()</source>
          <target state="translated">Stack#toOrderedMap()</target>
        </trans-unit>
        <trans-unit id="359c45c4a779356413d065d6226fa0d316560839" translate="yes" xml:space="preserve">
          <source>Stack#toOrderedSet()</source>
          <target state="translated">Stack#toOrderedSet()</target>
        </trans-unit>
        <trans-unit id="6d3afa31efc66ed698d676be630446f5133aab5b" translate="yes" xml:space="preserve">
          <source>Stack#toSeq()</source>
          <target state="translated">Stack#toSeq()</target>
        </trans-unit>
        <trans-unit id="1916ecca1781cde9b8f936d36e65c4392ec59163" translate="yes" xml:space="preserve">
          <source>Stack#toSet()</source>
          <target state="translated">Stack#toSet()</target>
        </trans-unit>
        <trans-unit id="e5273cd6df3f79804f96f2dd73e89f121fe3c8f4" translate="yes" xml:space="preserve">
          <source>Stack#toSetSeq()</source>
          <target state="translated">Stack#toSetSeq()</target>
        </trans-unit>
        <trans-unit id="03efd76197898a8e5293da36fd59f052a2c7f9d7" translate="yes" xml:space="preserve">
          <source>Stack#toStack()</source>
          <target state="translated">Stack#toStack()</target>
        </trans-unit>
        <trans-unit id="0cf838f1d2067f709ac386743e33420b92dae6b9" translate="yes" xml:space="preserve">
          <source>Stack#unshift()</source>
          <target state="translated">Stack#unshift()</target>
        </trans-unit>
        <trans-unit id="1893047aadb71a4009e60ce95c46e6a4ff6fd8bf" translate="yes" xml:space="preserve">
          <source>Stack#unshiftAll()</source>
          <target state="translated">Stack#unshiftAll()</target>
        </trans-unit>
        <trans-unit id="0c39c0e0ad08d9c86ce0319dc53f100ce7a6011b" translate="yes" xml:space="preserve">
          <source>Stack#valueSeq()</source>
          <target state="translated">Stack#valueSeq()</target>
        </trans-unit>
        <trans-unit id="d08cd852970a2d678580ca40badbaf1f7da91bb6" translate="yes" xml:space="preserve">
          <source>Stack#values()</source>
          <target state="translated">Stack#values()</target>
        </trans-unit>
        <trans-unit id="f156d71e6b8cdab54a96cbde5cd315b1d836b0d3" translate="yes" xml:space="preserve">
          <source>Stack#withMutations()</source>
          <target state="translated">Stack#withMutations()</target>
        </trans-unit>
        <trans-unit id="288f2671cc4de182886d1e26da77fe81b90ec9e4" translate="yes" xml:space="preserve">
          <source>Stack#zip()</source>
          <target state="translated">Stack#zip()</target>
        </trans-unit>
        <trans-unit id="ce24467c91e5e791cd4aaba80d1dc07e49fc7e64" translate="yes" xml:space="preserve">
          <source>Stack#zipWith()</source>
          <target state="translated">Stack#zipWith()</target>
        </trans-unit>
        <trans-unit id="42a5cee09d8c884923e79ae8b0e1e37a252538bc" translate="yes" xml:space="preserve">
          <source>Stack()</source>
          <target state="translated">Stack()</target>
        </trans-unit>
        <trans-unit id="39e7313e35d783e41501205f51ae57d81bba532e" translate="yes" xml:space="preserve">
          <source>Stack.isStack()</source>
          <target state="translated">Stack.isStack()</target>
        </trans-unit>
        <trans-unit id="3e14b85ec37f06471493792c364b379242507016" translate="yes" xml:space="preserve">
          <source>Stack.of()</source>
          <target state="translated">Stack.of()</target>
        </trans-unit>
        <trans-unit id="d1eeeff224cbb105d882a37917a86371591da2c3" translate="yes" xml:space="preserve">
          <source>Stacks are indexed collections which support very efficient O(1) addition and removal from the front using &lt;code&gt;unshift(v)&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#stack.shift&quot;&gt;shift()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Стеки - это индексированные коллекции, которые поддерживают очень эффективное добавление и удаление O (1) спереди с помощью &lt;code&gt;unshift(v)&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#stack.shift&quot;&gt;shift()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="749a016bf10749d6bbdfc0717392432e9f0401f6" translate="yes" xml:space="preserve">
          <source>Static methods</source>
          <target state="translated">Статические методы</target>
        </trans-unit>
        <trans-unit id="cc830a84d379735e3152508130f75383e0820a0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Iterable&lt;/code&gt; is a set of (key, value) entries which can be iterated, and is the base class for all collections in &lt;code&gt;immutable&lt;/code&gt;, allowing them to make use of all the Iterable methods (such as &lt;code&gt;&lt;a href=&quot;#iterable.map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#iterable.filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Iterable&lt;/code&gt; представляет собой набор (ключ, значение) записей , которые можно итерировать, и является базовым классом для всех коллекций &lt;code&gt;immutable&lt;/code&gt; , что позволяет им использовать все Iterable методов (например, &lt;code&gt;&lt;a href=&quot;#iterable.map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;#iterable.filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="cfd0031728264f4a6eea0b6162f920b2a56d842e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;comparator&lt;/code&gt; is used in the same way as &lt;code&gt;&lt;a href=&quot;#iterable.sort&quot;&gt;Iterable#sort&lt;/a&gt;&lt;/code&gt;. If it is not provided, the default comparator is &lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;comparator&lt;/code&gt; используется таким же образом , как &lt;code&gt;&lt;a href=&quot;#iterable.sort&quot;&gt;Iterable#sort&lt;/a&gt;&lt;/code&gt; . Если он не указан, по умолчанию используется компаратор &lt;code&gt;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="084117419dfcf572bb3e1e598ede4beeef03a6b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;comparator&lt;/code&gt; is used in the same way as &lt;code&gt;&lt;a href=&quot;#iterable.sort&quot;&gt;Iterable#sort&lt;/a&gt;&lt;/code&gt;. If it is not provided, the default comparator is &lt;code&gt;&amp;lt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;comparator&lt;/code&gt; используется таким же образом , как &lt;code&gt;&lt;a href=&quot;#iterable.sort&quot;&gt;Iterable#sort&lt;/a&gt;&lt;/code&gt; . Если он не указан, по умолчанию используется компаратор &lt;code&gt;&amp;lt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef55ddb45bb78267b168b35aa27ba43c3c71e2cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hashCode&lt;/code&gt; of an Iterable is used to determine potential equality, and is used when adding this to a &lt;code&gt;&lt;a href=&quot;#iterable.set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; or as a key in a &lt;code&gt;&lt;a href=&quot;#map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt;, enabling lookup via a different instance.</source>
          <target state="translated">&lt;code&gt;hashCode&lt;/code&gt; из Iterable используется для определения потенциального равенства, и используется при добавлении этого в &lt;code&gt;&lt;a href=&quot;#iterable.set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; или в качестве ключа в &lt;code&gt;&lt;a href=&quot;#map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; , что позволяет поиск с помощью другого экземпляра.</target>
        </trans-unit>
        <trans-unit id="01d9deac480fee117708fd5a64f9b4a47a03481e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sideEffect&lt;/code&gt; is executed for every entry in the Iterable.</source>
          <target state="translated">&lt;code&gt;sideEffect&lt;/code&gt; выполняется для каждой записи в Iterable.</target>
        </trans-unit>
        <trans-unit id="6af65fc468f4eeae6f5cbb119bdc1865c778b9a0" translate="yes" xml:space="preserve">
          <source>The first value in the Iterable.</source>
          <target state="translated">Первое значение в &quot;Iterable&quot;.</target>
        </trans-unit>
        <trans-unit id="1bc9e92309bc1eaf02a49b0309e9ad0b6aa90f6f" translate="yes" xml:space="preserve">
          <source>The iteration behavior of OrderedMap is the same as native ES6 Map and JavaScript Object.</source>
          <target state="translated">Поведение OrderedMap при итерациях такое же,как и у родных ES6 Map и JavaScript Object.</target>
        </trans-unit>
        <trans-unit id="029c1e5a5c20d3b9d15551d5d1f14d831a837542" translate="yes" xml:space="preserve">
          <source>The iteration behavior of OrderedSet is the same as native ES6 Set.</source>
          <target state="translated">Поведение OrderedSet при итерациях такое же,как и у родного ES6 Set.</target>
        </trans-unit>
        <trans-unit id="8f7f36345943140cd1c6b4dc7972036d83796e01" translate="yes" xml:space="preserve">
          <source>The iteration order of key-value pairs provided to this constructor will be preserved in the OrderedMap.</source>
          <target state="translated">Порядок итераций пар ключ-значение,предоставленных этому конструктору,будет сохранен в OrderedMap.</target>
        </trans-unit>
        <trans-unit id="b9f5a2df7d20cd98a16445f8331c3991283c0983" translate="yes" xml:space="preserve">
          <source>The iteration order of the provided iterable is preserved in the resulting &lt;code&gt;Stack&lt;/code&gt;.</source>
          <target state="translated">Порядок итерации представленной итерируемый сохраняется в полученном &lt;code&gt;Stack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c8542f9f0ce94fcd109732be169f14a41ea2868" translate="yes" xml:space="preserve">
          <source>The last value in the Iterable.</source>
          <target state="translated">Последнее значение в &quot;Итерабеле&quot;.</target>
        </trans-unit>
        <trans-unit id="4e3670f168a100b14f9745f84d3f23519ccd50e2" translate="yes" xml:space="preserve">
          <source>The resulting Iterable includes the first item from each, then the second from each, etc.</source>
          <target state="translated">В результирующем файле Iterable содержится первый элемент из каждого,затем второй элемент из каждого,и т.д.</target>
        </trans-unit>
        <trans-unit id="637876a79c66d8ec2cdcb81de24473ddbe7314d7" translate="yes" xml:space="preserve">
          <source>The returned Seq will have identical iteration order as this Iterable.</source>
          <target state="translated">Возвращаемый Seq будет иметь такой же порядок итераций,как и этот Iterable.</target>
        </trans-unit>
        <trans-unit id="b6e470a897513134ccbf4e650fb89c1d6bb67eaf" translate="yes" xml:space="preserve">
          <source>The shortest Iterable stops interleave.</source>
          <target state="translated">Самая короткая остановка в интерлееве.</target>
        </trans-unit>
        <trans-unit id="f8cc716dc950f51f4d4927cabd4b12ed31ca2bed" translate="yes" xml:space="preserve">
          <source>The type of Iterable created is based on the input.</source>
          <target state="translated">Тип создаваемого фильтра основан на входе.</target>
        </trans-unit>
        <trans-unit id="df61b9313ba2d03a30e43bc1c6565e1b29587e03" translate="yes" xml:space="preserve">
          <source>The yin to &lt;code&gt;&lt;a href=&quot;#map.asmutable&quot;&gt;asMutable&lt;/a&gt;&lt;/code&gt;'s yang. Because it applies to mutable collections, this operation is &lt;em&gt;mutable&lt;/em&gt; and returns itself. Once performed, the mutable copy has become immutable and can be safely returned from a function.</source>
          <target state="translated">Инь к &lt;code&gt;&lt;a href=&quot;#map.asmutable&quot;&gt;asMutable&lt;/a&gt;&lt;/code&gt; . Поскольку она применяется к изменяемым коллекциям, эта операция &lt;em&gt;изменяема&lt;/em&gt; и возвращает себя. После выполнения изменяемая копия становится неизменной и может быть безопасно возвращена из функции.</target>
        </trans-unit>
        <trans-unit id="6052aea957576edd5d45b1abd1c72591548f7b11" translate="yes" xml:space="preserve">
          <source>This example converts JSON to List and OrderedMap:</source>
          <target state="translated">Этот пример конвертирует JSON в List и OrderedMap:</target>
        </trans-unit>
        <trans-unit id="7aebeaa408f54ac1575b43bec07ba2682d6b948f" translate="yes" xml:space="preserve">
          <source>This is synonymous with &lt;code&gt;list.splice(index, 1)&lt;/code&gt;.</source>
          <target state="translated">Это синоним &lt;code&gt;list.splice(index, 1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc458318162d077079ffd9c396a0ce1b75921d3b" translate="yes" xml:space="preserve">
          <source>This is synonymous with `list.splice(index, 0, value)</source>
          <target state="translated">Это синоним `list.splice(index,0,value)</target>
        </trans-unit>
        <trans-unit id="c77317de698b6cf1fb3af922cab548dd0805ab97" translate="yes" xml:space="preserve">
          <source>This is useful if you want to operate on an Iterable.Indexed and preserve the [index, value] pairs.</source>
          <target state="translated">Это полезно,если вы хотите работать с Iterable.Indexed и сохранить пары [индекс,значение].</target>
        </trans-unit>
        <trans-unit id="77f4608b1adf18b2ae1a0fbf25ab931f33195288" translate="yes" xml:space="preserve">
          <source>This is very efficient for Stack.</source>
          <target state="translated">Это очень эффективно для Стэка.</target>
        </trans-unit>
        <trans-unit id="97c5ef8ec40320448530599b3b55f4fd0f6fe8b8" translate="yes" xml:space="preserve">
          <source>This methods forces the conversion of Objects and Strings to Iterables. If you want to ensure that a Iterable of one item is returned, use &lt;code&gt;&lt;a href=&quot;#seq.of&quot;&gt;Seq.of&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эти методы вызывают преобразование объектов и строк в итерируемые объекты. Если вы хотите , чтобы убедиться , что Iterable одного пункта возвращается, используйте &lt;code&gt;&lt;a href=&quot;#seq.of&quot;&gt;Seq.of&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd84c642087f765f0f6e547f318eaa6e927d4216" translate="yes" xml:space="preserve">
          <source>Throws if keys are not strings.</source>
          <target state="translated">Бросает,если ключи не являются строками.</target>
        </trans-unit>
        <trans-unit id="6577d435fc9b2902c0efe5aaf81e8df6d0ee8d44" translate="yes" xml:space="preserve">
          <source>Transient changes</source>
          <target state="translated">Переходные изменения</target>
        </trans-unit>
        <trans-unit id="54506657ffd3eeb4775d18d87af2ba47bfeb99db" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;iter&lt;/code&gt; includes every value in this Iterable.</source>
          <target state="translated">Истинно, если &lt;code&gt;iter&lt;/code&gt; включает все значения в этот Iterable.</target>
        </trans-unit>
        <trans-unit id="2558afa32333951c9ee19c7f72b58d453be98f51" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;maybeAssociative&lt;/code&gt; is either a keyed or indexed Iterable.</source>
          <target state="translated">Истинно, если &lt;code&gt;maybeAssociative&lt;/code&gt; является Iterable с ключом или индексированным.</target>
        </trans-unit>
        <trans-unit id="20c60f21d2642e2586bdd1d3209fa71df13c692d" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;maybeIndexed&lt;/code&gt; is a Iterable.Indexed, or any of its subclasses.</source>
          <target state="translated">Истинно, если &lt;code&gt;maybeIndexed&lt;/code&gt; является Iterable.Indexed или любым из его подклассов.</target>
        </trans-unit>
        <trans-unit id="cee1dc41d98473c47183da7d942c252aee08b088" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;maybeIterable&lt;/code&gt; is an Iterable, or any of its subclasses.</source>
          <target state="translated">Истинно, если &lt;code&gt;maybeIterable&lt;/code&gt; является Iterable или любым из его подклассов.</target>
        </trans-unit>
        <trans-unit id="3a64befc40fe9b0e49aee657830caa062d84acc2" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;maybeKeyed&lt;/code&gt; is an Iterable.Keyed, or any of its subclasses.</source>
          <target state="translated">Истинно, если &lt;code&gt;maybeKeyed&lt;/code&gt; является Iterable.Keyed или любым из его подклассов.</target>
        </trans-unit>
        <trans-unit id="64eda9df9675e448e79ab8c06a92209e12ced819" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;maybeOrdered&lt;/code&gt; is an Iterable where iteration order is well defined. True for Iterable.Indexed as well as OrderedMap and OrderedSet.</source>
          <target state="translated">Истинно, если &lt;code&gt;maybeOrdered&lt;/code&gt; - это Iterable, в котором порядок итерации четко определен. Верно для Iterable.Indexed, а также для OrderedMap и OrderedSet.</target>
        </trans-unit>
        <trans-unit id="c803c2b62a37b54290d1c5e03801c237d6417db9" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;maybeSeq&lt;/code&gt; is a Seq, it is not backed by a concrete structure such as Map, List, or Set.</source>
          <target state="translated">Истинно, если &lt;code&gt;maybeSeq&lt;/code&gt; Seq является Seq, он не поддерживается конкретной структурой, такой как Map, List или Set.</target>
        </trans-unit>
        <trans-unit id="88aeb8d34c4d0130361e5e25747bdb155cf7313f" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;predicate&lt;/code&gt; returns true for all entries in the Iterable.</source>
          <target state="translated">Истина, если &lt;code&gt;predicate&lt;/code&gt; возвращает истину для всех записей в Iterable.</target>
        </trans-unit>
        <trans-unit id="3bfeec5b30faadc8fcab5ff42f80df7ba4afd34d" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;predicate&lt;/code&gt; returns true for any entry in the Iterable.</source>
          <target state="translated">Истина, если &lt;code&gt;predicate&lt;/code&gt; возвращает истину для любой записи в Iterable.</target>
        </trans-unit>
        <trans-unit id="9aa22d7f2f1b6cc5b0ec40f3f268ed197a529af5" translate="yes" xml:space="preserve">
          <source>True if a key exists within this &lt;code&gt;Iterable&lt;/code&gt;, using &lt;code&gt;&lt;a href=&quot;#is&quot;&gt;Immutable.is&lt;/a&gt;&lt;/code&gt; to determine equality</source>
          <target state="translated">Истинно, если в этом &lt;code&gt;Iterable&lt;/code&gt; существует ключ , используя &lt;code&gt;&lt;a href=&quot;#is&quot;&gt;Immutable.is&lt;/a&gt;&lt;/code&gt; для определения равенства</target>
        </trans-unit>
        <trans-unit id="e6b7166a26225daa8c709ee7e9644ca9a7dc7125" translate="yes" xml:space="preserve">
          <source>True if a value exists within this &lt;code&gt;Iterable&lt;/code&gt;, using &lt;code&gt;&lt;a href=&quot;#is&quot;&gt;Immutable.is&lt;/a&gt;&lt;/code&gt; to determine equality</source>
          <target state="translated">Истинно, если значение существует в этом &lt;code&gt;Iterable&lt;/code&gt; , используя &lt;code&gt;&lt;a href=&quot;#is&quot;&gt;Immutable.is&lt;/a&gt;&lt;/code&gt; для определения равенства</target>
        </trans-unit>
        <trans-unit id="7b9981ed8223b15a5023120de670868140711d37" translate="yes" xml:space="preserve">
          <source>True if the provided value is a List</source>
          <target state="translated">Верно,если предоставленное значение является Списком</target>
        </trans-unit>
        <trans-unit id="08f6156848901b340fba9e2bb3de3a3ce3415779" translate="yes" xml:space="preserve">
          <source>True if the provided value is a Map</source>
          <target state="translated">Верно,если предоставленное значение является Картой</target>
        </trans-unit>
        <trans-unit id="f758dd0d579cb381b09a16395f1a0b9fc5f56e6f" translate="yes" xml:space="preserve">
          <source>True if the provided value is a Set</source>
          <target state="translated">Истинно,если предоставленное значение является Установленным</target>
        </trans-unit>
        <trans-unit id="a4b5879dee960b9d5453e5d9a60f1b0ed3e0dea4" translate="yes" xml:space="preserve">
          <source>True if the provided value is a Stack</source>
          <target state="translated">Верно,если предоставленное значение-Стек.</target>
        </trans-unit>
        <trans-unit id="019113ece4713c6c49460af0fb2af9435e76d249" translate="yes" xml:space="preserve">
          <source>True if the provided value is an OrderedMap.</source>
          <target state="translated">Верно,если предоставленное значение является OrderedMap.</target>
        </trans-unit>
        <trans-unit id="3e9ea9d13eb67e666841186f5889b0c67dcb039f" translate="yes" xml:space="preserve">
          <source>True if the provided value is an OrderedSet.</source>
          <target state="translated">Верно,если предоставленное значение является OrderedSet.</target>
        </trans-unit>
        <trans-unit id="26dc8468d7315b0ebbaf3d3b20373b2bd2ee9e20" translate="yes" xml:space="preserve">
          <source>True if the result of following a path of keys or indices through nested Iterables results in a set value.</source>
          <target state="translated">Правда,если результат прохождения по пути ключей или индексов через вложенные итерабелии приводит к заданному значению.</target>
        </trans-unit>
        <trans-unit id="abf57c3673c1a64fc7beef2afd50fe9a5dc85072" translate="yes" xml:space="preserve">
          <source>True if this Iterable includes every value in &lt;code&gt;iter&lt;/code&gt;.</source>
          <target state="translated">Истинно, если этот Iterable включает все значения в &lt;code&gt;iter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa9d73d9861458c35d9fc5fd27bced6451f0eedf" translate="yes" xml:space="preserve">
          <source>True if this and the other Iterable have value equality, as defined by &lt;code&gt;&lt;a href=&quot;#is&quot;&gt;Immutable.is()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Истинно, если этот и другой Iterable имеют равенство значений, как определено &lt;code&gt;&lt;a href=&quot;#is&quot;&gt;Immutable.is()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="3d48ee1f347bb668acbcbe57a4aed31f72b867e4" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;Array#forEach&lt;/a&gt;&lt;/code&gt;, if any call of &lt;code&gt;sideEffect&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, the iteration will stop. Returns the number of entries iterated (including the last iteration which returned false).</source>
          <target state="translated">В отличие от &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;Array#forEach&lt;/a&gt;&lt;/code&gt; , если какой-либо вызов &lt;code&gt;sideEffect&lt;/code&gt; возвращает &lt;code&gt;false&lt;/code&gt; , итерация останавливается. Возвращает количество повторенных записей (включая последнюю итерацию, которая вернула false).</target>
        </trans-unit>
        <trans-unit id="0cffaf84950b7d8708316391fe5b3e16d944b4f7" translate="yes" xml:space="preserve">
          <source>Unlike a JavaScript Array, there is no distinction between an &quot;unset&quot; index and an index set to &lt;code&gt;undefined&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;#list.foreach&quot;&gt;List#forEach&lt;/a&gt;&lt;/code&gt; visits all indices from 0 to size, regardless of whether they were explicitly defined.</source>
          <target state="translated">В отличие от массива JavaScript, нет различия между &amp;laquo;неустановленным&amp;raquo; индексом и индексом, установленным в &lt;code&gt;undefined&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;#list.foreach&quot;&gt;List#forEach&lt;/a&gt;&lt;/code&gt; посещает все индексы от 0 до размера, независимо от того, были ли они определены явно.</target>
        </trans-unit>
        <trans-unit id="31ca13a1b6a0a289aa08aa9e871d95c443403629" translate="yes" xml:space="preserve">
          <source>Use this method judiciously, as it must fully evaluate a Seq which can be a burden on memory and possibly performance.</source>
          <target state="translated">Используйте этот метод разумно,так как он должен полностью оценить Seq,который может быть нагрузкой на память и,возможно,производительность.</target>
        </trans-unit>
        <trans-unit id="ceab60964f2a8b8a0b414a18859f8da76c815209" translate="yes" xml:space="preserve">
          <source>Value equality</source>
          <target state="translated">равноправие в ценностях</target>
        </trans-unit>
        <trans-unit id="ef1147769afc4e26aa2c7fc7f936fd8471b49528" translate="yes" xml:space="preserve">
          <source>Value equality check with semantics similar to &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is&quot;&gt;Object.is&lt;/a&gt;&lt;/code&gt;, but treats Immutable &lt;code&gt;&lt;a href=&quot;#iterable&quot;&gt;Iterable&lt;/a&gt;&lt;/code&gt;s as values, equal if the second &lt;code&gt;&lt;a href=&quot;#iterable&quot;&gt;Iterable&lt;/a&gt;&lt;/code&gt; includes equivalent values.</source>
          <target state="translated">Проверка равенства значений с семантикой, аналогичной &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is&quot;&gt;Object.is&lt;/a&gt;&lt;/code&gt; , но обрабатывает Immutable &lt;code&gt;&lt;a href=&quot;#iterable&quot;&gt;Iterable&lt;/a&gt;&lt;/code&gt; как значения, равные, если второй &lt;code&gt;&lt;a href=&quot;#iterable&quot;&gt;Iterable&lt;/a&gt;&lt;/code&gt; включает эквивалентные значения.</target>
        </trans-unit>
        <trans-unit id="c7d3f62504d700fd16d3eb8318dc15969202f8d1" translate="yes" xml:space="preserve">
          <source>Values provided to the constructor not found in the Record type will be ignored. For example, in this case, ABRecord is provided a key &quot;x&quot; even though only &quot;a&quot; and &quot;b&quot; have been defined. The value for &quot;x&quot; will be ignored for this record.</source>
          <target state="translated">Значения,предоставленные конструктору,не найденные в типе Record,будут проигнорированы.Например,в данном случае ABRecord предоставляется ключ &quot;x&quot;,хотя определены только &quot;a&quot; и &quot;b&quot;.Значение для &quot;x&quot; будет проигнорировано для этой записи.</target>
        </trans-unit>
        <trans-unit id="7ca51156a715c9b81fdb0da9602fec76d06ac835" translate="yes" xml:space="preserve">
          <source>When building a new List and the final size is known up front, &lt;code&gt;setSize&lt;/code&gt; used in conjunction with &lt;code&gt;&lt;a href=&quot;#list.withmutations&quot;&gt;withMutations&lt;/a&gt;&lt;/code&gt; may result in the more performant construction.</source>
          <target state="translated">Когда создается новый список и окончательный размер известен &lt;code&gt;setSize&lt;/code&gt; , setSize, используемый вместе с &lt;code&gt;&lt;a href=&quot;#list.withmutations&quot;&gt;withMutations&lt;/a&gt;&lt;/code&gt; , может привести к более производительной конструкции.</target>
        </trans-unit>
        <trans-unit id="00e54cb481d3a16e7a2a3f84dd4b764973ba2b05" translate="yes" xml:space="preserve">
          <source>When iterating &lt;code&gt;Iterable.Keyed&lt;/code&gt;, each iteration will yield a &lt;code&gt;[K, V]&lt;/code&gt; tuple, in other words, &lt;code&gt;&lt;a href=&quot;#iterable.entries&quot;&gt;Iterable#entries&lt;/a&gt;&lt;/code&gt; is the default iterator for Keyed Iterables.</source>
          <target state="translated">При итерации &lt;code&gt;Iterable.Keyed&lt;/code&gt; каждая итерация будет давать кортеж &lt;code&gt;[K, V]&lt;/code&gt; , другими словами, &lt;code&gt;&lt;a href=&quot;#iterable.entries&quot;&gt;Iterable#entries&lt;/a&gt;&lt;/code&gt; является итератором по умолчанию для Keyed Iterables.</target>
        </trans-unit>
        <trans-unit id="59a3de83fcbcc44f5940cf74892dd6777d2f744d" translate="yes" xml:space="preserve">
          <source>When iterating a Set, the entries will be (value, value) pairs. Iteration order of a Set is undefined, however is stable. Multiple iterations of the same Set will iterate in the same order.</source>
          <target state="translated">При итерации Множества записей будут парами (значение,значение).Порядок итераций множества не определен,но стабилен.Несколько итераций одного и того же множества будут выполняться в одном и том же порядке.</target>
        </trans-unit>
        <trans-unit id="d7d4e6f91d7fd6930a53106639ed2f29bc48c4d5" translate="yes" xml:space="preserve">
          <source>When sorting collections which have no defined order, their ordered equivalents will be returned. e.g. &lt;code&gt;map.sort()&lt;/code&gt; returns OrderedMap.</source>
          <target state="translated">При сортировке коллекций без определенного порядка будут возвращены их упорядоченные эквиваленты. например, &lt;code&gt;map.sort()&lt;/code&gt; возвращает OrderedMap.</target>
        </trans-unit>
        <trans-unit id="caea294bd2f59cff627b9e169c64fdf8fba81027" translate="yes" xml:space="preserve">
          <source>When two values are considered equivalent, the first encountered will be returned. Otherwise, &lt;code&gt;max&lt;/code&gt; will operate independent of the order of input as long as the comparator is commutative. The default comparator &lt;code&gt;&amp;gt;&lt;/code&gt; is commutative &lt;em&gt;only&lt;/em&gt; when types do not differ.</source>
          <target state="translated">Если два значения считаются эквивалентными, будет возвращено первое встреченное значение. В противном случае &lt;code&gt;max&lt;/code&gt; будет работать независимо от порядка ввода, пока компаратор является коммутативным. Компаратор по умолчанию &lt;code&gt;&amp;gt;&lt;/code&gt; является коммутативным, &lt;em&gt;только&lt;/em&gt; если типы не различаются.</target>
        </trans-unit>
        <trans-unit id="516a605aa655a088df53125cca2b2d6efab826eb" translate="yes" xml:space="preserve">
          <source>When two values are considered equivalent, the first encountered will be returned. Otherwise, &lt;code&gt;min&lt;/code&gt; will operate independent of the order of input as long as the comparator is commutative. The default comparator &lt;code&gt;&amp;lt;&lt;/code&gt; is commutative &lt;em&gt;only&lt;/em&gt; when types do not differ.</source>
          <target state="translated">Если два значения считаются эквивалентными, будет возвращено первое встреченное значение. В противном случае &lt;code&gt;min&lt;/code&gt; будет работать независимо от порядка ввода, пока компаратор является коммутативным. Компаратор &lt;code&gt;&amp;lt;&lt;/code&gt; по умолчанию является коммутативным &lt;em&gt;только в том&lt;/em&gt; случае, если типы не отличаются.</target>
        </trans-unit>
        <trans-unit id="cb02c731014a9a21ea9025fd1e6cc2fba8ebfa35" translate="yes" xml:space="preserve">
          <source>While designed to bring these powerful functional concepts to JavaScript, it presents an Object-Oriented API familiar to Javascript engineers and closely mirroring that of Array, Map, and Set. It is easy and efficient to convert to and from plain Javascript types.</source>
          <target state="translated">Несмотря на то,что он разработан,чтобы привнести эти мощные функциональные концепции в JavaScript,он представляет собой объектно-ориентированный API,знакомый инженерам Javascript и близко зеркалирующий массив,карту и набор.Легко и эффективно конвертировать в простые типы Javascript и из них.</target>
        </trans-unit>
        <trans-unit id="10f46a2db5d30261654eb7118321023d2ac958fd" translate="yes" xml:space="preserve">
          <source>Will deeply flatten the Iterable by default, returning an Iterable of the same type, but a &lt;code&gt;depth&lt;/code&gt; can be provided in the form of a number or boolean (where true means to shallowly flatten one level). A depth of 0 (or shallow: false) will deeply flatten.</source>
          <target state="translated">По умолчанию будет глубоко сглаживать Iterable, возвращая Iterable того же типа, но &lt;code&gt;depth&lt;/code&gt; может быть предоставлена ​​в форме числа или логического значения (где true означает неглубокое сглаживание одного уровня). Глубина 0 (или shallow: false) приведет к глубокому сглаживанию.</target>
        </trans-unit>
        <trans-unit id="cdb6fdbe91faa53a7c573c80b7c18108c73c0480" translate="yes" xml:space="preserve">
          <source>alias</source>
          <target state="translated">alias</target>
        </trans-unit>
        <trans-unit id="7db739e87a69bd75df77e9e9034f459acc9c55df" translate="yes" xml:space="preserve">
          <source>fromJS()</source>
          <target state="translated">fromJS()</target>
        </trans-unit>
        <trans-unit id="ea15bb313960c191e1f291c430e23ab1dd71af9d" translate="yes" xml:space="preserve">
          <source>is()</source>
          <target state="translated">is()</target>
        </trans-unit>
        <trans-unit id="63931ac28a1466150a780334eb33725ff190c35f" translate="yes" xml:space="preserve">
          <source>map()</source>
          <target state="translated">map()</target>
        </trans-unit>
        <trans-unit id="60adf9490079b824516abce62f90a7c141e5d3c3" translate="yes" xml:space="preserve">
          <source>mapEntries()</source>
          <target state="translated">mapEntries()</target>
        </trans-unit>
        <trans-unit id="1581ba695d097c2351e021e917ef72246bb1b363" translate="yes" xml:space="preserve">
          <source>mapKeys()</source>
          <target state="translated">mapKeys()</target>
        </trans-unit>
        <trans-unit id="3d637fc604995b51a048db0058a7c210e57a38cc" translate="yes" xml:space="preserve">
          <source>see</source>
          <target state="translated">see</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
