<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="1eb060e16fa125ed729f406d9c0299c8478ebdf8" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="cf2b32c9391e81ffd4a71f54b2fecbe497092568" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="d73980d2f4a284c97d7185d242a5ff9d6f459fed" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f70def6c63a73372b7e6868756f4d961febff228" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="012acd224e74279533cdd0d2779c86ff4420eb28" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="5c1fe8c1db286e34b1b8cdd23ab626317c49e79a" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="83e7fe2e08519813ae60edccee7a3658dc956793" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный&lt;span name=&quot;cmp&quot;&gt; cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="dba24cedf88baae99d5b990f35dd5d599057a839" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e1fea81a39226bf4d550178caadf62d0c0e26ba4" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c60e2f4df770cd9eee061b4329b2296e6369d750" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8e08f3b232197f5de25274640137d52fea76622e" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5b9254778bb07b8ea3eca1182cc820ec8cd98d31" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8e9ef4d46f852bec3a938d45051bce8ec0fc49f8" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e59e62170546f02f08a242d5435f192f818cc94c" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2665c4b875d8686bec1eae72b6170bd2f202a353" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="96071079ef43889753fa7e972a684b8f92b5df18" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b74aa797d982f24973be44c87e4887652defb880" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6d2dbd511fe3a05be75547518a204740759a6f8a" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="572fff91ff0cb27e1e747efe356850dd080cbab7" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b9dd48018c6fa1c0ec72b42a66560d656a228bc4" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="36dba1793bed10080fb44d6b9698b010198bcc3a" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b23bd1d3fe31af4573c7de199f38a364108b0b3c" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9baddcf935156484d147686567b0ca1f2a15d296" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8d9c6bb4a865a8f26710edea6b29f672ed46144f" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="920deed3875aaf7debf40ef1372c62eedf9c1e32" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a160fb88d50f2352f166ded3f28a8d4178700410" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0df47d8a53513d130197ceeef853903fa5c1ec31" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="820adac08fa2cd0b78423de89bc44f35380f8fda" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="136f12a854c18232633b11f0c325e2da2b711619" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d248a594740ee42a4af2074bfb4652749534e309" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b2626770e151ff1b75a0c53e6cb6c1ecb7401517" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e939fdbfc464a373cc7717ecea61137cdc0daa9e" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a063ff6cc007ea975f410a0e1c408feee545e292" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="043c67f08c7a8e50d84fdbab3bcc18a4b0725b26" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="757f85f7bc5558dc3fb2af441a9ffcb846d327dc" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="814aa8a68aeed624ad15d54096cdce1f82f89e05" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ea46ff68890b2f06004fdf902b9c34b9d1c92c01" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e4d0a01e820452d436c3997ceba94f21ec1f311a" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="881c3f1b022b9201560e82acafbaea365996cfdb" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5ba702a95714f9a3d2393671e7bb3bca57abbf79" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="439c985c7b24ce23f4ecb64dd64e9b3d5b5daef8" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="07172aad139432b76ea7353d7cb7fb6273a2f167" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4b713a1d358339a8914595669c92fb2304bee206" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7d4220d07d89e902ec68d6ab905438f45ad73102" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f02f4dd8a8062e8c20eaede5684c28584b76e04d" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="495858672b1a3aaf832b61c9e073d8a46d5f0630" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d5f1a3bfbd30d0890d78a3eeac76a6e7bb1eb1ba" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bc4c2157672e8f25bd2eefc9660d9cd5d2933e77" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a1d207c58db0b12b42fcb8947ed57d6c887baad" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="45214089acf6d5eb9e2511605d89b82e12ddafd6" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1b914ddad37a54af07c4b60622f58d409f5c0117" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="af143cbc16b975292b77936c828644ccadc30511" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6394a4618ec262901cc2b3fca08c167a6f7dbfcc" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="959460bc0f5c7a7114493fa8b10c98c30cfef401" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1ce027ab5b081f25689e7b792c2c9d1c5abe0200" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c34b7777ce9952fa41a31302971b4b7a4a7eac6a" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0ff860b34e482e48a48a58f11322a34a0e592922" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4b480d6febc04503b8086421176b2580314c45dd" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4ddc752a3114528c672c770345f0f8819957e7ee" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2be7cfd4aaa5e4fde83812c3905a318938a137e4" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2a652fb6f29d740308f26473f7ff557b71345801" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b4007124482dc36935937556d6436fe9728b9bc8" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5a4acf244a52a4d999ce6c91575343cc99834486" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2879f005d5b9f4d370014032b3be4ba3b3e09973" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a1cb4078578e79df1e37257d79b8a9fb4a6a8a05" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="38afb0552e6fe31ec7ef5f4ea0d92ec3050916c2" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="571b9bdabdb626e25876d3a0dcd4b87e7c9c828f" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="148ef8a261f725781eb966372151f3c47c32da6c" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ee4b687d1ebb4539d02ecc002e9dc233028a304f" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aed7163fc1ba76ef3f159f53f95b6deb69f1216a" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="26e8e67f07e982221410d1068117d755ce379232" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1b78ffaa53936c99b5a9d70f38a1dd557bcb8fdf" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3fd52bb989cc1f9fefb6394f92f658a13db899e8" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="df44724cb95c34b8d9d1f5b7abd39670ed7a5564" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="80cb6b260143631dfc33bc0263a08390612457a2" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="48ac9c3c995d32eb3deaf01907d5767b6e7af7f8" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e799ef687088912457d3561454e717f6270f0a80" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ea0f811c71c0a45036fe8ebfe24596e4d1c8dca3" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a4fe9853309a4abe0ae61fa95ffcfefa50b8fa4c" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0b1eadcd491f2f83361070b79d55f49698836ea5" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="65022d2d8531cc88f10e3a0372676e5a1b35e809" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5346528e31fa22cd875d09811580206ef15e46ad" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9ae51af3a6b8d43ca489f53f00e3525bb2a95837" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f232a854dda3766d3e2204667764d86ea4b24d83" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e030cf9faa7c4c877bbd8d3e51dceb06688c9ade" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp:&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="beb123a9e8353658d69c9208a81717b9b92087df" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный&lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ef10a53f772cb10a08b064ea031bf9988553d0fa" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный&lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b4c2baed8201f0cc59ffa997d13be87201893ad9" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный&lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="79763417dbb05510e05042260fba743ce88ce6cd" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный&lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="67a7573f2a079211152b83fed4a42bdb76cbc28f" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный&lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="29c773fe53bc5e1dd0ff55b1a835c03a8ee353d7" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="870cd46dcfd126ada981f6531812b84a5a91663d" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7bcec820d903af269fe8d25f4f12b02fbc1130ce" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4cffe6f8932a16e0a4f7c32c029c0a9af50cd74c" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6e7741eb2efd9f5000406afeae2f8a0fde0c20e3" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="82849624ee3b29ce10c817522a60bb419cecd7ce" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a680d36e1cc92ca4e447ab7644592c733e2b9774" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6ca665bd4ac5c1a394f02c9f40bf5be3ed583936" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1bcda31c23a2e1b641c13a68f4806ba455d77522" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="42096ab6e55da2590a63e5a19e1d52000e1b15e6" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1551fe42d3c74668e562a80fbee320b2c9eb476e" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="78fd09960bf54eb81a5a23e9f8f7e02112af6c55" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="49c13e8760723035948814c90700ea05f70674df" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e1b28bfe73344ed73ca7de4ef87c31c76e90c647" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1e1da1f3fb2bbf5b255de0ebe66a3242d1e79299" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="650175fece9ad39df57b97930e0d729a3cd7879b" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f74aaf505b4f6c8404f2e6e4bf05a9a913d04257" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="82e5f2b8dd85be7e12ce15c54b0fd74bdfd0c0ae" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0f8cb7fd1ea77442eb5f96a2568b02b328567b71" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5cc9b65bd20c3ffd9d417250279d5f4dbe8a0b39" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4bb79409f74998a0fcd3e217c0fa9ec0e6f860f8" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b2dbb150f3d9f29a90021367085ffbf883b12321" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="68e941db11697876c1a5bcfeebdd634b20220814" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e6c4031208166f50bf347f4aaa8d9f8927cd4b48" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="59b248d6a0bf7964527a23c86ca5030d94128968" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b6389f9637b354657536482a0febe8309eaba6ba" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b6aed9696f6be61052df0c33307f0181f580e9b8" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="35d3e2f50f545266697c30ab5a5e949aa29b6441" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dc184a1753c260df0282d92eaf241d5b6d35d98d" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c5f8e06ec6d8b8b2a208e6ff4add4f46b230edc2" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3a66a10fe9494081ad88eb283320c96d4d5bae08" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="78ccd644aa030c6360735a68c65f4d05d186b4fc" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="81328ae9b5518dff8671fbcd7952fbad40cd992b" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="75b34f85f255075d1f003d16155aab0a17300a82" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bbfa2fd52bbf9c49131d1194c87bd792d14f7bc1" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4f34ec6b09b22b617f841ceb0b8c24ab25eb53cf" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1636388df87ca4ebaa49234d866e5bc9d55b5242" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e7471e66a82ac913337b661cf8a2ba74aa812a0e" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5b21643053aee05f61f6931560365f62ee20a1b3" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e84686f48f019d2016094f285a94cf7652f1cbe9" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ad922f88527f2714fac10eb1ecd55f4d63537214" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9bcd91b4f815dd31ac2f26e654c64e1b73dc06a8" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="105ac680a5443bdc20566f7510cbcf96c18a187c" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="734c5ee6e08cd64cbb6394dc80ed2473779b6817" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4ca83858c953338dd9ccf00e02a95864e207bf58" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d1609332035be5d751998f147dc34d3e9fdb9ca4" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a9633b13001a6f59c21e96957f998cae666f4037" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4a50089c0ed99b34684e6a8c3edb40a0031d080c" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4fd1a33b96d9cf13b9cf4af0ae55689bcc21a37c" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0cba5248371e963b93f6a18e1240d3f544e15de8" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fb4616a804779aba4e36e200827c9d217184cbfe" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2da7d0e19b6e6151c64208b8efafb0919d0f178e" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="658d38b7ce45c6108dc62b75cce324f262fc0e9d" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8d68ac13061c2b00c53ddfefd205835690b5a21e" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3f2e259cd3380fae94104b4ef1857ce32ae367b3" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7b6691a9a01d64052aecedc3bf492da4b0b69b5f" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ecb6d0b1456f2644a07aa65dae4df0bb3518e93a" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5d4a3116acdbfa1b7fec50d0daf757cd39d3e63d" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2a225d63a61ee092d95cd1e334f07ddc5bac1315" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="45d591a08221177c0f7073855465f523009374dc" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c4cc54f383d83171f34ccf4d1375fd473f8f823d" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7f212eb3786590d2c2e9fb03cd08bea7aac5cacd" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5326dcd64ca784c3e3d9d771acc316f1931ac04b" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c54558d7fcdb1c7a759636d0e2881230e414dddd" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="59d14f4be025da73b86077dfc3ddbe6a9e5cd892" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="569a6e34ae65644d6da5056a60d67207717cee20" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cc0b9c73f423ad1247a42dc5377641a7aa0611e3" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dcf06f17446d8be2426a0ef8318a362dd3818275" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c975e68a1ce564c59fdbe8a5cb17b44d44a3c9af" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="49c8d75dfb0747110f42fadad698ef1ad0bcf24a" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3e43f88da4c341e60199e8a24cd523004e8107a7" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f417e47888b8e6545e5f368ee5ec258a78d9f23a" translate="yes" xml:space="preserve">
          <source>def minByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minByOption [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minByOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3fb12a9999bf3c5d53aa31da2430f3eda4e49d89" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a9e104f6bed55f59fd1362ea3d6c07b608683b96" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="06c95d9ed10e64b2f58c634d86db7d7c4bad3408" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="b269364b0c6f1033cf42ec84a36518cdc962eb7a" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="12e2d2295c97ff10f2033bcf12e3d4a635dbfd25" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ddbf4631fcf29727b2d79ee1f018b6fb968ad4c5" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="fa1f85e23a3d24383ca2624dda1837798832ed06" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="9b64b30c43ed76ebfd68c061ab778bcf01a7f65f" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="2a6138961b5abf2acb1c511474733ed8d275c9ba" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ce34db24843fe428427fce1ec99009e2b4a9962a" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="8f3b162747bfa267815be915104ddb6a83cc25eb" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="c34923214849626fb2cb2cabbb3dc7ea5d25b705" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="53af7b390203e78503ca933999510849bb2a8c1d" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="83ca92197946919c1365a5b628390657e8d09f92" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="f2ea63c5325aa33cb82a57b583ad93d6a745012c" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="f9e6880cf53dd06d5c39929eb3ccd73afe121c31" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="69b69b36959e5d6090b8ed440b843ee5d2439579" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="22bd4aba37e60d25ac3c01632da85efea6b009c6" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="c2df9fe7ee9eb45820abf5e32c8dad855259bd94" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="30f39c7e589135c7c5049a9d859b14a9a322f982" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="8a7a43a83fe210f76531b54957cc7ee83068839c" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="1ee906cb9a4171f20fc0ac594c0a4ef4c4292a1d" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="e7701324f049a0e6c3f933a235212a4fffa80019" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="aa7a2a70d2536bb372ae5ab1f6a2ae4afece5e44" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="731e3d97a7f9f0462920f6bf9367b47f2fdb4a04" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="facf6509e177fce70a35a8ef0072fb02e4dbefbe" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="e3d1589097eccb6d770446a778f2ba9b3a78e653" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="d2c6f7e07d81f6b291483297635b9235750b50d7" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="92df66289c13f3009fad28d035d68dffb65fbbab" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="b0593ffe6c8bd3e845f5dc1c9854518c677db8b8" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="d59cf2b303bb0e2fd9f4a33a281f4da3f118738e" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="d555e62c2b9959e7d76614f03c6496db9bccbd93" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="bdea68793dc0ee615677b035b7c90f4ea63c8a2c" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="0f28964ed98180d9b72d67f61bec6958beea4f6b" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="b944829c012706bf19d3e786f3e4791ee7768524" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="9e712f95b6f6496fdbadd4c16d22304680b3e5fc" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="fae59514119ac2d96ce905671ee6b42196e487e5" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a9d27a2ae3aac03815131ee9ee8294ad68e69831" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="b774667a2b03416dbb0472a58ae79645c04526a4" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="6b1b80881c0b46e5c3a0769bf1e93b3752bb4b4f" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ecf9d7e283edba6f4b848aeaae83ec9bdeff47e6" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ffc736683b69efbfad0e85c9f796d2be72696979" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="c4e5975c3a327b69f0f106d0d8554e35def4c5dd" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="750716b964db1a0ea4cec12d8e496f5039579bd5" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="95ec028e834a04214c18dcb83fa237e7a4f9d945" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="77004c8a530f81feaa795e6a6f39cb3af7e55ad8" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="f486d8e91df3a64d15f65a9ee5af8dd6aca5b82c" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a1086a43eb8b06e25d44c049446241bf2fb2565f" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="42c2dbb69aa97ae0355365bed01a469bc2fb2aaa" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="e41e71df3ff7383cba23661c0f920144eb22b573" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="8d911f5d4a7a8d4f470679af4616877eab3bbf8c" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="d29119df36cc71df90a3d01425a52bf940bac348" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ffa22bdef44f8e9a77c075ed41f245b517fd22b7" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="1583c54e6ef950a9e11bfd810b509be0a4933305" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="5e4f7f5a65c643bf224fa84944b798336c688740" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="bd7bb834951d7f0997693ebe0bed91ae7f98d807" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="6c3dcb63aa1dccf36c97fb24c231f9205bb06702" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ddf5de5cec5825eb03c0f11bfd67def2fc84c59f" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ec0588699875875e3dc15a7a0554cd29dc3237b4" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ])) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="5d462a0f2109ff337cdf941e1eab229c59d5f03b" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="c3f45d7492f4c877550d6f2dbacf1daf36b14249" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="7e6f9c1afa255aad43afac445ad83e205b8cd502" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="4a997494fba0d8bb963eb602eebcf46b55766721" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="13b5409dfb189a06ba4abe1fef789d9e50a41d56" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="aafa6f2b173b4c49f63ea69808f04b4dcba23631" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="466321a61031e378242df2488bae2f64f06a400e" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="93c592eb5c1b731af6a228fe43e533481d78e540" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ec3a370d97893efdb645703f57776b6ceba7a5a" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce189299ccc49025085eaac2b75fb4078adcea3c" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b456f7ab4fe4647ad6558d30c5f7cbff432c040" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c80d9b0198c8fd6d363347bd122c33d798c9a9b" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="02d604b1889f82492eb8a9f8e36ebc376c904cd5" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="543a10ed1920148a323b38884ea1294fbcf158e4" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ad8a88afb6455d001f67715314dc137b60511bd" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4bca011c3e512c0a60038b65de36995a5f325ce7" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0db1e503e4bb98eb76ad95f7b6bfa47b9e9ca3f" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06e1ed77af1447a67049948a0e6cc5f3189e6dea" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="550db4fb5eee5353b0285b21fd5187569f0d97d4" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a69b03722314799143497ed9018ff305e5d65144" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07bd7a01bdfd91ed7e4d348cf5c88a4068952786" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4355b27134ce4c43e5c0690175aca1a9fb428580" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd4ddedce51cce52e60740fd518ca2b9945a8db6" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="202c0515f00a9f4b905397fd2b4190ba053cce6c" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c36765200a41d84a9bb62c84e87e73925f79de6f" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc3ce7ce439a492a01064adf425f7b0e7c536550" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="49f5ede238bfe7fc65f070867fdc177ffdfb9229" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b82f41db63604ef0d89d8ac3f133f991384da496" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="02e389b85b8a59ac86d20c7f60592d27cb2e9b09" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7ddd7f8406d17e47b8bf7eb20ddacff2bb1ab50e" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3028388ff4ba1acc0d4d3db956b980123b983ded" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c01394ba6197a45f8b7a2fa10c9f6662a844e09b" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fc9dc5e9891a3de0f82596649277e65ff4e81cb7" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8a5a7e19e44058151debe77767242bdfb4550a64" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="64bcb7ce8542c22e8a1da1a1ac5b20f81a1c2422" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9944854b75709c2f3f9b3464ddfd26086eb92e0e" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e9d06c2a75e5938ab02ec5f82f161103344c692f" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7bf08ec2ef57d10632824bbac8a77bf523b67ccb" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b21f16d8b1480aebfa86f81865e311e65930a50b" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="31282bb72a52594e959534217e5ef4c0493fe30e" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dce4154690e52ba28b74d22b571477407c9a39f9" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6cc92413b100c839e734f8914fc1296a67af9d4a" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="abeec857937373e2f728883af912630b50097cd1" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cec661f99ba3549f41172a0036a20245dc53b11d" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2041068efecbc5b323d0c91d7f3346f814157ce4" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f45ef96dec97baba628fb3efeda518ed010a9316" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="abd27d50090151b3ef61aae49f7b50371ada39dc" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4b48737a9b31f897d23294e603a36572765e74ee" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bb3c4a299a7a5695f0487ebb8e2b9c962eea7d07" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2ba825a7726bce9c3e7a8fb9dd161247b0f80d87" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7a754e74a2935d692a5d5d7c9d1a4c4fb3a57d9a" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1b65a49a6fa7f0237dd826bd2981b877ab973d71" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e682b9b64a067e81afdbaba9f24b1650a5a10172" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f4d140a675dabe88ae9f81bd7670b13bf0c65cd0" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="21029e14cab28c98f8bb773ce46f85dd56c47e71" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8aadb5c163aa6d39d2aa6937e42d71bf6a9e49ab" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="551f810d72d5c70d12d62af91c834604bdf50e60" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0613a757ee77a0d4e37ca7f9d281fddc6d8566ed" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="93a644bcdb3bdd54ff0daca7d52e7e84eb767ce4" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="836143d4863eedf691ad76ee32a40ccd87710ddc" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="25c7bbaeaef356809271f01ff910359b54f7f2c0" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="040628080ff69dbc15863e8dd191e36c7970be3c" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9b50a5dc55fe0c349dc8460bbcb923824282a5eb" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0636258d03e229c15a5621eacc01a41db0f4e382" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7c04374d8c1fc3917b2383bea80db28a40386c17" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1e360edc9a24349af58a7091f0c63d1d0cb572db" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ecd26fc32bbc86d63c6fe5f564ea9c7992aa10b6" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="def909aacfd5b334688b65e48aacd1d6d4524722" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e393cc5a9b3cc027a4609d28f739239709269539" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0c803d6d533d486246f53ed3168d2321d1eab2ec" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="06eea9f1c1d68cd562a735bd9a842052574519fd" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="47b30d5cdcb0d4574b0b979fddeaaeb2601b0e0a" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d1913bfac659f36b16aeb1aafbb60632fc5d2852" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7172df05e00dff30f717aa42cfa86a4ec11f32fd" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f09342ee416c6e195f25268969d468ca77d171c3" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b75f5807d44aa15442dd2a29b844038661d50cbf" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a0a58cf78332ab004615d20998a3d7fe9156ee3e" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6833b8e6e3e76195c3e1466363e854df93f943ff" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3525066684641fed0dbfba82c238a29e10a71a7c" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e72c2b886e32d7db82c3f78b089a8612edeb87eb" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e497bb7ae6f39e016062d3430c0abdd303567dfa" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fa90191dda132d2310f0c9dcbc5fbf5a5aba1816" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="baa41a0f2a3328679f5d1c7f688b17f020b8c0d7" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8edee798562d3229535e1da3c59390df44d945b6" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="09a5cd6f117a98043502c5d88980de800447da2c" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9b41f7d2025c34d5e8151e01c50737856ec83897" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="08b69103b64c3d39f95d61b5845556663a6f528e" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c5a5e5454dffdc47aba31c093568dfcc7b19ab9f" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c7b620f40fb570fb496dacaa2895ba5fbae3435e" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="deed7fb5a029dc812cb691af3532a063f5a0d175" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="75ae24f6d46e181840e5bb643aa78c21a0ef0f9c" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d0654689c73c975800efed80fb762f3494c9df33" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c3dcbb671daae208b7d7ce5cebbe5deca5fa9e3c" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6d9cf2108ebc5733bf3d99fbcd238a6499c3d76a" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7d3c8569a286698e02fbd842644cd3b018592389" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f7fca627fe8dd451b4ad13ac7303e1466f66a869" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="640228071549a23d3651fdc8238f860a6b52b7f4" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7b49d0f3c42962e96c1bd274daacf9b353eaf597" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="472a89557cdff788685ff71c727503d7b869b5ef" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="47de64cf13142f058b327f91783861dcbe28323b" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7d9684c647126c4dba83c2ce326e6c5da1af6c73" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5c4e5811a89ee1e3369752f7e03eaa43787be7f2" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dafe44390d7f82ba672dd75aa38d7bf9d8281393" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b98aeaa9ffce023098bf8edc4ecb734094954538" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8219f951c5a58945debe803a154d94ccbc18532f" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2f2437fbedeb1b8bc2b6529a88d7a2e8c343e6f3" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="67e9dd2415297ae12351ee4f05c90dd0d24f4f00" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f2d91b8b5a4719fc96df18ee1d7cd83413621b1b" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e24bb522afef6a9cae02d53a0c97febec9f93f7" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9cc38e093b86b4f6c735b63f1a9234e580b69651" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f11649b070065301d45f7aa7ef2d5b155bbcb38f" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="97772594bb7a0e7f4137b974861dcc3316aea0d9" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="79cd7fb6014faa55494040dafda02eab34c542a6" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d4591972d967b9ba7a271e19ce325a0331234ce7" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1a42f7f96724024136d478d5f9bc70b58009f27e" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e2df08f1939807421fb206c46af49a2806961b15" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b0cc83ce21cbba07082ec98f396a540691f7ec4a" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="83e38e45f0c9623d0fec122ee9278cda07a32f87" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2900a005fbc2aa79ca12667bb5c2dec7567b838d" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6f58e98057ad9554839d415fa9702f1026e87ee6" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9a725fcec848b800d05a8f3532b39e868ffc32ff" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="26b6dcfd41ccc541c78e1da5560f872d522eccf3" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0709412b74434f0f24aa901593ddde815714d7b3" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="70410bf6907be087e84377d89ccf7b19cc3875c0" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="478dead9ef9a6f8c11cb49a911d5433a995d4061" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="47070995e6c65dd605cf4db6243786ee994775aa" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d3870120e7303a4b1bbe93ea2b5f852bc3e9870a" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e5dc22cf9b8a826b4a03352fe00d95d184037603" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e31a4470e4a329ad2d8b5d7e97769937edc49e4d" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e4cbbdd15a7c34c9b8fb75d6be8d2988e45ee108" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f50224068a4a549c32a31db32fc0338a392a01e9" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dc7b65d926fafc7dccecd8480977ab9e4127c6ed" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="75f4915794bb40f0ec5ae2e1a70d241cd13a79aa" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d9ecbc28debc44eba71f40aa6116fa0422f06c7e" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="956a17125938d22dfc24c5e2135f0bc6f47b7d44" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="99d2174032e9bb58159afadc9c787ecad43f1285" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9c11f1f33283b3fb8084f72c894f38b7e3bbb38e" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0c4b23eca2e81bc6cc2df556f03661ce899af27d" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="aff43863f9f8f79a0373b2fb4d2b3eb3ccdaf0f2" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="241bc3e35eec2d23ce5605d7b713d562477caef1" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cbf126f3685e03f8b78d6b8a11d8e633f9f6b816" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d2010379b80b28e973c505b9725280b2a8a3ca5d" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8618b6110a1de482eb45342a6d2816e22c677b21" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="80e989a3361af930bdd33bb1236e4ca76bc97999" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="83e20ad448ef79eac721583cd2598a6e12b4787c" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1623164b8ff9d7d16371d5472290dc7cbe1099cd" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="52093fbc3efda125bf0dc7500e73ca041f5a1fb5" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0ff914f97c633bfc3655cfe41d183518170fd5f6" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c12d722f245edbfdd324f8c885752ed63ef3f393" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e76497953ea05ceb033f6edc58595f309b60acc4" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="104f9d76861f65bad7cb6864aa86e69f85990f8f" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c0ed219110a442f317d9286700949dc64c42b019" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3abdf40a67861569166cfe4f1151b8babe1f1a60" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="31ea028ac005d718ce099133c684ff380fc7f6d5" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d22e59358e2646639a1e702decd12b4c93f58d60" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="376c967bf4762bd3da752ddaf3267a1fdfc74eef" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c2bd9b13de0be17ce3cc07d43231abf3b0b31407" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a1c601be3004f19f67d151304a25d69a673c1940" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="45794cf8752404589d0cde755536e890bf19ea91" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4f135d7315ec098a61d8112cfd3e4ab40f932d16" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a854158b94f1ca5a49e03bd71e4685b3696da6bf" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bf307438d02fe8d37083cabb602fa2a3f8ee66d6" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6153c9a1924bf022b111e62add9a19bb388ebb44" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a3db45d7f264c8bccf3660c2bffd9bc3745c1b6a" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dd651b5c014821e9e4f531c47e5438378172deeb" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e8fe40a1aafed432783b386edc191d81294ed02d" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="964dc7fb81174ac1d7c42540d4db482712defc9c" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e0977c89bd412a99bfc7f919cc70d157ac743a08" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5057c5b0133bd69680b268460234d60e56221aaa" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="37b35c4890de394f85e96061be41ab8ccf2ca717" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4dd0ffab560b5dae9111afa6aeff4e28b9940f46" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2ada362067751ff24e4b557b37a9a5adabe9cf27" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f26b718dfb207e4c7fb4e4ea2491f556ec28d170" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="42e5970a1073f89678d2118c4f19c79a2c1c1e18" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dec1808dc3f196c3fe80912bf7cae30c07ad644e" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5b8d3db79d90b23f9b0585b41ee4f5d9aa9078b6" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="386e74661b3f4c0c3f31cc631e6b8e7f57892f13" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6df9c8cee241832012cc1268dc502c1981131a08" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="187829a103b79f3ae5dbd9806d1e0e71302a9d57" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6c9af1ce1d006e0c17f30a06313c9f301d83a2b2" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="976a5a46ccd74b3f008cc14d485a40db4db92bb3" translate="yes" xml:space="preserve">
          <source>def minBy[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def minBy [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minBy.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1c2ad02665738c4ec8c8f7f5d4efc876faec2275" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="c2525094c5a85374d2990199c3c4eb67e5cf5b87" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; )]</target>
        </trans-unit>
        <trans-unit id="840375f8abec56410e42d850e42b93e49134d4c4" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="75d4a50ce4b5781ae588444d3544d93e2e7b2e68" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="d167a5dfccd00cdfd1f55073166ed061b224516c" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="0f35d8ccb00bb504cae67411f08b2d51582fe006" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="731919d715b228a2210dcfc54ccced9aaba5253e" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="a22fd11f1199cfacd1d0968d0f687d8b277b39a3" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="024eed5607e2678d420ff3ecacaf296705ae8233" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="59f18b1f32d5253a66464c8128f639e0d081a428" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="2daeab0a3ba9df9d6e9f30fa5a34d7a65945a833" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="44cd1072279443d2a2418d7904945cb0514f1d86" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="78e98d94be07100b07886a308bc7abadc4106484" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt; W&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="801c8646b6892460f26f035cd2c682477e10d8c4" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="7b614e7e36ee7b8d6a6d4269b3edd5be97f3a05f" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="060676f0a534eab8d69a334a0d67b8aa66ee110b" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="997f721908d8cf7692f30c8651cf1578f82dd2d0" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="611acaffa6fdca20b5168ac70dd5c717edf41838" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="8a499f5c82687a79775fdc958d83cabe44cc5011" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="53cf4e13124c4defb1fdd200dabf5f2f59464c34" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="6387a8c4cc857a3346dc8cda96ba5268cd44d45f" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; ,&lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt; B&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="3b39f45a071532706caa21bcfaa301bb3195bd97" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="d15bba2fe76fd7ce0f76ccb682cf61f8ce7a65e5" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )]</target>
        </trans-unit>
        <trans-unit id="31ddb28850284ba1f91d69a35ac2a7462fdf2d65" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="592329794a60ff71d546dc4f2adbe6ed6cb862d0" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="2af50e20779fe5244926d888ca08927b035fa4cd" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt; T&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="5ca21e32c31d5b569b8e9b5a69b06bf1e90ddae3" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="ea5c161ad3cd676dfea4c76e022f2a94916f8688" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="682b7681f06afa53d0a53fd0604a966e73b00631" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="37eba8aeb5b13e6e698719052b6d4f2d4a3efeb0" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="c558800f0d112915e4aad100d62e287052aa0503" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="a74a9352f20604982fc9b4059fa592f4715e276f" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="8375a761d6cb858501948aed6bdca12340dd7302" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="271b72a3576c027f12002819884d90e95ade091e" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="903839756f9abeebb0bfcaf178441b14d83e83a1" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="8972462b035fdb92fb231a10ba5395aa94556e88" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="9aa3aab1876105519ced87e96e25d9672b433fba" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="ee0fdcec5fc0e7580fa6e18672de601ab339a8ed" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="2589859cdced93df49a8fa9a8e3f116475ccd10a" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="0e35aaa27d73272f178ec21497bad13969ae6f33" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="87fbd4f00c7dbcbf3390a2a6130ec8370c81e77d" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="fc6929866bcf21145281a5945e115b89cb446241" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="0793f274eb4e0127d8d225fbdc526814a75328c3" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="a48619eb5c966c2ff1d661fb0388c4918b5c8942" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="d1c1d66b95593d864b0c8c2f122a59bd6648dae6" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="2dd94717a121c1c33ccda5b9af78bc04b386631b" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="61017eb37a1a9280f8fc16ad3bf904d8a7aa074a" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="e5f9b9b37cdca09b0eb14199a5e401510677af8c" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="406a889f2a963fa53360721129a456d2e4624662" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="c02aa9e2fb524ef05f5b115c27b37ce723eaeb5e" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="071c7be724485b604ee26ae995923b6e8d278e74" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="1e7ff6423e489e0029f39f75eed52d1a02877fd4" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="1fc8b4d451c2910356033af5a00e135bfd4266ca" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="41090555ccd84202168a0317e0cc008adec8cb30" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="6a747d5229db4b5e5e673faafa125192d3ac782b" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="e9d2a6392012cee45dac64487503090ec6f6a1c9" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ])&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt; V&lt;/span&gt; ])]</target>
        </trans-unit>
        <trans-unit id="2dc596a4d935eb3235a4efb208e346b8aacc0272" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="ba1918f4e051264fb51b3f11f83bea869b3ec83a" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="eb943474ac14aec606bf6990f147116db1a4fd20" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="ba7ff7778b29e7ef5ffc7e755f5328e31ced2ac5" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="c7dc9a8e66f79fdebe57d927e1cae61f09dc35d3" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="4809c0bf46ab4d2a64bf10f884331409d0357672" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="21a38848ce2ed2e44a6a77390daa78fb67a63227" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="9717b4b5177d11f7c7184f50f03ba6901e7f66d0" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt; Boolean&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="a8d6fe6fdd09de99ceb3e62073ab70aea195fd9b" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="0291665cc88fff9a8d904bc28dfa7c22271e9873" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="124753000127d918dc6a575e8357bd90318760d6" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt; Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="201b5fc0846fc43ef1c6a055ab15905a26743b7a" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="106d2a7d8673f4b450672531a893d10b03057eb5" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="293e48c4a77854ee8c5a872db61de67340fc5632" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="bd9fd4f971ab28f2ddf6ffcbe968d113159e0d3c" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="e3cf35b865df44f81e19d3cc4d32188c0374c114" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="d9468bece44b3e68801702c6f6c88855e0bf7a66" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="bc757e0c8390a91f9d7683d71ade10cd453b0c7f" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="73236cfb5960cf6126f229fa5e792c47dbbe7354" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="096e47752f9fb7294667102c1348ab27bc5d9554" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt; Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="5b63188f8c0ca8a3332eb02e3ef8f92d308b16d7" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="4152186a7ff8774459f0b4032e82eca3b4f70cbe" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="dd9b75a244392df099e734114a64408d8c9cd27b" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c78066882be22781c48ff67449553ba259f1fa4b" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c90bd11997d1bfc8793dbd060d7531ada27bc2f4" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="4313984867581dd888bc01c4a21dcabafa426ec8" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f32cadd507c6bb248ba7164d46cc79c9e62830ed" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9f7674fe2d1d7af27cfbb7e3bab0de82ac0e55dc" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="78f422bb6dfb1d29c54bf434c9c018000347e5a2" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="52512d6d51f6354c0b82875afcefce2b2cbf80f8" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fc8990eed9e3be12dd1dcd0655316dddabcbf041" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0bca1346848151d88e21a27b26d280c3d9e4308c" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c24b4b4d9ebff0d155857fc3939120a116577fc7" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e6c5abab147367539c2c2c9807fa3b01095efd23" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="669520473d1e9ab8b4adb678e582cf5b7d3ae48a" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fb70e00af393f5d104b88c6de490151f9870ff06" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="80ca6359e74f91f80d41b74a9df9a633ab66b1a1" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="21324c2308c9ac4c844687c0cbb90d5816bee067" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1b05c2034e34e4c582392762379a85f3449617de" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0af3211955586588dbd46b46f65d3128c5059b96" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bc187466deb99c9c420570a1c24bb695c4beea08" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="10b9282bd6e7095f9da7dc948cc025f9ce1c02c8" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0d811efe7c9bb14cfce98597844b2d0bf249d26b" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b3d36ac926ab6616d79ab106a931c805b4c94f3d" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7efef69e1755c5f67996f7270b146970ffb3fdf1" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b4ac9dc29add8cdfb65c3cb4d2acb188609d5f76" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3477f98e8363ad82bf56902672cbafdb87d18970" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="538a43a8314cb1cac70b44b6399c8224d5930763" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aa93aa314c4c5fa516c27971e34178034f879a33" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9c2f051b951f73dbe899843fe388a267a2dcc4b0" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="49cf908d2422f4fd5c8902083689f86891aababa" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2f4a6bc6be04f9aa29a0a89a0598a825dce6e906" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="f594c2d022c449ad90261aead9f1efb510147a92" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="71c6873a3a9a3ab6ce63ec65c997ee4cd222dbef" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="9c2760afa4daf7b597db7041e1e1715116fc361d" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d04152a80c485ad06e4717ec3450bfcc9194d62c" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3d3b70dc1a324dde881dabbf15b1dd7fd818cce4" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2fe4df6eb66f35ec62e4293e68a393d0f12b05e1" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="802b7e3490d2f5c532fe74e98870efea8fe6ef72" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a37214e938198482f0efc766322718847b0ac1a4" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="78c217586973e3ca12f5b608fcce5f2bb6c4fd0e" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3eb9f61ec15f6ccfd31462306da5c175212d9de7" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9d7a42539677e9282636bf70f973813d4d93893c" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c2679733ad332ed04939019972053b02b12890b6" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c69ba00d8b07ebd546adfeb9829a1ca0829be6c3" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="21a28774106fcb9f683be3bfe7aae5db704519be" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ed4a5d4b96cede81cebe9c93fb0e03622eb1dafd" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c5db141c62ea540fac8dc83bd923344a89c95e1c" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a453a4b738ba4be234eae0747190e93769452ce6" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="30e7aa3aa58ee07691e11ce8ae6fe07cc4e2bb8b" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b08e8941b7de9b221ba752d29b188564b6e4284b" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a43ffe98a6814154cb81234b8f4c3cb37cead517" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7521b96410be3ba3edcd70e832378b8634538139" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3e564b58da95404e9533282df4cf00ef76bbdd06" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f2af38b8631006d93e7485604ec5ba657c389d88" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8737ec2a2f92253c96e849fa3ac6a29828def55a" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="03f49ab6b938b17ae798f0473f8611b44478d22f" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="96d9b8fcf2e4ddd327a7e3069e9eba7bc65e50f6" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ca1ba2351e03282f2092de389f74136c8f34fa20" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8c56cddde2a237a79735f25adf9f46b493d9ff6c" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5a33542adb17a46f97fc588f9f59cc59f9b5c895" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c4232188b872cca186ba995ea884aa1cdb14db0a" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8eb06eb03d8f0a3bdafb044b83f27244c37e71a9" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0785a90b34adc2cfbe54bb9f86da7f1ce70bc0a9" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5adfef9468822a963112cf73b5119696040e1255" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="478d54573e00b3113870f9346d2f4c7887722a92" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d885f31afdbad69955d2ad5827ea836fc4fb7129" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e8507efc5267742da9a8a635167da9c4acfa0568" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8638a6a25c1b5f696aa8d1469a4c5ff9c5a86aaa" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cb914d8bc861de758a257b1d85dc0773cb15f859" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="285de0ae3c0b88f70b198d6ab07cc63bac2da432" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3313523bf1c861340568881c2c64bb6be8990479" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="299b39a4dca62628d51ac372e83ee0894f261b4c" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f745fd4a3e689eec97061429edd6b08d1e0306e3" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9905f14157a351f7f5287841dac80200782fb02f" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0d13e2fb5d9c0e996e774c99ef271efc403a7184" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c219c226b46bf07f999f1aaf9fc14183163eb29c" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b94078c18bb3e6384128cdb063b95a4089df3944" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ee8e1814e16aca1713fe6eb9ebf06448b130ec6e" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="073929235ce3c584ff07348794cbfb9675ed1584" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cb23da98283500eb1aa975e2da6c35c168f4cc51" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2eac10d8e3380af4adc5834495a574b20968c981" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; ] (неявный&lt;span name=&quot;ord&quot;&gt; ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="06016595e0adcb3d3a74398673ecab7ffb2ec6e2" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord:&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0d829818ac4e344aac58f73a46119286c5e61183" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="577253a5465f41b20e624e3047cc75dc5a415b93" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="898a58e681b0b6540806fcc1ee66385e928405cb" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ba261a387ca1caabab8f9110f9acfb30352332c0" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="82c27c42a80ab0cf149b123da171f370ab00c568" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a8c939b4c92945cad855eea15e31a13cc1ea407f" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="273b3d7eced5898a2d55468b37265031599cc8d0" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c5a9dd0eb61418c82187a7007520630ad1f750e1" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2d0bfc35bf07c2c79e9f5cc37f516cdd266c43d0" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d4b783642b13645d0892a498ea86a6ee72cf7d05" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="42d93f280a0310f2389c740867ae496512345a4c" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="69f8123012f1855c2bf04b5794ec747eabcd85b3" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fa537651eadb14a1f3a1b09c558f8f89816d4565" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="559ba6ae66de2d3cf5076bf4e87950753ea588a0" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aea1f0c853f4e48d61dae131ecd1a5be395835c1" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="113f5c9de85264603cf206632f4f19d9652105ee" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="235a3c39e07455da575bba58774468524b158bca" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="efd20e6795c79e596621f6d14fa294f4e8ccdaef" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="81e5f3659f3c4285f40beb63a6e207813c650ee6" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cf2c6b5e31e39363970fece53c13f87751a190a9" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="69b48f81768b6b2fd1d8fb08f78b713ab069f35d" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f518430a4856c93f05873436bed3555ddd86545f" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d6c6e46f7d24ed094d1f83ba0a043794929c8645" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c37de76cf4d0bb3c988f6738cb76d7d4b8b79d64" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8757438fc46a85c89b32d67be15e9df26187d34b" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2ff1b89c4b0e0deda4223302d755fde3327ce388" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2203e3b1de998a92c93d181d6e4e0c5dda327820" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f5b91d4f403ec0a39b82a0569b24e92a32e68faf" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cf5ac61f3be7f6c7df7f471fe53a5f5cc62bfd3a" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6d3f222925a378db2600d68eb006ae26884e1603" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6b82c5abd87f0670c65a34fe8afabd4b93f6b39d" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="59937fd64ab3c20fdea9ca1e7de6aefe84f3fd5b" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="26470d3f80851447f477202272d955ba3d0e3f24" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cad084d1a65620e574cc761773f0bbd4e3dd9673" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8b0fca49d947a38b0e1dfe8f31fd71816b7a7532" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2ce0307f3791efca4f9b1462ceaf771dec6ddbcb" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d99f72876b8fee620e68c6f63c128e8deb79dca1" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="93e919280e6e16fd46f3562138b42e1bbbcd0826" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="34235d12a608d3be1c11aa24b07198511e2cadb3" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7d3b87e2850f8775deed9cde93aa48ce6f97dab1" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f119e8fad5cb625f1f4b184da583f37d1a7c970b" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4f8931796ba63da1c399a313d98a643e3583515b" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="19cdf7bc97b8890e4c37832b8773df33964f97c4" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="652f37a03a5f5aed1a761f22a25d391b0819be6a" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d780abc372c63718c2a586d97bd778af3daff2d9" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f67931c05ceb74fba5784442d00092ab5d4398f9" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e0784441d68c602d26a6e3455951af294536ed2d" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="346dbe5b99c97f66ca6ef970fb86f27345ea046c" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="75d69e3dd430aa8608d7ebbff29c8623821fc40c" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5ceea9a13b4d2ef88df6be54de09e1699602fbac" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c4e580cf0bf541506e93886eefa895de5f3f880a" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1b70b28aff42d9fc9550c95448446aefda0b09f3" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="74202e97a7bd817ca2dae4f5412fc5f2314b5de5" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8a648308d6c06f43ce6d93ffe5ff983b1b9239eb" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2896442fa4217001d18a351b5c13955be345fc43" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1ba8b2d432a15500bb2e2bb35b2596a19f326362" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="067f41af4033a3449c75486cadb376213094840b" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="56c2e145bf4fc61eb8833fad014f2b5b6572dc09" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2f580cdd4baa85666efd909ac6ee3be4ce9288fb" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="206377aa77c6b4ac3927eb2cd5db84eb7341b1ab" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="27bacb88e7eddfbf759c3a3c724d1cdaf201c76c" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a81f29a513d116b06fed4cb2b49d1ffe18d26da1" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="33f8a5cce3f587495f6761a4ef243674acace508" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="087c3d9bb08d1ea10fa08f8cfa8df842cad7d69a" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2ee84ea3e3aa1cc11f432ee9980deea1ad03bebb" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b6aecb35efdcccded6475873bfb26a7348fdea96" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3a36b25d4fffdaa5152dc0ea0bd354f54b03f134" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e6b7414cb5a2f99f1ba87d058e3c7db577ae93f5" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1ddcfa1cb66e796fef94ea0720824acaaf958154" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f2d86e17508a11d8ef4b6faa9976537c38c51762" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="898c8c7e75eac9cf2d86d9d10a610aaae0fde121" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e4d476e6fa9521cb5f6e867ff666468a180a6234" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="31c50f603c58e03993eacef9b90b13c95ec8a034" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="75a4713551cc68e39211de78124e62a76e04ce04" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="37e6dbf2b2fdd301902d2e093dbd9de01a9cfa22" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="96830a6287cbb30ccf66df2f2ca430a1809f4b83" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c4223ce8b3b355be4cf4d46a03f4dcf3d3097fe7" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="48d4617de05d252655c96f86c496ec89f058e83a" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="65a69fc7c6db8cd9f2a6cf0ae55e079b69ab0192" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="475a79d0861fcf99b6d7b3d10f9d7c51c16b1656" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="753c2ca886c5354fa90cbb6641e9dc34659c9846" translate="yes" xml:space="preserve">
          <source>def minOption[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def minOption [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.minOption.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a8a8662983e54cbdac441084137082ab2f522f05" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="5fef2a7c52829c6a1c7d2bf9b4ef08c578dae53d" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="95b0b2e19dc1d38334081efca86924af0be634d4" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="03fe3014c8fb98a973935b4510e4c53cdb1ea2db" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="cb0d89f7969d1b9317d439ddb65586f3c8d09f7c" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ee0a67bec5d0dccb3fc6180ba024b3168606282c" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="68287b026b0c1ac216d7baa2f3b168fb42c9ed02" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="be899de64f471b67533b959e2649287cc03691a0" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="2f169f6917697976d404be6926a3abefb82f8f9b" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="5566a9bbcd0ef04da59410d63bfab4df32e8aae2" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="25ac40ddf8762698d57f6f695912e983098ff7b4" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="cc3dad1a3d6ece80480ab6b736d13ed7a0504171" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="42e479e022be2779f479f699b40b1bd9048d0450" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a2e437f772f5c33abc419def13990afae4965649" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="e8728242db4f8818de511a79935e59bf22b6393b" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="538e0f52d25d802089b14793f157b8b387a2833c" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="fb73f5bc0407440a1795819cfdb1770f942784b6" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="476962290ca00a842de1690e03723b1a90ca8bc2" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="44182fbc5450c716dcd24dfd549ea67b95ed464b" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ae8c43f4e24a3101b03fec65aa131f4eada9dd67" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a3436c92ac6b11b5080d6b3848923fa49eefd53a" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="85c1c1525011cf7c2a68a9da870d1c5c15f3b758" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="c8425f3325941943b1b5ab60201daf7b670903cb" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="f4ae091bb026773ddcfb009567f6531d3732e998" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="aa11f5c42b702a6e424253fea41adf6b7dab25e8" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="12ddf2fbf6399ffa8143d3d8ae35d7c715485dec" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="3c080ec1923cab3bb141c2af9a92b3b458e74626" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="bdbeb509c31e2bc7ec997f304844ceab700ef141" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="7c0b9b08e14c8cb59d10aadbc16cc412d3b4b31f" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="439eb6d2f19d9dbbeba7a8a11fedfd3f8eafe55f" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="461e434248e80789adf4876120ce0bb40afb5473" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="23bea8c0b61881bc410315a5050cde7bfd80f67e" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="0b844b997bffc6070292cbad2a82cd5f6c09cbc3" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="c59e665b22799dd456705b0ebcac5c1249b8c8c4" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="e602586f12a4fea2d3f249bb9b6fbc2b27923dfd" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="f76ea91cb126fb36ae7d2de8d19a1fe345c69319" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="4c44ea0c4d5933ac0daa92a88a3b2b774f864f34" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="36de64fbaec45767b1a6874f479fe0b2dcff75e5" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="f6911e70646eab78d75c7245e33c522998ceab19" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="71c3a909cb03b65ae783392f63e7d18456e6caed" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="e563b29cdd0785b77ea42167b0bdfca092603b3f" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="50afb8c9145429c26aa0c7ce7ad18513716e62cd" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="acba3f833efc5bd7bc16691bd47a92f9bdc8aa4b" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="3775f27468bbb1931b63316a2da1ce0a70ff7500" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="16705252eadfaf129dfefd63135e9947e8c36c9c" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="935a4957f8eef00a00e070c19b9c98490d321e22" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="6c866c0da8c3351394222224d006e3751cbb9b9d" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="c9c4290ae334d18567e9b2780d2cf7006d451a97" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="0916e54ba3928eeaf8538e3e283eefc70bd625a3" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="987289f1fbd6d14e11a7c02447a25f7063a589c4" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="c5062ad2014b18916245440229111d554e02d9ed" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="fa43b7f2929e08925769a77b8f1a40ab2e1554a1" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="9b2fbb1eb356766aa4b33244be2591ad860edd01" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="44e7ffedf00edee2765dcd5c1df0d851bb1063e1" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="4408b277bfd389da80410bfdcdcdd65e966f736e" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="5ecb99d83abaeb3feb2566bf6489c82734f73d54" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ])&lt;/span&gt; ] (неявное &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="ea9a069e1628e20433192c811b011d3c7bb7b44e" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;ключ&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;значение&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;ключ&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;значение&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ae6c1e1922f879d1c29487584441bdf9cd77991c" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="1e9a6d6183638185f96db13e634f8c6cb9717612" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="7236a90ec5b2e9b21ce444dde828a17d36c56524" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="931917bfe8c20f827f0235c96a3e4f6ea0e75e6e" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="07150c99ca1f61d39d7b4f31ae5c58f53507657f" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="277781af6e256225c9aaf30e5ed84ff1b1588882" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: (&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: ( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="d54123824ca0b87265572366c86ccaa8268dd7ba" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa2e2681da38a5150097d632b759f2754c7d741e" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2bf2f9c2e4de3362806687557fdf6bcbeecfa15" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68beb7464519cf8dd9e29509280c44cfc8e1577f" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81e6329d0ba4de074e47aa4bd250866e1ee12c03" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9674bb4a97083af3899c9d1a01174961f5d4f9a" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.BitSetOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.BitSetOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="903b06ce5cca25396b3abaa0ec5cc1f31451c3e8" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b31b67869a1d1a1a99a6b3a20805fabc1ae3f16" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bbc1f74421e4922f6351ab950b29c47eeb352258" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ] (implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="088f6baef8c0c14dc785e9c76cf99facd99b79be" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e6c87bb306702e61d1a084ee04d380c65769ce20" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="005bda73fc2f2f2a95ea57bbc625c3f1d4e988e7" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7a3283ea12cfc8d83040eadaf694bd2551daf0f" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f50f52c956ad9671319b34570c3533d8d99edc6" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b0f592166b6075a682ce7edd28677d7db5ff1971" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.BitSetOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.BitSetOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b02ab9e2516ba76835f098bc9c8e5b39928509cd" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="058919c43fa2fa0df2eca67909ede3b4a08662bf" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d108a9cf7446e6dc912686cbcea31c0ff7dffd35" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ] (implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10bb924d12de564df45b7b2ffdd97db377f4b3b1" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d0c26a831773eb977e2dbf8f162d8c773a4f322" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;значение&lt;/a&gt;&lt;/span&gt; ] (неявное &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;значение&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b822255f2f398987d4b7acf0d68214359ebe5dbd" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="02794188b2fb903eff1a9a6f19c4441f24d780cc" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="659b2f01f38b607ab670544539a05c0d4c8a5429" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a019767bde8f9ac126ee6cec08ea893e33cd5d98" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3c6f320d87e6bce41db7b15d13cc42ddca384c7a" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="93021753a49ad4c95b83a5a7345862332940da74" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0cad77e1e935c72d342b71b310f3e677340de2c7" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bd13e26e9d9d0d1ebcf2b3bc8681af00bdbd16c0" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3b092c12acd9ab6e38e096260da9653ec69307a4" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e276523dfa6cb5566b68f2ec5b1fa3694e69014" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e90538160e5942f5d77c6798c9e66628352e6f5b" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fd83a91c787e88059a49d736584c77e226ce2de8" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2b77fa371108880526ca25c0f900a6807b4014d7" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fee47e364bb531439b73f17c570de5ae1fcddf58" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="469c3e6f34052d0c8338eea9b6e149e8c00c5bd7" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4d6ba5b12158ef3d6058cacc3270a4e6ed6b5b38" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9c6f52c28c1e7151f7c662f93deac8eb7d02ac06" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c9c062fd4f07543750a2b7a05bd3e8305d14f962" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d94e15db69b8445a32ed9c3d6f3a1c815269a6c9" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a870fb50c4e98a61079e244953ae9e6375003ac4" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="48221f688e114c4db13f4f495c4dc9a21b52e7f4" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d640c07f931bbdb6a28aace16b541b8935088c7a" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="94a536bff392a042f19940a11a133d7081a85357" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="17a8e550262f71df6b06575fb1b0a2ba7162958d" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f791bed82a50c0f56451ee2b448536b3ed97a86a" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3b081727f8b654128f44ebc4ef165e0fed465903" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1cb65f23e60bb52e1ba4ef12eb1b2775bb64ed63" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="8f1c82a83643c4e3469150aa6d49a09f1d704bbe" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ce6bfa53d229103a74930ad19d36989942dde7d3" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): ( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="b057bba396f772d2c0c3b97f405ee80d3403e9c0" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cf8178a20c62be52a09c7cf8e6dbe2337919fae2" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt; ord: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1b00f9ba9dbaa6c4776db81a7af1fdccc9899984" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5a97d67403bd4e9efa98bac2865d75c3c6997e3c" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4515b1c4d1338aee35152ea516773981e3d104bf" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="89a78c1b848322e2274bf628c30441930923ed04" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a519d9332153d585ab310eb23a8c582180afccb9" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9ed50d60ffeb48f78f2052feff7d3420521d47c1" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d65043bff909ee09a0e6626a842b44372426a36f" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt; ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4b32cba0719a69cc57c0124a045f08b8635a93be" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cabbabfb8c39c434fc1125f34eff24925f4ef7b2" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8a1452af137092b437519722c0e05bbef3cb772a" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ed58a8cd257280d2fd3ac505ed7983a9dd482ab4" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0489b20a1f6b85dca096d20ae97f2cf4ecdbcb95" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="29aa5ee03626f03fcdcd4e8ae564b7218d231235" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="19a2802df7048649ac7dac1d02ff3cc0b77bbf3b" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a2a47d531ca5faf5eea5e4612cccbecb23078dd8" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c5e4d33b417d3ca3e8ca884b24dc30fce38b6974" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8bb240af7d19d3462d978b422b6ab8d83f4eeeb8" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b73103b71b5735017c26671a57855ea62ce10bdb" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="20ee4ba043ce4370d2aa4090668888276865c8b7" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3050d935704a62d9f3663bb1dd7a6a870b5ed0a1" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2bf904f09d7da229e3d7335e829366ac161966ce" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="40b27ab33ec1afdbd13b84de6a196510c8a56bbd" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4ed83ad7f8b62086802ed27e225d310abc5d818d" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b1a1f479e041f9ac119becd9389ff44784a58f83" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ] (неявно&lt;span name=&quot;ord&quot;&gt; ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="718af6162ae8400c7fdcf184b028bca5e6338986" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord:&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt; упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt; A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a8136f622e4f3092b742d2ecc800f09f2f306eaf" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord:&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt; упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt; A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="83322cdafca39df0ba0cb0c97d80888abe82bb6b" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord:&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="18cb51b0656d5fc6eb0424ef3f6c1dd55f5e5617" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord:&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5755468287acc5087eacc3f858c58c4df12f5610" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord:&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="120456f716286e696864c083146b6d87911aa638" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord:&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="72b60581f057f7690fc923bcd7c5c065d7cd45b3" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord:&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt; упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt; A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="514fdf7cc798fa5d2d8c5ae23ced895e940d79ff" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord:&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8c3ef63bc8a1b76cf97456fde7451995ed5b1036" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord:&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="05dca9bdf83129d86c58f0e00196e16a1335229a" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord:&lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a0214cd20be1f418876c899a107ea3472d4841c9" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0973923fe3b701294d0a98b670923e74ca4cfaa8" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="89f83f52276cfa11caf90e0197f1065b00a4fd7d" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8831f473ecc5cbd3e51a16aaba5708bcd636c53a" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d99094a2e5c0fce9b405eb27ec72ce889c28a29f" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c2d9783a61b1c605600eb840adae6ac6dd3c65b3" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="80f50eed641500a171886130d0af05cdcaad2cb1" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3d5aaceec8ae9525f9822064b8cfe3dcba9db24b" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6867089e680fbb0187a55c2bfff5458ae63d770c" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9474ef739d29217577dde0c011395df7fab6afbf" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="15c90e6a616ccba040b0cc155d4e1d0f23bc47a8" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8b325495012b27f6cd02834e1d9b2ebac8e602d5" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6cc09e9b096ac4ef7777521f35aee1812d035f72" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3b76db3319a9fbf389432dd672cf0881378fe8d2" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2d7c8e9d85458fe2b03c125eb8706f34e3fc0a51" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4a8b0d5bb33a20ed668d6cb44646c0506501107a" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7c3ec15579afd2b03b26575e8907afd83c07a9c8" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="00244edb74bcba958cbe8e468f0d2adaf0ce5fd3" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="41de8cb7fc2ec646dd877aa17114be383dcad53b" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8f10edd23ff379482e92b0051b0231c3f0166e81" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a27cf7cdf7012012336324b3bebc620c5a675fcc" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="66cf6e773992a0aea9824755338bd906f3bba4c8" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="12e4cebb52eb10599818ad6e81919c4ab060949a" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9679fb6ebb26d8d1a8ee788775d07eb9d9be0944" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="15062d0624059ee1a662ef0e81121347766b4557" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9fd134dfc7ac42d471c4b84d2763b32cc5c1fcd8" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="afc10cab5b1079448326a7aab74e05309f3cb4ce" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b0b82688ab2ea62d01f93fab4d04ffb86a563ff6" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="10c28c70c8de7822cf3ac27fbe3571afc54e8bd2" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6bc1d46e435529a29e34d4c7a9736c45ad492147" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6921e3d70a942e334579806415c35dc73819464c" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="349de621a35b27c15de39aa12e77fc15983fc3b8" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="baf709510cb92c5e89008503f6e0c558584f0583" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="10478fb64d7f7c35799ad5096622d9485617c42a" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="75e33911775126358a24f5c41dbb85edf697b26c" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="547e38fc29edcc47be1141d64c89217eb4a105ae" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1e43f4466d7394bb1ecf5d003805e3309b3ec38c" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="468033dcd574c7eb4d5585f2284d00924c77debc" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="729587b4e4da3fa92d8c1f502be5c11b592d6cf9" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d4f7636631352074466afb66808137c5fca50a2d" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="83e0fe17767d207324ac6db69d410c18defcdfb7" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c06a53a9db41a519073e6863eede856d5dcbcac1" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bae4b7498773ba725befc7da2dea2a1520239578" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a91c2f173a9da31a131655e7ff7206eb06f6a56e" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7913cfd6da709c191c7d609e392fb2dcbe8764b2" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="57210d20d67e9bdbe75aa756850c24176e01bcb0" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f6614f005f62313fd4a661c93562f0e3bc1de445" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7f6492c9163390faf89bc65b6be16e8e17fc063f" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ] (неявное &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5db747e87f190b7b2a518520e0ee68bc6f9c94e1" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявное &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a69b3ce97b216082f124e6c5572c29e7b5d8749a" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявное &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="293f18f88deb4f44c4add7231af1b8d4d4f1b931" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ee855026b8234695c850178e1c2def0cb81bbf76" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8adfd12f22e5bc9bce585c0070191ecdf07775a8" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d6a2b9bc11f3687f36367fe3582a1b98f66b0947" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3bfe27e50abe96586d1609c9c884ece5ff442a7b" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявное &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5956c3abde2ebb73e85cc69814d2a3f4c58bcdeb" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявное &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="57f7bf5bee8ff6c2412efc9758945f70496cf793" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e5d1b956f8e99a1b3bf4ff3d5b7ed784dc58cf2" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="681c6aedff4ac7936af2f93449ddcd0d6d224d92" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="155965006e8964d87f6728cc6cd6870a128ae6af" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dbd2c6d8c6816d86eeda96a2b1d521e3e48bae1d" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="15819d48ca5317deaa86cce8154c0a8a47af3ea6" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="55f3aa56edbef56e72be2778a979557ddb5f8e51" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="07041a2f3a78a4d5cdff3caa868db7daf31e1655" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1d5e2df595062a68d9cc6b32b9af0e793552a7c6" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0117531722692bd4136e06fedbd4f12e2e614ebd" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="eebf3d52afe10ac885ddbc9af9d56e132e9bcd29" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0c49be68ca7de4aa643acbcf03be0fc0003018bc" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1c54e814dc98c7b45cbaf52670d43090362c1184" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9827596c81213bab41838b7f26f643a773fef2cc" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8c77f7ffe91e05738b97fbffe1e1f37311032c84" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b38fe69a7a45048dbecc04b9b2b6fd495902915b" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d95caa89414891442c03edea30124ab3ad36a3d1" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d04a791ac6e8b916818cd7c074f2d8abd48f07e7" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1b986834acfcde4f854a2c47f39d433466c96792" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c0605284523379eaad29297e035c31ceb92d4cf7" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="466e442102c38d6efb806159ebf5e24f455106ba" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="094ab9a72a0152e0a5539eb641b63e94c203c7c9" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b1e3a54c4fd8d11b75a0d7cbcd066b9e9f99ddf8" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a9080182a2c5533f0df3b3fe5fdd1ab79d4514ef" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7e1540664feb4537976070dbdb659149f5fb478d" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7c6281916e2742efd02992857c9cbe2e6f400e8a" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9dbfe629b027c2e4d3e12b9e7105425ce5380222" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4f0c2c67f51c52e43897097b5347da15f12aa1ad" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявное &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="74ce739f268ea28171f44dd6b12d8233daf566a3" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявное &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0f192d50a6b6abdec92ffce58729989d65edf422" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a80fcb8197e3c8407e21b662f9d2a9d922d6a681" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявное &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="374142624f107fcc1b28ebfe736efa378eb815db" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9facbcafed2d4c12e0ee4b66e84f1281f2cebfdc" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="15cb5665120c0d8a8f67e13c76cd1dc11f03e583" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d4dbc461f6ec9759a897f91f48f72f55e85e1972" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: A @scala.annotation.unchecked.uncheckedVariance&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): A @scala.annotation.unchecked.uncheckedVariance</source>
          <target state="translated">def min [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: A @ scala.annotation.unchecked.uncheckedVariance&lt;/span&gt; ] (неявный &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.min.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): A @ scala.annotation.unchecked.uncheckedVariance</target>
        </trans-unit>
        <trans-unit id="9e00f9e677d72370b5dd8a0a4ae4fcb0a467e444" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;T1&quot;&gt;T1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.min.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;T1&quot;&gt;T1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] (неявное &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.min.T1&quot;&gt;T1&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7e47ffcadc110a5ec810a8269bb5d3173167f686" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;T1&quot;&gt;T1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.min.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;T1&quot;&gt;T1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] (неявное &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.min.T1&quot;&gt;T1&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9075aa38d876d699fc26ac10a7540124dd97bc32" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;T1&quot;&gt;T1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.min.T1&quot;&gt;T1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;T1&quot;&gt;T1&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] (неявное &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.min.T1&quot;&gt;T1&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a3597fb3516a45df60f75ee35c8ab461eee81d04" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3b8fbb5f7683a176fa23216b80060708363e9e59" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f67dc42fc988009c172dd12f2caae5253c0c5c27" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f7eb4e0a215798369181d01cd0b8f18058b551c9" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.Double.IeeeOrdering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.Double.IeeeOrdering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.Double.IeeeOrdering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.Double.IeeeOrdering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.Double.IeeeOrdering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.Double.IeeeOrdering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f83b950b3e55e5cffe070b3b70ce5e7cf5cf4c8d" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="040141ea72153230f2cd41c17a526521f2b2433b" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.Float.IeeeOrdering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.Float.IeeeOrdering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.Float.IeeeOrdering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.Float.IeeeOrdering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.Float.IeeeOrdering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.Float.IeeeOrdering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="27c76318a09641cc33a351f0305bb6a8dacd8de5" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="98641484ff2a655309c289b2bbf45a1d74ad64bd" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b66871192a7276eb09805b1db3e3114686794314" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="744a1030a565b26ab89bca97bc73a025fa35b556" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f609fffc14201f57b343c1adc1e1b76d5df5867e" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="298b849464cc4d21ee374a4cdad8d335763817cb" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="90273c204111cb24a89bc01faefab863fc43dbd1" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4b3f97066303fe9160612ecb1e296fe7bdda0bd7" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cd714f423926ee57ae6cc503e1896319f8adfc2e" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e070b392ff11c110ffc4aff5fbd752aaefc76880" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="373e7b48352e03dc3b747b31ef62dbc4e875779d" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;крайний срок&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e971a50cabce7b3db9634086fc354dbd0618cafd" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="225e35e7c02a58f19ba0d443d4bec347ccc4c6d2" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Значение&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9183648cc6bdb0716b1bb3258a908c7f9689bf17" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2c0193de236d0189afb39e7913568ead8ab3aa18" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7701e01bdace908404db52333a13fe895a74f7d7" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9775d8cec58bd2a66370528ec02807a1b2bdb033" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="28e396e1c11f50ffbd928c3e77dd118b052f7250" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="64d5ce4e0d5bcd66bcd6881ba35f50995cf88656" translate="yes" xml:space="preserve">
          <source>def min[&lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="translated">def min [ &lt;span name=&quot;U&quot;&gt;U &amp;lt;: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.math.Ordering.min.U&quot;&gt;U&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="491a9e51c1d28cc2306a2f6cf6b8820f996623f4" translate="yes" xml:space="preserve">
          <source>def minus(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;</source>
          <target state="translated">def minus ( &lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Продолжительность&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a53fdae5807f7b42dc6eaf04dce7442452b04f95" translate="yes" xml:space="preserve">
          <source>def minus(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="translated">def минус ( &lt;span name=&quot;other&quot;&gt;другое: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7543d54fc9da268c6354702b810bc38a4f862f53" translate="yes" xml:space="preserve">
          <source>def minus(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="translated">def минус ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;байт&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;байт&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;байт&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e15c7343f7e452e505b72eae12abd646607a640" translate="yes" xml:space="preserve">
          <source>def minus(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">def minus ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f717a50c7b9a77fb874ca0b4e0d087f6f33a0764" translate="yes" xml:space="preserve">
          <source>def minus(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def минус ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;двойной&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;двойной&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;двойной&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34855a6cc0608dac238304b3603cbb7101987dfb" translate="yes" xml:space="preserve">
          <source>def minus(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="translated">def minus ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5403fc1e041b85b453dc9e701558ea6bc3cefdd0" translate="yes" xml:space="preserve">
          <source>def minus(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def минус ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="630662a65ea01308d4214dc7361250b99a15d2dd" translate="yes" xml:space="preserve">
          <source>def minus(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def minus ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;длинный&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;длинный&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;длинный&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="83be5f3725e08dbdbe4b4f129f822d53e54e856a" translate="yes" xml:space="preserve">
          <source>def minus(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="translated">def minus ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;короткий&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;короткий&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;короткий&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25954c4f5c83e97eea0a8317123cd428ad34f99b" translate="yes" xml:space="preserve">
          <source>def minus(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def минус ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3a46c0c1a2033242c22ca169a10d1a0c6e88ded" translate="yes" xml:space="preserve">
          <source>def minus(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="translated">def минус ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="15c0be7d5e950b9de872683999275210c4d25e51" translate="yes" xml:space="preserve">
          <source>def minute: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="translated">def минута: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90a53deb75ab2a74b69220dc6b1bea4eacf9baa3" translate="yes" xml:space="preserve">
          <source>def minute[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.minute.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.duration.DurationConversions.minute.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</source>
          <target state="translated">def минута [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.minute.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;классификатор&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.duration.DurationConversions.minute.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee4e0dad8ba0b0de921be2754e7b8cb520f75b67" translate="yes" xml:space="preserve">
          <source>def minutes: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="translated">def минут: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80a5889e035132d4c10fe7c8f310a12889fe5514" translate="yes" xml:space="preserve">
          <source>def minutes[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.minutes.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.duration.DurationConversions.minutes.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</source>
          <target state="translated">def минут [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.minutes.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ) (неявное &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;классификатор&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.duration.DurationConversions.minutes.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da60e5bfa1bb8a9c4877b4fef1378ef1dec565f2" translate="yes" xml:space="preserve">
          <source>def mkCatcher[&lt;span name=&quot;Ex&quot;&gt;Ex &amp;lt;: &lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;isDef&quot;&gt;isDef: (&lt;span name=&quot;scala.util.control.Exception.mkCatcher.Ex&quot;&gt;Ex&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.control.Exception.mkCatcher.Ex&quot;&gt;Ex&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.util.control.Exception.mkCatcher.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.mkCatcher.Ex&quot;&gt;Ex&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;, &lt;span name=&quot;scala.util.control.Exception.mkCatcher.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def mkCatcher [ &lt;span name=&quot;Ex&quot;&gt;Ex &amp;lt;: &lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;isDef&quot;&gt;isDef: ( &lt;span name=&quot;scala.util.control.Exception.mkCatcher.Ex&quot;&gt;Ex&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.util.control.Exception.mkCatcher.Ex&quot;&gt;Ex&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.util.control.Exception.mkCatcher.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.Exception.mkCatcher.Ex&quot;&gt;Ex&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt; , &lt;span name=&quot;scala.util.control.Exception.mkCatcher.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="daa2cd36b3271025b8bd9908bacb73cc8c2cb55c" translate="yes" xml:space="preserve">
          <source>def mkThrowableCatcher[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;isDef&quot;&gt;isDef: (&lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.util.control.Exception.mkThrowableCatcher.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;, &lt;span name=&quot;scala.util.control.Exception.mkThrowableCatcher.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def mkThrowableCatcher [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;isDef&quot;&gt;isDef: ( &lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;f&quot;&gt;f: ( &lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt; ) =&amp;gt; &lt;span name=&quot;scala.util.control.Exception.mkThrowableCatcher.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt; , &lt;span name=&quot;scala.util.control.Exception.mkThrowableCatcher.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="061cddb0d5f8b553b97ecacbe85be72f1ea6d494" translate="yes" xml:space="preserve">
          <source>def mod(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="translated">def mod ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="307698986bd6096d9393e08059ed9f606993d73f" translate="yes" xml:space="preserve">
          <source>def modInverse(&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="translated">def modInverse ( &lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d25f58b32657f7873196ee4861b936403d3cb451" translate="yes" xml:space="preserve">
          <source>def modPow(&lt;span name=&quot;exp&quot;&gt;exp: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="translated">def modPow ( &lt;span name=&quot;exp&quot;&gt;exp: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c46fd6a3e0ef41483bfff0d44114b7ab2e6fe2c" translate="yes" xml:space="preserve">
          <source>def modifyOrRemove[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.modifyOrRemove.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.modifyOrRemove.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="translated">def modifyOrRemove [ &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IntMap.modifyOrRemove.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IntMap.modifyOrRemove.S&quot;&gt;S&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2e20f19c9bab2492507b1634593ec858fa8a42ba" translate="yes" xml:space="preserve">
          <source>def modifyOrRemove[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.modifyOrRemove.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.modifyOrRemove.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="translated">def modifyOrRemove [ &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt; ] ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LongMap.modifyOrRemove.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LongMap.modifyOrRemove.S&quot;&gt;S&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="86bdd2c08c9a105c14636046567e4971ffc8f4cc" translate="yes" xml:space="preserve">
          <source>def mul(&lt;span name=&quot;factor&quot;&gt;factor: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;</source>
          <target state="translated">def mul ( &lt;span name=&quot;factor&quot;&gt;factor: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Продолжительность&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b644ee5631fe554a7156e3dc246c428dee01eb65" translate="yes" xml:space="preserve">
          <source>def mul(&lt;span name=&quot;factor&quot;&gt;factor: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="translated">def mul ( &lt;span name=&quot;factor&quot;&gt;коэффициент: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24615b8ea0037df0ed7596fcf5d8ad19b016da92" translate="yes" xml:space="preserve">
          <source>def multiplyExact(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def multiplyExact ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62706d91797f7ea68444ddafd7e06bacc83a57d6" translate="yes" xml:space="preserve">
          <source>def multiplyExact(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def multiplyExact ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f5ca8a0eb18bf121c39ff77c8b24b2aef26b642" translate="yes" xml:space="preserve">
          <source>def name: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">def имя: &lt;span name=&quot;java.lang.String&quot;&gt;Строка&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b97ddbc29fd8522b395283ecc97e251653cd157d" translate="yes" xml:space="preserve">
          <source>def names: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def имена: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="d5bb4717a8b90c091fc5a21ceeaa8074e261c31b" translate="yes" xml:space="preserve">
          <source>def nano: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="translated">def nano: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="990c1df60d78f7b9291bddd9de2efce3e351921f" translate="yes" xml:space="preserve">
          <source>def nano[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.nano.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.duration.DurationConversions.nano.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</source>
          <target state="translated">def nano [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.nano.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ) (неявное &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.duration.DurationConversions.nano.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="555a4f40f8c234f95a6ca1220f1fccb3b1ccd160" translate="yes" xml:space="preserve">
          <source>def nanos: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="translated">def nanos: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d9c974064a1a45a940e79f7a15043affc720aa0" translate="yes" xml:space="preserve">
          <source>def nanos[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.nanos.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.duration.DurationConversions.nanos.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</source>
          <target state="translated">def nanos [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.nanos.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.duration.DurationConversions.nanos.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f03f8aecb587debd1b0298ad24b122fef7aba8a" translate="yes" xml:space="preserve">
          <source>def nanosecond: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="translated">def наносекунда: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e6b5802b3ae1d2be8af705cb14f346b8d204737" translate="yes" xml:space="preserve">
          <source>def nanosecond[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.nanosecond.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.duration.DurationConversions.nanosecond.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</source>
          <target state="translated">def наносекунда [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.nanosecond.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ) (неявное &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.duration.DurationConversions.nanosecond.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3b965c5276202c0222058b9c20e8a4741f5ad82" translate="yes" xml:space="preserve">
          <source>def nanoseconds: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="translated">def наносекунды: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d249e2ca0406a51e5b07f4275e4dcc7d9f53ae4c" translate="yes" xml:space="preserve">
          <source>def nanoseconds[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.nanoseconds.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.duration.DurationConversions.nanoseconds.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</source>
          <target state="translated">def наносекунды [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.nanoseconds.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ) (неявное &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.duration.DurationConversions.nanoseconds.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="858f91b2b394b5eaedddbc64211517f92ef59906" translate="yes" xml:space="preserve">
          <source>def neg(): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;</source>
          <target state="translated">def neg (): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Продолжительность&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c7d3911fc63138e34a62fca6d27f029b86ca78d" translate="yes" xml:space="preserve">
          <source>def negate(): &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="translated">def &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;negate&lt;/span&gt; (): &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt; [ &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9ccbe1c34502d5b53e2e146c22cf8ca6786996f0" translate="yes" xml:space="preserve">
          <source>def negate(): &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;DoublePredicate&lt;/span&gt;</source>
          <target state="translated">def &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;negate&lt;/span&gt; (): &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;DoublePredicate&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="730a6ec78293069e50513607d45768fed3996385" translate="yes" xml:space="preserve">
          <source>def negate(): &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;IntPredicate&lt;/span&gt;</source>
          <target state="translated">def &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;negate&lt;/span&gt; (): &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;IntPredicate&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="19f470c8bce02c19f48ef1d9f69fe9503d4d923d" translate="yes" xml:space="preserve">
          <source>def negate(): &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;LongPredicate&lt;/span&gt;</source>
          <target state="translated">def &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;negate&lt;/span&gt; (): &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;LongPredicate&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a14c62f01ef43289bd439807b42a5017d6539009" translate="yes" xml:space="preserve">
          <source>def negate(): &lt;span name=&quot;java.util.function.Predicate&quot;&gt;Predicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def negate (): &lt;span name=&quot;java.util.function.Predicate&quot;&gt;предикат&lt;/span&gt; [ &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f8b0a26f3a851fae34c09be648318343b7a8db1a" translate="yes" xml:space="preserve">
          <source>def negate(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="translated">def negate ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;байт&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="028a5ff901d7990175481a6c62dbe597ee511d4c" translate="yes" xml:space="preserve">
          <source>def negate(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">def negate ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7826d162f90156b54f177b373b3599ef31ea9b91" translate="yes" xml:space="preserve">
          <source>def negate(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def negate ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;двойной&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56541dce25ae1261b7cfbc1a86fb999681730c44" translate="yes" xml:space="preserve">
          <source>def negate(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="translated">def negate ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;плавающий&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c1a2b2cc7831bc07ce3087e7c551973fbe52165" translate="yes" xml:space="preserve">
          <source>def negate(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def negate ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b1675f4020f685851182d46744207128d9cd7c9" translate="yes" xml:space="preserve">
          <source>def negate(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def negate ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;длинный&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="398b9af1fc8846a50d4dc8bb4adf803e54b7c5a0" translate="yes" xml:space="preserve">
          <source>def negate(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="translated">def negate ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;короткий&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9884d271185e8e6694a8dd8245eb27039d3fb8a5" translate="yes" xml:space="preserve">
          <source>def negate(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def negate ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="422060acd6c969f3bb5bc0bbd2befaefab423a1c" translate="yes" xml:space="preserve">
          <source>def negate(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="translated">def &lt;span name=&quot;x&quot;&gt;&lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;negate&lt;/a&gt;&lt;/span&gt; ( &lt;span name=&quot;x&quot;&gt;x: BigInt&lt;/span&gt; ): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ea0fabd041b57073c8b6f17ef564d101f96c99b" translate="yes" xml:space="preserve">
          <source>def negateExact(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def negateExact ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Инт&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7dc98d762de4d2d951e896874f59621928615cd" translate="yes" xml:space="preserve">
          <source>def negateExact(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def negateExact ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;длинный&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b07cc6f3db6a40112074afd0c5819adbf57d647" translate="yes" xml:space="preserve">
          <source>def newArray(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.reflect.AnyValManifest.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def newArray ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;массив&lt;/a&gt; [ &lt;span name=&quot;scala.reflect.AnyValManifest.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5910cd039a4c8dd7965a53c1cf53ae54f07f3ce4" translate="yes" xml:space="preserve">
          <source>def newArray(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassTag.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def newArray ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;массив&lt;/a&gt; [ &lt;span name=&quot;scala.reflect.ClassTag.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="042510765567813d43ca052a30fc47d6a8b29541" translate="yes" xml:space="preserve">
          <source>def newArray(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.reflect.Manifest.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def newArray ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;массив&lt;/a&gt; [ &lt;span name=&quot;scala.reflect.Manifest.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cd0bfe7fa8828419a8f5bb1ed2b263a9e270d0f8" translate="yes" xml:space="preserve">
          <source>def newBuilder(&lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.toBuildFrom.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.toBuildFrom.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.toBuildFrom.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.toBuildFrom.V&quot;&gt;V&lt;/span&gt;)]]</source>
          <target state="translated">def newBuilder ( &lt;span name=&quot;from&quot;&gt;от: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapFactory.toBuildFrom.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactory.toBuildFrom.V&quot;&gt;V&lt;/span&gt; ), &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapFactory.toBuildFrom.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactory.toBuildFrom.V&quot;&gt;V&lt;/span&gt; )]]</target>
        </trans-unit>
        <trans-unit id="1ee776ee74bc78078c8e7799f467cb52a60e8b5a" translate="yes" xml:space="preserve">
          <source>def newBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;]</source>
          <target state="translated">def newBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; , &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="9bc1d4933119f1cbfd87d437d9d7f0f8ee37eff5" translate="yes" xml:space="preserve">
          <source>def newBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;]</source>
          <target state="translated">def newBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="8311ed1fb1a0a9e68c7386af60a25b06e354d38f" translate="yes" xml:space="preserve">
          <source>def newBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;]</source>
          <target state="translated">def newBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="9701eec45dd481bde33cbc218883331ff0ef0fc1" translate="yes" xml:space="preserve">
          <source>def newBuilder: &lt;a href=&quot;collection/mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;, &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;]</source>
          <target state="translated">def newBuilder: &lt;a href=&quot;collection/mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; , &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="a8eb09654dea61eaa941b6a0483742cee368be41" translate="yes" xml:space="preserve">
          <source>def newBuilder: &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</source>
          <target state="translated">def newBuilder: &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28568e81c9ef350e00af4fbf642dfac6594ac357" translate="yes" xml:space="preserve">
          <source>def newBuilder: &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</source>
          <target state="translated">def newBuilder: &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74c26173fa32149c90b8fab281c460f26565b7bc" translate="yes" xml:space="preserve">
          <source>def newBuilder: &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</source>
          <target state="translated">def newBuilder: &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1dcbe4c07c1a6a0b8449486b76611c76bb438d8c" translate="yes" xml:space="preserve">
          <source>def newBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.toFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.toFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.toFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.toFactory.V&quot;&gt;V&lt;/span&gt;)]]</source>
          <target state="translated">def newBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapFactory.toFactory.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactory.toFactory.V&quot;&gt;V&lt;/span&gt; ), &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapFactory.toFactory.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactory.toFactory.V&quot;&gt;V&lt;/span&gt; )]]</target>
        </trans-unit>
        <trans-unit id="b80b61114962f0b9853475116998ca9d3471945e" translate="yes" xml:space="preserve">
          <source>def newBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;]</source>
          <target state="translated">def newBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="d08e89b03029cd28a8d481f0839d464a61f065ba" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](implicit &lt;span name=&quot;canAccumulate&quot;&gt;canAccumulate: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.newBuilder.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.newBuilder.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] (неявно &lt;span name=&quot;canAccumulate&quot;&gt;canAccumulate: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.jdk.Accumulator.newBuilder.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.jdk.Accumulator.newBuilder.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="71d2e20d35d45682f50ca7af1014a7d251bb3a7c" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;initialCapacity&quot;&gt;initialCapacity: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;loadFactor&quot;&gt;loadFactor: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;initialCapacity&quot;&gt;initialCapacity: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;loadFactor&quot;&gt;loadFactor: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e6bc5e6dc6b14a5d048ddee6b367c8ef7d9e2990" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="60400e47b8e59ac131233eb475ee73d8d3c610d4" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="777e0e4aeabde61f06c70778af3fb8f68bb65597" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.newBuilder.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.PriorityQueue.newBuilder.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.PriorityQueue.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.PriorityQueue.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="a16e51e65d3fe3ad49199a0a679f222ee2fa0cf4" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.newBuilder.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.newBuilder.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="9845e8ba3b9cd3b15cf95d963d37762fa3764211" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.newBuilder.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.newBuilder.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b0785b3cba9f4fc4cb2fd5724032985f7685c961" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.newBuilder.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.newBuilder.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.newBuilder.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.newBuilder.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f823963b2ee144269cbe9dd405de49624196ad6f" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="73bdc2b66d8ac4a98523f10d6ded0a8cfa0921dd" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="8b5a5fb08e5fae3fb82ff8002a04e1065ae0642a" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="4beddb22f84598a655445fd6d87dd9e956f9c7c2" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f43aa1771e763d156860cfac311d5d4282a89354" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.Ev&quot;&gt;Ev&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.Ev&quot;&gt;Ev&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f7246467a25f7e3c58c3f68cda49661fd4e975a6" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.newBuilder.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/reusablebuilder&quot; id=&quot;scala.collection.mutable.ReusableBuilder&quot; name=&quot;scala.collection.mutable.ReusableBuilder&quot;&gt;ReusableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] (неявное &lt;span name=&quot;ordering&quot;&gt;упорядочивание: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.newBuilder.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../mutable/reusablebuilder&quot; id=&quot;scala.collection.mutable.ReusableBuilder&quot; name=&quot;scala.collection.mutable.ReusableBuilder&quot;&gt;ReusableBuilder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="099cb73255286078457a24c68174801190fe937b" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.newBuilder.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] (неявное &lt;span name=&quot;ordering&quot;&gt;упорядочивание: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.newBuilder.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="9c416dbd6dc4de33739ae2f38012d64ca1ed81b6" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../collection/mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ]: &lt;a href=&quot;../collection/mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.AnyAccumulator.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.AnyAccumulator.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="c24bc0c17cb41592f0499494d15375b874c69bbc" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7c6104cd2f44b3b401737ea80746fb2f1daebdd7" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="3548df9579ca41ad4403aedd358a0d70cf580314" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="dd94fe5ae5de648c7d1e481634be4aec2210df41" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0acc4b7d20e6920f42fe725cc60b366b5a8ba73d" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="de01d4aad0e9c681225716cccc51197ab0074271" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f522b094f4817c6c777842c4229143a174275738" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="436b31fe559137c45aebdf12c1a564f54710b366" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7f9a0398943e4c6ff19f2413f040bd5f28f5f37f" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def newBuilder [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.newBuilder.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.newBuilder.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
