<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="6232293e421940f5d3bfdfc2a417efd41c8fa4ea" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa3b4c254e9a58e85c4c20d7e5ba79649765b8ab" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41d3882e078d4a94a70eb9361226cd251f153035" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;app&quot; id=&quot;scala.App&quot; name=&quot;scala.App&quot;&gt;App&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;app&quot; id=&quot;scala.App&quot; name=&quot;scala.App&quot;&gt;приложение&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="911bacc3da88a2a79ff740a503887bd45338b0f9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e60f2d8339d5cf7164448b5b105dc9a025d39bf6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;array%24%24unapplyseqwrapper&quot; id=&quot;scala.Array.UnapplySeqWrapper&quot; name=&quot;scala.Array.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.Array.UnapplySeqWrapper.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;array%24%24unapplyseqwrapper&quot; id=&quot;scala.Array.UnapplySeqWrapper&quot; name=&quot;scala.Array.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt; [ &lt;span name=&quot;scala.Array.UnapplySeqWrapper.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0dcef0fd035eda4956fe9060d2f918303e784c71" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91e5ee922445935620664968703a94c0339939e9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="913fb6301bcce99e2be477b28d2d510eb4eaa1b4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd5fcd82013159bce457f3f6aa27ffe5e56ed98a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;delayedinit&quot; id=&quot;scala.DelayedInit&quot; name=&quot;scala.DelayedInit&quot;&gt;DelayedInit&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;delayedinit&quot; id=&quot;scala.DelayedInit&quot; name=&quot;scala.DelayedInit&quot;&gt;DelayedInit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd040f7f17826ac0ecf57f6cd16a5e6646da4104" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deprecated&quot; id=&quot;scala.deprecated&quot; name=&quot;scala.deprecated&quot;&gt;deprecated&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;deprecated&quot; id=&quot;scala.deprecated&quot; name=&quot;scala.deprecated&quot;&gt;не рекомендуется&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2b3463d9c7d01c851f661ce5c6fdb6697fc066d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deprecatedinheritance&quot; id=&quot;scala.deprecatedInheritance&quot; name=&quot;scala.deprecatedInheritance&quot;&gt;deprecatedInheritance&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;deprecatedinheritance&quot; id=&quot;scala.deprecatedInheritance&quot; name=&quot;scala.deprecatedInheritance&quot;&gt;deprecatedInheritance&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03c4a378b889c2f44a62b6b5e05adcdeffb7a689" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deprecatedname&quot; id=&quot;scala.deprecatedName&quot; name=&quot;scala.deprecatedName&quot;&gt;deprecatedName&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;deprecatedname&quot; id=&quot;scala.deprecatedName&quot; name=&quot;scala.deprecatedName&quot;&gt;deprecatedName&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae79de08253424b5e74714d28f8b8ecde825947c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deprecatedoverriding&quot; id=&quot;scala.deprecatedOverriding&quot; name=&quot;scala.deprecatedOverriding&quot;&gt;deprecatedOverriding&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;deprecatedoverriding&quot; id=&quot;scala.deprecatedOverriding&quot; name=&quot;scala.deprecatedOverriding&quot;&gt;deprecatedOverriding&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf113f00304460d36c3e5578d0680d7743b2ec16" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="baa2c5e612ae42d0cf7108da060891e41707d047" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;dummyimplicit&quot; id=&quot;scala.DummyImplicit&quot; name=&quot;scala.DummyImplicit&quot;&gt;DummyImplicit&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;dummyimplicit&quot; id=&quot;scala.DummyImplicit&quot; name=&quot;scala.DummyImplicit&quot;&gt;DummyImplicit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88f65eac358f7cea500a0b4fea21e074d946225c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;dynamic&quot; id=&quot;scala.Dynamic&quot; name=&quot;scala.Dynamic&quot;&gt;Dynamic&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;dynamic&quot; id=&quot;scala.Dynamic&quot; name=&quot;scala.Dynamic&quot;&gt;динамический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eedfabb06859115b1f23aac9f59e5356845ee4cb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration&quot; id=&quot;scala.Enumeration&quot; name=&quot;scala.Enumeration&quot;&gt;Enumeration&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;enumeration&quot; id=&quot;scala.Enumeration&quot; name=&quot;scala.Enumeration&quot;&gt;Enumeration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8089bc15d939bd31c62efaaf6c025a51eccce13a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24val&quot; id=&quot;scala.Enumeration.Val&quot; name=&quot;scala.Enumeration.Val&quot;&gt;Val&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;enumeration%24val&quot; id=&quot;scala.Enumeration.Val&quot; name=&quot;scala.Enumeration.Val&quot;&gt;Val&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a647cf80d51d1e266459d48ad750616d4a609aa" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e322f7e8162b2ab16254c312c6c43d71e296b71" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1525a6deed6fda0f32d3d742b3ff245b2d28a35b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;equals&quot; id=&quot;scala.Equals&quot; name=&quot;scala.Equals&quot;&gt;Equals&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;equals&quot; id=&quot;scala.Equals&quot; name=&quot;scala.Equals&quot;&gt;равно&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b494fc14465dc7b6dd1be6dadc44905b0e0262e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ed790c49a7520df9130f14a295793e205a222ea" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;function1%24%24unliftops&quot; id=&quot;scala.Function1.UnliftOps&quot; name=&quot;scala.Function1.UnliftOps&quot;&gt;UnliftOps&lt;/a&gt;[&lt;span name=&quot;scala.Function1.UnliftOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;function1%24%24unliftops&quot; id=&quot;scala.Function1.UnliftOps&quot; name=&quot;scala.Function1.UnliftOps&quot;&gt;UnliftOps&lt;/a&gt; [ &lt;span name=&quot;scala.Function1.UnliftOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="14c7d48d8ff259527a90e54eadb07b7f72cf96ea" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;inline&quot; id=&quot;scala.inline&quot; name=&quot;scala.inline&quot;&gt;inline&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;inline&quot; id=&quot;scala.inline&quot; name=&quot;scala.inline&quot;&gt;inline&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92058181af92da6e91c19895d95208c3d1264341" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d43485aa9971536c6aa0756575c67dd9ad1c93e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24dynamics&quot; id=&quot;scala.languageFeature.dynamics&quot; name=&quot;scala.languageFeature.dynamics&quot;&gt;dynamics&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;languagefeature%24%24dynamics&quot; id=&quot;scala.languageFeature.dynamics&quot; name=&quot;scala.languageFeature.dynamics&quot;&gt;динамика&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b33018bbc54c0e25debc87aa319d38ae99363544" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24existentials&quot; id=&quot;scala.languageFeature.existentials&quot; name=&quot;scala.languageFeature.existentials&quot;&gt;existentials&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;languagefeature%24%24existentials&quot; id=&quot;scala.languageFeature.existentials&quot; name=&quot;scala.languageFeature.existentials&quot;&gt;экзистенциальные&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b18f6acaca75d6cff123b249ac696ae6255547d1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24experimental%24%24macros&quot; id=&quot;scala.languageFeature.experimental.macros&quot; name=&quot;scala.languageFeature.experimental.macros&quot;&gt;macros&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;languagefeature%24%24experimental%24%24macros&quot; id=&quot;scala.languageFeature.experimental.macros&quot; name=&quot;scala.languageFeature.experimental.macros&quot;&gt;макросы&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21faaa7f3d6ac95c95b3dab88143f64c1444b77f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24higherkinds&quot; id=&quot;scala.languageFeature.higherKinds&quot; name=&quot;scala.languageFeature.higherKinds&quot;&gt;higherKinds&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;languagefeature%24%24higherkinds&quot; id=&quot;scala.languageFeature.higherKinds&quot; name=&quot;scala.languageFeature.higherKinds&quot;&gt;upperKinds&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae2d8d805cb2e9b7d5a5f820554eefea54005cc3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24implicitconversions&quot; id=&quot;scala.languageFeature.implicitConversions&quot; name=&quot;scala.languageFeature.implicitConversions&quot;&gt;implicitConversions&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;languagefeature%24%24implicitconversions&quot; id=&quot;scala.languageFeature.implicitConversions&quot; name=&quot;scala.languageFeature.implicitConversions&quot;&gt;implicitConversions&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c9daf26585a630949b61800bf19498e1da67e48" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24postfixops&quot; id=&quot;scala.languageFeature.postfixOps&quot; name=&quot;scala.languageFeature.postfixOps&quot;&gt;postfixOps&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;languagefeature%24%24postfixops&quot; id=&quot;scala.languageFeature.postfixOps&quot; name=&quot;scala.languageFeature.postfixOps&quot;&gt;postfixOps&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="748ae83342700373a3fdbc87e87e9c8262c554f3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24reflectivecalls&quot; id=&quot;scala.languageFeature.reflectiveCalls&quot; name=&quot;scala.languageFeature.reflectiveCalls&quot;&gt;reflectiveCalls&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;languagefeature%24%24reflectivecalls&quot; id=&quot;scala.languageFeature.reflectiveCalls&quot; name=&quot;scala.languageFeature.reflectiveCalls&quot;&gt;RefctiveCalls&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2110332245c3d04cacf665b6b38f242a779ae2c6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="343cd8de57e814656ec578251e7e8c1820d2bb37" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;matcherror&quot; id=&quot;scala.MatchError&quot; name=&quot;scala.MatchError&quot;&gt;MatchError&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;matcherror&quot; id=&quot;scala.MatchError&quot; name=&quot;scala.MatchError&quot;&gt;MatchError&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5173993607f33f4dca3ce7ea103e6cee030df2bd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;native&quot; id=&quot;scala.native&quot; name=&quot;scala.native&quot;&gt;native&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;native&quot; id=&quot;scala.native&quot; name=&quot;scala.native&quot;&gt;native&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d68b9ed94f2ea0f9ca1154c408acb5b70f66178" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;noinline&quot; id=&quot;scala.noinline&quot; name=&quot;scala.noinline&quot;&gt;noinline&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;noinline&quot; id=&quot;scala.noinline&quot; name=&quot;scala.noinline&quot;&gt;noinline&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="12c490641a501539d19f7147b6311eb1a415c399" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;notimplementederror&quot; id=&quot;scala.NotImplementedError&quot; name=&quot;scala.NotImplementedError&quot;&gt;NotImplementedError&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;notimplementederror&quot; id=&quot;scala.NotImplementedError&quot; name=&quot;scala.NotImplementedError&quot;&gt;NotImplementedError&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dbcf32f31161ad0cb2afc264fcaaa49c1f185f11" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Вариант&lt;/a&gt; [ &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ad90c4436f4e77e686238be560770a75d6da77c6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option%24withfilter&quot; id=&quot;scala.Option.WithFilter&quot; name=&quot;scala.Option.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;option%24withfilter&quot; id=&quot;scala.Option.WithFilter&quot; name=&quot;scala.Option.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17bcda58421e36ba7acda4410c99b319008f97da" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7a8a212af69724aab613f2ec1e9f8b1b4d3ae103" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.ElementWiseExtractor.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.ElementWiseExtractor.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt; [ &lt;span name=&quot;scala.PartialFunction.ElementWiseExtractor.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.ElementWiseExtractor.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c592c2d449d746b45bbf06f2c81f8a9e28fb9e1a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[&lt;span name=&quot;scala.Predef.any2stringadd.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt; [ &lt;span name=&quot;scala.Predef.any2stringadd.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9354f7f30b72209869d029d405f1f3131c5f29d2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24arraycharsequence&quot; id=&quot;scala.Predef.ArrayCharSequence&quot; name=&quot;scala.Predef.ArrayCharSequence&quot;&gt;ArrayCharSequence&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;predef%24%24arraycharsequence&quot; id=&quot;scala.Predef.ArrayCharSequence&quot; name=&quot;scala.Predef.ArrayCharSequence&quot;&gt;ArrayCharSequence&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa6871aff4f5e3b42f9c90e4d54da52dceb92c80" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[&lt;span name=&quot;scala.Predef.ArrowAssoc.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt; [ &lt;span name=&quot;scala.Predef.ArrowAssoc.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="686c86872ecd74b4a5875d91e1d73fc87eaaa1bb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24seqcharsequence&quot; id=&quot;scala.Predef.SeqCharSequence&quot; name=&quot;scala.Predef.SeqCharSequence&quot;&gt;SeqCharSequence&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;predef%24%24seqcharsequence&quot; id=&quot;scala.Predef.SeqCharSequence&quot; name=&quot;scala.Predef.SeqCharSequence&quot;&gt;SeqCharSequence&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="830737423b7600a82f90bfc06a77880cbe54d382" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[&lt;span name=&quot;scala.Predef.StringFormat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt; [ &lt;span name=&quot;scala.Predef.StringFormat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e8a6e52a49b049c7c2bb16e80487288ac2939577" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1f3b642b26d3b771e6b84ed27fde438e698b1c4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product1&quot; id=&quot;scala.Product1&quot; name=&quot;scala.Product1&quot;&gt;Product1&lt;/a&gt;[&lt;span name=&quot;scala.Product1.T1&quot;&gt;T1&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product1&quot; id=&quot;scala.Product1&quot; name=&quot;scala.Product1&quot;&gt;Product1&lt;/a&gt; [ &lt;span name=&quot;scala.Product1.T1&quot;&gt;T1&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e9c938990b62cd7ec0e4626de233669fb0531ae4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product10&quot; id=&quot;scala.Product10&quot; name=&quot;scala.Product10&quot;&gt;Product10&lt;/a&gt;[&lt;span name=&quot;scala.Product10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T10&quot;&gt;T10&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product10&quot; id=&quot;scala.Product10&quot; name=&quot;scala.Product10&quot;&gt;Product10&lt;/a&gt; [ &lt;span name=&quot;scala.Product10.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product10.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product10.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product10.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product10.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product10.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product10.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product10.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product10.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product10.T10&quot;&gt;T10&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1ec05575bd6b3d62ba8748334ae65af2720a58e3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product11&quot; id=&quot;scala.Product11&quot; name=&quot;scala.Product11&quot;&gt;Product11&lt;/a&gt;[&lt;span name=&quot;scala.Product11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T11&quot;&gt;T11&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product11&quot; id=&quot;scala.Product11&quot; name=&quot;scala.Product11&quot;&gt;Product11&lt;/a&gt; [ &lt;span name=&quot;scala.Product11.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T11&quot;&gt;T11&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="239368954f0a762435eaeab5ccf415de0707adb8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product12&quot; id=&quot;scala.Product12&quot; name=&quot;scala.Product12&quot;&gt;Product12&lt;/a&gt;[&lt;span name=&quot;scala.Product12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T12&quot;&gt;T12&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product12&quot; id=&quot;scala.Product12&quot; name=&quot;scala.Product12&quot;&gt;Product12&lt;/a&gt; [ &lt;span name=&quot;scala.Product12.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T12&quot;&gt;T12&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="21e12bef621b9bda6b25a818c542efa8cb88ee40" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product13&quot; id=&quot;scala.Product13&quot; name=&quot;scala.Product13&quot;&gt;Product13&lt;/a&gt;[&lt;span name=&quot;scala.Product13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T13&quot;&gt;T13&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product13&quot; id=&quot;scala.Product13&quot; name=&quot;scala.Product13&quot;&gt;Product13&lt;/a&gt; [ &lt;span name=&quot;scala.Product13.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T13&quot;&gt;T13&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="11f728ca9a2f8e8230b34ece24cee3bd6851850a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product14&quot; id=&quot;scala.Product14&quot; name=&quot;scala.Product14&quot;&gt;Product14&lt;/a&gt;[&lt;span name=&quot;scala.Product14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T14&quot;&gt;T14&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product14&quot; id=&quot;scala.Product14&quot; name=&quot;scala.Product14&quot;&gt;Product14&lt;/a&gt; [ &lt;span name=&quot;scala.Product14.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T14&quot;&gt;T14&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2a83bc2bac88b9f85c31883f258e2338bb0fc9f6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product15&quot; id=&quot;scala.Product15&quot; name=&quot;scala.Product15&quot;&gt;Product15&lt;/a&gt;[&lt;span name=&quot;scala.Product15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T15&quot;&gt;T15&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product15&quot; id=&quot;scala.Product15&quot; name=&quot;scala.Product15&quot;&gt;Product15&lt;/a&gt; [ &lt;span name=&quot;scala.Product15.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T15&quot;&gt;T15&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="128cee15460b8f5ad8ca9f98e85c3219fc7cae41" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product16&quot; id=&quot;scala.Product16&quot; name=&quot;scala.Product16&quot;&gt;Product16&lt;/a&gt;[&lt;span name=&quot;scala.Product16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T16&quot;&gt;T16&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product16&quot; id=&quot;scala.Product16&quot; name=&quot;scala.Product16&quot;&gt;Product16&lt;/a&gt; [ &lt;span name=&quot;scala.Product16.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T16&quot;&gt;T16&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="61deba9dee56f2888a3c0a5c904c37cbca3280df" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product17&quot; id=&quot;scala.Product17&quot; name=&quot;scala.Product17&quot;&gt;Product17&lt;/a&gt;[&lt;span name=&quot;scala.Product17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T17&quot;&gt;T17&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product17&quot; id=&quot;scala.Product17&quot; name=&quot;scala.Product17&quot;&gt;Product17&lt;/a&gt; [ &lt;span name=&quot;scala.Product17.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T17&quot;&gt;T17&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cfe5ea895353f222bbdf148f375bf9ef50e64a13" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product18&quot; id=&quot;scala.Product18&quot; name=&quot;scala.Product18&quot;&gt;Product18&lt;/a&gt;[&lt;span name=&quot;scala.Product18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T18&quot;&gt;T18&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product18&quot; id=&quot;scala.Product18&quot; name=&quot;scala.Product18&quot;&gt;Product18&lt;/a&gt; [ &lt;span name=&quot;scala.Product18.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T18&quot;&gt;T18&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b637d4c4eccd279db31a4bdc01c7a7b48bb5957a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product19&quot; id=&quot;scala.Product19&quot; name=&quot;scala.Product19&quot;&gt;Product19&lt;/a&gt;[&lt;span name=&quot;scala.Product19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T19&quot;&gt;T19&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product19&quot; id=&quot;scala.Product19&quot; name=&quot;scala.Product19&quot;&gt;Product19&lt;/a&gt; [ &lt;span name=&quot;scala.Product19.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T18&quot;&gt;T18&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T19&quot;&gt;T19&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e19944796b41468b70668f3288a10f8bc9de6708" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product2&quot; id=&quot;scala.Product2&quot; name=&quot;scala.Product2&quot;&gt;Product2&lt;/a&gt;[&lt;span name=&quot;scala.Product2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product2.T2&quot;&gt;T2&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product2&quot; id=&quot;scala.Product2&quot; name=&quot;scala.Product2&quot;&gt;Product2&lt;/a&gt; [ &lt;span name=&quot;scala.Product2.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product2.T2&quot;&gt;T2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f9d9a152c10958485f25523ba59325b82af8b9d7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product20&quot; id=&quot;scala.Product20&quot; name=&quot;scala.Product20&quot;&gt;Product20&lt;/a&gt;[&lt;span name=&quot;scala.Product20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T20&quot;&gt;T20&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product20&quot; id=&quot;scala.Product20&quot; name=&quot;scala.Product20&quot;&gt;Product20&lt;/a&gt; [ &lt;span name=&quot;scala.Product20.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T18&quot;&gt;T18&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T19&quot;&gt;T19&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T20&quot;&gt;T20&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="80c953005d59f7900469e688554012fadcab294a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product21&quot; id=&quot;scala.Product21&quot; name=&quot;scala.Product21&quot;&gt;Product21&lt;/a&gt;[&lt;span name=&quot;scala.Product21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T21&quot;&gt;T21&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product21&quot; id=&quot;scala.Product21&quot; name=&quot;scala.Product21&quot;&gt;Product21&lt;/a&gt; [ &lt;span name=&quot;scala.Product21.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T18&quot;&gt;T18&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T19&quot;&gt;T19&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T20&quot;&gt;T20&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T21&quot;&gt;T21&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b7686d2b6593c9af0bbdd9a4daca39606b471c00" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product22&quot; id=&quot;scala.Product22&quot; name=&quot;scala.Product22&quot;&gt;Product22&lt;/a&gt;[&lt;span name=&quot;scala.Product22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T22&quot;&gt;T22&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product22&quot; id=&quot;scala.Product22&quot; name=&quot;scala.Product22&quot;&gt;Product22&lt;/a&gt; [ &lt;span name=&quot;scala.Product22.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T18&quot;&gt;T18&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T19&quot;&gt;T19&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T20&quot;&gt;T20&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T21&quot;&gt;T21&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T22&quot;&gt;T22&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="38311393f2fb81e540541d2da0579f1ae54fc0f8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product3&quot; id=&quot;scala.Product3&quot; name=&quot;scala.Product3&quot;&gt;Product3&lt;/a&gt;[&lt;span name=&quot;scala.Product3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product3.T3&quot;&gt;T3&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product3&quot; id=&quot;scala.Product3&quot; name=&quot;scala.Product3&quot;&gt;Product3&lt;/a&gt; [ &lt;span name=&quot;scala.Product3.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product3.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product3.T3&quot;&gt;T3&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e4a9b9db783957f190ef533a5059e32b4b6cf4b7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product4&quot; id=&quot;scala.Product4&quot; name=&quot;scala.Product4&quot;&gt;Product4&lt;/a&gt;[&lt;span name=&quot;scala.Product4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product4.T4&quot;&gt;T4&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product4&quot; id=&quot;scala.Product4&quot; name=&quot;scala.Product4&quot;&gt;Product4&lt;/a&gt; [ &lt;span name=&quot;scala.Product4.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product4.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product4.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product4.T4&quot;&gt;T4&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="080fb9439fe9521c47078e2dd131c709ce3f6840" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product5&quot; id=&quot;scala.Product5&quot; name=&quot;scala.Product5&quot;&gt;Product5&lt;/a&gt;[&lt;span name=&quot;scala.Product5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T5&quot;&gt;T5&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product5&quot; id=&quot;scala.Product5&quot; name=&quot;scala.Product5&quot;&gt;Product5&lt;/a&gt; [ &lt;span name=&quot;scala.Product5.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product5.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product5.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product5.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product5.T5&quot;&gt;T5&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ed88e1ec66f235307e50a00702ed272ac8d26b0a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product6&quot; id=&quot;scala.Product6&quot; name=&quot;scala.Product6&quot;&gt;Product6&lt;/a&gt;[&lt;span name=&quot;scala.Product6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T6&quot;&gt;T6&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product6&quot; id=&quot;scala.Product6&quot; name=&quot;scala.Product6&quot;&gt;Product6&lt;/a&gt; [ &lt;span name=&quot;scala.Product6.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product6.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product6.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product6.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product6.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product6.T6&quot;&gt;T6&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7002251cafde231d2933a658730a86070b85ce6f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product7&quot; id=&quot;scala.Product7&quot; name=&quot;scala.Product7&quot;&gt;Product7&lt;/a&gt;[&lt;span name=&quot;scala.Product7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T7&quot;&gt;T7&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product7&quot; id=&quot;scala.Product7&quot; name=&quot;scala.Product7&quot;&gt;Product7&lt;/a&gt; [ &lt;span name=&quot;scala.Product7.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product7.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product7.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product7.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product7.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product7.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product7.T7&quot;&gt;T7&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9ce19fe6853f99704bdba4f74d680ee72b3d9bf6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product8&quot; id=&quot;scala.Product8&quot; name=&quot;scala.Product8&quot;&gt;Product8&lt;/a&gt;[&lt;span name=&quot;scala.Product8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T8&quot;&gt;T8&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product8&quot; id=&quot;scala.Product8&quot; name=&quot;scala.Product8&quot;&gt;Product8&lt;/a&gt; [ &lt;span name=&quot;scala.Product8.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product8.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product8.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product8.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product8.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product8.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product8.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product8.T8&quot;&gt;T8&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3de3bcdc92ed3526ceacd9bbd687db5e870b5246" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product9&quot; id=&quot;scala.Product9&quot; name=&quot;scala.Product9&quot;&gt;Product9&lt;/a&gt;[&lt;span name=&quot;scala.Product9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T9&quot;&gt;T9&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product9&quot; id=&quot;scala.Product9&quot; name=&quot;scala.Product9&quot;&gt;Product9&lt;/a&gt; [ &lt;span name=&quot;scala.Product9.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product9.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product9.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product9.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product9.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product9.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product9.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product9.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product9.T9&quot;&gt;T9&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="950a1cc81db8f63257ab268c0298a2957a383528" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;proxy&quot; id=&quot;scala.Proxy&quot; name=&quot;scala.Proxy&quot;&gt;Proxy&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;proxy&quot; id=&quot;scala.Proxy&quot; name=&quot;scala.Proxy&quot;&gt;прокси&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91c3f179c7860b5606facd7fb4bda88cdea5fdb4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;proxy%24%24typed&quot; id=&quot;scala.Proxy.Typed&quot; name=&quot;scala.Proxy.Typed&quot;&gt;Typed&lt;/a&gt;[&lt;span name=&quot;scala.Proxy.Typed.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;proxy%24%24typed&quot; id=&quot;scala.Proxy.Typed&quot; name=&quot;scala.Proxy.Typed&quot;&gt;введено&lt;/a&gt; [ &lt;span name=&quot;scala.Proxy.Typed.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ec4de6856eb9dad9885e3db68de7567b37e71222" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;scalareflectionexception&quot; id=&quot;scala.ScalaReflectionException&quot; name=&quot;scala.ScalaReflectionException&quot;&gt;ScalaReflectionException&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;scalareflectionexception&quot; id=&quot;scala.ScalaReflectionException&quot; name=&quot;scala.ScalaReflectionException&quot;&gt;ScalaReflectionException&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d0b813eb2acc700adcb8bd31da7635d742b6cb5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;serialversionuid&quot; id=&quot;scala.SerialVersionUID&quot; name=&quot;scala.SerialVersionUID&quot;&gt;SerialVersionUID&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;serialversionuid&quot; id=&quot;scala.SerialVersionUID&quot; name=&quot;scala.SerialVersionUID&quot;&gt;SerialVersionUID&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b44bf4fa4bb48d1fcf72c302b5e931560ffbd97" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0cc9ccd3aa47b0d42dbb4c85a5ac1560ffa97f90" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;singleton&quot; id=&quot;scala.Singleton&quot; name=&quot;scala.Singleton&quot;&gt;Singleton&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;singleton&quot; id=&quot;scala.Singleton&quot; name=&quot;scala.Singleton&quot;&gt;Singleton&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f4fe4e54382d5a42a99f398056251668974d9cc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt; [ &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0705c75daa25c9eb36cce3567dfb0d8f4e29974c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;specializable&quot; id=&quot;scala.Specializable&quot; name=&quot;scala.Specializable&quot;&gt;Specializable&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;specializable&quot; id=&quot;scala.Specializable&quot; name=&quot;scala.Specializable&quot;&gt;специализированный&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="32aef951b0276fdc8904b61a9de84245f5f21c6b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;specializable%24%24group&quot; id=&quot;scala.Specializable.Group&quot; name=&quot;scala.Specializable.Group&quot;&gt;Group&lt;/a&gt;[&lt;span name=&quot;scala.Specializable.Group.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;specializable%24%24group&quot; id=&quot;scala.Specializable.Group&quot; name=&quot;scala.Specializable.Group&quot;&gt;Group&lt;/a&gt; [ &lt;span name=&quot;scala.Specializable.Group.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e3af518c2f5676ff9b19630ff1d6d176ba30e943" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;specializable%24%24specializedgroup&quot; id=&quot;scala.Specializable.SpecializedGroup&quot; name=&quot;scala.Specializable.SpecializedGroup&quot;&gt;SpecializedGroup&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;specializable%24%24specializedgroup&quot; id=&quot;scala.Specializable.SpecializedGroup&quot; name=&quot;scala.Specializable.SpecializedGroup&quot;&gt;SpecializedGroup&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f351989aba274801cd3086445af8c620043a2ae" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;specialized&quot; id=&quot;scala.specialized&quot; name=&quot;scala.specialized&quot;&gt;specialized&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;specialized&quot; id=&quot;scala.specialized&quot; name=&quot;scala.specialized&quot;&gt;специализированный&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e615946c440e370a7a1dfdbea63f08485ea62896" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringcontext&quot; id=&quot;scala.StringContext&quot; name=&quot;scala.StringContext&quot;&gt;StringContext&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringcontext&quot; id=&quot;scala.StringContext&quot; name=&quot;scala.StringContext&quot;&gt;StringContext&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e73389cbc4969ead0af37cf85a8f6de4b1f366c1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringcontext%24%24invalidescapeexception&quot; id=&quot;scala.StringContext.InvalidEscapeException&quot; name=&quot;scala.StringContext.InvalidEscapeException&quot;&gt;InvalidEscapeException&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringcontext%24%24invalidescapeexception&quot; id=&quot;scala.StringContext.InvalidEscapeException&quot; name=&quot;scala.StringContext.InvalidEscapeException&quot;&gt;InvalidEscapeException&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd540cb6be648f9bf10273f4229ddf14b9555a0c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee59ce8e169dbef7fb4d726f3b9ba690d53e39c5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;throws&quot; id=&quot;scala.throws&quot; name=&quot;scala.throws&quot;&gt;throws&lt;/a&gt;[&lt;span name=&quot;scala.throws.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;throws&quot; id=&quot;scala.throws&quot; name=&quot;scala.throws&quot;&gt;throws&lt;/a&gt; [ &lt;span name=&quot;scala.throws.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5b3bd3b2ae61b5a63bd823c4d85593e5d85ed330" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;transient&quot; id=&quot;scala.transient&quot; name=&quot;scala.transient&quot;&gt;transient&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;transient&quot; id=&quot;scala.transient&quot; name=&quot;scala.transient&quot;&gt;переходный&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9e6781b8ba37099c036ad9e89dae13481ea9d77" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unchecked&quot; id=&quot;scala.unchecked&quot; name=&quot;scala.unchecked&quot;&gt;unchecked&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;unchecked&quot; id=&quot;scala.unchecked&quot; name=&quot;scala.unchecked&quot;&gt;не отмечено&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3ac5b198aed34e7ffcca0e63c567277d4296f84" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;uninitializederror&quot; id=&quot;scala.UninitializedError&quot; name=&quot;scala.UninitializedError&quot;&gt;UninitializedError&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;uninitializederror&quot; id=&quot;scala.UninitializedError&quot; name=&quot;scala.UninitializedError&quot;&gt;UninitializedError&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44595c0773a690bb3a0e36af532b353f93e5c7a5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;uninitializedfielderror&quot; id=&quot;scala.UninitializedFieldError&quot; name=&quot;scala.UninitializedFieldError&quot;&gt;UninitializedFieldError&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;uninitializedfielderror&quot; id=&quot;scala.UninitializedFieldError&quot; name=&quot;scala.UninitializedFieldError&quot;&gt;UninitializedFieldError&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35845ed0e3c13636eeec64460201f74d1e5a7998" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="237de6e097c085940d3231bbda969b8bc54fe990" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;valueof&quot; id=&quot;scala.ValueOf&quot; name=&quot;scala.ValueOf&quot;&gt;ValueOf&lt;/a&gt;[&lt;span name=&quot;scala.ValueOf.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;valueof&quot; id=&quot;scala.ValueOf&quot; name=&quot;scala.ValueOf&quot;&gt;ValueOf&lt;/a&gt; [ &lt;span name=&quot;scala.ValueOf.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4261ea42787b9d85a2d96040d3197c1ee4880241" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;volatile&quot; id=&quot;scala.volatile&quot; name=&quot;scala.volatile&quot;&gt;volatile&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;volatile&quot; id=&quot;scala.volatile&quot; name=&quot;scala.volatile&quot;&gt;volatile&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8022f73cd4237d18aed20ade76559cfe92666c7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Predef.Ensuring.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.Predef.Ensuring.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3d1680cb90b6e58ccac2a42b083449d9c6d5e972" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): () =&amp;gt; &lt;span name=&quot;scala.Function0.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): () =&amp;gt; &lt;span name=&quot;scala.Function0.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="86370b0ac7940485b7b4b1a33f675678d15e39ad" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function1.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="95c6f6ce9b5bd3e73ab2194b2ed312e93e35cde6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function10.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function10.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function10.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function10.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function10.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Function10.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Function10.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Function10.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Function10.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Function10.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Function10.T10&quot;&gt;T10&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function10.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9c3859275f5995d5ad173432f292955dbc809271" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function11.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function11.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function11.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function11.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function11.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Function11.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Function11.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Function11.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Function11.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Function11.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Function11.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Function11.T11&quot;&gt;T11&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function11.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9e1c3e8a53b8814595592daacd31e6a9c4b6bdc7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function12.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function12.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function12.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function12.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function12.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Function12.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Function12.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Function12.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Function12.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Function12.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Function12.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Function12.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Function12.T12&quot;&gt;T12&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function12.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b0ed4fc73c0545f9455131cbae9a1bf96e7bce28" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function13.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function13.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function13.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function13.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function13.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Function13.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Function13.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Function13.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Function13.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Function13.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Function13.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Function13.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Function13.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Function13.T13&quot;&gt;T13&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function13.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="618eca9d5337c2f9eb6c8bb68405889f7ac189fb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function14.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function14.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function14.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function14.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function14.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Function14.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Function14.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Function14.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Function14.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Function14.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Function14.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Function14.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Function14.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Function14.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Function14.T14&quot;&gt;T14&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function14.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="280305353506ea7311257af82b2d1920fb926eb7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function15.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function15.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function15.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function15.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function15.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Function15.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Function15.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Function15.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Function15.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Function15.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Function15.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Function15.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Function15.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Function15.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Function15.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Function15.T15&quot;&gt;T15&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function15.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c49bd3eb1eb9e4694ac2e4d532ad53e990bf400b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function16.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function16.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function16.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function16.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function16.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Function16.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Function16.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Function16.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Function16.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Function16.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Function16.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Function16.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Function16.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Function16.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Function16.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Function16.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Function16.T16&quot;&gt;T16&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function16.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9c1f4ceb9b321a294ad42bad292ec35021a093ef" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function17.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function17.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function17.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function17.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function17.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Function17.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Function17.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Function17.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Function17.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Function17.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Function17.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Function17.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Function17.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Function17.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Function17.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Function17.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Function17.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Function17.T17&quot;&gt;T17&lt;/span&gt; ) = &amp;gt; &lt;span name=&quot;scala.Function17.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2215928c197ec37346ee0acfcc76b2fc9718fd8e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T18&quot;&gt;T18&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function18.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function18.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function18.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function18.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function18.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Function18.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Function18.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Function18.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Function18.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Function18.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Function18.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Function18.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Function18.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Function18.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Function18.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Function18.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Function18.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Function18.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Function18.T18&quot;&gt;T18&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function18.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e5152a963e7ee82affdcf2c5cb03e11e1f91c4bf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T19&quot;&gt;T19&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function19.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function19.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function19.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function19.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function19.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Function19.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Function19.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Function19.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Function19.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Function19.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Function19.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Function19.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Function19.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Function19.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Function19.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Function19.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Function19.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Function19.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Function19.T18&quot;&gt;T18&lt;/span&gt; , &lt;span name=&quot;scala.Function19.T19&quot;&gt;T19&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function19.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="988bb4f56637b908b32f1630021fa3362e804082" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function2.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function2.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function2.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function2.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function2.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="217d2e0ee43c55bd6d7894fd8b4127504ac112a8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T20&quot;&gt;T20&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function20.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function20.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T18&quot;&gt;T18&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T19&quot;&gt;Т19&lt;/span&gt; , &lt;span name=&quot;scala.Function20.T20&quot;&gt;Т20&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function20.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="94afcb87a68d6a687920277fe97adbc5f5078c34" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T21&quot;&gt;T21&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function21.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function21.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T18&quot;&gt;T18&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T19&quot;&gt;T19&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T20&quot;&gt;T20&lt;/span&gt; , &lt;span name=&quot;scala.Function21.T21&quot;&gt;T21&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function21.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d2ececa6fa9235f63cb9010b04a81851656ca662" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T22&quot;&gt;T22&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function22.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function22.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T18&quot;&gt;T18&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T19&quot;&gt;T19&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T20&quot;&gt;T20&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T21&quot;&gt;T21&lt;/span&gt; , &lt;span name=&quot;scala.Function22.T22&quot;&gt;T22&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function22.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0c27eaa24e9b2039fd3d8900537491b3306f1ecb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function3.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function3.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function3.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function3.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function3.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="27c7c750d5079cef27df9ee1bf919ea7b2a4205c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function4.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function4.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function4.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function4.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function4.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function4.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1c12e79e3387bb1d3582824413429719f827bc31" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function5.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function5.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function5.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function5.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function5.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Function5.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function5.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="22a44fd9b962a69b50e1afdda0519a206e6dad0d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function6.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function6.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function6.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function6.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function6.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Function6.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Function6.T6&quot;&gt;T6&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function6.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4c2927b97f0ede8a319d036400945731b4fcb870" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function7.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function7.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function7.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function7.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function7.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Function7.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Function7.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Function7.T7&quot;&gt;T7&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function7.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="966b33290f7f446c5946fbe18fa024b04195e59a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function8.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function8.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function8.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function8.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function8.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Function8.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Function8.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Function8.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Function8.T8&quot;&gt;T8&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function8.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2a1904b635e5cab4bc258cf1113fc9e3e968b5d2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function9.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Function9.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Function9.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Function9.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Function9.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Function9.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Function9.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Function9.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Function9.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Function9.T9&quot;&gt;T9&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function9.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9eacdcdb100f2a51b746878bba4ad4ef470109c7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple1.T1&quot;&gt;T1&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple1.T1&quot;&gt;T1&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ae22307ff7bc663f367cfa74592f631a999143f8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T10&quot;&gt;T10&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple10.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple10.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple10.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple10.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Tuple10.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Tuple10.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Tuple10.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Tuple10.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Tuple10.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Tuple10.T10&quot;&gt;T10&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="c507e86d4da6b84aef9b6ea9a06775604921b61b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T11&quot;&gt;T11&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple11.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple11.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple11.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple11.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Tuple11.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Tuple11.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Tuple11.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Tuple11.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Tuple11.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Tuple11.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Tuple11.T11&quot;&gt;T11&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ab8755f8c1ee66c5e545fecb3f9422eb2e1a88bb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T12&quot;&gt;T12&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple12.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple12.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple12.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple12.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Tuple12.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Tuple12.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Tuple12.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Tuple12.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Tuple12.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Tuple12.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Tuple12.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Tuple12.T12&quot;&gt;T12&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="cd4706e20b9ae8d46f6fdbbb03f014e920cb7ca8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T13&quot;&gt;T13&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple13.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple13.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple13.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple13.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Tuple13.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Tuple13.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Tuple13.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Tuple13.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Tuple13.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Tuple13.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Tuple13.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Tuple13.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Tuple13.T13&quot;&gt;T13&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="bfb2e2c6d29d5e2a733e5e93232aa8022b2dcf8b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T14&quot;&gt;T14&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple14.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple14.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple14.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple14.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Tuple14.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Tuple14.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Tuple14.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Tuple14.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Tuple14.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Tuple14.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Tuple14.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Tuple14.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Tuple14.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Tuple14.T14&quot;&gt;T14&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="73ec01bec64175b464ed762805ade5729b8315f9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T15&quot;&gt;T15&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple15.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple15.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple15.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple15.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Tuple15.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Tuple15.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Tuple15.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Tuple15.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Tuple15.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Tuple15.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Tuple15.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Tuple15.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Tuple15.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Tuple15.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Tuple15.T15&quot;&gt;T15&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="c9a0d3b3173c1133f2934dee85050873ac9263b5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T16&quot;&gt;T16&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple16.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple16.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple16.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple16.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Tuple16.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Tuple16.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Tuple16.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Tuple16.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Tuple16.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Tuple16.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Tuple16.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Tuple16.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Tuple16.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Tuple16.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Tuple16.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Tuple16.T16&quot;&gt;T16&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="629836e2ac4afd8a0d680ebb561ab28f6717d20d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T17&quot;&gt;T17&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple17.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple17.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple17.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple17.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Tuple17.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Tuple17.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Tuple17.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Tuple17.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Tuple17.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Tuple17.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Tuple17.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Tuple17.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Tuple17.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Tuple17.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Tuple17.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Tuple17.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Tuple17.T17&quot;&gt;T17&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ebb8f7d0b713d04ae47078bac0862b9fd0f3392a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T18&quot;&gt;T18&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple18.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple18.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple18.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple18.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Tuple18.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Tuple18.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Tuple18.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Tuple18.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Tuple18.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Tuple18.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Tuple18.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Tuple18.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Tuple18.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Tuple18.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Tuple18.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Tuple18.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Tuple18.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Tuple18.T18&quot;&gt;T18&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="21d382ecd85755d0f7d046545d4aad934d4d954e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T19&quot;&gt;T19&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple19.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple19.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple19.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple19.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Tuple19.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Tuple19.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Tuple19.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Tuple19.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Tuple19.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Tuple19.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Tuple19.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Tuple19.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Tuple19.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Tuple19.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Tuple19.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Tuple19.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Tuple19.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Tuple19.T18&quot;&gt;T18&lt;/span&gt; , &lt;span name=&quot;scala.Tuple19.T19&quot;&gt;Т19&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="d36081898ff26949478778aaec8b27d0753d4748" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple2.T2&quot;&gt;T2&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple2.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple2.T2&quot;&gt;T2&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="1ff60fc65381bbe557c23c71b40adbb7e798236d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T20&quot;&gt;T20&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple20.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T18&quot;&gt;T18&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T19&quot;&gt;Т19&lt;/span&gt; , &lt;span name=&quot;scala.Tuple20.T20&quot;&gt;Т20&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="20b6c145585b9a7c4419d6278793ece3d2b0ca06" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T21&quot;&gt;T21&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple21.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T18&quot;&gt;T18&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T19&quot;&gt;Т19&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T20&quot;&gt;Т20&lt;/span&gt; , &lt;span name=&quot;scala.Tuple21.T21&quot;&gt;Т21&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="f852d8c402ec56fbffa951c99e370b9dd27b6b0d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T22&quot;&gt;T22&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple22.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T18&quot;&gt;T18&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T19&quot;&gt;Т19&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T20&quot;&gt;Т20&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T21&quot;&gt;Т21&lt;/span&gt; , &lt;span name=&quot;scala.Tuple22.T22&quot;&gt;Т22&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="8379da12778e469c28e3dba3029dc56b1de22a15" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T3&quot;&gt;T3&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple3.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple3.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple3.T3&quot;&gt;T3&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="6b63e55f2ba46ceb57cd47ae866ad472a2865cc5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T4&quot;&gt;T4&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple4.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple4.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple4.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple4.T4&quot;&gt;T4&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="03827215c76c89e612b044e5251f5002a4aa9f9a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T5&quot;&gt;T5&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple5.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple5.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple5.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple5.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Tuple5.T5&quot;&gt;T5&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="0958265f4116d72223cbb10043ade3e91ddabd94" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T6&quot;&gt;T6&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple6.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple6.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple6.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple6.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Tuple6.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Tuple6.T6&quot;&gt;T6&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="0d1c1a15b4afd627b7da4bea7e9d47ab22806991" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T7&quot;&gt;T7&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple7.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple7.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple7.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple7.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Tuple7.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Tuple7.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Tuple7.T7&quot;&gt;T7&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a184e0c4c48f1cde361d872bfc14232913a754b3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T8&quot;&gt;T8&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple8.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple8.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple8.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple8.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Tuple8.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Tuple8.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Tuple8.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Tuple8.T8&quot;&gt;T8&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="018d59d71bbf9026eb680e6ffb2850a35e042637" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T9&quot;&gt;T9&lt;/span&gt;)</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.Tuple9.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Tuple9.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Tuple9.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Tuple9.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Tuple9.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Tuple9.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Tuple9.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Tuple9.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Tuple9.T9&quot;&gt;T9&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="8a5413b2f3d6c14d808c49c698a1c10776bef5fb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=: =&lt;/a&gt; [ &lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt; , &lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9969010ffa335b516d9af6f4ff81b6a2dd45bb3b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;: &amp;lt;&lt;/a&gt; [ &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt; , &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="521da66b119482afeb4df5fdc1439f2092178bdd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f75cdd9921bf57d5fe62120f3d27959d5724250" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34a387d7ce48f2115fd6ddd5714ff8a3890548d5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c572aa5941df344ecde5870a611592c301a02a8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;app&quot; id=&quot;scala.App&quot; name=&quot;scala.App&quot;&gt;App&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;app&quot; id=&quot;scala.App&quot; name=&quot;scala.App&quot;&gt;App&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd35e85209b183c705aed286208398922dcd0706" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="12d353a932ba6a8a36c7b045e4e2815e633b97ce" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;array%24%24unapplyseqwrapper&quot; id=&quot;scala.Array.UnapplySeqWrapper&quot; name=&quot;scala.Array.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.Array.UnapplySeqWrapper.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;array%24%24unapplyseqwrapper&quot; id=&quot;scala.Array.UnapplySeqWrapper&quot; name=&quot;scala.Array.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt; [ &lt;span name=&quot;scala.Array.UnapplySeqWrapper.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6c87577a837d37d3de04d67f1b41f7e9c1c757d8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cf84150a8610d925873057607a6315e2ba0638d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d012f29109e0bcb74427f4d3d153196a8b834f09" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0479c1a36f1643065047aa46be7e92694fe27f0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;delayedinit&quot; id=&quot;scala.DelayedInit&quot; name=&quot;scala.DelayedInit&quot;&gt;DelayedInit&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;delayedinit&quot; id=&quot;scala.DelayedInit&quot; name=&quot;scala.DelayedInit&quot;&gt;DelayedInit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0466ef347e2c7584a969e1ff28e921d503bf423e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deprecated&quot; id=&quot;scala.deprecated&quot; name=&quot;scala.deprecated&quot;&gt;deprecated&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;deprecated&quot; id=&quot;scala.deprecated&quot; name=&quot;scala.deprecated&quot;&gt;не рекомендуется&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="85ecacea94f2a673dde5581a7143cb65816a7595" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deprecatedinheritance&quot; id=&quot;scala.deprecatedInheritance&quot; name=&quot;scala.deprecatedInheritance&quot;&gt;deprecatedInheritance&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;deprecatedinheritance&quot; id=&quot;scala.deprecatedInheritance&quot; name=&quot;scala.deprecatedInheritance&quot;&gt;deprecatedInheritance&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ebcab5b5d454beb9c1796f02c164afc06d312111" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deprecatedname&quot; id=&quot;scala.deprecatedName&quot; name=&quot;scala.deprecatedName&quot;&gt;deprecatedName&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;deprecatedname&quot; id=&quot;scala.deprecatedName&quot; name=&quot;scala.deprecatedName&quot;&gt;deprecatedName&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0704975fd2e618b622c18c474236346f5ffe080" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deprecatedoverriding&quot; id=&quot;scala.deprecatedOverriding&quot; name=&quot;scala.deprecatedOverriding&quot;&gt;deprecatedOverriding&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;deprecatedoverriding&quot; id=&quot;scala.deprecatedOverriding&quot; name=&quot;scala.deprecatedOverriding&quot;&gt;deprecatedOverriding&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a96dabde38f9094598491600d056f191c2e7403" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d36ce189d96e16c88e88843e6a828d179a0e2231" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;dummyimplicit&quot; id=&quot;scala.DummyImplicit&quot; name=&quot;scala.DummyImplicit&quot;&gt;DummyImplicit&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;dummyimplicit&quot; id=&quot;scala.DummyImplicit&quot; name=&quot;scala.DummyImplicit&quot;&gt;DummyImplicit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53dd143ba1c15fa789e910b988a7347f02a194f1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;dynamic&quot; id=&quot;scala.Dynamic&quot; name=&quot;scala.Dynamic&quot;&gt;Dynamic&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;dynamic&quot; id=&quot;scala.Dynamic&quot; name=&quot;scala.Dynamic&quot;&gt;Dynamic&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5754d4f7c1b490277761d868e249a3f321645670" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration&quot; id=&quot;scala.Enumeration&quot; name=&quot;scala.Enumeration&quot;&gt;Enumeration&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;enumeration&quot; id=&quot;scala.Enumeration&quot; name=&quot;scala.Enumeration&quot;&gt;Enumeration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a26fdc1dd525992419d2abf167fe0fc56091225" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24val&quot; id=&quot;scala.Enumeration.Val&quot; name=&quot;scala.Enumeration.Val&quot;&gt;Val&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;enumeration%24val&quot; id=&quot;scala.Enumeration.Val&quot; name=&quot;scala.Enumeration.Val&quot;&gt;Val&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7264385165f13d37f6e59b4e49ba7ce15e8a23ce" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42f0f6dc57d38cddd368e36bc500fd68238f6cea" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbaf19164dccfa91ab7f6254b026d1233e3543db" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;equals&quot; id=&quot;scala.Equals&quot; name=&quot;scala.Equals&quot;&gt;Equals&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;equals&quot; id=&quot;scala.Equals&quot; name=&quot;scala.Equals&quot;&gt;Equals&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2454f50d1c01f402408fd28dfd6b73e4e2f4079" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="97eca3d724c62ae555facfbff915d118c87fe798" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;function1%24%24unliftops&quot; id=&quot;scala.Function1.UnliftOps&quot; name=&quot;scala.Function1.UnliftOps&quot;&gt;UnliftOps&lt;/a&gt;[&lt;span name=&quot;scala.Function1.UnliftOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;function1%24%24unliftops&quot; id=&quot;scala.Function1.UnliftOps&quot; name=&quot;scala.Function1.UnliftOps&quot;&gt;UnliftOps&lt;/a&gt; [ &lt;span name=&quot;scala.Function1.UnliftOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.Function1.UnliftOps.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="910a8e9a1c39fdd4e607ad15f314c23b24a38627" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;inline&quot; id=&quot;scala.inline&quot; name=&quot;scala.inline&quot;&gt;inline&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;inline&quot; id=&quot;scala.inline&quot; name=&quot;scala.inline&quot;&gt;inline&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7cfba2001eb285d9e3dabfaf1ad63d00af5703d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff5d97320dad7e71b9b55bbdcd43f0591004072a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24dynamics&quot; id=&quot;scala.languageFeature.dynamics&quot; name=&quot;scala.languageFeature.dynamics&quot;&gt;dynamics&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;languagefeature%24%24dynamics&quot; id=&quot;scala.languageFeature.dynamics&quot; name=&quot;scala.languageFeature.dynamics&quot;&gt;динамика&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68853537b1fb983346f598868a4b81fc1353348e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24existentials&quot; id=&quot;scala.languageFeature.existentials&quot; name=&quot;scala.languageFeature.existentials&quot;&gt;existentials&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;languagefeature%24%24existentials&quot; id=&quot;scala.languageFeature.existentials&quot; name=&quot;scala.languageFeature.existentials&quot;&gt;existentials&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59a5546b0e6d1ad0e5137ad2dfa5bd53ccf3b69b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24experimental%24%24macros&quot; id=&quot;scala.languageFeature.experimental.macros&quot; name=&quot;scala.languageFeature.experimental.macros&quot;&gt;macros&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;languagefeature%24%24experimental%24%24macros&quot; id=&quot;scala.languageFeature.experimental.macros&quot; name=&quot;scala.languageFeature.experimental.macros&quot;&gt;macros&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b33778db4a427a0121bfa99a34482a1ebd1a13e1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24higherkinds&quot; id=&quot;scala.languageFeature.higherKinds&quot; name=&quot;scala.languageFeature.higherKinds&quot;&gt;higherKinds&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;languagefeature%24%24higherkinds&quot; id=&quot;scala.languageFeature.higherKinds&quot; name=&quot;scala.languageFeature.higherKinds&quot;&gt;upperKinds&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a5af60e9c31a852d3fda13fa1fe7960397f205c0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24implicitconversions&quot; id=&quot;scala.languageFeature.implicitConversions&quot; name=&quot;scala.languageFeature.implicitConversions&quot;&gt;implicitConversions&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;languagefeature%24%24implicitconversions&quot; id=&quot;scala.languageFeature.implicitConversions&quot; name=&quot;scala.languageFeature.implicitConversions&quot;&gt;implicitConversions&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="31264fdb21aa4c372516f5512f40df0dc1b8335f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24postfixops&quot; id=&quot;scala.languageFeature.postfixOps&quot; name=&quot;scala.languageFeature.postfixOps&quot;&gt;postfixOps&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;languagefeature%24%24postfixops&quot; id=&quot;scala.languageFeature.postfixOps&quot; name=&quot;scala.languageFeature.postfixOps&quot;&gt;postfixOps&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9e46f64cfddb462aa861d103f64116ce9fad3ab" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature%24%24reflectivecalls&quot; id=&quot;scala.languageFeature.reflectiveCalls&quot; name=&quot;scala.languageFeature.reflectiveCalls&quot;&gt;reflectiveCalls&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;languagefeature%24%24reflectivecalls&quot; id=&quot;scala.languageFeature.reflectiveCalls&quot; name=&quot;scala.languageFeature.reflectiveCalls&quot;&gt;RefctiveCalls&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d63c5f8f13e9d067ad2d8737fb1c961835f70ee" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6aa2302e9bd75cad7f92cfec08bfa0bc82cd0e90" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;matcherror&quot; id=&quot;scala.MatchError&quot; name=&quot;scala.MatchError&quot;&gt;MatchError&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;matcherror&quot; id=&quot;scala.MatchError&quot; name=&quot;scala.MatchError&quot;&gt;MatchError&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bfa8f2bb02cbb6854f8d95671d28b1266d224ac3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;native&quot; id=&quot;scala.native&quot; name=&quot;scala.native&quot;&gt;native&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;native&quot; id=&quot;scala.native&quot; name=&quot;scala.native&quot;&gt;native&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2816b1ccf776ac36f4f923ad1a4c7ef959abea8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;noinline&quot; id=&quot;scala.noinline&quot; name=&quot;scala.noinline&quot;&gt;noinline&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;noinline&quot; id=&quot;scala.noinline&quot; name=&quot;scala.noinline&quot;&gt;noinline&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf24f030cae744fcab4c386b6200e2ba0df4c539" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;notimplementederror&quot; id=&quot;scala.NotImplementedError&quot; name=&quot;scala.NotImplementedError&quot;&gt;NotImplementedError&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;notimplementederror&quot; id=&quot;scala.NotImplementedError&quot; name=&quot;scala.NotImplementedError&quot;&gt;NotImplementedError&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17fb5b82516f4eebd8edd923bd848e4087b71c5c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fa9c1f7b9570b0e8e962918fff2f642e513152ae" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option%24withfilter&quot; id=&quot;scala.Option.WithFilter&quot; name=&quot;scala.Option.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;option%24withfilter&quot; id=&quot;scala.Option.WithFilter&quot; name=&quot;scala.Option.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eedaf82bfc3223034031a6480f9a5c7efac16e6e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d2b966dad9d41228542da42d04c01b65a9ab44c9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.ElementWiseExtractor.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.ElementWiseExtractor.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt; [ &lt;span name=&quot;scala.PartialFunction.ElementWiseExtractor.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.PartialFunction.ElementWiseExtractor.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="040712cf7745b9ee65e37c5300ee6bf7002b141e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt;[&lt;span name=&quot;scala.Predef.any2stringadd.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;predef%24%24any2stringadd&quot; id=&quot;scala.Predef.any2stringadd&quot; name=&quot;scala.Predef.any2stringadd&quot;&gt;any2stringadd&lt;/a&gt; [ &lt;span name=&quot;scala.Predef.any2stringadd.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2fb834d4b636bad2c3ba7dee88f59424897dd845" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24arraycharsequence&quot; id=&quot;scala.Predef.ArrayCharSequence&quot; name=&quot;scala.Predef.ArrayCharSequence&quot;&gt;ArrayCharSequence&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;predef%24%24arraycharsequence&quot; id=&quot;scala.Predef.ArrayCharSequence&quot; name=&quot;scala.Predef.ArrayCharSequence&quot;&gt;ArrayCharSequence&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3256da432b2c56de3731a9f7f56649529aa4043a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt;[&lt;span name=&quot;scala.Predef.ArrowAssoc.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;predef%24%24arrowassoc&quot; id=&quot;scala.Predef.ArrowAssoc&quot; name=&quot;scala.Predef.ArrowAssoc&quot;&gt;ArrowAssoc&lt;/a&gt; [ &lt;span name=&quot;scala.Predef.ArrowAssoc.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a16e7e3aea5194f84061bc2846d9f76985cdd6bd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24seqcharsequence&quot; id=&quot;scala.Predef.SeqCharSequence&quot; name=&quot;scala.Predef.SeqCharSequence&quot;&gt;SeqCharSequence&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;predef%24%24seqcharsequence&quot; id=&quot;scala.Predef.SeqCharSequence&quot; name=&quot;scala.Predef.SeqCharSequence&quot;&gt;SeqCharSequence&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e5bd3c1d5be2b22cdd76ceab2e1d2c1051961550" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt;[&lt;span name=&quot;scala.Predef.StringFormat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;predef%24%24stringformat&quot; id=&quot;scala.Predef.StringFormat&quot; name=&quot;scala.Predef.StringFormat&quot;&gt;StringFormat&lt;/a&gt; [ &lt;span name=&quot;scala.Predef.StringFormat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="66b6f3aa8d6db159e58b404ff254176dc83ae8e0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52e0080e6f6fbf7c859deb9fef9bf1a3676338db" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product1&quot; id=&quot;scala.Product1&quot; name=&quot;scala.Product1&quot;&gt;Product1&lt;/a&gt;[&lt;span name=&quot;scala.Product1.T1&quot;&gt;T1&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product1&quot; id=&quot;scala.Product1&quot; name=&quot;scala.Product1&quot;&gt;Product1&lt;/a&gt; [ &lt;span name=&quot;scala.Product1.T1&quot;&gt;T1&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="70e5f2a5f3813a281e4834b18fb9568313b2828f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product10&quot; id=&quot;scala.Product10&quot; name=&quot;scala.Product10&quot;&gt;Product10&lt;/a&gt;[&lt;span name=&quot;scala.Product10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product10.T10&quot;&gt;T10&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product10&quot; id=&quot;scala.Product10&quot; name=&quot;scala.Product10&quot;&gt;Product10&lt;/a&gt; [ &lt;span name=&quot;scala.Product10.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product10.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product10.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product10.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product10.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product10.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product10.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product10.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product10.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product10.T10&quot;&gt;T10&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="45a59353211a42df76cac743295cb3f275c2f1d8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product11&quot; id=&quot;scala.Product11&quot; name=&quot;scala.Product11&quot;&gt;Product11&lt;/a&gt;[&lt;span name=&quot;scala.Product11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product11.T11&quot;&gt;T11&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product11&quot; id=&quot;scala.Product11&quot; name=&quot;scala.Product11&quot;&gt;Product11&lt;/a&gt; [ &lt;span name=&quot;scala.Product11.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product11.T11&quot;&gt;T11&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e6412cd08b1b73a2402f34674b8fc7403422d3e9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product12&quot; id=&quot;scala.Product12&quot; name=&quot;scala.Product12&quot;&gt;Product12&lt;/a&gt;[&lt;span name=&quot;scala.Product12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product12.T12&quot;&gt;T12&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product12&quot; id=&quot;scala.Product12&quot; name=&quot;scala.Product12&quot;&gt;Product12&lt;/a&gt; [ &lt;span name=&quot;scala.Product12.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product12.T12&quot;&gt;T12&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f20b7713e0f910c0d1e0a57105bfc192d99ddb32" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product13&quot; id=&quot;scala.Product13&quot; name=&quot;scala.Product13&quot;&gt;Product13&lt;/a&gt;[&lt;span name=&quot;scala.Product13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product13.T13&quot;&gt;T13&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product13&quot; id=&quot;scala.Product13&quot; name=&quot;scala.Product13&quot;&gt;Product13&lt;/a&gt; [ &lt;span name=&quot;scala.Product13.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product13.T13&quot;&gt;T13&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3545e9155ab2381a106746a0534e521da0521a51" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product14&quot; id=&quot;scala.Product14&quot; name=&quot;scala.Product14&quot;&gt;Product14&lt;/a&gt;[&lt;span name=&quot;scala.Product14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product14.T14&quot;&gt;T14&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product14&quot; id=&quot;scala.Product14&quot; name=&quot;scala.Product14&quot;&gt;Product14&lt;/a&gt; [ &lt;span name=&quot;scala.Product14.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Product14.T14&quot;&gt;T14&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="efe970c3de3fdf473cb296771e009bb6b1ebf63d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product15&quot; id=&quot;scala.Product15&quot; name=&quot;scala.Product15&quot;&gt;Product15&lt;/a&gt;[&lt;span name=&quot;scala.Product15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product15.T15&quot;&gt;T15&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product15&quot; id=&quot;scala.Product15&quot; name=&quot;scala.Product15&quot;&gt;Product15&lt;/a&gt; [ &lt;span name=&quot;scala.Product15.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Product15.T15&quot;&gt;T15&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a45cab44e8cb01a3be4e718018816b1edb32531a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product16&quot; id=&quot;scala.Product16&quot; name=&quot;scala.Product16&quot;&gt;Product16&lt;/a&gt;[&lt;span name=&quot;scala.Product16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product16.T16&quot;&gt;T16&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product16&quot; id=&quot;scala.Product16&quot; name=&quot;scala.Product16&quot;&gt;Product16&lt;/a&gt; [ &lt;span name=&quot;scala.Product16.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Product16.T16&quot;&gt;T16&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="31dbf2fe6c73ff14d61b15f59bfc2aa931e5deab" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product17&quot; id=&quot;scala.Product17&quot; name=&quot;scala.Product17&quot;&gt;Product17&lt;/a&gt;[&lt;span name=&quot;scala.Product17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product17.T17&quot;&gt;T17&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product17&quot; id=&quot;scala.Product17&quot; name=&quot;scala.Product17&quot;&gt;Product17&lt;/a&gt; [ &lt;span name=&quot;scala.Product17.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Product17.T17&quot;&gt;T17&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1dc265591cb513d9a4049e9d02b2e2459e5f5b52" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product18&quot; id=&quot;scala.Product18&quot; name=&quot;scala.Product18&quot;&gt;Product18&lt;/a&gt;[&lt;span name=&quot;scala.Product18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product18.T18&quot;&gt;T18&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product18&quot; id=&quot;scala.Product18&quot; name=&quot;scala.Product18&quot;&gt;Product18&lt;/a&gt; [ &lt;span name=&quot;scala.Product18.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Product18.T18&quot;&gt;T18&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0361c9a622444d8185e4589caebef4c2a3cf3b82" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product19&quot; id=&quot;scala.Product19&quot; name=&quot;scala.Product19&quot;&gt;Product19&lt;/a&gt;[&lt;span name=&quot;scala.Product19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product19.T19&quot;&gt;T19&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product19&quot; id=&quot;scala.Product19&quot; name=&quot;scala.Product19&quot;&gt;Product19&lt;/a&gt; [ &lt;span name=&quot;scala.Product19.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T18&quot;&gt;T18&lt;/span&gt; , &lt;span name=&quot;scala.Product19.T19&quot;&gt;T19&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="abab40be5f67c028f25360292c8a33699c822478" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product2&quot; id=&quot;scala.Product2&quot; name=&quot;scala.Product2&quot;&gt;Product2&lt;/a&gt;[&lt;span name=&quot;scala.Product2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product2.T2&quot;&gt;T2&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product2&quot; id=&quot;scala.Product2&quot; name=&quot;scala.Product2&quot;&gt;Product2&lt;/a&gt; [ &lt;span name=&quot;scala.Product2.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product2.T2&quot;&gt;T2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7474797223823fd5a63569595fb1beba67fdb087" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product20&quot; id=&quot;scala.Product20&quot; name=&quot;scala.Product20&quot;&gt;Product20&lt;/a&gt;[&lt;span name=&quot;scala.Product20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product20.T20&quot;&gt;T20&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product20&quot; id=&quot;scala.Product20&quot; name=&quot;scala.Product20&quot;&gt;Product20&lt;/a&gt; [ &lt;span name=&quot;scala.Product20.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T18&quot;&gt;Т18&lt;/span&gt; , &lt;span name=&quot;scala.Product20.T19&quot;&gt;Т19&lt;/span&gt; ,&lt;span name=&quot;scala.Product20.T20&quot;&gt; T20&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="57439817675ad8c98f758da14a9323cc221181d5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product21&quot; id=&quot;scala.Product21&quot; name=&quot;scala.Product21&quot;&gt;Product21&lt;/a&gt;[&lt;span name=&quot;scala.Product21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Product21.T21&quot;&gt;T21&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product21&quot; id=&quot;scala.Product21&quot; name=&quot;scala.Product21&quot;&gt;Product21&lt;/a&gt; [ &lt;span name=&quot;scala.Product21.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T18&quot;&gt;Т18&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T19&quot;&gt;Т19&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T20&quot;&gt;Т20&lt;/span&gt; , &lt;span name=&quot;scala.Product21.T21&quot;&gt;Т21&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dc2160ace432fa3d694820c45ef3a3343543340d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product22&quot; id=&quot;scala.Product22&quot; name=&quot;scala.Product22&quot;&gt;Product22&lt;/a&gt;[&lt;span name=&quot;scala.Product22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Product22.T22&quot;&gt;T22&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product22&quot; id=&quot;scala.Product22&quot; name=&quot;scala.Product22&quot;&gt;Product22&lt;/a&gt; [ &lt;span name=&quot;scala.Product22.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T9&quot;&gt;T9&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T10&quot;&gt;T10&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T11&quot;&gt;T11&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T12&quot;&gt;T12&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T13&quot;&gt;T13&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T14&quot;&gt;T14&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T15&quot;&gt;T15&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T16&quot;&gt;T16&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T17&quot;&gt;T17&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T18&quot;&gt;Т18&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T19&quot;&gt;Т19&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T20&quot;&gt;Т20&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T21&quot;&gt;Т21&lt;/span&gt; , &lt;span name=&quot;scala.Product22.T22&quot;&gt;Т22&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c4ce117f5d55d6bc066c1d5c374d84c46ded64ba" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product3&quot; id=&quot;scala.Product3&quot; name=&quot;scala.Product3&quot;&gt;Product3&lt;/a&gt;[&lt;span name=&quot;scala.Product3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product3.T3&quot;&gt;T3&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product3&quot; id=&quot;scala.Product3&quot; name=&quot;scala.Product3&quot;&gt;Product3&lt;/a&gt; [ &lt;span name=&quot;scala.Product3.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product3.T2&quot;&gt;T2&lt;/span&gt; ,&lt;span name=&quot;scala.Product3.T3&quot;&gt; T3&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f49dbbae9068230d912ddc18b9df7a9c91755b42" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product4&quot; id=&quot;scala.Product4&quot; name=&quot;scala.Product4&quot;&gt;Product4&lt;/a&gt;[&lt;span name=&quot;scala.Product4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product4.T4&quot;&gt;T4&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product4&quot; id=&quot;scala.Product4&quot; name=&quot;scala.Product4&quot;&gt;Product4&lt;/a&gt; [ &lt;span name=&quot;scala.Product4.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product4.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product4.T3&quot;&gt;T3&lt;/span&gt; ,&lt;span name=&quot;scala.Product4.T4&quot;&gt; T4&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="47fc778e7aed23775da78e0c248b259faccffb3f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product5&quot; id=&quot;scala.Product5&quot; name=&quot;scala.Product5&quot;&gt;Product5&lt;/a&gt;[&lt;span name=&quot;scala.Product5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product5.T5&quot;&gt;T5&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product5&quot; id=&quot;scala.Product5&quot; name=&quot;scala.Product5&quot;&gt;Product5&lt;/a&gt; [ &lt;span name=&quot;scala.Product5.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product5.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product5.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product5.T4&quot;&gt;T4&lt;/span&gt; ,&lt;span name=&quot;scala.Product5.T5&quot;&gt; T5&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d2da37d8d20a7bcde89faebbcdd9cf1545e0e08b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product6&quot; id=&quot;scala.Product6&quot; name=&quot;scala.Product6&quot;&gt;Product6&lt;/a&gt;[&lt;span name=&quot;scala.Product6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product6.T6&quot;&gt;T6&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product6&quot; id=&quot;scala.Product6&quot; name=&quot;scala.Product6&quot;&gt;Product6&lt;/a&gt; [ &lt;span name=&quot;scala.Product6.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product6.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product6.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product6.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product6.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product6.T6&quot;&gt;T6&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5973efddaf172d8f9a4251ce35448b413256b543" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product7&quot; id=&quot;scala.Product7&quot; name=&quot;scala.Product7&quot;&gt;Product7&lt;/a&gt;[&lt;span name=&quot;scala.Product7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product7.T7&quot;&gt;T7&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product7&quot; id=&quot;scala.Product7&quot; name=&quot;scala.Product7&quot;&gt;Product7&lt;/a&gt; [ &lt;span name=&quot;scala.Product7.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product7.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product7.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product7.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product7.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product7.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product7.T7&quot;&gt;T7&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3d156d598c14fb3901b2a1c20bdf2ec7d8096094" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product8&quot; id=&quot;scala.Product8&quot; name=&quot;scala.Product8&quot;&gt;Product8&lt;/a&gt;[&lt;span name=&quot;scala.Product8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product8.T8&quot;&gt;T8&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product8&quot; id=&quot;scala.Product8&quot; name=&quot;scala.Product8&quot;&gt;Product8&lt;/a&gt; [ &lt;span name=&quot;scala.Product8.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product8.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product8.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product8.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product8.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product8.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product8.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product8.T8&quot;&gt;T8&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6e5a4cd3a78c4e77f5a3efe4a115196f586bae65" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;product9&quot; id=&quot;scala.Product9&quot; name=&quot;scala.Product9&quot;&gt;Product9&lt;/a&gt;[&lt;span name=&quot;scala.Product9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Product9.T9&quot;&gt;T9&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;product9&quot; id=&quot;scala.Product9&quot; name=&quot;scala.Product9&quot;&gt;Product9&lt;/a&gt; [ &lt;span name=&quot;scala.Product9.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.Product9.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.Product9.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.Product9.T4&quot;&gt;T4&lt;/span&gt; , &lt;span name=&quot;scala.Product9.T5&quot;&gt;T5&lt;/span&gt; , &lt;span name=&quot;scala.Product9.T6&quot;&gt;T6&lt;/span&gt; , &lt;span name=&quot;scala.Product9.T7&quot;&gt;T7&lt;/span&gt; , &lt;span name=&quot;scala.Product9.T8&quot;&gt;T8&lt;/span&gt; , &lt;span name=&quot;scala.Product9.T9&quot;&gt;T9&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="41b4e8cee7f27830ab75bdc3cc94260161c61f7d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;proxy&quot; id=&quot;scala.Proxy&quot; name=&quot;scala.Proxy&quot;&gt;Proxy&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;proxy&quot; id=&quot;scala.Proxy&quot; name=&quot;scala.Proxy&quot;&gt;Proxy&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5f2e915ac6cc6245f309ec9c1c32d3b8545eee0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;proxy%24%24typed&quot; id=&quot;scala.Proxy.Typed&quot; name=&quot;scala.Proxy.Typed&quot;&gt;Typed&lt;/a&gt;[&lt;span name=&quot;scala.Proxy.Typed.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;proxy%24%24typed&quot; id=&quot;scala.Proxy.Typed&quot; name=&quot;scala.Proxy.Typed&quot;&gt;Typed&lt;/a&gt; [ &lt;span name=&quot;scala.Proxy.Typed.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="41aaf506ee70ada476398a1a77d97e9eb229417b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;scalareflectionexception&quot; id=&quot;scala.ScalaReflectionException&quot; name=&quot;scala.ScalaReflectionException&quot;&gt;ScalaReflectionException&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;scalareflectionexception&quot; id=&quot;scala.ScalaReflectionException&quot; name=&quot;scala.ScalaReflectionException&quot;&gt;ScalaReflectionException&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5cf07739190ef47eec523bed3aa104ed939aad4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;serialversionuid&quot; id=&quot;scala.SerialVersionUID&quot; name=&quot;scala.SerialVersionUID&quot;&gt;SerialVersionUID&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;serialversionuid&quot; id=&quot;scala.SerialVersionUID&quot; name=&quot;scala.SerialVersionUID&quot;&gt;SerialVersionUID&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e785e5b53c46e88e1a5918b903f83dcd271bc59" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4bb46aada643917cbe4f26a35edebca3891090a3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;singleton&quot; id=&quot;scala.Singleton&quot; name=&quot;scala.Singleton&quot;&gt;Singleton&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;singleton&quot; id=&quot;scala.Singleton&quot; name=&quot;scala.Singleton&quot;&gt;Singleton&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eda1b39af2a1278546a17ec68940880ee7b7ab11" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt; [ &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6ab07adbaaab697a9a56e877922edc4384d2dec7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;specializable&quot; id=&quot;scala.Specializable&quot; name=&quot;scala.Specializable&quot;&gt;Specializable&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;specializable&quot; id=&quot;scala.Specializable&quot; name=&quot;scala.Specializable&quot;&gt;Specializable&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0742d76dfd93f1407b684c5e6e0be88645e5b5cb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;specializable%24%24group&quot; id=&quot;scala.Specializable.Group&quot; name=&quot;scala.Specializable.Group&quot;&gt;Group&lt;/a&gt;[&lt;span name=&quot;scala.Specializable.Group.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;specializable%24%24group&quot; id=&quot;scala.Specializable.Group&quot; name=&quot;scala.Specializable.Group&quot;&gt;Group&lt;/a&gt; [ &lt;span name=&quot;scala.Specializable.Group.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="df1463ba18d5c507098e38aa47b71fd9caa224da" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;specializable%24%24specializedgroup&quot; id=&quot;scala.Specializable.SpecializedGroup&quot; name=&quot;scala.Specializable.SpecializedGroup&quot;&gt;SpecializedGroup&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;specializable%24%24specializedgroup&quot; id=&quot;scala.Specializable.SpecializedGroup&quot; name=&quot;scala.Specializable.SpecializedGroup&quot;&gt;SpecializedGroup&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76f7f2ee0a490fa6d44812e58b03c82095f2d72c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;specialized&quot; id=&quot;scala.specialized&quot; name=&quot;scala.specialized&quot;&gt;specialized&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ):&lt;a href=&quot;specialized&quot; id=&quot;scala.specialized&quot; name=&quot;scala.specialized&quot;&gt; специализированный&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7205f717e3402b671d7a70da042319e862114618" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringcontext&quot; id=&quot;scala.StringContext&quot; name=&quot;scala.StringContext&quot;&gt;StringContext&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringcontext&quot; id=&quot;scala.StringContext&quot; name=&quot;scala.StringContext&quot;&gt;StringContext&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6ce0cb301620ec91865100947f946395d2fa66e1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringcontext%24%24invalidescapeexception&quot; id=&quot;scala.StringContext.InvalidEscapeException&quot; name=&quot;scala.StringContext.InvalidEscapeException&quot;&gt;InvalidEscapeException&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringcontext%24%24invalidescapeexception&quot; id=&quot;scala.StringContext.InvalidEscapeException&quot; name=&quot;scala.StringContext.InvalidEscapeException&quot;&gt;InvalidEscapeException&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27cc9c8ca1011a5353622e03ce12da09650372a1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4ec70de2edfefb5f0a1b2b5070407749def64e0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;throws&quot; id=&quot;scala.throws&quot; name=&quot;scala.throws&quot;&gt;throws&lt;/a&gt;[&lt;span name=&quot;scala.throws.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;throws&quot; id=&quot;scala.throws&quot; name=&quot;scala.throws&quot;&gt;throws&lt;/a&gt; [ &lt;span name=&quot;scala.throws.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a4121d1125e43fab54317df6b751b03fa18efb67" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;transient&quot; id=&quot;scala.transient&quot; name=&quot;scala.transient&quot;&gt;transient&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;transient&quot; id=&quot;scala.transient&quot; name=&quot;scala.transient&quot;&gt;transient&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1459efcb037fa8c524d1d2e470ebea0ea6fd0754" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unchecked&quot; id=&quot;scala.unchecked&quot; name=&quot;scala.unchecked&quot;&gt;unchecked&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;unchecked&quot; id=&quot;scala.unchecked&quot; name=&quot;scala.unchecked&quot;&gt;не отмечено&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="007b9959103f18956a0c22957de565fcac5b1e25" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;uninitializederror&quot; id=&quot;scala.UninitializedError&quot; name=&quot;scala.UninitializedError&quot;&gt;UninitializedError&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;uninitializederror&quot; id=&quot;scala.UninitializedError&quot; name=&quot;scala.UninitializedError&quot;&gt;UninitializedError&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="606387005aa3620fdc4a8798177a3bc10a420460" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;uninitializedfielderror&quot; id=&quot;scala.UninitializedFieldError&quot; name=&quot;scala.UninitializedFieldError&quot;&gt;UninitializedFieldError&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;uninitializedfielderror&quot; id=&quot;scala.UninitializedFieldError&quot; name=&quot;scala.UninitializedFieldError&quot;&gt;UninitializedFieldError&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="719018432eb1422f7e4d762f05e18270efcf0b27" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b91416f8001ab28dd77dae0e85bb170a9a3b5ddd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;valueof&quot; id=&quot;scala.ValueOf&quot; name=&quot;scala.ValueOf&quot;&gt;ValueOf&lt;/a&gt;[&lt;span name=&quot;scala.ValueOf.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;valueof&quot; id=&quot;scala.ValueOf&quot; name=&quot;scala.ValueOf&quot;&gt;ValueOf&lt;/a&gt; [ &lt;span name=&quot;scala.ValueOf.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c01d20098f15b0e19eba295e902db0e31acb9f95" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;volatile&quot; id=&quot;scala.volatile&quot; name=&quot;scala.volatile&quot;&gt;volatile&lt;/a&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;volatile&quot; id=&quot;scala.volatile&quot; name=&quot;scala.volatile&quot;&gt;volatile&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49da9be6b3f10ffa26418de929f2ee08171e6eaf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Predef.Ensuring.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def обеспечение ( &lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.Predef.Ensuring.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="477a8836ee35cef6d264e52026f3c3e9de3a7006" translate="yes" xml:space="preserve">
          <source>def entryExists(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def entryExists ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b7dbc0e8e0f2c14b64d6bda5cd74d333f1d9d9e" translate="yes" xml:space="preserve">
          <source>def env: &lt;a href=&quot;../collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def env: &lt;a href=&quot;../collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="326b6c42d37dcf5986cebd7ef320d3d42edee2ed" translate="yes" xml:space="preserve">
          <source>def envOrElse(&lt;span name=&quot;name&quot;&gt;name: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;alt&quot;&gt;alt: =&amp;gt; &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">def envOrElse ( &lt;span name=&quot;name&quot;&gt;имя: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;alt&quot;&gt;alt: =&amp;gt; &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="76adb37e4d4a9ee97c60b2f3a33ad37c3a02e9dc" translate="yes" xml:space="preserve">
          <source>def envOrNone(&lt;span name=&quot;name&quot;&gt;name: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;]</source>
          <target state="translated">def envOrNone ( &lt;span name=&quot;name&quot;&gt;name: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8d2588a0fa4ab73f231169dc31f3f65de0b3cfef" translate="yes" xml:space="preserve">
          <source>def envOrSome(&lt;span name=&quot;name&quot;&gt;name: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;alt&quot;&gt;alt: =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;]</source>
          <target state="translated">def envOrSome ( &lt;span name=&quot;name&quot;&gt;name: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;alt&quot;&gt;alt: =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a936fd8625922bc80f8a1e7e45f241bb4b576720" translate="yes" xml:space="preserve">
          <source>def equality: &lt;a href=&quot;../../index#Equiv%5BT%5D=scala.math.Equiv%5BT%5D&quot; id=&quot;scala.Equiv&quot; name=&quot;scala.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def равенство: &lt;a href=&quot;../../index#Equiv%5BT%5D=scala.math.Equiv%5BT%5D&quot; id=&quot;scala.Equiv&quot; name=&quot;scala.Equiv&quot;&gt;Equiv&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c1dce579e7cb260def9d806cfdd1c61c8e6c9f9b" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2747919d3d738f6d07b944752db7a3f1e832fd46" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d8ea1cbb6df8c0a7ef52bc8db0c8d1ae1ffcbdd" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd6232a953c45f7324f439bd8ada690d54e51f0d" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b51ce56df2aee02cfa1c240031e63d38abbce4f1" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1423c2d1977319d397e77ea73239c613b80e80bb" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f242181679db23ccfb1d5803e8d96261510c4e5" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c314fa6851e781fb21b93abcbf4e3ebeecbae7f" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0122586c655c2db557695f522e3fbfb63d615156" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dcc32279316f3a661d84467491700178fcbdca82" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;obj&quot;&gt;obj: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;obj&quot;&gt;obj: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50643a652e8a911ae921031e34796a76c7df7f0c" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="912c8ac341c25bcbb2ba7f30b90f6ae04b2cb0aa" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5eb13dde51be9e1ab06aadd18169001f0eaaf3d4" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25a8f142d63810b366cfb07fd22f7422248e6537" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dfedc54fd784d6a3899c0a7b3c5c5c88eb44aa49" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ed3e4bcf668e17cd81f9014f91d3a3f32d6dd40" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69fd510942e826235b56226096fd758d5bbbee60" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f43dbda483128f986a28f0ffa3be0af8b2f18155" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d869012cba4d24844262745fc2325875d68fc719" translate="yes" xml:space="preserve">
          <source>def equals(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;ys&quot;&gt;ys: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def равно ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt; ]&lt;/span&gt; , &lt;span name=&quot;ys&quot;&gt;ys: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf9288d3d90ab925ebc937eef40a972ff695fe35" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;rhs&quot;&gt;rhs: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;rhs&quot;&gt;rhs: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="abe83d2a40bbe48413db5b594666840cb6f58758" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="864fd3698f017045fdca154182e00830948adb23" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1d570fc46dedf7698a2df672f8be9e08dce64d4" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логическое&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="366e31c9b4625efe952a24d6a7f696fd3b1dc808" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb2facbeb36b57e1aede5f9ce910054c404e3fd2" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6ad696cd5e70ee9c6e17bec87151fa90261dc297" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d91341ba2abd4694d8db9d6d4d21cba02ffc436" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e1c9bb18f78706112a47664dd254625b19851c9" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5d6ff98d2dd20463e576590347062874641f945" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89dbaec77bbd10c8946e01e87c70ec7b4e1ce537" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34a654eb5ac3c3abc35d874220d9098abc2e22a2" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;символ&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;символ&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87eabf0813ed1f9802adaa90ca1fb3d698e3d724" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd5f97f3a5668e2f6a16bae205fdee5eb77dbfd6" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8843efcbfce464f78d175df958577520a8e8654c" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def &lt;span name=&quot;x&quot;&gt;&lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;Equiv&lt;/a&gt;&lt;/span&gt; ( &lt;span name=&quot;x&quot;&gt;x: BigInt&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логическое&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="baa4220fe9891b483350fbbeec1855437f3558e3" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;крайний срок&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;крайний срок&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логическое&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6e5d49b8f3ce5b40d0c8c1039b3560b6613071a" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Продолжительность&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Продолжительность&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Логическое&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9f92a027be9357a0a1af3e3cf5493d8b44f9db9" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;значение&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;значение&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логическое&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3527e0d4bf550c348670a725bac8940bc00b5777" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def &lt;span name=&quot;x&quot;&gt;&lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;Equiv&lt;/a&gt;&lt;/span&gt; ( &lt;span name=&quot;x&quot;&gt;x: FiniteDuration&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae6a53d4d5d31aae6f5103f6fb5ef1f434415f09" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8410c71803904c3089a6f54be0815499ab6eabc" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44d8d57fd1137780d82c6b87a968c03cfcf6e64b" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad3859071e100f444baebca87732542acb7542ae" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc93f25c1a09cbb8a99ad15ff22439afc41b9673" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7bf2d38d89c030bb6d248554754a79a0698e7b04" translate="yes" xml:space="preserve">
          <source>def equiv(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def Equiv ( &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad01461f8f461a40ffbf728509010a6d6ee60efe" translate="yes" xml:space="preserve">
          <source>def err(&lt;span name=&quot;s&quot;&gt;s: =&amp;gt; &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def err ( &lt;span name=&quot;s&quot;&gt;s: =&amp;gt; &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Единица&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="651807dbd3f98844981c28b072b9cc5a27055140" translate="yes" xml:space="preserve">
          <source>def err: &lt;span name=&quot;java.io.PrintStream&quot;&gt;PrintStream&lt;/span&gt;</source>
          <target state="translated">def err: &lt;span name=&quot;java.io.PrintStream&quot;&gt;PrintStream&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0c07672a062387cceffc521dafe7b414fe93036d" translate="yes" xml:space="preserve">
          <source>def error(&lt;span name=&quot;message&quot;&gt;message: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;</source>
          <target state="translated">def error ( &lt;span name=&quot;message&quot;&gt;message: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;ничего&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ba36da1c415b22c1ad19e2f4fa9dfb5e7735d32" translate="yes" xml:space="preserve">
          <source>def estimateSize(): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def EstimationSize (): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Длинный&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3565e6020181086e0688f00f4a021957bdefe0a7" translate="yes" xml:space="preserve">
          <source>def evidenceIterableFactory: &lt;a href=&quot;arrayseq%24&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;.type</source>
          <target state="translated">def ДоказательствоIterableFactory: &lt;a href=&quot;arrayseq%24&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; .type</target>
        </trans-unit>
        <trans-unit id="cb45d5c93248ff4542946e3764bfebdc7737ec79" translate="yes" xml:space="preserve">
          <source>def evidenceIterableFactory: &lt;a href=&quot;unrolledbuffer%24&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;.type</source>
          <target state="translated">def ДоказательствоIterableFactory: &lt;a href=&quot;unrolledbuffer%24&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; .type</target>
        </trans-unit>
        <trans-unit id="a3bef0620e34031e56c37a34e2b6785041c72fbf" translate="yes" xml:space="preserve">
          <source>def exact(&lt;span name=&quot;bi&quot;&gt;bi: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def точное ( &lt;span name=&quot;bi&quot;&gt;bi: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1cad1532100927eb55b3f780c6c2c271fd6ceec" translate="yes" xml:space="preserve">
          <source>def exact(&lt;span name=&quot;cs&quot;&gt;cs: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def точное ( &lt;span name=&quot;cs&quot;&gt;cs: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d89de683eba47e3f76acd9729ef774b79f329a74" translate="yes" xml:space="preserve">
          <source>def exact(&lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def точное ( &lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1481c59d44849ae6c99a69cd87193e4a62bed843" translate="yes" xml:space="preserve">
          <source>def exact(&lt;span name=&quot;l&quot;&gt;l: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def точное ( &lt;span name=&quot;l&quot;&gt;l: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e5d4787f29bd2e0c9f7fd9dd6196895ac4c3a6f" translate="yes" xml:space="preserve">
          <source>def exact(&lt;span name=&quot;repr&quot;&gt;repr: &lt;span name=&quot;java.math.BigDecimal&quot;&gt;java.math.BigDecimal&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def точное ( &lt;span name=&quot;repr&quot;&gt;repr: &lt;span name=&quot;java.math.BigDecimal&quot;&gt;java.math.BigDecimal&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4eea3b977799486832dcec8efccf537ee0f8a078" translate="yes" xml:space="preserve">
          <source>def exact(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def точное ( &lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a1c8dfe3e2a36c0d50f5b99de98de079b720dfe" translate="yes" xml:space="preserve">
          <source>def excl(&lt;span name=&quot;e&quot;&gt;e: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def excl ( &lt;span name=&quot;e&quot;&gt;e: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="03177859254ac078da1c87706d5b967c42cee8d8" translate="yes" xml:space="preserve">
          <source>def excl(&lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">def excl ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2287e23a914a9d48c196c7633ef562ecae70e0a" translate="yes" xml:space="preserve">
          <source>def excl(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def excl ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3c4e9659fc9b840ee7582371eb23547f3495aae7" translate="yes" xml:space="preserve">
          <source>def excl(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def excl ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="af45ab0b763b733bcfa8209cb5eb6aab5125e846" translate="yes" xml:space="preserve">
          <source>def excl(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def excl ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3092bd8b01ec14c15ef8d53beb09f63c1227cc3d" translate="yes" xml:space="preserve">
          <source>def excl(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def excl ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cdbb5ff6c266ff995b3036e200a7146f914b3a35" translate="yes" xml:space="preserve">
          <source>def excl(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def excl ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="673db92ae64c0eecc392090bbf0cf29a6c425d3c" translate="yes" xml:space="preserve">
          <source>def excl(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def excl ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4a8ac2c77fc4b869c8b0cc05031d9bd25718162c" translate="yes" xml:space="preserve">
          <source>def excl(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def excl ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="472f3468d96c6a1c74f6f82ae60f412969ac034e" translate="yes" xml:space="preserve">
          <source>def excl(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def excl ( &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9f08274ce7a1e2cb09002ed1c1549ccfd386f0f7" translate="yes" xml:space="preserve">
          <source>def excl(&lt;span name=&quot;element&quot;&gt;element: &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def excl ( &lt;span name=&quot;element&quot;&gt;элемент: &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="688e1fc8927ae7421433e800023ca3d3154babff" translate="yes" xml:space="preserve">
          <source>def excl(&lt;span name=&quot;value&quot;&gt;value: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</source>
          <target state="translated">def excl ( &lt;span name=&quot;value&quot;&gt;значение: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Значение&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0abbaf96a3f2b662c3bef590a0e04145c06da3ac" translate="yes" xml:space="preserve">
          <source>def exclusive: &lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Exclusive&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def эксклюзивный: &lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Исключительный&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a929f222a3b845e9ee38758497f7b73c3e63ce26" translate="yes" xml:space="preserve">
          <source>def exclusively[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;body&quot;&gt;body: =&amp;gt; &lt;span name=&quot;scala.sys.SystemProperties.exclusively.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.sys.SystemProperties.exclusively.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def исключительно [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;body&quot;&gt;body: =&amp;gt; &lt;span name=&quot;scala.sys.SystemProperties.exclusively.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.sys.SystemProperties.exclusively.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b7950f82f34abdc78d2ae8c56133a66ff607d810" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="578adfbfbafbeafb12ffbb5438efc25b5b849a19" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d6631627bb171185936ed17c1d0c0992bad468a" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6821cf485e1fdb83e852edfa8caef9319d53381" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74339197ad2b6b96e6dd11bae9f18352789e6df9" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="390065898173fff2e0e7be398754ae97ea48a5b8" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="662c0243a7842937fcc587424b495df143ad9aae" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c790d32fcfd4e1a59d9ef8ea5b357324248bc116" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f69d2ec4a10329d3d012017258b0f2e96cc274df" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c06e84404d803561b91df4de6c0c9ebe26a7561" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6683cc9c3d73a9bd5130d1d7c92f0be24238e61f" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a1d3d407095510b2eb22116386a8c0c3da6f6e7" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="666f9c5d98463d6552b2be3ba8763be52f11455d" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8517a0e01ebd6de38fe4cc197e63db07d38191de" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="818424c9f6cc3d503f8b3fa273546b0417f54a1e" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36993a38524deadfb1e571ee3293667acedaffaf" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b5d4d9a75e3bb9fe87fe42b96a4b20566af076e" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f9601a67782405668f34db814cc78575d18e599" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7911d6e14b01950dfdcf272d393a757e0b3503b9" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="978fdfb02faa23e6b448bab04c4a9d94da6daf71" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9664f7718719e6cd01e1aed5a01a0884db55e184" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3f131987c77844e7259c73fcd30fdab01e44dc5" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf03bcd94dae9c558e5916a739504409a04d68a0" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="105ab50b22739bb8788370e8b2091bd92be80681" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4156de45c19f4668ec70447acc0c7036186fea0c" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="378be61edaca5f36ab58b00fab3312543007bb0e" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="153744f4bb3599cd29bb91ad7d8373443912784e" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9883b7384bbb8fdc005dfb4fc17c5b5bc01798ef" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c27a96c4e661f4b73d1e14289593d28db4479ebd" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1213be7251492c00ceee9285536d2bec6b6a595" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a85c10466dbaa1afc88677bf4615ab063fbe338c" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5cbb9ee0cc439e30823b7ccff50143695e0c40ac" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82c8945c1f8ede1f0714516d92b7a47f7b9ccab3" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f039fd955ae529ec3fbb7d646e455edb87cbbe62" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56a7e4edc59b93652e5e5663baf5930fdce8d5b9" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d45758b6dfec42b35e70420414fc0ff534b42ed9" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af314b232eb9ff19c3f65688cf3e42fe4066e209" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="731f371cdba5146f231bad6caa4e8d057533ee3e" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="594e013f1cc762f08eaa9b5ac2294bff9362cbe2" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3df8598c5854e773ea9d60f983b3f037519dd4a8" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fce1461e5a30918476b5c8fd7d60b3a99819ff58" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2753f54c771b9e2c82a63d97e4d1ae7394b34329" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ab306118e3022d129feee38cac504a3db911ee4" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b82fee0da77e5fa65abc3c28577a44a26146b65" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b66e690d2bfcc5ff07f43bacaa5c418be926ee2b" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c0026f75b7b138cf769c2a7a79a7a1790a2b49b9" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7faaf217ccf446bfd569e0e8398d1ad06dc85efd" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="200c13c46bc959919ed9977fccd4f09fff878d16" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e44237e954eaf808ee831b99027747f52b7141c9" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6a39b7f4b856f63e40c1564f49d128fa2d25920" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52d99273f355647721f6d95f5f8b856b48e0e266" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37dd593ce1a06c72a73d25d8c6ac9a4bfbae9fab" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9620dc9c83d88c17c7b8c6b186573cfd58013994" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c99b8a2e91e816280a6bfcfbc3afd61f7a8b8f4" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd460acb75427f3812e02f736ed003bb2acee6a6" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07dcbed2b048cb7fa018a4cadf2a18eea365b227" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68c0dae659cdcdf67a079afe72c541691a43908b" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c74d691e3122f4183b9bcf1207a602bd2b6ff16d" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14616c87a9e024129fcd9d35840e9decab275344" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6da642a7d0c09190703e841af74775e5c1752ec" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea7f73035641f874cf70a3e37b8810a95791284d" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ])) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cfb142910b936aa8ffcea7f1419ac8facb96e2d4" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d456e14d843e1a0e02adac4d1cade1670566bc0a" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="668e28e60629472a553191f9e583492c3241625c" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="afc410e20407a22db2f59d4a1fb7c8afee50a098" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c0eca7d3057c54e93094d8a4d1574afc3704e66" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51b588c4904a10e8e8155159b58b07b7ba1ac657" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8354b243943608d78c2e629e56080a83928c38ca" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="43d330fdb7b319d834dfb834698071f0e4a89211" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="016a568bc0b6df11ddf540bc83fad94fe9ff9c29" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b35184526639211bf188754a56ba13c1a9dd876" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="73e95fbd03abd9d9390acaec5119cf78a72a10ac" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3292d132be1a58ffcf9d88fc4e0c31126d9f729" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3667883de3e944db7f3664dddb2e498a6477827d" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="720925f73719c5383cf2253ee06776686407c8d0" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="83c30dba145cbe45eb1fb3d4302d386238d3986f" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fe9a341d9cf40a7ac5941d1eb3a6a6ef49910dcf" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20d2472d05b58f057363659085bfe6980445001a" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="924bcd7d753e8ba1f165606b00dfd2c9b1a8d145" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aab76a756e38aae86656df04962f2456a8a38c52" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="117fb70ae5bb78935e2b1a1853f21d93c03f08d6" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="798f95414f11b025845f96b40359c7e90b450d13" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ce4f2b40aa92137c31a4322061f2e46e0360afc" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a1cd3b3dbae5df96ccc8bb74b62ae1986208fbc" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd69dbd76d0b3ecc3faa7c2d534d2cc9c9374caf" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1199b1214bb9b924285bf816ef5c851c38a6a878" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09967dacf73551a6abffb887b8d7b37cf201c022" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1909e44e439e56c5f807feb6edf56e2126185a33" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ececd45fc4d0434bde60688bdacabb8d6a5a51a1" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b57463c295d61705d184fa2e8a6c6a849e810741" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a16ba77ad341fd6e628e5e23acf5f438ad020fb6" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="573e257da466d86b368628511afbbba8ed47cbe4" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e4e4ed066a68fc061dae836aab37316872043a4" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b950b1ba103d2c0ad2b2819a81704d9eddecdee4" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f71baa8d7ccd410eb4195a41e5231445553d0b1" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7084adff6c4463f4f20bad24ce01e2eb8c0fdca5" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81b626aac2947f7409ae810757850fd0d131404d" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9ae81e34025da1a8b0e7deae2d3d98dd2e00782" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25db1ad4b3b56a9841af52e299db495b13215960" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7674a2558e8c5832dded586f79f0fb015b38f75d" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed087651a07530a0584a16defe83a4600a407429" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef35176265a1c7d25994ff5853e3a133d020637e" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a33992a593460b9bab396c75b1f06982f8e70c3c" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72fc885b7e7f4965b7c112c0d1e5e0eb9b9e3ac8" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0ee76a047cef5a0a9b28e9e17ad16c674c4a2be" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4658996b6fab25c38946759aca887ca7280d729a" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a5bdeea68c8883acda72e5585d6af9887790faac" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb3f4965399bb07bcc65a9848de9e51d2ceae609" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ce4b2c655661ae33defea50121fd39d17822be5" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ):&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="642a90c80eef3ad3545e44705405d83362f31234" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ):&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="712d175ad59e3bd5cf6e59ab9470d181c17d4f11" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ):&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c4aea9d997b92007005e4152b2465ea1987f61c" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ):&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="228495f35b77ca9000540db45b38541b9aee485c" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ):&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2f44f343e2997f9c73c73e23d9172c3809987ba" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ):&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ffa9221911a0acd9e6dfe13cba610e31610fe22" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ):&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0218b41fd8c1823bfb63497305432d12b9521e58" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ):&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee1557d6bfbc1a7a9a3b6864554a21308fcf7c42" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ):&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2141267ebfdc827c701e51322cebd0316d07d9a3" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ):&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66439a14195713241d3cae474bc3f35fbd32c533" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3adc4dd8a3b5235e934fa41e3a204d0d9cce98a" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f42bbf8d15d2b362b377a23403b80be94a486155" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ea01a0cf3290df5a1ac4aa3531a611e45ad7ee1" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99415fb9281bc6478557812eca064cf88426644d" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7aad3351d875059572a2c5b1d8c63c3010a29b31" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="02719971a62d07859ffef395d3c0d92401784372" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf1fd7a9cfa9054a0e998792e9c395b99ff9fc1c" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e25aebd9166ffcce164fd010a064e5a7bd8148d" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69dfa968bc69142a5d1b26ba2d385680e372d320" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fe2e47d408c04476e24127a4d13e6dd4781831bf" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51a5d8a989cd30ec61f5b058d5679e1e291432d9" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db4fc8f7bf005923b13435f7e82b5f56bdac10e9" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25727240062576fc9a03a531a1cd9dcb52f90f6e" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e48a9c603ff878790961d78840e78e6fec96d5b" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a176e30e2c347c0564e6bc31f22b212847b8d423" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="847c8654508c8e5b2ef94f461428c22e17917702" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b72db06b22721074a282b2d976c55a6bb4e1181" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="630a2cd32c67c4e678931d261bbb8b4199177ed5" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="153402bc5bcbf8344ee9bb4e1bef852a15af0aa0" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2721d9bacee775c1e2406a1550fbb87b7dafdaa5" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="efcf209b1296bf0e6470ccc6d1a38413f865ef22" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ac1058199626ae661ad523fcc3160955c0d02949" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53709f4fa12f23f3e83470f6b916901b321af9ff" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84f03a6a4048b25708ba4d0fa46f52c1bad4d128" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4916a79ad9bffb8ee116b5f8701f2f861f3d6d9f" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a167aae072ac2c00cd6ff66db60b919b0e92a999" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5dec99da5a9b824f788fe493b66c364ef12170a" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1922bc259a6ffca4177d1f8069926ebc8d8620ad" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a9d0215f258aca30c295cd83d594398895e1ad2" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea14f6adcf1cc427c7d8fa7a3f7005d7198f6e7a" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6c5d877ab547b5a1b1c8fdd75ef23ce6b2be47e" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d4faa8679f8cbfbfe89809a59f228d6bed244c2" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19957793d9f752611893f6a96e311f5166b78f43" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bfc55b532900e5cdea37a941eac876b8fadc587a" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1b553a7aa5a4df72a00dc892c177914ad0764d7" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c145ee7c1c1020760e4cef5641a1d8fba2b97f4" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a9e628c0658f6f9ef354c10e153216e752d09b3" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c04e7582351a96275c38147000036e7f8a91aa2" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a372ee385ee7a8b52d2588776174c7ac6ae99b8" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef76ea709912139f8fb09e6436948a92fd76c531" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="18384d6ad1ebaec0b1be1740913284ae85d560ee" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb1fbcfbbbccd67c3c8249950c5a12974a55addc" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af215f8b0c60a1f42022d05afc3bc63724d8174f" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76265c1c9ec029cc8742519c30646e7111e2421a" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5797fc1ff95d0d5bcc2eb6e03b95b61c8591a223" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0488309d272e92a2e42cc2d6a912ad132f1706d1" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b29d9e879c8a917854956ffbe7a759e6850e9da4" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ca7211100bdbb2fa2db30233516592d1cead62dd" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a79282dd4dfe47099a56ca80825db00220da2e56" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4408fab727c91410b3e5a04965180f4636f545b" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ba863ebe1ba301866c53b7a06ec8ea735b7acf8" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f5d3f780d4f46f97a856309e9ac988ca230f188" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e6cdb727af7fe7e9520be24657e29da477f1cf7" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e0253fab7e37b58cad3ca8c84297a71cae4f1a3" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f90fc1ac44415334c38d1cae0cd2c849f9918bfd" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4152977c5390f21383d145d4fff2c17db5fcea0" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be26c4925a653d87f5d4b2f2d7ea25d7ac82a323" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07776192054424759e8bfc8e743dbcf9c441fe90" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ab27a638ff28b091dc10ed1cc4cc57ed862c39d" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6e75cb620b9a0ee0b99382cbed4f8e1c9c34ba8" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09e4fdb94109dbfc40339eac675b3f0af0bc3347" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="380e50b7b6c736396c38f43068513fd598e46186" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8682a264438234b7b26ff6a35f25dac746b50a23" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ea606ef28778372865844bf2fb290b339456a22" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2b549de60665fcc2affe30c4e254e243c20c891" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bdfa2cf69e2c6ae49afbcd08bca13cf16a016f29" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4e59fb69b2d562d85817036a11cf313fdf972f8" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7eaf1c43172f16366e456e397042f7c4bcca7e3" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19e1e617371bfcb0216354165e5df721ab7c5762" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="874aeea23359abb5ffbeaad95559dc35fd374a5a" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a008d506be99dccff0b467f9570058e5f6e47f82" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65adce8cc153d1e7260d514f567173f877107d30" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c8bcc13df1b1a0d988e16594a2666d90b5ebc67" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a016dbc3c572fc4437b12a516d14bceedb4ab22" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9435eebe671183bd7905c8709c8360be5af59cf" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d012a4dfe19a3087d1efe66e2a22bf075a60bfb1" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc1f5e36b4af91e0c82b8ba8317123b0775d9875" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aaa3bd47e0916b4f78612ad86154c43f8d654576" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aea2057a041cf9e06d9bf062ab02faaaddcff11a" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ce23ce0beb66816e7d613b9f7d45e8358709d45" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b23bfb75e7d1873ae5c3d995e9dc34ceefaa385" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e964f4cf2d41344b6f1f3aad063c4a877deb30c" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="833ad68f8a57294bb19f11a6ed02e16de6078fcb" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e296daffd029e6ca4a75ab048751ab718442eea" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="844390bbe49ba2315c7dc8bf6b6553fc0142a2f0" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="342c5eaf8dd217c5f526700df8214f4426857b59" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d71a1f37aae29d7a1f3d15d9a812d74cba7b9cea" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4f52d58d74649b1791cfafd51467a1f6eb99273" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="55cdba1e817dc98583c54b0b4d8d2dff6aab9057" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82aaf1f7afa4a6101461e5221f3b0581b4c6ceaf" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f13c515a6ba18d87b709d69fdbcee227750ef98" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89a947c3e0ddf2805c31aba0c6a0cc39119ce559" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e94c14e13a5e76c1761811e3bb5dfa6b5065e7dd" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a806b025c444902b310a38af3c0aa3e35e66f27f" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af2ac5ff33f69702f563a89bbee1f591d6fbad7b" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3c097c8e146b87ef87ca308995583222fcc8869" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7119ef7a1c609c408d5988810c69d0c054d0b40a" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ca7589cacf7053bfa02ec6e0596e3ec954803fa" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ace01f40e02ee23aaeeb5bbe9d4647dfe57e4adc" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3ba0cc00283fb49e7866a7886b52ca0538aa083" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d8a1e3d452b7c0f459fa34bed36115601d066af8" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="286d977945f9c574fb2a2222be4c0c0d21ee3bbd" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="575c6c2b36cd0396018ee1df6ad97ae9d0c1d25a" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20bccfac88b1a35e8716519c6ddb3d4f1389a295" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="610e6753614ec935b24bb0f4fc96ec1e88d58f9b" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="918cacfec07e0f87d148d51247846b997963f465" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80d6163160764a201d637b3e3b69740d2f01297f" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="554b9aef857456a5686ca2041b479c29d2f28081" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4d632e0e56571e49c25175c4effef9476bbfd40" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2743238ade3162192f2581af1add5ebe6b08674" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f98a3fc935a75375917254725f116a4042a0f30d" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ccf563b40dd0229ce3d04a314809792b16abdebd" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d0bf77522159ce43ab7454ee4d587b81c85f346" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="565433dc369203178184a2d009e9ef116b7a1044" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0dad721c51044297b18b8d5d45adff8650a121e3" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d5968f0a1c2320c5e38eebd93f21cfa9fceb460" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6d1ffb576e53814a84b8c2e612402d110692be1" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8eeffb337af0849badc6b6964ad82f1e71f2853f" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f55fe209fbb36a0605152b63c5db6981bc3391b" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64f5893bde90e70a171861970b27ae56f37ec3dc" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20a7a59921270affe65478bec70e48a5d03152c0" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3299f9ab40453c505db896dcbbe07ced8c149b28" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36d34e279b303957fb6553dd4f91269637159516" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0118bbc7741e9888f1d1518025f20da15fc57294" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9431f529e7d81fa8b0ce3b7e0dc210f80d894470" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.util.Either.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.util.Either.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ef888537eb03437f8ca0289f92a26ef01407d1b" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.util.Either.LeftProjection.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.util.Either.LeftProjection.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="870475cc13c03cf797855ea0cb7f796e932f019c" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.util.Either.RightProjection.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.util.Either.RightProjection.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d64ee7bcf2b76a3a6851839228363e6ba72008b" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.util.Left.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.util.Left.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46348ed43fd6bf4ea0eb9216412127c452636657" translate="yes" xml:space="preserve">
          <source>def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.util.Right.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def существует ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.util.Right.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8cc3a5edfb602812a2e21c809607f8de5af8b821" translate="yes" xml:space="preserve">
          <source>def exit(): &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;</source>
          <target state="translated">def exit (): &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;ничего&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27efbae4de996e5178f26d3090d9e12a2ffa4dc4" translate="yes" xml:space="preserve">
          <source>def exit(&lt;span name=&quot;status&quot;&gt;status: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;</source>
          <target state="translated">def exit ( &lt;span name=&quot;status&quot;&gt;status: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;ничего&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da84a5c05b559f13f0dd873c5c8af5c892ac8eb6" translate="yes" xml:space="preserve">
          <source>def exp(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def exp ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;двойной&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7564baf527bba418ab1cfcfe4f1e0e13d52612b" translate="yes" xml:space="preserve">
          <source>def expm1(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def expm1 ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;двойной&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f607834d693f34a64e57ff3645c95e69733d121" translate="yes" xml:space="preserve">
          <source>def failAsValue[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;exceptions&quot;&gt;exceptions: &lt;a href=&quot;../../predef%24#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Class&lt;/a&gt;[_]*&lt;/span&gt;)(&lt;span name=&quot;value&quot;&gt;value: =&amp;gt; &lt;span name=&quot;scala.util.control.Exception.failAsValue.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.failAsValue.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def failAsValue [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;exceptions&quot;&gt;исключения: &lt;a href=&quot;../../predef%24#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Class&lt;/a&gt; [_] *&lt;/span&gt; ) ( &lt;span name=&quot;value&quot;&gt;value: =&amp;gt; &lt;span name=&quot;scala.util.control.Exception.failAsValue.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.Exception.failAsValue.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e189476108c855382ca7cfa169fee2484defb916" translate="yes" xml:space="preserve">
          <source>def failed: &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;]</source>
          <target state="translated">def не удалось: &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;будущее&lt;/a&gt; [ &lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c6053d4b6db4ab99e21b1e1654665a21aa1abd94" translate="yes" xml:space="preserve">
          <source>def failed: &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;]</source>
          <target state="translated">def не удалось: &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;попробуйте&lt;/a&gt; [ &lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="52ebaddfb48e87ac09b2a9ca06b83150e0357da5" translate="yes" xml:space="preserve">
          <source>def failing[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;exceptions&quot;&gt;exceptions: &lt;a href=&quot;../../predef%24#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Class&lt;/a&gt;[_]*&lt;/span&gt;): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.failing.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="translated">def failing [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;exceptions&quot;&gt;исключения: &lt;a href=&quot;../../predef%24#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Class&lt;/a&gt; [_] *&lt;/span&gt; ): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt; [ &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.Exception.failing.T&quot;&gt;T&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="8d3c29a44ab14c8cf30b86bef47465f08dd6cd84" translate="yes" xml:space="preserve">
          <source>def failure(&lt;span name=&quot;cause&quot;&gt;cause: &lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;promise&quot; id=&quot;scala.concurrent.Promise&quot; name=&quot;scala.concurrent.Promise&quot;&gt;Promise&lt;/a&gt;.this.type</source>
          <target state="translated">отказ def ( &lt;span name=&quot;cause&quot;&gt;причина: &lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;promise&quot; id=&quot;scala.concurrent.Promise&quot; name=&quot;scala.concurrent.Promise&quot;&gt;Promise&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="f2182fac79056e1697a4bce2bbac459c87e30966" translate="yes" xml:space="preserve">
          <source>def fallbackTo[&lt;span name=&quot;U&quot;&gt;U &amp;gt;: &lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.fallbackTo.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.fallbackTo.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="translated">def fallbackTo [ &lt;span name=&quot;U&quot;&gt;U&amp;gt;: &lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.fallbackTo.U&quot;&gt;U&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.fallbackTo.U&quot;&gt;U&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4088e06e14842d5acfcdf3167b62234d0e934d0b" translate="yes" xml:space="preserve">
          <source>def fileEncodingCodec: &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;</source>
          <target state="translated">def fileEncodingCodec: &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Кодек&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5726828e15cbdf959d5a1316cbb28efd8806eb01" translate="yes" xml:space="preserve">
          <source>def fill(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</source>
          <target state="translated">def fill ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c509fcb3a98cf316408650721ba3587cb827b4f0" translate="yes" xml:space="preserve">
          <source>def fill(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">def fill ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5edbf837bdaeffa706b399f349c96524ba72815a" translate="yes" xml:space="preserve">
          <source>def fill(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">def fill ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57db4e31429efee6d1544ef6773ec93068453283" translate="yes" xml:space="preserve">
          <source>def fill(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</source>
          <target state="translated">def fill ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a499a17fee469e257b71750be4b4bb0dc0cf2d6" translate="yes" xml:space="preserve">
          <source>def fill(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">def fill ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="568bf45c09a7408b866b43d24f81ac2ef7349d07" translate="yes" xml:space="preserve">
          <source>def fill(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</source>
          <target state="translated">def fill ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44eae3132ed05416249b9ac33313bf62ac7cea6e" translate="yes" xml:space="preserve">
          <source>def fill(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</source>
          <target state="translated">def fill ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eec073dbcb984151ab09e07cb38ccbc1f0b881fe" translate="yes" xml:space="preserve">
          <source>def fill(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.SpecificIterableFactory.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SpecificIterableFactory.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def fill ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.SpecificIterableFactory.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SpecificIterableFactory.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9eac3fa2d1304ac42c2c994e9e3bc7dc5085f5b9" translate="yes" xml:space="preserve">
          <source>def fill(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</source>
          <target state="translated">def fill ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae31a9acbde6b5ed129a25fcbd1cf7d784096c2b" translate="yes" xml:space="preserve">
          <source>def fillInStackTrace(): &lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;</source>
          <target state="translated">def fillInStackTrace (): &lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;бросаемый&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e05ad1615d7c192f8ee64d30ed738dcba838a0dc" translate="yes" xml:space="preserve">
          <source>def fillInStackTrace(): &lt;span name=&quot;java.lang.Throwable&quot;&gt;java.lang.Throwable&lt;/span&gt;</source>
          <target state="translated">def fillInStackTrace (): &lt;span name=&quot;java.lang.Throwable&quot;&gt;java.lang.Throwable&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2b71f1327a7a2e62462f0d128d5d5d8b1082d342" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;canAccumulate&quot;&gt;canAccumulate: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявное &lt;span name=&quot;canAccumulate&quot;&gt;canAccumulate: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="73ee603305e98b48ea3810b0cca8d58f885ddcdc" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;canAccumulate&quot;&gt;canAccumulate: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявное &lt;span name=&quot;canAccumulate&quot;&gt;canAccumulate: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a9487eb0e0289be55cfbb3cadc041911eaf1653d" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;canAccumulate&quot;&gt;canAccumulate: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;canAccumulate&quot;&gt;canAccumulate: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="3e1143583b47ab1e1ebd83e5c565097175aa610c" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;canAccumulate&quot;&gt;canAccumulate: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявно &lt;span name=&quot;canAccumulate&quot;&gt;canAccumulate: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="03ad5cdf342ee64c663b46d880baee77356b700e" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;canAccumulate&quot;&gt;canAccumulate: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявно &lt;span name=&quot;canAccumulate&quot;&gt;canAccumulate: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.fill.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.fill.C&quot;&gt;C&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="d972c12751fd71d32c04608a5888be9ef22ad2bc" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bd383c27e93d1c8d0187464585bcb21906436092" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2dff69140931ce31ab571fbff066d249a1d5d1d1" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8a4d19df03f8023f333ec3eed13a367284e0f4c2" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6a584f75923c0780a3dd82f9a9580fc8198db2f5" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f028692ffe8f08749b1201ff7ef8e4831decac75" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="09891859422f7caa621f354f118b9ad7269e9d17" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;буфер&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d59221d8ccc5e5dd812f574ab1caa5ab528804f4" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="34cf154624687b25eaef8edfbf08a08622fee2f8" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1fe57e72b4aef47cc1010955f8a912b7ae2cd349" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7479f6d7521688d701800bd8cfab08311be49e92" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a6898dd6bf24d53854dc244f99c8974ffdc4ac1a" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e9f610ffe946878cfef38e5e76a08206ea06253f" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b7b5934541841e71c651b67ffeb5b4126cdffa66" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eb570aacd6f13e6a511e98e8d64c86a253b42b7a" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1509182e136e989e7721a1e660c9bb437bccb8aa" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="88fef86b6157cde25b8d07661c35b6e608c106a1" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aadec00afdbf24a7440e221f93dfdb723cad43a6" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="172d09a22461df9103306d08f8deae98c033b816" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="78acbba0aeb8d0cca3a76900e9182db7accc0937" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9de0afefaa181d43c6a551c9e334b83c0cc406d4" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1b6c0707c7aab36a4f6a98d1473d3ca470897048" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2018eceba929fcf2f9dace857b9c4ae7debe177a" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0df4a80c9f18c3b65508c7bce34df4fddf8ce23f" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2475381a306af33c34ac3974cc5dc76cfbe8e841" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7e8f3a233b885928eb7603173173d7449816cf98" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f93fab2b1cd8c9a36a56c9b92af92e964748d86a" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="739aac946a624611b619e1ec2eaeb9c59e0f8b7f" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="79ff1ec867f29e34f87cb2cbf20b8ccd7915ceb6" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d3e8ac494c86f15b0bc58119ab4edcf8291ee594" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ed6c844ca2e55937cfff4991dc362c594d56d4f7" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Стек&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e599981ccda0a5f649fe0dedb7f7743597c6f97b" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4de3a75a051f87f2ce5c93c92030b0311604920b" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.immutable.ArraySeq.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.immutable.ArraySeq.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a52e1f0eeeb127575fc49ebc2ed25a7df786d1f7" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LazyList.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LazyList.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0032fd4a766b766ac004dc5932bb98a9615495c2" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="402275284651467d10af26d9cbf240bb529af021" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ea39505767bf1998a65a7d9d556b26eaf0c2e757" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5e5d98e963f61c33aeede97572ba9c63bc56e108" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8c6e6ee8e8da6f4588bf8a7bb0460051841d94a8" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0b1d5b0bf24b343d59544c541da9b1e0d36d8b40" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="06ff1d07e22172e2c2ce53e9e3215c4b03f507cb" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="226caa91d1ab6a3ac9789382cedebcf722ace7fa" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="873993b33287fc8b9350deba79d22953bf03b453" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cb04a125b994d2be479b3875aad11da990bedd8d" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.Ev&quot;&gt;Ev&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.Ev&quot;&gt;Ev&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="584d79108fbc22a6c7734262f8c84df99d2515ff" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Ev&quot;&gt;Ev&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Ev&quot;&gt;Ev&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.EvidenceIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7d5d65ab20af477369ad43f238a7661bfc080f38" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="158075f8d2e9e68e865d5a2bac8a49d1da21ff7b" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d31bf24c6e312aa80cc8968c809b7dfdedc941e7" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d9432595af4311cc46f376b74e30dc39f652fbe1" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e7fd6ed9170d6971f959a019c33e44e9efedc8c5" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="26361b0b37454035b6305d91e5ad28edcb47f8b3" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fce7699f2fa3c482335d705068d1adc7e08cb90e" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bf7705d9311616cea7ce16bad32b0247eb6f1ee8" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d8c9f3d004decaa9fad84f776b15a01c340a7ecf" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="21ec643c5dc66f026887b45b9bdad773c8b67b95" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d0d6670fffc5d4df0ea102a36a00918ebefb6251" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3443d94b319e5099e1afaf26b8a720d59cad1faa" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1e2618295e898f4009addfef2d52e48550022759" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a8fee52b4470c4d5f95a8cbb3d13dcb4ee6d33ac" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="bd608234b8644d9c9b94ce1facff5df0166c4fbe" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="d9f17088fd85ca418642ded61a75a610cc3def22" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="816d5b08adda3518d9e4384d36f0c95e1429eff8" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0ce8c785c3f7f78c05b90be0317b9cee45aa1a09" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="343e11fd1c3bb28fa144263bd2d84bfb5893cf56" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ec325fa39144f17a2c36f987fac3bf9a2e2f7381" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="3497bb672258f25f54a8a138342d73aa609e5dba" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="33f8ee80a8459050898619c59bef1e1b92d2ca00" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="6a1997c5d430ee8fd52d6cb4ebf0d6b1eed39e6f" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="8f81d3c0b437fa3e239b3447fa25d75b404159b5" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0c2cdf885a3472ceaa4eb1c800434f848786da62" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="22b3cf48a684ff3e1b9b8b86e3b691c8859805c2" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="76900e7d9d8d1c3b4d592100ec8ce5d4113d4d37" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e12ec8ab8d5bc77509cbf93a1c809adf6279c5cd" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="a05a7b9b9328dbb9582ae1129f1bee51381fddb5" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="396840be6461b4bb72b52e41a1891db86600815b" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="01959a50250fa6441312e763716ac445a0aa7d05" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ab5bc92964695902dbf24cb8b799d4802d684e07" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f9026886752ff526337747773cc55ae1805baa92" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="57e177a462898314c2b13b84f91969317a94bce6" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="61f08e46b4df5eba3ef69ba7c496c6cc5c847231" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="570123c93701e9062a1838e7b017c6d7fbb807f6" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2b10567a88a268e804a7ba562975ef2b70b2c95d" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f694ecacc083d78d20b12fe0ede769198831731f" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="de0384e59369682f8c5c8a7cab8b10367ebf5f4a" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Стек&lt;/a&gt; [ &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Стек&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="c2351f7f8bee10a8d39181d21b68217003938ef8" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ba461717109f83a1fd9651635270fd2abad697a0" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="0cc213611b09fcc02591eb4b606547f2767f4b6c" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="fceaae694554a8f2d2168e476cf664e57219d1cc" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="a3061556dd7b9ecb55386d3c3966ff6e2ae61f9a" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="4400ca7d96198f47dbf70f9805dc125e8f620216" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="0d5d1401313d0eb1e396ba75acc2767e6411a92d" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="6cda7d0e41ff4b524e8b9a4cabfe7045bc94fd14" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="8b673c522d72a7b3dc422bfe788318a5050d8d5b" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="9402c8a0b2895a5a53d2538b89a4cc90df433804" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="46a893fb336b7a86982bc05e84b008cd1fc945f0" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="96b03ae3c9095f60f23cec958a80a1e06b2ef482" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="572a58d1ef8052ff36ee88a80a13fc9e8418d7c8" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="60aa781ca340b6934eba2bd74c5a748a127721ce" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="89bc5b236e1cd58c440c381d100b5d9076baf37d" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="659c26e3503f388a7e6e30b8318e619373ad07cc" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="a92cfde31814fccadc6ee33df63f65a05e96e734" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="83a89a4edaa95133d9f478f66e9606f26acf28a8" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="00f5a3499f637dad81cdd20e5e55fd86a640a949" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="e8465acffbe05f1cf845b3a3c805abdcca29a9e7" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="8edac6e5f2ed97fc5ac77827deb39b28a880250b" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="81d3f85058a6cf0673c09833b88c7d683edfe6f7" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="3ed82eaba311d52c64ddb601ad627023ae8b1cc8" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="614d63778926049aafbd8f0ae22e7a57c067f7ff" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="831b69b5bc15b84c2ddbf9442fd5c8721ad77834" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="a92fd42a5ed3a3b6db1f076c27b3697faee355d1" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="3cbd4c7d450a972fc64c03aa43e70942e5d4cf7d" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="744db4d065a2cc6a5c23bead327358df2e0a8622" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; [ &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; [ &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="05a1c80bce6c4a1202b78d34da61640e5d29cc74" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="a3fd4c00970da4f25b8e8ba9f681ec3ffe664754" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="e3fffc098eabc204ddd8c4c04a8923258a879b59" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]] ]]</target>
        </trans-unit>
        <trans-unit id="53c2d4b55567a254681cba28a9f36cdce42aa4ba" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]] ]]</target>
        </trans-unit>
        <trans-unit id="9d480d78613c6a92e051cf76ded2f8666e1729eb" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]] ]]</target>
        </trans-unit>
        <trans-unit id="34f7b75de68366a32993b2b20a14165bf0ae0fc8" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="54ca632b2984e3ec0da8c1d34085cc29bfc95313" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="05044ce50d8b3681f576ca16d9f905e681acdf05" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="5bc95b137083ea62d51106c0de9ad5998d2c76ab" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="6f70f7ff75a7431cf149f86dac85af4dec05fd39" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="59d19bfde9a5482c663efe602b8591a1338ccf04" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="aef2d26b0b7dfdf4be43c6b71484e515b094a953" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="1692b6873823814019d9975f66d44579062fcb8c" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="39579813f91b7d09b4031e926201c525a09196a2" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="004ad3dd842d9fc3f3961bdc5bc2097b19a3d982" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="a7dd30506757bc3e871ced14061dc3596a9be24b" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="a7448f5901aaccb28230fe435faa277445a4c1d3" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="c857965093cbf6703772d0960c4dcc1d89711b0c" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="23c6b3c17d191b8024108f496e7122147fc0bcd8" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Список&lt;/a&gt; [ &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Список&lt;/a&gt; [ &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Список&lt;/a&gt; [ &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Список&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="9ec4ae8eca4f5454aad9970250ec957604574108" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="571cc2bd570b2d59114e14d7a00cbd566014284b" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="33c0739d62772e7271e5c684da534582cd1c3cc9" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="19fca625f0f2b9e745c85c972835066cabd81a89" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="e08b3dbb01a6134fcf7163c2624db5f540b727d6" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="283cf877d4af4b10a65f41448b5be130615ffb93" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="0b51967e9ab2b82a1c781ad6cf5ab515907cd570" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ Set [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="382ccbf2a44c74d7245da4c1a8dbcf6c908c9c96" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ Set [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="1510a6d7eac898b18c2dc65587ec83f25865227d" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; [ &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; [ &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; [ &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="ed1ca29c01f7791ddd9763d30269c9a3e35047fa" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="7688f071d76bea84c056184dc327a857ea92a2c4" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ Vector [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="994e62448098e9c86b1f6906d4a82bbc48ea2e29" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="0148e555732083a1ea2022e32c84585c52d96db5" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="87192f1afc449841f35056fb348a6cd6df5dad29" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="c0e61bee60bfa94c4ea9fe096c4013bb8d274789" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="76082a4f5088edd8c02c16cb1ccb2ceda7127e9c" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="8fc802d0667b60fdc4fbb73ebd9c690e70251d90" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="d561fe7f4170a662866871bf5418ac3bf509da02" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="53a7b5b2d3106c73c6b03668dff9932ce3f3a3de" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="9ea44763c397c381d378e14a97983f6e29518fda" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="88cb2a582c563f4c032527398869e18f69565003" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="04d48f32f1d948e9204667c3421cbbabdb9fb35e" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="ab6f30de6a0d647cc276cd3b2ff67f87f6df5b5a" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="58be6b11e231a51f7e7b089eeaf1d571281ce941" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="d3f68f1da5f58e54dcf58e94a68b059a076f9c44" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="384c97ac57faeeeafe62b3506102f7ae73111dbb" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="e64eefe355a36d037f1550b178248b0eda6f02d1" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="1ded1b98d800ab56e602f4be3ac3fed1bb69fd12" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="627314a5a4016809f036d4b888721abc54ddebdf" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="2277f7840f786d8dfe8e4b43109daf00f6a8e096" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="8a8581c61688e9e0f8eae277b398635556764afd" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="0384fa7939caffa4c6aef8d42f7895d04d5082a2" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="dace159e66226f9755e7b1694784028439566793" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="aeb5c9ea86cf5e7143adab4c005782a5f8ae5490" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="4e5e9fb74ee8cb36393c0764c5d2e50f5634ee7a" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="48cbc22fb5d62e08c6b5c9e8c2f96ad99084d38c" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="d8813cc9f04697705a756756cd83c785bfa98622" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">Защита заполнить [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;п2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;эль: =&amp;gt;&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; [ &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Стек&lt;/a&gt; [ &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; [ &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Стек&lt;/a&gt; [ &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; [ ]]]]]&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2ba4a34699f518c09c1496f6d59beb0e5243be0c" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="acb08a8c723febb608d3e495c82b4ad81575ba62" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ Vector [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="964772db1d8fc1731a7d57d791ff73b556a25fa8" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="220f7bb651788ec76dddf17b88769422fa81c96a" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="6a75118a0a349bd8df4690e61faaffe1051450d5" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="b86b05536312209e9f93a91d88ccbf5229e16cf9" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="8ef850e0c4816048eff10204e60976d33e503997" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="781d972d7ef41b61f9855993c112d41c90b2d62f" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1274bff481f24df643ddc85d8332cabf77f55392" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="29b14c32a6fb3388ef415ea73d17627c1ac8cd97" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="08f2ea05f294d34f3e9aaebe4971f8ec6187f7f4" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="52cd7f7bb7708d883ca6b32f1bda56bcfe2f1bc2" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="22035a20bceb28e80a91ab5877dde3041cfe8c97" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="4ec0c4cfe5710b3086834f32ea08290e6cac0cf3" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="ad5032dd1518dc416db081222c15dc4eb8d7afc5" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1aa24d59b40b69c2add09db595ca30a1a4fe13cb" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="6befa9a5e2207252627df1a4d8a9bddebde602c1" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="f958546863887d373bfa20b7b6f653802a3a22c4" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="97ba20dc7b82d00f6d9a1de4c9a716614a939db0" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="172b926c4ae675d56ad388329410e58b0c975744" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1d78ac65ba4c8f8dc1d20a956b060c0394f11bb9" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="23056d41468858c27d7ed1d554ec794ab06fad05" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="d8f6b936ee58e18d642f7234b74405b43c6bcdd0" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="e1d5f4c165780976629dcea9c60ff21ad342d2a8" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="f7b09d575a9a2f15a86619777d622f8d49bd8d01" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="416bed6773e1ff12c96b0c9eb1081d94e9fe0a17" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="2f43ef6a830215ea6c66405695695fb101f450b1" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="8192aca972614d256df1f71f6df713704498103a" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="dcaac14c41a7d890088099781f4c575d3d7d3ddb" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="1d66a24208f4cb3df4e0363fae4b6d53319c8ab3" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="092cf9c05446180dcf4f766751cc939e85b7ec3e" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="e8607fb1a5d5a2c767f9ae7493f675d9ffc2724a" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="545b3704acdbc514f44f6b367f43a13e3ca09335" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="3b326d2d011b2431c786d1d26463c4839668c7cf" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="01b51b5cd27dc7493d1107c973e94cb8cf882d7a" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="4d067aff837d80640f6056de524fe3e304b22b5c" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="c1d12684ec38cc024788870614ce38ef242c407a" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="d71517167b5a987f744d39c67aa76717c1f2f3b4" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="49dd3bfb2a2f6d86cf1d6090d97f3cb0474b3cf2" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="9a8ff0f65a94f8cbec28ed34b8540b2ce0fbc0ad" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="10f171377f7140f5361de79e213e66019a19f80b" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="e42e363ccd293493fad85a2743f49eb33e1ad172" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="ea3ef9f6e47aa71033b6562f39d965920758acbc" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]] ]]</target>
        </trans-unit>
        <trans-unit id="15bc3a37cd1632ffc8f27316ad4f02bbfed83f84" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]] ]]</target>
        </trans-unit>
        <trans-unit id="f030d20d7256fbd2566543361021d39ee86fa639" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]] ]]</target>
        </trans-unit>
        <trans-unit id="eed44dd33ab827694a9ce5e2a1a07c72fefd4736" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]] ]]</target>
        </trans-unit>
        <trans-unit id="fcf887b74ceebf92695a00032f3f0b5a02401ba8" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]] ]]</target>
        </trans-unit>
        <trans-unit id="8e8747fe08d1fb44f5bfa208ec3dd7cba99a8978" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="8542eb5a0adce4c448c50d8b0c5f44fd288c1f54" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="49dc2920fa6d6976bbc4ec1842aab960f43a91c5" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="ab86e690e601c09ce1be6194ab391610c5c6e83b" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="d8490cc44f6f2916e4e9f91158ffa14e830fa3e0" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="baa27103cc8c607bd2b5cc2ef7747085a647cc33" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="ccbcacab318c2d88e9ddc71280b42d64e21f48f3" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ Set [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="7af08e6c2bab9bb443d1eb48056372a890c4b3c9" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="a79eeff3128568d9eeb12ed3df85764602b002cc" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="daaa0ff26cd7cbab2b8ee1b7c350ecd47c0fc8d1" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="d165dbefa045cb3ca09e7658462a0b168d875782" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="14bc2d326f8af7d27ac15b38b6edc2006acb2b05" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="f7381a6b3a6f0afa28dd43308c38517da957cc46" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="cd8e9923291dc0a89c9c5401f4b74f8470bc5f13" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="7eeeb11e0b14b06902fa8074e9944fb550ab9963" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]</target>
        </trans-unit>
        <trans-unit id="b815cfd5e7da2545922d84956ce473bac6b0bd6c" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="721335410e8ceeb1720bed0cb59b905dc525e24a" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="c4378eff16d272f38432440396356d586152a221" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="1a7037cb59f7f6ff9243f762ca57f1af5c96fbce" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="bcec3fc7698d28513a9edb80c388fc2dc92d5959" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="c14023d761f28378d40c58a97b84502acce408b9" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="ff446e10b6da012383f25a0b560c75f4f2290a57" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="89b0da1fba94bc05257e71bd4f7ccd5361b9489e" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="049dba8bf33f9d56a6b7c47df0ed5b2aeab93935" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="e0b20f3f872318d886b26cfab2a118eaba98c09c" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="84c560594bac462ba9cc4d48283aefc9cb05c999" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="29b7eb55c7b343db4ee6696d584078f21f1affe2" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="e79768e39a30efbb50b9c099d103e3a2a8a1f1d2" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="3cfa03610d3a16eda3135b7af92c10d3317c0056" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="795f71eb9d8119984a96f123debfd03b50cead51" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="8fa7979339bbd705a5f08fa306c81fba6211ad84" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="3e5b3936abd66af66fbca4bceceaf6ddf961cff6" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="054a784069629d28b43caaff19a31bf2f2ad864b" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="57b18beeb6dc033747310471a5d70da3f042c5fd" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="6a5c24e64cabb43145458a1b80731e1fcddf1fba" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.fill.A&quot;&gt;A&lt;/span&gt; ]]]]]]</target>
        </trans-unit>
        <trans-unit id="f2f5e2d6d0a8368cbac4c8f65ed760419862a2e1" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def fill [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6150494d18fb4114e6b42a516724a7bbbd020bb3" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e278aeefe6959af1d384cd17071618a9e01d05aa" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt; ]]]</target>
        </trans-unit>
        <trans-unit id="a5bef29c28003052acc0e2415f95f0b4d7f4cf16" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt; ]]] ]]</target>
        </trans-unit>
        <trans-unit id="df4db40ccd7d6839d46c8f1545d7a08e5c57ff70" translate="yes" xml:space="preserve">
          <source>def fill[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;]]]]]</source>
          <target state="translated">def fill [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Массив&lt;/a&gt; [ &lt;span name=&quot;scala.Array.fill.T&quot;&gt;T&lt;/span&gt; ]]]]]</target>
        </trans-unit>
        <trans-unit id="9df410c8da4a0b4a691864d5accc26a95c4744ec" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="14944179f78ace9624fe8767ed4542a5b97b32e1" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="afff53b063783bf027befbd78ed9027f72dac36d" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;f&quot;&gt;f: (( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5b14fa39914d9d2a4e29c87cbf1a70159ef97bce" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d0638311747c0497c3699671a553f35fa99e5038" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="29c7395616a62b623581f90bf2eda869b0fa6205" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="7cfddbf86e5edda18717bb70b78d2db5b0179d0c" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="be72e17f267d1ee0586eaa7422c238d681c7957d" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="60821d3cc5a85def4ff1f7ebc56603f8310e7444" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def filter ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="c6f32823485ca456261d418b78ecfb3a2ad94a1a" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="13596cbdbbe048f38c44f7633885983083cd9adb" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3558ea6c150f8366d1a109feb0ea2c3e7e889b4e" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;массив&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d41d1751b9c64132fe75d58074a17e6eb824ddc6" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fedd68484690e6afc58dd5d6ce6a75e5052e9f92" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="277384e16c63be871ac26ca969b9224a8b9ddd27" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Список&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9751b97d8086a56675c87056be89e7e31525e95e" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Список&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8247129da0169db3e0757e817fc0cff8707f61f2" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e062dff876f1788b9384b8adf487abb3e313b26b" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;executor&quot;&gt;исполнитель: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1cf6722b50b5d24fec8e435731d2744b71333ec6" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.util.Failure.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Failure.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.util.Failure.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;попробуйте&lt;/a&gt; [ &lt;span name=&quot;scala.util.Failure.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a3b48d77af70527d1e5c7644b79581d86f45ffc3" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.util.Success.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Success.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.util.Success.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;попробуйте&lt;/a&gt; [ &lt;span name=&quot;scala.util.Success.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f8f5804ecea76f3cb3d54a3c49d5e96d7b460137" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e697d79bdda86daa45cf219e12ca3645af79b8d9" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="919ae3f93cb9003fcaa3f4d6efca070281aff87f" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Карта&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bcd85a5d47ce20212ee436fafb4ea94457baf825" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9e138273e19adfcc39ce5b1067a2c4f7034b1972" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Карта&lt;/a&gt; [ &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="52efe4fb165c9f38bf9c655976a3d64b66118a58" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="42daeb7ddea8bd52671bd3857fc287ef48cf7126" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="32d52feaf5448bf14c3dfc0c72e9d461bea984e0" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="aadea6c8a83d1066cd2d9c54b4d3c1b608e1762b" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Карта&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4601a15e9c717fbe0bf4ce3f054eff6581858980" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, V @scala.annotation.unchecked.uncheckedVariance]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , V @ scala.annotation.unchecked.uncheckedVariance]</target>
        </trans-unit>
        <trans-unit id="e5765656d4581eec037616975ddef1808304f1b1" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="413bcc5db763f860d2dea6699c38514cbdcf1584" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e54c008217f7fe22e19f1b2266c14d7c12d76ac8" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="af9ff0c40e54ae16d5a3feb02f5108cc6b6217a6" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2d70bf5d9ad3f69ca99c6d5cc031c5676d13dca9" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b89ec6d2304dd70c628f8170d42dfbb5822c2901" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="adeecd5e0dae6e57b318038776e8037004e3ab1f" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e48884eb087580624d6241b555154ab50c825824" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="af814750c04af7726f035a474cd6e41c0c3ac075" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6d6199e49d96cf6c36f1b72e4b18ab1fe1aee459" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, V @scala.annotation.unchecked.uncheckedVariance]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , V @ scala.annotation.unchecked.uncheckedVariance]</target>
        </trans-unit>
        <trans-unit id="84d05c880548816d21acff6da8caecb12d2d4c50" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4e05b57f43161be70a7f94e2285adc0fcf575643" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9d9b5a5893442cc6028b12ee2d8d7c73585d4eb7" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7597bee787e930f0042a3e106fdec1e8b2b45e45" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="612cf433bbf83f8ad066576f931cf362a193c432" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="d74ec9225b18346a70d74d785d547bcbc2499709" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )]</target>
        </trans-unit>
        <trans-unit id="e8becaad628f249f29719dbe95f38a7642be8894" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d58dbaa00210020899c6dd0bb13ef27e72ad5949" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="985d283d28d5824f1e019c0f9b15dafa738c19b1" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Карта&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="23a3685a4d79abfa35895daf1765924f6c0b65b3" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="088b9a9f34b21ed14e1c89636e4eed515e221740" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="816020f68b0499c52ffda0f4d8c4866986c8af3c" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Карта&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f6193b7a2520990007305936feeb54a78e6dd563" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Карта&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ba6e1458fdaa0929ee3b1b300ae238dc4c57afa4" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Карта&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="852cb0862e2e554937d47f14d4c3d5f90f771273" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Карта&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fb50c6b812cfaf0cfa6fb92599ad076292d39699" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Карта&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="43f872fc81d3106c02de37925cf4d8928e1268c3" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3c9a94d32a8a98e1ebcd5309524988c4f7264fcf" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="323bb4feae6f6661207dc40adc5a7268cfc243d3" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2ed5ba01281e4ccb6b88fe96723f391085f81385" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4129dc39f2d075072e43bb9a7a738b1815ec1139" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7d064a2681b146cb025d9e964d6bfd2ff771fd14" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b3a1a45166b270ff6d20cd9cd249d1bb285fcdd6" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9023d95e1db128f30d4d5db12b618a1a623371c0" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c5d5267399f988950ae02213b020751b905220c1" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7593020d31486edabd2c58f1ee1ea98765bbb6d1" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8ba8e9e67f72d288f1b3448652102486fc989ffb" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Карта&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5445ef4bab2ae6407d4b92e93b94e696054fe65b" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fba88979c9b33ed018308dbb9922ad6881288ee4" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d59be6b789c4ac4fdb69b4d527146163f734ae8f" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3555ddd7d232a8901ed45d5b17cfd3ab33fa93c7" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c9cf4e9917afb26d16be0243a45fdd5c9f4cad19" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="07dbebdecd536a18a6bbd90b26dea3f8a1a69d9f" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Карта&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="530d7577131dab2ebace4758dec8daf8334d66d8" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="61267b3d810e62222c2b95fa1c5dac06125b1ae8" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7322cc3164b50dda3e15156402da2fceab4b2fee" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ])) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;карта&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="99003246432d6e769f6ad194083c1bbf1f1f0626" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fd8942efe44e709688b48a6036fdbc9b10054477" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5afe3e617761b1a1df5d2bdde19c75de69b42391" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ac13027e385d8f3a458080af6322e658c3145bd3" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="99b68765c45420acd7e830605e327e0def8bb00f" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1dcc554048236bdd7492fb37bbde502048d0ddb9" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="111cbb1743f6ca8c19c4c7e508a2dce0b17ac176" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: (( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6e63e16001c97e79c833df40320404b3a57bd2c8" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="82f6a8288797e3a8579ef52df55583ddd4efaf1d" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="40829b1c5494eb2badf9b20977c43357ccb6c891" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="3e9738241e43764c20f8cef19239c8b3cddfeebe" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="a9cd5e3bad55d82ecf889284150e9bb008f59567" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="117584d3359b078d3cc5a633d028912391f0ff65" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="d0a492d694cf094f30f4a075ee4f67544461c140" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def фильтр ( &lt;span name=&quot;pred&quot;&gt;пред: ( &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0191d3f40d7acb170051fa849c5598f7db319f30" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9aafe35b967381e3936380d1a573a986617860e2" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f069e407bb84abe899c89b0ead7bffec3bb5ee86" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="8626de9a9257ac5e1043c819fcdea846a34f03c4" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="cc0e96e4f4cc2068393cb04be0184ef5cddaaa80" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="80478d52e60e4b25b3d5470b321c009bdd7a2d4e" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="b5517ca422ef7199d92b0e1d843fa6c2a6ebe561" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c3480b942086dfa29e1f20cacced0622d81da79c" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">фильтр def ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="962beb7dae18467e411db876393d22b4bda4dae1" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">фильтр def ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="977377ffd9f8c6fa4048b4aaa07b6c6f59d3ca41" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="7b11657963af33c5c073b79b247c78c2c693247b" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="2a79899265f27b16520bcb49226e71e782e4477f" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="7d30f4045b493b2753a2b3ccc77bffb1928f234d" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="cb9ad4083aca0e3bb075e792ad7518e35457db48" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c6cb058541251f1ceae857097df097fed38f1db5" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="3da1e6eb92e123c5ceb5fe4927244f2edd83bd17" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="6d93c872ef5872dab2353467a5940bc8623cd52f" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="789c75ff93f21695ceeccc286b81a0c5a1f81eaf" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d06f4fc368189a5b73f36c70b9cfabac6b16eef0" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f2a880967f1b0afe696040f0d29f5a8cc287bfd7" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f0f3c76ad155cea3393fff6bb3cb98d65e862d2" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">фильтр def ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7db52849c8b9734a37b547db297700a6cc29d73b" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1eebaa0fe99b7aa86d95c306762a7e274c04a9a4" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="addf6b7bbb029f63e2b83eedfdbf807fc69dedac" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da75d54a9952cd0420502589cbb67e60f9394e22" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;ничего&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="64b584568799e12e25d3b083554a7fd67552ff75" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="485adc67c503fc130f456ecd305cf91b48dd9863" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0907a830b818e77390f11f1ecd19acb0332d5e28" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6e921438ce68f5e80a12918feea2ff98a2e1275e" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="38a7d6855988edddcfe27be4d1013ec66323b3b2" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c97fa64999802fb1f8882fe4992f5da01126790d" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c8f91b72d6e70388f64771dd5ca21587d8d51365" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="870bb414ab07d89b3b5c06e673ddf2082d0f6717" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cd1d613a14253aa9ca389ad74f1f4590a4f9de8c" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="828f6ec1f1b4f81ca767f135dcb78d4117273c6e" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c668d12ef66420bc3331d4ff1d9f46f333f31c84" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance]</target>
        </trans-unit>
        <trans-unit id="388948f5d67b0538be31e875fb87bcb6d98a4262" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9569ab17573eadc56ecbf788ac6d6ba65df3663a" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="57ea2cb464d8d2a15150bf13197b6f92ce4e3ed8" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8fd27f55157d9b4415f6438c565bceb7294f4aea" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="17724e13f81182a843cafbd39d9cbad5384e655b" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e17df5070206b51f507a77b98dc165474f73a95c" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c133bbb5179da0c05776dc66ad72ac06dc1f2ad3" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c00dc5dd39743221245c78f9f83935e130b430dd" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6990400c00d8c30effb19e7b391a2241e5ec4635" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f384ee81d34c65a83237eb31f055d8643b441529" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bad00effa717920b367afd6bbeeb9ce6efb69e83" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a571970ba06a904539d96dbd23742c0bd440c8ad" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f683255a14265532d158f0b3311fdb631b183cda" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="06fe8de6561ea7386fc6140028726869b6499a39" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7fdeb57da4aa7f517ba083780bdd8422e9752a81" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="585dc29287e0e0cf21be3a89a74e202100bd085b" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance]</target>
        </trans-unit>
        <trans-unit id="5df8afdc6fbee46902834570e2d1f458d9eb3ea4" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="114969a85ce95d51eb4ffa3b0ee043f2ae118def" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d7d9c8d96fc45e21a01fdda5da9b813fc0fecf45" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="910d6140c332a06e47b84dc98bec039e0c972a26" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="074b6bcda9d877b0ebd4a7e05f4617543e8d248d" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4188218b19aa30adc90038e2b518ae84dcf8affb" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7ebbc0197b12fc2f64110d78427fd1f50e5420c0" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="83cf49a45b167b58c4e3ca6efc1427187a0d15c2" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1d37d3a9e81b0607c9d9ad20f75609bbc5a982c8" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d1b921caa7ae91987c415088554b4bf77bc2e29e" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="22a5d4366f7e5ca65bdeb36ec90d8001cb868de1" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="97945a05bf0cae924da23b70351dc49635e02137" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="393e8553649ba1cc6883a4490dd7c1b81bd5aa75" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4cf336b742a7dacce74c74db25e6d1857dcf95ce" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="78eaa11da17eec7b14b687ad75b59e70d47ab1c9" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5116a40b00e6700201441f3d4332034a832aafd3" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cb33619f136ac1c81421326834ca63d872de890b" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a984a0ba4cffd6ede49ba065ffea52b094db3b3d" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4907029448146f42b810a9cd103ea09d3d16e6e4" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e04c8023e207d4210387b4ab5f2c04bd67fc8d96" translate="yes" xml:space="preserve">
          <source>def filter(&lt;span name=&quot;pred&quot;&gt;pred: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def filter ( &lt;span name=&quot;pred&quot;&gt;pred: ( &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
