<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="a81c2f45906678c21a0b17a9576b58893a9ac349" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8010548b6de75b9fbac1e5dac7adca440e89ca5d" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="840890399896a9fd71ed6bc30caf0318230459de" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="001f9cd0ea53bca8aa3da4f5ae4774be02d82c7c" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59a643e94dd83b3f124853c653a1c1e13c000992" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1aeb8128bd58feca689f28035569ec0b1fa65f46" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7db305a851038a8ab598bc01bf710b3563fb92d" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45e61bbed0c9cf9465bf19c4e33165ff5fb0248e" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3aee4149768d1e412d59198e4c2a2340ced7b1f1" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4456f6d05216ba776fe192d5ac80197c023fdb6d" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76b30dbbdef9bfff4fabe3a5c56c3242f2c8fd4d" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a5d790e735b46d182dbf3ee40cb670e5ea56af7e" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a02546cf433ac808afa20d712db597e109a05d4" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d178c51575940158b67b130eb25cb111900694b6" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.PriorityQueue.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1acfca54ef32f3417dfa510d944091cc54695745" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.PriorityQueue.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1eb4dcdad2348eff57b79d64782a81c1539a3b2c" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;dest&quot;&gt;dest: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;destStart&quot;&gt;destStart: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;dest&quot;&gt;dest: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;destStart&quot;&gt;destStart: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e85628de3fd37df5c76e01b2dab586845d56966" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="106c6ef40b23209bf7ad8cffa7a1386e3a2089e7" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="949e83d20f15ba71c879dace525f60c4dfac210d" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13f953305d3060719ac66858589ed76ff1e70e34" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07d948ac4ce54a99ac44b1b6f76c64319e0d077f" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1dffd12a9ba7fd4186188f8e7ac0ba1db0b2b29d" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d718722a8d661331715cd0f0182affa38165f79c" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="891b63bce9b24517a8cbd91f21b3dabaec58e116" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eeded940b71165a21092dcc1a4ba2280286c5fda" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b73ab3ba4f8f772d6a99d9a445e7b34a409cf92" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6166c1c3ac9df65375367162490fdf4926bd3bcb" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6494a2c7dd2ef3216f387271da1a3a989be3d953" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d9d6b2c8326c1e5d32ae9521897120f4c865b5f" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d63d626c157ce96d027b1d9c8f58e0fa917de96" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de7998df9e96b4b38897de12d0828d080217147f" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7edcf998b288be09e6a8d3b1eb35dcd07b23647b" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16aa3566b44217bfee573763cf45e464ef8d91c3" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d3b607db5255d054d4fd164d645a2bfe24e81d9" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="166eecc94e11df1e7a686a068372bc9edca981bb" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f81918e926468a2d52b214c30f83be09dc3d6f8e" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5aada34b5d707acb6aafc9c299cddfeabb60ab78" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;dest&quot;&gt;dest: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;destStart&quot;&gt;destStart: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;dest&quot;&gt;dest: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;destStart&quot;&gt;destStart: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="541714fd50c9cce6cff1e34f2f03eb1a31b4ed4c" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="367bd86bfd68f65296bb4b9d58b41e83b7d310a1" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eca4ddc71f2e96aa045675c942789f4462cc823a" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="261f5adaa4e56fee5b2a90ba2703b32fa014ab4d" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9387dfbb8ad7875a362aab7142467fcdc55a3f9" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d612bf9f75c63e0c9501c57f721c6a6e4865b37b" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4d0f816cc58eeebc380a6fc16200a1e9d6616ca" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b8c7ccd68c56c5b3eba500a394a6bfb0e3d872a" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cce41e8ba07dc17bebbf16fe14564269976fe42b" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6a1b8d222e17924610d8fef737e90d973c7218e" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bab3ae9bbeacdf1edb7f29b0556417b4c10c2887" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28db92871bfc6b5ab50e63f8409e057ea6217421" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="136c7920d06a5b94e2bc4bb5125645e9ae853ead" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1653f86ac3783852fed51e7671a51959279cb8f" translate="yes" xml:space="preserve">
          <source>def copyToArray[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def copyToArray [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.copyToArray.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b6e3b69d52b1e02a40c5c16a696495ef984fe92" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94fb533c229702be93d2434471abd9984980fdf8" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="241bd7f319da1df3ed5a6e6ff21b6cf3e5c3c738" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecbd4f24f73c0c570cf3f373a0d46f89d4cd9e08" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt; B&lt;/span&gt; ]&lt;/span&gt; ) (&lt;span name=&quot;p&quot;&gt; p: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ):&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt; Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13f309f1ab53557ff2db1edcd677ea53bdbbb791" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1480c58c5844ac2dfa3b8ce062e2b764bf59d612" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b236c79dd1e8dcf272b8650e6d784510ffae49ba" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5fec496afcf4cf5758865581e4621e0b884bf34f" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd8036cf5af12a29fdd54a1f3f5dfeb3e0193c9c" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16cbecb430f24e3a987904c0ab6b7c4752f67a11" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63b9561eaad8e727a8dfa244fd7c8984efbc2c45" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c169b42fb5e60666217465d2ba7e1128cf5744e1" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c78651b1c1dafcdbf8388d7334b95ca46b32be4d" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) (&lt;span name=&quot;p&quot;&gt; p: ( &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93b2ecf4eb2be4d89c7bf635ed1d811f27b45dd8" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) (&lt;span name=&quot;p&quot;&gt; p: ( &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67aa923d7b69ad9cb972c0882f59f9106ebd7f8e" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="120a9ca6ca2a02a19df8867d9a97b46259fc1e51" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e799fc75f6df41fe7e80798654c8d0027304ea0c" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb614fc3ad7dd61b82dce913d23e69b07bc3caba" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="664394e0838968748253b8181adaed1551bcf506" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25055619555fab2b8bc63848c898fcc5a47132bc" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25006f871f8492cff21a743441ba3f10ce9d63b6" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38e2d541cf55c7b6f51b54fff827175d0a38382a" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e89661f236cf0352d9328942421aa3675e14db07" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd576ac86286347780e97bdeb84630c4aa28e998" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51100e9f8118dd992598de6253c77d246f2bbb74" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65066b68e3461f87303234f3a71875678e6ffc1d" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37765483e46af1472b288d8baffe3bd1ba18a0d0" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fea188032b8c94ddf92306f81f77ec843c76c989" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecb3f40ad9a75d031c68a6d8b999b46d4de32efb" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f74766a4d2fd62972c008e63d4f341d80cea2b4" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e122c6b5311fd3a896922f0d3954329e89e7a00" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8bbd24aa969a8bf2fbb0766c30daf5eba5e2e070" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="253dd13a82d39db6bcfb054e54928c2a03297366" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fe4e269d19e94d5997525806ef1885b49198878" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1d3e9ac4cbeaa18e930f9564502d0288a1e727f" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e090129a2d6500bcc433d8e82c7f11bab9be88cd" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="31288ee269d753978fdb61a0665903149832fb66" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="825c6d52c09877c2fbcc5a4ae5d4891005af959d" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4cb332be204f3d0a64b4982a4d88c7e7d1e17d8a" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; ,&lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="97f00fc0ca478c1c54d7957477fc5d38c872151a" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a03d7d36d912c64513288b77cd3a9a7075c9a56" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7e0079c9639ed2db774a6b49d59c14b56afb740" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="523b331ee0b474b880e3e7e965cccdf936c0659d" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9010ec6734c4892ba004efae832a6102408a533e" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4433a7e0109ce96198bee013166a69caf391b992" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5d997b5d915f987e1b9f1eb00adc179ee9bc7c9" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8256aaa62311e6945201af71c5458e86af3f9884" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84ebaac8c5f43d52e6dd4f2325de6c70fda89c11" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ]), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a5453b1774d5f5745c94ceca842b4cd76403da4" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c37138a658557a4ce0ff5cbd540b9e1a67cd3339" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b9112aac24deb32269c2353d355141623b9acca" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2e94f4a2f3f5debc4cc28fb755016cf67aa5ddc" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc6ce96c93a362a99ae151fb26737b4a605f0a48" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="464634a14e14f271ae5ab85fa580df109e0cabfa" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="867ca34d1ccbde4f277cc385d5e32139ad8c4abb" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1bcd46c68c6015f1f8aa60a963faf3370a2a2675" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59fc6965eb80ba5b36670c5eda3307c35177bf71" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3623463451e4a4235fa118843e0c265323493bb8" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bea0d3dde3ef940f2ecce63be6408eae03d22eb2" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5a0c3808a214c26627714bd3a9424bd10051dd4" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0175bcb2a91600fb9287b26badcbc302b70e3eb2" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4466b42c486e04d2467c45b81b7379c56b84dbad" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0506d23d76a6519960edd6ab7c5571b6c9c4b45" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d189e8dbcfe847d951b24ae2082c8a265918e1b6" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6be71a7bf96db42be4fcb670b79a0be33e68e786" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c75c059f69365df3f2f2e5d247850ebd18cca126" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f77e0d7d4d792d9a1122457e8535a1823eb051c" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0cbdd408ce1e2c12c0700f59acb5384e34d40b88" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ac22708d233f92f495c7480c7bd3a9448ad8262f" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc1a342470e52e4627df4bdb052758e17226a811" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fdd4345143956311f2f53574e6bb851cbdcf805c" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53c591cd8b9616b84c265a1d28426d1c49413413" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="01421ae33d8d3b489f6b6eba3ea51ea793732886" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11a64e6b7d5a574e7490d4f8fd32e43e90d532c2" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61ad73aa8e7118d222dfa2ecdc14462049881c56" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84443e07b32cbd31a3bcc55456859a51f302955e" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38bb5cf3d4e2ba2a80e279488dfb1f0b097178c2" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f98b2b389e90f0e17fc90910720352a5fe277d6" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f27958aee0c0ef5369981a5c2d37a6c16dc31a10" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61bfe16f553dbd05d69bf34f3a5fe28b16b2ff2e" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ebf1c544629eca1a8343839fb91f1a2dd948e51a" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72d88408308c8c3ef59be315085e3c29556295d5" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08c9b3d59a9ffb35c67d181cd5626d1d53cf63a4" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be6b807521ea68121ae83a6f1a032a83e1029f57" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04525bd0219ea9d7fc5992f939a0d29f1011128c" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2884526c0d23f50e0ca71349537e28cdbc7f839c" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d20c513814c3c150b822aed6f6cb26639f65204" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae55381d26ae9e903aaf1ce256ce9fc71586ac6e" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf5804644029cb63e4b82bf477c47e808bac6d11" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb63be3bcb42b7f3ed39eb34fcd7487447949408" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d28085749c1cae3e8bf9d4d39532367a6f96e5c2" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7fe4eaaf5fbde529dbbca45df9484708532d1ad6" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0fbbf8572c6e9e8aebd421c17e7d3bedcfefecb" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94ab2a4ba3184f93530b49233d7d2114980dc27e" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6151f016abf54bc4a95bfb5faa7c64e0d87b58b3" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72af763cb42ce60a49548107a536c420c6139b33" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07e6df214985532a072b5ceca095be7d72290622" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec1a18a360eaef855d17a5994431864f92f064b7" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8ebd12087a4a42f59484c04f2b0c2f53cbd73f0" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="58c77052df28b07eeae0cd83d8176e7d09df8a6b" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98eb9ecab8d67c2e006e71475bb190edd68075ca" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e68f8852d7fa622c513bb7e761e992518e4325ff" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="255c0b50649e3c196571dbf61df1fa1c286ea828" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e452b3a597c83d058fe2125771d33a3681d2cff8" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c329113d7317a7b88d588a8378d8cda7be937686" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="722fa3a1f92138952d8e61a66d991a1beeee064c" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6379bb733f1d6c3a81e229125766e963b15d18e" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cea2cdc55a3a4930f3a63019b876716c51a39b8f" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57a9c98a0c71e2f48df64aecf5ab190c362f8168" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e22c1b41a78283064c3fb9b7404fb74d258986e5" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9461643ec0a7ef18c4c07957af8bdcd92af43671" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d871da7c81cad81f8b9ddade0400fbecbba25114" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60bc2edb9e0f544e3dd099eeab429b186ca3e7ab" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04a9542760b0d46601bc4dd773c801648707251b" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9cf3c0163fafd44b501171da40597eebb8207ced" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e90a2db7a62d769639dfdf4aa166284c38b94897" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2fd335848124f6ae33c67a1a4bad5beb450d54a5" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d6da462d89447fc82102e55123d1a8c9e1acb41" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d12c95925c7ca012bbbb35e692604f28c7167e76" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa10b2de4bfeb88c276a226060ef238a0e2f8aac" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c04b3306fbea1c1f8a27c079d30d8cf4292fc0d" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c0f9ee9efc805672003fdc5d8e80924b5628196" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8832d0567c3ff2a59f279caae9f26427d31bc4f2" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84bef2984a2aefc8137ee3d56d1b83d452091231" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="142d057dc91bb60e4abc6753f80b2ee9a5ebcf32" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4a4db89389b3e8a62a63627c00dae40ca6c331c" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b953852629e46e8941a51a10f14f4eb1263c26cd" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1f856d9c428d67381d38a37754b8a8f0a45270e" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b315acee88d2be977d9b2f822301474e1200585c" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3dc944fa4b1f2ddd4e440ffb435d2949f990b525" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64eafd7ca0013f47a3e3054b7e3723ba6db4b02b" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87f1eb03ef9fad8fe0afdb3b6ab6c3dbd07d8735" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37b0f2e87ff1d9043111cf71637d33bf1365c915" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ca7a5b9954503e966fc67e396d61654460f71378" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8240ff3612b60d95cb5a1e5c78ac05a79bd50790" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3132a291aefb9e99cd7bd78dad202f77ba230f6" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a395899f43fe8701c060a97842b5c29255e5f25c" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70c3373c45c1b9cd36fd88594380fcf0f12df39b" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2d43c78430672e5d8346e9e26722c5b817772f9" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0956775da5ec04212ff7c1cdabe0b9d99fb1d977" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8dea95925c913ee67162f1f101e744e07f43beef" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fdd62c524e5192be2609ec93e8b44dc7f778b220" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="576c667573bc7a23af7d9c6817013d632eea8ac3" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b184d62266fef92b39a70c3be8c04c08158ef55" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="346f851375fcf675bd0c15ea81f6086365db7b67" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0bc8162ae13bf5bbcd65f4d4c1789add309db98a" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="186e7b419bd8f496255a8671aa64b9a331cbd766" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04f9ad92fb45e901937ca91e8b3b457405085432" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3fd728c7cd12d9c4a3147e4c36708785d881992" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="01e525984a0ee878a53a613b71a8d6be99c2a61b" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77a07e2b6fdad9355e01c8681046290ed6d85763" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc30f30d6702dc9843466939409df41b48c81b5a" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2e17264446a22486be2fac982b7dcff59800ae4" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="186806fcee12e84be69e61c85a1fe2fd58b1dd3a" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3903fecaa02267e1b9198f99b42eda76d433bbe" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a33a5f4f3519da4a97d793be4465774be78d3aee" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b841965f9020a1d4adeae5ca5a886428ac4217f" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f123afe2d66872ceb06733b3925cf0fdb7640359" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27c78f37afc9e2db65d48c52cf6036022e1c4e99" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e76e5f37aa01f0c2ef82caa26b2ccdf4f11265cd" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d0e64e63fff2fc3b858797795e624a795ac4074" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23bc0c20e993f3daa59c429786dc59745fcfae3b" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80ee7173e2bc7fa095f1468bb38d3b3f3d392fa0" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="826c952550a6b6ed36c97f4491ead334129824ab" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="781449aae57d41775853c0b575bc630f8b0d1361" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37e92fa5cf3649033e63802627c100677047ab7e" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="960be9704573866d604dae7eedfa67b03ac2fe96" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f60a45e2a962d33745ff90a288eb5675ccd95d3e" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="888783961a9a02fcf0f1d0312889b63c972c1788" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d1da7ab47d9013c68ab568692360768ab0fd778" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="afae53e922f6bfe1a9fb7f79371211926eda2873" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3518153c99613203969f1271a62ad807a9fc8dfb" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa2832dec9982aa9e6fea6bda8cddedd005ccd50" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="518837bfed1793e6b2c8edc664c312059eba3489" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3debfe0b890476d09e0bcae35b55caa0975f167f" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c330c910f0dc67629dd6fa2d0c57ae5102e216e1" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="281052553082efe642862ab3fb6b238e3c33aa55" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d9c9719a3b1a6b443702a98a8b40fe9f0f9b6e7" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2cd2431522f985bab48d0cd6176260faec967480" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19b3816c8f9262900cb6a2fe9bac120aa5344186" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.immutable.List.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; , &lt;span name=&quot;scala.collection.immutable.List.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af2b0de7d10a82ab97232b3f4e0ba99241743e14" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.List.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.List.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52f49b5b5e488273762de37014624d830d579965" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.List.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.List.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56b3109296716873383d5d5aa4b36fee948b903e" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd6d9d550a9e40e76272c4e4cc057e96cdf133fe" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6bdd0bf64062897de02a03998323580c606248d" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b2f3dc09391b38e41b1140d2dbbd36feab8f547" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86fd3fcd8c5dc8f21e4128be44b20af201c119b0" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87b6b6b47da2f8b6a996bb971f06050ce263912f" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27ae15584c445e99af486f6a05410e55789af1bd" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8fc3d8ee28f850d8a07d7a03d7569c123cac51c2" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="098033bc6c2572dfc17356dfa311a7f05c142dad" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6667aa38cfa7f860d55cf555cbe6a7faf4d281b5" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c6a0a1165c86bab0e8bbce63949a7bd579d3017" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5707b79a17eeb1c8002f00bbf5d2e566efd7d728" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8cb54684d852021138f5fcdac4f8ded870eb2a6" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a177ae801929ba252e18d2fc8f5e0ddcd63ee092" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3fb94aa26d368904aaef652a872df949ef49cb58" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49942b8688862ce7b6fcc4b16ea720b542a308fb" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d7b9f8eac255dabc009a25570b056c60a7287a3" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8c7ea96e5ad363c5628e9cf96ea9347f922be19" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0bca63b5f30afbfdf2da050f8e69955243d7f106" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ae88ce995815de3356ec90466e1a8bbb0e27a97" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a82b5b41bf878507a5e805287f4d8dc3b70df995" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbf4877365de51cf3fcc445c556839f582949eb2" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e6d18ef47a6a2b9d9a28caff953b7e6ec4edb8a" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e56ac810edcb8a0c498b92ea6dcc7e8e4691f040" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="55fbced10c5cfdab1d2f62fa52fa9296b4321f57" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c55ff79853b86797fed69e0d8d4ed9eeb9639401" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="31953897142d4e14744ac7c294353259bb81f8c0" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11e2698bbff085912ad999168c51650a9f701e35" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ef5e901623423d2a11e0f3401fe06e09704b386" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ), &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19d7ecdd09aa14f9dd18d5dabde9ae4d32653256" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab1ffe61c73bae237bbed2e8093317f6581e550e" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="180cc584e6636c0fa67d5c1f8cf49626102fcc31" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93b3feec45df64b045dd6842a37631e5cf3e07be" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;], &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ], &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e5e382d512522c8ec9f8d8c01ab759aef3d2f84" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6e45c6e5cfb41c5c59858afc16cad0d0f407329" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3436ca1823f63f462770fdda054c17d8b1eed5db" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="594e2c1aa483d605670616f2d13a03ee712949c9" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="569d308d73445f7131849fde23e7b6e986121379" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4245e33a7157ff8a07c1dabdc639959791ceea4" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2fc9fe43a096786045b7b35a99c3fac44f9c76bd" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b868334bf59bd56f969085700a311946aeb691d" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="389bcdf52bf6b2118b5ed9dc2de3231059c2f02e" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67459f6c61fe110dfef6c4cf26339da8431a5b8b" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7319683fdbf849b87a319871867d0f32a0014694" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bdf61b72dc10abecc0b6dff984d2627790d50b6b" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ace67425e1ebcfe986fd4364b37bc51e237df8ef" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d22f71d880f0b7ab472a49d5c55ec9c70cab6a50" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3874d825deefbb1de21eada081413e070f427466" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4b9a1a089e7009aebdfada6a4b5ef379e130c03" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bce39bdee433beae15540f222d6780b374a90c3e" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd12fb375737badbde3098de644606a9c0061d70" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="feef30c8a17d9d54c1850fbc90b412d73fc37934" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="83df234fade9d9dff9838197058a01f3cec588b0" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ef8df1b814438df581c9ab0673fe35935f3d140" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cae3f6595a36cef7f90e443278716f59c8f0806d" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b93aec07a73a7ae2cf6d8e764126be5e270ea2b9" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d88245f26d661dd6d772d4b60fca98b58a119eb9" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ec073fc74d72c3c11c79d617169d79f08ab3326" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="339e77cef99c423d5663e6ef9824e80c21efaff5" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2c9dad659557c79ad35b1cfc5bf2720f07918b3" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bdbb16da62c879b4e505294ac9d76e3385a32c0" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="137b3b470b5b59cd2243d6fe35a9448ea6dd650f" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f6e5efb21ec12a58b091fe39d37b9409a2c7b27" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b95c7d3ab324ac545b3dde36bfa5bfbb267682a6" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="966ecbd13c9cdbaa9157d4776263acd5eb5fa98d" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8258d59035f68ba41e12d4f8e489d87d8e31de3" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70cfb7e24f5f79bb13d4c9a5504ae0d9adef9c06" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86231ea2f6f44c46991fe955c880ff80a12ada00" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a96b2dd185f07f104b20f1517ea13e76422c1718" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad5ffcfac5fbe1d235b8e2a2a9a2f4cdf6caafca" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e72057043f64acbe3c583b370fc40639d95b2926" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9648ad9dffd9879fd369787e6e739410d36c5cc" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a950d34914829eff2f3a27067d9ea2c179c2258b" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9fc92dc380724a0d9c093b1a1cee91574a6092f9" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8521748ce5e82f4893f1cb7661bee506a37ce443" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67c998c8fef160cfc62d013335f004159acffe44" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b75e1245bfdfe2cb6a592ec912ac9f6e1c9652be" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c53251fd16dd0ee08c12cd66e11b9d2d7d37bde" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0dca49097d62f02b4d7390964f2c9709372f1d90" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2e46ed09b57d419881e116dad77fe5a5e7f2ae3" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c48f8210c464785a085fe285a032b88a01b52d1" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1d6278948add328b72f8b1c40b6375742185e2e" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9654f2efe57d1dca335f2327c90b7cea870fc8c" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f9a05539db5883b5ce1410c87abfa26fb9db0db" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="598dac0c640abdeb74befb98c74a71db57f47c44" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1bde8a6b8c7708fc4290a93f1480ff23ff218f0f" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5633e5c405216c7a0d547ec83773c0c2d6d1bcee" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c38ce50a9da56e0885934160d7028ba9d4b5786" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82203ec0c08667af267df7cf714db481ac8ce46c" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d93b91fac19962cdede36cab7d807a70ced52e41" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78a8a9b440f46fb8429fddcdb7af2fda7c2f4b2a" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="97f37fdf12c98465cf5dd8c105bb93cf83d98ac8" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="965e54e09f3f877d9f30e117a6f4b84205cc2725" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e807f3c1e4fa3a4d96b6177cd1eed24cd7b22c7" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e98189347967000f3b486f7ee76d1386228591e" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d54c351dae40bec616b8f597676860c0c1c9f8a5" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ed6ab99d214ac7a451894629773a1b59b4949b5" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ad169bd5d7228ca6b5d5a94a370cf3f1985b668" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65e937cc96a450f8f84d9018f1cfd8f014e3ff71" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="273c3b5799c69991e806a8f7a92c3cd33bf1f7e1" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e1b8bcd9ce4a0af06f59525c32448060e367345" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0f7112ffc7937e54f02dcf4e95d4b0f8584e8f2" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39339b9044cc6d219b9c3bb40027db9ac6ade8eb" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b3eba7db5af302b4d9fbcf8937b68d4e1a306f7" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="279223f55175fb58bff486d531befd604cdc7c5a" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c67f94503562ccc5397652ade03670f5aa1f0a9" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b902c888a9d255fcbc46f7e7e0a1291cf2ec057b" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c93c9e8b73f1ec6eab5bd25d65ded392d9865f8" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab4e2bec39c83a73cec571a2914953b950c1b3fc" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7fe3b4ec4293e1fa068d27af03660f1b1a74a64" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="039cdfa9313487ff70f4455c41a790b0f1d38a2b" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3f6aa825d01306fd56418051086d527128ac945" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d136d34d30f38d0f93f028d83e07549fbc57c42" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cdd54a0e5c3894d9c34fba1352c9a0938e095bb9" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a73a567f2628a5ba2273b76f636941efaea6b0ac" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.IterableOnceOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="285b7adda189d4c0d1760ec2bfe3bd411e0b3bd3" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ae004a375680b769d59a86655a996995b803f87" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7713e057bc1834c5c5281adf32f3e9c64e3ca388" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b230d96c0083290bdcd980c661fa129cabb8c535" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4898f61688c7621e5448dc4b9763f974dfde265" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b911cb5c171bd17f9a6df054e41bafa274ed4275" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6866a34f946f19bcb3c6a20c6836494ab948a696" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="196c5e7de5afcd4dc97b62318b2cfc878b3f993d" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c675113aaa900bd3bb5ad547c089ba91882a35cb" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17b360c49ba2ce77d026a88b9fc7a19c0876f942" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51eb672b7de3185bdd58cd6ad900db9f72bba63b" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42fc5b2429db1f796391763ce41282ebdad35847" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9f0843d903a6404e0af95d8f73d726686340795" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4d173eb0d41f60426ebdf20261dc1560011734c" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4bf4047146ce9fe6bc89618319f12687cdd86072" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e2f36e0622184ee0f9aa1ebe833ed8b927e4336" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d527aa73de52416d6def6f72b1025688d052916d" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="214361ec2a8350ae1df6ae34abe1d0ab15cf5286" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40eb9bc53da6cdd1e1a5532c1bad7b0d037c69dc" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80be19c414c91f517905db14dd9d3229afab0229" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c05f535a14cce52dd591d6f951fb83ffd807e70" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b4080dbf4a0f739b73bc41a5c2ef2c6b6e37b9c" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90db7d973ee00d20510a0a341571a99783a4399b" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa01bdc8140a7d3ddb4246db60fb69b4f992dda0" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96114160950257c4e052fc1434bd7797f75250f8" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3eb591cff142f36b8f94aab117ac15942c119d07" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="296e99ec3e28227831ef9815ffbb32d9ea8d8b07" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e9c057246c545cb286e550b28759115ffb58d0b" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16d7d81e9a022b2248b5669c4855364c0013241f" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f48e9214c926b834a245f952782221cc8cd55db" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70cc5946dcf97c4abdcdd9b21881382376717236" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae5478ba3e84bb12bbae70c63e57836a777a5ee4" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e759bfa5a45291f2ef294fe6ab04cc93c013ae8" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eed32edc1617e6ae3858853ab417c722de446ab4" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e4de53b6efeb4e2995e52900809722605220e46" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="746b5dd83ca442f2adbeccd3f35dd5d19d849390" translate="yes" xml:space="preserve">
          <source>def corresponds[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def соответствует [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ) ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqOps.corresponds.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08f4763fcfb8227aeab3dd890ab11cd0b0696b57" translate="yes" xml:space="preserve">
          <source>def cos(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def cos ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;двойной&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08b02debdaf7bbc8e4b53ac8f59acd10df5e5962" translate="yes" xml:space="preserve">
          <source>def cosh(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def cosh ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;двойной&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e042a2bdc4de578f5bfe09562a0eeb753b7c63f" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c4bdb9c8f0f02549307b240eba2b5614eb4dbf3" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60e131e488b269e5c4f60471b26c94a73bed503b" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d80eb5fa273595b433047db92591f91b9d9e68b" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d8de1b2bfc1441a0ade0ecea1097d3dc95b4745f" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d853663b4eb2435d73eec3ea5a4f724fc442ff4d" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e38771c574e6d8d11c2188711b19abad6d55b886" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b78b1dc7a0fc2c745e4e3351d0b64e98b8708fce" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c9ee4c6e769a21f1961c90eb605ce2f9b88e300" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="398fbe88249a6393bc5eae72d2c944f99a6d7774" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05b2d11740ac647ea66e39f81528f31fe76c288c" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b149c3a3848c2c3440bae5816b38387df2f9545" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f59468781701a6cd6a4df36a7ae52412c8e6e7f" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e01449f468c6aed5601ef0d0c58ba0cd3ac9afdd" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5fa228d44f6334c591dee29e6e82efdbcfcbbcb4" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8782e95f9fa8e0bb9293d4e7e6aef7a81790da39" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b0c4a7879e7b5509840cce3ca7830981ee9df459" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e3fa7f22aa6c28e3a8af13cb4ebb88a0e22601f" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2217c6c0e4bb8fd81dbe2cc964e691ca0a638071" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8110a5dc40117b5d9fd97089bcc6c897262cb67" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7ad5f1e3fde62ca5c3a5eee2345425b43905343" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="152ef5ec4ae7812dbacd7091082e74f4d099fcde" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eba0e8755edf747036f12c4b44f2d8086ed71229" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61578f83fb5aa7c5d22361cc32157968c1dbee87" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ea34efcf78c0f6aff54908796d8360c275dfa35" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7324b0587b2fed24ad190fa901d4bac4d6941a7f" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e81241d5054c8d6611d0277b57cc1aadba6782de" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0f06542238358e807b0472c9400ebe0286b9805" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35e68c1761c254f3f1ada1e40136fd94e62f99f8" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="163ad5b323e7a4d3efba16461ce443da0e7ffbf4" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8aa1774838d97a76ddd11ca08dd2d0067cd600c3" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00141e6fa19c5f9242d3dcede33a499eec9f0256" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c52470926a27f8c6c7f2cbc005758d96ac9d46a3" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d97d3dbfe5d2ae9e3ae0c34c7126261c54588e8e" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1e6e03e55647bf01ab68f04d6972ebb2c18bbeb" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8c13270bd9684566104dc0cd451fdbb0f98638b" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a12268378e0d48e647370b9682235b345298e8e" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d1d0b64663685a539fc24fffa80279ee1e7dea2" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec6afc0fe420d0f09e11fa72664ac94b17ef0685" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9518c42f1af98b3c8a2f3c2f0f5d0aebda20e366" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25a80dbaf2ec7b0e458186a164fee3a8c48aeec6" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2a208d011079aca7def429453ccedfaec241f01" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2da99e0f09ab0e453b66999dc19d490f7e4519bd" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fbc0c1eba72be74c7071467ba84b5cbc7372139" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1693b194fdad3b7deeac13313add73b7bd021d52" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67af574f228314f3cf8cfc99fd5ccf99e28cb6b0" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7aec5e7d405c3a15eb6eeea3258f1b38239763e4" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e91744471b1dcc6e6ff0f48939533114f5288f7a" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d1b5399e42b24f4c69dd61545e482fe2f73f85c" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0504a03d39bb4a525302ee8376552a6e8cdc65b2" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e78dacede676eb97a48101d067d8aa2582298551" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e8ed06c22ef3ee31eb739a146238830e2b64adb" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="466063dcc3f393832d6d1e24440a3cba36fde647" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b854827c1d399980f193d507111cba19e29c1694" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e04392adddbe97fc7d0aa82daecfbf8283c5b53c" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6cae5272788e9a6251ffd51a921df6efc39893aa" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f729483ea5d00091984ade81b329175302aad7d" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2968b26f3598db19f03352f0ceeae70a82f4ff8" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29a578959966ac04a15171c7ebf5a39d253c6838" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ])) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b88737e03fcdb366a43a6b97c6c22c819fe834d" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="609de9fc0a35b3f8f014d1c7aed0ff0215355f13" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9929c3d8676b2684e33011189f696ed0863b02bf" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee22c0c40b43fdbbda1bc2bbdc57c0484f4b3233" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="734cb85d5be7617bb247ce688a64266912141b2f" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8eb608d9776b8dd2c3681457dadb96fe7543d8a3" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0674a0ef1a6777f6a6c2e905d09f240c177f2d7" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: (( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d83f337ddc89403c01a13d14bd11d46082f3dfd" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="242ebaaa2caca78e93dc773875e03f2fa0f46c4a" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41db94bd27bc91b64724683eaea67e57f020c7b3" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25c122cbdd6b01d1ebec36f5cf7232b3ffad7468" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16872db37531a9245a71981a177f742f789e841c" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0b0c4e9eaaec6035bc1e1636a872cc5fd5b0173" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cdd5def317df1625fcf97495f69659599cb6983e" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db0ef8f2a97ad0b56841ab9bedcaf90ff7e196a4" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28b556eb3af1d9e758696832d58a792f13a9eee5" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8661c1af058da8da84ffa9b2b6da8e8dc0f1b61c" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbd23c7706433363e70055193f14919958826eb6" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c94df322261f374d0439ffe1e66fa6a32e5778a" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b55deec705da5778f9b95687a98f372d48afcb0d" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d18a099073ce0ba663cd40dc45cb9124a2d8ce01" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="abd456a3ddd4a5d95f822bc951a15c2a4610f931" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b0f57524aacdf8522737b2d2ee15b0b7cccd3034" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1509c8fae07838353c214f03c4a86a065e287443" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b21ace20207bfd406efda7dd54452ee0af986bfb" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed7ccbce00ec3ab5e7de5220fc966b577da1f8ed" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f034201c99c9abb46c69496452085f637bc0f73" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0dbd97d551d70e7ed54989897bf154e79745cb5" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="337ff38228f21cd370bf496353923e181b73233c" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf78163a03c3ad6c08eed59dd6a14f669f18ca4f" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f73b7722d0987cc2ae76313b1c6019f87b319ed" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ca2615c4f1563780edd841dcdacee31ee2d4a6e" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99e43f0b9d1ab47a8c8ebfd9a9192810ece70575" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c9c84fdff69b657098eace9bd37a4364adad501" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d902dc614339f29d8a854dfad16633d28033289e" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d2f53ae7bdffa00f200efcdad84306af9ab5027" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d0f900b727cea99a8bac22eef4dada719219fdd" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bcbd2e07cc9f2b9f7ad3973cc2dcc67a8c2f9b8a" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="777c8a7c5bf724c2a3c7264f2b5a7b7caa8d1240" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c72e1d831998cc1de9946999974621c3e7edc9a" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="191390dc6b4590dd1af170e83f73c3c5ece57dc9" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="489e797be8c31732f2c5f9bf140d405cc4fdd9a2" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24e040454d0c73bc9ae8d294e433dae0c930b226" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48551630a773261a9c4290602efe5f92474175fd" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86a202532adabd5daea8d447b0a52b84c9d0a4a7" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ea887ae8971e34fec6549099babc6ff6a8c35c7" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53a1effce1bee7896b3b8527becbb7ed9e9ee1fe" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf55dda71994ad91cab102451303f9bf3fe2cf7f" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d07a9e6dca5279c4b344e79a470dd72e3e5a56b" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd9f1dded9ef65d9c0fb040c13c4c86b88f7c23c" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="afc4590f7004c150a18b77d0ac410ea971e67297" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2cd2e696960c1826c602265b97501e879409f2df" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2007555bdc716496670922839f91e7e5ecc12b41" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70fc4a1770e216ebd814e50d07166669d995268d" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8fdeee33395ee9dc5427969ee984f36f74564b10" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbd2d8838886de2064b194ebdc854351f43f9833" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f5450ee01fa43392daaa313f322fca188e37317" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d727ec85ab324b197216d1d259112d6d8b8d036" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="052c2c8022dfa94292ebf04d07fa04511acfa555" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="398629ca02862f25dd160a19f2f31c90b3d2d1fe" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="690b394fe273fdd22a75353494ce18648098f894" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a79e3ce54324705dd08703402898f597ce3615c9" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c741226047c8c3467e9a9b2b5f8c23d46710dd27" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34060e99a599d1d75eb257f60f48f9d588aea930" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d539a75f9b61525f3bb60970e9e1437b48233958" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3be08529fd7273eb8814ff25dc403483d5fffe5f" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cbbaaff34e6016f8a0d887448ba4a4ca3244972b" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e00e843ba6870d78081e8a5b6dc4ec10f5a8a61" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="024ce54b6d3a02038184d65556e8a18a09a0faec" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56264fe5a97de75c27f4b9bfad7c9f52b5d8c39a" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fe712aa26bcd4ff08a1280d6f93633bd8d9cb6fb" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d729e6c829148281495db63019fe38367ddd4006" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bbf9b3df7f9658d2072bcd167c2b09fba42a142" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="749209794e1c163a9685f2a4989517fe97cbe83e" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14c1608430d3759f201c6af2df3f7aeeaeb13b99" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="258fbba425bf15876e99132249b01848ad4b373c" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e0ea41c56dd43ec72bd1a35a374a4a56e7db7fb" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e60f4d7996a9a6e51f517b3ef550e8899ff36050" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c4960d4b8c1e47876027c3e34e2a9346afd8655" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b61e7a18f7afd1808aef07a270d0d3b41bd6dd1f" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e9b7fbfcbae063cadae0b5925f5d42a635e7593" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9c12a3ac0069ea16c0d1fb99a24e2302311dab7" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ddebe0c1cb681d16ba6d06d7ab514c315f7614d" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a8685eb20b0e8319ead3480cac2713ba21671f6" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b76eca247026bc03c56c57c4a273b314d062c579" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96db4af033d54449461832b1a38c40a3e7939063" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8705ceeb5fa8a0320e5e0599de2412f72137db90" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db083054c1620184eddc6453f33d7fdf15b6f8a7" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c934a70d67fa03cb0d6f5a87dec7ee3814c9d343" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ebbba6e5ab9d0daf50adfb366a1871360af0deb6" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e584f368a661f6b49d4a110939dc23221aa2c247" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24f6bfea4d2ab4142ad120a9b71dd0918b397aa4" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8fe13d4c11828ad269a362e048cdc1eada5b794a" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48a25ff1e521d6d4271790f3294641f929c531fb" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="73dd7a652af0fdde66dc938e3a13453d36c0e84d" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="12e1aa1f265d91b4b24d367f654a04990fa37cb1" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c50923ff6bbca8a716178b4fb201009851eb1a1e" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="038e9c46d313327dc6932849973d7edb968b6dbe" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b8c89a7a42256dc95982c790800855c8b5481b9" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="458c3a4e30914ae789d1b0abcc5b78937f3e2573" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0633f751343560def3df299f6929ba0872c95ad1" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="574c159a6e4a5d65759fb5028ea95ab97670bb6c" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="720498be76ee42b7a8b8cb6ba355e0cb58a759c5" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="003510c74d21f0e51608fadd80ab707f592de642" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="02ee46fa79f94a5f822d4a7f970d7203bdcead5f" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22e7463736d919e19df90b0f9ad3e6f86fa6773b" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45f048bd2a3676a85acc562db3661b50908c4c63" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e65b7a743d78f4e518104ceacb0191ae84f1f4ec" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8bfc92d0255d4bcdf8178a40a9cad7c5fb508213" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="18c2a6424d6f2973ab33dba962df680db19cf7f4" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c3e98c30ac36d9bec04ff5825fe2cf6198caa07" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b8771adf1b70ed9c13ea36482cb0f40142385bf" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b1e581bfa18ff8daeb92a4e20c1a66c27cddc79" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="155e6751ec3fa9cc2a26ad98ce6b730e1e775e05" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb86cd8623d6faad80828c32f3130fccd124e656" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3174082a39352c32af2aa1924e4fac112b685be8" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ad68a02c17b896ddff95ebdd7667f97279cceb9" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8d5f91f48926d24181d20110e0b1e23171abae6" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f396027644b97b478d0fd07e23492e25499721b" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2143d4d265366915cceca0cedc17b7a1dc23654d" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47b7d180653c5ae3192615ad884fe26f4961c1c6" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="947838bf201031657c4f1bb3f50a0e5bee8493d9" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="073e6164f35a1e1b5d7f38ff252947fe3486d35f" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4573c4a2c18d2f91d7dfdfa343c43b578043e18d" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="343d7c6bb11c1c6e9f6a6731d9f65eb92587224f" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08d1e2564998feeee4f0e72b68e316d1b571fe7a" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7281b2915340a38ed8d3c04e157555acc14d004a" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b91cd2d8c626fbabdfd675a10e0c6f553bbb2717" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d17284a706b19acbf6414428cf70443a04fd65df" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="561b117d1982d0b0967dd8f707a255e06921845a" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4455c57f0fa8549e7578f70a98392bc2bcef7386" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d1147ab48eda2e59504d21be96309e368486b22" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c238492f0a9fcfabd579cf7ba7abdb3a6007e34" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3db8aecb8304d9898a1d9360752b3f506179b82a" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec0cf22e8853032b232248ead841e6902b766b34" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e1c545dce89414d53abfea2bc6f52281b34bc37" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7023794568ddc0a4890650bdd308ee39e9ea19b" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="02b4e4ee48879868c752825f25e3fa7920cc6bc6" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a913da7389df1330de6ddaa07cb2db8eb7bcde1" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80ff15e23f922c646e7f342e58e72fd1975a0078" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80315b6820545b804c2906abbce2b92732969324" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d20ff3d8fd54316583b37dbb99db8170f7f8e4f" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c71a2a6a30d3d700a6fb739546ae37f790ed3258" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6d409cda3dfc808698ef78d760f61b273812b61" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="abe88ccbd1aef45fc1a03a888baad6dd70e49968" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="769b9af88725c6dacff809beaa0d69a1ea307ab0" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fac22fa0754c58f4fc43e0c07daf316b7a5e1d4d" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec2fbdbe4d178470ff9f525920126e8640fd7f27" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ed47cfa443ae1158a075f2a1a2cf5c83adc392e" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f4760171c32aaaecb083f5453aa861118bbfe06" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76295876f222069ce0d11330e37cacdfc9194e5a" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ebc57131eb6ca7bafda08f0fa73ebb7fccffc138" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d694b99a2d16767a139cb765adcce7980aee9a1f" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c5b16042cf7bbdbd3339633cd0653eded31d738" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e306ddff28f4ebda85a105a233ea2d65cb9bfa5c" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f085d7a1ecaf5aefa436418bc2f166a2d3dd0628" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87def7355707cbb04f92d919cc34fc02227788d0" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f429da7646bdf7a60bc67beaaea3b063932ab36" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b461a3427f57b131ecc7c0d2faeae934ff8fb6b6" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="343a52f4da7b3e56438b5c26218000f29c1875ce" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62b15bce43fdd26df08f285aa4648e9ba85b1446" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="832b2caaa4b7b2cfa32032cac017d8f5bb7f7865" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f451454a6faba91f06bcb0d020e96e11de25c300" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b0df637c13c3ef6960a288de0b6212d476ab3919" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="73e64396e68df50a8e5334b5f2128cc8da0df6ae" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="226bc71b628cc80f58c6fd5a3dc5a9041dd68047" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce01ea0a64afa69a205ad3758df8833f091eb020" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9fd28f998cf081c3b4bee7048c7eb26ca5189785" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a05310f896a8496c968019bd8ef9d2cf135e8e8d" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3623f634141a3ea8f11418fb8977ff8ba937518" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e808dda33e46195d323684835ac99f435368f2b" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a35169e24491405628e7a59fd520bacffde66cc7" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a3af6e67cbec1a436000cae9488e3ebcd8486b4" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99f4103d7636e603b5061d492bbf70ab6fa8e63d" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9778df0d405bf29f2a0da11a9d48f55e9e5bbfc" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ada48b1806c7c8aec8f55899c3987231443d5959" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c66c08bb6e25247852e10e49ab8fd6fa773baa0f" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d5ecb8b68d53348f8d4e21082ce11ce293b90ef" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="125b1c7906456912ef63257b5126933ba53b8f61" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dfc7825aff8a5af90b3df2902647051f3bed341a" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="973fef5b72b9042ed4e1c1f5fcfa1f5edd76354f" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="888155cf2a0f67c781c8e8b84de604e2048fba12" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a040f4b7c62dcff803373b4f7e59021216778401" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;конец: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;step&quot;&gt;шаг: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c349d5010b7e2c611a707c02a7a62505a89af167" translate="yes" xml:space="preserve">
          <source>def count(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;isInclusive&quot;&gt;isInclusive: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count ( &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;конец: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;step&quot;&gt;шаг: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;isInclusive&quot;&gt;isInclusive: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29f3f0b207e2456ac4038bde19463f0a82bf5dde" translate="yes" xml:space="preserve">
          <source>def countLong(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def countLong ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd74fc67b8b08b4549992e11089bd18b1e65ed18" translate="yes" xml:space="preserve">
          <source>def countLong(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def countLong ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0fa8875ddb1280a94433141d24a95622b6ce7e4" translate="yes" xml:space="preserve">
          <source>def countLong(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def countLong ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50be89581ccf5f6710d261f22793cfe085298a0a" translate="yes" xml:space="preserve">
          <source>def countLong(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def countLong ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0775089b7dde3f1a539334adf67b41bd57c209e" translate="yes" xml:space="preserve">
          <source>def count[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.NumericRange.count.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;span name=&quot;scala.collection.immutable.NumericRange.count.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;span name=&quot;scala.collection.immutable.NumericRange.count.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;isInclusive&quot;&gt;isInclusive: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;num&quot;&gt;num: &lt;a href=&quot;../../index#Integral%5BT%5D=scala.math.Integral%5BT%5D&quot; id=&quot;scala.Integral&quot; name=&quot;scala.Integral&quot;&gt;Integral&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.count.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def count [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.immutable.NumericRange.count.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;конец: &lt;span name=&quot;scala.collection.immutable.NumericRange.count.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;step&quot;&gt;шаг: &lt;span name=&quot;scala.collection.immutable.NumericRange.count.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;isInclusive&quot;&gt;isInclusive: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ) (неявное &lt;span name=&quot;num&quot;&gt;число: &lt;a href=&quot;../../index#Integral%5BT%5D=scala.math.Integral%5BT%5D&quot; id=&quot;scala.Integral&quot; name=&quot;scala.Integral&quot;&gt;Integral&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.count.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9eb6f1b35db0b2b80f2a9fc101098cf73277951" translate="yes" xml:space="preserve">
          <source>def create(&lt;span name=&quot;length&quot;&gt;length: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;unit&quot;&gt;unit: &lt;a href=&quot;index#TimeUnit=java.util.concurrent.TimeUnit&quot; id=&quot;scala.concurrent.duration.TimeUnit&quot; name=&quot;scala.concurrent.duration.TimeUnit&quot;&gt;TimeUnit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;</source>
          <target state="translated">def create ( &lt;span name=&quot;length&quot;&gt;length: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;unit&quot;&gt;unit: &lt;a href=&quot;index#TimeUnit=java.util.concurrent.TimeUnit&quot; id=&quot;scala.concurrent.duration.TimeUnit&quot; name=&quot;scala.concurrent.duration.TimeUnit&quot;&gt;TimeUnit&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be390c95663613472978c87baba6ddb306bd0fda" translate="yes" xml:space="preserve">
          <source>def create(&lt;span name=&quot;length&quot;&gt;length: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;unit&quot;&gt;unit: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="translated">def create ( &lt;span name=&quot;length&quot;&gt;длина: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;unit&quot;&gt;unit: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41d7851f6e18c10ff92a43d4dca48a02fa7ac04e" translate="yes" xml:space="preserve">
          <source>def create(&lt;span name=&quot;length&quot;&gt;length: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;unit&quot;&gt;unit: &lt;a href=&quot;index#TimeUnit=java.util.concurrent.TimeUnit&quot; id=&quot;scala.concurrent.duration.TimeUnit&quot; name=&quot;scala.concurrent.duration.TimeUnit&quot;&gt;TimeUnit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="translated">def create ( &lt;span name=&quot;length&quot;&gt;длина: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;unit&quot;&gt;единица измерения: &lt;a href=&quot;index#TimeUnit=java.util.concurrent.TimeUnit&quot; id=&quot;scala.concurrent.duration.TimeUnit&quot; name=&quot;scala.concurrent.duration.TimeUnit&quot;&gt;TimeUnit&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c829d908fd7178b98b9c287166188f84e04cb38f" translate="yes" xml:space="preserve">
          <source>def create(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;</source>
          <target state="translated">def create ( &lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Продолжительность&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ce904ae49d9ac9cac780674a0a9104830d7df18" translate="yes" xml:space="preserve">
          <source>def createBufferedSource(&lt;span name=&quot;inputStream&quot;&gt;inputStream: &lt;span name=&quot;java.io.InputStream&quot;&gt;InputStream&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;bufferSize&quot;&gt;bufferSize: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = &lt;a href=&quot;#DefaultBufSize:Int&quot;&gt;DefaultBufSize&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;reset&quot;&gt;reset: () =&amp;gt; &lt;a href=&quot;source&quot; id=&quot;scala.io.Source&quot; name=&quot;scala.io.Source&quot;&gt;Source&lt;/a&gt; = null&lt;/span&gt;, &lt;span name=&quot;close&quot;&gt;close: () =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; = null&lt;/span&gt;)(implicit &lt;span name=&quot;codec&quot;&gt;codec: &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bufferedsource&quot; id=&quot;scala.io.BufferedSource&quot; name=&quot;scala.io.BufferedSource&quot;&gt;BufferedSource&lt;/a&gt;</source>
          <target state="translated">def createBufferedSource ( &lt;span name=&quot;inputStream&quot;&gt;inputStream: &lt;span name=&quot;java.io.InputStream&quot;&gt;InputStream&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;bufferSize&quot;&gt;bufferSize: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = &lt;a href=&quot;#DefaultBufSize:Int&quot;&gt;DefaultBufSize&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;reset&quot;&gt;reset: () =&amp;gt; &lt;a href=&quot;source&quot; id=&quot;scala.io.Source&quot; name=&quot;scala.io.Source&quot;&gt;Source&lt;/a&gt; = null&lt;/span&gt; , &lt;span name=&quot;close&quot;&gt;close: () =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; = null&lt;/span&gt; ) (неявный &lt;span name=&quot;codec&quot;&gt;кодек: &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bufferedsource&quot; id=&quot;scala.io.BufferedSource&quot; name=&quot;scala.io.BufferedSource&quot;&gt;BufferedSource&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5deaff1ea94469c453b0144271a734312095b4f9" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def curried: ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Двойной&lt;/a&gt; ) =&amp;gt; ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Двойной&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Двойной&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8eb1a784f5f90ba692cc1fbf7d327b681a3a630" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def каррированный: ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47cc841c1999964a7a4472a673bea8815ff2ca51" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def curried: ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Длинный&lt;/a&gt; ) =&amp;gt; ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Длинный&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Длинный&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6edbaea4e661729fceb2daf37c3707efae6fe45c" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function10.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function10.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function10.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function10.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function10.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function10.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function10.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function10.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function10.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function10.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function10.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function10.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function10.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function10.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function10.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function10.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function10.T6&quot;&gt;T6&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function10.T7&quot;&gt;T7&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function10.T8&quot;&gt;T8&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function10.T9&quot;&gt;T9&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function10.T10&quot;&gt;T10&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function10.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b3d1d93c775cd34a199dcc785c8795276821a1cf" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function11.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function11.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function11.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function11.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function11.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function11.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function11.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function11.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function11.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function11.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function11.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function11.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function11.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function11.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function11.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function11.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function11.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function11.T6&quot;&gt;T6&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function11.T7&quot;&gt;T7&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function11.T8&quot;&gt;T8&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function11.T9&quot;&gt;T9&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function11.T10&quot;&gt;T10&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function11.T11&quot;&gt;T11&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function11.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4da634cb5a021d70bda82275a383fac92832086d" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function12.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function12.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function12.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function12.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function12.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function12.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function12.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function12.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function12.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function12.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function12.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function12.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function12.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function12.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function12.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function12.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function12.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function12.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function12.T6&quot;&gt;T6&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function12.T7&quot;&gt;T7&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function12.T8&quot;&gt;T8&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function12.T9&quot;&gt;T9&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function12.T10&quot;&gt;T10&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function12.T11&quot;&gt;T11&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function12.T12&quot;&gt;T12&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function12.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="26022b753b721acf5f93f16d461414f05d465748" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function13.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function13.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function13.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function13.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function13.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function13.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function13.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function13.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function13.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function13.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function13.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function13.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function13.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function13.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function13.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function13.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function13.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function13.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function13.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function13.T6&quot;&gt;T6&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function13.T7&quot;&gt;T7&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function13.T8&quot;&gt;T8&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function13.T9&quot;&gt;T9&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function13.T10&quot;&gt;T10&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function13.T11&quot;&gt;T11&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function13.T12&quot;&gt;T12&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function13.T13&quot;&gt;T13&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function13.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e4f0c4a2a86f6b38d01d62bd33c54923d8a51ba6" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function14.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function14.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function14.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function14.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function14.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function14.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function14.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function14.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function14.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function14.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function14.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function14.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function14.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function14.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function14.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function14.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function14.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function14.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function14.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function14.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function14.T6&quot;&gt;T6&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function14.T7&quot;&gt;T7&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function14.T8&quot;&gt;T8&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function14.T9&quot;&gt;T9&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function14.T10&quot;&gt;T10&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function14.T11&quot;&gt;T11&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function14.T12&quot;&gt;T12&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function14.T13&quot;&gt;T13&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function14.T14&quot;&gt;T14&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function14.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d45642b8b3d2a989465a20afa9ab4fcb3ed90b4f" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function15.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function15.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function15.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function15.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function15.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function15.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function15.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function15.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function15.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function15.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function15.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function15.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function15.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function15.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function15.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function15.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function15.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function15.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function15.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function15.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function15.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function15.T6&quot;&gt;T6&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function15.T7&quot;&gt;T7&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function15.T8&quot;&gt;T8&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function15.T9&quot;&gt;T9&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function15.T10&quot;&gt;T10&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function15.T11&quot;&gt;T11&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function15.T12&quot;&gt;T12&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function15.T13&quot;&gt;T13&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function15.T14&quot;&gt;T14&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function15.T15&quot;&gt;T15&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function15.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ff705076a8dde70555a1ae051f28252aa7b8e684" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function16.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function16.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function16.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function16.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function16.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function16.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function16.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function16.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function16.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function16.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function16.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function16.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function16.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function16.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function16.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function16.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function16.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function16.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function16.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function16.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function16.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function16.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function16.T6&quot;&gt;T6&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function16.T7&quot;&gt;T7&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function16.T8&quot;&gt;T8&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function16.T9&quot;&gt;T9&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function16.T10&quot;&gt;T10&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function16.T11&quot;&gt;T11&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function16.T12&quot;&gt;T12&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function16.T13&quot;&gt;T13&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function16.T14&quot;&gt;T14&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function16.T15&quot;&gt;T15&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function16.T16&quot;&gt;T16&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function16.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5269444a4ff6a4f9f2318f3bb2e79b3765f1f994" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function17.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function17.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function17.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function17.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function17.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function17.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function17.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function17.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function17.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function17.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function17.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function17.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function17.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function17.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function17.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function17.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function17.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function17.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function17.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function17.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function17.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function17.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function17.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function17.T6&quot;&gt;T6&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function17.T7&quot;&gt;T7&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function17.T8&quot;&gt;T8&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function17.T9&quot;&gt;T9&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function17.T10&quot;&gt;T10&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function17.T11&quot;&gt;T11&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function17.T12&quot;&gt;T12&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function17.T13&quot;&gt;T13&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function17.T14&quot;&gt;T14&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function17.T15&quot;&gt;T15&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function17.T16&quot;&gt;T16&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function17.T17&quot;&gt;T17&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function17.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7c36962a983e9578fe62a9ccfcf6af81fa135902" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function18.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function18.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function18.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function18.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function18.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function18.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function18.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function18.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function18.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function18.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function18.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function18.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function18.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function18.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function18.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function18.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function18.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function18.T18&quot;&gt;T18&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function18.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function18.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function18.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function18.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function18.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function18.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function18.T6&quot;&gt;T6&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function18.T7&quot;&gt;T7&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function18.T8&quot;&gt;T8&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function18.T9&quot;&gt;T9&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function18.T10&quot;&gt;T10&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function18.T11&quot;&gt;T11&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function18.T12&quot;&gt;T12&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function18.T13&quot;&gt;T13&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function18.T14&quot;&gt;T14&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function18.T15&quot;&gt;T15&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function18.T16&quot;&gt;T16&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function18.T17&quot;&gt;T17&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function18.T18&quot;&gt;T18&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function18.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="243fd5cac0064b97a2faf495d6f0d30e5cb5c81c" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function19.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function19.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function19.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function19.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function19.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function19.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function19.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function19.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function19.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function19.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function19.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function19.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function19.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function19.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function19.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function19.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function19.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function19.T18&quot;&gt;T18&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function19.T19&quot;&gt;T19&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function19.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function19.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function19.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function19.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function19.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function19.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function19.T6&quot;&gt;T6&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function19.T7&quot;&gt;T7&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function19.T8&quot;&gt;T8&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function19.T9&quot;&gt;T9&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function19.T10&quot;&gt;T10&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function19.T11&quot;&gt;T11&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function19.T12&quot;&gt;T12&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function19.T13&quot;&gt;T13&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function19.T14&quot;&gt;T14&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function19.T15&quot;&gt;T15&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function19.T16&quot;&gt;T16&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function19.T17&quot;&gt;T17&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function19.T18&quot;&gt;T18&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function19.T19&quot;&gt;T19&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function19.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="54edb076588e0a1e3a45f760151770ee252dc587" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function2.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function2.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function2.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function2.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function2.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function2.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="08777659bb736068c8b055047272908af2e08470" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function20.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T18&quot;&gt;T18&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T19&quot;&gt;T19&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function20.T20&quot;&gt;T20&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function20.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function20.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T6&quot;&gt;T6&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T7&quot;&gt;T7&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T8&quot;&gt;T8&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T9&quot;&gt;T9&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T10&quot;&gt;T10&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T11&quot;&gt;T11&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T12&quot;&gt;T12&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T13&quot;&gt;T13&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T14&quot;&gt;T14&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T15&quot;&gt;T15&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T16&quot;&gt;T16&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T17&quot;&gt;T17&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T18&quot;&gt;T18&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T19&quot;&gt;T19&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function20.T20&quot;&gt;T20&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function20.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a3992931ef260619ad2c57e17cbe87666a799e7d" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function21.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T18&quot;&gt;T18&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T19&quot;&gt;T19&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T20&quot;&gt;T20&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function21.T21&quot;&gt;T21&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function21.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function21.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T6&quot;&gt;T6&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T7&quot;&gt;T7&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T8&quot;&gt;T8&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T9&quot;&gt;T9&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T10&quot;&gt;T10&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T11&quot;&gt;T11&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T12&quot;&gt;T12&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T13&quot;&gt;T13&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T14&quot;&gt;T14&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T15&quot;&gt;T15&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T16&quot;&gt;T16&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T17&quot;&gt;T17&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T18&quot;&gt;T18&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T19&quot;&gt;T19&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T20&quot;&gt;T20&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function21.T21&quot;&gt;T21&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function21.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="810de9791eb4938b6e71b4c1975bf48bbdf0da40" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function22.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T18&quot;&gt;T18&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T19&quot;&gt;T19&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T20&quot;&gt;T20&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T21&quot;&gt;T21&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function22.T22&quot;&gt;T22&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function22.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function22.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T6&quot;&gt;T6&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T7&quot;&gt;T7&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T8&quot;&gt;T8&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T9&quot;&gt;T9&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T10&quot;&gt;T10&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T11&quot;&gt;T11&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T12&quot;&gt;T12&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T13&quot;&gt;T13&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T14&quot;&gt;T14&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T15&quot;&gt;T15&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T16&quot;&gt;T16&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T17&quot;&gt;T17&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T18&quot;&gt;T18&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T19&quot;&gt;T19&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T20&quot;&gt;T20&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T21&quot;&gt;T21&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function22.T22&quot;&gt;T22&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function22.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3f04f549704ac510952dce76c7fdbaf04f4aa7ad" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function3.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function3.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function3.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function3.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function3.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function3.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function3.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function3.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e884c7331e2cbcf7788f3f0ef8b228f327b56eba" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function4.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function4.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function4.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function4.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function4.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function4.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function4.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function4.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function4.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function4.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="030fe83106480523cdeaf2fc97526d00a70d09e3" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function5.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function5.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function5.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function5.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function5.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function5.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function5.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function5.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function5.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function5.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function5.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function5.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2c2d3933e357b7af8f69f569150794241e64df93" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function6.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function6.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function6.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function6.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function6.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function6.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function6.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррировано: ( &lt;span name=&quot;scala.Function6.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function6.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function6.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function6.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function6.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function6.T6&quot;&gt;T6&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function6.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1c08dd6a19833fecfea5fe41a19bf7e263d3be71" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function7.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function7.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function7.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function7.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function7.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function7.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function7.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function7.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function7.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function7.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function7.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function7.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function7.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function7.T6&quot;&gt;T6&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function7.T7&quot;&gt;T7&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function7.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f1f341fe4c17b6b16a16bd894ebd207c6fa07bf6" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function8.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function8.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function8.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function8.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function8.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function8.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function8.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function8.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function8.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррировано: ( &lt;span name=&quot;scala.Function8.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function8.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function8.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function8.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function8.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function8.T6&quot;&gt;T6&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function8.T7&quot;&gt;T7&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function8.T8&quot;&gt;T8&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function8.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b5c7b365e4e7f72bbfa09a8e8dbabcf0f8447eda" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.Function9.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function9.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function9.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function9.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function9.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function9.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function9.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function9.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.Function9.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function9.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.Function9.T1&quot;&gt;T1&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function9.T2&quot;&gt;T2&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function9.T3&quot;&gt;T3&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function9.T4&quot;&gt;T4&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function9.T5&quot;&gt;T5&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function9.T6&quot;&gt;T6&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function9.T7&quot;&gt;T7&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function9.T8&quot;&gt;T8&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.Function9.T9&quot;&gt;T9&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Function9.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4ca01931304d4ec0f2e7e60bb8017e9c9d3903cd" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def curried: ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.U&quot;&gt;U&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Единица&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f7ba623e6aa2621e5c54750fd23c5f60b72704c" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.U&quot;&gt;U&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.R&quot;&gt;R&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7c41c2eb17a8fc4d2d23092a26f741bba723826b" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.U&quot;&gt;U&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2595e4fc0bbad4be09d79274bece6cbd9395d0ac" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0404cb078ca1b5a38960dd1ea86a641d7d1ea27a" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def curried: ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; ( &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Единица&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82e02f0270cf7496a2e4bb0c948cfe018511caed" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; ( &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9a022e93f4af5d6a825a252a274bb2b068b7876" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def curried: ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; ( &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Единица&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f8f3bc97bf212065e44bc80eb7573e234cd11ac" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e8ec6084d9fc0f76d084d2a0f29ce99c1e0055d" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f79a032debfa686c7bf8703ae881c9ec3b4c14db" translate="yes" xml:space="preserve">
          <source>def curried: (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; (&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def каррированный: ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; ( &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52adad6cda5d7d1a685d819a426d829b05786114" translate="yes" xml:space="preserve">
          <source>def daemonized(): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</source>
          <target state="translated">def daemonized (): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9114314b60fd40af937c1affeff6021f93043284" translate="yes" xml:space="preserve">
          <source>def day: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="translated">день определения: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67d234617c004addee55634a8a2629dcdb413d8a" translate="yes" xml:space="preserve">
          <source>def day[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.day.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.duration.DurationConversions.day.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</source>
          <target state="translated">def day [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.day.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ) (неявное &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;классификатор&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.duration.DurationConversions.day.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc1730980adab7043f817197aa848f6f2c0684ed" translate="yes" xml:space="preserve">
          <source>def days: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="translated">дни определения: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ba9824b75f222bf465c43fa46870313806fbc2a" translate="yes" xml:space="preserve">
          <source>def days[&lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.days.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.duration.DurationConversions.days.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</source>
          <target state="translated">def days [ &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.concurrent.duration.DurationConversions.days.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt; ) (неявное &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;классификатор&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.duration.DurationConversions.days.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;durationconversions%24%24classifier#R&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier.R&quot;&gt;R&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1fcd0d1ca93f9529a067768f443f0f310a56772c" translate="yes" xml:space="preserve">
          <source>def decimal(&lt;span name=&quot;bd&quot;&gt;bd: &lt;span name=&quot;java.math.BigDecimal&quot;&gt;java.math.BigDecimal&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def decimal ( &lt;span name=&quot;bd&quot;&gt;bd: &lt;span name=&quot;java.math.BigDecimal&quot;&gt;java.math.BigDecimal&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa611ad77ae445e7f34fe2141989a8d090e19882" translate="yes" xml:space="preserve">
          <source>def decimal(&lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def decimal ( &lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54fd760724c58809b9a7e2284ccef18dd63d214e" translate="yes" xml:space="preserve">
          <source>def decimal(&lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def decimal ( &lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d918040058b39fa58243fd17df00d331614f895" translate="yes" xml:space="preserve">
          <source>def decimal(&lt;span name=&quot;f&quot;&gt;f: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def decimal ( &lt;span name=&quot;f&quot;&gt;f: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0e39100133a85d7913270936658c1bfce0f6ce3" translate="yes" xml:space="preserve">
          <source>def decimal(&lt;span name=&quot;f&quot;&gt;f: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def decimal ( &lt;span name=&quot;f&quot;&gt;f: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be3778d059c6f64a90ec6846f05b46de095c2bed" translate="yes" xml:space="preserve">
          <source>def decimal(&lt;span name=&quot;l&quot;&gt;l: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def decimal ( &lt;span name=&quot;l&quot;&gt;l: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1cd76c6e13218f7d0f1e1f50e3dca50c199a105" translate="yes" xml:space="preserve">
          <source>def decimal(&lt;span name=&quot;l&quot;&gt;l: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="translated">def decimal ( &lt;span name=&quot;l&quot;&gt;l: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13df928a60896f4a9a49f07b94d85a594428901e" translate="yes" xml:space="preserve">
          <source>def decode(&lt;span name=&quot;name0&quot;&gt;name0: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def &lt;span name=&quot;name0&quot;&gt;decode&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;&lt;/a&gt;&lt;/span&gt; ( &lt;span name=&quot;name0&quot;&gt;name0: &lt;/span&gt;&lt;span name=&quot;name0&quot;&gt;String&lt;/span&gt; ): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;строка&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb7e7fe5183ebb90e238f5919ec510633ba18dc2" translate="yes" xml:space="preserve">
          <source>def decoder: &lt;span name=&quot;java.nio.charset.CharsetDecoder&quot;&gt;CharsetDecoder&lt;/span&gt;</source>
          <target state="translated">def декодер: &lt;span name=&quot;java.nio.charset.CharsetDecoder&quot;&gt;CharsetDecoder&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d6637b300eff434551082924a6aaa2fadb90d10c" translate="yes" xml:space="preserve">
          <source>def decodingReplaceWith(&lt;span name=&quot;newReplacement&quot;&gt;newReplacement: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;.this.type</source>
          <target state="translated">def decodingReplaceWith ( &lt;span name=&quot;newReplacement&quot;&gt;newReplacement: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Кодек&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="5ce6fb2f40e6bb96649e0af28e616a2cd500f617" translate="yes" xml:space="preserve">
          <source>def decrementExact(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def декрементExact ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e2a6bd8c01498caec502492a5ae4f2bf9e8fcc7" translate="yes" xml:space="preserve">
          <source>def decrementExact(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">def DecmentExact ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Длинный&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8914d8f2ee996f066f88533e9002361b8256bef6" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;длинный&lt;/a&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="84e416dbce6e256a05cc89ba9391424e32525c9d" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def default ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="814d2e45af5d78c384581c37d76a459fb042fca4" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b1264b59ea783720adac8da10f8b8f417516c3ed" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cd410329663f45e753cc52dc1267a28e61a33d8d" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cd685c6122ddabe60d09a00f69bd0ecdd8051300" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="77a0d1d617da96496fdaca54406a88ae30eb9de3" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="279e9d7737762cb35e2b5652be96eea5e49b5ddb" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ceba44f25ab19c14528495adde6e5fdeb009046b" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2a60d1c047edd78be613032080971f6802de8afa" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4aaa26219db5b7672cbfb31f7d6411b6ec2d7b71" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="06b005147e77d60bee767f7dbf96925ca5d73985" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1905788c8eefc43d60db73eb020e33c8da8efb18" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="88500ba120e2ea396ca440fce528641c21029480" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="de32636be4a00aef24cd0664b39927fef6c13845" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="40b0dc18064afd7f7403859db901d33ecddc23c5" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cd2e174a54d1dbcb86a298f7861fc9e9a223d0b8" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dd023271645dbeb994aac1dc3612a3b132d58ddf" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4bcdaa72aed9650a4eefa9717cc18c6ccc3292ed" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="647477fa46c321556943ef10f32737b6d08a57c8" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="76ebb08b219d5838bf481668d679349e0114baf8" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0f9e1862e05defed4e1292ae1930272c64c2c8a7" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3c1e53916d0470f18c01be29fb8f005ec56933c0" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9e0e3b57398444e2a43e0181434c07d645dd8d29" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="88ee17608e9c3e67119dc61bea02ed3fd26ce73c" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f84def3876522609e1e61229868a987c71bfca15" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="87830137af5a730c9ba7d5e7035f48feb4c95f0e" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4b6649f7cf3d8e3a592b9ab303ada19f13e037e4" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bd71613cf3c528924dc63e16e7c1a732aa8c7fe8" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d1fc1f9f393afde85556366b7a995982e81d8e93" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="006aa35a92e278f8c0990fc704176f5c74cd90d3" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7a26587be1f5072a7ddf56f5f95e48ace68fd1ec" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7944fc6f62f3a2912191311857158f63cdc2af22" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cc162bbf964a8882122d48fb3ca24cd90573c4b3" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f6bda058383b82e320945070cf3ef9bae0da598e" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="21cea18ce8966d2c80b6e5744360bb0d67ef9f77" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b147c1d6e189f8e4690f8ba671548d360c01a3e2" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c0ab96b74039112983b799743ba7ea73c8177d3f" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5364031db6725457816b377673472ff476d39ec5" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="41c6a7141060b30f5d6d64c17399862c30dd0341" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cd13353698d7c2e90ac74a80c941421e0f3f0136" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6b09aaa3d91b8ad340c59c7cf684b94949667b86" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2bd44dc352df6dea62117fae4fae41cb9b79b1f2" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b14cfa8c065dde3de41f2600ac769f475a29fe77" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b2ef658ebf6680d251381dc0a24e5b5163351904" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a9fab289a32fe0fac1d4ce7052ee9112b3fd39c0" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="422fe1f5aa0e96c6bed11c684a45e0f9cb61e30c" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="02c5f4816f9e8fc0a1e5ea04b62062bf762c1a4d" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d71750636d21305e0a6347d0acf2d00d962f9d49" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ea5235ad1ae606025920b5c6c58bd38007becc86" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="646bad41cb33b62ae098fcede57ae9446a0c3c11" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6c4a42bb6a34c55390524b1e823a72c18925a59e" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9ab50d8351c3f21f41bf09e84748cdbe8ff10a55" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="translated">def default ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="993e3935579f2d1e6795235237814f4be44599bc" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;</source>
          <target state="translated">def default ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;ключ&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;значение&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4e82e7274eb622bc87a17cb4d4235112df4aad01" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c6698faf012e2997f737ad2c8272c4283697f826" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5e4accbe9f353d4e47180d7cf74eca24e50dd562" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f8360f22b7bf45a2b692a64e24a4f5c224361d65" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="83a776cd480e40e788bdad57c22656757483094c" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="49ede7b77e5c147c0bcb77df0baadb00dbc9fb61" translate="yes" xml:space="preserve">
          <source>def default(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;</source>
          <target state="translated">def по умолчанию ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a16e2c1914260d6b53acd6d8f22909d6c49e1d2a" translate="yes" xml:space="preserve">
          <source>def default: &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;</source>
          <target state="translated">def по умолчанию: &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Кодек&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33f760f185da5c328b787c8b0184a6fcc2b07fc9" translate="yes" xml:space="preserve">
          <source>def defaultCharsetCodec: &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;</source>
          <target state="translated">def defaultCharsetCodec: &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Кодек&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3fe6a281a2cbd56cdf2ed025baa24b4116e47a3" translate="yes" xml:space="preserve">
          <source>def delete(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def delete ( &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;end&quot;&gt;конец: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b6bc6c4a81e57e0417412b6df184cfc9522bca1" translate="yes" xml:space="preserve">
          <source>def deleteCharAt(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;.this.type</source>
          <target state="translated">Защиту deleteCharAt ( &lt;span name=&quot;index&quot;&gt;индекс: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="cedcbf579ad05056a5d0adb9fc7895691a8702b2" translate="yes" xml:space="preserve">
          <source>def dequeue(): &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def dequeue (): &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="115f45c35bda3474d75a31f71b798da2dbe58f3e" translate="yes" xml:space="preserve">
          <source>def dequeue(): &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">def dequeue (): &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4f9fa79292a853d8b6890d9505bf29a98ec52a47" translate="yes" xml:space="preserve">
          <source>def dequeue: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="translated">def dequeue: ( &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;очередь&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="4ca18e811c4deb5dae21e42525285a3dae18b4a1" translate="yes" xml:space="preserve">
          <source>def dequeueAll(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def dequeueAll ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9254e59d17833b68a652f0b6d01b46d1000a95e5" translate="yes" xml:space="preserve">
          <source>def dequeueAll[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;]: &lt;a href=&quot;../immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.dequeueAll.A1&quot;&gt;A1&lt;/span&gt;]</source>
          <target state="translated">def dequeueAll [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]: &lt;a href=&quot;../immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;неизменяемый.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.PriorityQueue.dequeueAll.A1&quot;&gt;A1&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f74bb311ad6f96b100a6ada4147fe6d6073d99c4" translate="yes" xml:space="preserve">
          <source>def dequeueFirst(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def dequeueFirst ( &lt;span name=&quot;p&quot;&gt;p: ( &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9c9d99abe0b0091e1422046652e1326b4fda9af5" translate="yes" xml:space="preserve">
          <source>def dequeueOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;])]</source>
          <target state="translated">def dequeueOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ])]</target>
        </trans-unit>
        <trans-unit id="4590a87e3ddcb2464a8edea7bb63bc9c43fef8e7" translate="yes" xml:space="preserve">
          <source>def dequeueWhile(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def dequeueWhile ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="038d9127554f6822201ddb456c863b59470d4548" translate="yes" xml:space="preserve">
          <source>def desc: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">def desc: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="169b8c0cd990217d8fd2b5bf57c97be4146f11fc" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">def diff ( &lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d04b92d125fc03a9463398e559e7474e5e61ee0" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">def diff ( &lt;span name=&quot;other&quot;&gt;другое: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c47d8176cae9d052cad2a51b8a2faa8b1e45382" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff ( &lt;span name=&quot;other&quot;&gt;другое: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2640398eff12db31cd0b8a18d216367252dd1df6" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4b553c98f52ea30410a233a6ce6fa2f2a9003e9" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fab2c2d4015db8887e9241326a4c65f1d5571e40" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d22da2ee967ee35c54d02911cdcbbd981329dffd" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="78ad37bc85daec98e37520ba6fc36cee2c5a5b56" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3d4bb296cc4a9a83d632a8b5a26669a2727b4917" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c652293a1bcd9199fd8fcc2b7cd4cd095daad425" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0eace108583d24deafcfd7c74492c4c66cea2a11" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="91e7b347c9168d35f8a325b30b8dbc1c3826451e" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d0411b28f0e33592e8389e95abe5a411e0b607ea" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e8c0d3a804dd4f4ff5ccb5eaaa21c46dc59ce2fc" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="73ea105478bb1399b7f9d78f36f2d3270ce2f186" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="33a38359389c443bc96130fcd5524ad96eed2b7e" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="221c4e12e90444393743ddc57abadfd73513be2c" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d9f84d8633b0bc31170a84af018abfe08b240c15" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="119523732b62b5ab4eba4b6a939f1b16f817e8e1" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4b5bbc8d24b85050e50d007488a79ff722ce66bb" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8aaf85b58221c481d20aae9bebadafd85a026a02" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e463789abc4c0045ffca23e5bc98c89f8fa0e97d" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="93ff73df1f9dd31d9b620648a5d455adaac1886f" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3e475b5c27db4e72da3b94b8995277100696f5b3" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e3ff2688d92019e328cb7234c9198e5ab4bc2992" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0b5c0ddee58511b6b028cccd3e91e9b0e73d7da5" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d757bae92375bfa5ad6357f14e236bd7e61afa53" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b1d0efc474c7298e9394c09467682e1b7f7585b3" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0231f73a6d29e33c27ed06efef70d021e68f2e69" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d0ee309c6c3f523e81c54724a9dd8a747f38445c" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8ed08d261e1102577fa8b5b071b9750b4c1660a2" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="adbd767bbf10e633e9afef8d5c446ef1bda070c1" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a00919f776fa6154d47ea3e1aea49c7bb13762c9" translate="yes" xml:space="preserve">
          <source>def diff(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def diff ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d93cc16f42994759beaf97b4d100e34414ae7c13" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="7dbd6d042f41b493fa940216772047bb5afcf09f" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="ec21c8a712a636b1b9636077cc0ae0cc0c2d7b68" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="51940aad0eedb879a567c625650ecd167968dcf2" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="92604dff62138b514f4315f4ef33be7ba5062405" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16ad86a6d37ec918899101501ddde99d2e25c98f" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="95198ea7a89d4e08b85a498f2fd3f873b98fc5a1" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="81a7049ac008c231315d74cd42129e253bc21c15" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="e26505136b971a72be2a8502d5fd7eb221e92f63" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="cbb1272adcefe2227c7c4d249fbefc66af5d04db" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="e9b35b8da2a71fe75fdd87a99ae63d9981045ca4" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="2fdc17497b1a1a9366942cc66d45053245e6c010" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="1537e37928d3e831cfe27bad949658e1db39606a" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f85c89184b8107edd56bf7579867359271032294" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="183419a605e2bf8ca5680a5c8ebc43e00eaab8ef" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f9685f6c0249f850a5bd48109efc2be7bdae0ffb" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="9a2f1dfc4a4aa7df0f313b4d444c8a9c59e7a2d9" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="88425020219fe938f364dfab9a4b8086e722d371" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="e5e9eabeec86b96a07fc73c81145c27bb5db50ac" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="ebb321bcc6a8ae69ea3d8f3609bb3cf91095e55f" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="0bc8645636d11870cb75bdc4d640dcd7bb03f113" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f8222ea91bcb0100301940f9dfb685d71f0f3285" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="84a927103fe8b6b9602378d5fbfba09403a89ef1" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="baf4f87bdd48b5310e11f0b0265ff337820ddc30" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="8e99ee37c51c31ea05ab9fa331b0a836c6af50ed" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3531b9c4ce27a22bdb221b205e0c8fa99d90f43c" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf516fca13bf5ecb02792c5957e1eda168764ff2" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;:&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt; Long&lt;/a&gt;&lt;/span&gt; ] (&lt;span name=&quot;that&quot;&gt; что: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt; LongAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3200b998c3f1b71bc06680626c2f1ce90dad21bc" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что:&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt; Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c1ae39b125b1b13a5a90399fb89f859f07cf6f3e" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что:&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt; Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt; Seq&lt;/a&gt; [&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8f62b14b388e966d1e0a256f9723b7a27eba8b64" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что:&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt; Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="044cb576aa0ace2783adaaee293730638ed560d8" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что:&lt;a href=&quot;collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt; collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt; Array&lt;/a&gt; [&lt;span name=&quot;scala.Array.T&quot;&gt; T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fd234fa33e181517a08e5d5ba342b164175113d5" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что:&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt; Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt; Array&lt;/a&gt; [&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6c84023c7b5dd8aeeb5b96bf16fdea75592fd027" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="07b22d16af72886cb8fd9f916457c81e7f0505e7" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="93e488a53a2320eebc53c9be79716b1fefd9b2f0" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="49ebe390023b67e101f8fc3f21e387b281d98553" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4e5fdd80528816401f0352b03a85bdcbb7c0a19c" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a2f86c0788537bfc8078d829a0a98ebb64ce7b96" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fd8c3d4b733a78b032975307f89513c57a138660" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bb8f04455ce7fb331c1c9e819bef66b9332ae63e" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d3a39f133e72f8628de11c3e28c8fc2dcb542579" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5348685b01da723d10992d56e224255b73697863" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="01439ccb26836c484c80bfd1e7ed1ca4a5a0075e" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1efbfa4ee79bbe38d63a998734c74900d56d5e24" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="578f9bca089fb8e1eba6428650682749b69579f8" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a14670846b85c5f06045e9ae640e65bdada75bef" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="88e2c7fc52bdbdb3a5964705781eed20f67f9034" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt; B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt; LinearSeq&lt;/a&gt; [&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="02caebb46ff1b03fb26e888db2f53a2439b3fc9a" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (&lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ec9245bc30a6374a14cdf8eefe0c0019a18193ad" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt; Seq&lt;/a&gt; [&lt;span name=&quot;scala.collection.Seq.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ecb89e4bd70742ea24e5ac5ea53ae038bb6a5306" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0467bc5c075cfcd062de762ea06a26821c74d99c" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] (&lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="74dfb20adb45be5610b92d84195c7f8bd5e3d30a" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b7b3691b3b897048aa6eae7d05908ac9acbd42d2" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e8359d0b7b4b902e30e72a1f9752a5446bcb57a2" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1ffbba1a640d6855898590607ed9ad7a80e6a138" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="163b4086d1cc6e7cd0548b1d423a721df7ae33e0" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d366d03a9f17b033c31740597d3c1a54e2c023c9" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a538be3d21c0680bdb94d5f9c7740e01677d2200" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="17c9bfd4ae08531e09425e25610737b8b390ef91" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f5071bce3cfdedda374450a7c6acf1415fd7894e" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6659f14652d270a33c8505154e5fbbc2978aa8bf" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="23d595fd17ec227abe2b6465b203e703ce507239" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="998511e91dafc6d553f3baf53c192e30d29879ec" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="704721567c83cf2caee202b1e3e4b204c3807171" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что:&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="400a54e695479aea35a23dd1bdd443c7383e7042" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что:&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5b65dfd999fb386b25ec55dadcfd4af09306557d" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d13fe33aa173802f71d09cde09f809fa112ecf32" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b57d5b160b09f67bb56286e727ebf3ef862124bf" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bd434ca480108d2a1ab264d671f72b6ffe3c0d50" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d3729289353ede0e29a9542bda4f40c09b328076" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2c8e7b9e75530a819045208ff10adde037b4068a" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="01fc64e49056434defe8aa54cd80c380a4abb249" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c00988819ec19a93c0141fb2e9c6bb314ea82717" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9c2c8ae53292171b0f8cd9dd0ef52de2c04ed87d" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a05ea6b2dbb66bf9850640dc8ccc8bab115a1053" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="259608f48f55164f492ea0c50ce7f085b64b88e3" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5f2c1c5e563d13270e17afbd0572daabfd3536f9" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2e36cf6282c442e9571300cb8694b4a649b35246" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9863085c01bbc228456401676dbb1094ce671950" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3c10057f90565d1335d191bba1a348e82b24b40f" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bc1f29885a2ac694bd3b8669161bd2d5d33a4040" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="20fb6c3d8327d6e6af96ba8386c946f4d85802ae" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1cb7423a1c79afadc4c5607d9bf20fa9bbc17a53" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f067ec855fb781695161ab71347c334ecde9ffdf" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1439e9bd77034930734466cac5b3d48e0c0f9dfb" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt; Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d2ad5cbf121b8c1f03739fe6001c0920023a39e8" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt; Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dec023c9658d55737b8b43e024d3b3eba10a54ea" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e585cb83ff3455d9d3f8595d9200662bce707666" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="43bb3093a04cd25ad98ea72486c6f0ac92266ba3" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c77fc37fa8c56aeb24c981d4175cd048c46035a7" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c5c84df7ddfb75f6a2b0032dfc04684999cde4e0" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8c9f5594f6e1b056b3b626b6e82423693eb50ffa" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e9becc971094a8261d022be2afa922544afed6b6" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="63c4b27c7149b600757062eb8dc656fa2dd98362" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;буфер&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="585f7dfb55f27f1ebd8c44f2eaecaa73a341919a" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3fda06e3b1d93cf4d9e04d5218beae6ef0e2276c" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="674bd6159947fa070220fe459fc3820c80505f3d" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2b13cd888c4e22777138291d047903705f9b08f2" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="25431b1813c5e3fba809d3a0c3ed74b642cf2dc5" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3d4982c9f2cd60b8a619b92212e26c614603bb8f" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="85123bbd5a1ee53519d8beb3cf1429ea0283151d" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a775b4630a1185000c7a4bf2be3ca98d076961f0" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Стек&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7ce5485ba5669e45e18cf9356d4efe78c660ba3b" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5ed8bf9332f32f1bb107dc56c1cf6a080aafa874" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3d91ba742a056240d79c29ac9c24a37ad6a39b28" translate="yes" xml:space="preserve">
          <source>def diff[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def diff [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.diff.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eb4e2245353cf8c3093045aff1be9df42a5b7636" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="0d3c44b898738f92ed680d839beece0c66ed1ed2" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def independent: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Массив&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2741409f99395a9cd40aef7ff5fd76cee6210978" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="03045a14f391ee2b27280ff48c4973742a4ebe5e" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="64296022bb30b6e1612b0c9caddc3a2ff23ecca2" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4b9431fa34f2db930cd1e14d2eb98dd138ff491a" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def independent: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3ee1ae4aaed8f82d6d65573f2b8bbba7d6e7123a" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="39195ea92ea43a790ac06803d00737c33884ec22" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1e447bfa3a65a69ffa9b5db0b6d7af9e77784501" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ddb8e200214d252f4bd162774bab4be4f2249895" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d7b81af503a07917094ac5582f7d9f88c9f37fd4" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c7906aeee51c07b32b4198986ea33879c6d6a459" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="67345273f4a6f0c2c30f717633a30bdcc51f5a5f" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="7a54d5d47d3695560196c70f1af6c7573c394af4" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="15edc0e8213ad38a0840c8652cc474c8ad0a3327" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="44dc1b3d79737da761a232d9912fead5cb3b0211" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="368dc8dfc814329fda63046d299828e1cd5a76eb" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="744a33fbd2ee3429b664a4af88145b6ffd37d788" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c5df4f389ac1b4f2d02ba6a62e6dad54743b5411" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Краткое&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="98814fabdd1fb919e7d7b1b0161701bff0e05417" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="380f0e22b8daf3c99d10c22e053cae5f1b04cfc6" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ecc09b5a5944a1032b2fb3e545c0ab052adf7c5b" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dccef237540f91373f52051e4af7867a1c2d3eeb" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f318a24b60821d27e5041c2e7369ec0b62dd0d07" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="3324ed6d436d97ffaa583df168b65467f8f6cf26" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="81533cd12594222288ee21659d20086b90481184" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="a4fb76a189df7b703deb158604cd3f357caeac50" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="68f703c12f0b82ccf0eba5024bb8d68676ddc258" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="af123609d1ed7150345066463037843d77214ddf" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="e821dbf9fd19755fd7c9c0d32557045f660b12f0" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Краткое&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="bfdec14d943ece19bd150d794e65d444cb5d5597" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="5e1e61cf590caf0af143e2f3e2a504f7dcc093b5" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0e21a0c864d748e180ff0ae1770d9853b4c023b8" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4d45a526ac99cb1d62bd0db41a66b2134d118ed6" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;буфер&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0729eae62d2b3a4ac19341df06ae98add0c455e3" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;буфер&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="142d6fc7b7e8bb8b321300a0a8d4afa0cafc9ecc" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9c7e9606a19a6a6d657780dbd835c5b55d8b4f83" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</source>
          <target state="translated">def отличное: &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8cab056990e418334cf73e18cfc82fc5e409c3b" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="46f5ff7555ac9f965483ef2116077cd9994e6693" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f0c37cd2643e05b5177ee900f60621183716d960" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2a9dbe81332fc7db87ba04f344d6c43e2755083b" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="17452e81940fb06b4ca2f005156b35fd25669f5c" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="502deda8c701740041209879a4417bee9c4cff43" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8e89b7a824961edc36de3e10daf4aa6193abe8e6" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9b041a3045b2ba5bea8b4b55e897eb69d458edd4" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</source>
          <target state="translated">def отличное: &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce52824506b0636635de44f08a94bd7803d35d81" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def Different: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="567475e035174d98d49a19bf6e9e290d3f957140" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def independent: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6d8f06cf526baf0a0805871e12f088a1150f2070" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def independent: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="547227ec820b0e779e49ba4902a28b771a393515" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def independent: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c6fe3845eed83e30432daa60bf79a14e86723e5e" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ae68d806b9962196d03100182d0787c9d63c7e95" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f12fc92aedc0e48f250f5af0fa4cd768bca6b712" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6e7a7b7133fa6b0a2fd1659666d045c5ce0079fa" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Список&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Ничего&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="7e2f39b0d2edeb837eedd8abdf799744a6276757" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Список&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5991d06bb5b9551dfc523f7e3254f1b3fce0d377" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Список&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="885b6de76b101b618776e6bcc54edab3b93428fb" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="38365f711040661c8afb0432670c116179ba7f0c" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</source>
          <target state="translated">def отличное: &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3e5342ce7c01683a77881fb405c470946dc7c7a" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7574f219d7252c4cb3e27a06a44eb72fd6a90877" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d25d1e3a7f787d06c4bb15e6bd01a8405cc2ecef" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;</source>
          <target state="translated">def отличное: &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Диапазон&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41468a1bde49b5797745ab87969b98d57a9f7bca" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="43e9e77947ca099659900a70026625e0dfda8e34" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="661b82a09259ae024304748326fc0ee1fc1b68e2" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f9d00fc598ba80fedcf3da2da45725609378d5b1" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="de359c3f806ef3cdd7fde0f24ed4339281ac4e52" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ebcf171666ddbdc27694c1fd1050ccbdf70efd4c" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cbfc904321673aaec359b242f49ccf81c9231d0b" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Стек&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="67b863dc7aa223e113e22f5b513c1c6d8127249f" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Ничего&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="ce5b7e634b0e8a4a094ba3003d2530ef00509ea9" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a654540ea76a40563be8f312aaec1c33eb41ad6f" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9cc2d5d7cb8d5ba98ac41c7c345f34af3d714a19" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def отличное: &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f63e0e439ad051d1002084c746dbb493f3bf4ad" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def отличное: &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="574e11eca7d241caf85677e1550e5da685fa0926" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def independent: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Вектор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fc23650f5f582dfc763bd60aae20d2df59bee88b" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def strict: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="0ad39bb6c35a29f971a977ac49e27137561bb75d" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ec354351a9dad3ae42570ca81963e7322e1442b4" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e14ee51c73fcc03cc63fcbabd2c46061756ff97a" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="58d1c48fcc8d4843858b05332b43443fad045b4f" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b9d17ba1bae0f6646889f3c077979620112f64c7" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1e0f8a6941cc1b5b1dc86560dc7d720e6a71a378" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0f342cf0426b4bcf15a43e3d29af133c3f1fb5bc" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="15f6011604c27304136719e5c0b4a64f27bfa466" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cc8ed050ecfc65a234a544d5e812169c060bdb73" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def independent: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2224b519b61a36d23fda18d38d5d0e088f19d06a" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1abe56221a738e3d0a131f99f3d67b7eb7472427" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dc4bfaaa24824ba706cdeb111f518d825273ad0c" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e02e22ab682c154307507715dd8b9bd3bc43ca8b" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b66b969dc5a9e00f28f099ef7d40d333c6ddf28e" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7d09c555bdd7e80b568e2c3c9cd209a9a068091f" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ca2a4b614b5892b9a474090ac962a916e01d2ec0" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="85cae63fa7e708b30b8fc9f6fbd65649f38a6ccc" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="85f39226e53b11ec1ea381df15ad27c135d5f01b" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="99be7d2c35bb441a923a605d56b73f027b0263cf" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f117a112c6800b10a74a190d3f427bad4ce6938b" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ca453686da2edafb05db898db3cf6ca68680376e" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def independent: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="01f301dd2f9e2055896dec18d80fba4ba8728efc" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fcb1ccce067d2a01e2bf77577f8e3d8e535058b5" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="45cafe87e92a6e88c35df9b24c10b76fb979d806" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="44995a82186577a7a899c3f50735f5cc6d74085b" translate="yes" xml:space="preserve">
          <source>def distinct: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Different: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
