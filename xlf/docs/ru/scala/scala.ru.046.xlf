<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="9e8a26e1c5b1920e0e70e3df7533bd99a7292c57" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="c06baf3bc9d6d3ae545507af08786fa290916f8e" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="84c85965332a5f748e0cff29c776487b7601325e" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="78120b82aeaf8c1a4bfd93d97f467a0171b60c56" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="4f693b4fd89390388accd8b9e549610899aed69f" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1142f887c1ed0ce8b10d4a84900996c721897ef5" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="237a9dad79169d724d72eb37b94a0f4e97c6d890" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="1f50c6eb851fcfe7d31428e82bdbffaaec6b1582" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="c95b111c573b251fa3b9efcea035f74389a7fd74" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="82c15da7948353cc3e78b2580949c4fee9116845" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="3d799cf77f74bd232f6a5a09c197cc4f1e8b8051" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7a37cff7867de8e2703dbbdd7c9b15d23123162b" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="561c7bc4c63e07a80beda0442917b40fe02248e8" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="4c06653520feb01e696c128d8ce041646674421b" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="6f7e184f6d4ecd19b227f5db0c03e012a74756ad" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="acb37274e2c11877277fb987bd163cffa035dd6a" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="4d8cc495197518e6534e24d102b7dce22d5126ff" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="e4e0903fc8de03178eea2ea9901852220b50acfd" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="969f274aedac0247c3b243e2f932ceedcdb5a2e4" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="8192d048a529a0a25bab657b00b415b9121254ca" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3a7c6d1748aeb99826a40eaa43ffc6350709bfc3" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance]]</target>
        </trans-unit>
        <trans-unit id="6958c5c08de4aed9505b7ab725155c3fee2c0136" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d3be0c4ba77e7e9ad0cbec54ce2cccc15d4d4bd4" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance]]</target>
        </trans-unit>
        <trans-unit id="3bb8c080ed0bf52d75634da084a3d141383dbdee" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e73e16302288d0acf05347fcb9c55fc01fb0ab96" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4e16e020400027c1fe11f4c585e5a57505d11aa6" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, V @scala.annotation.unchecked.uncheckedVariance]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , V @ scala.annotation.unchecked.uncheckedVariance]]</target>
        </trans-unit>
        <trans-unit id="1e5860ba9efba7ad9ca8c7887bd675d89b674211" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="10ab609b65fd05a3ccf8dadd35c0242eb0fb71ad" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e0a30470543746a5eedb3bb418e031e11236449e" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="09d0e0a04f19f40db7d238deb2ef161e7c0e3557" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, V @scala.annotation.unchecked.uncheckedVariance]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , V @ scala.annotation.unchecked.uncheckedVariance]]</target>
        </trans-unit>
        <trans-unit id="8dcb3edec977428b441b9deca55715394b91d155" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3fc6d4690af22d7b23bfebcd52a5475f7ce3a3cb" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance]]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance]]</target>
        </trans-unit>
        <trans-unit id="9a02ecb6a9876a42569784e91e5248aeb36946f9" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9bf385b27124d3a966681bf67f9e0b87762e034d" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aac264ac149e9d606eed1a4fb20d0381d874ff18" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7abbea2e560cc37222e7bf1d0aac7135d20505e0" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1259b81b0413931ba1c0d90aa162cf20eae22d07" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fa130b80a55102ac8f060a5782120f0e87e05988" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cf2cdd653277a0f60d24988156ccd3b272fb2521" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="db71d0b4e1737c3b3c9b81ad90b7eb7bcfc091dd" translate="yes" xml:space="preserve">
          <source>def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def inits: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7af17e79b665502ffb62e6a9036a664c8dd03bc1" translate="yes" xml:space="preserve">
          <source>def input(&lt;span name=&quot;connect&quot;&gt;connect: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.sys.process.processInternal.OutputStream&quot;&gt;OutputStream&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def input ( &lt;span name=&quot;connect&quot;&gt;connect: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): ( &lt;span name=&quot;scala.sys.process.processInternal.OutputStream&quot;&gt;OutputStream&lt;/span&gt; ) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Единица&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c9ca4b8874202721214c83581b9653bbc6e3db0" translate="yes" xml:space="preserve">
          <source>def insert(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def insert ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3de6173f8a77d865c0f3da43fb6967203ae4ee1" translate="yes" xml:space="preserve">
          <source>def insert(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def insert ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="194dced1548d5a4483e884d45cb69feca74ff8b5" translate="yes" xml:space="preserve">
          <source>def insert(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def insert ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b81ea4096d2bc134bfbd15e69926dc67f5c8e00b" translate="yes" xml:space="preserve">
          <source>def insert(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def insert ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b901a1d7cccb565f247b66bdc55108e6c633a289" translate="yes" xml:space="preserve">
          <source>def insert(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def insert ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47d8ac358cceddbd3445926a17030469d654c8ee" translate="yes" xml:space="preserve">
          <source>def insert(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def insert ( &lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb8b32af9c0beff2f4925183248f43df597afdb9" translate="yes" xml:space="preserve">
          <source>def insert(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def insert ( &lt;span name=&quot;index&quot;&gt;индекс: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d8c7eca630a977acf22ae01d927eaadc79b33d3" translate="yes" xml:space="preserve">
          <source>def insert(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def insert ( &lt;span name=&quot;index&quot;&gt;индекс: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67a15ff3603aa35eda8ef3c33b365102d8c24fcd" translate="yes" xml:space="preserve">
          <source>def insert(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def insert ( &lt;span name=&quot;index&quot;&gt;индекс: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a25dc06280655dfce692c801767e48332e9d90a" translate="yes" xml:space="preserve">
          <source>def insert(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def insert ( &lt;span name=&quot;index&quot;&gt;индекс: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af5d54c1cbcc8a4ca3f6350d20fc43986e426103" translate="yes" xml:space="preserve">
          <source>def insert(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def insert ( &lt;span name=&quot;index&quot;&gt;индекс: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2d9f1862d120f8bffd5010ff89c05311d005732" translate="yes" xml:space="preserve">
          <source>def insert(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def insert ( &lt;span name=&quot;index&quot;&gt;индекс: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4f2b5c984b6c3ee0d8a5771e51c84b0e6d90d85" translate="yes" xml:space="preserve">
          <source>def insert(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def insert ( &lt;span name=&quot;index&quot;&gt;индекс: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f771de7db41bef57f2607c6f1cf4c1ff7dde22e7" translate="yes" xml:space="preserve">
          <source>def insert(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def insert ( &lt;span name=&quot;index&quot;&gt;индекс: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="829e584bae205813224fb1e1133b892b7a9fdab7" translate="yes" xml:space="preserve">
          <source>def insert(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def insert ( &lt;span name=&quot;index&quot;&gt;индекс: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74d9c50374bd750e060df1de40338bb47661b13f" translate="yes" xml:space="preserve">
          <source>def insert(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def insert ( &lt;span name=&quot;index&quot;&gt;индекс: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72a4d897f1d4834db28aa78ba9e78aa949aecb17" translate="yes" xml:space="preserve">
          <source>def insertAll(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elems&quot;&gt;elems: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def insertAll ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;elems&quot;&gt;elems: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e989fb84fbf47852e8b36ee54d46e0a39b97fd1" translate="yes" xml:space="preserve">
          <source>def insertAll(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elems&quot;&gt;elems: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def insertAll ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;elems&quot;&gt;elems: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ac778c7a9c99e3d776e4ae33c3369b868faa1b71" translate="yes" xml:space="preserve">
          <source>def insertAll(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elems&quot;&gt;elems: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def insertAll ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;elems&quot;&gt;elems: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39ad760420737f90a6d2998ce830fb46439abc4d" translate="yes" xml:space="preserve">
          <source>def insertAll(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elems&quot;&gt;elems: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def insertAll ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;elems&quot;&gt;elems: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41632f7e9fca40731270a2b88b02a812b4d93dba" translate="yes" xml:space="preserve">
          <source>def insertAll(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elems&quot;&gt;elems: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def insertAll ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;elems&quot;&gt;elems: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08d09b7843533119f33ad756d11e38197325f23f" translate="yes" xml:space="preserve">
          <source>def insertAll(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elems&quot;&gt;elems: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def insertAll ( &lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;elems&quot;&gt;elems: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98afb26e1339f17baeee0e11743d5d9490f5ad78" translate="yes" xml:space="preserve">
          <source>def insertAll(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;str&quot;&gt;str: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;offset&quot;&gt;offset: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def insertAll ( &lt;span name=&quot;index&quot;&gt;индекс: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;str&quot;&gt;str: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]&lt;/span&gt; , &lt;span name=&quot;offset&quot;&gt;смещение: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5befa961e5291b9fd472944e8d88e8da5a9461c" translate="yes" xml:space="preserve">
          <source>def insertAll(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def insertAll ( &lt;span name=&quot;index&quot;&gt;индекс: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79a00229105377538b63550170c39541c3668b85" translate="yes" xml:space="preserve">
          <source>def insertAll(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def insertAll ( &lt;span name=&quot;index&quot;&gt;индекс: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e17680ebbec10092511e7e04b208948c1121bcb" translate="yes" xml:space="preserve">
          <source>def insertionPoint: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def InsertPoint: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d1a78b63e9805c79c8ad1be96ffeac21904400f" translate="yes" xml:space="preserve">
          <source>def intMapFrom[&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;coll&quot;&gt;coll: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.intMapFrom.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.intMapFrom.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">def intMapFrom [ &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ] ( &lt;span name=&quot;coll&quot;&gt;coll: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.intMapFrom.V2&quot;&gt;V2&lt;/span&gt; )]&lt;/span&gt; ): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IntMap.intMapFrom.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b54e35a8cd440f5bf82174a9fa4d0ec832d66d44" translate="yes" xml:space="preserve">
          <source>def intValue(): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def intValue (): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8e50e7d4bfa176a857e8a964ce3baf45af98c64" translate="yes" xml:space="preserve">
          <source>def intValue: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def intValue: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c67bb958374020e129449b6294734f4bf776b03" translate="yes" xml:space="preserve">
          <source>def intValue: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def intValue: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5403429f503ae8bdd97c41ec2cd367dc0ded1bd8" translate="yes" xml:space="preserve">
          <source>def interrupt(): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def interrupt (): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Единица&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2a9a87ff8e1227b8e5f1d0e7a5143720c78bd4e" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">def &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;crossct&lt;/a&gt; ( &lt;span name=&quot;other&quot;&gt;другое: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]&lt;/span&gt; ): BitSet</target>
        </trans-unit>
        <trans-unit id="520e5364e3c7464a9b646a8c3bf68d02cd52e143" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">def &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;crossct&lt;/a&gt; ( &lt;span name=&quot;other&quot;&gt;другое: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]&lt;/span&gt; ): BitSet</target>
        </trans-unit>
        <trans-unit id="4da26fa2060b0a204829732c88a860d0552005f9" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">def пересечение ( &lt;span name=&quot;other&quot;&gt;другое: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1282bf3a6c80d77d0f2053040715b947b09a70d" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def crossct ( &lt;span name=&quot;other&quot;&gt;другое: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="042c8717e1051c2f488961987bc538b2c01fcb19" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def crossct ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="328eb459f0c3cc38d67d3ec024b433cec06fd338" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e4f318e373e4cbeeff04e4974c08f784493eb448" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def пересекаются ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="705b7aff5110e4a413562a75a9b331a5f79d50f2" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def crossct ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5f3fc6e7afc2e308331c77a112808e8907ba5688" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def crossct ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d05de4c3d1edcecd0e455032da925d939ee79bd4" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def crossct ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="18c519d16541838a044af0a0ee3627dd264fd8c6" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def crossct ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="150ff5af200abe611e536c20593009b530f72355" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def crossct ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="be817ecde956909a83cdfd1bf8bb5865c9d380d9" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def crossct ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8b6942faf3038bf0080919954681ede55ec829a4" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def пересечь ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ce6f3541fed40f0aa4a864112c4e43c8a812862f" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def пересечь ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="42b8edbbb7fd7dc2cf9269b75420bef4aa3440aa" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def пересечь ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="41da2a5a3a1c6fb1b4f635cb9a7d818a21053888" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def пересечь ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3975da6b1c0db7545f4dc3938a844a31cd09f0c3" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def пересечь ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dbc47fd5711124af633e664e72c457774f6acb8c" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def пересечь ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b43163e24522d404ee022253c896f22faab960c0" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;crossct&lt;/a&gt; ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): TreeSet [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6c4f2f37c203dd0588d5b392972bb8537e107e47" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def crossct ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b17cfa4afd597ee6c0c77474415195d879255912" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f19961113b164534dd01f5b4b4003c6f4a821d8b" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def crossct ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="865e2a27e49601842fe8003c34e739c828309087" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def пересекаются ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e881e3eb48dd17d64cc6294249e8e7c77ab76fc9" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def crossct ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0095dda0ce686d0e605d4abe20d5b35414350a24" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def пересечь ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fe8f03f8c7490ca27f12e7fee8a54005a91f6660" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def пересечь ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="59a9e1d021540d9a67b4614cd24f44acb5fda7e8" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def пересечь ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9cfc0cb422aa2d8eb23241bed04118057ae7a2b7" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;crossct&lt;/a&gt; ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): TreeSet [ &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="85f6d0203303b9dba9e45546ca1df0598807d748" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</source>
          <target state="translated">def пересечь ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;collection/set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; ]&lt;/span&gt; ): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="269701b00b3efd717082c5912e758c221f7cc51e" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def crossct ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="435f41e391f2d913d8c2bd48d425fa0b0540b9eb" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def crossct ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bc39a996f8178f9f9eb2d6571acaad3b73d9dd3e" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def crossct ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3ae2fec30bea69dad404036ec7719f2a213f3b0e" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def пересечь ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="984e96690f74582e0a8d2c41843fc810d1e2a44f" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def пересечь ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="322730d56f9798de4754af40d9b91527b31be73a" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def пересекаться ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2a720b42a5b5fda953a4501dca276b7f08165b3e" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def пересечь ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="66e7f215d3840a2dd428aee1ffb972c29fcf1f68" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def пересечь ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6f335a592c13012b25ce3a9acc30a1ba2c838195" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def пересечь ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2a835e5826c9821e57d9c8b339066cc5769e0023" translate="yes" xml:space="preserve">
          <source>def intersect(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[A @scala.annotation.unchecked.uncheckedVariance]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance]</source>
          <target state="translated">def пересекаются ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [A @ scala.annotation.unchecked.uncheckedVariance]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [A @ scala.annotation.unchecked.uncheckedVariance]</target>
        </trans-unit>
        <trans-unit id="739dad689214ecdf5ad24a51d1bfd08bb3855f19" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a380e70217dd86a7d61d37ad493fc3d4b7e1222" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="d05d95c39a54a08e1a51607f37cf1b3b42da6f68" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="2074d1ba3e7c049ab53106e8370c82c64cd42065" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="54caf4dfb197781734952c829e5fce7dbf592987" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d8b704a9d4414b8f4a72dff636457335d45ab76" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</source>
          <target state="translated">def пересечь [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ef932ec33384b1187bb30377f2f81a374041dba" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c7f0e2e4d1a03979d8043f4bb21893be7b04ff75" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="cb1b6ba8f731ee3dacc0903c0650121258cda157" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="ac675f7a0578875bae80a9871da8dab4e7514072" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="07f9dbf2eea00de4b37b54af15ac2e85bd79f405" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="translated">def intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="2aeff070cc0dbaaa1bb0515670f8157292dc2e12" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="translated">def intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="5e773da5723feea884f5f06fa04ed2a9bfbef8c2" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="21ffd266aaa705e6efc0cce43a37d7110cf0fcb8" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="868cf83610e1bad917620b88f03a9e258bc96c0f" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="656b4d09d9aa235707fb91e04eb222b62aff5771" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="e9cde7ba4b786ba3d751b8fd8029c7b83046855d" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="37391b7512f080bd52809c51d4b08c68ff3e27b8" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt; Stream&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="5beef3ce7ea2eed9bbaa575ec5994420f7fc6ee5" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt; List&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="140dd7ea84bc4ab136f8184e9bca37bc327df9fd" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="translated">def correct [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt; ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="0b2aba9f4cc0b782c44313bb489c54a4ea63d6d3" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="translated">def correct [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt; ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="5bfc58468f1d5d39ae64e29dd20dd98e0250b3fd" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt; ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="cf46bada242a9720eb84bb58f6290834af4824a0" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt; ArraySeq&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="151e0c4d3a557df7b1f6f9d09415172ff1e62723" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def пересекаются [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="b2337cdeb98d64cf62be24dcdb9806a6777f64b8" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0eb8b97dfb656d2234bfe19e661e026d0a1ab28e" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2970a7cc28361a8c752447332b30a83fc857abdf" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48bcd1e001c060bb682bb2a5d89f84173b412070" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def пересекаются [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6c05119c3d8b9e1ee82c59316e3cebb3b3e95fbe" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def пересекаются [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt; Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9cf12438d443a0857964f08d119f1140e01a873a" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def пересекаются [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0ea1d60bd6b031d1886bcaa24dbb9d0f7c5f0ac1" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt; Array&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="564d2f04f672a730f8f846ecd396c306960988da" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Массив&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ef38ad2a04500c00225dede585584d7380579257" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2525971656f5f884271991e266260ab504ebf8c2" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def пересечь [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e5f87d7393fc50aafeefd546b6107d06b684ab62" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="034cf953e9aa45228ae2e199895b698464d10755" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c86d9f8a18d2b149a855fa2537fc08de80e4ca07" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="45572862678da5ef4926558c63bd614201d55dd1" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="76d79efd98ea56f8466c7e58863475935faf7ec7" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bd02d39bf8d8639015a7f865018e4fb91b322900" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a9216a76683ab30f359b711df09ddd007709c3d8" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e84a387c943c31174d54176133471c763a3b0912" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8e1f5ee720c7bc5d9db8fbcd6cca5c61e69ee07d" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5d18604934c13e2c67100c1018e015d2828cc2e6" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="38db6bb48544051e40242593824d3853a6ccba79" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="229cd825a9f1999f94f10ad9c98324d59950dd3c" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c2f93a13ff7d3aaaaf4299a6df08496ea9b322c7" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a2b6232251e77f49f47f5e5313031c6615f060d0" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def пересечь [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8a4ffca54037cacb79a555c5ae2bedc8ebf810cd" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def пересекаются [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3187e1cfc57ba9b60966a409646e6095c92d2dac" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eab55ae11fd41073a4de759b5db9895a221ec73c" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def пересечь [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2bf5f88ffd60992c43fa299e841bd45a8be35ac4" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3b9c74a0d1533b3e7ec0f7bf968c8be8b64da11f" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9240ec9db94d661485d578953e96e72c204b6046" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="23ee2fe9ca0086a96334befcaf9bb2edf3c9949b" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="665631ed2759a61266efc2e2b2b75c2ef9882244" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="034b4202e71f3ccf3c9ffcf58158ecea14296289" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8932aa7fa3c98c51e9e44733dbba3e2c27697210" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b2dda974f6fb0a02527cddc63ea912edd0e35bf3" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="329bf8e47fbb75c3fa4497f59005f417d88ed0aa" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="466dfcad4cd1ff2d75ca8d1f38ce6a34edfef588" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fc4750024f7166a60ed6b335d0b1f784b53399fd" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c9bb74fedb5e5f0d60d304c6985c9e71a0ae3eba" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt; View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4817fa8f3217c3a34f2df5f5216bcb6e147e814e" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def пересечь [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="06da53736c5f6e75eb00ba08172ead62b62f9960" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def пересечь [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bc98f2ff8023935399fdca91648466bffbbd5338" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5230f876da05ca9129db1331d44c3985a36aac74" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dade43adeec833039ffb3ee9a72586c6f7433f6a" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt; A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e7318568a2514457341d2410944081d2f46e48c4" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9dd9c224f68b8846e17b6bf3680d28be27cae277" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="09f4e2c71af71f2c953ca4acf6ed91971a5a50ea" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt; C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1d8cfe5ecc80d1eacaca63380402e5bfff60c001" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="00390fc83d339ac2a29c34f45d02c265b17d18fb" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f60c70a578b805d400a2c037e3878dfd5b6627dc" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ):&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt; C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fc8ea2306c842ad90273a681e8bcc7d9819c65db" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Список&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e94ba745c328b766b6b1c5fadf17e50dd58b2983" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt; T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cc7c0a0913c6d7e8cf42d3e11d932bdc0b5df1c7" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt; T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="069459029ab879854cb0d6bc62fd9800c53565bf" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt; T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e5fa65af4764174eadee4a4572fcb6a2cf30a277" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f3730d6ac68a72f7ee2ae96ac0db83f08fcc7e34" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e6dccad3caa1a44056fb650d45f2544e29e666b7" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8d1be75698003dc67daaf0b13b286e5ad69717ec" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="593abe50cd8e9ffb3b9df9ecbd11acc4237edd9d" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="480941aed5f0b248c14f12389e2c37689a21bb38" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="31d229e2b918629ca4df1f3dec5140aea7bc5267" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="03db52329b827b68d27ffd2ba0bc0cf121c705d7" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def correct [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="90838ddbe3262ca70c576e5eaef68d9f10cec261" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="569c33ee27cb63d06b9f197c59be63053dcab297" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a2a0693ecbe1080cc4c30883b9f8e0eb41dc03dc" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="538e974de1f0227981266be0ee60cd8574e47cc5" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ce131859a2847026097fe6eee6c99772f8cfbb3a" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="594b189cc7e5c3454eccf5dde4b8040bc6b77ac5" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="458b83e77af21d83d56ad0acb22842477750ec3b" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8a1a3158825b810bec8ce1dc3ffda4ed8c0af027" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def correct [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1b97befb6c2759a13268d9d0779d6023d721c20f" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="368e25d8747b68d68d8fb42f1d27e8523ae9f334" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="68f7bd4d67f25d6d29bf6ea89a693919be4dda76" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e6143d4cb54116ddb44b3722ecaa6d5797f52118" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="690a0bcc755f7741eb2f49332e9fb35ec2c0b66f" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bab43712f6651f85fae92e8c91fee8023c9a302e" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="20f883150811ebb9b1ec9658a6bd99f81157229e" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="44a8a0c7f6fbb50b206179dfb4a88228c6fa1a43" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="105c7748b08ac545e61c26551d8d84569ea5b2d5" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8974d7435f3280c0908f4f2a6b2878b9e7bb351d" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;это: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="082ab491f513c5766369b079aac4e54ff825ed49" translate="yes" xml:space="preserve">
          <source>def intersect[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def Intersect [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.intersect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a512aa14caff2ecf1d3bfd2d94851daa200489f7" translate="yes" xml:space="preserve">
          <source>def intersectionType[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;parents&quot;&gt;parents: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[_]*&lt;/span&gt;): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.Manifest.intersectionType.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def intersectionType [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;parents&quot;&gt;родители: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt; [_] *&lt;/span&gt; ): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt; [ &lt;span name=&quot;scala.reflect.Manifest.intersectionType.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ca034c533879e78d56a8547a89e630a61ce60b06" translate="yes" xml:space="preserve">
          <source>def intersectionType[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;parents&quot;&gt;parents: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[_]*&lt;/span&gt;): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ManifestFactory.intersectionType.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def intersectionType [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;parents&quot;&gt;родители: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt; [_] *&lt;/span&gt; ): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt; [ &lt;span name=&quot;scala.reflect.ManifestFactory.intersectionType.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2616c477c38022271208a25df540eb099828b17d" translate="yes" xml:space="preserve">
          <source>def intersectionWith[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.intersectionWith.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.intersectionWith.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.IntMap.intersectionWith.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.intersectionWith.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="translated">def crossctionWith [ &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt; , &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IntMap.intersectionWith.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.intersectionWith.S&quot;&gt;S&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.IntMap.intersectionWith.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IntMap.intersectionWith.R&quot;&gt;R&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="701d072e3b004fa93da0d5bf9e0b8db15c48304f" translate="yes" xml:space="preserve">
          <source>def intersectionWith[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.intersectionWith.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.intersectionWith.S&quot;&gt;S&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LongMap.intersectionWith.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.intersectionWith.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="translated">def &lt;span name=&quot;that&quot;&gt;&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;crossctionWith&lt;/a&gt;&lt;/span&gt; [ &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt; , &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: LongMap [ &lt;span name=&quot;scala.collection.immutable.LongMap.intersectionWith.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.intersectionWith.S&quot;&gt;S&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LongMap.intersectionWith.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LongMap.intersectionWith.R&quot;&gt;R&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d6774b8cdac6946deed8297ccc4cbd5d18bbcd34" translate="yes" xml:space="preserve">
          <source>def intersection[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.intersection.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def пересечение [ &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IntMap.intersection.R&quot;&gt;R&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b822d3bbd1e178e59149759830926510ade65f4c" translate="yes" xml:space="preserve">
          <source>def intersection[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.intersection.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def пересечение [ &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt; ] ( &lt;span name=&quot;that&quot;&gt;что: &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LongMap.intersection.R&quot;&gt;R&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4024986a18dcb374fc7d63581eca526933e92b2a" translate="yes" xml:space="preserve">
          <source>def invert[&lt;span name=&quot;El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;It1&quot;&gt;It1 &amp;lt;: &lt;a href=&quot;index#Iterable%5B+A%5D=Iterable%5BA%5D&quot; id=&quot;scala.Iterable&quot; name=&quot;scala.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops.invert.El1&quot;&gt;El1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;It2&quot;&gt;It2 &amp;lt;: &lt;a href=&quot;index#Iterable%5B+A%5D=Iterable%5BA%5D&quot; id=&quot;scala.Iterable&quot; name=&quot;scala.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops.invert.El2&quot;&gt;El2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;That&quot;&gt;That&lt;/span&gt;](implicit &lt;span name=&quot;w1&quot;&gt;w1: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.Tuple2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops.invert.It1&quot;&gt;It1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;w2&quot;&gt;w2: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.Tuple2.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops.invert.It2&quot;&gt;It2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;bf&quot;&gt;bf: &lt;a href=&quot;collection/buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops.invert.It1&quot;&gt;It1&lt;/span&gt;, (&lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops.invert.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops.invert.El2&quot;&gt;El2&lt;/span&gt;), &lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops.invert.That&quot;&gt;That&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops.invert.That&quot;&gt;That&lt;/span&gt;</source>
          <target state="translated">Защиту инвертный [ &lt;span name=&quot;El1&quot;&gt;EL1&lt;/span&gt; , &lt;span name=&quot;It1&quot;&gt;It1 &amp;lt;: &lt;a href=&quot;index#Iterable%5B+A%5D=Iterable%5BA%5D&quot; id=&quot;scala.Iterable&quot; name=&quot;scala.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops.invert.El1&quot;&gt;El1&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;El2&quot;&gt;EL2&lt;/span&gt; , &lt;span name=&quot;It2&quot;&gt;IT2 &amp;lt;: &lt;a href=&quot;index#Iterable%5B+A%5D=Iterable%5BA%5D&quot; id=&quot;scala.Iterable&quot; name=&quot;scala.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops.invert.El2&quot;&gt;EL2&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;That&quot;&gt;что&lt;/span&gt; ] (неявное &lt;span name=&quot;w1&quot;&gt;w1: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;: &amp;lt;&lt;/a&gt; [ &lt;span name=&quot;scala.Tuple2.T1&quot;&gt;T1&lt;/span&gt; , &lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops.invert.It1&quot;&gt;It1&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;w2&quot;&gt;w2: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;: &amp;lt;&lt;/a&gt; [ &lt;span name=&quot;scala.Tuple2.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops.invert.It2&quot;&gt;It2&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;bf&quot;&gt;Б.Ф. : &lt;a href=&quot;collection/buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt; [ &lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops.invert.It1&quot;&gt;It1&lt;/span&gt; , ( &lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops.invert.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops.invert.El2&quot;&gt;El2&lt;/span&gt; ), &lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops.invert.That&quot;&gt;That&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.runtime.Tuple2Zipped.Ops.invert.That&quot;&gt;Это&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3422892476a8c0018cec3cdfe9e44cbb5345dd45" translate="yes" xml:space="preserve">
          <source>def invert[&lt;span name=&quot;El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;It1&quot;&gt;It1 &amp;lt;: &lt;a href=&quot;index#Iterable%5B+A%5D=Iterable%5BA%5D&quot; id=&quot;scala.Iterable&quot; name=&quot;scala.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.El1&quot;&gt;El1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;It2&quot;&gt;It2 &amp;lt;: &lt;a href=&quot;index#Iterable%5B+A%5D=Iterable%5BA%5D&quot; id=&quot;scala.Iterable&quot; name=&quot;scala.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.El2&quot;&gt;El2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;It3&quot;&gt;It3 &amp;lt;: &lt;a href=&quot;index#Iterable%5B+A%5D=Iterable%5BA%5D&quot; id=&quot;scala.Iterable&quot; name=&quot;scala.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.El3&quot;&gt;El3&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;That&quot;&gt;That&lt;/span&gt;](implicit &lt;span name=&quot;w1&quot;&gt;w1: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.Tuple3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.It1&quot;&gt;It1&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;w2&quot;&gt;w2: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.Tuple3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.It2&quot;&gt;It2&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;w3&quot;&gt;w3: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.Tuple3.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.It3&quot;&gt;It3&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;bf&quot;&gt;bf: &lt;a href=&quot;collection/buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.It1&quot;&gt;It1&lt;/span&gt;, (&lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.El3&quot;&gt;El3&lt;/span&gt;), &lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.That&quot;&gt;That&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.That&quot;&gt;That&lt;/span&gt;</source>
          <target state="translated">Защиту инвертный [ &lt;span name=&quot;El1&quot;&gt;EL1&lt;/span&gt; , &lt;span name=&quot;It1&quot;&gt;It1 &amp;lt;: &lt;a href=&quot;index#Iterable%5B+A%5D=Iterable%5BA%5D&quot; id=&quot;scala.Iterable&quot; name=&quot;scala.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.El1&quot;&gt;El1&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;El2&quot;&gt;EL2&lt;/span&gt; , &lt;span name=&quot;It2&quot;&gt;IT2 &amp;lt;: &lt;a href=&quot;index#Iterable%5B+A%5D=Iterable%5BA%5D&quot; id=&quot;scala.Iterable&quot; name=&quot;scala.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.El2&quot;&gt;EL2&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;It3&quot;&gt;IT3 &amp;lt;: &lt;a href=&quot;index#Iterable%5B+A%5D=Iterable%5BA%5D&quot; id=&quot;scala.Iterable&quot; name=&quot;scala.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.El3&quot;&gt;El3&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;That&quot;&gt;что&lt;/span&gt; ] (неявное &lt;span name=&quot;w1&quot;&gt;w1: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;: &amp;lt;&lt;/a&gt; [ &lt;span name=&quot;scala.Tuple3.T1&quot;&gt;Т1&lt;/span&gt; , &lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.It1&quot;&gt;It1&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;w2&quot;&gt;w2: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;: &amp;lt;&lt;/a&gt; [ &lt;span name=&quot;scala.Tuple3.T2&quot;&gt;T2&lt;/span&gt; , &lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.It2&quot;&gt;It2&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;w3&quot;&gt;w3: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;: &amp;lt;&lt;/a&gt; [ &lt;span name=&quot;scala.Tuple3.T3&quot;&gt;T3&lt;/span&gt; , &lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.It3&quot;&gt;It3&lt;/span&gt; ]&lt;/span&gt; , &lt;span name=&quot;bf&quot;&gt;bf:&lt;a href=&quot;collection/buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt; [ &lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.It1&quot;&gt;It1&lt;/span&gt; , ( &lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.El3&quot;&gt;El3&lt;/span&gt; ), &lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.That&quot;&gt;That&lt;/span&gt; ]&lt;/span&gt; ):&lt;span name=&quot;scala.runtime.Tuple3Zipped.Ops.invert.That&quot;&gt; Это&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5ef3b84e2da37e063999eb7e62cd0187f46df173" translate="yes" xml:space="preserve">
          <source>def invoke(): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">def invoke (): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Единица&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f4a4f23b271b9a4ecb264fb2edff9fa510a08c1" translate="yes" xml:space="preserve">
          <source>def isBinaryDouble: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isBinaryDouble: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2fdc541ac012ebd2d4aa4f43c5b877f223bb6892" translate="yes" xml:space="preserve">
          <source>def isBinaryFloat: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isBinaryFloat: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8d7e139662e1505e0528f6175fecf9bdd9c6f73" translate="yes" xml:space="preserve">
          <source>def isControl: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isControl: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="15f6d19a333c0e775a49ece679af458f2d4173c4" translate="yes" xml:space="preserve">
          <source>def isDecimalDouble: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDecimalDouble: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f4ab91fce27bf49536d7ee269ed71193ebcf582" translate="yes" xml:space="preserve">
          <source>def isDecimalFloat: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDecimalFloat: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c5515fe962aa1263d2d80efe8b86d8510dc06f1" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логическое&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fa501d2a20c56f790878cd6b83e04867d2680ac" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логическое&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ac649f95152650211366cb2f0440ec70bc8d4c2a" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логическое&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7ece134a964f8fd0f39b349d848bc0a48576464" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="408d5ca0517206d0380ce9f43337ebf404bb8fc3" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c331049b2a9b2c09b84331526ab4782bfffffa8" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f73b319b13e75122530563c9774d87bb26bb5bac" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c399d5847c416f33afe2de98f99eb89fe8367cee" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5351922bea1339515ed57bd2bf71325a4172f0ad" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64d45e506baaa5b8cbf553a3ae5d84124d00ae36" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="075ffca2e14430a5a0e90b6878572ecf440866fb" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91140ea4a1dcb64b06a654628a5fa8becd57223e" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37748656cf1a5c9d6611efdc1c6983d11968d60c" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d648df16678dc96b250b04d24bf578ff1b3c937" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a388d56dc77518fbded517cd7763b37e01c7ee7e" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f41f053c1487d26a0dd66d2fc6b8401a0b0694c" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd0f758eac35030c596af06e9d0913e91484f8fb" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4fc5196f4a4148bd208b13e4318e5274877ad866" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="718865ce164b5ce542aeb61c9f2debefecbf5ac4" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d4dbfd1b1f0f82acf5c3ed5ae16ef715b60aefe" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7442aa84801c642c965918089e9da8942dadfa27" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f49ea9a294e17dcd5e3ec024171511a70a551238" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61106f53477318b0ec2b47e83013e3c2cd29fe35" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f35acd3aae38a90b8f2da858a7b7f36760f9ca31" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46aa7d88734ad81fc2584dacdf36ac0bc517cd94" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7cc1e4f8058bbbf5dc0a9156001851e33076788d" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="363572875e1172cfb5739f5dc3f58ea10eab05a2" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логическое&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eed563fa7f69351374994e5475fd288b365f53e8" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75065b821acfffd91c47ceb64b1a83cca03b87d0" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1bfb5d1f49347d7cac350140462bca071f46c169" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bbcb848b5d794fc1f8a912e7d85de5b10e7dadd" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c28e8c2b41c09e6a10ef8f357a9adfeaf07dc6da" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8da5434ea320f9c60192cc40d050206f0854f607" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="690d2a357a4079411991dd4e5037e6a72728d4bb" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b67e5e4b9fd2475cdca85560a0c54d56aeeda8f1" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c0df083d9597a9c8096803902e814aa7d307dd1" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="470e171dea2a37f4144803b1deef5371858bfe9e" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63c1c498de3ff9d23aee41357de4c655226a5129" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a5531d0dd587d2dada09bcbf86938b28500f11ff" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c249882bf5d74453a90e8e692e8a5a8f52d4c5e" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94c79e733f5ce9b51c4a32abfafe70eba21b3ba1" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7dbcb9d9eecb54d104be82053820582f37968bae" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7e2785e366552ebfdc30798c52d446b0babdb5e" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48a1264da684b54d02e9264a88efdf6b63c2a1a0" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39cd469a75186a1213fb4e888183980d46df0052" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6373cab915ee2a50ff17eff86fa9f9cb2ec8e3b" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72e570cfba5a169e02c313169232d87619fab5a6" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78c5a8477120ca779517f453c03b0d2b90da185f" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf77d8292b7c636d42cebb61d76891f49f217592" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72ec2a55a501c433b59b6af2a91d1ec5fc2bd46b" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b5a8f2078f0353ef4bca7ee83137bd2c4471ed7" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4294d817fbf851447fee8bf9c4762f7233519e43" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6f257886ffe171adf078da770c85bfea27af146" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2919cf489bf2611f57c2358c6755a03260fc426e" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7af7da1dfbf28b09b0464f424ef9a109ec4b2943" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78dd48f763845eb4fdc982bb635cc2965d8f0764" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9cf3c89fe7fa4b57d71e0ed02b2bcab4bf744f6" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1dea937722d173f9d3b96010f815ba8428daf3c6" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7374c72b055f7a277a270a3f2423ab25d71934b" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e0e8dfa79d937927f5515b45d861fd16a21b3c4" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c179828aea79c20d3802bd9c59472ef5f3d8444" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6bb2c6e05bb597c104e1a9eda668278977506317" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dfbac2865f8b6c848e8bd3d934506451f7cccbe4" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7be4e9458c938d2c8e5d674a66be9513cc4dc5c" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логическое&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ac03d18b45191981cbc95bc1439827f3a47ef431" translate="yes" xml:space="preserve">
          <source>def isDefinedAt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDefinedAt ( &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логическое&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="121cd60f85f0856a55545fa016692307de913889" translate="yes" xml:space="preserve">
          <source>def isDigit: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDigit: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16effa3eab28e104422cb64205d81a257b5ea920" translate="yes" xml:space="preserve">
          <source>def isDone: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isDone: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44c533b4a57ede5ab3b303762ae53e6978757127" translate="yes" xml:space="preserve">
          <source>def isEmpty: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isEmpty: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f26b2f4155ac4b6f7ed02646b6f912ba1703882" translate="yes" xml:space="preserve">
          <source>def isEmpty: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isEmpty: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0e9a1ae4b18613eeb05af71cca2a30293ca3ccc" translate="yes" xml:space="preserve">
          <source>def isEmpty: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isEmpty: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6578feace25009d0a73052fc69664347f15625dd" translate="yes" xml:space="preserve">
          <source>def isEnqueued: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isEnqueued: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="43747a6648f06b7ec72bafae7145137cc45802bf" translate="yes" xml:space="preserve">
          <source>def isExactDouble: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isExactDouble: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="999d5c83ceb4d7fa99a282989fbb1266cb602ae5" translate="yes" xml:space="preserve">
          <source>def isExactFloat: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isExactFloat: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="efe2534ee08e33d479577259a72e2c509d85d1cf" translate="yes" xml:space="preserve">
          <source>def isFailure: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isFailure: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb447e954a3eb2f6160c84b61ca8e7abd28e8d7b" translate="yes" xml:space="preserve">
          <source>def isFinite: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isFinite: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74c431209645fe0d685be725576f55e72b454f80" translate="yes" xml:space="preserve">
          <source>def isHighSurrogate: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isHighSurrogate: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50d88bee4ccd2fcc5d61b5f2edc2a26031eb39f0" translate="yes" xml:space="preserve">
          <source>def isIdentifierIgnorable: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isIdentifierIgnorable: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de8751fbfcbfb9fa552d2f72559a5a074e1acbfd" translate="yes" xml:space="preserve">
          <source>def isInclusive: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isInclusive: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11293b877c7460d551e8d36e25c36c9574c02ad7" translate="yes" xml:space="preserve">
          <source>def isInfinite(): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isInfinite (): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логическое&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6ce05e3858544a0e8a672ce59eb3ad11bb531b63" translate="yes" xml:space="preserve">
          <source>def isInfinity: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isInfinity: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60828fd837335d0e8f1dd3b6f636d4bece4401a8" translate="yes" xml:space="preserve">
          <source>def isInterrupted(): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isInterrupted (): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логическое&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="232a74cdcbc8a9bfd1fdc1fd61cfdec952482be5" translate="yes" xml:space="preserve">
          <source>def isJavaAtLeast(&lt;span name=&quot;version&quot;&gt;version: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isJavaAtLeast ( &lt;span name=&quot;version&quot;&gt;версия: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ):&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt; Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="322caee31f0e427cffbf2dc616986612863ab4c6" translate="yes" xml:space="preserve">
          <source>def isJavaAtLeast(&lt;span name=&quot;version&quot;&gt;version: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isJavaAtLeast ( &lt;span name=&quot;version&quot;&gt;версия: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21ee0d6483c9119401fe296573788946b6ddcbd7" translate="yes" xml:space="preserve">
          <source>def isLeft: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isLeft: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2afad0fac2a838997c9e6ab0ceee94a5d54b9392" translate="yes" xml:space="preserve">
          <source>def isLetter: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isLetter: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5772a8bf2b06fd467858bdc35e706901db5c52a8" translate="yes" xml:space="preserve">
          <source>def isLetterOrDigit: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isLetterOrDigit: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7fbd24bfa3a8c14365f6eb2771820cbe3dc4bf80" translate="yes" xml:space="preserve">
          <source>def isLinux: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isLinux: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d497dda0b5fe3673186072e1818323cb124a0d1" translate="yes" xml:space="preserve">
          <source>def isLowSurrogate: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isLowSurrogate: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e084293a5d26aec38e9bd9320f824f07cff12dd6" translate="yes" xml:space="preserve">
          <source>def isLower: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isLower: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7eb0384f22a0d3b64817efa0b3d1d409fea852ab" translate="yes" xml:space="preserve">
          <source>def isMac: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isMac: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="361204e7b7667dc8ffc22876d69fe5a748001e7f" translate="yes" xml:space="preserve">
          <source>def isMirrored: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isMirrored: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="545845a6450d4c2f46ef3a35e001d2e044fb7454" translate="yes" xml:space="preserve">
          <source>def isNaN(): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isNaN (): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99e68efb96d4272a02e0d54142ce63d2168bb141" translate="yes" xml:space="preserve">
          <source>def isNaN: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isNaN: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4f46d96327772982566ee8dd7c4667687208045" translate="yes" xml:space="preserve">
          <source>def isNegInfinity: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isNegInfinity: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb69beffb901b4d0ddb331118b3e12f67bbb6084" translate="yes" xml:space="preserve">
          <source>def isNewline(&lt;span name=&quot;ch&quot;&gt;ch: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isNewline ( &lt;span name=&quot;ch&quot;&gt;ch: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a7a2410da2ede83dcdd2b7d567d266193aaf75d" translate="yes" xml:space="preserve">
          <source>def isOverdue(): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isOverdue (): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;логическое&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2320e256198848c69021a386792edbce5fd95708" translate="yes" xml:space="preserve">
          <source>def isPosInfinity: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isPosInfinity: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f869626de5e3d9879a3c9f5541999ae8bd21a97" translate="yes" xml:space="preserve">
          <source>def isProbablePrime(&lt;span name=&quot;certainty&quot;&gt;certainty: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isProbablePrime ( &lt;span name=&quot;certainty&quot;&gt;определенность: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="512b6deb552650ea146e9e250e934bb9a62fa35c" translate="yes" xml:space="preserve">
          <source>def isReadOnly: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isReadOnly: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c806eace4963f71a4924e14ef4fc123a52c33643" translate="yes" xml:space="preserve">
          <source>def isReverseOf(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isReverseOf ( &lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [_]&lt;/span&gt; ): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df28c68db4e25daf4bf8efc0687f05d991087cdb" translate="yes" xml:space="preserve">
          <source>def isReverseOf(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isReverseOf ( &lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt; [_]&lt;/span&gt; ): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="caea2f2ca543323d50dbf1f35438f1454c659aa7" translate="yes" xml:space="preserve">
          <source>def isReverseOf(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isReverseOf ( &lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt; [_]&lt;/span&gt; ): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0164ba5b2d3093bf67a20d049d01cd15a241b222" translate="yes" xml:space="preserve">
          <source>def isRight: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isRight: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2697ae8fd1d018aa9f886eb8ca40e284e78e9789" translate="yes" xml:space="preserve">
          <source>def isSet: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isSet: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9322d82a5aa771a03a59a5113f9eea699b289408" translate="yes" xml:space="preserve">
          <source>def isSpaceChar: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isSpaceChar: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5e6f38bc92d6caf285c3b8ff4a64929eb578b16" translate="yes" xml:space="preserve">
          <source>def isSuccess: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isSuccess: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51220c29e7034b23d287e2f139db6f2743b2085b" translate="yes" xml:space="preserve">
          <source>def isSurrogate: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isSurrogate: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2228f6b9696ebbc9fc181ceb70a377993d30502" translate="yes" xml:space="preserve">
          <source>def isTitleCase: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isTitleCase: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ac6f7f711540727a6e556a807d046090ccb680b" translate="yes" xml:space="preserve">
          <source>def isTraversableAgain: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isTraversableAgain: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d67b9522bd74d29d1ebf5df9fde06cfa8f86ccfa" translate="yes" xml:space="preserve">
          <source>def isTraversableAgain: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isTraversableAgain: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f7c25a4a4dfbf5717adade8de10f58fa83ea99f" translate="yes" xml:space="preserve">
          <source>def isTraversableAgain: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isTraversableAgain: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d2740ae16c7a93c0f14d9ba9cb378815e414dc5" translate="yes" xml:space="preserve">
          <source>def isUnicodeIdentifierPart: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isUnicodeIdentifierPart: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21a10e19f63649e97db57a3e82b8c810764b3d6f" translate="yes" xml:space="preserve">
          <source>def isUnicodeIdentifierStart: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isUnicodeIdentifierStart: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56cf33a9ca9cdbb1ce7cbb309919b413a5ade03a" translate="yes" xml:space="preserve">
          <source>def isUpper: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isUpper: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3271b22a473c2071a32de5dd09459073d4cddb3" translate="yes" xml:space="preserve">
          <source>def isValidByte: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isValidByte: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81da2b0fb8b19df8cc2e6c7ccf823c376a0d9a4e" translate="yes" xml:space="preserve">
          <source>def isValidByte: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isValidByte: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38b952617864dbd5388e20d369476dfafdb75a50" translate="yes" xml:space="preserve">
          <source>def isValidChar: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isValidChar: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8700fc16d45c14eeb0b84aba15362ffdeb075c2" translate="yes" xml:space="preserve">
          <source>def isValidChar: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isValidChar: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c1d18afee02f977af6e1843f2e924d857b5f0f8" translate="yes" xml:space="preserve">
          <source>def isValidDouble: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isValidDouble: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d46c11f71128cf49dee85c5589a818a6cfb0544b" translate="yes" xml:space="preserve">
          <source>def isValidFloat: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isValidFloat: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d4a81a7b896c04c57d3df98df90208d6c498348" translate="yes" xml:space="preserve">
          <source>def isValidInt: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isValidInt: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="32c9a9b10e8c2297505ec2a05b580cd7b1731ca6" translate="yes" xml:space="preserve">
          <source>def isValidInt: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isValidInt: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b626ae095272db637b6143505bb5f946922b76ac" translate="yes" xml:space="preserve">
          <source>def isValidLong: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isValidLong: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34bbc7e54d8d17b6888d605ce6de1869e7631353" translate="yes" xml:space="preserve">
          <source>def isValidLong: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isValidLong: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a832841a369a626f67a4decd785ae22d79fc7f9" translate="yes" xml:space="preserve">
          <source>def isValidShort: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isValidShort: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1f222e093d9b052a3c9a01f8bd37091c6ff8c2e" translate="yes" xml:space="preserve">
          <source>def isValidShort: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isValidShort: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9adf4ce5371b193ccfa23e6e23bfceaa14f47787" translate="yes" xml:space="preserve">
          <source>def isWhitespace: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isWhitespace: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4de19e5a8aef6eba855186477d3ae08202ca8990" translate="yes" xml:space="preserve">
          <source>def isWhole: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isWhole: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d079f8e08f86e984eda182bc62bb03a2f3b9143" translate="yes" xml:space="preserve">
          <source>def isWhole: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isWhole: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4af8c0d6dba7c3e7a20d05640c839e4b2e91e3be" translate="yes" xml:space="preserve">
          <source>def isWin: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def isWin: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9ff8e2361736907d5ec61dbd68a661a91f86427" translate="yes" xml:space="preserve">
          <source>def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="translated">def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="dd2c39fe3240255e1c0655472780fb72f55e3218" translate="yes" xml:space="preserve">
          <source>def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="translated">def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="82b6ce4ede218ff0d75d7dec84eaa132936e5e7d" translate="yes" xml:space="preserve">
          <source>def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="2f575f8512ff08b4983a5356db44d0e9d0098222" translate="yes" xml:space="preserve">
          <source>def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="a74b6e4402efb5c064a35bd2df1173e8ead211c6" translate="yes" xml:space="preserve">
          <source>def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="translated">def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="7427b693119a2157ecbc3be1b682009386628b4a" translate="yes" xml:space="preserve">
          <source>def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="5e7dfbf0330f7a9cd540264d5307b57bf75e904a" translate="yes" xml:space="preserve">
          <source>def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="4d8f93817cf6b32d9de63099a8bd93b8a09c3572" translate="yes" xml:space="preserve">
          <source>def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="translated">def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;краткий&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="4712a4bba92ea51580a7277f139cbd0b282b0c13" translate="yes" xml:space="preserve">
          <source>def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="translated">def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c01fa7372d5cd189d1a44aad4524e8d2a4ca8383" translate="yes" xml:space="preserve">
          <source>def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ea92033b1b2bf85d239f6afe410244b2898e0856" translate="yes" xml:space="preserve">
          <source>def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f68a317d47d8e81f1864568b33cc237bc50bf02d" translate="yes" xml:space="preserve">
          <source>def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def iterableEvidence: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6d80270caf84ff82db0643ccf3a86565b72b25f0" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../collection/iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../collection/iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt; [ &lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="364b070d15cb3480e26a514926d5475e5e947cee" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../collection/seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../collection/seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="5cccf9a2a7b0c4d467ea935dd1650f5192e85d51" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../collection/seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../collection/seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="205d2af4b66d873077656aa5af8e5e9cc9e579e2" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt; [ &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="a734f5c810f0134f7c13f94377fcd4b280d6a83b" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt; [ &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="35cd837f9c373fd0fc274626be13fc20bed27317" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt; [ &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="389274508a0fd06a20269f76ecede5bc9a585260" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="d4a54041ec7bb2c2080d6d69fd3fa69dc1c291d0" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt; [ &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="1250c06a3646cef3d62a14fd8b1491792b389418" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="8e629c793861794dd11bbf700596246f17315faf" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="6b1ab2b154f2d44da183a57c7054548d57d8d7ce" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt; [ &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="30d4ed413a23e38185e0c131b08d42a0d77f21e7" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt; [ &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="406dea78aa94bdb27210590e13ab443bda4f13f6" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="67eaed972470c7caa15473f2a956bf1655ff44bd" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="5f6342bec3223ec90b46c9e0c90a90a77448e40d" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="17d7b89fdbc6eeb92c0edb7e8df2a8c1bd0eab4e" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="e54a916dc2978f4fa6addefee1dd8daa385190e7" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="728b9e713e3357e5f6012aac43ef6a00e5745486" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="4c542390e34786ce9b0dde537e3665657dedc8b9" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;буфер&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="2ec532c3cf1226f735ca314766a36ec646c247e4" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="cdb85124f51abea248f50a2edf95f9f13cef6df8" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c7f545214e804e908936bbf35764cab83df81b40" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="0718cd6a297995f9a64d19d9265d7d062d3386ed" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="7f5ae34ede40df472103cba9df2fe3cecfa4e158" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="0027a77a237d50f784cf020a9fda843d5cc63d3b" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Список&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="693d7160168097a688b7940519afefeef03ebb53" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="03e20c93ab98842619d3d057d015a0128c24e611" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;очередь&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="fe4833de4a4e15729024a7092f513345085d7ff3" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;очередь&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="435f817ef92b3a12e0a6a78107a2596de1222f31" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f7d54e40b180a42455a9b75e9c1cb48edfb6d578" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="1793cf59b6c32e75b4d86b7672f16e51654171be" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Стек&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f9e88ff5e405d1e5bd1a935d796779c33da93732" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;поток&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="1355be1cdfdc290760145839c33259e4492421e8" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="44f6af84f353d35b0ed074b1d27bec7c7d4e1c2c" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;../seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="41735a043fe20851878e436eba593c50dabff6c1" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;collection/iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;collection/iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt; [ &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="fa6cb078066a6f497efffe6edb0c5cbfb09093c7" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;collection/iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;collection/iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt; [ &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="15f3473ffed46cc8d0b2e5e86fdf4e40ffae8bef" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;collection/seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;collection/seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="02a04f7e6f362f8711b10b7adc411c72ae949ff2" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt; [ &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="bc93f77f95c6fc2a2197259660ef2bc61fda6ab3" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt; [ &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c82644fc27eac90b8bc431b972a223600c22fd82" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt; [ &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;Просмотр&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="3ad78a568164c738ff1ec334ab0c0a082486aa29" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c2e8f1db56dd6404acc7589ae0e6918deaafdef0" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c7b97a96eddb6f867b4c0a18e735d191140268aa" translate="yes" xml:space="preserve">
          <source>def iterableFactory: &lt;a href=&quot;seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;]</source>
          <target state="translated">def iterableFactory: &lt;a href=&quot;seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt; [ &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="8b06b0318dbc2f889ca67538fe4e1090053cfa00" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.jdk.Accumulator.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.jdk.Accumulator.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.Accumulator.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;canAccumulate&quot;&gt;canAccumulate: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.iterate.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.iterate.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.jdk.Accumulator.iterate.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.jdk.Accumulator.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.jdk.Accumulator.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.jdk.Accumulator.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявное &lt;span name=&quot;canAccumulate&quot;&gt;canAccumulate: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.Accumulator.iterate.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.jdk.Accumulator.iterate.C&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.jdk.Accumulator.iterate.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="df5ace23eb5e7fac70aaed09cfa6850dd760aa0a" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b460807bc1a3bf06267734db25851c41da0986f6" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="377b30c528d90f387ea756a329a4f6f5691bbe3a" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a4192f6a7cb44e117937dbe74ef4dd99f41666d4" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f5ef5d022ec2ee41bd35601177e8542ad7771784" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="88aa110e262a55d1b8f1617710524c7dd574f791" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="959084df134963203245df3abc3259a97b10f499" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3684f29e8270babf733d2481420481cc3e3538c0" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a46e3c322d3e040097b0954332d865a9ce4d672d" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="51d735f4e1b333a79c0a072bbb5d79b63212e7e7" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f4859a6ea709631d1cf7126f95e54fee3a73ab8d" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="81cf104eb0d79b9f16f372217dc5e75fff6714da" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8f7fcdbeda22bd2f46c89b8501b550829bb05615" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;упорядочивание&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SortedIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d70c830642e229b17d103ef74cacca23a5bbbee8" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="27746a4e9ccafbb625bddbe193af6170745b420b" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="88723d9a58d79186dc2e98bd862b5021f0191038" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5bc28c9e83da1e5ee2a0ea686bb2b7a77c48f0b9" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="04e97b20e5ba904fbbca5740eb164eccacc09728" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="266d3692dcf0502f52398d4eebf77406e34837e7" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.Ev&quot;&gt;Ev&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.Ev&quot;&gt;Ev&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="19849de1f1ee56f015bcab920cf1688ddd42e5e0" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Ev&quot;&gt;Ev&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Ev&quot;&gt;Ev&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.EvidenceIterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.EvidenceIterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eeab37657a9e35b9abb1b37f7df0ac19f3929a13" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5589eb3b8df2100ba87cbbab2941b1d4325d2f96" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7dbfa2131a000e058bf8dc0e3a1caa5d850ae618" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;буфер&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1afd4974617ab23826227f483d6180fc200c5b10" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3766ac3465e756d382f5c3e1cd8e60a6b53f8ec0" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a713cb9d6cd299a97c625ac7c942477c83723a85" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eb417149d7992dd628ea0fa0c562204086cf78fd" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0e1fc7a9ba083619cfc0ffa851ddd57e9fb47237" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="771b45c6e0581201a0a0eb4033b9d5acc89bf9da" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eeb0e7f374e052a0426ab99773d52db7b98835f9" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0187aa27dbfe6d1e143bf44d0dbaebd1fe5da1dd" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6248e8c4d318d5d1a31af4babf4132bc329f7289" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8d00e71a8ff5a84d351b9a8289697a75a4285a28" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a521a77a65475bae3c4772817efcaac589836c80" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;Список&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bebead8e32b556160a4e3b582377acc497c16545" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b56bafc34d522e23cd8d2b142677f0d6d32ecfe9" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="311e27e84b99aa3d5aea8f1f4788a554d00970d7" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;очередь&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="515b4ea03d7719b79f16f8e9307b77d35cc287ff" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;очередь&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e7a75137d6caa3822eb4e0658646ec138cc69815" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="09f7bb1b6600b7ab189e86e711720b9492e78a2c" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a2f44f979f42c9b8da9370295c6dc96a044b87ac" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="19c105b95b24227de58f63cf379c2530b14511af" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4419c19ddbb57acdee5f7eebf5fa19b000981aa7" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Стек&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7179212e66b10dd56ee122cba045e4d78a38baeb" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;поток&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bd4b0857336f7a5b2603776f31c014f82ed71ca5" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;вектор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e0f490d3e9127fac492ca2ca894588edc8b5edec" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6596f158e8c2e81e09ab3f818496e76849d8262f" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6fcc47e611647f1ebcf8e5747a91c2083229ce90" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="39610f43f2aee54b2373e974f0c1dc92a0282c8d" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9aefac76deeffc66038d9283dbd7826f91f15341" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="df96051556a3de81a13c710ccda7608495ce1a70" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8715944753e9ec3e2d87180caf3c6d3d20e2ce35" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="08d846821b59f01e2dc84ef97d1cfecbffffb93a" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2d1cc2874aee3ae4168c7361daee985b5ef9d72b" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6e4e3c26005678f277667d1a5101b22bb2cd5e0e" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="42c464b8728a7eceb00ec374f2f0850517765654" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="07c819b5e28dd937532f519d0249e32ae1790875" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="86bd3bb6c92446ca1fc8ece52c2906505f6d94c8" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.IterableFactory.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="07b5dcf60df0cae7105afe9ac9e347f12ab2503e" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.Stream.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Stream.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.Stream.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.Stream.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a3fa7be420bba794d85722b61676f8fb245c11c" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LazyList.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LazyList.iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LazyList.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;начало: =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LazyList.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.immutable.LazyList.iterate.A&quot;&gt;A&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LazyList.iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eb41665bbfa0650c18a0520f063b1d3ad366a258" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.Array.iterate.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Array.iterate.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Array.iterate.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.Array.iterate.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.iterate.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.Array.iterate.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.Array.iterate.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.Array.iterate.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ) (неявный &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.Array.iterate.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt; ): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.Array.iterate.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="36e8340389637c8297d3d95f15787d4cfdb51317" translate="yes" xml:space="preserve">
          <source>def iterate[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.Iterator.iterate.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Iterator.iterate.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.iterate.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.iterate.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def iterate [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.Iterator.iterate.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ) ( &lt;span name=&quot;f&quot;&gt;f: ( &lt;span name=&quot;scala.collection.Iterator.iterate.T&quot;&gt;T&lt;/span&gt; ) =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.iterate.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.iterate.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bb8d7635457967b52ed46b47931a839dc3b189d2" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[(&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; )]</target>
        </trans-unit>
        <trans-unit id="4bdd62a284227b5044fb44784b0685a288f2acb1" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../index#Iterator%5B+A%5D=Iterator%5BA%5D&quot; id=&quot;scala.Iterator&quot; name=&quot;scala.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../index#Iterator%5B+A%5D=Iterator%5BA%5D&quot; id=&quot;scala.Iterator&quot; name=&quot;scala.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="7586e84d6f256fc9a1e2fc12f0985b3eae5e6e99" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../index#Iterator%5B+A%5D=Iterator%5BA%5D&quot; id=&quot;scala.Iterator&quot; name=&quot;scala.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../index#Iterator%5B+A%5D=Iterator%5BA%5D&quot; id=&quot;scala.Iterator&quot; name=&quot;scala.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="141a180cb2c5089c78527eda67c639935e61298f" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../index#Iterator%5B+A%5D=Iterator%5BA%5D&quot; id=&quot;scala.Iterator&quot; name=&quot;scala.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../index#Iterator%5B+A%5D=Iterator%5BA%5D&quot; id=&quot;scala.Iterator&quot; name=&quot;scala.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f18d8248a113fd7565728f130bb497244d4f9aeb" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../index#Iterator%5B+A%5D=Iterator%5BA%5D&quot; id=&quot;scala.Iterator&quot; name=&quot;scala.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../index#Iterator%5B+A%5D=Iterator%5BA%5D&quot; id=&quot;scala.Iterator&quot; name=&quot;scala.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="634bd1ddb54ca78cae202f938f3b36babfbecf7b" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="5e0469ed22008a77204c3a1c9bf0101411f94d3f" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="a300f1d0a614464611dd5131c2a1792c21f0d59d" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)]</source>
          <target state="translated">def итератор: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="e37bad5aeab7ed4a957b9673b8d4e4ab356dea34" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)]</source>
          <target state="translated">def итератор: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="93cd88ece1c439b30317a2a15cd7d2272c3348d3" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="239c252b664c87fb9191eaffe1aeff1cb0faaabb" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="4ce72f30cc8b64a882aa8c7d0189cfd1b42d34db" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="68b06a070b846ff406f989c58536ec3966e45f00" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="1e0124629d3268ea799400768a4f3aaff8cab05d" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="1eebea79ee7362e9235d144f8de966c3da7ad5cc" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="54d43fb7bdcdcf2334c5d8e70a887cb00e3b383a" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="1fc327904ec11bcfb36155411ad5e9b666795bc7" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="ae9b1f555645389dc41a876382c12c05e86e473e" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="83851c66cbc329ec270ee7d26e1bb532ced3e8c6" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="bc6914a4c64f28277dd4e324df5258d3e35b239e" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="0368e05a2a3fcaed35f474948b9fc75319930fe4" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="12273dd7c55d6a565d98785dc6a2fdb139ba3c36" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="aa14e6fc26c91acb040605f01b43b7597ed121ab" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="4fed1d0e899fddf1a1923a15449e543db5983e90" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="b8fb0c89ca25a640de508fd4e3b51956a2bafc1b" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="bdd02b69dbc858a5582c4a4f5929806dcb5bc21c" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="7ecc359360927be85cc3203c8ec43a11840f0dc0" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;ключ&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;значение&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="be83b5de208419a8c45ac533bc1014bfa5dfdbf6" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="1fbf979a91a3068918fc9cacc67ed8d2c3b9ad05" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="cf8eec05d2b16bc44eb1a0c72fe07d4101ba2659" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="44feb05b632abfcec97100bb2946155a289259ff" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="dd7b08f64003a3318b191a7a11987dcd74f65652" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="4fe40fccd27883978db176ab37b6422c287d7407" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="b737b1d555de3da476a0cb783b655fd309c0e2bf" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c8917bba1343e53c6a55886d190aa7a799868231" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="83ad34a74d46e20f790064394dcc2070cf139094" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="9252ee72b6fa08ebbdec3daede03e1a89acef3ce" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="5027a5d22fd07088a280a628fe1087da4afb595a" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;ничего&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="7c46b2b56f72a0ef477222d317255e30cd934a9c" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="2d44384bdd9f0fe103465bfe6a85ea88aa8535b9" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="864e4e3d831155dd882db148666f428ee7767573" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d2cb1c4faaeb2b03158c032cb671d6aad6dcec2d" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3c18912ecb53bb03d6521db33613229c7bb2c08d" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bfa22b8defbf428ca887b0e1d21a12661c37803e" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2ab241773956c5afdd3cc0c12a088537792e7570" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c076068a76b6b2b581a9d2cf0cd1bf72ec4a5c0a" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1e9582ee5519ba1ff590f2df9ba39de0dd8d08e9" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="074a8df4c25ecf17690e11a1ebc95b23180e4ddf" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cd3342d77bfc82ee893a244310504bae144fe4d5" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3a0684632ed948117b109f5e839e4dc862b2a21a" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a3a094f550bd58b28de706cd0343c0f1050083bf" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0ac7de9422210dcca06096dd6a271455093f772d" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="73e41f56ff8a0724e5c54391ad1912c1075251e6" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="888d27a673e38be202ae9fef19333a0898315eca" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5812872adc37cb93ef762105d88a794e1a414582" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="39a8035d0def6bbc007ae308c980ed92ba7759de" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8950a62042692b2f2cbc98c27441e7f10d3ced89" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9890921d1091fe19cc7c184655acf95c00ac91c2" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0ff2bb204a54f2ab6b96b6240abd4ca04038d6be" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ce7da279ba9605910ccfa85e9b2599774dc78527" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5883274f3e38d05b82c70761e0d034d3c0e4879b" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="68c5d5949b8bc1632548f25296f71e269c04dc52" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="411b0158c6b1b4ddd012da3745b10e0cea2f78fd" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7891b1fef66e1d3e5fb1e03e3e66916bda0ba217" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0eb172a34020752524248c52daa4c0f157a59139" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1c9934b3ad3cdf5dd0b9de8dc49d9b1944decad9" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6f30e99dc9dac9477c62ab75f788fe49b6de4d73" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b02a42e83cde9c362dea48043dd18cae0f5fa8fe" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="03a9628c328a0102473dc84d5f606ae3741eeb52" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="74068f6b46de9977d144eecfc3fd0a683c3601ab" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1195c01e7f917618e23d12e19d417d916aae83f2" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f63e8abfe4aae47e44fa9780bda56bfbb29f8d72" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a17a59dceed10b349365f415e692a245dbba2e66" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="10f3fadd59e56aad0abe84fce42505d0d071d1b7" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a07c16d7c89859f0f689d5092f2496b1ee49b4a2" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cdfd2eca89501161b96f6ea7bbdf41076b2e1b14" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8aedef2a95751f7eb86959140b51699de990dc7d" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="90d76da2a00f50ee1d9605d373aaa684a010958a" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="708ae930ed7b88f14d1147689b2fef772e018681" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a9ede6c0f542ed90d301387faec8706d968f150d" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5b1bc921ad66b11129caeeac762f3956cce77c31" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c5917295078e5f7e633e5c9aa0612f1d2e3b48e5" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aaec8fd1a80ab43a5eab8f5fb7e9682bb4ad264d" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;abstractiterator&quot; id=&quot;scala.collection.AbstractIterator&quot; name=&quot;scala.collection.AbstractIterator&quot;&gt;AbstractIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;abstractiterator&quot; id=&quot;scala.collection.AbstractIterator&quot; name=&quot;scala.collection.AbstractIterator&quot;&gt;AbstractIterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2df9a38e66bd27b2ce273e220acb5d54cfe4dd0e" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;abstractiterator&quot; id=&quot;scala.collection.AbstractIterator&quot; name=&quot;scala.collection.AbstractIterator&quot;&gt;AbstractIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;abstractiterator&quot; id=&quot;scala.collection.AbstractIterator&quot; name=&quot;scala.collection.AbstractIterator&quot;&gt;AbstractIterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="afa229318bc33ef565367a26ae814ecad7640208" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Значение&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="36aceef8e6d6f5d650b6b7bcd532ce870afd3b57" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c54aa910802d5f05ea831ba3e722d991de0f13b0" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c0181f3a31e088ca1edc755f352b77c9ca778476" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c8dd5550ad9601375acab417b4deb7a60d39fa1b" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;index#Iterator%5B+A%5D=Iterator%5BA%5D&quot; id=&quot;scala.Iterator&quot; name=&quot;scala.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;index#Iterator%5B+A%5D=Iterator%5BA%5D&quot; id=&quot;scala.Iterator&quot; name=&quot;scala.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;ничего&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="fad984d3d476233727a0fab2ec2ae7b095f91e7e" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;index#Iterator%5B+A%5D=Iterator%5BA%5D&quot; id=&quot;scala.Iterator&quot; name=&quot;scala.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;index#Iterator%5B+A%5D=Iterator%5BA%5D&quot; id=&quot;scala.Iterator&quot; name=&quot;scala.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e2033d9b545ca3c4d9cd9946ebb8317023b407c0" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;index#Iterator%5B+A%5D=Iterator%5BA%5D&quot; id=&quot;scala.Iterator&quot; name=&quot;scala.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;index#Iterator%5B+A%5D=Iterator%5BA%5D&quot; id=&quot;scala.Iterator&quot; name=&quot;scala.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="741ea20dc5e9c7b6a3ee526862a3ef9470740be8" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="3caccaf73952720f34ef75af8387056ac26df849" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="104fb48ca814671e9d6fb1843edfca8c95963115" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="ff905bc1c5df00b1b6bb6043b8f6caf1f59af18a" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="a0c54dc612f65cbc6c95b2bb10457fdf0725c41f" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="4ec1fda459a708f7e8ad56c2cc97dfe375a0a437" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="f78071c07219f292181f4afc28036ecfe0342028" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="89eea73733119633f7ef3d2e029afc0ad3e98d16" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="0eb0c34492a08983d7d20431d211575a17f360a3" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="0ac0ae88eecedfa14e174e9b2e8887f5972cd96f" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="d40b41aa963af0b38528aac5ffde3909b9acae8e" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )]</target>
        </trans-unit>
        <trans-unit id="366962b2e49e5bfef68574dfc5e9ba3d0548c179" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="81afa0877d43950c4532f2126dfc4ad92dd04f1e" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="e0e3dade1f21ccdff3ca4f1a52e1a2deced5676f" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="64fe6f54e9540533bf10bcdea5a82e290290c4ab" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="e5e4b408938eb6accca82f2bc0d3adea98b92b44" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;ничего&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="9b51fb0a2168744deb0b36efd620c7b48ef2aece" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5588ca5baa225829939df566e9ad8c6db9759b1c" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AnyStepper.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AnyStepper.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ce4bac9a5dd3b93ff30c0b22d626c004307dab32" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="521c4a904e47cfc74dc6bbeaf2c1e28dc8f47dc2" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="20c6493087603d5b5a901aaf460edf55d0e45dec" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cea5be1dabf1763580e780b7e50004b3471aff05" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2dbcfb21c8f2c2109ea89383228a2e4d39359799" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="002f605e79b73a36b1e8a726386ee86c03caed59" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bae6185a7ea93957a5af8acf28b9c49dd96dcf04" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="26b9aaa645e55cfe9ff450c9675caf6ea106b5d4" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d9dbec60db82a0a775c0fc64e1a8e58ffbefd4c7" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="891c8682471675f0edef66ac5550947f87a0d0d3" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="20798e534d44802d537fbdc92aafa6517cc88f8b" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d34e091cef63580326f6f222fac958e7dce4323b" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b9f844f79a5510aa0e5472e27feb2e449f6ee632" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3f0b65fdeaddd2bd4641997aa4ee8fbf7cde1b52" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="51bc27ad1e35536f33119ab91920c29478e87dce" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="741788aefcbfddcb659a4595ffa4bfc594225e60" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9d3cd828f20d2cd4ca835bfc818a4fc750ac6c29" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2dd9725ff035b121c8038f87d8f0b9945f176f3c" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="90992b4506b9b0102a43d64cb812b621b8683290" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7793a12e3ba24f45c033f140de676459eccf9ffa" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5f4a4df558aac26b03e3a2abb9a9325fb28c065c" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8586129304c051cdd6411d9b633868c7ba2671af" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8391c2717599453008f82546f468477794e40808" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5de6dd38b17f3c32b41bab70934cdd425a386217" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f40b62377b16990cc1659de071ea3c0ae39b43bf" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="49521f58bdea8f537cd79844d5f61545f9651175" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="abe823a0f92f9d21a451454262247426573f71b4" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f5ec514e79c0309d64015cfa841248cefd5f0381" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aaf3b105b41e9ef3adbb2058fd4569758d9f1154" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d825ec28d7f35f172a12311c7f7eb13d31a24501" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="318c385031d4da77565af28ca186936cfa4e5cac" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Stepper.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Stepper.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="34b992cd019ed8a0622488c389b7eb1d86013518" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="501ecc7d9ce7f3f8acb94c4643f22ffd727f2bf5" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="02613173843a9aaced4b653dd771441415f1a78e" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1c514d6c2b8719b0210f30941a391016e4a8428f" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1cfd0e9743d6621be83b85fba4114de887c2b412" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b20cdc5e4b2f8134185baaf8f57ad9c7b53d3a89" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0d57972d867e15660ee5beba85950e695f19831a" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ead6f48ebb666956204f5d58cdca589da282b5d0" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="551726f125c6c053524c66e0ed06207d05c72f68" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="58b302aee3aab8c8beebe32e542f8516a028e4ca" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b75279bd1785b6a15a6b74753619a55746086943" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ec97acc3cc3387a79f223b4ece425c324d4f06d2" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1d80bfd5debd301cca685e7d1e84c0e713845a82" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e1652ca808c1bfd79eaeb5f52da2e72aafd81691" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ed3c02138ef678dc37e1d96a37dbc28742aa7d08" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3131c5dd903995ee6b691997c2a8564468c6ae69" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0225a0de5eb0ca653352882888e87601b6fb15ae" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b496d3c7fd807be72d3175b2d8fb57b1a060d671" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2c74208f92101acfabbb73f2aa1beaf17433b6f6" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4afb0b90270ab088de7cbbed458340b3877999d7" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9c89986ba3665179717f7e0e73e96c7e4cdb1634" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fa078a1dce6d5e03e260c815772f886d9965d795" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9445fe1ec4b6f5928a3c45c9c12a8b1231b04ec7" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="389c27f3f152b2ec69671d61095e5b853e7aebf7" translate="yes" xml:space="preserve">
          <source>def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1144609214d81c9f1521dc619598b90794ab9361" translate="yes" xml:space="preserve">
          <source>def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def iteratorFrom ( &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="3b1403808da1f78b3ec7f2f473ceb70aebdedcc5" translate="yes" xml:space="preserve">
          <source>def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">def iteratorFrom ( &lt;span name=&quot;start&quot;&gt;начало: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="ec2f484d26858ac27db6f2cff9b956c4e8faa27d" translate="yes" xml:space="preserve">
          <source>def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]</source>
          <target state="translated">def iteratorFrom ( &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="0fbfbd8d5ee35918de841e934d2c5785426fb5a2" translate="yes" xml:space="preserve">
          <source>def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def iteratorFrom ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ed9d1cbb1c0cb767aba5d672b2cf0f22829ce1a3" translate="yes" xml:space="preserve">
          <source>def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iteratorFrom ( &lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="2e6e9f3a42f611fd95f66a8be10fedc6b9acd3a9" translate="yes" xml:space="preserve">
          <source>def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def iteratorFrom ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7b49b72faf53349cd489b1613dc86bb4199e4de4" translate="yes" xml:space="preserve">
          <source>def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iteratorFrom ( &lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="eaa5617462215d77bcbab90e9f283fe42d473877" translate="yes" xml:space="preserve">
          <source>def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iteratorFrom ( &lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b8711dbf3108d9f00372fc63adececca3da0ccc2" translate="yes" xml:space="preserve">
          <source>def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iteratorFrom ( &lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="259e2c848c98f5a63a9495804ee264f0f66a6156" translate="yes" xml:space="preserve">
          <source>def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="translated">def iteratorFrom ( &lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )]</target>
        </trans-unit>
        <trans-unit id="a597e9a973ee10b488a5dcdff53e55e223cb7568" translate="yes" xml:space="preserve">
          <source>def iteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def iteratorFrom ( &lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f0fc29c4de8a91dfeff1dd13291acde1a595f287" translate="yes" xml:space="preserve">
          <source>def javaClassPath: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">def javaClassPath: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="854dd9b9ce314e82d256a24246e5cd168fed481d" translate="yes" xml:space="preserve">
          <source>def javaHome: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">def javaHome: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8eae0c52aa9d6172b05bd75a314ca97f1d299092" translate="yes" xml:space="preserve">
          <source>def javaIterator[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;]: &lt;span name=&quot;java.util.PrimitiveIterator.OfDouble&quot;&gt;OfDouble&lt;/span&gt;</source>
          <target state="translated">def javaIterator [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ]: &lt;span name=&quot;java.util.PrimitiveIterator.OfDouble&quot;&gt;OfDouble&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3cde714a63712ec5fdd230b13f33fdf858aea4af" translate="yes" xml:space="preserve">
          <source>def javaIterator[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;]: &lt;span name=&quot;java.util.PrimitiveIterator.OfInt&quot;&gt;OfInt&lt;/span&gt;</source>
          <target state="translated">def javaIterator [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ]: &lt;span name=&quot;java.util.PrimitiveIterator.OfInt&quot;&gt;OfInt&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="17b86bc3487cf63bc713e4cfa37063c7618a0180" translate="yes" xml:space="preserve">
          <source>def javaIterator[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;]: &lt;span name=&quot;java.util.PrimitiveIterator.OfLong&quot;&gt;OfLong&lt;/span&gt;</source>
          <target state="translated">def javaIterator [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ]: &lt;span name=&quot;java.util.PrimitiveIterator.OfLong&quot;&gt;OfLong&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="13adcdbe8b21e1331d5feddc231a3592135bd6ed" translate="yes" xml:space="preserve">
          <source>def javaIterator[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AnyStepper.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;]: &lt;span name=&quot;java.util.Iterator&quot;&gt;java.util.Iterator&lt;/span&gt;[&lt;span name=&quot;scala.collection.AnyStepper.javaIterator.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">def javaIterator [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;: &lt;span name=&quot;scala.collection.AnyStepper.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]: &lt;span name=&quot;java.util.Iterator&quot;&gt;java.util.Iterator&lt;/span&gt; [ &lt;span name=&quot;scala.collection.AnyStepper.javaIterator.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ebedc5f6f2c04bd9c531c3e4a2b4ea5dc9c564b5" translate="yes" xml:space="preserve">
          <source>def javaSpecName: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">def javaSpecName: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8b9b3d68a93659c94643cc51096af7b8fc54273a" translate="yes" xml:space="preserve">
          <source>def javaSpecVendor: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">def javaSpecVendor: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ad7cf155cca787d61b5feaec522dc591fc41c17a" translate="yes" xml:space="preserve">
          <source>def javaSpecVersion: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">def javaSpecVersion: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="75ffccabd949ae08bc39ebcea6aaf62198eb7845" translate="yes" xml:space="preserve">
          <source>def javaVendor: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">def javaVendor: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f5c2fd780e1da1347ee8920415945cf0ba582159" translate="yes" xml:space="preserve">
          <source>def javaVersion: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">def javaVersion: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c8f4ea83c97ea58abbc000c1a4c89433474db834" translate="yes" xml:space="preserve">
          <source>def javaVmInfo: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">def javaVmInfo: &lt;span name=&quot;java.lang.String&quot;&gt;строка&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="89a68d1b2fd21d87bbbdfdb0716b34eada631d05" translate="yes" xml:space="preserve">
          <source>def javaVmName: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">def javaVmName: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="28fe6c4c10e4914029ed5190b9716e3b2a463aa6" translate="yes" xml:space="preserve">
          <source>def javaVmVendor: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">def javaVmVendor: &lt;span name=&quot;java.lang.String&quot;&gt;Строка&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1d529f8da0f212d61232a1e3f2b16fa5da6ecdf8" translate="yes" xml:space="preserve">
          <source>def javaVmVersion: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">def javaVmVersion: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ee44666a58387affd45b22955fd788e1d3e23669" translate="yes" xml:space="preserve">
          <source>def jdkHome: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">def jdkHome: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2e89afb2d831401846d386ce2d7f6ba2efb131da" translate="yes" xml:space="preserve">
          <source>def joinLeft[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.util.Either.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.util.Either.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.joinLeft.A1&quot;&gt;A1&lt;/span&gt;, &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.joinLeft.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.joinLeft.B1&quot;&gt;B1&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.joinLeft.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.joinLeft.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="translated">def joinLeft [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;: &lt;span name=&quot;scala.util.Either.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.util.Either.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] (неявно &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;: &amp;lt;&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.joinLeft.A1&quot;&gt;A1&lt;/span&gt; , &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.joinLeft.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.util.Either.joinLeft.B1&quot;&gt;B1&lt;/span&gt; ]]&lt;/span&gt; ): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.joinLeft.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.util.Either.joinLeft.B1&quot;&gt;B1&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="baad7c5113d8f638b39c9ed5dbbc58eed1c046a1" translate="yes" xml:space="preserve">
          <source>def joinLeft[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.util.Left.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.util.Left.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.joinLeft.A1&quot;&gt;A1&lt;/span&gt;, &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.joinLeft.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.joinLeft.B1&quot;&gt;B1&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.joinLeft.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.joinLeft.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="translated">def joinLeft [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;: &lt;span name=&quot;scala.util.Left.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.util.Left.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] (неявно &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;: &amp;lt;&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.joinLeft.A1&quot;&gt;A1&lt;/span&gt; , &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.joinLeft.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.util.Either.joinLeft.B1&quot;&gt;B1&lt;/span&gt; ]]&lt;/span&gt; ): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.joinLeft.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.util.Either.joinLeft.B1&quot;&gt;B1&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="93682d6ce42321851d983af171d233c6fb77a3ae" translate="yes" xml:space="preserve">
          <source>def joinLeft[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.util.Right.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.util.Right.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.joinLeft.A1&quot;&gt;A1&lt;/span&gt;, &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.joinLeft.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.joinLeft.B1&quot;&gt;B1&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.joinLeft.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.joinLeft.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="translated">def joinLeft [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;: &lt;span name=&quot;scala.util.Right.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.util.Right.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] (неявно &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;: &amp;lt;&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.joinLeft.A1&quot;&gt;A1&lt;/span&gt; , &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.joinLeft.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.util.Either.joinLeft.B1&quot;&gt;B1&lt;/span&gt; ]]&lt;/span&gt; ): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.joinLeft.C&quot;&gt;C&lt;/span&gt; , &lt;span name=&quot;scala.util.Either.joinLeft.B1&quot;&gt;B1&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="119cad424ca0d1e443f0e0eae54b4116211cf2f0" translate="yes" xml:space="preserve">
          <source>def joinRight[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.util.Either.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.util.Either.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.joinRight.B1&quot;&gt;B1&lt;/span&gt;, &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.joinRight.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.joinRight.C&quot;&gt;C&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.joinRight.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.joinRight.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def joinRight [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;: &lt;span name=&quot;scala.util.Either.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.util.Either.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] (неявно &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;: &amp;lt;&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.joinRight.B1&quot;&gt;B1&lt;/span&gt; , &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.joinRight.A1&quot;&gt;A1&lt;/span&gt; , &lt;span name=&quot;scala.util.Either.joinRight.C&quot;&gt;C&lt;/span&gt; ]]&lt;/span&gt; ): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.joinRight.A1&quot;&gt;A1&lt;/span&gt; , &lt;span name=&quot;scala.util.Either.joinRight.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ee7f1ad828b3bd26f12a61e0548dcd66e25a941c" translate="yes" xml:space="preserve">
          <source>def joinRight[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.util.Left.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.util.Left.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.joinRight.B1&quot;&gt;B1&lt;/span&gt;, &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.joinRight.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.joinRight.C&quot;&gt;C&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.joinRight.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.joinRight.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def joinRight [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;: &lt;span name=&quot;scala.util.Left.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.util.Left.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] (неявно &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;: &amp;lt;&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.joinRight.B1&quot;&gt;B1&lt;/span&gt; , &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.joinRight.A1&quot;&gt;A1&lt;/span&gt; , &lt;span name=&quot;scala.util.Either.joinRight.C&quot;&gt;C&lt;/span&gt; ]]&lt;/span&gt; ): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.joinRight.A1&quot;&gt;A1&lt;/span&gt; , &lt;span name=&quot;scala.util.Either.joinRight.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7364bdd6619f31ff5b31c12dadc9f02863997f0e" translate="yes" xml:space="preserve">
          <source>def joinRight[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.util.Right.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.util.Right.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.joinRight.B1&quot;&gt;B1&lt;/span&gt;, &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.joinRight.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.joinRight.C&quot;&gt;C&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.joinRight.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.joinRight.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="translated">def joinRight [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;: &lt;span name=&quot;scala.util.Right.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;: &lt;span name=&quot;scala.util.Right.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; , &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt; ] (неявно &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;: &amp;lt;&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.joinRight.B1&quot;&gt;B1&lt;/span&gt; , &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.joinRight.A1&quot;&gt;A1&lt;/span&gt; , &lt;span name=&quot;scala.util.Either.joinRight.C&quot;&gt;C&lt;/span&gt; ]]&lt;/span&gt; ): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt; [ &lt;span name=&quot;scala.util.Either.joinRight.A1&quot;&gt;A1&lt;/span&gt; , &lt;span name=&quot;scala.util.Either.joinRight.C&quot;&gt;C&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d080857b479ac37dff51f21d36ffc5b64d2a8f35" translate="yes" xml:space="preserve">
          <source>def keepBits(&lt;span name=&quot;bitmap&quot;&gt;bitmap: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;keep&quot;&gt;keep: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def keepBits ( &lt;span name=&quot;bitmap&quot;&gt;растровое изображение: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; , &lt;span name=&quot;keep&quot;&gt;keep: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b338a01e98700280936a32259805d940ebb217d" translate="yes" xml:space="preserve">
          <source>def keyExists[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;booleanprop&quot; id=&quot;scala.sys.BooleanProp&quot; name=&quot;scala.sys.BooleanProp&quot;&gt;BooleanProp&lt;/a&gt;</source>
          <target state="translated">def keyExists [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ] ( &lt;span name=&quot;key&quot;&gt;ключ: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;booleanprop&quot; id=&quot;scala.sys.BooleanProp&quot; name=&quot;scala.sys.BooleanProp&quot;&gt;BooleanProp&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c1d956e55ff4a16623bfeb0a34374e4e4561fab" translate="yes" xml:space="preserve">
          <source>def keyFromValue(&lt;span name=&quot;sym&quot;&gt;sym: &lt;a href=&quot;symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def keyFromValue ( &lt;span name=&quot;sym&quot;&gt;sym: &lt;a href=&quot;symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt; ): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="eed04a224be32c8eafc60264275a97b18fa7ae82" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../collection/set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../collection/set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="d9626da9ce3ae4677eb36b6e83e42a65d7c34f78" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b7c96ffe720f33c47915cb850dde3803d0d23dce" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ca1df88daa24e7528d738352e22e55825f513254" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="10d9f8673811b9d1cb66d1cdd05fa0585b201c1d" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c9710274bd204be1666a9212550c2aa488812e1b" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e513f8067d5d673b55490c3f422070d7a21d1d99" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5a285e22098cbce905e60ffe2b0713612eaa365d" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7d67804ca1ed595c701a700e8bcecc41c37b4f3e" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dd67aa612cdcde9e5c783b84b3b74e58c8744910" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cb2e374124c9e2a9e280a545ecc1ca2f5b5dce37" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6e38a67076231ebed8d977a1bed27d47331b9dd3" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="745505a49119251626c08a033dbae832a21154a7" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9b58cfcc1acbde5bcea2aa968aec7250165b935b" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="70fb705d045e619f970c716964c2e80629663f5d" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Ключ&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="51641ecf13357f3043850d357764e45733674781" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b782246b04a7b2872bd1b49ef26bba12ba227aa4" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6a76f0a6410c8f108cc450be1da79330b24aef46" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;collection.SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;collection.SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4fcf6b7171c1c29272e96da90fbb1b3192e3af5c" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;collection.SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;collection.SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ca3b715169b38f28d1d5ec4c3f126d1887e17583" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;collection.SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;collection.SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1dd7979ad540220028f652c3bd4d24a3aaa26fca" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;../sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;collection.SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;../sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;collection.SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="80e277a231e73f82ba0c70d7111f73ec79723c03" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="03a7a32cfde3635c9a504a70b69193bf107b381d" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d67f55d55a6c6667e99edb627c3ba4afb18e6498" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d5099e7d9a45be6e8ca42c43693c403a5dc8fd88" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="af0824d5557a8452776e92493eee8d849cf07444" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9aad07f431038f9d47039fbfcbb98f8ea624ea6c" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c610f9843134c0e48046c02a2107d32258686e06" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b230e555e8faa93887d12918b902ebecfa7ca9e7" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d6b661fd524eb15acecfbdf0792a3f97869c6ccf" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="14136fbc9cd4599cfdeeb70c3cbb8f49d55db4fb" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="705461ab837e4cee4677b36e0e8501f9db8860e8" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f7925310304200c50dc862c4ea289284d7c5f4d6" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="267733c6ff7740c0dc3071cb3960e421da450fb2" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3ad4f08d7964c93db8ffbf45d9e742a7d5bebcd9" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b371409e4f9afa63dd50ed2cb2c1ccd59c302a0f" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b17b920253a3f4febc45434b456abbab474d5124" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aa0a6b45f805c785af5d7c2ef0b96fa0ba58eefc" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a6fefbe5414dd21bfc03efabf045a0995a3c21b2" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dbdaf281b943021cb14d1a6585d0d9b714400c1b" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f99101c9b0174a4dcb09f1f4823c5679d79917d5" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="41f1e0067831cd0f8563efea1e6aabb5c9c3a9a1" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="de2ab42c6e878d77099e329b6109a9264c1012fa" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7d28c7d32df68ddbaba163a26001025f5786ca82" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ae7dac7adb9374bdc62b0e8fc5170dbbf65d3683" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f85027c476461b17b6a08e02d397ac3a4f398cdd" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4c84651cf57a120a88a4c4e2ba9889b8dad91f08" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="032e09be77f7715c6f450086b7636a22dda8fd74" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="45a41e9637eb3545da572ec82fefa4103263e42a" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ade6d952dbd279f246aaf85b846b7ffc9fc461a8" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e75fa15702c2b75c55e8274ce4f00843f4af8572" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Установить&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="734f7ea0d4579c7fd9e971632957806a8de42db5" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e0e8da630d7119286bdfc8fc96b8b385c5117310" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bd10e76955187473b5d25fc4832905d73dfbfb0d" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="573fef8b2d9f2addfaf703f22ab8d0b17aa1690c" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="20df7944b28d83762c1c0620479666f5735ab839" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d87dc25af7f13ed36318178bca842ddd2a7785b1" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fed6dc1a96a54ddfbb82d06cb05f8113341031e4" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="296794caa91db2bfaecd1fcc8a907bf46b8c11e9" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="93380ad18239bdf5376513d7ba31e94ceca99123" translate="yes" xml:space="preserve">
          <source>def keySet: &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keySet: &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d483b9becdd6db4f996acf1a3cb8492270675472" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../collection/stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../collection/steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="20331748adab801f99c17fd3a634e17594332ef9" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a449682c38ff54422fd486528be6aaf72090fa34" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8023cf5e83da392fb9bebba82399a5948ba7d894" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5328729f2ba82b29a1367d250d2e88ac04c3561f" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6dfa88f107b8b38c7bd9b2413dc41da95eafd3e9" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ffd427ef43ce90a4a700fefd082b97535b97aa2c" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dbd5258152df81e21a6e4634cf2d93a88dfd63ec" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.HashMap.keyStepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.HashMap.keyStepper.S&quot;&gt;S&lt;/span&gt; с &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8ea18d19aa3a38c4c7b74487d863af54819b759" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="121a861739f30ab9439038c3fb01784a271c2548" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="96416247dc960db95a7954484905fb87279950c2" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="128bcfeb80620cef4f63e43f51d03bcc699348c4" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b06630607fafd2a9d3baa8e2a697f7496cd80ccf" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9d6475ee03c015e132df4501a2717f22d67538ef" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="04f3139023e4905a2082529d528ed0fc86070079" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0d1cc323537afc67ce6ef0eb92dc2456d986a9d6" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e4279c2fc6f18cace2951eea528cbfac35e3a4fc" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c5eb6fd8191c192c6eae2bf81342d90706c4cfcb" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="55e54423b1f918c8abafe698bad7071cfb1fe148" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="337695c45e0dc71b5d33783a04298390a6a3d53f" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="088afc1f861e41e674f913c2c7e9497bd95adf1f" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8e3c9a65e014484f861684943b788eeb726d542f" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="05451a854fc40dd9309cc9315f71194d59994944" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.TreeMap.keyStepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.TreeMap.keyStepper.S&quot;&gt;S&lt;/span&gt; с &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9842618caa96f633383623712244af7827ee9e6f" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f09c7e5654244a60e229beee380f7f1986fcdcfa" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.VectorMap.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.immutable.VectorMap.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="de03274ff4403f5f1586b348a5f17ddb786864ff" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0c3937d4358da014a17cd44ae0c0a61455c09dd4" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c9ff96a83cf7a7f2c939466ef6e0ad9db37c81d0" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3839e977d33b408b0e0a896bd1746d1a16bf469f" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.HashMap.keyStepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.HashMap.keyStepper.S&quot;&gt;S&lt;/span&gt; с &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a848f2ece062134e6aa3747975a1bb2c1b42d32" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5f06b7fcfe7e478756f08d3937e44fcd31a0fa4e" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7a342d5644e22136e5a00d6334eecefeeb197b10" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="afddb88faa1f3a24f8d18697ba1fb464717e16db" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e6b65c79a276ed485a4f6935656fae792325002c" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0914738225810f7ce0faa5fdd4d886a0e7790c86" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d91d5289273501d2b50eb46960c3b062c06c6384" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9a6db126dbaa62e55ee859027c13697ac6a5d0c8" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ea7d5e419c5d1e6a5dbaac41fdee1a43256bb87d" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2061d96ba31e3d73358344b70bd575dc1d8d7c07" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c384ffc45699405ba396c294b22b6434db0c7065" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2eb9063e539926d407b73fbc833f46ae21d6b6f3" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.TreeMap.keyStepper.S&quot;&gt;S&lt;/span&gt; with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.mutable.TreeMap.keyStepper.S&quot;&gt;S&lt;/span&gt; с &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a70b05a26baceb7b51c5fdb34771b94418a64a75" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3aeb5a3461dd258fb06ca977106cf569b7e20042" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="47a4658e8303ae53c2db161ff384400fb9c8051f" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="aaea8d8934e97cf3841558386b36230b90a4b091" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1b2e1973a148c60c88aa0bd055e0686fd26e3d51" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="14aa2f01628db5ba44f430c7aac5a5dac4a3976a" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5337506727f6b64a93378b91973789c928b666e2" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="17e1cbae2870cc8099e6d6074f4d99459a0207de" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0ffc9f681559f26f5eb768ed2d5cb4171448af03" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="83a0dbdcc2a43d96639664bac0442d3ea9e90563" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d01397a8b279be9edc153e2c11f8765fac27a562" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e3161ea6fe0d591b074e5536430fa6eb79f49b3b" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b4d103031220f29a897dce80104c9e9d0d67c98c" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9adbe534bb4b71af0d7d20bf0f34838b9da44146" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6f0d2464aad1a1715e75e1cdf00b23b250e1c8c2" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cd0a69c11b8c4e7677126ce7a9cbc695adfa1353" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9372f0436560f8f392a1f97bcd797763e55b9430" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e215bcf85fbe67b38d58cc2a22dda1cfbd7907c8" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fafcc7bda86d215117d5cded377fcc1558a3de8f" translate="yes" xml:space="preserve">
          <source>def keyStepper[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;shape&quot;&gt;shape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">def keyStepper [ &lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt; [_]&lt;/span&gt; ] (неявная &lt;span name=&quot;shape&quot;&gt;форма: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt; ): &lt;span name=&quot;scala.collection.MapOps.keyStepper.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="040fee947dcc454d109199ead558abec0690481c" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="4b61578239fa21c78c094c35f554786ccf11e458" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0a23ff811b500c0e48e8471306883594de91cf10" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="34825722ad0f6d54eea864948a75237bde887382" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f7a8a70084a3ba273e9eb0c3aacba3a97f6f1489" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="11360ec7a286f9f4f4fbdc16e8dd2923db42e383" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5b49f8f17f48d98f111eef7a9d5adf62ecd016f9" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2cd271902c46106a6321fee6945a41e8fa2b262b" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="453df929c3befdbb0e43c5e19a5e0e997f3310cb" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="84d671c40820bf19a968eb5e2fe49355fb069e3d" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3696ff80e8f5176246a24907f8e9203d61937f02" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="61b06c0206f9cb5d8f5a044a9384452ea8c67130" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fe251582a50edcde6e456f33d8535eb2afd1c4c4" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9572d8b4f02a21ba13b680bb0752927f540a478a" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ea340dfa864027d65565912c2365fedbc66dc1d7" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c590a8e489ede45b1d5e0f42aa453d27acdd48c9" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d1923f48fe468c8f93c70635858e7bfa2f649838" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c22b7fbee7d24696d5d63497f448a7a7c8f3a64d" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c8d485357f95c2fa551063ce84db44617be3ebc0" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="98458414fe38b3f7afaf7ad13ff673609ccf5967" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="973a3992694e1976d5e0d0346f0434eada257530" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="72e785e99d26293407b6ef7032693f3df2ec16d6" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5c287e41ddce59469cd09bb559636eb1f8a09dcc" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="853e601afcb711a1c56e7d89b3b3879fe2815f6d" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a64be258b41bcef3796c889bdd8e6fc048c3fa3" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9c35d8901fea45fc9f61535bb89ec20c5dd90e4e" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3344f22227acb4d6e26e727e64245be04a63c4a2" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6ae080638f5e8aa26d1c63ab6d5c2258390e56f6" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9bdbc73c20bc2980911be8488d86fe32cb2373a7" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5a2f64a8bbff0e5ff9613a04499d2cb9db1725f6" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="90369c1892e088d696f4b3457b48c8bd2749e04a" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="228613a507e10582a8cde32373113a98c5ef763c" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dfd2d74972358446a7da09995c8d2a1bb3a17eef" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a73bbd0eb237f3a6639b8cd451f8762e6c86dd65" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;]</source>
          <target state="translated">def ключи: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1d3f5dbc60bce588554c8384f68408f07a7524a7" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cbc1101ecf34048ef08304346538344817221889" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5bf8c6ccd4edeff7c163a2241173f87c2c96b640" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5346a703e8a39d4196a36c7e2e04e2b20670cd25" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ff8f107736f8c82b95f80352909668b33a6bccd9" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c62d0d62649ad5f789d3e7f0c4a5df08d4d037c9" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keys: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a45be6770f48cd50f7771b38db7da30636ad72ca" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fb4a914d36c81588088a7ec65bbfc8a4ac19acdb" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e5fa32551b35eb3b297456c39fd9d15e5bfcc497" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="822500a930b2d30043a744cbfbf585c63ac24105" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e0db9e24958ac2a8c46526c6931ebe0383e1946d" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d540567d0293e09f6f8b16d4ffb3425a9931db33" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7e46d5313677d36bf54f0dc14dd44f687a86987f" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7eda157b70fa161227d23aa40c45435297b64073" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0aa409be355a7493cc28840e23b0a33c10f5f614" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="92fc77b99813fb50868a8210c5ed53e8c2aef494" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="901ccef2155f6a7364e34f2a9a1093e0e0b5e111" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="546fc006d64a47e971a8089aa91cee75eb01397e" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d67007b7dcbeda400b64386442edd88d800738fd" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="312d51fb81f64514ddbcf789eedb9cec0e1e5bb9" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="21e77cf9b63b01d3ecb8c384963e8fd0adeaedaf" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2d8ddc520ecb5098e68246097be2eaac273b720d" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="14d9e2e599dbb8e429d25465e3158bfe13f11c8a" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d15af8d917cdb50a11f0452d238efabe3ceaa8ed" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1693fcfaa593c05101c9be9aa096862590243d71" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0265e29724d9334e6a662387db9b115a2717ba49" translate="yes" xml:space="preserve">
          <source>def keys: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">ключи def: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="89cc9cdcddab07e463b31c93c84409664606d4cc" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f877297fdc5a494199e598970a9ef670dceb3ee9" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="a54f945ac20d845f199b4d326077dfa1c4bf8491" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b15cdfcf8b35a677d451f6d0555be3756b75ed94" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="72a3778ad0f586c31a0daf505aec919865fd5221" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="420e7f3b7c3d6667468b3f5aadb809b129ad247a" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9d791fe97b4602492d94810a701ca87cccb86b81" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e7a99e8c1dddc688f7fff9db623d52f14eb15e07" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eb3ebe2e6528580a26cba2856d5db3043b18f4b4" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="03ce609165fe3a327b69c011a0b7fc4debac97d7" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="294302498c5cbdffd2fdfc64d282bbdd49076ae9" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1731b318fbf91f57a616062028e907e15fa48081" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9c247bbd22669fea6edecff3a957e8a780763439" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b879c57db65ad4d0fbb83fc3069d0a0b00cf501c" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6691dd7094edbac4493fa347bab30a52ed186e6b" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dd44a6808e674da32ea24aef14913e918f2316e5" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="81143e70e3ac13919e1a92df0daf5cfa16cc5e1f" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5fde5c3c3ce398a485e7a1a67ffdd748f28bafa2" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="49a1d95b5b5523e520475d8706eca097588a0d85" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="17dbb09518de0895bdcb1561397f98fd99db8146" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3e94344d5406dd422f154c6476ed1534de1a2663" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="75bba52930febb3860917ec07ff0b4b0c3ebf284" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="42c4a2a91782134c31a7ec8cb00727939e6bc506" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1b3dcb793deda10166a1a0aa6507b4a00df59f46" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f52e4d250afc272240af0e0cf97170fb0f159a4f" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5c6c740dd77b4ecf474dd58353660a94046cdd32" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8d601e3ddc05b728db3b9cfa0a63923c2f88665e" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3ea36688dd4da6e6b79004befca1184eb46a8745" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b833562d76b1534b2981ec32d1fd2a0387a55df3" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="acbaf7c304dffd76835afb78854ce72666258d2f" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="56543efc0eaafa481b99e0baaff7492f4a125d87" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4dc2a2e4180e7879f96ca24990a691028252c748" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c452895b63573c8af4428a57b2984c0bedbc8284" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2a910b9d37d72b1a0295ead269c0cc770c78f2e9" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="93dba2d2cadd351b96970b26243236c81fb0219f" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="50aa8ea410ffee8d7eee38bcf547eecd75017a5f" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Ключ&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d34a9e5fb7937d5d9d592f21122e5d8a09198b50" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0373355e5da1ddbd87f63a007e703722675a5a12" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="54045a0f82bc50ab4022053e42c8e8d681cc9659" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6043bfd3908529eaf0ef5a32871f2755872112e2" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0331a7461176d3078c97de32446a584d207c1298" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="48af9fe2bdda3a9b804d19418b4233c174b59e28" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c07f590807c8f20721aab11e732dc21a3984b357" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="17bf2a3776c46e76f53df1008719844ea1d131b1" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c8f8ad1bca5e474dc8c12a14b0aa05084fb0c56e" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="25380e44671a4d5620a72047ca9477d362b52630" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8fe823a9f001e98eb76ede9b616f6df1775b4939" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="760cfb3a28639ee58db91e00e35cc2af7da6c536" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5d7a1dec7a2d3310d7efeeeec452a236187e1802" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f48ca74dbe791ed0243a7e6299b4a6e266a02752" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b48034c50a32a4f3bd38497a916beb3800fce96a" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cfed81e25f30b9878fe154d9a397d0e7fb492e0b" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6256cfcd833c6d302b0e7c4a6f4bb379aba61964" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d292d64ca26936b8a1df9d67b9c630fe05fcc9aa" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0bde7cca2f95d702bfdbf26853ea22dd09af0f77" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ab30732b4b07347f4f3b00c220db9cd0e48f1e9b" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="184137df1daaeea7766a27dca4fcee30e8fe7e7d" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="76cb8d1fd6bb05b5178b4cb3a6875e14d065f98b" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="84362c2ddf1d2eb9624d807942f177e4d04289b5" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="97372a09be57c46a889f8ee4f1dd4332cb19f0a4" translate="yes" xml:space="preserve">
          <source>def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eec87a9e677bba9880ffeadd42741fad69acbeee" translate="yes" xml:space="preserve">
          <source>def keysIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIteratorFrom ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1cab42216e0b283f47b40850928a08d8357c327a" translate="yes" xml:space="preserve">
          <source>def keysIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIteratorFrom ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="00144a897cb37ad8c4570d65666a9223957a647c" translate="yes" xml:space="preserve">
          <source>def keysIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIteratorFrom ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c90da908d7633e7a2dfd48d8e208a3dbd89f7359" translate="yes" xml:space="preserve">
          <source>def keysIteratorFrom(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="translated">def keysIteratorFrom ( &lt;span name=&quot;start&quot;&gt;начало: &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt; ): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Итератор&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="699231c0fa9cf4430be151e0b51bc6fcd80dfdda" translate="yes" xml:space="preserve">
          <source>def klone(): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def klone (): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="29b3452f93b277528f091529ace1197fec75cf8c" translate="yes" xml:space="preserve">
          <source>def klone(): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def klone (): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Очередь&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="78f4bc01ec66c76a804c5946fa0972ea6a818ac9" translate="yes" xml:space="preserve">
          <source>def klone(): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">def klone (): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Стек&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f215115d62f6324689b0a1aeb2350d47a771ffeb" translate="yes" xml:space="preserve">
          <source>def knownSize: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def knownSize: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="befcca30053be8fc921affc0d6617b6de4b0cdcc" translate="yes" xml:space="preserve">
          <source>def knownSize: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def knownSize: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34d3ebe339899c3ce1dd710a50f2f88202a59267" translate="yes" xml:space="preserve">
          <source>def knownSize: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">def knownSize: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44720ac7c244e1d0bb0d8241b8e6133ca18e48c3" translate="yes" xml:space="preserve">
          <source>def knownSize: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;</source>
          <target state="translated">def knownSize: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e455fd8ed9c6c9466df376ab0218b7054f529764" translate="yes" xml:space="preserve">
          <source>def last: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Длинный&lt;/a&gt; , &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="328035ce3ed749c79a15d2a6aeeaa92daa387933" translate="yes" xml:space="preserve">
          <source>def last: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">def last: ( &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Строка&lt;/a&gt; , &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;Строка&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="1f36280c66d915c9c3bb3cf7109c301400db4907" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="eb043a89d6b208edce98407a1b61ced66b18c5c3" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="1892a5d4a44707e6aab3b4171846282c7b11e2bc" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="12821232637d22a009a94438f18f5d8f88340226" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="9cc69a9854702fd47e4f8fe516ebc0db0ccb9878" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="dd1c24e9611ad4b69248ec5519d3d04c39778071" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)</source>
          <target state="translated">по &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;умолчанию&lt;/span&gt; : ( &lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt; , &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="b34fdc74847d50fab3c231f1016d65fcdbb354f5" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="bf0da562c709d556bb89338d162d2c4e40c2d688" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ed2416da31046856899452396101f6fe667010d9" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a68d9563019536221fae1bf39a0e02469facf18d" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="dd96fdd83676e510569c9c893114928e70160501" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="552d2200629f5f609d30361961fd48524fa7ad56" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="2760a6ca64e70aa8e668b5dda4ff295cba4a2604" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="39ddfbe5ed0325fd235aef88e77b2905b4a24857" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="4f9b7b70c409d8b55346f33802ca9c5ccbfa7199" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="0c2fd354581a04b807c7a50d5dd484fc8cceeca5" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="44400da5aced44db45b45f8b1f540c5b2e6628b1" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="26c547147109f2e9e71ef0a488d445e04ef9cf4f" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="f53eb93012942174a31c3f05f6218b057eec59ef" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ad535e406cb7963a6bfafee8501ad421fbaaa93b" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="400665d2f2f9aee5ef56edbcff852bb6f0df1e60" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="8341edfc3ff03b5d57d959ceb33928924e4f70b1" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="487ba7f323e56e57091a710513cd8fe46c85308e" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt; , &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="87b533f1d491fc0845c5c4c60969edb966b72800" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt; , &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="bc701274a96b91411b7a7d5a6c076c09628f08c3" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="d61f6648151191431056f88c6cd8abc24dc71286" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="60ff3ca7cba0aaad34ab00001d20d7434b419d19" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="6cb32825c8b360e2c24828b52faf3f507b72b6fb" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="de9d889808e36e7f831f29002919f3030975240e" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="b6ae9a8e5adedc6fb4630fd160f5f525ed0d5ca5" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ca3eafb3c9673e2c3ea9dc131be1fc0b30d8f92c" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="746c917d57a85ec42dc4e65b49b9d8018530721f" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="45f7a00a26fce1c9b1a0527ab69401d94026121f" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="03cefb4afc7f9aafc614a6c8f92dac535b978923" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="92028a1d0590f1020cafbf41f796c6c2cd51544c" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="7718915f7fc19e466bed2d40eb3cabeeab2b229a" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="9e1981962a705a88daf14b0584d423aa85b4ef3c" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="6a608dd6bb62fd37e86e1efe04aa614bf0e45d6a" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="17f0409805c48626b9f748637177795ff3ee43c2" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="bf0921124c832522653e7f6964b7ea5bea551e8a" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="c6220cc335287d4403b28eb33e05cf38e2fb2287" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="60e9cae46d076c471a4e4d7f26d408d9654692f9" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="502bd96161006d6b4a18dc29d2e5e076bf175912" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="40c7b320c9e87563c12d49f67d2faf7e5fe154d7" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="60fbf0fec3cb96057d77cb9be7585c9160e92e35" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="4154e1ead3c3384601b7d8e75fcd77d25c91b662" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="d6589e737a0e5db64af141ab9286bf207188b7e5" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="be63cae5e19a87f6f6be43b05036242a956ac432" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="8f0731d9cc87f62cd3d6c6358799044b76ed0ec0" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="8d3bab994ce3ab7bb2ed67b6e4ac866c3785e06e" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="61e352224b2c640d37444cc255dddd2e91150a9b" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="73eb7ae5712ba86385b8b5e4a2c6837e6a6491b6" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="5f8ad61e491bf07aea2603ccc35272106c2697f1" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="9c83ed3d884571afeb7e5d83eec8527becb09e30" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="d16e8ddd5038af209644465bda17d14b58e3c945" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="4a5749d2bc47ddae32e5b0031e45094be053ff77" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="c8a140bc2de62de2830a373a6617ac3c7c813f1d" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt; , &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt; [&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt; V&lt;/span&gt; ])</target>
        </trans-unit>
        <trans-unit id="8bd6526eeed33538c2efd85ced7d71649bd28238" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Ключ&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Значение&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="a40ee8375490c0b1e7fd78e62eee8e658ffed6de" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="0073917b5c8a3eafcf4888c94e34969655da4ee9" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="3f8f42b8315431dc46df98e2f6bb4c1d3713607e" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="ce871c76e359646f134b22564425e583ec9f6c37" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="3b89ca45b5b39e06e4fb7faafa40746d950e748d" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="9c23ef58ca3aa17d986277ea2380f6a788f717ba" translate="yes" xml:space="preserve">
          <source>def last: (&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)</source>
          <target state="translated">def last: ( &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt; , &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt; )</target>
        </trans-unit>
        <trans-unit id="1d76e538f7f20c3006f4cad1ae301d259656ca48" translate="yes" xml:space="preserve">
          <source>def last: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">def last: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13770b05f81fc81f219de9d1b46ffa800ffe3e8c" translate="yes" xml:space="preserve">
          <source>def last: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="translated">def last: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Байт&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c5e8076530e6d4d8498d85e3e20ff780effcc99" translate="yes" xml:space="preserve">
          <source>def last: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">def last: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16dcabc3802cccb312549dedd6a1bcc74e2e4b9a" translate="yes" xml:space="preserve">
          <source>def last: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">def last: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;двойной&lt;/a&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
