<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="2ea9417e46d243404ec3c296058e12f5458be748" translate="yes" xml:space="preserve">
          <source>Function pointer to pointer cast</source>
          <target state="translated">Указатель функции для литья указателя</target>
        </trans-unit>
        <trans-unit id="aff25779a650561f51919916715a331dbe79e151" translate="yes" xml:space="preserve">
          <source>Function pointer types</source>
          <target state="translated">Типы указателей функций</target>
        </trans-unit>
        <trans-unit id="45d7a4aae060a99add3462979349c03f64926590" translate="yes" xml:space="preserve">
          <source>Function pointer types (e.g., &lt;code&gt;fn() -&amp;gt; i32&lt;/code&gt;)</source>
          <target state="translated">Типы указателей на функции (например, &lt;code&gt;fn() -&amp;gt; i32&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b24ffbdb9339fdeaf0aa7876f8b677a6e93905b1" translate="yes" xml:space="preserve">
          <source>Function pointer types, written using the &lt;code&gt;fn&lt;/code&gt; keyword, refer to a function whose identity is not necessarily known at compile-time. They can be created via a coercion from both &lt;a href=&quot;function-item&quot;&gt;function items&lt;/a&gt; and non-capturing &lt;a href=&quot;closure&quot;&gt;closures&lt;/a&gt;.</source>
          <target state="translated">Типы указателей на функции, записанные с использованием ключевого слова &lt;code&gt;fn&lt;/code&gt; , относятся к функции, идентификатор которой не обязательно известен во время компиляции. Они могут быть созданы с помощью принуждения как из &lt;a href=&quot;function-item&quot;&gt;функциональных элементов, так&lt;/a&gt; и из &lt;a href=&quot;closure&quot;&gt;закрытий&lt;/a&gt; без захвата .</target>
        </trans-unit>
        <trans-unit id="d6054df2c54398efbf27ace21713f95c0a24cb59" translate="yes" xml:space="preserve">
          <source>Function pointers</source>
          <target state="translated">Функциональные указатели</target>
        </trans-unit>
        <trans-unit id="fbcf7edbb2c6d77dc22438afcec72a59e2993480" translate="yes" xml:space="preserve">
          <source>Function pointers are pointers that point to &lt;em&gt;code&lt;/em&gt;, not data. They can be called just like functions. Like references, function pointers are, among other things, assumed to not be null, so if you want to pass a function pointer over FFI and be able to accommodate null pointers, make your type &lt;code&gt;Option&amp;lt;fn()&amp;gt;&lt;/code&gt; with your required signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15cdfd633c5d7b0c70793f7c9489a755e1d6379f" translate="yes" xml:space="preserve">
          <source>Function pointers implement all three of the closure traits (&lt;code&gt;Fn&lt;/code&gt;, &lt;code&gt;FnMut&lt;/code&gt;, and &lt;code&gt;FnOnce&lt;/code&gt;), so you can always pass a function pointer as an argument for a function that expects a closure. It&amp;rsquo;s best to write functions using a generic type and one of the closure traits so your functions can accept either functions or closures.</source>
          <target state="translated">Указатели функций реализуют все три признака закрытия ( &lt;code&gt;Fn&lt;/code&gt; , &lt;code&gt;FnMut&lt;/code&gt; и &lt;code&gt;FnOnce&lt;/code&gt; ), поэтому вы всегда можете передать указатель на функцию в качестве аргумента для функции, ожидающей закрытия. Лучше всего писать функции с использованием универсального типа и одного из признаков замыкания, чтобы ваши функции могли принимать либо функции, либо замыкания.</target>
        </trans-unit>
        <trans-unit id="e715fbc2788b68f15adb3e2fe42db1f1b3eb63be" translate="yes" xml:space="preserve">
          <source>Function pointers implement the following traits:</source>
          <target state="translated">Функциональные указатели реализуют следующие характеристики:</target>
        </trans-unit>
        <trans-unit id="99b2ae8582343bc9c462a6f08e79b5d728c91e61" translate="yes" xml:space="preserve">
          <source>Function pointers, like &lt;code&gt;fn(usize) -&amp;gt; bool&lt;/code&gt;.</source>
          <target state="translated">Указатели на функции, например &lt;code&gt;fn(usize) -&amp;gt; bool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a456906988ca1f218d8ec9026e2b7d0d28b99d1f" translate="yes" xml:space="preserve">
          <source>Function results&amp;mdash;either the final line of a block if it is not semicolon-terminated or any expression in a &lt;code&gt;return&lt;/code&gt; statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a229e02f3fc60bc509ebb974aa38b72eb187af" translate="yes" xml:space="preserve">
          <source>Function results, either the final line of a block if it is not semicolon-terminated or any expression in a &lt;code&gt;return&lt;/code&gt; statement</source>
          <target state="translated">Результаты функции, либо в последней строке блока , если он не точка с запятой в конце , или любое выражение в &lt;code&gt;return&lt;/code&gt; заявлении</target>
        </trans-unit>
        <trans-unit id="29f4f46b2b3a18a824f7e4d35e9bedb57b1f2175" translate="yes" xml:space="preserve">
          <source>Function std::alloc::alloc</source>
          <target state="translated">Функция std::аллокация::аллокация</target>
        </trans-unit>
        <trans-unit id="c194290249edf0618f600e420e211418fd7ea58d" translate="yes" xml:space="preserve">
          <source>Function std::alloc::alloc_zeroed</source>
          <target state="translated">Функция std::allocation::alloc_zeroed</target>
        </trans-unit>
        <trans-unit id="c55dc24d1719cca7c04e3e54ee8524fba6daf3ee" translate="yes" xml:space="preserve">
          <source>Function std::alloc::dealloc</source>
          <target state="translated">Функция std::allocation::dealloc</target>
        </trans-unit>
        <trans-unit id="f0a706cc72c3f62f4ea5f25a2d577f9c7dcb0b9c" translate="yes" xml:space="preserve">
          <source>Function std::alloc::handle_alloc_error</source>
          <target state="translated">Функция std::allocation::handle_alloc_error</target>
        </trans-unit>
        <trans-unit id="5107e49cfb1f88cc3e2a0a8f7ef7e8b1243aeff1" translate="yes" xml:space="preserve">
          <source>Function std::alloc::realloc</source>
          <target state="translated">Функция std::allocation::realloc</target>
        </trans-unit>
        <trans-unit id="cdfb037e537e5020acc31cc65ff942f2e9f7206e" translate="yes" xml:space="preserve">
          <source>Function std::alloc::set_alloc_error_hook</source>
          <target state="translated">Функция std::allocation::set_alloc_error_hook</target>
        </trans-unit>
        <trans-unit id="d3914accafdbce71005fb9461f231fd4f5ddabd1" translate="yes" xml:space="preserve">
          <source>Function std::alloc::take_alloc_error_hook</source>
          <target state="translated">Функция std::allocation::take_alloc_error_hook</target>
        </trans-unit>
        <trans-unit id="02460030ea5749077815712a0ec7615c21f8abed" translate="yes" xml:space="preserve">
          <source>Function std::ascii::escape_default</source>
          <target state="translated">Функция std::ascii::escape_default</target>
        </trans-unit>
        <trans-unit id="7c07dd33165ae734e5190fd9441a0896193554d6" translate="yes" xml:space="preserve">
          <source>Function std::char::decode_utf16</source>
          <target state="translated">Функция std::char::decode_utf16</target>
        </trans-unit>
        <trans-unit id="4247dc6a69dffc51becd83114cd73f82d393cde9" translate="yes" xml:space="preserve">
          <source>Function std::char::from_digit</source>
          <target state="translated">Функция std::char::from_digit</target>
        </trans-unit>
        <trans-unit id="01947a1ff576a2d0100c1951a0c5226b70685cd8" translate="yes" xml:space="preserve">
          <source>Function std::char::from_u32</source>
          <target state="translated">Функция std::char::from_u32</target>
        </trans-unit>
        <trans-unit id="6dfcd96fdbe2623e4e1d282ca8990e4d07c57639" translate="yes" xml:space="preserve">
          <source>Function std::char::from_u32_unchecked</source>
          <target state="translated">Функция std::char::from_u32_unchecked</target>
        </trans-unit>
        <trans-unit id="966fc7af79edea1b5d808685aa0ece42863cd0bd" translate="yes" xml:space="preserve">
          <source>Function std::cmp::max</source>
          <target state="translated">Функция std::cmp::max</target>
        </trans-unit>
        <trans-unit id="d81416a60431cc075bb472188b6b7e44301f4309" translate="yes" xml:space="preserve">
          <source>Function std::cmp::min</source>
          <target state="translated">Функция std::cmp::min</target>
        </trans-unit>
        <trans-unit id="3e137b166d99decd00ae7a0d041b9dad569ce9b9" translate="yes" xml:space="preserve">
          <source>Function std::convert::identity</source>
          <target state="translated">Функция std::convert::identity</target>
        </trans-unit>
        <trans-unit id="bef3f6086da2cb5d3c82ba307db11b82bdd500e4" translate="yes" xml:space="preserve">
          <source>Function std::env::args</source>
          <target state="translated">Функция std::env::args</target>
        </trans-unit>
        <trans-unit id="a7011b47e8ac03fcbd9255878cf4c2155deab1f8" translate="yes" xml:space="preserve">
          <source>Function std::env::args_os</source>
          <target state="translated">Функция std::env::args_os</target>
        </trans-unit>
        <trans-unit id="fb6d2bc291dd13ab649f3064189f28948f498c90" translate="yes" xml:space="preserve">
          <source>Function std::env::current_dir</source>
          <target state="translated">Функция std::env::current_dir</target>
        </trans-unit>
        <trans-unit id="33c219e274f54fd4c2901cadeb8cb8a1716b07ee" translate="yes" xml:space="preserve">
          <source>Function std::env::current_exe</source>
          <target state="translated">Функция std::env::current_exe</target>
        </trans-unit>
        <trans-unit id="93bdb0baaee9eb9479f683bb8e51de0bf9436845" translate="yes" xml:space="preserve">
          <source>Function std::env::home_dir</source>
          <target state="translated">Функция std::env::home_dir</target>
        </trans-unit>
        <trans-unit id="dc6d846e434726288d053c67c7f123047bc5b25a" translate="yes" xml:space="preserve">
          <source>Function std::env::join_paths</source>
          <target state="translated">Функция std::env::join_paths</target>
        </trans-unit>
        <trans-unit id="bbe13942873b051106118872ceff377d6414cbd0" translate="yes" xml:space="preserve">
          <source>Function std::env::remove_var</source>
          <target state="translated">Функция std::env::remove_var</target>
        </trans-unit>
        <trans-unit id="a0ef2707df0c48fd4a3170eabef1fe897798e008" translate="yes" xml:space="preserve">
          <source>Function std::env::set_current_dir</source>
          <target state="translated">Функция std::env::set_current_dir</target>
        </trans-unit>
        <trans-unit id="40c0dc02c3e18407f97eaa7464d7aab31d55dfea" translate="yes" xml:space="preserve">
          <source>Function std::env::set_var</source>
          <target state="translated">Функция std::env::set_var</target>
        </trans-unit>
        <trans-unit id="59db75e19e909089d5b25a261bb16556aafffc1d" translate="yes" xml:space="preserve">
          <source>Function std::env::split_paths</source>
          <target state="translated">Функция std::env::split_paths</target>
        </trans-unit>
        <trans-unit id="c9d56410023af3d25f02f24fd607ad8d19e28e03" translate="yes" xml:space="preserve">
          <source>Function std::env::temp_dir</source>
          <target state="translated">Функция std::env::temp_dir</target>
        </trans-unit>
        <trans-unit id="b44ade5af9baa85bddb409115f11d8a3c50eb27b" translate="yes" xml:space="preserve">
          <source>Function std::env::var</source>
          <target state="translated">Функция std::env::var</target>
        </trans-unit>
        <trans-unit id="515bff141b585b0fb43f2fd81c4ab54894f59b00" translate="yes" xml:space="preserve">
          <source>Function std::env::var_os</source>
          <target state="translated">Функция std::env::var_os</target>
        </trans-unit>
        <trans-unit id="50d6f97705009dc1e9db00019a283d41dc6945fd" translate="yes" xml:space="preserve">
          <source>Function std::env::vars</source>
          <target state="translated">Функция std::env::vars</target>
        </trans-unit>
        <trans-unit id="d0827162d968005e34a0d42ba5ac51aa36efcf56" translate="yes" xml:space="preserve">
          <source>Function std::env::vars_os</source>
          <target state="translated">Функция std::env::vars_os</target>
        </trans-unit>
        <trans-unit id="797538d7608a17a03d5648866da9d6b3f078ba33" translate="yes" xml:space="preserve">
          <source>Function std::fmt::format</source>
          <target state="translated">Функция std::fmt::format</target>
        </trans-unit>
        <trans-unit id="76a06aa8251b2d9f167fedfb35746c3cf97e2ac8" translate="yes" xml:space="preserve">
          <source>Function std::fmt::write</source>
          <target state="translated">Функция std::fmt::write</target>
        </trans-unit>
        <trans-unit id="7fdb91a20cf7c4148e5350b6228d741645e0e6c4" translate="yes" xml:space="preserve">
          <source>Function std::fs::canonicalize</source>
          <target state="translated">Функция std::fs:::канонизировать</target>
        </trans-unit>
        <trans-unit id="44ca34ff0e7fcde3369397bebf2cb450b447625e" translate="yes" xml:space="preserve">
          <source>Function std::fs::copy</source>
          <target state="translated">Функция std::fs::копирование</target>
        </trans-unit>
        <trans-unit id="79b6cf93dfdb5969925a9bbf30fbc1a32165b6cc" translate="yes" xml:space="preserve">
          <source>Function std::fs::create_dir</source>
          <target state="translated">Функция std::fs::create_dir</target>
        </trans-unit>
        <trans-unit id="649c1df373944ba216c813f37e0990377d5a6ab3" translate="yes" xml:space="preserve">
          <source>Function std::fs::create_dir_all</source>
          <target state="translated">Функция std::fs::create_dir_all</target>
        </trans-unit>
        <trans-unit id="aec64a3774022c217f50a9076ac42b9fb6d48ec2" translate="yes" xml:space="preserve">
          <source>Function std::fs::hard_link</source>
          <target state="translated">Функция std::fs::hard_link</target>
        </trans-unit>
        <trans-unit id="2e6dfe4827a34c58684389da7b0164086c1599e4" translate="yes" xml:space="preserve">
          <source>Function std::fs::metadata</source>
          <target state="translated">Функция std::fs::метаданные</target>
        </trans-unit>
        <trans-unit id="257ab42da62059ca592eb29ecce0ba6bb9f767ea" translate="yes" xml:space="preserve">
          <source>Function std::fs::read</source>
          <target state="translated">Функция std::fs::read</target>
        </trans-unit>
        <trans-unit id="488209597226b1646d1224bfbda57c84f45dc7d2" translate="yes" xml:space="preserve">
          <source>Function std::fs::read_dir</source>
          <target state="translated">Функция std::fs::read_dir</target>
        </trans-unit>
        <trans-unit id="0f7c945a8871e4c87b4c07b8880a2b36fc0ce855" translate="yes" xml:space="preserve">
          <source>Function std::fs::read_link</source>
          <target state="translated">Функция std::fs::read_link</target>
        </trans-unit>
        <trans-unit id="28b8da08cde6c3f8ae6f6e98d4dd66e03f939569" translate="yes" xml:space="preserve">
          <source>Function std::fs::read_to_string</source>
          <target state="translated">Функция std::fs::read_to_string</target>
        </trans-unit>
        <trans-unit id="1069c1141b6eaeb5de5bd2c0a071bfa97d894617" translate="yes" xml:space="preserve">
          <source>Function std::fs::remove_dir</source>
          <target state="translated">Функция std::fs::remove_dir</target>
        </trans-unit>
        <trans-unit id="c3cdc1eed161b18d3222b0df7bb2a073cb3a3c45" translate="yes" xml:space="preserve">
          <source>Function std::fs::remove_dir_all</source>
          <target state="translated">Функция std::fs::remove_dir_all</target>
        </trans-unit>
        <trans-unit id="cbcb0bbc9d59dd97c42d329740ea7f8f01cc1fb7" translate="yes" xml:space="preserve">
          <source>Function std::fs::remove_file</source>
          <target state="translated">Функция std::fs::remove_file</target>
        </trans-unit>
        <trans-unit id="af4b065e7ab7d2238b740f9812576377e5cd02d1" translate="yes" xml:space="preserve">
          <source>Function std::fs::rename</source>
          <target state="translated">Функция std::fs::переименование</target>
        </trans-unit>
        <trans-unit id="62954bd39f77dcd80b31f5a005cdf3185851bf80" translate="yes" xml:space="preserve">
          <source>Function std::fs::set_permissions</source>
          <target state="translated">Функция std::fs::set_permissions</target>
        </trans-unit>
        <trans-unit id="b73007edcf070db673623f198d05db893c057abf" translate="yes" xml:space="preserve">
          <source>Function std::fs::soft_link</source>
          <target state="translated">Функция std::fs::soft_link</target>
        </trans-unit>
        <trans-unit id="c1609b2e48046eeca39f684e9f2c1c5ab0e14c04" translate="yes" xml:space="preserve">
          <source>Function std::fs::symlink_metadata</source>
          <target state="translated">Функция std::fs::symlink_metadata</target>
        </trans-unit>
        <trans-unit id="42a53d0022af817a39762880cd798efaddb33270" translate="yes" xml:space="preserve">
          <source>Function std::fs::write</source>
          <target state="translated">Функция std::fs::write</target>
        </trans-unit>
        <trans-unit id="44b1ca263375f3e80c5d474d85e7edb549b59317" translate="yes" xml:space="preserve">
          <source>Function std::hint::black_box</source>
          <target state="translated">Функция std::hint::black_box</target>
        </trans-unit>
        <trans-unit id="23fd76dd636e9b48c8e0406a01f4377257e851c2" translate="yes" xml:space="preserve">
          <source>Function std::hint::spin_loop</source>
          <target state="translated">Функция std::hint::spin_loop</target>
        </trans-unit>
        <trans-unit id="c1dcca4e40039d28eec49d9f033066ddf377892d" translate="yes" xml:space="preserve">
          <source>Function std::hint::unreachable_unchecked</source>
          <target state="translated">Функция std::hint::unreachable_unchecked</target>
        </trans-unit>
        <trans-unit id="c04a12aeb32eb6ee408f0172379e7189d04f7fa7" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::abort</source>
          <target state="translated">Функция std::intrinsics::abort</target>
        </trans-unit>
        <trans-unit id="083951e2b60b4a5d3ecc13ab8a8c68c9bcb5e379" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::add_with_overflow</source>
          <target state="translated">Функция std::intrinsics::add_with_overflow</target>
        </trans-unit>
        <trans-unit id="9576b2752f5e3b22d5d58bfbf2ee067369a00927" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::arith_offset</source>
          <target state="translated">Функция std::intrinsics::arith_offset</target>
        </trans-unit>
        <trans-unit id="55e9043125ea3a71432799ddbd5b5de5c59e4507" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::assume</source>
          <target state="translated">Функция std::intrinsics::предположить.</target>
        </trans-unit>
        <trans-unit id="97bd81f0aecc23f2c1c6e2f2556a8a5a193fa85e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_and</source>
          <target state="translated">Функция std::intrinsics::atomic_and</target>
        </trans-unit>
        <trans-unit id="83db485cd65a9c1d60ee6553eeb93464c015dcd6" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_and_acq</source>
          <target state="translated">Функция std::intrinsics::atomic_and_acq</target>
        </trans-unit>
        <trans-unit id="2a136fca51e5841f60fee7bd01c6763f69802dd1" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_and_acqrel</source>
          <target state="translated">Функция std::intrinsics::atomic_and_acqrel</target>
        </trans-unit>
        <trans-unit id="de28434a57082bbad9e31bcf13a493f64eeed44c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_and_rel</source>
          <target state="translated">Функция std::intrinsics::atomic_and_rel</target>
        </trans-unit>
        <trans-unit id="35b947f77ad8b80a16f2858b7963283c7447f554" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_and_relaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_and_relaxed</target>
        </trans-unit>
        <trans-unit id="a85031e9d18ed4fd2273a2554abf20d5d0e04d42" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg</source>
          <target state="translated">Функция std::intrinsics::atomic_cxchg</target>
        </trans-unit>
        <trans-unit id="21bafabb725c8d186f53d9a39873b76562515d5e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_acq</source>
          <target state="translated">Функция std::intrinsics::atomic_cxchg_acq</target>
        </trans-unit>
        <trans-unit id="9956c269fbb5ef5958060b15ea303e7f003fbf56" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_acq_failrelaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_cxchg_acq_failrelaxed</target>
        </trans-unit>
        <trans-unit id="e1a505536784b5179da9f68a2284af4a99c45b36" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_acqrel</source>
          <target state="translated">Функция std::intrinsics::atomic_cxchg_acqrel</target>
        </trans-unit>
        <trans-unit id="192a1cc6826d7c91266da1d6cb911584811f7a90" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_acqrel_failrelaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_cxchg_acqrel_failrelaxed</target>
        </trans-unit>
        <trans-unit id="0156b2ddfed79dfb74958e12504cd6470faf5b91" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_failacq</source>
          <target state="translated">Функция std::intrinsics::atomic_cxchg_failacq</target>
        </trans-unit>
        <trans-unit id="55409e6ca1ad5c432b928eb8ce23a904c33f647f" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_failrelaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_cxchg_failrelaxed</target>
        </trans-unit>
        <trans-unit id="39f0c4bec736294fa36eea7dac60d5fa82a8a97d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_rel</source>
          <target state="translated">Функция std::intrinsics::atomic_cxchg_rel</target>
        </trans-unit>
        <trans-unit id="eaaab3b78d863b2e9f71342b771707d5b6ede81a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchg_relaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_cxchg_relaxed</target>
        </trans-unit>
        <trans-unit id="23a2de8b090010417f7343ed9f647e4c4638c9fe" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak</source>
          <target state="translated">Функция std::intrinsics::atomic_cxchgweak</target>
        </trans-unit>
        <trans-unit id="d32ebae9ccacf8b7aaf5dcdd672e08c3462188de" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_acq</source>
          <target state="translated">Функция std::intrinsics::atomic_cxchgweak_acq</target>
        </trans-unit>
        <trans-unit id="a0d6493411c30c055a9bbf2189993ff6cb18a401" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_acq_failrelaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_cxchgweak_acq_failrelaxed</target>
        </trans-unit>
        <trans-unit id="84d51cb5de7124a1441c5850c06600665e87afbf" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_acqrel</source>
          <target state="translated">Функция std::intrinsics::atomic_cxchgweak_acqrel</target>
        </trans-unit>
        <trans-unit id="be384c57178230ae73b1a71a2f45edbcd29561cb" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_acqrel_failrelaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_cxchgweak_acqrel_failrelaxed</target>
        </trans-unit>
        <trans-unit id="1cae0c31481303abd7d3122fbbb4550b4b0fe2ae" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_failacq</source>
          <target state="translated">Функция std::intrinsics::atomic_cxchgweak_failacq</target>
        </trans-unit>
        <trans-unit id="b2a3b45d3b55aecacb1cf5ad3f42130bd04b90ee" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_failrelaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_cxchgweak_failrelaxed</target>
        </trans-unit>
        <trans-unit id="dbdc85ce325264420dee74eb369011abf2328c62" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_rel</source>
          <target state="translated">Функция std::intrinsics::atomic_cxchgweak_rel</target>
        </trans-unit>
        <trans-unit id="dfea14fc309810b18b76b8d8d9eea0624c669c56" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_cxchgweak_relaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_cxchgweak_relaxed</target>
        </trans-unit>
        <trans-unit id="93e77549e8c09b3d6a47e1aae1153a3c86f218d6" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_fence</source>
          <target state="translated">Функция std::intrinsics::atomic_fence</target>
        </trans-unit>
        <trans-unit id="9e80e29f5375e2b133e83fcec9042440ad13c3ab" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_fence_acq</source>
          <target state="translated">Функция std::intrinsics::atomic_fence_acq</target>
        </trans-unit>
        <trans-unit id="e276f5f0bdfe137b7fb724ce874c30180445d419" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_fence_acqrel</source>
          <target state="translated">Функция std::intrinsics::atomic_fence_acqrel</target>
        </trans-unit>
        <trans-unit id="5e0c13004af1995e4249efaadcf55bab23d8b1f0" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_fence_rel</source>
          <target state="translated">Функция std::intrinsics::atomic_fence_rel</target>
        </trans-unit>
        <trans-unit id="fa5f8c9ce76fefde99e7d3efd807ca1a43f8ab6c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_load</source>
          <target state="translated">Функция std::intrinsics::atomic_load</target>
        </trans-unit>
        <trans-unit id="12a79df9539f7af796dbd45e1c54ed05f27b0df6" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_load_acq</source>
          <target state="translated">Функция std::intrinsics::atomic_load_acq</target>
        </trans-unit>
        <trans-unit id="e773d44fb21e58e51b7c05a644c45d38cd9ed277" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_load_relaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_load_relaxed</target>
        </trans-unit>
        <trans-unit id="44d5fbea38425f45c85b674130abc87f20105c47" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_load_unordered</source>
          <target state="translated">Функция std::intrinsics::atomic_load_unordered</target>
        </trans-unit>
        <trans-unit id="76f39339c62e3cc8ba58c9228348d006ee9dc8cb" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_max</source>
          <target state="translated">Функция std::intrinsics::atomic_max</target>
        </trans-unit>
        <trans-unit id="adfa1e651df3ca8dba7602e63cea98a1124a3cd4" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_max_acq</source>
          <target state="translated">Функция std::intrinsics::atomic_max_acq</target>
        </trans-unit>
        <trans-unit id="a3b4665a7942063ce1a70d83d46c8633384f998d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_max_acqrel</source>
          <target state="translated">Функция std::intrinsics::atomic_max_acqrel</target>
        </trans-unit>
        <trans-unit id="ac0d6a9ff3e4081282044c1c5ed630f732b0b4ef" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_max_rel</source>
          <target state="translated">Функция std::intrinsics::atomic_max_rel</target>
        </trans-unit>
        <trans-unit id="68181ba12e9fcb9131b0368bcff2f202617a904e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_max_relaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_max_relaxed</target>
        </trans-unit>
        <trans-unit id="03d60645d9fdf40f0cdeadc9c62a66beccce73b2" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_min</source>
          <target state="translated">Функция std::intrinsics::atomic_min</target>
        </trans-unit>
        <trans-unit id="f412529642bae09c91a2918ae76b0083cdd116a8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_min_acq</source>
          <target state="translated">Функция std::intrinsics::atomic_min_acq</target>
        </trans-unit>
        <trans-unit id="4f0129fd24c052c26d2cff0213021ffaa5a26141" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_min_acqrel</source>
          <target state="translated">Функция std::intrinsics::atomic_min_acqrel</target>
        </trans-unit>
        <trans-unit id="accc88f6c6162721f5f1f08f16e77b97f84e8136" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_min_rel</source>
          <target state="translated">Функция std::intrinsics::atomic_min_rel</target>
        </trans-unit>
        <trans-unit id="1a894d7d0ff97fe3d1bff6f23c3876e0e8d5cf01" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_min_relaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_min_relaxed</target>
        </trans-unit>
        <trans-unit id="2d5cfe1e0da2c8b604a13fb0c4d5def3bcc0fe05" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_nand</source>
          <target state="translated">Функция std::intrinsics::atomic_nand</target>
        </trans-unit>
        <trans-unit id="20cb0e70c7eab21657d6b9196e100e7a7268e389" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_nand_acq</source>
          <target state="translated">Функция std::intrinsics::atomic_nand_acq</target>
        </trans-unit>
        <trans-unit id="d829c3f5e5c25cd5f078e02412ed8b497893e505" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_nand_acqrel</source>
          <target state="translated">Функция std::intrinsics::atomic_nand_acqrel</target>
        </trans-unit>
        <trans-unit id="51745bee93cb553dd515cd26d97a744e50b00f88" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_nand_rel</source>
          <target state="translated">Функция std::intrinsics::atomic_nand_rel</target>
        </trans-unit>
        <trans-unit id="8f2184a53d3faf2dfbc8096bda41da42742d4b11" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_nand_relaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_nand_relaxed</target>
        </trans-unit>
        <trans-unit id="e15a1fa056a17ed12cc0ca7d799d64f4b13ff6b8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_or</source>
          <target state="translated">Функция std::intrinsics::atomic_or</target>
        </trans-unit>
        <trans-unit id="b9d93151e4115df6ee3345d8dd3e7a0481a98842" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_or_acq</source>
          <target state="translated">Функция std::intrinsics::atomic_or_acq</target>
        </trans-unit>
        <trans-unit id="aa3340aafd6e5592ddd2e22891c16b56b7d9e0a8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_or_acqrel</source>
          <target state="translated">Функция std::intrinsics::atomic_or_acqrel</target>
        </trans-unit>
        <trans-unit id="c8119dff5e090cc7f4cf0747a6a6c6d4b63325b3" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_or_rel</source>
          <target state="translated">Функция std::intrinsics::atomic_or_rel</target>
        </trans-unit>
        <trans-unit id="dc81e065a9758719576edcdd6d60fa47c707097e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_or_relaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_or_relaxed</target>
        </trans-unit>
        <trans-unit id="e81aaceb1658f487c55b38d935c756ae401295c3" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_singlethreadfence</source>
          <target state="translated">Функция std::intrinsics::atomic_singlethreadfence</target>
        </trans-unit>
        <trans-unit id="4402db0d845f0af53cd4059d26807a4df5d6498c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_singlethreadfence_acq</source>
          <target state="translated">Функция std::intrinsics::atomic_singlethreadfence_acq</target>
        </trans-unit>
        <trans-unit id="9ebbf7f70d332b8ce126f2b6c1afe34a6b19b914" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_singlethreadfence_acqrel</source>
          <target state="translated">Функция std::intrinsics::atomic_singlethreadfence_acqrel</target>
        </trans-unit>
        <trans-unit id="ffd7f5b2ce700d60a15d682ab64dd10cccc20ad4" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_singlethreadfence_rel</source>
          <target state="translated">Функция std::intrinsics::atomic_singlethreadfence_rel</target>
        </trans-unit>
        <trans-unit id="0c2a81d047c561e9cb87fb39f4b1b32eebbf8ca8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_store</source>
          <target state="translated">Функция std::intrinsics::atomic_store</target>
        </trans-unit>
        <trans-unit id="2ee549969e877c7b27baf516286ad29d8db0c0dc" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_store_rel</source>
          <target state="translated">Функция std::intrinsics::atomic_store_rel</target>
        </trans-unit>
        <trans-unit id="590261a38bfb6fc19deeb0e18f6328d56154e62c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_store_relaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_store_relaxed</target>
        </trans-unit>
        <trans-unit id="709a5314326fee461b3fe825b79f13e4bbc51906" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_store_unordered</source>
          <target state="translated">Функция std::intrinsics::atomic_store_unordered</target>
        </trans-unit>
        <trans-unit id="2f05d15ea8839ab0a5f6a982beb914d4cd94497f" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umax</source>
          <target state="translated">Функция std::intrinsics::atomic_umax</target>
        </trans-unit>
        <trans-unit id="58caab0e44c28da818bfa8b21fb1e0a3854275db" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umax_acq</source>
          <target state="translated">Функция std::intrinsics::atomic_umax_acq</target>
        </trans-unit>
        <trans-unit id="485410d09deb7d4db9b4294336198ec95c5aac38" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umax_acqrel</source>
          <target state="translated">Функция std::intrinsics::atomic_umax_acqrel</target>
        </trans-unit>
        <trans-unit id="e7d030aa6897ab0c8e4b57031c7be08644c7d4a4" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umax_rel</source>
          <target state="translated">Функция std::intrinsics::atomic_umax_rel</target>
        </trans-unit>
        <trans-unit id="1c60325138a8d36005ec6ea575e5ea16dc74339b" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umax_relaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_umax_relaxed</target>
        </trans-unit>
        <trans-unit id="b5cd699b1fc54fbec84c2a134a8833717d98009a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umin</source>
          <target state="translated">Функция std::intrinsics::atomic_umin</target>
        </trans-unit>
        <trans-unit id="f66c3e7aa0946f69185ad6161b3e2b5d1c7c0360" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umin_acq</source>
          <target state="translated">Функция std::intrinsics::atomic_umin_acq</target>
        </trans-unit>
        <trans-unit id="6e3486c411158f0476ad8b3eb187ad36f8e05522" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umin_acqrel</source>
          <target state="translated">Функция std::intrinsics::atomic_umin_acqrel</target>
        </trans-unit>
        <trans-unit id="e8b768c6a791e83dfbc74046b1f169cc0824883d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umin_rel</source>
          <target state="translated">Функция std::intrinsics::atomic_umin_rel</target>
        </trans-unit>
        <trans-unit id="8152554e0ce02fe3689452d05678c8a75c70e6cb" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_umin_relaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_umin_relaxed</target>
        </trans-unit>
        <trans-unit id="2c9460022df088a0a553484dcfacf73c4d2c6c49" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xadd</source>
          <target state="translated">Функция std::intrinsics::atomic_xadd</target>
        </trans-unit>
        <trans-unit id="bbfbb2d9fa5b20d2d0a52f974a74a8be7d1250a3" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xadd_acq</source>
          <target state="translated">Функция std::intrinsics::atomic_xadd_acq</target>
        </trans-unit>
        <trans-unit id="80a5c9fa25e8dacd29916af7a7876806c0c7b801" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xadd_acqrel</source>
          <target state="translated">Функция std::intrinsics::atomic_xadd_acqrel</target>
        </trans-unit>
        <trans-unit id="2681580a518ae1108079209ad3e87c09ac578238" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xadd_rel</source>
          <target state="translated">Функция std::intrinsics::atomic_xadd_rel</target>
        </trans-unit>
        <trans-unit id="a6632774d34b6d8bdf98921289f3bf98305b65c3" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xadd_relaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_xadd_relaxed</target>
        </trans-unit>
        <trans-unit id="680cf8b973773ce9f5cb5d5e143980ef48d38f83" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xchg</source>
          <target state="translated">Функция std::intrinsics::atomic_xchg</target>
        </trans-unit>
        <trans-unit id="06fa06a9a882944323a8537e5812f44de2b15574" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xchg_acq</source>
          <target state="translated">Функция std::intrinsics::atomic_xchg_acq</target>
        </trans-unit>
        <trans-unit id="514738ba82bccec7209c92dc3e542667c9f46aa0" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xchg_acqrel</source>
          <target state="translated">Функция std::intrinsics::atomic_xchg_acqrel</target>
        </trans-unit>
        <trans-unit id="e7e8b533420ea0deb98c9b6023dbdbf8c22178a5" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xchg_rel</source>
          <target state="translated">Функция std::intrinsics::atomic_xchg_rel</target>
        </trans-unit>
        <trans-unit id="b92febd7f8f2a2256f778fadeb825e82008c19e9" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xchg_relaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_xchg_relaxed</target>
        </trans-unit>
        <trans-unit id="2ea2937587ac1814222761b67af1039837c7653d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xor</source>
          <target state="translated">Функция std::intrinsics::atomic_xor</target>
        </trans-unit>
        <trans-unit id="707de9981acd22a67a9431dbb504cf4159395ac2" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xor_acq</source>
          <target state="translated">Функция std::intrinsics::atomic_xor_acq</target>
        </trans-unit>
        <trans-unit id="833e4418ab431a17a9d91675e43ac8138046eb6d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xor_acqrel</source>
          <target state="translated">Функция std::intrinsics::atomic_xor_acqrel</target>
        </trans-unit>
        <trans-unit id="35ec5057adba987f011914a33d5a6c2d44c7e8e4" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xor_rel</source>
          <target state="translated">Функция std::intrinsics::atomic_xor_rel</target>
        </trans-unit>
        <trans-unit id="b44cf1a28973fbd20f73163fe499efb58d6f607f" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xor_relaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_xor_relaxed</target>
        </trans-unit>
        <trans-unit id="3b36393cd0aa9496b4ae784a4407d76dc0812c10" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xsub</source>
          <target state="translated">Функция std::intrinsics::atomic_xsub</target>
        </trans-unit>
        <trans-unit id="0e05edf4266ca38cec129d7cbea17e2b5615af9c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xsub_acq</source>
          <target state="translated">Функция std::intrinsics::atomic_xsub_acq</target>
        </trans-unit>
        <trans-unit id="ec5065f3f0f50521d5a5dce38c88ff20b63d0fa5" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xsub_acqrel</source>
          <target state="translated">Функция std::intrinsics::atomic_xsub_acqrel</target>
        </trans-unit>
        <trans-unit id="8ef37695d8e866884c3d116d76da8d567f0eb2b0" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xsub_rel</source>
          <target state="translated">Функция std::intrinsics::atomic_xsub_rel</target>
        </trans-unit>
        <trans-unit id="9535a9ea988c35b98c9a100edb8dbbfcdb21cc0a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::atomic_xsub_relaxed</source>
          <target state="translated">Функция std::intrinsics::atomic_xsub_relaxed</target>
        </trans-unit>
        <trans-unit id="0260761aac2d147168334337babec7c746cf1e11" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::bitreverse</source>
          <target state="translated">Функция std::intrinsics::bitreverse</target>
        </trans-unit>
        <trans-unit id="349680778834fca16f9d706876d86fef2c5f6a4d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::breakpoint</source>
          <target state="translated">Функция std::intrinsics::точка останова</target>
        </trans-unit>
        <trans-unit id="44a50e7b9e7f8cceb58990743bc9f61879dd5383" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::bswap</source>
          <target state="translated">Функция std::intrinsics::bswap</target>
        </trans-unit>
        <trans-unit id="f8a2bd170e3a75454c4f05d5bbcb8639c2aa54ff" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::ceilf32</source>
          <target state="translated">Функция std::intrinsics::ceilf32</target>
        </trans-unit>
        <trans-unit id="976747cd2c5e09a74b339fc0666d68d4cfde0c5e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::ceilf64</source>
          <target state="translated">Функция std::intrinsics::ceilf64</target>
        </trans-unit>
        <trans-unit id="faffd8585027515ddae4f1331689122329742d1c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::copy</source>
          <target state="translated">Функция std::intrinsics::копирование</target>
        </trans-unit>
        <trans-unit id="7f8aef550653229ec93aa002745a05a7de864fc8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::copy_nonoverlapping</source>
          <target state="translated">Функция std::intrinsics::copy_nonoverlapping</target>
        </trans-unit>
        <trans-unit id="b1913a2055a535ce3e7b5d8fcdb5564f85606921" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::copysignf32</source>
          <target state="translated">Функция std::intrinsics::copysignf32</target>
        </trans-unit>
        <trans-unit id="137086a9e3acf79d7f58e815b9cf53cf5c487284" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::copysignf64</source>
          <target state="translated">Функция std::intrinsics::copysignf64</target>
        </trans-unit>
        <trans-unit id="ba20d643ea9b3e1f178eae70ce17f616603801ed" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::cosf32</source>
          <target state="translated">Функция std::intrinsics::cosf32</target>
        </trans-unit>
        <trans-unit id="7844690936abbf209a7dc3fedfccc3bbd90ec9cc" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::cosf64</source>
          <target state="translated">Функция std::intrinsics::cosf64</target>
        </trans-unit>
        <trans-unit id="545d20596e2a8383e286ad517cc0ec75c2f9ab02" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::ctlz</source>
          <target state="translated">Функция std::intrinsics::ctlz</target>
        </trans-unit>
        <trans-unit id="586da9633fdd054b9e8a48419276b9ebfe15778d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::ctlz_nonzero</source>
          <target state="translated">Функция std::intrinsics::ctlz_nonzero</target>
        </trans-unit>
        <trans-unit id="78aa0af231e9d9cdb012b5f501d915f806f6f319" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::ctpop</source>
          <target state="translated">Функция std::intrinsics::ctpop</target>
        </trans-unit>
        <trans-unit id="8e1aff64d8386fcb240654511fcd6b1efe27e021" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::cttz</source>
          <target state="translated">Функция std::intrinsics::cttz</target>
        </trans-unit>
        <trans-unit id="8203326fe691f7f3a7d6ceb9fbe41c6aa246d5ad" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::cttz_nonzero</source>
          <target state="translated">Функция std::intrinsics::cttz_nonzero</target>
        </trans-unit>
        <trans-unit id="3cafd9582dca45d45f6436f5c5cc310e40a2e757" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::discriminant_value</source>
          <target state="translated">Функция std::intrinsics::discriminant_value</target>
        </trans-unit>
        <trans-unit id="310254651639c9db365ac028773fcd16703837c0" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::drop_in_place</source>
          <target state="translated">Функция std::intrinsics::drop_in_place</target>
        </trans-unit>
        <trans-unit id="6504fb6abec53cb5ae5ba0d14dc3bbdc1460d019" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::exact_div</source>
          <target state="translated">Функция std::intrinsics::exact_div</target>
        </trans-unit>
        <trans-unit id="82932dd085b91a4d031ba681d9948195cde3cd38" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::exp2f32</source>
          <target state="translated">Функция std::intrinsics::exp2f32</target>
        </trans-unit>
        <trans-unit id="e028afe12378e9a7dec9c17ebc90e34a8dc9600f" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::exp2f64</source>
          <target state="translated">Функция std::intrinsics::exp2f64</target>
        </trans-unit>
        <trans-unit id="18af580843073152f816810c9976eb7720febbca" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::expf32</source>
          <target state="translated">Функция std::intrinsics::expf32</target>
        </trans-unit>
        <trans-unit id="a487e6b4e2e45873fc4f641e5c506c952d1524af" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::expf64</source>
          <target state="translated">Функция std::intrinsics::expf64</target>
        </trans-unit>
        <trans-unit id="a8adaa7a58d666f4fbdf1e5525dfd0c198e51252" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fabsf32</source>
          <target state="translated">Функция std::intrinsics::fabsf32</target>
        </trans-unit>
        <trans-unit id="7629eebcb33c16f80571048ef86b1dfdd1a0f885" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fabsf64</source>
          <target state="translated">Функция std::intrinsics::fabsf64</target>
        </trans-unit>
        <trans-unit id="69b4f3a5e06eb557862c2a57da3d1fc73419e30a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fadd_fast</source>
          <target state="translated">Функция std::intrinsics::fadd_fast</target>
        </trans-unit>
        <trans-unit id="c7a18d7f11ba26cb1ed1051c2e9c904a9165cd84" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fdiv_fast</source>
          <target state="translated">Функция std::intrinsics::fdiv_fast</target>
        </trans-unit>
        <trans-unit id="53805e4a6d094a1ed0fc8ae314253cf3d18e4925" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::floorf32</source>
          <target state="translated">Функция std::intrinsics::floorf32</target>
        </trans-unit>
        <trans-unit id="5087cca6667fde2e528e02304268dd29727f68d5" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::floorf64</source>
          <target state="translated">Функция std::intrinsics::floorf64</target>
        </trans-unit>
        <trans-unit id="6d9e80778a8a8bb7b076af29d264cc6ac4d31464" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fmaf32</source>
          <target state="translated">Функция std::intrinsics::fmaf32</target>
        </trans-unit>
        <trans-unit id="69ccf507111b23d6b5f24105fccac6844e451347" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fmaf64</source>
          <target state="translated">Функция std::intrinsics::fmaf64</target>
        </trans-unit>
        <trans-unit id="2349408da65549dbec5bb73465311981246bbf97" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fmul_fast</source>
          <target state="translated">Функция std::intrinsics::fmul_fast</target>
        </trans-unit>
        <trans-unit id="cceed86fa20f56a919cf803345dd9b828df9674a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::forget</source>
          <target state="translated">Функция std::intrinsics::forget</target>
        </trans-unit>
        <trans-unit id="86f07f2b4a1330c776c20237c7c64e5350fe7a5e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::frem_fast</source>
          <target state="translated">Функция std::intrinsics::frem_fast</target>
        </trans-unit>
        <trans-unit id="231639afbfa8bf549bf19aa8a5784f9d60021d98" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::fsub_fast</source>
          <target state="translated">Функция std::intrinsics::fsub_fast</target>
        </trans-unit>
        <trans-unit id="ed9c4a8ed619340f92e2a9df5452869c312b0de1" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::init</source>
          <target state="translated">Функция std::intrinsics::init</target>
        </trans-unit>
        <trans-unit id="7c1b33d44ee817a1195ff1ae434f17a8c881520d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::likely</source>
          <target state="translated">Функция std::intrinsics::likely</target>
        </trans-unit>
        <trans-unit id="9c1a2ccf1bde488fbc644dc3f8f44d65849caac1" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::log10f32</source>
          <target state="translated">Функция std::intrinsics::log10f32</target>
        </trans-unit>
        <trans-unit id="20d4bfb5aa64df87eaa6900cf1beefc654cf4a7a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::log10f64</source>
          <target state="translated">Функция std::intrinsics::log10f64</target>
        </trans-unit>
        <trans-unit id="c6b24066c8aa075221162eedd883f8b99c6e7962" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::log2f32</source>
          <target state="translated">Функция std::intrinsics::log2f32</target>
        </trans-unit>
        <trans-unit id="9727143de27fc62370d2a1b5926f675d501a3b4d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::log2f64</source>
          <target state="translated">Функция std::intrinsics::log2f64</target>
        </trans-unit>
        <trans-unit id="8932c55ef33afa4acde60b583c83ca8dc7bb2b5d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::logf32</source>
          <target state="translated">Функция std::intrinsics::logf32</target>
        </trans-unit>
        <trans-unit id="7f22cdc0fa2dacd7415fc7e9d0a094184c3cb950" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::logf64</source>
          <target state="translated">Функция std::intrinsics::logf64</target>
        </trans-unit>
        <trans-unit id="5d69b377a76975ef03024043cab2db73bb7cfd6e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::maxnumf32</source>
          <target state="translated">Функция std::intrinsics::maxnumf32</target>
        </trans-unit>
        <trans-unit id="a61de5d98ba89ecd434c9fa3a3ec1e6ad271b371" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::maxnumf64</source>
          <target state="translated">Функция std::intrinsics::maxnumf64</target>
        </trans-unit>
        <trans-unit id="88db98a255bac3fca6c1a7aded0061f0c5ffb992" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::min_align_of</source>
          <target state="translated">Функция std::intrinsics::min_align_of</target>
        </trans-unit>
        <trans-unit id="247c74b0f39ff5d9c9103b8959e5632c25d36333" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::min_align_of_val</source>
          <target state="translated">Функция std::intrinsics::min_align_of_val</target>
        </trans-unit>
        <trans-unit id="4e255574eb58b5b232e8ca21b4231687388852a6" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::minnumf32</source>
          <target state="translated">Функция std::intrinsics::minnumf32</target>
        </trans-unit>
        <trans-unit id="4cb1c4535cd483762169b7280f6b0d67d38dc715" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::minnumf64</source>
          <target state="translated">Функция std::intrinsics::minnumf64</target>
        </trans-unit>
        <trans-unit id="64b7dd1362cd90b88d2e4cf4ba5b57fb272d0e86" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::move_val_init</source>
          <target state="translated">Функция std::intrinsics::move_val_init</target>
        </trans-unit>
        <trans-unit id="ba6b9dc8d20816d73a44eae1ff702793043a6c6b" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::mul_with_overflow</source>
          <target state="translated">Функция std::intrinsics::mul_with_overflow</target>
        </trans-unit>
        <trans-unit id="cc363bbfcaf0ddc1c5ccc5d4bf6c45a506adf48e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::nearbyintf32</source>
          <target state="translated">Функция std::intrinsics::nearintf32</target>
        </trans-unit>
        <trans-unit id="0e1ee55cf307484318085364bbe8e054ff2d4b2c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::nearbyintf64</source>
          <target state="translated">Функция std::intrinsics::nearbyintf64</target>
        </trans-unit>
        <trans-unit id="d28a1a5c27c1207609e01cd087a0b7734625a4b6" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::needs_drop</source>
          <target state="translated">Функция std::intrinsics::needs_drop</target>
        </trans-unit>
        <trans-unit id="cb650b3e42edf7fc293ce90a39e6cb676d382183" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::nontemporal_store</source>
          <target state="translated">Функция std::intrinsics::nontemporal_store</target>
        </trans-unit>
        <trans-unit id="fafa1c6d37c3693abf8f4f9d868d6f55012eb92f" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::offset</source>
          <target state="translated">Функция std::intrinsics::offset</target>
        </trans-unit>
        <trans-unit id="5a22426f8e762b657e9fc40aeb64ce5e6c72d064" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::overflowing_add</source>
          <target state="translated">Функция std::intrinsics::overfllowing_add</target>
        </trans-unit>
        <trans-unit id="4df7d5cfb3e78f525f98823f4fdfc3f1b6a232d3" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::overflowing_mul</source>
          <target state="translated">Функция std::intrinsics::overfllowing_mul</target>
        </trans-unit>
        <trans-unit id="cfd20a808c9a3a59059a78ac374417c18c147162" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::overflowing_sub</source>
          <target state="translated">Функция std::intrinsics::overflow_sub</target>
        </trans-unit>
        <trans-unit id="8aab4244d4cb857730352617a712962fe12596d7" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::panic_if_uninhabited</source>
          <target state="translated">Функция std::intrinsics::panic_if_uninhabited</target>
        </trans-unit>
        <trans-unit id="c0aa024e255736ab35130f77373eafc270b53271" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::powf32</source>
          <target state="translated">Функция std::intrinsics::powf32</target>
        </trans-unit>
        <trans-unit id="01ed7bdb862e4b6b2be4dd8a79730895bdce1811" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::powf64</source>
          <target state="translated">Функция std::intrinsics::powf64</target>
        </trans-unit>
        <trans-unit id="687108b30d40e0e24c3c047502aa9ccd4b054f8d" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::powif32</source>
          <target state="translated">Функция std::intrinsics::powif32</target>
        </trans-unit>
        <trans-unit id="1ac5843df07be2dac60ad62b042b4211533da2e6" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::powif64</source>
          <target state="translated">Функция std::intrinsics::powif64</target>
        </trans-unit>
        <trans-unit id="0a6e8570156d01a735127c81e305ad49d4e17077" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::pref_align_of</source>
          <target state="translated">Функция std::intrinsics::pref_align_of</target>
        </trans-unit>
        <trans-unit id="12a6591a462d811e6218d01e0da3c4ce046e4577" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::prefetch_read_data</source>
          <target state="translated">Функция std::intrinsics::prefetch_read_data</target>
        </trans-unit>
        <trans-unit id="b612cc839b74b18def501a5c39142a31d05c3251" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::prefetch_read_instruction</source>
          <target state="translated">Функция std::intrinsics::prefetch_read_instruction</target>
        </trans-unit>
        <trans-unit id="7cc4fef16b4e3346cf3e97a3bcfa63f4965a73fb" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::prefetch_write_data</source>
          <target state="translated">Функция std::intrinsics::prefetch_write_data</target>
        </trans-unit>
        <trans-unit id="98446d47acd3b1adcc37c4e4edac6c4d5d410bc1" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::prefetch_write_instruction</source>
          <target state="translated">Функция std::intrinsics::prefetch_write_instruction</target>
        </trans-unit>
        <trans-unit id="d3635ca7a4ece00d22e8745333a108e09321070e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::rintf32</source>
          <target state="translated">Функция std::intrinsics::rintf32</target>
        </trans-unit>
        <trans-unit id="b52123f2feab6d81200c8b6c82009aa05af9d5e8" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::rintf64</source>
          <target state="translated">Функция std::intrinsics::rintf64</target>
        </trans-unit>
        <trans-unit id="5d25a2d6ed8eb295f10db9229d10b9b801b62aac" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::rotate_left</source>
          <target state="translated">Функция std::intrinsics::rotate_left</target>
        </trans-unit>
        <trans-unit id="6f64a0f1e08ebc04835dfcafc082dfa995ecca65" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::rotate_right</source>
          <target state="translated">Функция std::intrinsics::rotate_right</target>
        </trans-unit>
        <trans-unit id="01761bc7b91f5d00e064051e941086db75bc64eb" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::roundf32</source>
          <target state="translated">Функция std::intrinsics::roundf32</target>
        </trans-unit>
        <trans-unit id="e3f3c017ce47d7b4613d489a7dfa5c51d99c122a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::roundf64</source>
          <target state="translated">Функция std::intrinsics::roundf64</target>
        </trans-unit>
        <trans-unit id="56592ea3364203da6002bb091c8b5ada90dd06be" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::rustc_peek</source>
          <target state="translated">Функция std::intrinsics::rustc_peek</target>
        </trans-unit>
        <trans-unit id="4b62ddf100ee5e23c3b1e9f82f34aa6e7bbce1af" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::saturating_add</source>
          <target state="translated">Функция std::intrinsics::saturating_add</target>
        </trans-unit>
        <trans-unit id="c47d89e89860bbcd6e10cd71fc55d76f9c148c16" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::saturating_sub</source>
          <target state="translated">Функция std::intrinsics::saturating_sub</target>
        </trans-unit>
        <trans-unit id="a2f910e6e38dfbab9f3fe62488dc49c833f38693" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::sinf32</source>
          <target state="translated">Функция std::intrinsics::sinf32</target>
        </trans-unit>
        <trans-unit id="5b619a447d74b5fd6738770896593b7fe76db6ca" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::sinf64</source>
          <target state="translated">Функция std::intrinsics::sinf64</target>
        </trans-unit>
        <trans-unit id="602d9a20834ba884f5b93e6b43af744d53b52e84" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::size_of</source>
          <target state="translated">Функция std::intrinsics::size_of</target>
        </trans-unit>
        <trans-unit id="d932ae577dbc34467190ebf5837932cf7fbb0e16" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::size_of_val</source>
          <target state="translated">Функция std::intrinsics::size_of_val</target>
        </trans-unit>
        <trans-unit id="d08e2158f5b8cfa3eab183618a77ec54b076b30a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::sqrtf32</source>
          <target state="translated">Функция std::intrinsics::sqrtf32</target>
        </trans-unit>
        <trans-unit id="8dbb591c1397f0ba91c7f236b0a614975c326f6a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::sqrtf64</source>
          <target state="translated">Функция std::intrinsics::sqrtf64</target>
        </trans-unit>
        <trans-unit id="740c5394484a39f579e83b184235503d95960198" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::sub_with_overflow</source>
          <target state="translated">Функция std::intrinsics::sub_with_overflow</target>
        </trans-unit>
        <trans-unit id="393e4373d62b400801116f27af3199376f6e2ca1" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::transmute</source>
          <target state="translated">Функция std::intrinsics::transmute</target>
        </trans-unit>
        <trans-unit id="1226c6bc2b3fcfeb6f782c3e8390b9416f380d57" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::truncf32</source>
          <target state="translated">Функция std::intrinsics::truncf32</target>
        </trans-unit>
        <trans-unit id="edb587d16baed0c03c665836869638e3d11d6f56" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::truncf64</source>
          <target state="translated">Функция std::intrinsics::truncf64</target>
        </trans-unit>
        <trans-unit id="a57d356a02b0ff34ec68a387e9131952f056f9aa" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::try</source>
          <target state="translated">Функция std::intrinsics::try</target>
        </trans-unit>
        <trans-unit id="048a5087acf80c0faff9b518dcc85010ea41ae06" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::type_id</source>
          <target state="translated">Функция std::intrinsics::type_id</target>
        </trans-unit>
        <trans-unit id="e75acaff03c74f3f8ac169c744a94d8a2861e33a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::type_name</source>
          <target state="translated">Функция std::intrinsics::type_name</target>
        </trans-unit>
        <trans-unit id="187c861d5662a2fda8a4bf5846d843bd0201c65a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unaligned_volatile_load</source>
          <target state="translated">Функция std::intrinsics::unaligned_volatile_load</target>
        </trans-unit>
        <trans-unit id="e8eb96d3a4cd10e2625c8223b4805c89ed68cf61" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unaligned_volatile_store</source>
          <target state="translated">Функция std::intrinsics::unaligned_volatile_store</target>
        </trans-unit>
        <trans-unit id="93c26151cb053ed2646156176f682b5a446e90f0" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_add</source>
          <target state="translated">Функция std::intrinsics::unchecked_add</target>
        </trans-unit>
        <trans-unit id="4e47211d92e063ddfd83890496af3139cde8fc16" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_div</source>
          <target state="translated">Функция std::intrinsics::unchecked_div</target>
        </trans-unit>
        <trans-unit id="ad08da36331e84c72eea9029948dfa845c72a90e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_mul</source>
          <target state="translated">Функция std::intrinsics::unchecked_mul</target>
        </trans-unit>
        <trans-unit id="b2134ce439c68a3e1c68abdd0075fe3ce7125860" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_rem</source>
          <target state="translated">Функция std::intrinsics::unchecked_rem</target>
        </trans-unit>
        <trans-unit id="4c92ba0932c92f93ec0a719533727714b58b0697" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_shl</source>
          <target state="translated">Функция std::intrinsics::unchecked_shl</target>
        </trans-unit>
        <trans-unit id="ba6d2658ad2136cb3776c0d405847fb2996a7b26" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_shr</source>
          <target state="translated">Функция std::intrinsics::unchecked_shr</target>
        </trans-unit>
        <trans-unit id="3d1d1be087221db7a4bfc8d7ed23b90aa230d61e" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unchecked_sub</source>
          <target state="translated">Функция std::intrinsics::unchecked_sub</target>
        </trans-unit>
        <trans-unit id="5a775a1f84e4e5935e7a1fa50f24f474b2f2ece9" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::uninit</source>
          <target state="translated">Функция std::intrinsics::uninit</target>
        </trans-unit>
        <trans-unit id="ac3412d8fdd72040d3536bb26f45818e160ddc4a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unlikely</source>
          <target state="translated">Функция std::intrinsics::unlikely</target>
        </trans-unit>
        <trans-unit id="bedb934a4c63e4e31201c35f9bd36ac2036acf4c" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::unreachable</source>
          <target state="translated">Функция std::intrinsics::недоступна</target>
        </trans-unit>
        <trans-unit id="345df5921d118e19bbbe36d890c957478b05ad24" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::volatile_copy_memory</source>
          <target state="translated">Функция std::intrinsics::volatile_copy_memory</target>
        </trans-unit>
        <trans-unit id="d15cadb9febd1bff809e35db3daeb66b7188a917" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::volatile_copy_nonoverlapping_memory</source>
          <target state="translated">Функция std::intrinsics::volatile_copy_nonoverlapping_memory</target>
        </trans-unit>
        <trans-unit id="07c6d83d44a425af2f32ab2dd74d20f7a63f96d4" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::volatile_load</source>
          <target state="translated">Функция std::intrinsics::volatile_load</target>
        </trans-unit>
        <trans-unit id="c9412efc461309c92b831fdd57c484471b4f3eea" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::volatile_set_memory</source>
          <target state="translated">Функция std::intrinsics::volatile_set_memory</target>
        </trans-unit>
        <trans-unit id="1eb394e96696e1469e03dd3a669f002772e46b9a" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::volatile_store</source>
          <target state="translated">Функция std::intrinsics::volatile_store</target>
        </trans-unit>
        <trans-unit id="4bb898dc02fd331bafb306f521470ae8500576f2" translate="yes" xml:space="preserve">
          <source>Function std::intrinsics::write_bytes</source>
          <target state="translated">Функция std::intrinsics::write_bytes</target>
        </trans-unit>
        <trans-unit id="1462d4d75a2c1721ae019391a3145504468f86be" translate="yes" xml:space="preserve">
          <source>Function std::io::copy</source>
          <target state="translated">Функция std::io::копирование</target>
        </trans-unit>
        <trans-unit id="9d322972ffb0afbe003983c33a48b9602bb2f27f" translate="yes" xml:space="preserve">
          <source>Function std::io::empty</source>
          <target state="translated">Функция std::io::пустая</target>
        </trans-unit>
        <trans-unit id="0e44261c77f2a9a37128f44301117effed40f1c3" translate="yes" xml:space="preserve">
          <source>Function std::io::repeat</source>
          <target state="translated">Функция std::io::повторить</target>
        </trans-unit>
        <trans-unit id="c29e5e3e5ed19f15f59bfadf33f1b68ff0bcec24" translate="yes" xml:space="preserve">
          <source>Function std::io::sink</source>
          <target state="translated">Функция std::io::тонуть</target>
        </trans-unit>
        <trans-unit id="f05871015518914000f1553345c9cdc1aacee082" translate="yes" xml:space="preserve">
          <source>Function std::io::stderr</source>
          <target state="translated">Функция std::io::stderr</target>
        </trans-unit>
        <trans-unit id="9f387e200f166807748357421615ad6cd24836ef" translate="yes" xml:space="preserve">
          <source>Function std::io::stdin</source>
          <target state="translated">Функция std::io::stdin</target>
        </trans-unit>
        <trans-unit id="08deee2644283017a2d65fbd802faf47f51890da" translate="yes" xml:space="preserve">
          <source>Function std::io::stdout</source>
          <target state="translated">Функция std::io::stdout</target>
        </trans-unit>
        <trans-unit id="3db86c4bbed75ef0f573f856b5cce7f9cf2ceefb" translate="yes" xml:space="preserve">
          <source>Function std::iter::empty</source>
          <target state="translated">Функция std::iter::пустой</target>
        </trans-unit>
        <trans-unit id="66b49fad94d10ec92ebc41d1cee4b7f8d9b3b8fd" translate="yes" xml:space="preserve">
          <source>Function std::iter::from_fn</source>
          <target state="translated">Функция std::iter::from_fn</target>
        </trans-unit>
        <trans-unit id="dff51980c0868fb23253f76a41dc563a29201f61" translate="yes" xml:space="preserve">
          <source>Function std::iter::once</source>
          <target state="translated">Функция std:::итер:::один раз</target>
        </trans-unit>
        <trans-unit id="3d48207de32201be75ffe9021e62b76b7d2e78dd" translate="yes" xml:space="preserve">
          <source>Function std::iter::once_with</source>
          <target state="translated">Функция std::iter::once_with</target>
        </trans-unit>
        <trans-unit id="a2b35eb94e24a9505503301e6633d676822bef0c" translate="yes" xml:space="preserve">
          <source>Function std::iter::repeat</source>
          <target state="translated">Функция std::iter::повторить</target>
        </trans-unit>
        <trans-unit id="87a88047b36d48b765b5020959d507cb5f244ac7" translate="yes" xml:space="preserve">
          <source>Function std::iter::repeat_with</source>
          <target state="translated">Функция std::iter::repeat_with</target>
        </trans-unit>
        <trans-unit id="5ef587525044407aa0b4094d8f081edd2daddc8e" translate="yes" xml:space="preserve">
          <source>Function std::iter::successors</source>
          <target state="translated">Функция std:::итер:::преемники</target>
        </trans-unit>
        <trans-unit id="e69ba0a2b2f3ad4e91cf8a195f315895ae885650" translate="yes" xml:space="preserve">
          <source>Function std::mem::align_of</source>
          <target state="translated">Функция std::mem::align_of</target>
        </trans-unit>
        <trans-unit id="f925a0568c240c6dd15386b07765248dacabf3db" translate="yes" xml:space="preserve">
          <source>Function std::mem::align_of_val</source>
          <target state="translated">Функция std::mem::align_of_val</target>
        </trans-unit>
        <trans-unit id="d9e95f4da151ab2a40c7e9698a17adc132df0f46" translate="yes" xml:space="preserve">
          <source>Function std::mem::discriminant</source>
          <target state="translated">Функция std::mem::discriminant</target>
        </trans-unit>
        <trans-unit id="6475a81fa7667dcc4953d17a2ae5fd2196a16c35" translate="yes" xml:space="preserve">
          <source>Function std::mem::drop</source>
          <target state="translated">Функция std::mem::drop</target>
        </trans-unit>
        <trans-unit id="34977281a088ed668126c16ffced4c672d9ee045" translate="yes" xml:space="preserve">
          <source>Function std::mem::forget</source>
          <target state="translated">Функция std::mem::forget</target>
        </trans-unit>
        <trans-unit id="93c2b9571818c664355ea5a0dcd917eacf555574" translate="yes" xml:space="preserve">
          <source>Function std::mem::forget_unsized</source>
          <target state="translated">Функция std::mem::forget_unsized</target>
        </trans-unit>
        <trans-unit id="6ddede8e9373838661e83d5e49c5870ddfc635d4" translate="yes" xml:space="preserve">
          <source>Function std::mem::min_align_of</source>
          <target state="translated">Функция std::mem::min_align_of</target>
        </trans-unit>
        <trans-unit id="22810ad4b80752b76f6272e78e7f24408c71745f" translate="yes" xml:space="preserve">
          <source>Function std::mem::min_align_of_val</source>
          <target state="translated">Функция std::mem::min_align_of_val</target>
        </trans-unit>
        <trans-unit id="e1b2757db0555bef1a5af563113bea383ea658f1" translate="yes" xml:space="preserve">
          <source>Function std::mem::needs_drop</source>
          <target state="translated">Функция std::mem::needs_drop</target>
        </trans-unit>
        <trans-unit id="1d250c3f7215728aec0a7bfa6379b0d693c87c55" translate="yes" xml:space="preserve">
          <source>Function std::mem::replace</source>
          <target state="translated">Функция std::mem::replace</target>
        </trans-unit>
        <trans-unit id="273ddf6ee92bb4e40157a902d61bcf24a9c611ad" translate="yes" xml:space="preserve">
          <source>Function std::mem::size_of</source>
          <target state="translated">Функция std::mem::size_of</target>
        </trans-unit>
        <trans-unit id="f9365fb71c6db7ab8823f257068c1fa0c61895c4" translate="yes" xml:space="preserve">
          <source>Function std::mem::size_of_val</source>
          <target state="translated">Функция std::mem::size_of_val</target>
        </trans-unit>
        <trans-unit id="5bf15dfcadccab356db41c543e7d2dd0719bc54b" translate="yes" xml:space="preserve">
          <source>Function std::mem::swap</source>
          <target state="translated">Функция std::mem::swap</target>
        </trans-unit>
        <trans-unit id="a9a358b3691976e722e4f46966a0191a117318e2" translate="yes" xml:space="preserve">
          <source>Function std::mem::take</source>
          <target state="translated">Функция std::mem::take</target>
        </trans-unit>
        <trans-unit id="8000c51bce3358a180dec44b363d021f765dee13" translate="yes" xml:space="preserve">
          <source>Function std::mem::transmute</source>
          <target state="translated">Функция std:::mem::transmute</target>
        </trans-unit>
        <trans-unit id="a34058ce750ce0e9d7fea1e2756db0e58fabdb12" translate="yes" xml:space="preserve">
          <source>Function std::mem::transmute_copy</source>
          <target state="translated">Функция std::mem::transmute_copy</target>
        </trans-unit>
        <trans-unit id="e2168cf325d9fdb4bb40acb9002e87cae0a35230" translate="yes" xml:space="preserve">
          <source>Function std::mem::uninitialized</source>
          <target state="translated">Функция std::mem::uninitialized</target>
        </trans-unit>
        <trans-unit id="d6aee94a962f29ccad67cacb5695c37eb2e57120" translate="yes" xml:space="preserve">
          <source>Function std::mem::zeroed</source>
          <target state="translated">Функция std::mem::zeroed</target>
        </trans-unit>
        <trans-unit id="9fbabcc1415c98e197c63a5df4d5f8ec75a6fd2b" translate="yes" xml:space="preserve">
          <source>Function std::os::unix::fs::symlink</source>
          <target state="translated">Функция std::os::unix::fs::symlink</target>
        </trans-unit>
        <trans-unit id="0cb9d4491f67786e23110780ee139d285c647816" translate="yes" xml:space="preserve">
          <source>Function std::os::unix::process::parent_id</source>
          <target state="translated">Функция std::os::unix::процесс::parent_id</target>
        </trans-unit>
        <trans-unit id="955a8b38ef9ca7cc74dba342165900b733f89c71" translate="yes" xml:space="preserve">
          <source>Function std::os::windows::fs::symlink_dir</source>
          <target state="translated">Функция std::os::windows::fs::symlink_dir</target>
        </trans-unit>
        <trans-unit id="7030c8af6886acb93aefd94038042b18937920ce" translate="yes" xml:space="preserve">
          <source>Function std::os::windows::fs::symlink_file</source>
          <target state="translated">Функция std::os::windows::fs::symlink_file</target>
        </trans-unit>
        <trans-unit id="8561ba72a9691a11d16234536f898f0406c41e4b" translate="yes" xml:space="preserve">
          <source>Function std::panic::catch_unwind</source>
          <target state="translated">Функция std::panic::catch_unwind</target>
        </trans-unit>
        <trans-unit id="d0b54652683b0f081f3c450fac3c724be97e0e07" translate="yes" xml:space="preserve">
          <source>Function std::panic::resume_unwind</source>
          <target state="translated">Функция std::panic::resume_unwind</target>
        </trans-unit>
        <trans-unit id="39271975d3373b9cea19608740e1ec82ed2ae6b7" translate="yes" xml:space="preserve">
          <source>Function std::panic::set_hook</source>
          <target state="translated">Функция std::panic::set_hook</target>
        </trans-unit>
        <trans-unit id="bbe33939a3aefba77a1076ac9c7e64784a3a15b1" translate="yes" xml:space="preserve">
          <source>Function std::panic::take_hook</source>
          <target state="translated">Функция std::panic::take_hook</target>
        </trans-unit>
        <trans-unit id="25a8c22b45e0de0551522051b0461b2b6ab3b0ee" translate="yes" xml:space="preserve">
          <source>Function std::path::is_separator</source>
          <target state="translated">Функция std::path::is_separator</target>
        </trans-unit>
        <trans-unit id="f5cf3f4b834aa36120f315ecc6215ba2718045a8" translate="yes" xml:space="preserve">
          <source>Function std::process::abort</source>
          <target state="translated">Функция std::процесс:::прервать</target>
        </trans-unit>
        <trans-unit id="91cb6a8fd57a0224ea3dfbfbdf9c471db4732292" translate="yes" xml:space="preserve">
          <source>Function std::process::exit</source>
          <target state="translated">Функция std::процесс::выход</target>
        </trans-unit>
        <trans-unit id="64d60f6bf21bdc40c4034158a74b2e2029d72d52" translate="yes" xml:space="preserve">
          <source>Function std::process::id</source>
          <target state="translated">Функция std::процесс::id</target>
        </trans-unit>
        <trans-unit id="fde6de7146b98e72342b68e2f087fb2c0df102c7" translate="yes" xml:space="preserve">
          <source>Function std::ptr::copy</source>
          <target state="translated">Функция std::ptr::копирование</target>
        </trans-unit>
        <trans-unit id="a761215fdab6c66c0e836d73083b80b5919290f7" translate="yes" xml:space="preserve">
          <source>Function std::ptr::copy_nonoverlapping</source>
          <target state="translated">Функция std::ptr::copy_nonoverlapping</target>
        </trans-unit>
        <trans-unit id="e5cd973501b571a40a9d66363842f4e1f61d69db" translate="yes" xml:space="preserve">
          <source>Function std::ptr::drop_in_place</source>
          <target state="translated">Функция std::ptr::drop_in_place</target>
        </trans-unit>
        <trans-unit id="7d8139ca630c43a21993cd3cc28785c5944a7309" translate="yes" xml:space="preserve">
          <source>Function std::ptr::eq</source>
          <target state="translated">Функция std::ptr::eq</target>
        </trans-unit>
        <trans-unit id="9f66565ab45d94ff05fc6926dcfe0bbd68272b62" translate="yes" xml:space="preserve">
          <source>Function std::ptr::hash</source>
          <target state="translated">Функция std::ptr::hash</target>
        </trans-unit>
        <trans-unit id="a03cdb32dfba992c5ba308341a9ecf47921cafcd" translate="yes" xml:space="preserve">
          <source>Function std::ptr::null</source>
          <target state="translated">Функция std::ptr::null</target>
        </trans-unit>
        <trans-unit id="4c7d5ac57a6bf5a7b544b85794d87b81e4bab2bb" translate="yes" xml:space="preserve">
          <source>Function std::ptr::null_mut</source>
          <target state="translated">Функция std::ptr::null_mut</target>
        </trans-unit>
        <trans-unit id="c850fed4a12786c6b64cf8983a8b4ed6836f871b" translate="yes" xml:space="preserve">
          <source>Function std::ptr::read</source>
          <target state="translated">Функция std::ptr::read</target>
        </trans-unit>
        <trans-unit id="b5627f9e5c58db99606464fa93bdcc9942395ffe" translate="yes" xml:space="preserve">
          <source>Function std::ptr::read_unaligned</source>
          <target state="translated">Функция std::ptr::read_unaligned</target>
        </trans-unit>
        <trans-unit id="cfe13a6b31ec05872aa7514cbd914f1bb5861485" translate="yes" xml:space="preserve">
          <source>Function std::ptr::read_volatile</source>
          <target state="translated">Функция std::ptr::read_volatile</target>
        </trans-unit>
        <trans-unit id="d039612bde4c6048992efb15148a025858e32b3b" translate="yes" xml:space="preserve">
          <source>Function std::ptr::replace</source>
          <target state="translated">Функция std::ptr::заменить</target>
        </trans-unit>
        <trans-unit id="d248267b6dd81ea6d45a36bf72ea24089aebcfc9" translate="yes" xml:space="preserve">
          <source>Function std::ptr::slice_from_raw_parts</source>
          <target state="translated">Функция std::ptr::slice_from_raw_parts</target>
        </trans-unit>
        <trans-unit id="993ad2b27084f4ef376400115cc16edac21caa44" translate="yes" xml:space="preserve">
          <source>Function std::ptr::slice_from_raw_parts_mut</source>
          <target state="translated">Функция std::ptr::slice_from_raw_parts_mut</target>
        </trans-unit>
        <trans-unit id="9d32d4c811c372eac376d6b3bdbf406666808400" translate="yes" xml:space="preserve">
          <source>Function std::ptr::swap</source>
          <target state="translated">Функция std::ptr::swap</target>
        </trans-unit>
        <trans-unit id="ddca334754be5ad5ccbbcff1fdd2a964723a383a" translate="yes" xml:space="preserve">
          <source>Function std::ptr::swap_nonoverlapping</source>
          <target state="translated">Функция std::ptr::swap_nonoverlapping</target>
        </trans-unit>
        <trans-unit id="0a29c6829aba2904ca27c5fa1c9fe49944ebe1c7" translate="yes" xml:space="preserve">
          <source>Function std::ptr::write</source>
          <target state="translated">Функция std::ptr::write</target>
        </trans-unit>
        <trans-unit id="6f751c45c330611925cbdc91328104f0d8563329" translate="yes" xml:space="preserve">
          <source>Function std::ptr::write_bytes</source>
          <target state="translated">Функция std::ptr::write_bytes</target>
        </trans-unit>
        <trans-unit id="1fda9527bc74f49c29a63948c2c6dbd1ab94b1f4" translate="yes" xml:space="preserve">
          <source>Function std::ptr::write_unaligned</source>
          <target state="translated">Функция std::ptr::write_unaligned</target>
        </trans-unit>
        <trans-unit id="6144b17aff45708885f2b21a0ccd281ad4b03511" translate="yes" xml:space="preserve">
          <source>Function std::ptr::write_volatile</source>
          <target state="translated">Функция std::ptr::write_volatile</target>
        </trans-unit>
        <trans-unit id="a2b7a6ea0f1d928fd925aaf7a8ce4d41592caaba" translate="yes" xml:space="preserve">
          <source>Function std::slice::from_mut</source>
          <target state="translated">Функция std::slice::from_mut</target>
        </trans-unit>
        <trans-unit id="c9b1f099f247a42a47b176a483889ae2efb191a9" translate="yes" xml:space="preserve">
          <source>Function std::slice::from_raw_parts</source>
          <target state="translated">Функция std::slice::from_raw_parts</target>
        </trans-unit>
        <trans-unit id="1572930120c6eeb9d2f52363340245d3c52eeaa2" translate="yes" xml:space="preserve">
          <source>Function std::slice::from_raw_parts_mut</source>
          <target state="translated">Функция std::slice::from_raw_parts_mut</target>
        </trans-unit>
        <trans-unit id="ec11607378374baf49258a7deea8633da5e2c00f" translate="yes" xml:space="preserve">
          <source>Function std::slice::from_ref</source>
          <target state="translated">Функция std::slice::from_ref</target>
        </trans-unit>
        <trans-unit id="5f10d43fc04f417378de60595b6a08287404fc58" translate="yes" xml:space="preserve">
          <source>Function std::str::from_boxed_utf8_unchecked</source>
          <target state="translated">Функция std::str::from_boxed_utf8_unchecked</target>
        </trans-unit>
        <trans-unit id="b3494167f42728c01d009e107c9996379772b067" translate="yes" xml:space="preserve">
          <source>Function std::str::from_utf8</source>
          <target state="translated">Функция std::str::from_utf8</target>
        </trans-unit>
        <trans-unit id="8ab808fea002d56433d1a4c8010bde81eaf0bafe" translate="yes" xml:space="preserve">
          <source>Function std::str::from_utf8_mut</source>
          <target state="translated">Функция std::str::from_utf8_mut</target>
        </trans-unit>
        <trans-unit id="c9eb986ba9ada7c0b92ddab5aeb8be6542adebfb" translate="yes" xml:space="preserve">
          <source>Function std::str::from_utf8_unchecked</source>
          <target state="translated">Функция std::str::from_utf8_unchecked</target>
        </trans-unit>
        <trans-unit id="ff6fb073e193843ab8761db003fa3d1397bde0ae" translate="yes" xml:space="preserve">
          <source>Function std::str::from_utf8_unchecked_mut</source>
          <target state="translated">Функция std::str::from_utf8_unchecked_mut</target>
        </trans-unit>
        <trans-unit id="426edab7099b267d5c0fadbf655008d3c3071033" translate="yes" xml:space="preserve">
          <source>Function std::sync::atomic::compiler_fence</source>
          <target state="translated">Функция std::sync::atomic::compiler_fence</target>
        </trans-unit>
        <trans-unit id="746c3ced7e8fb5967d8a30871aeec3190755754d" translate="yes" xml:space="preserve">
          <source>Function std::sync::atomic::fence</source>
          <target state="translated">Функция std::sync::atomic::fence</target>
        </trans-unit>
        <trans-unit id="417c1f03a8782ffed0046f05147205a5928d2325" translate="yes" xml:space="preserve">
          <source>Function std::sync::atomic::spin_loop_hint</source>
          <target state="translated">Функция std::sync::atomic::spin_loop_hint</target>
        </trans-unit>
        <trans-unit id="ca876872e4c8a255561392341646d67ae0b513b3" translate="yes" xml:space="preserve">
          <source>Function std::sync::mpsc::channel</source>
          <target state="translated">Функция std::sync::mpsc::channel</target>
        </trans-unit>
        <trans-unit id="ed61e6291293ba5e6efc025a526a4ca0aeef12a5" translate="yes" xml:space="preserve">
          <source>Function std::sync::mpsc::sync_channel</source>
          <target state="translated">Функция std::sync::mpsc::sync_channel</target>
        </trans-unit>
        <trans-unit id="0af550e5e373712dc2a979ef83bfd2ff92a021a5" translate="yes" xml:space="preserve">
          <source>Function std::thread::current</source>
          <target state="translated">Функция std::thread::current</target>
        </trans-unit>
        <trans-unit id="fe9807edb6332c001f6afe09456d514679fa63c2" translate="yes" xml:space="preserve">
          <source>Function std::thread::panicking</source>
          <target state="translated">Функция std::thread:::паникующий</target>
        </trans-unit>
        <trans-unit id="9315e3ef8d5452c0247f62dbf54f7a6f10da132d" translate="yes" xml:space="preserve">
          <source>Function std::thread::park</source>
          <target state="translated">Функция std::thread::park</target>
        </trans-unit>
        <trans-unit id="fcab5565f3d2f6769e2d47ead2f243674b5700e5" translate="yes" xml:space="preserve">
          <source>Function std::thread::park_timeout</source>
          <target state="translated">Функция std::thread::park_timeout</target>
        </trans-unit>
        <trans-unit id="2f1f8ca90cd667cbf91c70fd5328d42118f543d6" translate="yes" xml:space="preserve">
          <source>Function std::thread::park_timeout_ms</source>
          <target state="translated">Функция std::thread::park_timeout_ms</target>
        </trans-unit>
        <trans-unit id="11ae6d9580fb9910ca48b8e032535befd540831c" translate="yes" xml:space="preserve">
          <source>Function std::thread::sleep</source>
          <target state="translated">Функция std:::поток::сон</target>
        </trans-unit>
        <trans-unit id="1f22ee1120ba93e964441735b057a58abda65aa0" translate="yes" xml:space="preserve">
          <source>Function std::thread::sleep_ms</source>
          <target state="translated">Функция std::thread::sleep_ms</target>
        </trans-unit>
        <trans-unit id="659b9896115b8a757c17153932bb710d0018ce8b" translate="yes" xml:space="preserve">
          <source>Function std::thread::spawn</source>
          <target state="translated">Функция std:::нить::нереститься</target>
        </trans-unit>
        <trans-unit id="e317cb6f0697f119f701c359a0df2074f48a4962" translate="yes" xml:space="preserve">
          <source>Function std::thread::yield_now</source>
          <target state="translated">Функция std::thread::yield_now</target>
        </trans-unit>
        <trans-unit id="6cd47a4c3bb4392119be7e20d333f200330e1d43" translate="yes" xml:space="preserve">
          <source>Function types:</source>
          <target state="translated">Типы функций:</target>
        </trans-unit>
        <trans-unit id="2e3030f5a7f048cef8382d50828336e71bb753d2" translate="yes" xml:space="preserve">
          <source>Function-like macros</source>
          <target state="translated">Функциональные макросы</target>
        </trans-unit>
        <trans-unit id="2a9fd93daca58d7ebff71d8a39637cdf3ce39fd8" translate="yes" xml:space="preserve">
          <source>Function-like macros define macros that look like function calls. Similarly to &lt;code&gt;macro_rules!&lt;/code&gt; macros, they&amp;rsquo;re more flexible than functions; for example, they can take an unknown number of arguments. However, &lt;code&gt;macro_rules!&lt;/code&gt; macros can be defined only using the match-like syntax we discussed in the section &lt;a href=&quot;#declarative-macros-with-macro_rules-for-general-metaprogramming&quot;&gt;&amp;ldquo;Declarative Macros with &lt;code&gt;macro_rules!&lt;/code&gt; for General Metaprogramming&amp;rdquo;&lt;/a&gt; earlier. Function-like macros take a &lt;code&gt;TokenStream&lt;/code&gt; parameter and their definition manipulates that &lt;code&gt;TokenStream&lt;/code&gt; using Rust code as the other two types of procedural macros do. An example of a function-like macro is an &lt;code&gt;sql!&lt;/code&gt; macro that might be called like so:</source>
          <target state="translated">Макросы, подобные функциям, определяют макросы, которые выглядят как вызовы функций. Аналогично &lt;code&gt;macro_rules!&lt;/code&gt; макросы, они более гибкие, чем функции; например, они могут принимать неизвестное количество аргументов. Однако &lt;code&gt;macro_rules!&lt;/code&gt; макросы могут быть определены только с использованием синтаксиса сопоставления, который мы обсуждали в разделе &lt;a href=&quot;#declarative-macros-with-macro_rules-for-general-metaprogramming&quot;&gt;&amp;laquo;Декларативные макросы с &lt;code&gt;macro_rules!&lt;/code&gt; для общего метапрограммирования &amp;raquo;&lt;/a&gt; ранее. &lt;code&gt;TokenStream&lt;/code&gt; подобные функциям, принимают параметр TokenStream, и их определение управляет этим &lt;code&gt;TokenStream&lt;/code&gt; с помощью кода Rust, как это делают другие два типа процедурных макросов. Примером макроса, подобного функции, является &lt;code&gt;sql!&lt;/code&gt; макрос, который можно было бы назвать так:</target>
        </trans-unit>
        <trans-unit id="13e701d0c602544129b90642819e8ce654632b4a" translate="yes" xml:space="preserve">
          <source>Function-like macros that look like function calls but operate on the tokens specified as their argument</source>
          <target state="translated">Функциональные макросы,которые выглядят как вызов функции,но работают с маркерами,указанными в качестве их аргумента.</target>
        </trans-unit>
        <trans-unit id="08300f312a4ed1b5c2034356b30682b98bac9713" translate="yes" xml:space="preserve">
          <source>Function-like procedural macros</source>
          <target state="translated">Функциональные процедурные макросы</target>
        </trans-unit>
        <trans-unit id="f7211ee113b9788f705f277792fadeeb3dfa5aa3" translate="yes" xml:space="preserve">
          <source>Function-like procedural macros may be invoked in any macro invocation position, which includes &lt;a href=&quot;statements&quot;&gt;statements&lt;/a&gt;, &lt;a href=&quot;expressions&quot;&gt;expressions&lt;/a&gt;, &lt;a href=&quot;patterns&quot;&gt;patterns&lt;/a&gt;, &lt;a href=&quot;types#type-expressions&quot;&gt;type expressions&lt;/a&gt;, &lt;a href=&quot;items&quot;&gt;item&lt;/a&gt; positions, including items in &lt;a href=&quot;items/external-blocks&quot;&gt;&lt;code&gt;extern&lt;/code&gt; blocks&lt;/a&gt;, inherent and trait &lt;a href=&quot;items/implementations&quot;&gt;implementations&lt;/a&gt;, and &lt;a href=&quot;items/traits&quot;&gt;trait definitions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ee21bcc50578b01a326947473e22f8250802dc" translate="yes" xml:space="preserve">
          <source>Functional Language Features: Iterators and Closures</source>
          <target state="translated">Функциональные особенности языка:Итераторы и затворы</target>
        </trans-unit>
        <trans-unit id="4e21f7bee8221a74639e92992dc14d632a7c8af0" translate="yes" xml:space="preserve">
          <source>Functional update syntax</source>
          <target state="translated">Синтаксис функционального обновления</target>
        </trans-unit>
        <trans-unit id="1a08f42a1b56e730c49367ca1e924228662ea26b" translate="yes" xml:space="preserve">
          <source>Functionality for ordering and comparison.</source>
          <target state="translated">Функциональность для заказа и сравнения.</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="79a1ec8a61d65a41557e7d6041585e466687237c" translate="yes" xml:space="preserve">
          <source>Functions and consts can both be defined in an implementation. A function defined in an &lt;code&gt;impl&lt;/code&gt; block can be standalone, meaning it would be called like &lt;code&gt;Foo::bar()&lt;/code&gt;. If the function takes &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;&amp;amp;self&lt;/code&gt;, or &lt;code&gt;&amp;amp;mut self&lt;/code&gt; as its first argument, it can also be called using method-call syntax, a familiar feature to any object oriented programmer, like &lt;code&gt;foo.bar()&lt;/code&gt;.</source>
          <target state="translated">Функции и константы могут быть определены в реализации. Функция, определенная в блоке &lt;code&gt;impl&lt;/code&gt; , может быть автономной, что означает, что она будет вызываться как &lt;code&gt;Foo::bar()&lt;/code&gt; . Если функция принимает &lt;code&gt;self&lt;/code&gt; , &lt;code&gt;&amp;amp;self&lt;/code&gt; или &lt;code&gt;&amp;amp;mut self&lt;/code&gt; качестве первого аргумента, ее также можно вызвать с помощью синтаксиса вызова метода, знакомой возможности любому объектно-ориентированному программисту, например &lt;code&gt;foo.bar()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="349871b1a6efea930aaaf0ae51e6d8084ba76744" translate="yes" xml:space="preserve">
          <source>Functions are pervasive in Rust code. You&amp;rsquo;ve already seen one of the most important functions in the language: the &lt;code&gt;main&lt;/code&gt; function, which is the entry point of many programs. You&amp;rsquo;ve also seen the &lt;code&gt;fn&lt;/code&gt; keyword, which allows you to declare new functions.</source>
          <target state="translated">Функции широко распространены в коде Rust. Вы уже видели одну из самых важных функций в языке: функцию &lt;code&gt;main&lt;/code&gt; , которая является точкой входа для многих программ. Вы также видели ключевое слово &lt;code&gt;fn&lt;/code&gt; , которое позволяет объявлять новые функции.</target>
        </trans-unit>
        <trans-unit id="ec13d42591018f6323f28c9a51bc9ae1f1e62226" translate="yes" xml:space="preserve">
          <source>Functions are the primary way code is executed within Rust. Function blocks, usually just called functions, can be defined in a variety of different places and be assigned many different attributes and modifiers.</source>
          <target state="translated">Функции являются основным способом выполнения кода внутри Rust.Функциональные блоки,обычно называемые просто функциями,могут быть определены в различных местах и им может быть назначено множество различных атрибутов и модификаторов.</target>
        </trans-unit>
        <trans-unit id="0c9b40f565c06060c423846265af5229e6fca5a3" translate="yes" xml:space="preserve">
          <source>Functions can also be defined to have &lt;em&gt;parameters&lt;/em&gt;, which are special variables that are part of a function&amp;rsquo;s signature. When a function has parameters, you can provide it with concrete values for those parameters. Technically, the concrete values are called &lt;em&gt;arguments&lt;/em&gt;, but in casual conversation, people tend to use the words &lt;em&gt;parameter&lt;/em&gt; and &lt;em&gt;argument&lt;/em&gt; interchangeably for either the variables in a function&amp;rsquo;s definition or the concrete values passed in when you call a function.</source>
          <target state="translated">Функции также могут иметь &lt;em&gt;параметры&lt;/em&gt; , которые представляют собой специальные переменные, являющиеся частью сигнатуры функции. Когда функция имеет параметры, вы можете предоставить ей конкретные значения для этих параметров. Технически конкретные значения называются &lt;em&gt;аргументами&lt;/em&gt; , но в обычном разговоре люди склонны использовать слова &lt;em&gt;параметр&lt;/em&gt; и &lt;em&gt;аргумент как&lt;/em&gt; взаимозаменяемые либо для переменных в определении функции, либо для конкретных значений, передаваемых при вызове функции.</target>
        </trans-unit>
        <trans-unit id="f7772489f6a9ea8bcb945930292f262cd76d7056" translate="yes" xml:space="preserve">
          <source>Functions can declare an argument to be an anonymous type parameter where the callee must provide a type that has the bounds declared by the anonymous type parameter and the function can only use the methods available by the trait bounds of the anonymous type parameter.</source>
          <target state="translated">Функции могут объявить аргумент параметром анонимного типа,где callee должен предоставить тип,который имеет границы,объявленные параметром анонимного типа,а функция может использовать только методы,доступные по границам трейта параметра анонимного типа.</target>
        </trans-unit>
        <trans-unit id="6e06e07a734b3acc49e3963f1c74ffeae667ea5a" translate="yes" xml:space="preserve">
          <source>Functions can return values to the code that calls them. We don&amp;rsquo;t name return values, but we do declare their type after an arrow (&lt;code&gt;-&amp;gt;&lt;/code&gt;). In Rust, the return value of the function is synonymous with the value of the final expression in the block of the body of a function. You can return early from a function by using the &lt;code&gt;return&lt;/code&gt; keyword and specifying a value, but most functions return the last expression implicitly. Here&amp;rsquo;s an example of a function that returns a value:</source>
          <target state="translated">Функции могут возвращать значения коду, который их вызывает. Мы не называем возвращаемые значения, но объявляем их тип после стрелки ( &lt;code&gt;-&amp;gt;&lt;/code&gt; ). В Rust возвращаемое значение функции является синонимом значения последнего выражения в блоке тела функции. Вы можете вернуться из функции раньше, используя ключевое слово &lt;code&gt;return&lt;/code&gt; и указав значение, но большинство функций возвращают последнее выражение неявно. Вот пример функции, возвращающей значение:</target>
        </trans-unit>
        <trans-unit id="8578e1edc63515b51db6bed787869c23c34bb35c" translate="yes" xml:space="preserve">
          <source>Functions do not capture local variables. To fix this error, you can replace the function with a closure:</source>
          <target state="translated">Функции не захватывают локальные переменные.Чтобы исправить эту ошибку,можно заменить функцию на закрытие:</target>
        </trans-unit>
        <trans-unit id="2a188df8eec44f8cdac6c18fd47adbe486ec7642" translate="yes" xml:space="preserve">
          <source>Functions in Rust can be called by foreign code, and using an ABI that differs from Rust allows, for example, to provide functions that can be called from other programming languages like C:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c048b3feb011016ec1af315c1f0d26b938c26a99" translate="yes" xml:space="preserve">
          <source>Functions in this module will block the current &lt;strong&gt;thread&lt;/strong&gt; of execution and are bindings to system-provided condition variables where possible. Note that this module places one additional restriction over the system condition variables: each condvar can be used with precisely one mutex at runtime. Any attempt to use multiple mutexes on the same condition variable will result in a runtime panic. If this is not desired, then the unsafe primitives in &lt;code&gt;sys&lt;/code&gt; do not have this restriction but may result in undefined behavior.</source>
          <target state="translated">Функции в этом модуле будут блокировать текущий &lt;strong&gt;поток&lt;/strong&gt; выполнения и, по возможности, привязываются к системным переменным состояния. Обратите внимание, что этот модуль накладывает одно дополнительное ограничение на переменные состояния системы: каждая условная переменная может использоваться ровно с одним мьютексом во время выполнения. Любая попытка использовать несколько мьютексов для одной переменной условия приведет к панике во время выполнения. Если это нежелательно, тогда небезопасные примитивы в &lt;code&gt;sys&lt;/code&gt; не имеют этого ограничения, но могут привести к неопределенному поведению.</target>
        </trans-unit>
        <trans-unit id="19486dfa520b69c11a03500cb78fcde335f9a159" translate="yes" xml:space="preserve">
          <source>Functions in this module will block the current &lt;strong&gt;thread&lt;/strong&gt; of execution. Note that any attempt to use multiple mutexes on the same condition variable may result in a runtime panic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a797a5b3b54d57d908332f50a0ff14a598f923ef" translate="yes" xml:space="preserve">
          <source>Functions marked with &lt;code&gt;target_feature&lt;/code&gt; are not inlined into a context that does not support the given features. The &lt;code&gt;#[inline(always)]&lt;/code&gt; attribute may not be used with a &lt;code&gt;target_feature&lt;/code&gt; attribute.</source>
          <target state="translated">Функции, отмеченные &lt;code&gt;target_feature&lt;/code&gt; , не встроены в контекст, который не поддерживает данные функции. &lt;code&gt;#[inline(always)]&lt;/code&gt; атрибут не может быть использован с &lt;code&gt;target_feature&lt;/code&gt; атрибутом.</target>
        </trans-unit>
        <trans-unit id="0500c980225aaa328a97ddd71516215766d4d2c7" translate="yes" xml:space="preserve">
          <source>Functions may be qualified as async, and this can also be combined with the &lt;code&gt;unsafe&lt;/code&gt; qualifier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ba2d6d6d2c4bf90e78758d9ffb195fa04a9907" translate="yes" xml:space="preserve">
          <source>Functions qualified with the &lt;code&gt;const&lt;/code&gt; keyword are &lt;a href=&quot;../const_eval#const-functions&quot;&gt;const functions&lt;/a&gt;, as are &lt;a href=&quot;structs&quot;&gt;tuple struct&lt;/a&gt; and &lt;a href=&quot;enumerations&quot;&gt;tuple variant&lt;/a&gt; constructors. &lt;em&gt;Const functions&lt;/em&gt; can be called from within &lt;a href=&quot;../const_eval#const-context&quot;&gt;const context&lt;/a&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debf8c3aa1da35922894a71fde41ce5baca3e6ad" translate="yes" xml:space="preserve">
          <source>Functions qualified with the &lt;code&gt;const&lt;/code&gt; keyword are const functions. &lt;em&gt;Const functions&lt;/em&gt; can be called from within &lt;a href=&quot;../const_eval#const-context&quot;&gt;const context&lt;/a&gt;s. When called from a const context, the function is interpreted by the compiler at compile time. The interpretation happens in the environment of the compilation target and not the host. So &lt;code&gt;usize&lt;/code&gt; is &lt;code&gt;32&lt;/code&gt; bits if you are compiling against a &lt;code&gt;32&lt;/code&gt; bit system, irrelevant of whether you are building on a &lt;code&gt;64&lt;/code&gt; bit or a &lt;code&gt;32&lt;/code&gt; bit system.</source>
          <target state="translated">Функции квалифицируются с &lt;code&gt;const&lt;/code&gt; ключевым словом являются константными функциями. &lt;em&gt;Функции const&lt;/em&gt; можно вызывать из &lt;a href=&quot;../const_eval#const-context&quot;&gt;контекста const&lt;/a&gt; . При вызове из константного контекста функция интерпретируется компилятором во время компиляции. Интерпретация происходит в среде цели компиляции, а не хоста. Таким образом, &lt;code&gt;usize&lt;/code&gt; составляет &lt;code&gt;32&lt;/code&gt; бита, если вы компилируете &lt;code&gt;32&lt;/code&gt; - битную систему, независимо от того, создаете ли вы &lt;code&gt;64&lt;/code&gt; - битную или &lt;code&gt;32&lt;/code&gt; - битную систему.</target>
        </trans-unit>
        <trans-unit id="27716c2844ef6662e00babc6885a69e2dec63380" translate="yes" xml:space="preserve">
          <source>Functions return &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; whenever errors are expected and recoverable. In the &lt;code&gt;std&lt;/code&gt; crate, &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; is most prominently used for &lt;a href=&quot;../io/index&quot;&gt;I/O&lt;/a&gt;.</source>
          <target state="translated">Функции возвращают &lt;a href=&quot;enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; всякий раз, когда ошибки ожидаются и могут быть исправлены. В &lt;code&gt;std&lt;/code&gt; обрешетке, &lt;a href=&quot;enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; наиболее заметно используются для &lt;a href=&quot;../io/index&quot;&gt;ввода / вывода&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ba4110fcc3e4c930df9cd4a44d4369d4a726954" translate="yes" xml:space="preserve">
          <source>Functions which take an &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; and return another &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; are often called 'iterator adapters', as they're a form of the 'adapter pattern'.</source>
          <target state="translated">Функции, которые принимают &lt;a href=&quot;trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; и возвращают другой &lt;a href=&quot;trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; , часто называют &amp;laquo;адаптерами итератора&amp;raquo;, поскольку они являются формой &amp;laquo;шаблона адаптера&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="e3428425ba667eae06c3ff2021c3de7d88b772af" translate="yes" xml:space="preserve">
          <source>Functions with Return Values</source>
          <target state="translated">Функции с возвращаемыми значениями</target>
        </trans-unit>
        <trans-unit id="b18578d36545499a01a7076ba62b48fa01f0c848" translate="yes" xml:space="preserve">
          <source>Functions with an ABI that differs from &lt;code&gt;&quot;Rust&quot;&lt;/code&gt; do not support unwinding in the exact same way that Rust does. Therefore, unwinding past the end of functions with such ABIs causes the process to abort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92807c856bd111462699f9e06c09bb56c14702fe" translate="yes" xml:space="preserve">
          <source>Functions within external blocks are declared in the same way as other Rust functions, with the exception that they may not have a body and are instead terminated by a semicolon. Patterns are not allowed in parameters, only &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; or &lt;code&gt;_&lt;/code&gt; may be used.</source>
          <target state="translated">Функции во внешних блоках объявляются так же, как и другие функции Rust, за исключением того, что они могут не иметь тела и вместо этого завершаться точкой с запятой. В параметрах нельзя использовать шаблоны, можно использовать только &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; или &lt;code&gt;_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc77dcb074f08a32cc87de1996bea238f078997a" translate="yes" xml:space="preserve">
          <source>Functions within external blocks may be called by Rust code, just like functions defined in Rust. The Rust compiler automatically translates between the Rust ABI and the foreign ABI.</source>
          <target state="translated">Функции внутри внешних блоков могут вызываться Rust-кодом,точно так же,как и функции,определенные в Rust.Компилятор Rust автоматически транслирует между Rust ABI и внешним ABI.</target>
        </trans-unit>
        <trans-unit id="255f924e1ffd5da6e3f850e0ae72ac4d9101aff6" translate="yes" xml:space="preserve">
          <source>Functions within external blocks may be variadic by specifying &lt;code&gt;...&lt;/code&gt; after one or more named arguments in the argument list:</source>
          <target state="translated">Функции внутри внешних блоков могут быть переменными, если указать &lt;code&gt;...&lt;/code&gt; после одного или нескольких именованных аргументов в списке аргументов:</target>
        </trans-unit>
        <trans-unit id="559bba4281b9cbb5285ad035b18e638f9254aa96" translate="yes" xml:space="preserve">
          <source>Functions, except for associated trait functions, can return an abstract return type. These types stand in for another concrete type where the use-site may only use the trait methods declared by the trait bounds of the type.</source>
          <target state="translated">Функции,за исключением ассоциированных функций трейта,могут возвращать абстрактный тип возврата.Эти типы означают другой конкретный тип,в котором сайт-пользователь может использовать только методы трейта,объявленные границами трейта данного типа.</target>
        </trans-unit>
        <trans-unit id="5234ca15ccfb340b3c32fd38f23a4ff8df3cca57" translate="yes" xml:space="preserve">
          <source>Functions, type aliases, structs, enumerations, unions, traits and implementations may be &lt;em&gt;parameterized&lt;/em&gt; by types and lifetimes. These parameters are listed in angle brackets (&lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt;), usually immediately after the name of the item and before its definition. For implementations, which don't have a name, they come directly after &lt;code&gt;impl&lt;/code&gt;. Lifetime parameters must be declared before type parameters. Some examples of items with type and lifetime parameters:</source>
          <target state="translated">Функции, псевдонимы типов, структуры, перечисления, объединения, признаки и реализации могут быть &lt;em&gt;параметризованы&lt;/em&gt; по типам и временам жизни. Эти параметры перечислены в угловых скобках ( &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; ), обычно сразу после имени элемента и перед его определением. Для реализаций, у которых нет имени, они идут сразу после &lt;code&gt;impl&lt;/code&gt; . Параметры времени жизни должны быть объявлены перед параметрами типа. Некоторые примеры элементов с параметрами типа и времени жизни:</target>
        </trans-unit>
        <trans-unit id="d83a6029c4947c75a3d349d25be545ca402bff11" translate="yes" xml:space="preserve">
          <source>Functions, type aliases, structs, enumerations, unions, traits, and implementations may be &lt;em&gt;parameterized&lt;/em&gt; by types and lifetimes. These parameters are listed in angle brackets (&lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt;), usually immediately after the name of the item and before its definition. For implementations, which don't have a name, they come directly after &lt;code&gt;impl&lt;/code&gt;. Lifetime parameters must be declared before type parameters. Some examples of items with type and lifetime parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57878d0751d3ab5ce8210b78147f1fbca3e0b4a" translate="yes" xml:space="preserve">
          <source>Fundamental traits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e006ca099899d227345d125f7604094fb4ac496" translate="yes" xml:space="preserve">
          <source>Fundamental type constructors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0f9166454ea8a2d6c4817bb65ab3b4f20a8394" translate="yes" xml:space="preserve">
          <source>Fundamentally, macros are a way of writing code that writes other code, which is known as &lt;em&gt;metaprogramming&lt;/em&gt;. In Appendix C, we discuss the &lt;code&gt;derive&lt;/code&gt; attribute, which generates an implementation of various traits for you. We&amp;rsquo;ve also used the &lt;code&gt;println!&lt;/code&gt; and &lt;code&gt;vec!&lt;/code&gt; macros throughout the book. All of these macros &lt;em&gt;expand&lt;/em&gt; to produce more code than the code you&amp;rsquo;ve written manually.</source>
          <target state="translated">По сути, макросы - это способ написания кода, который пишет другой код, который известен как &lt;em&gt;метапрограммирование&lt;/em&gt; . В Приложении C мы обсуждаем атрибут &lt;code&gt;derive&lt;/code&gt; , который генерирует для вас реализацию различных характеристик. Мы также использовали &lt;code&gt;println!&lt;/code&gt; и &lt;code&gt;vec!&lt;/code&gt; макросы по всей книге. Все эти макросы &lt;em&gt;расширяются,&lt;/em&gt; чтобы произвести больше кода, чем код, который вы написали вручную.</target>
        </trans-unit>
        <trans-unit id="33aa27b63995ba1fcb3ce7d14470a2ebda4e9afb" translate="yes" xml:space="preserve">
          <source>Further examples</source>
          <target state="translated">Другие примеры</target>
        </trans-unit>
        <trans-unit id="d09598b8462cb55fafc0925eb6b3707aebcdffff" translate="yes" xml:space="preserve">
          <source>Further methods that return iterators are &lt;a href=&quot;../primitive.slice#method.split&quot;&gt;&lt;code&gt;.split&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../primitive.slice#method.splitn&quot;&gt;&lt;code&gt;.splitn&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../primitive.slice#method.chunks&quot;&gt;&lt;code&gt;.chunks&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../primitive.slice#method.windows&quot;&gt;&lt;code&gt;.windows&lt;/code&gt;&lt;/a&gt; and more.</source>
          <target state="translated">Другие методы, возвращающие итераторы, - это &lt;a href=&quot;../primitive.slice#method.split&quot;&gt; &lt;code&gt;.split&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../primitive.slice#method.splitn&quot;&gt; &lt;code&gt;.splitn&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../primitive.slice#method.chunks&quot;&gt; &lt;code&gt;.chunks&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../primitive.slice#method.windows&quot;&gt; &lt;code&gt;.windows&lt;/code&gt; &lt;/a&gt; и другие.</target>
        </trans-unit>
        <trans-unit id="1ca30366a5d0ab34525f2208365c1ca94a1f8b77" translate="yes" xml:space="preserve">
          <source>Further, when providing implementations for additional traits, it needs to be considered whether they should behave identical to those of the underlying type as a consequence of acting as a representation of that underlying type. Generic code typically uses &lt;code&gt;Borrow&amp;lt;T&amp;gt;&lt;/code&gt; when it relies on the identical behavior of these additional trait implementations. These traits will likely appear as additional trait bounds.</source>
          <target state="translated">Кроме того, при предоставлении реализаций для дополнительных свойств необходимо учитывать, должны ли они вести себя идентично таковым из базового типа как следствие действия в качестве представления этого базового типа. Общий код обычно использует &lt;code&gt;Borrow&amp;lt;T&amp;gt;&lt;/code&gt; когда полагается на идентичное поведение этих дополнительных реализаций признаков. Эти черты, вероятно, появятся как дополнительные границы черт.</target>
        </trans-unit>
        <trans-unit id="cb1960550ff747636004d7c48533ff64eb2c7cb0" translate="yes" xml:space="preserve">
          <source>Furthermore, &lt;code&gt;usize&lt;/code&gt; and &lt;code&gt;isize&lt;/code&gt; have the same size.</source>
          <target state="translated">Кроме того, &lt;code&gt;usize&lt;/code&gt; и &lt;code&gt;isize&lt;/code&gt; имеют одинаковый размер.</target>
        </trans-unit>
        <trans-unit id="cdc25e51f3bd03cefd6c886e6015dd4e5ab94438" translate="yes" xml:space="preserve">
          <source>Fuse</source>
          <target state="translated">Fuse</target>
        </trans-unit>
        <trans-unit id="5b5bb3bd654173bbe0ca32ea3cdd799fc39be7e0" translate="yes" xml:space="preserve">
          <source>Fuse::all</source>
          <target state="translated">Fuse::all</target>
        </trans-unit>
        <trans-unit id="be234633fcc19983cf10e500a6cea263759de0ec" translate="yes" xml:space="preserve">
          <source>Fuse::any</source>
          <target state="translated">Fuse::any</target>
        </trans-unit>
        <trans-unit id="fb657f6faeb38bdc2196ebc9819c5d95fe340748" translate="yes" xml:space="preserve">
          <source>Fuse::borrow</source>
          <target state="translated">Fuse::borrow</target>
        </trans-unit>
        <trans-unit id="8f3044155e9d5c84cd57e23debc6442d0e4670b3" translate="yes" xml:space="preserve">
          <source>Fuse::borrow_mut</source>
          <target state="translated">Fuse::borrow_mut</target>
        </trans-unit>
        <trans-unit id="1d289dac98b2c0ee8af0ae119550bb75a8647436" translate="yes" xml:space="preserve">
          <source>Fuse::by_ref</source>
          <target state="translated">Fuse::by_ref</target>
        </trans-unit>
        <trans-unit id="831eb7c4481fb4be2c2082f7b1da24d8f9f757ec" translate="yes" xml:space="preserve">
          <source>Fuse::chain</source>
          <target state="translated">Fuse::chain</target>
        </trans-unit>
        <trans-unit id="438fd4561c9ccfadcfc75a150d349251bb6bad15" translate="yes" xml:space="preserve">
          <source>Fuse::clone</source>
          <target state="translated">Fuse::clone</target>
        </trans-unit>
        <trans-unit id="1430674975c3f47c8efafda98d99fb2a28139d1d" translate="yes" xml:space="preserve">
          <source>Fuse::clone_from</source>
          <target state="translated">Fuse::clone_from</target>
        </trans-unit>
        <trans-unit id="9be81b457f16a4af2ac97486a4694037294d9f73" translate="yes" xml:space="preserve">
          <source>Fuse::clone_into</source>
          <target state="translated">Fuse::clone_into</target>
        </trans-unit>
        <trans-unit id="98f760afb80a8eff0c0ef367859e40f090d49189" translate="yes" xml:space="preserve">
          <source>Fuse::cloned</source>
          <target state="translated">Fuse::cloned</target>
        </trans-unit>
        <trans-unit id="6da9651643728cd0c44496dee9b4303124cabbfa" translate="yes" xml:space="preserve">
          <source>Fuse::cmp</source>
          <target state="translated">Fuse::cmp</target>
        </trans-unit>
        <trans-unit id="0c4f37e97803f9d70993fa59d61809aea7d9011a" translate="yes" xml:space="preserve">
          <source>Fuse::collect</source>
          <target state="translated">Fuse::collect</target>
        </trans-unit>
        <trans-unit id="ddc6005989b65675ac3ce7404f4341aa3e45bd46" translate="yes" xml:space="preserve">
          <source>Fuse::copied</source>
          <target state="translated">Fuse::copied</target>
        </trans-unit>
        <trans-unit id="6086889f4261af2a35bbde15545aa2b38e286eb0" translate="yes" xml:space="preserve">
          <source>Fuse::count</source>
          <target state="translated">Fuse::count</target>
        </trans-unit>
        <trans-unit id="2c7439b70ce0f07bef285135b6810c8416ce3ceb" translate="yes" xml:space="preserve">
          <source>Fuse::cycle</source>
          <target state="translated">Fuse::cycle</target>
        </trans-unit>
        <trans-unit id="1d21878382d8db3eef5c3ccb0162b537561d5fe1" translate="yes" xml:space="preserve">
          <source>Fuse::enumerate</source>
          <target state="translated">Fuse::enumerate</target>
        </trans-unit>
        <trans-unit id="823d811ae87865a3afe81991f5b1ce5c5d3e05fb" translate="yes" xml:space="preserve">
          <source>Fuse::eq</source>
          <target state="translated">Fuse::eq</target>
        </trans-unit>
        <trans-unit id="bd7cbe6bf9c8e8d0dbf1a520e5d8f393c41d5e76" translate="yes" xml:space="preserve">
          <source>Fuse::filter</source>
          <target state="translated">Fuse::filter</target>
        </trans-unit>
        <trans-unit id="ff249feec5a8ff44c09ac4d58cf0c46bc03c2e27" translate="yes" xml:space="preserve">
          <source>Fuse::filter_map</source>
          <target state="translated">Fuse::filter_map</target>
        </trans-unit>
        <trans-unit id="d65f3a653005a9aca1a47f1daa9574aadcf81146" translate="yes" xml:space="preserve">
          <source>Fuse::find</source>
          <target state="translated">Fuse::find</target>
        </trans-unit>
        <trans-unit id="92189ce0a3d924bfcfe5daafee0096f97e345e8a" translate="yes" xml:space="preserve">
          <source>Fuse::find_map</source>
          <target state="translated">Fuse::find_map</target>
        </trans-unit>
        <trans-unit id="1cf8f29dde6618a7c7a45ae0ed611ea18dc6d814" translate="yes" xml:space="preserve">
          <source>Fuse::flat_map</source>
          <target state="translated">Fuse::flat_map</target>
        </trans-unit>
        <trans-unit id="9f855deea4a227b1c412204b1b500286ca9898ff" translate="yes" xml:space="preserve">
          <source>Fuse::flatten</source>
          <target state="translated">Fuse::flatten</target>
        </trans-unit>
        <trans-unit id="27bca4d23d19f854df553c1f82824f7edd33ecdd" translate="yes" xml:space="preserve">
          <source>Fuse::fmt</source>
          <target state="translated">Fuse::fmt</target>
        </trans-unit>
        <trans-unit id="8293be1030013adbfbddb7413ab47a9d5713fbb2" translate="yes" xml:space="preserve">
          <source>Fuse::fold</source>
          <target state="translated">Fuse::fold</target>
        </trans-unit>
        <trans-unit id="d70e6b78ab1bfb6ecef7e95f085adfaeb6422f4a" translate="yes" xml:space="preserve">
          <source>Fuse::for_each</source>
          <target state="translated">Fuse::for_each</target>
        </trans-unit>
        <trans-unit id="c637a607309c42c80a08d11fa1900890151225d1" translate="yes" xml:space="preserve">
          <source>Fuse::from</source>
          <target state="translated">Fuse::from</target>
        </trans-unit>
        <trans-unit id="3f4b35dca4545ef8a3669e274f565d795f26df61" translate="yes" xml:space="preserve">
          <source>Fuse::fuse</source>
          <target state="translated">Fuse::fuse</target>
        </trans-unit>
        <trans-unit id="d32ae472a05f042237f60672a294af6e0f780002" translate="yes" xml:space="preserve">
          <source>Fuse::ge</source>
          <target state="translated">Fuse::ge</target>
        </trans-unit>
        <trans-unit id="db14a349561c9657cb02ec4378f0041d394de512" translate="yes" xml:space="preserve">
          <source>Fuse::gt</source>
          <target state="translated">Fuse::gt</target>
        </trans-unit>
        <trans-unit id="8e137668bb3688ae855ccc5853810b47754a3872" translate="yes" xml:space="preserve">
          <source>Fuse::inspect</source>
          <target state="translated">Fuse::inspect</target>
        </trans-unit>
        <trans-unit id="5cfef3b06c43a18ed973402f005ed7cd09e8c04c" translate="yes" xml:space="preserve">
          <source>Fuse::into</source>
          <target state="translated">Fuse::into</target>
        </trans-unit>
        <trans-unit id="f0ca9438fb188b5b8dad26c6bf148f9659520041" translate="yes" xml:space="preserve">
          <source>Fuse::into_iter</source>
          <target state="translated">Fuse::into_iter</target>
        </trans-unit>
        <trans-unit id="391ea300511ad72ed0c52d931ec32f9ad0fd9c6f" translate="yes" xml:space="preserve">
          <source>Fuse::is_empty</source>
          <target state="translated">Fuse::is_empty</target>
        </trans-unit>
        <trans-unit id="dbc1aa11443b40a7ec81e5ce0dd280ae99df5395" translate="yes" xml:space="preserve">
          <source>Fuse::is_sorted</source>
          <target state="translated">Fuse::is_sorted</target>
        </trans-unit>
        <trans-unit id="6de34202c0045be112d2ee0f948bb537aa9be637" translate="yes" xml:space="preserve">
          <source>Fuse::is_sorted_by</source>
          <target state="translated">Fuse::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="6e5a92b697e11f4f97be1cb92bf8a2c8203571cd" translate="yes" xml:space="preserve">
          <source>Fuse::is_sorted_by_key</source>
          <target state="translated">Fuse::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="c01cf3c78cdbb7fdd9e68eeecd85fe4f5fc5bcc7" translate="yes" xml:space="preserve">
          <source>Fuse::last</source>
          <target state="translated">Fuse::last</target>
        </trans-unit>
        <trans-unit id="fca9c9805a04224315e282c3be9b6a888b5ed9a1" translate="yes" xml:space="preserve">
          <source>Fuse::le</source>
          <target state="translated">Fuse::le</target>
        </trans-unit>
        <trans-unit id="53bec7ede087d7f3b55b0287278a68b38404a6d6" translate="yes" xml:space="preserve">
          <source>Fuse::len</source>
          <target state="translated">Fuse::len</target>
        </trans-unit>
        <trans-unit id="7b4183ba0f386cd9443aa4992eba62aa3b6deb95" translate="yes" xml:space="preserve">
          <source>Fuse::lt</source>
          <target state="translated">Fuse::lt</target>
        </trans-unit>
        <trans-unit id="5c262325339cd3156152addc6dd873caf49ad2b7" translate="yes" xml:space="preserve">
          <source>Fuse::map</source>
          <target state="translated">Fuse::map</target>
        </trans-unit>
        <trans-unit id="f34722d429c594a066614633112c87b369af6d10" translate="yes" xml:space="preserve">
          <source>Fuse::max</source>
          <target state="translated">Fuse::max</target>
        </trans-unit>
        <trans-unit id="74cd81b2b264540f6cf86176ce650c3ace7df66c" translate="yes" xml:space="preserve">
          <source>Fuse::max_by</source>
          <target state="translated">Fuse::max_by</target>
        </trans-unit>
        <trans-unit id="6363e416dfff32dea4b85f002985261e301ff120" translate="yes" xml:space="preserve">
          <source>Fuse::max_by_key</source>
          <target state="translated">Fuse::max_by_key</target>
        </trans-unit>
        <trans-unit id="ea71fbd8ca048cb3a4327bc3c665fd836b260d15" translate="yes" xml:space="preserve">
          <source>Fuse::min</source>
          <target state="translated">Fuse::min</target>
        </trans-unit>
        <trans-unit id="3e45b43694c4d735e3284df51fc1d5afa72689a1" translate="yes" xml:space="preserve">
          <source>Fuse::min_by</source>
          <target state="translated">Fuse::min_by</target>
        </trans-unit>
        <trans-unit id="460a4dae2436a52e10ab6fe47215192d0d2cc26c" translate="yes" xml:space="preserve">
          <source>Fuse::min_by_key</source>
          <target state="translated">Fuse::min_by_key</target>
        </trans-unit>
        <trans-unit id="fdbe92dea6e61847df85f41bba1c90d74049ae28" translate="yes" xml:space="preserve">
          <source>Fuse::ne</source>
          <target state="translated">Fuse::ne</target>
        </trans-unit>
        <trans-unit id="5230c2613200a1d46de34a7083facac940e009ab" translate="yes" xml:space="preserve">
          <source>Fuse::next</source>
          <target state="translated">Fuse::next</target>
        </trans-unit>
        <trans-unit id="51b95d33641283d83b2d3ca707d3b05b32955f7c" translate="yes" xml:space="preserve">
          <source>Fuse::next_back</source>
          <target state="translated">Fuse::next_back</target>
        </trans-unit>
        <trans-unit id="732184abb4e4b26b7896c98d0f1f6fb79face59a" translate="yes" xml:space="preserve">
          <source>Fuse::nth</source>
          <target state="translated">Fuse::nth</target>
        </trans-unit>
        <trans-unit id="ecf2d99b326b90bba4e5e94a2cfcb8fca5d36bf8" translate="yes" xml:space="preserve">
          <source>Fuse::nth_back</source>
          <target state="translated">Fuse::nth_back</target>
        </trans-unit>
        <trans-unit id="645b953e826c63fc9e513fa454ed5315f66f63e7" translate="yes" xml:space="preserve">
          <source>Fuse::partial_cmp</source>
          <target state="translated">Fuse::partial_cmp</target>
        </trans-unit>
        <trans-unit id="909f5215d0717af781bec722f3b0dd010a16016b" translate="yes" xml:space="preserve">
          <source>Fuse::partition</source>
          <target state="translated">Fuse::partition</target>
        </trans-unit>
        <trans-unit id="01e3171662432979d4756fdb5c7d60d5e3d3688a" translate="yes" xml:space="preserve">
          <source>Fuse::peekable</source>
          <target state="translated">Fuse::peekable</target>
        </trans-unit>
        <trans-unit id="6b80140311ab3ce2aaec8ebfd30dcf2e8f274077" translate="yes" xml:space="preserve">
          <source>Fuse::position</source>
          <target state="translated">Fuse::position</target>
        </trans-unit>
        <trans-unit id="cdf77414329bacb067e1a8328f80ce08984f20c6" translate="yes" xml:space="preserve">
          <source>Fuse::product</source>
          <target state="translated">Fuse::product</target>
        </trans-unit>
        <trans-unit id="8ef76fc13b788c76e379230ed857338ce665522c" translate="yes" xml:space="preserve">
          <source>Fuse::rev</source>
          <target state="translated">Fuse::rev</target>
        </trans-unit>
        <trans-unit id="c6ceda460157839498baef5d44fcbf90dfa55a4d" translate="yes" xml:space="preserve">
          <source>Fuse::rfind</source>
          <target state="translated">Fuse::rfind</target>
        </trans-unit>
        <trans-unit id="d330c64599fdb09d15b95c557b4d7892f68af3e1" translate="yes" xml:space="preserve">
          <source>Fuse::rfold</source>
          <target state="translated">Fuse::rfold</target>
        </trans-unit>
        <trans-unit id="4b3396affd9754021af0b44df2dd12d80df33ae6" translate="yes" xml:space="preserve">
          <source>Fuse::rposition</source>
          <target state="translated">Fuse::rposition</target>
        </trans-unit>
        <trans-unit id="ab43bd0b883653041efa0ea7cc154b6bf9af47c1" translate="yes" xml:space="preserve">
          <source>Fuse::scan</source>
          <target state="translated">Fuse::scan</target>
        </trans-unit>
        <trans-unit id="1b8b4c672f99a52b32d55c7bb8972a6f72ece7cf" translate="yes" xml:space="preserve">
          <source>Fuse::size_hint</source>
          <target state="translated">Fuse::size_hint</target>
        </trans-unit>
        <trans-unit id="d347c87cd849d9a01c9a979b0311dbcf96965bae" translate="yes" xml:space="preserve">
          <source>Fuse::skip</source>
          <target state="translated">Fuse::skip</target>
        </trans-unit>
        <trans-unit id="ecd51b0feeb4bb83cc2ee12bb364791884b19e9f" translate="yes" xml:space="preserve">
          <source>Fuse::skip_while</source>
          <target state="translated">Fuse::skip_while</target>
        </trans-unit>
        <trans-unit id="31f474af09ad27dc8cad30dd87438f396efab185" translate="yes" xml:space="preserve">
          <source>Fuse::step_by</source>
          <target state="translated">Fuse::step_by</target>
        </trans-unit>
        <trans-unit id="a8a56103bdd56576e7451868c2de237a02390598" translate="yes" xml:space="preserve">
          <source>Fuse::sum</source>
          <target state="translated">Fuse::sum</target>
        </trans-unit>
        <trans-unit id="29656f53c0fe5965acddeba06fd4f327a57a6b22" translate="yes" xml:space="preserve">
          <source>Fuse::take</source>
          <target state="translated">Fuse::take</target>
        </trans-unit>
        <trans-unit id="70ed5974147d5d5c47345358f79e9fe42830a0e2" translate="yes" xml:space="preserve">
          <source>Fuse::take_while</source>
          <target state="translated">Fuse::take_while</target>
        </trans-unit>
        <trans-unit id="c61f9148a2472fccbc543adcedcaef00ebc36916" translate="yes" xml:space="preserve">
          <source>Fuse::to_owned</source>
          <target state="translated">Fuse::to_owned</target>
        </trans-unit>
        <trans-unit id="9b8e9e88c43c584957c03c4a9790125c18a326dc" translate="yes" xml:space="preserve">
          <source>Fuse::try_fold</source>
          <target state="translated">Fuse::try_fold</target>
        </trans-unit>
        <trans-unit id="019976673022e8a2538f04e41619085b0509b968" translate="yes" xml:space="preserve">
          <source>Fuse::try_for_each</source>
          <target state="translated">Fuse::try_for_each</target>
        </trans-unit>
        <trans-unit id="fe419dd037d95472b807e093d3ea02ccb57032fd" translate="yes" xml:space="preserve">
          <source>Fuse::try_from</source>
          <target state="translated">Fuse::try_from</target>
        </trans-unit>
        <trans-unit id="f05020a71bfc101fbe84356da0aa7b927615342b" translate="yes" xml:space="preserve">
          <source>Fuse::try_into</source>
          <target state="translated">Fuse::try_into</target>
        </trans-unit>
        <trans-unit id="c841af43e247c2928b1064e08f72070c26de3b92" translate="yes" xml:space="preserve">
          <source>Fuse::try_rfold</source>
          <target state="translated">Fuse::try_rfold</target>
        </trans-unit>
        <trans-unit id="5d8927e5ec76098e5f2f5c0d2886eb49af8b8071" translate="yes" xml:space="preserve">
          <source>Fuse::type_id</source>
          <target state="translated">Fuse::type_id</target>
        </trans-unit>
        <trans-unit id="11c88abe9b80924ead19e08c32a0e7d6ff055afa" translate="yes" xml:space="preserve">
          <source>Fuse::unzip</source>
          <target state="translated">Fuse::unzip</target>
        </trans-unit>
        <trans-unit id="6e1886d4b16f1cab13382140a5a4f1a5275134bc" translate="yes" xml:space="preserve">
          <source>Fuse::zip</source>
          <target state="translated">Fuse::zip</target>
        </trans-unit>
        <trans-unit id="9c86bce2cc6fe0fed1d906293dbdc3155ee68bd1" translate="yes" xml:space="preserve">
          <source>Fused multiply-add. Computes &lt;code&gt;(self * a) + b&lt;/code&gt; with only one rounding error, yielding a more accurate result than an unfused multiply-add.</source>
          <target state="translated">Слитное умножение-сложение. Вычисляет &lt;code&gt;(self * a) + b&lt;/code&gt; только с одной ошибкой округления, что дает более точный результат, чем несвязанное умножение-сложение.</target>
        </trans-unit>
        <trans-unit id="b5bb5c0c622a64179c02df6d378fd9fe00019e5d" translate="yes" xml:space="preserve">
          <source>FusedIterator</source>
          <target state="translated">FusedIterator</target>
        </trans-unit>
        <trans-unit id="047ca54032a1756c098d3bc1a941a0ed8e583df8" translate="yes" xml:space="preserve">
          <source>Future</source>
          <target state="translated">Future</target>
        </trans-unit>
        <trans-unit id="34f9f68cc95c47f600ff51f98b51efdc1e4973b7" translate="yes" xml:space="preserve">
          <source>Future compatibility</source>
          <target state="translated">Будущая совместимость</target>
        </trans-unit>
        <trans-unit id="fe870fd01f0abd72a18fbaf5c5cbed77f351525a" translate="yes" xml:space="preserve">
          <source>Future::poll</source>
          <target state="translated">Future::poll</target>
        </trans-unit>
        <trans-unit id="5404be636a9f63c6aa8f665b2d42ad260f8e8dfb" translate="yes" xml:space="preserve">
          <source>Futures alone are &lt;em&gt;inert&lt;/em&gt;; they must be &lt;em&gt;actively&lt;/em&gt;&lt;code&gt;poll&lt;/code&gt;ed to make progress, meaning that each time the current task is woken up, it should actively re-&lt;code&gt;poll&lt;/code&gt; pending futures that it still has an interest in.</source>
          <target state="translated">Одни только фьючерсы &lt;em&gt;инертны&lt;/em&gt; ; они должны быть &lt;em&gt;активно &lt;/em&gt; &lt;code&gt;poll&lt;/code&gt; для достижения прогресса, что означает, что каждый раз, когда текущая задача просыпается, она должна активно повторно &lt;code&gt;poll&lt;/code&gt; ожидающие фьючерсы, в которых она все еще имеет интерес.</target>
        </trans-unit>
        <trans-unit id="170618a3c56100e7f9817b28534dee7fda36bd36" translate="yes" xml:space="preserve">
          <source>GNU C library Bugzilla</source>
          <target state="translated">Библиотека Си GNU Багзилла</target>
        </trans-unit>
        <trans-unit id="ae44bdb1ff1d7f62acdd7de8bfa0f16c08c76789" translate="yes" xml:space="preserve">
          <source>Gain a reference to the underlying &lt;code&gt;stat&lt;/code&gt; structure which contains the raw information returned by the OS.</source>
          <target state="translated">Получите ссылку на базовую структуру &lt;code&gt;stat&lt;/code&gt; которая содержит необработанную информацию, возвращаемую ОС.</target>
        </trans-unit>
        <trans-unit id="28e18309d45539def481f7786d4cc8d73b9f5aec" translate="yes" xml:space="preserve">
          <source>Gain a reference to the underlying &lt;code&gt;stat&lt;/code&gt; structure which contains the raw information returned by the OS. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.as_raw_stat&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Получите ссылку на базовую структуру &lt;code&gt;stat&lt;/code&gt; которая содержит необработанную информацию, возвращаемую ОС. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.as_raw_stat&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5023fde21a93efcc45f3ef1278a03020db274d7f" translate="yes" xml:space="preserve">
          <source>Ge</source>
          <target state="translated">Ge</target>
        </trans-unit>
        <trans-unit id="826e54d9f3341da0639215d591e03f7d7c85bcf1" translate="yes" xml:space="preserve">
          <source>Generalizing the latter case, any type implementing &lt;a href=&quot;../ops/trait.drop&quot;&gt;&lt;code&gt;Drop&lt;/code&gt;&lt;/a&gt; can't be &lt;code&gt;Copy&lt;/code&gt;, because it's managing some resource besides its own &lt;a href=&quot;../mem/fn.size_of&quot;&gt;&lt;code&gt;size_of::&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; bytes.</source>
          <target state="translated">Обобщая последний случай, любой тип, реализующий &lt;a href=&quot;../ops/trait.drop&quot;&gt; &lt;code&gt;Drop&lt;/code&gt; ,&lt;/a&gt; не может быть &lt;code&gt;Copy&lt;/code&gt; , потому что он управляет некоторым ресурсом, помимо своего собственного &lt;a href=&quot;../mem/fn.size_of&quot;&gt; &lt;code&gt;size_of::&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; байтов.</target>
        </trans-unit>
        <trans-unit id="b3f505d3f65e19757f523841da2ceb51bc20ba3c" translate="yes" xml:space="preserve">
          <source>Generally speaking, if your type &lt;em&gt;can&lt;/em&gt; implement &lt;code&gt;Copy&lt;/code&gt;, it should. Keep in mind, though, that implementing &lt;code&gt;Copy&lt;/code&gt; is part of the public API of your type. If the type might become non-&lt;code&gt;Copy&lt;/code&gt; in the future, it could be prudent to omit the &lt;code&gt;Copy&lt;/code&gt; implementation now, to avoid a breaking API change.</source>
          <target state="translated">Вообще говоря, если ваш тип &lt;em&gt;может&lt;/em&gt; реализовать &lt;code&gt;Copy&lt;/code&gt; , он должен. Однако имейте в виду, что реализация &lt;code&gt;Copy&lt;/code&gt; является частью общедоступного API вашего типа. Если в будущем тип может стать не- &lt;code&gt;Copy&lt;/code&gt; , было бы разумно опустить реализацию &lt;code&gt;Copy&lt;/code&gt; сейчас, чтобы избежать критического изменения API.</target>
        </trans-unit>
        <trans-unit id="5f188724c393355d9852c11495e877635da2c7cf" translate="yes" xml:space="preserve">
          <source>Generally speaking, when using &lt;code&gt;OpenOptions&lt;/code&gt;, you'll first call &lt;a href=&quot;struct.openoptions#method.new&quot;&gt;&lt;code&gt;OpenOptions::new&lt;/code&gt;&lt;/a&gt;, then chain calls to methods to set each option, then call &lt;a href=&quot;struct.openoptions#method.open&quot;&gt;&lt;code&gt;OpenOptions::open&lt;/code&gt;&lt;/a&gt;, passing the path of the file you're trying to open. This will give you a &lt;a href=&quot;../io/type.result&quot;&gt;&lt;code&gt;io::Result&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;struct.file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; inside that you can further operate on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f413a99b90fcebaf815708bcac6bf2c609712621" translate="yes" xml:space="preserve">
          <source>Generally speaking, when using &lt;code&gt;OpenOptions&lt;/code&gt;, you'll first call &lt;a href=&quot;struct.openoptions#method.new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;, then chain calls to methods to set each option, then call &lt;a href=&quot;struct.openoptions#method.open&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt;, passing the path of the file you're trying to open. This will give you a &lt;a href=&quot;../io/type.result&quot;&gt;&lt;code&gt;io::Result&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;struct.file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; inside that you can further operate on.</source>
          <target state="translated">Вообще говоря, при использовании &lt;code&gt;OpenOptions&lt;/code&gt; вы сначала вызываете &lt;a href=&quot;struct.openoptions#method.new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; , затем связываете вызовы методов для установки каждой опции, затем вызываете &lt;a href=&quot;struct.openoptions#method.open&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; , передавая путь к файлу, который пытаетесь открыть. Это даст вам &lt;a href=&quot;../io/type.result&quot;&gt; &lt;code&gt;io::Result&lt;/code&gt; &lt;/a&gt; с &lt;a href=&quot;struct.file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; внутри, с которым вы можете работать дальше.</target>
        </trans-unit>
        <trans-unit id="ef7a9d88d07b5708f08d417b4551f7e7322bf0bc" translate="yes" xml:space="preserve">
          <source>Generally speaking, you should just &lt;code&gt;derive&lt;/code&gt; a &lt;code&gt;Debug&lt;/code&gt; implementation.</source>
          <target state="translated">Вообще говоря, вы должны просто &lt;code&gt;derive&lt;/code&gt; в &lt;code&gt;Debug&lt;/code&gt; реализацию.</target>
        </trans-unit>
        <trans-unit id="732f11f2232d28d3cd17a16f8d12c4158ae671a2" translate="yes" xml:space="preserve">
          <source>Generally, &lt;code&gt;Self: Sized&lt;/code&gt; is used to indicate that the trait should not be used as a trait object. If the trait comes from your own crate, consider removing this restriction.</source>
          <target state="translated">Как правило, &lt;code&gt;Self: Sized&lt;/code&gt; используется, чтобы указать, что признак не должен использоваться как объект признака. Если черта взята из вашего собственного ящика, рассмотрите возможность снятия этого ограничения.</target>
        </trans-unit>
        <trans-unit id="4e2b4a1c449efa70704f19e5e57263ca0c4ffc22" translate="yes" xml:space="preserve">
          <source>Generally, for smart pointers you will implement &lt;code&gt;CoerceUnsized&amp;lt;Ptr&amp;lt;U&amp;gt;&amp;gt; for Ptr&amp;lt;T&amp;gt; where T: Unsize&amp;lt;U&amp;gt;, U: ?Sized&lt;/code&gt;, with an optional &lt;code&gt;?Sized&lt;/code&gt; bound on &lt;code&gt;T&lt;/code&gt; itself. For wrapper types that directly embed &lt;code&gt;T&lt;/code&gt; like &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;, you can directly implement &lt;code&gt;CoerceUnsized&amp;lt;Wrap&amp;lt;U&amp;gt;&amp;gt; for Wrap&amp;lt;T&amp;gt; where T: CoerceUnsized&amp;lt;U&amp;gt;&lt;/code&gt;. This will let coercions of types like &lt;code&gt;Cell&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; work.</source>
          <target state="translated">Как правило, для интеллектуальных указателей вы реализуете &lt;code&gt;CoerceUnsized&amp;lt;Ptr&amp;lt;U&amp;gt;&amp;gt; for Ptr&amp;lt;T&amp;gt; where T: Unsize&amp;lt;U&amp;gt;, U: ?Sized&lt;/code&gt; , с необязательной привязкой &lt;code&gt;?Sized&lt;/code&gt; к самому &lt;code&gt;T&lt;/code&gt; . Для типов оболочки, которые напрямую встраивают &lt;code&gt;T&lt;/code&gt; , например &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; и &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; , вы можете напрямую реализовать &lt;code&gt;CoerceUnsized&amp;lt;Wrap&amp;lt;U&amp;gt;&amp;gt; for Wrap&amp;lt;T&amp;gt; where T: CoerceUnsized&amp;lt;U&amp;gt;&lt;/code&gt; . Это позволит работать с приведением типов вроде &lt;code&gt;Cell&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a24acc6c6f1f6f5fa4a70e0c8ec97be7ad2c8f4" translate="yes" xml:space="preserve">
          <source>Generate the nth Fibonacci number.</source>
          <target state="translated">Сгенерируйте n-е число Фибоначчи.</target>
        </trans-unit>
        <trans-unit id="4055bcedf4ef42a40655c354d55e695956e52c99" translate="yes" xml:space="preserve">
          <source>Generates a wide character sequence for potentially ill-formed UTF-16.</source>
          <target state="translated">Генерирует широкую последовательность символов для потенциально плохо сформированного UTF-16.</target>
        </trans-unit>
        <trans-unit id="2358686f35ad9babf41475908fbf7fb94c7fb8f0" translate="yes" xml:space="preserve">
          <source>Generates the base configuration for spawning a thread, from which configuration methods can be chained.</source>
          <target state="translated">Генерирует базовую конфигурацию для порождения потока,из которой могут быть сцеплены методы конфигурации.</target>
        </trans-unit>
        <trans-unit id="4eed3f4ef0910be56eecb5b88bc01f17517c6c08" translate="yes" xml:space="preserve">
          <source>Generating a Random Number</source>
          <target state="translated">Генерация случайного номера</target>
        </trans-unit>
        <trans-unit id="4344ed85b4c6edaff3d6a74283da67d4030e7149" translate="yes" xml:space="preserve">
          <source>Generating a Secret Number</source>
          <target state="translated">Генерация секретного номера</target>
        </trans-unit>
        <trans-unit id="1d20de03126b297e05c13a7d280f33e24c72c537" translate="yes" xml:space="preserve">
          <source>Generator</source>
          <target state="translated">Generator</target>
        </trans-unit>
        <trans-unit id="be3352ebf40a7e8e4b021ce3ac0440a124629bf5" translate="yes" xml:space="preserve">
          <source>Generator::resume</source>
          <target state="translated">Generator::resume</target>
        </trans-unit>
        <trans-unit id="8a05177b6fef574c9007b27a5b9c1d6d147b496c" translate="yes" xml:space="preserve">
          <source>GeneratorState</source>
          <target state="translated">GeneratorState</target>
        </trans-unit>
        <trans-unit id="d04f291cf43bb98ceb2d5124b4e75aa6ba1544d4" translate="yes" xml:space="preserve">
          <source>GeneratorState::borrow</source>
          <target state="translated">GeneratorState::borrow</target>
        </trans-unit>
        <trans-unit id="e237a5c5d934ed2bcc036a7ec579e8363436fa8f" translate="yes" xml:space="preserve">
          <source>GeneratorState::borrow_mut</source>
          <target state="translated">GeneratorState::borrow_mut</target>
        </trans-unit>
        <trans-unit id="2502b2db43ac135d156ec67093f193a1d551ada7" translate="yes" xml:space="preserve">
          <source>GeneratorState::clamp</source>
          <target state="translated">GeneratorState::clamp</target>
        </trans-unit>
        <trans-unit id="14c55996161a4d9905bb442a79bebdda60c0a770" translate="yes" xml:space="preserve">
          <source>GeneratorState::clone</source>
          <target state="translated">GeneratorState::clone</target>
        </trans-unit>
        <trans-unit id="3f7f8fe2855b988679d6469ba23b116c95fb7f94" translate="yes" xml:space="preserve">
          <source>GeneratorState::clone_from</source>
          <target state="translated">GeneratorState::clone_from</target>
        </trans-unit>
        <trans-unit id="80b100a3f0da64d40e398e415f7da34b79e8c141" translate="yes" xml:space="preserve">
          <source>GeneratorState::clone_into</source>
          <target state="translated">GeneratorState::clone_into</target>
        </trans-unit>
        <trans-unit id="e257c93690e4d8869ec57678eef2e65d13e430ee" translate="yes" xml:space="preserve">
          <source>GeneratorState::cmp</source>
          <target state="translated">GeneratorState::cmp</target>
        </trans-unit>
        <trans-unit id="8a2e0ed5e7b43d7400dac081e69edcd39c918c34" translate="yes" xml:space="preserve">
          <source>GeneratorState::eq</source>
          <target state="translated">GeneratorState::eq</target>
        </trans-unit>
        <trans-unit id="89c2703dea761c8c48ffa4254fb375381596d10f" translate="yes" xml:space="preserve">
          <source>GeneratorState::fmt</source>
          <target state="translated">GeneratorState::fmt</target>
        </trans-unit>
        <trans-unit id="eda2eb9f12fc2973fa0ac082be186f3fadfe23bd" translate="yes" xml:space="preserve">
          <source>GeneratorState::from</source>
          <target state="translated">GeneratorState::from</target>
        </trans-unit>
        <trans-unit id="a10861d2a70c2a97bea18ae69516399a36bee43f" translate="yes" xml:space="preserve">
          <source>GeneratorState::ge</source>
          <target state="translated">GeneratorState::ge</target>
        </trans-unit>
        <trans-unit id="72a246cb6eeb7bd47306411db8d35d82c5c697bd" translate="yes" xml:space="preserve">
          <source>GeneratorState::gt</source>
          <target state="translated">GeneratorState::gt</target>
        </trans-unit>
        <trans-unit id="f47d401161e51de0bd3708a6aa6b0162f13c3a4d" translate="yes" xml:space="preserve">
          <source>GeneratorState::hash</source>
          <target state="translated">GeneratorState::hash</target>
        </trans-unit>
        <trans-unit id="0d2cf74073e99ac2f7b4a8d84ac45a2dec7d63a3" translate="yes" xml:space="preserve">
          <source>GeneratorState::hash_slice</source>
          <target state="translated">GeneratorState::hash_slice</target>
        </trans-unit>
        <trans-unit id="d362c3c3176b8bb099ef83d916f2d082b1a7c9b7" translate="yes" xml:space="preserve">
          <source>GeneratorState::into</source>
          <target state="translated">GeneratorState::into</target>
        </trans-unit>
        <trans-unit id="b756ce5dda7c46f9d07b0d1aca348d701a969f8c" translate="yes" xml:space="preserve">
          <source>GeneratorState::le</source>
          <target state="translated">GeneratorState::le</target>
        </trans-unit>
        <trans-unit id="93e42bf71e3b440df1059a94e8e0dc45070ae52f" translate="yes" xml:space="preserve">
          <source>GeneratorState::lt</source>
          <target state="translated">GeneratorState::lt</target>
        </trans-unit>
        <trans-unit id="6d1cac78c83d7c9a11d1fbbd289720c9f3206ab7" translate="yes" xml:space="preserve">
          <source>GeneratorState::max</source>
          <target state="translated">GeneratorState::max</target>
        </trans-unit>
        <trans-unit id="37560d6c837e27a56cbfe576d408ec65983cd14a" translate="yes" xml:space="preserve">
          <source>GeneratorState::min</source>
          <target state="translated">GeneratorState::min</target>
        </trans-unit>
        <trans-unit id="3549d5021f412f184a2ec1f2eb1ad44c8d1d5469" translate="yes" xml:space="preserve">
          <source>GeneratorState::ne</source>
          <target state="translated">GeneratorState::ne</target>
        </trans-unit>
        <trans-unit id="eaf2826ae0eabec3e56edf7fd20219fdbd1719d8" translate="yes" xml:space="preserve">
          <source>GeneratorState::partial_cmp</source>
          <target state="translated">GeneratorState::partial_cmp</target>
        </trans-unit>
        <trans-unit id="bc63dfa2c5dc307fd7de8a64413574342399b682" translate="yes" xml:space="preserve">
          <source>GeneratorState::to_owned</source>
          <target state="translated">GeneratorState::to_owned</target>
        </trans-unit>
        <trans-unit id="50328fd3c1aba2c5f8f065dcd6362c0cc51dfd2c" translate="yes" xml:space="preserve">
          <source>GeneratorState::try_from</source>
          <target state="translated">GeneratorState::try_from</target>
        </trans-unit>
        <trans-unit id="98ea27a003d07dda294e378b634a2c17ba4c3a3e" translate="yes" xml:space="preserve">
          <source>GeneratorState::try_into</source>
          <target state="translated">GeneratorState::try_into</target>
        </trans-unit>
        <trans-unit id="87741a9ed7c3b2106ba319e6c46fba99b623309a" translate="yes" xml:space="preserve">
          <source>GeneratorState::type_id</source>
          <target state="translated">GeneratorState::type_id</target>
        </trans-unit>
        <trans-unit id="7f39e996a867af2cbe188c7b44ecc3d06e5acc04" translate="yes" xml:space="preserve">
          <source>Generators, also commonly referred to as coroutines, are currently an experimental language feature in Rust. Added in &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/2033&quot;&gt;RFC 2033&lt;/a&gt; generators are currently intended to primarily provide a building block for async/await syntax but will likely extend to also providing an ergonomic definition for iterators and other primitives.</source>
          <target state="translated">Генераторы, также обычно называемые сопрограммами, в настоящее время являются экспериментальной функцией языка Rust. Генераторы, добавленные в &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/2033&quot;&gt;RFC 2033&lt;/a&gt; , в настоящее время предназначены в первую очередь для обеспечения строительного блока синтаксиса async / await, но, вероятно, будут расширены также для предоставления эргономичного определения итераторов и других примитивов.</target>
        </trans-unit>
        <trans-unit id="326f639e29705946500c3f82d8731c2e1774c768" translate="yes" xml:space="preserve">
          <source>Generic &lt;a href=&quot;types/parameters&quot;&gt;type parameters&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;types/parameters&quot;&gt;Параметры&lt;/a&gt; универсального типа .</target>
        </trans-unit>
        <trans-unit id="1807cc787d281913c23f12bd3560541d8f00b032" translate="yes" xml:space="preserve">
          <source>Generic Data Types</source>
          <target state="translated">Общие типы данных</target>
        </trans-unit>
        <trans-unit id="98f64976fc4f70ae5ee15f3bc5b13a2d6b9d672a" translate="yes" xml:space="preserve">
          <source>Generic Implementations</source>
          <target state="translated">Общие имплементации</target>
        </trans-unit>
        <trans-unit id="f072da836e4d916032d518ff0f18fd650d4581ad" translate="yes" xml:space="preserve">
          <source>Generic Lifetimes in Functions</source>
          <target state="translated">Общее время жизни в функциях</target>
        </trans-unit>
        <trans-unit id="27eeb642b1a0c27c15bf839571b69f7e44c24936" translate="yes" xml:space="preserve">
          <source>Generic Traits</source>
          <target state="translated">Общие черты</target>
        </trans-unit>
        <trans-unit id="efb89da0fe84fb1c10e0e67f29f7eeede9f0ba20" translate="yes" xml:space="preserve">
          <source>Generic Type Parameters, Trait Bounds, and Lifetimes Together</source>
          <target state="translated">Общие параметры типа,границы признаков,и продолжительность жизни вместе</target>
        </trans-unit>
        <trans-unit id="9cd42050d57736e2d4fca7655d0893381fa92cbb" translate="yes" xml:space="preserve">
          <source>Generic Types, Traits, and Lifetimes</source>
          <target state="translated">Общие типы,черты и продолжительность жизни.</target>
        </trans-unit>
        <trans-unit id="8d490f5f674a359f8f4f73405d1a00a44fb2ed0a" translate="yes" xml:space="preserve">
          <source>Generic arguments were not provided in the same order as the corresponding generic parameters are declared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f5365cdbef14515226dcd384583192170cc525" translate="yes" xml:space="preserve">
          <source>Generic functions</source>
          <target state="translated">Общие функции</target>
        </trans-unit>
        <trans-unit id="1f4659089d7ab3bbc1fbc01f1bd9729f123901fd" translate="yes" xml:space="preserve">
          <source>Generic functions and generic structs can use traits to constrain, or bound, the types they accept.</source>
          <target state="translated">Общие функции и общие структуры могут использовать черты,чтобы ограничить или связать типы,которые они принимают.</target>
        </trans-unit>
        <trans-unit id="eae8cd46084865929b442cf8ea6d11173b23b60b" translate="yes" xml:space="preserve">
          <source>Generic functions and types with a &lt;code&gt;T: Trait&lt;/code&gt; bounds can be used with &lt;code&gt;Ty&lt;/code&gt; being used for &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">Общие функции и типы с &lt;code&gt;T: Trait&lt;/code&gt; границ могут быть использованы с &lt;code&gt;Ty&lt;/code&gt; используются для &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4bcab43ed4f07d581db4e91c1af83663a27b91de" translate="yes" xml:space="preserve">
          <source>Generic hashing support.</source>
          <target state="translated">Общая поддержка хеширования.</target>
        </trans-unit>
        <trans-unit id="5c44d31fa6749df8167db78b7f69c1e6b8112cff" translate="yes" xml:space="preserve">
          <source>Generic items may use traits as &lt;a href=&quot;../trait-bounds&quot;&gt;bounds&lt;/a&gt; on their type parameters.</source>
          <target state="translated">Универсальные элементы могут использовать черты в качестве &lt;a href=&quot;../trait-bounds&quot;&gt;границ&lt;/a&gt; своих параметров типа.</target>
        </trans-unit>
        <trans-unit id="910a23e27585722660fb101574581723e9023985" translate="yes" xml:space="preserve">
          <source>Generic lifetime &lt;code&gt;'b&lt;/code&gt; must outlive lifetime &lt;code&gt;'a&lt;/code&gt;</source>
          <target state="translated">Общее время жизни &lt;code&gt;'b&lt;/code&gt; должно пережить время жизни &lt;code&gt;'a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7374523f7aaffe9d327555dcc2269e6002424197" translate="yes" xml:space="preserve">
          <source>Generic lifetime and type parameters allow &lt;a href=&quot;../attributes&quot;&gt;attributes&lt;/a&gt; on them. There are no built-in attributes that do anything in this position, although custom derive attributes may give meaning to it.</source>
          <target state="translated">Общие параметры времени жизни и типа допускают использование &lt;a href=&quot;../attributes&quot;&gt;атрибутов&lt;/a&gt; . В этой позиции нет встроенных атрибутов, которые бы что-либо делали, хотя настраиваемые производные атрибуты могут придавать ей значение.</target>
        </trans-unit>
        <trans-unit id="070d7b64bfe57bcc62addca63e2c1cff8dd83211" translate="yes" xml:space="preserve">
          <source>Generic parameter &lt;code&gt;T&lt;/code&gt; constrained to types that implement &lt;code&gt;U&lt;/code&gt;</source>
          <target state="translated">Общий параметр &lt;code&gt;T&lt;/code&gt; ограничен типами, реализующими &lt;code&gt;U&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="358eed37fa63fd6b1e5193acd34abc17d6db4cd2" translate="yes" xml:space="preserve">
          <source>Generic parameters are implicit with &lt;code&gt;Self&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0662e93a0c0518f55b130b80b54fb79df0d0c94" translate="yes" xml:space="preserve">
          <source>Generic type &lt;code&gt;T&lt;/code&gt; contains no borrowed references other than &lt;code&gt;'static&lt;/code&gt; ones</source>
          <target state="translated">Не Generic тип &lt;code&gt;T&lt;/code&gt; не содержит заимствованные другие ссылки , чем &lt;code&gt;'static&lt;/code&gt; те</target>
        </trans-unit>
        <trans-unit id="aff0c7dbfb36e71d34305b173306f472b0221612" translate="yes" xml:space="preserve">
          <source>Generic type &lt;code&gt;T&lt;/code&gt; must outlive lifetime &lt;code&gt;'a&lt;/code&gt; (meaning the type cannot transitively contain any references with lifetimes shorter than &lt;code&gt;'a&lt;/code&gt;)</source>
          <target state="translated">Универсальный тип &lt;code&gt;T&lt;/code&gt; должен пережить время жизни &lt;code&gt;'a&lt;/code&gt; (это означает, что тип не может транзитивно содержать какие-либо ссылки с временем жизни короче, чем &lt;code&gt;'a&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e6e64547108bd126e5d53a717612fe87ff383d16" translate="yes" xml:space="preserve">
          <source>Generic type parameters in a struct definition aren&amp;rsquo;t always the same as those you use in that struct&amp;rsquo;s method signatures. For example, Listing 10-11 defines the method &lt;code&gt;mixup&lt;/code&gt; on the &lt;code&gt;Point&amp;lt;T, U&amp;gt;&lt;/code&gt; struct from Listing 10-8. The method takes another &lt;code&gt;Point&lt;/code&gt; as a parameter, which might have different types from the &lt;code&gt;self&lt;/code&gt;&lt;code&gt;Point&lt;/code&gt; we&amp;rsquo;re calling &lt;code&gt;mixup&lt;/code&gt; on. The method creates a new &lt;code&gt;Point&lt;/code&gt; instance with the &lt;code&gt;x&lt;/code&gt; value from the &lt;code&gt;self&lt;/code&gt;&lt;code&gt;Point&lt;/code&gt; (of type &lt;code&gt;T&lt;/code&gt;) and the &lt;code&gt;y&lt;/code&gt; value from the passed-in &lt;code&gt;Point&lt;/code&gt; (of type &lt;code&gt;W&lt;/code&gt;).</source>
          <target state="translated">Параметры универсального типа в определении структуры не всегда совпадают с параметрами, которые вы используете в сигнатурах методов этой структуры. Например, в листинге 10-11 определяется &lt;code&gt;mixup&lt;/code&gt; методов в структуре &lt;code&gt;Point&amp;lt;T, U&amp;gt;&lt;/code&gt; из листинга 10-8. Метод принимает другую &lt;code&gt;Point&lt;/code&gt; в качестве параметра, который может иметь различные типы из &lt;code&gt;self&lt;/code&gt; &lt;code&gt;Point&lt;/code&gt; мы называем &lt;code&gt;mixup&lt;/code&gt; дальше. Метод создает новый экземпляр &lt;code&gt;Point&lt;/code&gt; со значением &lt;code&gt;x&lt;/code&gt; из &lt;code&gt;self&lt;/code&gt; &lt;code&gt;Point&lt;/code&gt; (типа &lt;code&gt;T&lt;/code&gt; ) и значением &lt;code&gt;y&lt;/code&gt; из переданной &lt;code&gt;Point&lt;/code&gt; (типа &lt;code&gt;W&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="24a4c08697368c16f5fbbfbba45a86f6181cd53e" translate="yes" xml:space="preserve">
          <source>Generics have been used on an auto trait.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0504e570433bf881c8e4f524e7865541e64b7072" translate="yes" xml:space="preserve">
          <source>Get a pinned mutable reference from a static mutable reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb95181a8c4c34e71821bcb5b2d547968b70fff0" translate="yes" xml:space="preserve">
          <source>Get a pinned reference from a static reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be352f47b5e6ad288f45c1ffb564c03acea5928" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut bool&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6a3b4e003eb4b0da26051861e6a8afd27a77f2" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut i16&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfaa4b24fd6ed6fa9005fce55a46cedaf4873afb" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut i32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0fbe251cddfe77d2382a7fe1ddccda6727f7dc" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut i64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94480ecfd23dbc87f67caa39256ed88bbd75535" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut i8&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995c7f0c6e5302e5c0b1595c6739a6650e6aa199" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut isize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec51732ae25a09c8ca12e18b2914268b7138ae43" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut u16&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be052f4c09cb9e78d37bcccedbd0ef6b81373d25" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut u32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64feb94dc70a119380d14818e3261d6eef2ff01" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut u64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c9e695d154c5f3dd3abe64bcd503125f1a6943" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut u8&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1606b3b4a9988dd96e8df625d37ad2f352009b53" translate="yes" xml:space="preserve">
          <source>Get atomic access to a &lt;code&gt;&amp;amp;mut usize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d022441dfa4197ede9226c6cd05c31e113bcb1" translate="yes" xml:space="preserve">
          <source>Get atomic access to a pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf81408f02d917373b6c30a23d98790dc9a5d471" translate="yes" xml:space="preserve">
          <source>Get the formatted string, if it has no arguments to be formatted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5cd7c90099ca5a967101e4cfad667e3decbf3d" translate="yes" xml:space="preserve">
          <source>Gets a handle to the thread that invokes it.</source>
          <target state="translated">Получает рукоятку на нитку,которая на нее ссылается.</target>
        </trans-unit>
        <trans-unit id="76d4e2388fe5518e4d670520e3733f09619ee790" translate="yes" xml:space="preserve">
          <source>Gets a mutable (unique) reference to the contained value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82a8f0547b098b3e15a8465f846472c994e131e" translate="yes" xml:space="preserve">
          <source>Gets a mutable iterator over the entries of the map, sorted by key.</source>
          <target state="translated">Получает мутирующий итератор над записями карты,отсортированными по клавишам.</target>
        </trans-unit>
        <trans-unit id="1ac6a489d416bd5c5ef9fe3e6c54e36610970d42" translate="yes" xml:space="preserve">
          <source>Gets a mutable iterator over the values of the map, in order by key.</source>
          <target state="translated">Получает мутирующий итератор над значениями карты по порядку следования по клавишам.</target>
        </trans-unit>
        <trans-unit id="c387218a90a9bb1918a7924816b86e529b82f080" translate="yes" xml:space="preserve">
          <source>Gets a mutable pointer to the contained value. Reading from this pointer or turning it into a reference is undefined behavior unless the &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; is initialized.</source>
          <target state="translated">Получает изменяемый указатель на содержащееся значение. Чтение из этого указателя или превращение его в ссылку является неопределенным поведением, если &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; не инициализирован.</target>
        </trans-unit>
        <trans-unit id="b569ba746c83e8a3f0560e8c5640e4d7d0cf471a" translate="yes" xml:space="preserve">
          <source>Gets a mutable pointer to the first element of the array.</source>
          <target state="translated">Получает мутирующий указатель на первый элемент массива.</target>
        </trans-unit>
        <trans-unit id="93221faf609cb53b66eed583ddd8ff4650ad1090" translate="yes" xml:space="preserve">
          <source>Gets a mutable pointer to the wrapped value.</source>
          <target state="translated">Получает изменяемый указатель на обернутую величину.</target>
        </trans-unit>
        <trans-unit id="1afb8b1fa7a141c132899f91a60cb50d53c480a9" translate="yes" xml:space="preserve">
          <source>Gets a mutable pointer to the wrapped value. The difference to &lt;a href=&quot;#method.get&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; is that this function accepts a raw pointer, which is useful to avoid the creation of temporary references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7b2240ef54c761d6faa307793ba693f884b564" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the contained value.</source>
          <target state="translated">Получает мутирующую ссылку на содержащееся в ней значение.</target>
        </trans-unit>
        <trans-unit id="baa6d6ef07f8226c5636c761217972d8dab55984" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the data inside of this &lt;code&gt;Pin&lt;/code&gt;.</source>
          <target state="translated">Получает изменяемую ссылку на данные внутри этого &lt;code&gt;Pin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be59995f2e9c7b5e3f2085e347793a76d09f5142" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the key and value in the entry.</source>
          <target state="translated">Получает мутирующую ссылку на ключ и значение в записи.</target>
        </trans-unit>
        <trans-unit id="392a07775c4cbc76c6f5c44ba9a3213fc2da81fd" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the key in the entry.</source>
          <target state="translated">Получает мутирующую ссылку на ключ в записи.</target>
        </trans-unit>
        <trans-unit id="5011a90347126d03d01127126a86107c5208ff3e" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the underlying reader.</source>
          <target state="translated">Получает изменяемую ссылку на лежащий в основе читателя.</target>
        </trans-unit>
        <trans-unit id="f2e7f5b6ab637a03072f9c7e9b6f73027700454e" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the underlying value in this cursor.</source>
          <target state="translated">Получает мутирующую ссылку на базовое значение в этом курсоре.</target>
        </trans-unit>
        <trans-unit id="dec4b0e863c4ca94f197dad1d6d087c7c4489b09" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the underlying writer.</source>
          <target state="translated">Получает мутирующую ссылку на лежащего в основе писателя.</target>
        </trans-unit>
        <trans-unit id="46ecc0b581f4368e77b78de6bcf33878428bee2b" translate="yes" xml:space="preserve">
          <source>Gets a mutable reference to the value in the entry.</source>
          <target state="translated">Получает мутирующую ссылку на значение в записи.</target>
        </trans-unit>
        <trans-unit id="325584547464337b8a139f4e032f2c9235b63738" translate="yes" xml:space="preserve">
          <source>Gets a pinned mutable reference from this pinned pointer.</source>
          <target state="translated">Получает ссылку на штырьковый мутант из этого штырькового указателя.</target>
        </trans-unit>
        <trans-unit id="b99a2e7f3dd3f0850a631d924a0f85ceb5ab793c" translate="yes" xml:space="preserve">
          <source>Gets a pinned shared reference from this pinned pointer.</source>
          <target state="translated">Получает общую ссылку по этому указателю.</target>
        </trans-unit>
        <trans-unit id="4518638a3643d66963581854e8f287c3740674d7" translate="yes" xml:space="preserve">
          <source>Gets a pointer to the contained value. Reading from this pointer or turning it into a reference is undefined behavior unless the &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; is initialized. Writing to memory that this pointer (non-transitively) points to is undefined behavior (except inside an &lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">Получает указатель на содержащееся значение. Чтение из этого указателя или превращение его в ссылку является неопределенным поведением, если &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; не инициализирован. Запись в память, на которую указывает этот указатель ( &lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; ), является неопределенным поведением (кроме как внутри UnsafeCell &amp;lt;T&amp;gt; ).</target>
        </trans-unit>
        <trans-unit id="df26339f7815b59c7db8559b2dc091cf260e6a95" translate="yes" xml:space="preserve">
          <source>Gets a pointer to the first element of the array.</source>
          <target state="translated">Получает указатель на первый элемент массива.</target>
        </trans-unit>
        <trans-unit id="51fc3b713ce675163511b6b7c0001b3242a0e070" translate="yes" xml:space="preserve">
          <source>Gets a reference to a static &lt;code&gt;Location&lt;/code&gt; indicating where it was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0b41d5362a52c7e2047db8d30137b1ccf260d5" translate="yes" xml:space="preserve">
          <source>Gets a reference to the contained value.</source>
          <target state="translated">Получает ссылку на содержащееся в ней значение.</target>
        </trans-unit>
        <trans-unit id="cff65263d72903c422d0a7597523c0375366ab3b" translate="yes" xml:space="preserve">
          <source>Gets a reference to the key and value in the entry.</source>
          <target state="translated">Получает ссылку на ключ и значение в записи.</target>
        </trans-unit>
        <trans-unit id="a73b6b64fba7c9a4c0709973dbffd936a0e9fbd2" translate="yes" xml:space="preserve">
          <source>Gets a reference to the key in the entry.</source>
          <target state="translated">Получает ссылку на ключ в записи.</target>
        </trans-unit>
        <trans-unit id="feddda07d6595d79eeaf54c555c5ae797d32fafa" translate="yes" xml:space="preserve">
          <source>Gets a reference to the key that would be used when inserting a value through the &lt;code&gt;VacantEntry&lt;/code&gt;.</source>
          <target state="translated">Получает ссылку на ключ, который будет использоваться при вставке значения через &lt;code&gt;VacantEntry&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ec6e3eeb0b6ad5023996187968d591cae5085ca" translate="yes" xml:space="preserve">
          <source>Gets a reference to the key that would be used when inserting a value through the VacantEntry.</source>
          <target state="translated">Получает ссылку на ключ,который будет использоваться при вставке значения через VacantEntry.</target>
        </trans-unit>
        <trans-unit id="cf505aa88d1d27b7fd7210fea3eb5f424893e421" translate="yes" xml:space="preserve">
          <source>Gets a reference to the underlying reader.</source>
          <target state="translated">Получает ссылку на соответствующий читатель.</target>
        </trans-unit>
        <trans-unit id="bcf7058743e55a29769e9f52c6d7eb995745282c" translate="yes" xml:space="preserve">
          <source>Gets a reference to the underlying value in this cursor.</source>
          <target state="translated">Получает ссылку на базовое значение в этом курсоре.</target>
        </trans-unit>
        <trans-unit id="cb7cc9508e37a0159bd3a7b3b0845509f330a592" translate="yes" xml:space="preserve">
          <source>Gets a reference to the underlying writer.</source>
          <target state="translated">Получает ссылку на основного писателя.</target>
        </trans-unit>
        <trans-unit id="a9eb138b06bc622e04583407ce48c73c001c324e" translate="yes" xml:space="preserve">
          <source>Gets a reference to the value in the entry.</source>
          <target state="translated">Получает ссылку на значение в записи.</target>
        </trans-unit>
        <trans-unit id="bf39c650c88ad522e7aa25fef3aa0cf8f15445c4" translate="yes" xml:space="preserve">
          <source>Gets a shared reference out of a pin.</source>
          <target state="translated">Получает общую ссылку из булавки.</target>
        </trans-unit>
        <trans-unit id="c8d67ec62dc724790a39413d95104cb2f25712dc" translate="yes" xml:space="preserve">
          <source>Gets a shared reference to the contained value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7979bb5a2e24a20633426914599d65cc13e380ce" translate="yes" xml:space="preserve">
          <source>Gets a static string slice containing the name of a type.</source>
          <target state="translated">Получает статический фрагмент строки,содержащий имя типа.</target>
        </trans-unit>
        <trans-unit id="a1f0dbc00515171edea6468d519fe0276ba8e73e" translate="yes" xml:space="preserve">
          <source>Gets an approximation of the number of &lt;code&gt;Weak&lt;/code&gt; pointers pointing to this allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0c54b937e7b93e8f39dc4887850e732a02eae2" translate="yes" xml:space="preserve">
          <source>Gets an approximation of the number of &lt;code&gt;Weak&lt;/code&gt; pointers pointing to this value.</source>
          <target state="translated">Получает приблизительное количество &lt;code&gt;Weak&lt;/code&gt; указателей, указывающих на это значение.</target>
        </trans-unit>
        <trans-unit id="234ebcadb6ac6bb0def6ad4173e0e189daeb1439" translate="yes" xml:space="preserve">
          <source>Gets an identifier which is globally unique to the specified type. This function will return the same value for a type regardless of whichever crate it is invoked in.</source>
          <target state="translated">Получает идентификатор,который глобально уникален для указанного типа.Эта функция вернет одно и то же значение для типа независимо от того,в каком ящике он вызывается.</target>
        </trans-unit>
        <trans-unit id="77e393eb1ab1f3573f4cc8c8d9a6214bd3e5808e" translate="yes" xml:space="preserve">
          <source>Gets an iterator for moving out the &lt;code&gt;BTreeSet&lt;/code&gt;'s contents.</source>
          <target state="translated">Получает итератор для перемещения содержимого &lt;code&gt;BTreeSet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11b43ebc9818fa3526a8e800dba2a829340904c9" translate="yes" xml:space="preserve">
          <source>Gets an iterator over the entries of the map, sorted by key.</source>
          <target state="translated">Получает итератор над записями карты,отсортированными по клавишам.</target>
        </trans-unit>
        <trans-unit id="4282f4ebb370a2d3e37842bf8bea7691a93cc17f" translate="yes" xml:space="preserve">
          <source>Gets an iterator over the keys of the map, in sorted order.</source>
          <target state="translated">Получает итератор по клавишам карты,в отсортированном порядке.</target>
        </trans-unit>
        <trans-unit id="88cd2b443e0410f773c3db3b4b02c30273a29587" translate="yes" xml:space="preserve">
          <source>Gets an iterator over the values of the map, in order by key.</source>
          <target state="translated">Получает итератор над значениями карты по порядку следования по клавишам.</target>
        </trans-unit>
        <trans-unit id="f7d58dcf7a90c88a6dd8d8e2a936de88caad9b01" translate="yes" xml:space="preserve">
          <source>Gets an iterator that visits the values in the &lt;code&gt;BTreeSet&lt;/code&gt; in ascending order.</source>
          <target state="translated">Получает итератор, который &lt;code&gt;BTreeSet&lt;/code&gt; к значениям в BTreeSet в порядке возрастания.</target>
        </trans-unit>
        <trans-unit id="bf50547bde43305eadfc81da6c51963036f0b0bc" translate="yes" xml:space="preserve">
          <source>Gets mutable references to the underlying readers in this &lt;code&gt;Chain&lt;/code&gt;.</source>
          <target state="translated">Получает изменяемые ссылки на основных читателей в этой &lt;code&gt;Chain&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5d75c4c07b578c3182dd1391a22f0515f568828" translate="yes" xml:space="preserve">
          <source>Gets references to the underlying readers in this &lt;code&gt;Chain&lt;/code&gt;.</source>
          <target state="translated">Получает ссылки на основных читателей в этой &lt;code&gt;Chain&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4099d19a8a1a54e1ad72f73ecdd2402a0b7a3136" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;TypeId&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">Получает &lt;code&gt;TypeId&lt;/code&gt; для &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41602bda251eaed54ccea25679c0483e128331bf" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;TypeId&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt;. &lt;a href=&quot;../../../any/trait.any#tymethod.type_id&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Получает &lt;code&gt;TypeId&lt;/code&gt; для &lt;code&gt;self&lt;/code&gt; . &lt;a href=&quot;../../../any/trait.any#tymethod.type_id&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7397491fe536b6ab323bc3962fba8e1fb15e1948" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;TypeId&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt;. &lt;a href=&quot;../../any/trait.any#tymethod.type_id&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Получает &lt;code&gt;TypeId&lt;/code&gt; для &lt;code&gt;self&lt;/code&gt; . &lt;a href=&quot;../../any/trait.any#tymethod.type_id&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0958a5367c67c57557138ce54a3c5f59d233668" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;TypeId&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt;. &lt;a href=&quot;../any/trait.any#tymethod.type_id&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Получает &lt;code&gt;TypeId&lt;/code&gt; для &lt;code&gt;self&lt;/code&gt; . &lt;a href=&quot;../any/trait.any#tymethod.type_id&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0dc7f61a814ccb0f4c7bc6d983b16e56f33b8b7" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;TypeId&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt;. &lt;a href=&quot;any/trait.any#tymethod.type_id&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Получает &lt;code&gt;TypeId&lt;/code&gt; для &lt;code&gt;self&lt;/code&gt; . &lt;a href=&quot;any/trait.any#tymethod.type_id&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6053452902f00975747e0db67cb9da5bcc78254" translate="yes" xml:space="preserve">
          <source>Gets the &lt;code&gt;TypeId&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt;. &lt;a href=&quot;trait.any#tymethod.type_id&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Получает &lt;code&gt;TypeId&lt;/code&gt; для &lt;code&gt;self&lt;/code&gt; . &lt;a href=&quot;trait.any#tymethod.type_id&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3d8aeac371c3726d0823d3e47870ae432d791d1" translate="yes" xml:space="preserve">
          <source>Gets the entire contents of the &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; as an array, if its size exactly matches that of the requested array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfed0516ca0cceacbef295ac249aa061f2675ee1" translate="yes" xml:space="preserve">
          <source>Gets the given key's corresponding entry in the map for in-place manipulation.</source>
          <target state="translated">Получает соответствующую запись данного ключа на карте для манипуляции на месте.</target>
        </trans-unit>
        <trans-unit id="4c299d04fef3ac60e871ddceb7fed1d58a4373a4" translate="yes" xml:space="preserve">
          <source>Gets the number of &lt;a href=&quot;struct.weak&quot;&gt;&lt;code&gt;Weak&lt;/code&gt;&lt;/a&gt; pointers to this allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82785258c5148ac429e819aa10802824ac7d2a46" translate="yes" xml:space="preserve">
          <source>Gets the number of &lt;a href=&quot;struct.weak&quot;&gt;&lt;code&gt;Weak&lt;/code&gt;&lt;/a&gt; pointers to this value.</source>
          <target state="translated">Получает количество &lt;a href=&quot;struct.weak&quot;&gt; &lt;code&gt;Weak&lt;/code&gt; &lt;/a&gt; указателей на это значение.</target>
        </trans-unit>
        <trans-unit id="ea2a4acdf77bc69347663f277f505d5ad15cc026" translate="yes" xml:space="preserve">
          <source>Gets the number of &lt;code&gt;Weak&lt;/code&gt; pointers pointing to this allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6bb90de6f3314e5b0aa7676e3fa2574049a5b1" translate="yes" xml:space="preserve">
          <source>Gets the number of &lt;code&gt;Weak&lt;/code&gt; pointers pointing to this value.</source>
          <target state="translated">Получает количество &lt;code&gt;Weak&lt;/code&gt; указателей, указывающих на это значение.</target>
        </trans-unit>
        <trans-unit id="266325732ccd237fd7f26bfdb76bb89eb62a4114" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Arc&lt;/code&gt;) pointers pointing to this allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f33a15ae6da7b8fd099c7f81c55a8c43992a9c" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Arc&lt;/code&gt;) pointers pointing to this value.</source>
          <target state="translated">Получает количество сильных указателей ( &lt;code&gt;Arc&lt;/code&gt; ), указывающих на это значение.</target>
        </trans-unit>
        <trans-unit id="acc981beee8d18e67fc3a5059aa645efdb5cb013" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Arc&lt;/code&gt;) pointers to this allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9d8a68862d17ae50fe9b2191b4bc755a3b2c57" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Arc&lt;/code&gt;) pointers to this value.</source>
          <target state="translated">Получает количество сильных ( &lt;code&gt;Arc&lt;/code&gt; ) указателей на это значение.</target>
        </trans-unit>
        <trans-unit id="86df16ff86121c6f4046474b56b37a148e7c840c" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Rc&lt;/code&gt;) pointers pointing to this allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dfd6b399c6a7a5e5c213f4220d6a406180d8d29" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Rc&lt;/code&gt;) pointers pointing to this value.</source>
          <target state="translated">Получает количество сильных ( &lt;code&gt;Rc&lt;/code&gt; ) указателей, указывающих на это значение.</target>
        </trans-unit>
        <trans-unit id="86da648c891a7c42ebdf312b33a4ab9ada05ef68" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Rc&lt;/code&gt;) pointers to this allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62256e04434cb17270e60d73bd90064ac287c70a" translate="yes" xml:space="preserve">
          <source>Gets the number of strong (&lt;code&gt;Rc&lt;/code&gt;) pointers to this value.</source>
          <target state="translated">Получает количество сильных ( &lt;code&gt;Rc&lt;/code&gt; ) указателей на это значение.</target>
        </trans-unit>
        <trans-unit id="7b980936990012ea161b866d1758615b20bb0b9e" translate="yes" xml:space="preserve">
          <source>Gets the peer credentials for this Unix domain socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a803af3c996a7aeaae26131be70879a8de1e8ca" translate="yes" xml:space="preserve">
          <source>Gets the thread's name.</source>
          <target state="translated">Получает название нити.</target>
        </trans-unit>
        <trans-unit id="49ee03c4c760e66b9e940fbfa2d32f04a888601b" translate="yes" xml:space="preserve">
          <source>Gets the thread's unique identifier.</source>
          <target state="translated">Получает уникальный идентификатор потока.</target>
        </trans-unit>
        <trans-unit id="e80f24c5e15d0db75eb52ca4f146d8328ad163c8" translate="yes" xml:space="preserve">
          <source>Gets the underlying byte view of the &lt;a href=&quot;../../../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; slice.</source>
          <target state="translated">Получает базовое байтовое представление среза &lt;a href=&quot;../../../ffi/struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7d3e5946e7ecbe9a325741ceead9ec7679286f06" translate="yes" xml:space="preserve">
          <source>Gets the underlying byte view of the &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; slice. &lt;a href=&quot;../os/unix/ffi/trait.osstrext#tymethod.as_bytes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce976fab972b71cb3689e58f2c81f4c1b2c23c3" translate="yes" xml:space="preserve">
          <source>Gets the underlying byte view of the [&lt;code&gt;OsStr&lt;/code&gt;] slice. &lt;a href=&quot;../os/unix/ffi/trait.osstrext#tymethod.as_bytes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Получает базовое байтовое представление среза [ &lt;code&gt;OsStr&lt;/code&gt; ]. &lt;a href=&quot;../os/unix/ffi/trait.osstrext#tymethod.as_bytes&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b70bb73da43a0dacb273f9c29de1ad90c047f9b2" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;IPV6_MULTICAST_LOOP&lt;/code&gt; option for this socket.</source>
          <target state="translated">Получает значение параметра &lt;code&gt;IPV6_MULTICAST_LOOP&lt;/code&gt; для этого сокета.</target>
        </trans-unit>
        <trans-unit id="541e09715c0e448d9ee0ceae38a6c62a42e062e7" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;IP_MULTICAST_LOOP&lt;/code&gt; option for this socket.</source>
          <target state="translated">Получает значение параметра &lt;code&gt;IP_MULTICAST_LOOP&lt;/code&gt; для этого сокета.</target>
        </trans-unit>
        <trans-unit id="ee99abd672fa0bc29c2f53bc51cd2022f7fe6174" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;IP_MULTICAST_TTL&lt;/code&gt; option for this socket.</source>
          <target state="translated">Получает значение параметра &lt;code&gt;IP_MULTICAST_TTL&lt;/code&gt; для этого сокета.</target>
        </trans-unit>
        <trans-unit id="ca264fa81bb9d68241254fa46d7aa2c2cda498bc" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;IP_TTL&lt;/code&gt; option for this socket.</source>
          <target state="translated">Получает значение параметра &lt;code&gt;IP_TTL&lt;/code&gt; для этого сокета.</target>
        </trans-unit>
        <trans-unit id="081675c2121b5c0eba69352ff7f20ab17e65e3d1" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;SO_BROADCAST&lt;/code&gt; option for this socket.</source>
          <target state="translated">Получает значение параметра &lt;code&gt;SO_BROADCAST&lt;/code&gt; для этого сокета.</target>
        </trans-unit>
        <trans-unit id="0f6a73f5b7aaab6427c36574dc2e96dbd9e394ff" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;SO_ERROR&lt;/code&gt; option on this socket.</source>
          <target state="translated">Получает значение параметра &lt;code&gt;SO_ERROR&lt;/code&gt; для этого сокета.</target>
        </trans-unit>
        <trans-unit id="fd9694065ed8ce77dc78229e63dba85fa8ab43e4" translate="yes" xml:space="preserve">
          <source>Gets the value of the &lt;code&gt;TCP_NODELAY&lt;/code&gt; option on this socket.</source>
          <target state="translated">Получает значение параметра &lt;code&gt;TCP_NODELAY&lt;/code&gt; для этого сокета.</target>
        </trans-unit>
        <trans-unit id="a351f54361bf1111912e96b2243de3d3ba2e710e" translate="yes" xml:space="preserve">
          <source>Getter for the underlying string to be searched in</source>
          <target state="translated">Получить возможность поиска базовой строки в</target>
        </trans-unit>
        <trans-unit id="946249472d59c612c049bc459ef794710e06ea0f" translate="yes" xml:space="preserve">
          <source>Getter for the underlying string to be searched in &lt;a href=&quot;trait.searcher#tymethod.haystack&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Получатель базовой строки для поиска в &lt;a href=&quot;trait.searcher#tymethod.haystack&quot;&gt;Подробнее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">Начало работы</target>
        </trans-unit>
        <trans-unit id="5995d36c171cb98f5012509471c6af75ae9b7b83" translate="yes" xml:space="preserve">
          <source>Getting a handle to the current thread with &lt;code&gt;thread::current()&lt;/code&gt;:</source>
          <target state="translated">Получение дескриптора текущего потока с помощью &lt;code&gt;thread::current()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="18ecec4eaf70488e9516f42f4c700b0d3f3801c9" translate="yes" xml:space="preserve">
          <source>Getting grapheme clusters from strings is complex, so this functionality is not provided by the standard library. Crates are available on &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; if this is the functionality you need.</source>
          <target state="translated">Получение кластеров графем из строк является сложной задачей, поэтому эта функция не предоставляется стандартной библиотекой. Ящики доступны на &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io,&lt;/a&gt; если вам нужна такая функциональность.</target>
        </trans-unit>
        <trans-unit id="40b8f0b0dd8c757df38c0efb486cc65a37413fd0" translate="yes" xml:space="preserve">
          <source>Getting immutable access to the contiguous slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce1a3d0561d101c4db29f248d240d379840a525" translate="yes" xml:space="preserve">
          <source>Give it text interactively by running the executable directly, in which case it will wait for the Enter key to be pressed before continuing</source>
          <target state="translated">Дайте ему текст в интерактивном режиме,запустив исполняемый файл напрямую,и в этом случае он будет ждать нажатия клавиши Enter,прежде чем продолжить.</target>
        </trans-unit>
        <trans-unit id="81432d4fe569ad1c70c83fd457057f8aff028c0e" translate="yes" xml:space="preserve">
          <source>Given &lt;code&gt;impl&amp;lt;P1..=Pn&amp;gt; Trait&amp;lt;T1..=Tn&amp;gt; for T0&lt;/code&gt;, an &lt;code&gt;impl&lt;/code&gt; is valid only if at least one of the following is true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c541ca5b28906f0b0b887376717739a6ff63fa9" translate="yes" xml:space="preserve">
          <source>Given a function, or closure, there are drop scopes for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460459e684630e18d67dce5af60c9aa1a9d7fe48" translate="yes" xml:space="preserve">
          <source>Given a list of integers, use a vector and return the mean (the average value), median (when sorted, the value in the middle position), and mode (the value that occurs most often; a hash map will be helpful here) of the list.</source>
          <target state="translated">Получив список целых чисел,используйте вектор и верните среднее (среднее значение),медиану (при сортировке-значение в средней позиции)и режим (значение,которое встречается чаще всего;здесь будет полезна хэш-карта)списка.</target>
        </trans-unit>
        <trans-unit id="ea3d2794af8f5c0a103590ed2dfa3cbed7263acb" translate="yes" xml:space="preserve">
          <source>Given a path, query the file system to get information about a file, directory, etc.</source>
          <target state="translated">Получив путь,запросите файловую систему,чтобы получить информацию о файле,каталоге и т.д.</target>
        </trans-unit>
        <trans-unit id="caef16517cee4d24248fc21d836a1a72f7d7936b" translate="yes" xml:space="preserve">
          <source>Given an element the closure must return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. The returned iterator will yield only the elements for which the closure returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30386826e248fa1c007d69f26e43a06ce7da9de9" translate="yes" xml:space="preserve">
          <source>Given that a &lt;a href=&quot;../macro.panic&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; will call &lt;code&gt;drop&lt;/code&gt; as it unwinds, any &lt;a href=&quot;../macro.panic&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; in a &lt;code&gt;drop&lt;/code&gt; implementation will likely abort.</source>
          <target state="translated">Учитывая, что &lt;a href=&quot;../macro.panic&quot;&gt; &lt;code&gt;panic!&lt;/code&gt; &lt;/a&gt;вызовет &lt;code&gt;drop&lt;/code&gt; мере раскручивания, любая &lt;a href=&quot;../macro.panic&quot;&gt; &lt;code&gt;panic!&lt;/code&gt; &lt;/a&gt;в реализации &lt;code&gt;drop&lt;/code&gt; , скорее всего, прервется.</target>
        </trans-unit>
        <trans-unit id="6263eb5ed7ee7fa0481696a92c8f43d9efb00e4c" translate="yes" xml:space="preserve">
          <source>Given that a &lt;a href=&quot;https://doc.rust-lang.org/core/macro.panic.html&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; will call &lt;code&gt;drop&lt;/code&gt; as it unwinds, any &lt;a href=&quot;https://doc.rust-lang.org/core/macro.panic.html&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; in a &lt;code&gt;drop&lt;/code&gt; implementation will likely abort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e523f1998c41a0b9adf80292e1554bbf7101fb13" translate="yes" xml:space="preserve">
          <source>Given that the &lt;code&gt;String&lt;/code&gt; is empty, this will not allocate any initial buffer. While that means that this initial operation is very inexpensive, it may cause excessive allocation later when you add data. If you have an idea of how much data the &lt;code&gt;String&lt;/code&gt; will hold, consider the &lt;a href=&quot;#method.with_capacity&quot;&gt;&lt;code&gt;with_capacity&lt;/code&gt;&lt;/a&gt; method to prevent excessive re-allocation.</source>
          <target state="translated">Учитывая, что &lt;code&gt;String&lt;/code&gt; пуста, начальный буфер не будет выделен. Хотя это означает, что эта начальная операция очень недорогая, она может вызвать чрезмерное выделение памяти позже, когда вы добавите данные. Если у вас есть представление о том, сколько данных будет содержать &lt;code&gt;String&lt;/code&gt; , рассмотрите метод &lt;a href=&quot;#method.with_capacity&quot;&gt; &lt;code&gt;with_capacity&lt;/code&gt; ,&lt;/a&gt; чтобы предотвратить чрезмерное перераспределение.</target>
        </trans-unit>
        <trans-unit id="a59bf69ea093a125173bce72323495b1305959b6" translate="yes" xml:space="preserve">
          <source>Given that the &lt;code&gt;String&lt;/code&gt; is empty, this will not allocate any initial buffer. While that means that this initial operation is very inexpensive, it may cause excessive allocation later when you add data. If you have an idea of how much data the &lt;code&gt;String&lt;/code&gt; will hold, consider the &lt;a href=&quot;struct.string#method.with_capacity&quot;&gt;&lt;code&gt;with_capacity&lt;/code&gt;&lt;/a&gt; method to prevent excessive re-allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad539d6fb0976a5b2b95b62832510a1f84220951" translate="yes" xml:space="preserve">
          <source>Given that the smart pointer pattern is a general design pattern used frequently in Rust, this chapter won&amp;rsquo;t cover every existing smart pointer. Many libraries have their own smart pointers, and you can even write your own. We&amp;rsquo;ll cover the most common smart pointers in the standard library:</source>
          <target state="translated">Учитывая, что шаблон интеллектуального указателя - это общий шаблон проектирования, часто используемый в Rust, в этой главе не будут рассмотрены все существующие интеллектуальные указатели. Многие библиотеки имеют свои собственные интеллектуальные указатели, и вы даже можете написать свои собственные. Мы рассмотрим наиболее распространенные интеллектуальные указатели в стандартной библиотеке:</target>
        </trans-unit>
        <trans-unit id="4a31e9d96bd27c24e6fc00ba6a064634849de284" translate="yes" xml:space="preserve">
          <source>Given that we don't know what type the pointer is, and there's potential ambiguity for some types, we disallow calling methods on raw pointers when the type is unknown.</source>
          <target state="translated">Учитывая,что мы не знаем,какой тип является указателем,и есть потенциальная неоднозначность для некоторых типов,мы запрещаем вызывать методы на сырых указателях,когда тип неизвестен.</target>
        </trans-unit>
        <trans-unit id="5f1184f7df96c5928092ad9c6b550699bf887826" translate="yes" xml:space="preserve">
          <source>Global</source>
          <target state="translated">Global</target>
        </trans-unit>
        <trans-unit id="597030c6c4f56fe393a1ab438473028f6c480a3f" translate="yes" xml:space="preserve">
          <source>Global::alloc</source>
          <target state="translated">Global::alloc</target>
        </trans-unit>
        <trans-unit id="bc8440f1b0fd5e4f27413dbc2c9588f0ac4b35e6" translate="yes" xml:space="preserve">
          <source>Global::alloc_array</source>
          <target state="translated">Global::alloc_array</target>
        </trans-unit>
        <trans-unit id="286809b4d3acafb6b79ba2357ef09d081752bcd8" translate="yes" xml:space="preserve">
          <source>Global::alloc_excess</source>
          <target state="translated">Global::alloc_excess</target>
        </trans-unit>
        <trans-unit id="055e192998c987cc2408347852310a7d777d50b2" translate="yes" xml:space="preserve">
          <source>Global::alloc_one</source>
          <target state="translated">Global::alloc_one</target>
        </trans-unit>
        <trans-unit id="4916367e840ff297f5f655976deb8d56431c82b1" translate="yes" xml:space="preserve">
          <source>Global::alloc_zeroed</source>
          <target state="translated">Global::alloc_zeroed</target>
        </trans-unit>
        <trans-unit id="422dfaa437889aa6a38e0ce319516d4e1aa7ccbe" translate="yes" xml:space="preserve">
          <source>Global::borrow</source>
          <target state="translated">Global::borrow</target>
        </trans-unit>
        <trans-unit id="7a0370da6de58c97a35cfc99cd0bed7729121756" translate="yes" xml:space="preserve">
          <source>Global::borrow_mut</source>
          <target state="translated">Global::borrow_mut</target>
        </trans-unit>
        <trans-unit id="f77b715da0c371e387a1c0cabbb0d1af068041af" translate="yes" xml:space="preserve">
          <source>Global::clone</source>
          <target state="translated">Global::clone</target>
        </trans-unit>
        <trans-unit id="50d4c87192aeed0b09b4440b16be390f6a750a2f" translate="yes" xml:space="preserve">
          <source>Global::clone_from</source>
          <target state="translated">Global::clone_from</target>
        </trans-unit>
        <trans-unit id="9cfb69614980015da407f6e7048f1148f4930023" translate="yes" xml:space="preserve">
          <source>Global::clone_into</source>
          <target state="translated">Global::clone_into</target>
        </trans-unit>
        <trans-unit id="7b2c4b961ebce1561e240a7194da73b5841efb82" translate="yes" xml:space="preserve">
          <source>Global::dealloc</source>
          <target state="translated">Global::dealloc</target>
        </trans-unit>
        <trans-unit id="1a080a708cdd5439e5302ec1934574d59cf90d7d" translate="yes" xml:space="preserve">
          <source>Global::dealloc_array</source>
          <target state="translated">Global::dealloc_array</target>
        </trans-unit>
        <trans-unit id="d428b88cec77fa2bb91fead3f27848981c76580d" translate="yes" xml:space="preserve">
          <source>Global::dealloc_one</source>
          <target state="translated">Global::dealloc_one</target>
        </trans-unit>
        <trans-unit id="995b6ad6ac004f90a18a104ffb9147bf847cb8d1" translate="yes" xml:space="preserve">
          <source>Global::default</source>
          <target state="translated">Global::default</target>
        </trans-unit>
        <trans-unit id="76169c6a841dcf12cff8e0b09058ec8d2b45201d" translate="yes" xml:space="preserve">
          <source>Global::fmt</source>
          <target state="translated">Global::fmt</target>
        </trans-unit>
        <trans-unit id="5c3cece4620e1e6edac7a400fcf912adfe0d27cb" translate="yes" xml:space="preserve">
          <source>Global::from</source>
          <target state="translated">Global::from</target>
        </trans-unit>
        <trans-unit id="a59d2fc290a04b6f0c31c9e50dafd716b2e306ed" translate="yes" xml:space="preserve">
          <source>Global::grow_in_place</source>
          <target state="translated">Global::grow_in_place</target>
        </trans-unit>
        <trans-unit id="25a7d5ad4d365ca4c966f334f3295d6b1ceaaf1d" translate="yes" xml:space="preserve">
          <source>Global::into</source>
          <target state="translated">Global::into</target>
        </trans-unit>
        <trans-unit id="ce7a411799e0b5091e1cb6d261729a98fde69476" translate="yes" xml:space="preserve">
          <source>Global::realloc</source>
          <target state="translated">Global::realloc</target>
        </trans-unit>
        <trans-unit id="55cd704a6f196baec10e6f8fc46f13be6be1a4da" translate="yes" xml:space="preserve">
          <source>Global::realloc_array</source>
          <target state="translated">Global::realloc_array</target>
        </trans-unit>
        <trans-unit id="2dc3bca035c872b5fad904a8f47f338aa69c712d" translate="yes" xml:space="preserve">
          <source>Global::realloc_excess</source>
          <target state="translated">Global::realloc_excess</target>
        </trans-unit>
        <trans-unit id="2eba0652c97a930f2bb92b95f7d1bce1986c871b" translate="yes" xml:space="preserve">
          <source>Global::shrink_in_place</source>
          <target state="translated">Global::shrink_in_place</target>
        </trans-unit>
        <trans-unit id="736720c59f4f431a038c46cc3aa525e5758a39ba" translate="yes" xml:space="preserve">
          <source>Global::to_owned</source>
          <target state="translated">Global::to_owned</target>
        </trans-unit>
        <trans-unit id="8ce6860d43ee49cdb5334bdd351c1035cc8ff38c" translate="yes" xml:space="preserve">
          <source>Global::try_from</source>
          <target state="translated">Global::try_from</target>
        </trans-unit>
        <trans-unit id="617366a681bd521ad66de932f01b46a609e71cb1" translate="yes" xml:space="preserve">
          <source>Global::try_into</source>
          <target state="translated">Global::try_into</target>
        </trans-unit>
        <trans-unit id="a23ee2c26cf33d2d9d02972f8660c76e5304674f" translate="yes" xml:space="preserve">
          <source>Global::type_id</source>
          <target state="translated">Global::type_id</target>
        </trans-unit>
        <trans-unit id="af4b996fed7b58c24cbe5ab00c833b6e42a8a4d4" translate="yes" xml:space="preserve">
          <source>Global::usable_size</source>
          <target state="translated">Global::usable_size</target>
        </trans-unit>
        <trans-unit id="240acfbbf20ecc23d32a755b89f3059599c547b8" translate="yes" xml:space="preserve">
          <source>GlobalAlloc</source>
          <target state="translated">GlobalAlloc</target>
        </trans-unit>
        <trans-unit id="fc670f003f08164e69bb95fb98d8c6ed228f9f51" translate="yes" xml:space="preserve">
          <source>GlobalAlloc::alloc</source>
          <target state="translated">GlobalAlloc::alloc</target>
        </trans-unit>
        <trans-unit id="90c20880262c918bb85b13b512a72e9595a71d28" translate="yes" xml:space="preserve">
          <source>GlobalAlloc::alloc_zeroed</source>
          <target state="translated">GlobalAlloc::alloc_zeroed</target>
        </trans-unit>
        <trans-unit id="aebfa8de2c70a18e38a89cd348582fe45986c6b2" translate="yes" xml:space="preserve">
          <source>GlobalAlloc::dealloc</source>
          <target state="translated">GlobalAlloc::dealloc</target>
        </trans-unit>
        <trans-unit id="fe2c144d895a892ee23f306ecdb0f1fde3f96ad7" translate="yes" xml:space="preserve">
          <source>GlobalAlloc::realloc</source>
          <target state="translated">GlobalAlloc::realloc</target>
        </trans-unit>
        <trans-unit id="7427cf697be16a4ec1d916910128a59d920125e7" translate="yes" xml:space="preserve">
          <source>Glossary</source>
          <target state="translated">Glossary</target>
        </trans-unit>
        <trans-unit id="2514908c36408ef2ed4444834c9f5ccbe93b670b" translate="yes" xml:space="preserve">
          <source>Glue for usage of the &lt;a href=&quot;../macro.write&quot;&gt;&lt;code&gt;write!&lt;/code&gt;&lt;/a&gt; macro with implementors of this trait.</source>
          <target state="translated">Клей для использования &lt;a href=&quot;../macro.write&quot;&gt; &lt;code&gt;write!&lt;/code&gt; &lt;/a&gt;макрос с разработчиками этого трейта.</target>
        </trans-unit>
        <trans-unit id="3a1c017ccb35f05e8443d7a3eddb7ce45674e092" translate="yes" xml:space="preserve">
          <source>Glue for usage of the &lt;a href=&quot;../macro.write&quot;&gt;&lt;code&gt;write!&lt;/code&gt;&lt;/a&gt; macro with implementors of this trait. &lt;a href=&quot;../fmt/trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1dbe04d6160f33e99282ce3fd010eb4fb67bcb2" translate="yes" xml:space="preserve">
          <source>Glue for usage of the &lt;a href=&quot;../macro.write&quot;&gt;&lt;code&gt;write!&lt;/code&gt;&lt;/a&gt; macro with implementors of this trait. &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801bded4f0d6ed0381cd90ad308e8e87612227ff" translate="yes" xml:space="preserve">
          <source>Glue for usage of the &lt;a href=&quot;macro.write&quot;&gt;&lt;code&gt;write!&lt;/code&gt;&lt;/a&gt; macro with implementors of this trait. &lt;a href=&quot;fmt/trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f9aa2e6d4ad074b5cfe6a907121a6231effb73" translate="yes" xml:space="preserve">
          <source>Glue for usage of the [&lt;code&gt;write!&lt;/code&gt;] macro with implementors of this trait. &lt;a href=&quot;../fmt/trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Клей для использования [ &lt;code&gt;write!&lt;/code&gt; ] макрос с разработчиками этого трейта. &lt;a href=&quot;../fmt/trait.write#method.write_fmt&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34773aa1db362e995011ad93000d8b9d338dfdd1" translate="yes" xml:space="preserve">
          <source>Glue for usage of the [&lt;code&gt;write!&lt;/code&gt;] macro with implementors of this trait. &lt;a href=&quot;fmt/trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Клей для использования [ &lt;code&gt;write!&lt;/code&gt; ] макрос с разработчиками этого трейта. &lt;a href=&quot;fmt/trait.write#method.write_fmt&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bbef5a72f8aabf3ae93fcc57e62c0a0223a518e5" translate="yes" xml:space="preserve">
          <source>Glue for usage of the [&lt;code&gt;write!&lt;/code&gt;] macro with implementors of this trait. &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Клей для использования [ &lt;code&gt;write!&lt;/code&gt; ] макрос с разработчиками этого трейта. &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="103e6499a37e08740be45a6eeb4c1b026a8ac079" translate="yes" xml:space="preserve">
          <source>Go into the &lt;em&gt;hello_cargo&lt;/em&gt; directory and list the files. You&amp;rsquo;ll see that Cargo has generated two files and one directory for us: a &lt;em&gt;Cargo.toml&lt;/em&gt; file and a &lt;em&gt;src&lt;/em&gt; directory with a &lt;em&gt;main.rs&lt;/em&gt; file inside.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5134e463153b73435701f263a503592ab3d53a" translate="yes" xml:space="preserve">
          <source>Go into the &lt;em&gt;hello_cargo&lt;/em&gt; directory and list the files. You&amp;rsquo;ll see that Cargo has generated two files and one directory for us: a &lt;em&gt;Cargo.toml&lt;/em&gt; file and a &lt;em&gt;src&lt;/em&gt; directory with a &lt;em&gt;main.rs&lt;/em&gt; file inside. It has also initialized a new Git repository along with a &lt;em&gt;.gitignore&lt;/em&gt; file.</source>
          <target state="translated">Перейдите в каталог &lt;em&gt;hello_cargo&lt;/em&gt; и перечислите файлы. Вы увидите, что Cargo сгенерировал для нас два файла и один каталог: файл &lt;em&gt;Cargo.toml&lt;/em&gt; и каталог &lt;em&gt;src&lt;/em&gt; с файлом &lt;em&gt;main.rs&lt;/em&gt; внутри. Он также инициализировал новый репозиторий Git вместе с файлом &lt;em&gt;.gitignore&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="50e6889164bb8054d882b924cda71582b6d6d180" translate="yes" xml:space="preserve">
          <source>Going finite with &lt;a href=&quot;trait.iterator#method.take&quot;&gt;&lt;code&gt;Iterator::take()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6849789947c3320fec7645aaddce84614976c34" translate="yes" xml:space="preserve">
          <source>Going finite with &lt;a href=&quot;trait.iterator#method.take&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Идет конечный с &lt;a href=&quot;trait.iterator#method.take&quot;&gt; &lt;code&gt;take&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="62320f24d2e67e3a996b5eb69a47e8e61772abe1" translate="yes" xml:space="preserve">
          <source>Graceful Shutdown and Cleanup</source>
          <target state="translated">Грациозное выключение и очистка</target>
        </trans-unit>
        <trans-unit id="14b567b853879017732fc7e6b51b1225fb2590d3" translate="yes" xml:space="preserve">
          <source>Gradual initialization of an &lt;code&gt;UnsafeCell&lt;/code&gt; requires &lt;code&gt;raw_get&lt;/code&gt;, as calling &lt;code&gt;get&lt;/code&gt; would require creating a reference to uninitialized data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd17342cb47b948d64f169d73cfeec3f8b3e3f31" translate="yes" xml:space="preserve">
          <source>Grammar</source>
          <target state="translated">Grammar</target>
        </trans-unit>
        <trans-unit id="78e61d853fc7dbe21e195185b06132c0a0b3267c" translate="yes" xml:space="preserve">
          <source>Great! The code read and then printed the contents of the file. But the code has a few flaws. The &lt;code&gt;main&lt;/code&gt; function has multiple responsibilities: generally, functions are clearer and easier to maintain if each function is responsible for only one idea. The other problem is that we&amp;rsquo;re not handling errors as well as we could. The program is still small, so these flaws aren&amp;rsquo;t a big problem, but as the program grows, it will be harder to fix them cleanly. It&amp;rsquo;s good practice to begin refactoring early on when developing a program, because it&amp;rsquo;s much easier to refactor smaller amounts of code. We&amp;rsquo;ll do that next.</source>
          <target state="translated">Большой! Код прочитал и распечатал содержимое файла. Но в коде есть несколько недостатков. &lt;code&gt;main&lt;/code&gt; функция имеет несколько функций: как правило, функции понятнее и проще в обслуживании , если каждая функция отвечает только одна идея. Другая проблема в том, что мы не так хорошо обрабатываем ошибки, как могли бы. Программа все еще мала, поэтому эти недостатки не являются большой проблемой, но по мере роста программы будет все труднее их исправить. Рекомендуется начинать рефакторинг на ранней стадии разработки программы, потому что гораздо проще рефакторировать меньшие объемы кода. Мы сделаем это дальше.</target>
        </trans-unit>
        <trans-unit id="24a6854de536fe8272a59608dce7cfe696deeaaa" translate="yes" xml:space="preserve">
          <source>Great! They passed. Now, let&amp;rsquo;s call the new &lt;code&gt;search_case_insensitive&lt;/code&gt; function from the &lt;code&gt;run&lt;/code&gt; function. First, we&amp;rsquo;ll add a configuration option to the &lt;code&gt;Config&lt;/code&gt; struct to switch between case-sensitive and case-insensitive search. Adding this field will cause compiler errors because we aren&amp;rsquo;t initializing this field anywhere yet:</source>
          <target state="translated">Большой! Они прошли. Теперь давайте вызовем новую функцию &lt;code&gt;search_case_insensitive&lt;/code&gt; из функции &lt;code&gt;run&lt;/code&gt; . Во-первых, мы добавим параметр &lt;code&gt;Config&lt;/code&gt; структуру Config для переключения между поиском с учетом регистра и без учета регистра. Добавление этого поля вызовет ошибки компилятора, потому что мы еще нигде не инициализируем это поле:</target>
        </trans-unit>
        <trans-unit id="64d373f5a71955e4f9210539868f04851ae696bb" translate="yes" xml:space="preserve">
          <source>Great! This error tells us we need a &lt;code&gt;ThreadPool&lt;/code&gt; type or module, so we&amp;rsquo;ll build one now. Our &lt;code&gt;ThreadPool&lt;/code&gt; implementation will be independent of the kind of work our web server is doing. So, let&amp;rsquo;s switch the &lt;code&gt;hello&lt;/code&gt; crate from a binary crate to a library crate to hold our &lt;code&gt;ThreadPool&lt;/code&gt; implementation. After we change to a library crate, we could also use the separate thread pool library for any work we want to do using a thread pool, not just for serving web requests.</source>
          <target state="translated">Большой! Эта ошибка говорит нам, что нам нужен тип или модуль &lt;code&gt;ThreadPool&lt;/code&gt; , поэтому мы создадим его сейчас. Наша реализация &lt;code&gt;ThreadPool&lt;/code&gt; не будет зависеть от того, какую работу выполняет наш веб-сервер. Итак, давайте переключим ящик &lt;code&gt;hello&lt;/code&gt; с двоичного ящика на ящик библиотеки, в котором будет храниться наша реализация &lt;code&gt;ThreadPool&lt;/code&gt; . После того, как мы перейдем на контейнер с библиотекой, мы также сможем использовать отдельную библиотеку пула потоков для любой работы, которую мы хотим выполнять с использованием пула потоков, а не только для обслуживания веб-запросов.</target>
        </trans-unit>
        <trans-unit id="99b891e6f196f47f49f63f0b20ce223eaba55683" translate="yes" xml:space="preserve">
          <source>Great! This output is much friendlier for our users.</source>
          <target state="translated">Здорово! Этот выход гораздо более дружелюбен для наших пользователей.</target>
        </trans-unit>
        <trans-unit id="2929f4d3537f13046a6a6654b391acff14ad5b53" translate="yes" xml:space="preserve">
          <source>Great, the program is working! The values of the arguments we need are being saved into the right variables. Later we&amp;rsquo;ll add some error handling to deal with certain potential erroneous situations, such as when the user provides no arguments; for now, we&amp;rsquo;ll ignore that situation and work on adding file-reading capabilities instead.</source>
          <target state="translated">Отлично, программа работает! Значения необходимых нам аргументов сохраняются в правильных переменных. Позже мы добавим некоторую обработку ошибок, чтобы иметь дело с некоторыми потенциально ошибочными ситуациями, например, когда пользователь не предоставляет аргументов; пока мы проигнорируем эту ситуацию и вместо этого поработаем над добавлением возможностей чтения файлов.</target>
        </trans-unit>
        <trans-unit id="c5f93da0af9ef56fee44e82925405c317fbf7afc" translate="yes" xml:space="preserve">
          <source>Great, the test fails, exactly as we expected. Let&amp;rsquo;s get the test to pass!</source>
          <target state="translated">Отлично, тест не прошел, как мы и ожидали. Давайте пройдем тест!</target>
        </trans-unit>
        <trans-unit id="599294f23ef04a992bc69ba465066344c3c7cf34" translate="yes" xml:space="preserve">
          <source>Greater than</source>
          <target state="translated">Больше чем</target>
        </trans-unit>
        <trans-unit id="cc21fdb8f5e4e1d5b5c729ed455db20a348682c5" translate="yes" xml:space="preserve">
          <source>Greater than comparison</source>
          <target state="translated">Больше чем для сравнения</target>
        </trans-unit>
        <trans-unit id="a2919540599e9df0beb579ca8d46bdc142657611" translate="yes" xml:space="preserve">
          <source>Greater than or equal to</source>
          <target state="translated">Больше или равно</target>
        </trans-unit>
        <trans-unit id="17e61387621cb5a7a3632ffc26d2a8ab3f16e769" translate="yes" xml:space="preserve">
          <source>Greater than or equal to comparison</source>
          <target state="translated">Больше или равнозначно сравнению</target>
        </trans-unit>
        <trans-unit id="d667800b5ed7b98aa0dde326047666b10d805fc3" translate="yes" xml:space="preserve">
          <source>Greater-than comparison for two &lt;code&gt;Arc&lt;/code&gt;s.</source>
          <target state="translated">Превосходное сравнение для двух &lt;code&gt;Arc&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="3f06e7136cc69760b0d1c2aa5adb37088b0a0311" translate="yes" xml:space="preserve">
          <source>Greater-than comparison for two &lt;code&gt;Rc&lt;/code&gt;s.</source>
          <target state="translated">Превосходное сравнение для двух &lt;code&gt;Rc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f464c4ed26773e9c5252581a89a104e8de23d490" translate="yes" xml:space="preserve">
          <source>Greek letters &quot;&amp;alpha;&quot; &quot;&amp;beta;&quot; &quot;&amp;gamma;&quot; &quot;&amp;delta;&quot; stand for potentially empty token-tree sequences. (However, the Greek letter &quot;&amp;epsilon;&quot; (epsilon) has a special role in the presentation and does not stand for a token-tree sequence.)</source>
          <target state="translated">Греческие буквы &amp;laquo;&amp;alpha;&amp;raquo; &amp;laquo;&amp;beta;&amp;raquo; &amp;laquo;&amp;gamma;&amp;raquo; &amp;laquo;&amp;delta;&amp;raquo; обозначают потенциально пустые последовательности дерева лексем. (Однако греческая буква &amp;laquo;&amp;epsilon;&amp;raquo; (эпсилон) играет особую роль в представлении и не обозначает последовательность дерева лексем.)</target>
        </trans-unit>
        <trans-unit id="90accf7e4de3f988bebb9b0fcc656094cc41c05f" translate="yes" xml:space="preserve">
          <source>Group expression attributes</source>
          <target state="translated">Атрибуты группового выражения</target>
        </trans-unit>
        <trans-unit id="ef7a9bb1a692431ae6d8dff02418977a8053e1b7" translate="yes" xml:space="preserve">
          <source>Grouped expressions</source>
          <target state="translated">Сгруппированные выражения</target>
        </trans-unit>
        <trans-unit id="13970f54032da4ae14dbff0318664d8c8f7ae9de" translate="yes" xml:space="preserve">
          <source>Grouped patterns</source>
          <target state="translated">Сгруппированные шаблоны</target>
        </trans-unit>
        <trans-unit id="990b2d14bf2da723821496eca71bc9a4f287e41e" translate="yes" xml:space="preserve">
          <source>Grouping Configuration Values</source>
          <target state="translated">Группировка значений конфигурации</target>
        </trans-unit>
        <trans-unit id="ad08922b155e0f0ecfa878359b6bdba11de6fcc5" translate="yes" xml:space="preserve">
          <source>Groups items</source>
          <target state="translated">Пункты групп</target>
        </trans-unit>
        <trans-unit id="1dee13ac09a18c736a85fb7212501ca3f0535655" translate="yes" xml:space="preserve">
          <source>Gt</source>
          <target state="translated">Gt</target>
        </trans-unit>
        <trans-unit id="e72af43a28130c6f52db641d01a37aabf78c282e" translate="yes" xml:space="preserve">
          <source>Guarantees</source>
          <target state="translated">Guarantees</target>
        </trans-unit>
        <trans-unit id="643a27fb6062be0d6499f01fc4bde0f4334880b4" translate="yes" xml:space="preserve">
          <source>Guidance on which license is appropriate for your project is beyond the scope of this book. Many people in the Rust community license their projects in the same way as Rust by using a dual license of &lt;code&gt;MIT OR Apache-2.0&lt;/code&gt;. This practice demonstrates that you can also specify multiple license identifiers separated by &lt;code&gt;OR&lt;/code&gt; to have multiple licenses for your project.</source>
          <target state="translated">Рекомендации по выбору лицензии, подходящей для вашего проекта, выходят за рамки этой книги. Многие люди в сообществе Rust лицензируют свои проекты так же, как Rust, используя двойную лицензию &lt;code&gt;MIT OR Apache-2.0&lt;/code&gt; . Эта практика демонстрирует, что вы также можете указать несколько идентификаторов лицензий, разделенных оператором &lt;code&gt;OR&lt;/code&gt; чтобы получить несколько лицензий для вашего проекта.</target>
        </trans-unit>
        <trans-unit id="bf073fae640ded81eeb7a4cee70faff4a623c16c" translate="yes" xml:space="preserve">
          <source>Guide</source>
          <target state="translated">Guide</target>
        </trans-unit>
        <trans-unit id="5662999f81a9d63d43963dff643c8f2e0db48c56" translate="yes" xml:space="preserve">
          <source>Guidelines for Error Handling</source>
          <target state="translated">Руководство по обработке ошибок</target>
        </trans-unit>
        <trans-unit id="0b19d1e1b8a5918571f9c9d135638b9f04547d8f" translate="yes" xml:space="preserve">
          <source>HANDLE</source>
          <target state="translated">HANDLE</target>
        </trans-unit>
        <trans-unit id="1a486ce8f36726233061ec65b3f6bda493fd48c9" translate="yes" xml:space="preserve">
          <source>HEX_DIGIT : [&lt;code&gt;0&lt;/code&gt;-&lt;code&gt;9&lt;/code&gt;&lt;code&gt;a&lt;/code&gt;-&lt;code&gt;f&lt;/code&gt;&lt;code&gt;A&lt;/code&gt;-&lt;code&gt;F&lt;/code&gt;]</source>
          <target state="translated">HEX_DIGIT: [ &lt;code&gt;0&lt;/code&gt; - &lt;code&gt;9&lt;/code&gt; - &lt;code&gt;f&lt;/code&gt; - &lt;code&gt;F&lt;/code&gt; ] &lt;code&gt;a&lt;/code&gt; &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e195a9555456bea0e92fe340c3ae06ff639810c6" translate="yes" xml:space="preserve">
          <source>HEX_DIGIT&lt;sup&gt;1..6&lt;/sup&gt;</source>
          <target state="translated">HEX_DIGIT&lt;sup&gt;1..6&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="5f9c36747e4699e63511061195cedb992801b9d3" translate="yes" xml:space="preserve">
          <source>HEX_LITERAL :</source>
          <target state="translated">HEX_LITERAL :</target>
        </trans-unit>
        <trans-unit id="85b770e7ec266276f5de99706626234eb555c7b0" translate="yes" xml:space="preserve">
          <source>HTTP is a text-based protocol, and a request takes this format:</source>
          <target state="translated">HTTP является текстовым протоколом,и запрос принимает этот формат:</target>
        </trans-unit>
        <trans-unit id="3c47a723a85c131d97bf2d4bd392d2947fe77f70" translate="yes" xml:space="preserve">
          <source>Had &lt;code&gt;path&lt;/code&gt; contained invalid unicode, the &lt;code&gt;to_string_lossy&lt;/code&gt; call might have returned &lt;code&gt;&quot;fo�.txt&quot;&lt;/code&gt;.</source>
          <target state="translated">Если бы &lt;code&gt;path&lt;/code&gt; содержал недопустимый Unicode, вызов &lt;code&gt;to_string_lossy&lt;/code&gt; мог бы вернуть &lt;code&gt;&quot;fo�.txt&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ee4aa46e82881f4a75375987b71c3131634f94f" translate="yes" xml:space="preserve">
          <source>Handling Errors Returned from &lt;code id=&quot;handling-errors-returned-from-run-in-main&quot;&gt;run&lt;/code&gt; in &lt;code&gt;main&lt;/code&gt;</source>
          <target state="translated">Обработка ошибок, возвращаемых из &lt;code id=&quot;handling-errors-returned-from-run-in-main&quot;&gt;run&lt;/code&gt; в &lt;code&gt;main&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="187689d6fbeb450bd6ea4e652dae8dbfd0f10e3e" translate="yes" xml:space="preserve">
          <source>Handling I/O</source>
          <target state="translated">Обработка ввода/вывода</target>
        </trans-unit>
        <trans-unit id="f85b58414971efcc7eee439597523a8f745698cd" translate="yes" xml:space="preserve">
          <source>Handling Invalid Input</source>
          <target state="translated">Обработка неверного ввода</target>
        </trans-unit>
        <trans-unit id="99ae89ce9129c070f0e68c272cb53e5ebe7623fe" translate="yes" xml:space="preserve">
          <source>Handling Multiple Conditions with &lt;code id=&quot;handling-multiple-conditions-with-else-if&quot;&gt;else if&lt;/code&gt;</source>
          <target state="translated">Обработка нескольких условий с помощью &lt;code id=&quot;handling-multiple-conditions-with-else-if&quot;&gt;else if&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="59aadebe3071fa59f50f2105cef14ad03fb21914" translate="yes" xml:space="preserve">
          <source>Handling Potential Failure with the &lt;code id=&quot;handling-potential-failure-with-the-result-type&quot;&gt;Result&lt;/code&gt; Type</source>
          <target state="translated">Обработка потенциального отказа с помощью типа &lt;code id=&quot;handling-potential-failure-with-the-result-type&quot;&gt;Result&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90b8d168f939ff8e48ed694781964a3efae61546" translate="yes" xml:space="preserve">
          <source>Handling concurrent programming safely and efficiently is another of Rust&amp;rsquo;s major goals. &lt;em&gt;Concurrent programming&lt;/em&gt;, where different parts of a program execute independently, and &lt;em&gt;parallel programming&lt;/em&gt;, where different parts of a program execute at the same time, are becoming increasingly important as more computers take advantage of their multiple processors. Historically, programming in these contexts has been difficult and error prone: Rust hopes to change that.</source>
          <target state="translated">Безопасная и эффективная обработка параллельного программирования - еще одна основная цель Rust. &lt;em&gt;Параллельное программирование&lt;/em&gt; , когда разные части программы выполняются независимо, и &lt;em&gt;параллельное программирование&lt;/em&gt; , когда разные части программы выполняются одновременно, становятся все более важными, поскольку все больше компьютеров используют преимущества своих нескольких процессоров. Исторически программирование в этих контекстах было трудным и подверженным ошибкам: Rust надеется изменить это.</target>
        </trans-unit>
        <trans-unit id="8f7b16e3844bb9bbaa86ba42b5bf793b3b5747f5" translate="yes" xml:space="preserve">
          <source>Handling errors (&lt;a href=&quot;ch09-00-error-handling&quot;&gt;Chapter 9&lt;/a&gt;)</source>
          <target state="translated">Обработка ошибок ( &lt;a href=&quot;ch09-00-error-handling&quot;&gt;Глава 9&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="a8a516b582d8ee827caa06b852f0927dd7ea1aa9" translate="yes" xml:space="preserve">
          <source>Handling the error if &lt;code&gt;run&lt;/code&gt; returns an error</source>
          <target state="translated">Обработка ошибки, если при &lt;code&gt;run&lt;/code&gt; возвращается ошибка</target>
        </trans-unit>
        <trans-unit id="605c9af0dc3550ddfefeee4d42138a7f1adc2bd1" translate="yes" xml:space="preserve">
          <source>Has the effects of both &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; together: For loads it uses &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; ordering. For stores it uses the &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f36c92a5a7396e8365dbdfe793e5eef4ad9431" translate="yes" xml:space="preserve">
          <source>Has the effects of both &lt;a href=&quot;https://llvm.org/docs/Atomics.html#acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://llvm.org/docs/Atomics.html#release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; together: For loads it uses &lt;a href=&quot;https://llvm.org/docs/Atomics.html#acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; ordering. For stores it uses the &lt;a href=&quot;https://llvm.org/docs/Atomics.html#release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; ordering.</source>
          <target state="translated">Обладает одновременным действием как &lt;a href=&quot;https://llvm.org/docs/Atomics.html#acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; ,так&lt;/a&gt; и &lt;a href=&quot;https://llvm.org/docs/Atomics.html#release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; : для нагрузок используется упорядочение &lt;a href=&quot;https://llvm.org/docs/Atomics.html#acquire&quot;&gt; &lt;code&gt;Acquire&lt;/code&gt; &lt;/a&gt; . Для магазинов используется порядок &lt;a href=&quot;https://llvm.org/docs/Atomics.html#release&quot;&gt; &lt;code&gt;Release&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="873507a022b58de26a88deae87268cbd8d6af5b1" translate="yes" xml:space="preserve">
          <source>Hash</source>
          <target state="translated">Hash</target>
        </trans-unit>
        <trans-unit id="d16b2d08d75092ccdbc53063c23e2c3fe71d7f34" translate="yes" xml:space="preserve">
          <source>Hash Maps and Ownership</source>
          <target state="translated">Хэш-Карты и собственность</target>
        </trans-unit>
        <trans-unit id="49d09ebb7291bff93c80ac3f381f55fe8a3c4cbf" translate="yes" xml:space="preserve">
          <source>Hash a raw pointer.</source>
          <target state="translated">Есть сырая указка.</target>
        </trans-unit>
        <trans-unit id="6c5bfe7d7f5d3cec7864d666ab67d3faebb741c0" translate="yes" xml:space="preserve">
          <source>Hash maps are useful when you want to look up data not by using an index, as you can with vectors, but by using a key that can be of any type. For example, in a game, you could keep track of each team&amp;rsquo;s score in a hash map in which each key is a team&amp;rsquo;s name and the values are each team&amp;rsquo;s score. Given a team name, you can retrieve its score.</source>
          <target state="translated">Карты хеширования полезны, когда вы хотите искать данные не с помощью индекса, как с векторами, а с помощью ключа, который может быть любого типа. Например, в игре вы можете отслеживать счет каждой команды в хэш-карте, в которой каждый ключ представляет собой название команды, а значения - счет каждой команды. По названию команды вы можете узнать ее счет.</target>
        </trans-unit>
        <trans-unit id="f26fb9fba1361d959b70bbd8e0907090c8a67651" translate="yes" xml:space="preserve">
          <source>Hash memoization</source>
          <target state="translated">Хэш-память</target>
        </trans-unit>
        <trans-unit id="1ca569e43628039695db4d117d37cb0433c51032" translate="yes" xml:space="preserve">
          <source>Hash::hash</source>
          <target state="translated">Hash::hash</target>
        </trans-unit>
        <trans-unit id="bac71fb916a479ac2558a2194819bf301931ca8b" translate="yes" xml:space="preserve">
          <source>Hash::hash_slice</source>
          <target state="translated">Hash::hash_slice</target>
        </trans-unit>
        <trans-unit id="ba62d7b8d0b157f714c6a6132554b38789c6ada5" translate="yes" xml:space="preserve">
          <source>HashMap</source>
          <target state="translated">HashMap</target>
        </trans-unit>
        <trans-unit id="fb7d8a23eadd1e4ece9d9a20a984c6c31289cb8b" translate="yes" xml:space="preserve">
          <source>HashMap::borrow</source>
          <target state="translated">HashMap::borrow</target>
        </trans-unit>
        <trans-unit id="610c174a39c8908fe163a07919237940fc37c1ca" translate="yes" xml:space="preserve">
          <source>HashMap::borrow_mut</source>
          <target state="translated">HashMap::borrow_mut</target>
        </trans-unit>
        <trans-unit id="5b073a19c1d948d2ff7ea181c3e6faa47ac950b7" translate="yes" xml:space="preserve">
          <source>HashMap::capacity</source>
          <target state="translated">HashMap::capacity</target>
        </trans-unit>
        <trans-unit id="290ef182063e668dbc9d6f81f0f99bd696eaa3ad" translate="yes" xml:space="preserve">
          <source>HashMap::clear</source>
          <target state="translated">HashMap::clear</target>
        </trans-unit>
        <trans-unit id="4504d7762629b3f09d106b8b2c49316387f83111" translate="yes" xml:space="preserve">
          <source>HashMap::clone</source>
          <target state="translated">HashMap::clone</target>
        </trans-unit>
        <trans-unit id="755ecc8e2fe0d53bf8d40f09d15dc41f5c72dee3" translate="yes" xml:space="preserve">
          <source>HashMap::clone_from</source>
          <target state="translated">HashMap::clone_from</target>
        </trans-unit>
        <trans-unit id="18149fd5a2f0ddb0a754ee5b20ae060122824af4" translate="yes" xml:space="preserve">
          <source>HashMap::clone_into</source>
          <target state="translated">HashMap::clone_into</target>
        </trans-unit>
        <trans-unit id="c981dd589a66a9541ad1bd942f956a943a21c776" translate="yes" xml:space="preserve">
          <source>HashMap::contains_key</source>
          <target state="translated">HashMap::contains_key</target>
        </trans-unit>
        <trans-unit id="6790c064706283f72985a00fd5d63757494362ee" translate="yes" xml:space="preserve">
          <source>HashMap::default</source>
          <target state="translated">HashMap::default</target>
        </trans-unit>
        <trans-unit id="ef89e29aa59c76930b39d07bb7c27f4f62ca4bc9" translate="yes" xml:space="preserve">
          <source>HashMap::drain</source>
          <target state="translated">HashMap::drain</target>
        </trans-unit>
        <trans-unit id="5c70bb5f39da25e4a3243cd372f9722cdd0aaa06" translate="yes" xml:space="preserve">
          <source>HashMap::entry</source>
          <target state="translated">HashMap::entry</target>
        </trans-unit>
        <trans-unit id="16580b886dde904eb2189a50aaa2ec8e66754a76" translate="yes" xml:space="preserve">
          <source>HashMap::eq</source>
          <target state="translated">HashMap::eq</target>
        </trans-unit>
        <trans-unit id="006972122bed4c52275751aaa6b1a76aa26a72f6" translate="yes" xml:space="preserve">
          <source>HashMap::extend</source>
          <target state="translated">HashMap::extend</target>
        </trans-unit>
        <trans-unit id="eef27e5aeaaee7ca97ef32c4174c3b7aefbfc638" translate="yes" xml:space="preserve">
          <source>HashMap::fmt</source>
          <target state="translated">HashMap::fmt</target>
        </trans-unit>
        <trans-unit id="2bac685119eec98678bcc3e2df09e34b76b251fb" translate="yes" xml:space="preserve">
          <source>HashMap::from</source>
          <target state="translated">HashMap::from</target>
        </trans-unit>
        <trans-unit id="23702b4af8c6608c05d1fc72b700af47889b23e4" translate="yes" xml:space="preserve">
          <source>HashMap::from_iter</source>
          <target state="translated">HashMap::from_iter</target>
        </trans-unit>
        <trans-unit id="688fd04b9fb0128d305e248d2f3d8f8222392c9c" translate="yes" xml:space="preserve">
          <source>HashMap::get</source>
          <target state="translated">HashMap::get</target>
        </trans-unit>
        <trans-unit id="ecd394b5e97d505b5180c88396d32eb04f7a2ef5" translate="yes" xml:space="preserve">
          <source>HashMap::get_key_value</source>
          <target state="translated">HashMap::get_key_value</target>
        </trans-unit>
        <trans-unit id="59fd726634d31c7b61261668c05f7485bf9decb1" translate="yes" xml:space="preserve">
          <source>HashMap::get_mut</source>
          <target state="translated">HashMap::get_mut</target>
        </trans-unit>
        <trans-unit id="9e2f5e352b69c23e1f8634441216dbbc589410a2" translate="yes" xml:space="preserve">
          <source>HashMap::hasher</source>
          <target state="translated">HashMap::hasher</target>
        </trans-unit>
        <trans-unit id="977407424016d1150ed5a54f71aa720d8b5fc1e0" translate="yes" xml:space="preserve">
          <source>HashMap::index</source>
          <target state="translated">HashMap::index</target>
        </trans-unit>
        <trans-unit id="575b9b99b8b6536e98f82916772ec179324759de" translate="yes" xml:space="preserve">
          <source>HashMap::insert</source>
          <target state="translated">HashMap::insert</target>
        </trans-unit>
        <trans-unit id="4241974ff3713d57ec86ed4fb2960fb964b4c28f" translate="yes" xml:space="preserve">
          <source>HashMap::into</source>
          <target state="translated">HashMap::into</target>
        </trans-unit>
        <trans-unit id="2ee397e85e03d2df5163ed8c1f36f63a8275c934" translate="yes" xml:space="preserve">
          <source>HashMap::into_iter</source>
          <target state="translated">HashMap::into_iter</target>
        </trans-unit>
        <trans-unit id="a649d7141d86759b290a9b727d47ad161b114361" translate="yes" xml:space="preserve">
          <source>HashMap::is_empty</source>
          <target state="translated">HashMap::is_empty</target>
        </trans-unit>
        <trans-unit id="cfdbb20825a41950e4f6625ab41ffc0a12e6cfd4" translate="yes" xml:space="preserve">
          <source>HashMap::iter</source>
          <target state="translated">HashMap::iter</target>
        </trans-unit>
        <trans-unit id="2bfca7b0b17c04d487077c012bec3c640635d95c" translate="yes" xml:space="preserve">
          <source>HashMap::iter_mut</source>
          <target state="translated">HashMap::iter_mut</target>
        </trans-unit>
        <trans-unit id="15748fe38a254ba57dde931f14941b25230915de" translate="yes" xml:space="preserve">
          <source>HashMap::keys</source>
          <target state="translated">HashMap::keys</target>
        </trans-unit>
        <trans-unit id="013a2db0fc0510df2be8bb9a81336355dd6c81f5" translate="yes" xml:space="preserve">
          <source>HashMap::len</source>
          <target state="translated">HashMap::len</target>
        </trans-unit>
        <trans-unit id="bbd14da0450a45b2de193fcab5c00bb0eb5903d6" translate="yes" xml:space="preserve">
          <source>HashMap::ne</source>
          <target state="translated">HashMap::ne</target>
        </trans-unit>
        <trans-unit id="7a43b41cd29931fa0443de6420eab17418a5775e" translate="yes" xml:space="preserve">
          <source>HashMap::new</source>
          <target state="translated">HashMap::new</target>
        </trans-unit>
        <trans-unit id="292e274cb26beafe87f9986cd7a69d6e80f0d70e" translate="yes" xml:space="preserve">
          <source>HashMap::raw_entry</source>
          <target state="translated">HashMap::raw_entry</target>
        </trans-unit>
        <trans-unit id="ddac1348f5646998be5c764f10f7f59d986ae24a" translate="yes" xml:space="preserve">
          <source>HashMap::raw_entry_mut</source>
          <target state="translated">HashMap::raw_entry_mut</target>
        </trans-unit>
        <trans-unit id="eb7e68ea1cad35b4a180ddda2294c0954904ff9c" translate="yes" xml:space="preserve">
          <source>HashMap::remove</source>
          <target state="translated">HashMap::remove</target>
        </trans-unit>
        <trans-unit id="daa065a9f2946c9de97f049237fe61d1096fd3ad" translate="yes" xml:space="preserve">
          <source>HashMap::remove_entry</source>
          <target state="translated">HashMap::remove_entry</target>
        </trans-unit>
        <trans-unit id="0121bfc051e62887774fc3f9ec592514d686885b" translate="yes" xml:space="preserve">
          <source>HashMap::reserve</source>
          <target state="translated">HashMap::reserve</target>
        </trans-unit>
        <trans-unit id="88a2076f3660ecd79e0adb0243f0e9d4a8862721" translate="yes" xml:space="preserve">
          <source>HashMap::retain</source>
          <target state="translated">HashMap::retain</target>
        </trans-unit>
        <trans-unit id="f4991ea8c7797b408f7805334922bf7e0c8d10d6" translate="yes" xml:space="preserve">
          <source>HashMap::shrink_to</source>
          <target state="translated">HashMap::shrink_to</target>
        </trans-unit>
        <trans-unit id="dc8f377e69db6a1e9ed141ae6bf011880bd42c53" translate="yes" xml:space="preserve">
          <source>HashMap::shrink_to_fit</source>
          <target state="translated">HashMap::shrink_to_fit</target>
        </trans-unit>
        <trans-unit id="bab5c2ac135dfe90b9b32c652153883ceeee3b33" translate="yes" xml:space="preserve">
          <source>HashMap::to_owned</source>
          <target state="translated">HashMap::to_owned</target>
        </trans-unit>
        <trans-unit id="391acc19f610e927b497bb4e11b352a7b2af949e" translate="yes" xml:space="preserve">
          <source>HashMap::try_from</source>
          <target state="translated">HashMap::try_from</target>
        </trans-unit>
        <trans-unit id="2893c51bf9c281d2ca7aba047803684d9a1aa860" translate="yes" xml:space="preserve">
          <source>HashMap::try_into</source>
          <target state="translated">HashMap::try_into</target>
        </trans-unit>
        <trans-unit id="9e7015c3cc0d5bc1003d09ff24337d2b0ad55c7b" translate="yes" xml:space="preserve">
          <source>HashMap::try_reserve</source>
          <target state="translated">HashMap::try_reserve</target>
        </trans-unit>
        <trans-unit id="b2ebec04fba53bc16fb11b0073bb6cc66af50890" translate="yes" xml:space="preserve">
          <source>HashMap::type_id</source>
          <target state="translated">HashMap::type_id</target>
        </trans-unit>
        <trans-unit id="d17a786e030134db4f1882f47a85dce856cb6c49" translate="yes" xml:space="preserve">
          <source>HashMap::values</source>
          <target state="translated">HashMap::values</target>
        </trans-unit>
        <trans-unit id="162e585c9055d46d3b3067b924bb60d67e948304" translate="yes" xml:space="preserve">
          <source>HashMap::values_mut</source>
          <target state="translated">HashMap::values_mut</target>
        </trans-unit>
        <trans-unit id="01bde569a6ca247f70b925283ac4eabf1fae164b" translate="yes" xml:space="preserve">
          <source>HashMap::with_capacity</source>
          <target state="translated">HashMap::with_capacity</target>
        </trans-unit>
        <trans-unit id="c95ee5e43e53e6378ec649a9c2e69ab43598f8fb" translate="yes" xml:space="preserve">
          <source>HashMap::with_capacity_and_hasher</source>
          <target state="translated">HashMap::with_capacity_and_hasher</target>
        </trans-unit>
        <trans-unit id="e7c4071d4f77cdf1820942e0c1ab3de0a91ed2cf" translate="yes" xml:space="preserve">
          <source>HashMap::with_hasher</source>
          <target state="translated">HashMap::with_hasher</target>
        </trans-unit>
        <trans-unit id="cac17f9bdb6febebe0052a72f2ab8a6828d20944" translate="yes" xml:space="preserve">
          <source>HashSet</source>
          <target state="translated">HashSet</target>
        </trans-unit>
        <trans-unit id="b68646e63dfce36d83be9cbaa54a303ef6a007af" translate="yes" xml:space="preserve">
          <source>HashSet::bitand</source>
          <target state="translated">HashSet::bitand</target>
        </trans-unit>
        <trans-unit id="1ab81639812d7d4b62dc39b7419600230fdcf25f" translate="yes" xml:space="preserve">
          <source>HashSet::bitor</source>
          <target state="translated">HashSet::bitor</target>
        </trans-unit>
        <trans-unit id="8075cc2581f90ca9a8938fc5f82b21b6e3d28edf" translate="yes" xml:space="preserve">
          <source>HashSet::bitxor</source>
          <target state="translated">HashSet::bitxor</target>
        </trans-unit>
        <trans-unit id="c77b68f5068bcecde6e8ffd8572dfb041513399a" translate="yes" xml:space="preserve">
          <source>HashSet::borrow</source>
          <target state="translated">HashSet::borrow</target>
        </trans-unit>
        <trans-unit id="03d0b56c31db1f8ba8c12e20646074ec753d52c9" translate="yes" xml:space="preserve">
          <source>HashSet::borrow_mut</source>
          <target state="translated">HashSet::borrow_mut</target>
        </trans-unit>
        <trans-unit id="bdd5342708fbc173156c0ad0e7ccdcf72b87bbec" translate="yes" xml:space="preserve">
          <source>HashSet::capacity</source>
          <target state="translated">HashSet::capacity</target>
        </trans-unit>
        <trans-unit id="b496a7fc22db5dfee5a71eb5501bd54af27226af" translate="yes" xml:space="preserve">
          <source>HashSet::clear</source>
          <target state="translated">HashSet::clear</target>
        </trans-unit>
        <trans-unit id="f6f7e84776c0a1492c95ca329cccd559dae22239" translate="yes" xml:space="preserve">
          <source>HashSet::clone</source>
          <target state="translated">HashSet::clone</target>
        </trans-unit>
        <trans-unit id="ad872e535653208fd311ddac1851f60e92c27461" translate="yes" xml:space="preserve">
          <source>HashSet::clone_from</source>
          <target state="translated">HashSet::clone_from</target>
        </trans-unit>
        <trans-unit id="30071df27bb602cc36f2524cd6272f86cf175d82" translate="yes" xml:space="preserve">
          <source>HashSet::clone_into</source>
          <target state="translated">HashSet::clone_into</target>
        </trans-unit>
        <trans-unit id="e9929a76352b9c6c4517057784d174ca502e4659" translate="yes" xml:space="preserve">
          <source>HashSet::contains</source>
          <target state="translated">HashSet::contains</target>
        </trans-unit>
        <trans-unit id="ee9499c5d925a80b927374f5fc18c8cf7acba286" translate="yes" xml:space="preserve">
          <source>HashSet::default</source>
          <target state="translated">HashSet::default</target>
        </trans-unit>
        <trans-unit id="c5666651d6d13e045665faaee91da5ee35aefa99" translate="yes" xml:space="preserve">
          <source>HashSet::difference</source>
          <target state="translated">HashSet::difference</target>
        </trans-unit>
        <trans-unit id="559bf337908631f9dc2cd3ab1c34c4b7158b1609" translate="yes" xml:space="preserve">
          <source>HashSet::drain</source>
          <target state="translated">HashSet::drain</target>
        </trans-unit>
        <trans-unit id="f25e9846b65f287b930b9d456cbbec8f01e240e9" translate="yes" xml:space="preserve">
          <source>HashSet::eq</source>
          <target state="translated">HashSet::eq</target>
        </trans-unit>
        <trans-unit id="6a91f6923c3310862ee3596940ed5b097a1bf087" translate="yes" xml:space="preserve">
          <source>HashSet::extend</source>
          <target state="translated">HashSet::extend</target>
        </trans-unit>
        <trans-unit id="8be48241f0d314ab0acacea29d3d926070bb5fa9" translate="yes" xml:space="preserve">
          <source>HashSet::fmt</source>
          <target state="translated">HashSet::fmt</target>
        </trans-unit>
        <trans-unit id="b4f60277034657d60f3728ccd3956ff96b1819e2" translate="yes" xml:space="preserve">
          <source>HashSet::from</source>
          <target state="translated">HashSet::from</target>
        </trans-unit>
        <trans-unit id="60f387d38899e1b57c8d30e798c352963e26a097" translate="yes" xml:space="preserve">
          <source>HashSet::from_iter</source>
          <target state="translated">HashSet::from_iter</target>
        </trans-unit>
        <trans-unit id="33cae8d46ad9832e17073c4a9f1abb51a6504d81" translate="yes" xml:space="preserve">
          <source>HashSet::get</source>
          <target state="translated">HashSet::get</target>
        </trans-unit>
        <trans-unit id="6c7ba6a45c151f970088dcc70a1b7618e6395baf" translate="yes" xml:space="preserve">
          <source>HashSet::get_or_insert</source>
          <target state="translated">HashSet::get_or_insert</target>
        </trans-unit>
        <trans-unit id="3c9bf791b1bc89ff50ed8e094f3d77efdc799512" translate="yes" xml:space="preserve">
          <source>HashSet::get_or_insert_with</source>
          <target state="translated">HashSet::get_or_insert_with</target>
        </trans-unit>
        <trans-unit id="01c1744d870244b7145beb071040d269b906cc15" translate="yes" xml:space="preserve">
          <source>HashSet::hasher</source>
          <target state="translated">HashSet::hasher</target>
        </trans-unit>
        <trans-unit id="6f9a670d4aa69b73fdbaf199b1f0dd8253423bff" translate="yes" xml:space="preserve">
          <source>HashSet::insert</source>
          <target state="translated">HashSet::insert</target>
        </trans-unit>
        <trans-unit id="5c5bf765bc94406fc16ab265fee5caf8d4d6d147" translate="yes" xml:space="preserve">
          <source>HashSet::intersection</source>
          <target state="translated">HashSet::intersection</target>
        </trans-unit>
        <trans-unit id="1847c872f1c798ce2ed7fda1f927b3db87be02ae" translate="yes" xml:space="preserve">
          <source>HashSet::into</source>
          <target state="translated">HashSet::into</target>
        </trans-unit>
        <trans-unit id="06dc65fe61329213ae7394dadf80b120758e58bf" translate="yes" xml:space="preserve">
          <source>HashSet::into_iter</source>
          <target state="translated">HashSet::into_iter</target>
        </trans-unit>
        <trans-unit id="67c6eb738c50bfb089cc9e9dd3c556b76c5e5a19" translate="yes" xml:space="preserve">
          <source>HashSet::is_disjoint</source>
          <target state="translated">HashSet::is_disjoint</target>
        </trans-unit>
        <trans-unit id="9463f6acefaba610600eb7b086516e06a56e7415" translate="yes" xml:space="preserve">
          <source>HashSet::is_empty</source>
          <target state="translated">HashSet::is_empty</target>
        </trans-unit>
        <trans-unit id="3494ecfcdfcc0fd49b4716ada245492c590484c8" translate="yes" xml:space="preserve">
          <source>HashSet::is_subset</source>
          <target state="translated">HashSet::is_subset</target>
        </trans-unit>
        <trans-unit id="5a5bed7c64ac7bd90ff2fd3978bbf37d738addfa" translate="yes" xml:space="preserve">
          <source>HashSet::is_superset</source>
          <target state="translated">HashSet::is_superset</target>
        </trans-unit>
        <trans-unit id="d4aa44a96215a84918fccfb358fa46f4343aa9e3" translate="yes" xml:space="preserve">
          <source>HashSet::iter</source>
          <target state="translated">HashSet::iter</target>
        </trans-unit>
        <trans-unit id="e772fc3259c95bf6f1d149e4fe5b58f7beb84957" translate="yes" xml:space="preserve">
          <source>HashSet::len</source>
          <target state="translated">HashSet::len</target>
        </trans-unit>
        <trans-unit id="9d950bd82fcd2e87760e296232658decf6487907" translate="yes" xml:space="preserve">
          <source>HashSet::ne</source>
          <target state="translated">HashSet::ne</target>
        </trans-unit>
        <trans-unit id="faff6aa961e961cb5d0e5be8b0c1765f5a91c089" translate="yes" xml:space="preserve">
          <source>HashSet::new</source>
          <target state="translated">HashSet::new</target>
        </trans-unit>
        <trans-unit id="ab12b0529a6e1a5dea72839456e2d81f89fbb648" translate="yes" xml:space="preserve">
          <source>HashSet::remove</source>
          <target state="translated">HashSet::remove</target>
        </trans-unit>
        <trans-unit id="11dfa3918fa59c9dba2c405236023985e68113d1" translate="yes" xml:space="preserve">
          <source>HashSet::replace</source>
          <target state="translated">HashSet::replace</target>
        </trans-unit>
        <trans-unit id="f3111bd9bb9284dd24b994e9c70b335390828fac" translate="yes" xml:space="preserve">
          <source>HashSet::reserve</source>
          <target state="translated">HashSet::reserve</target>
        </trans-unit>
        <trans-unit id="ce64d74e2bc22c15cfa1eaba2edb312838993eda" translate="yes" xml:space="preserve">
          <source>HashSet::retain</source>
          <target state="translated">HashSet::retain</target>
        </trans-unit>
        <trans-unit id="029a9cdc9ae9ee65ed460a0ec02d113e093964b2" translate="yes" xml:space="preserve">
          <source>HashSet::shrink_to</source>
          <target state="translated">HashSet::shrink_to</target>
        </trans-unit>
        <trans-unit id="3aba29e196a563c0a26e6c5d67e4388b6713cebf" translate="yes" xml:space="preserve">
          <source>HashSet::shrink_to_fit</source>
          <target state="translated">HashSet::shrink_to_fit</target>
        </trans-unit>
        <trans-unit id="137d5ee967421f3423450e1436080f3b38640647" translate="yes" xml:space="preserve">
          <source>HashSet::sub</source>
          <target state="translated">HashSet::sub</target>
        </trans-unit>
        <trans-unit id="39cf21ce1dee41e9b1e7cb0c554d9ccf20702455" translate="yes" xml:space="preserve">
          <source>HashSet::symmetric_difference</source>
          <target state="translated">HashSet::symmetric_difference</target>
        </trans-unit>
        <trans-unit id="b78b12fa7d65d7ed557c2e12c743c86bcbc88775" translate="yes" xml:space="preserve">
          <source>HashSet::take</source>
          <target state="translated">HashSet::take</target>
        </trans-unit>
        <trans-unit id="93138236c5609c2dee4b1e913e9fcc9e3e9fdf44" translate="yes" xml:space="preserve">
          <source>HashSet::to_owned</source>
          <target state="translated">HashSet::to_owned</target>
        </trans-unit>
        <trans-unit id="96f13425b733a2e08673b87dffc523aee111609b" translate="yes" xml:space="preserve">
          <source>HashSet::try_from</source>
          <target state="translated">HashSet::try_from</target>
        </trans-unit>
        <trans-unit id="85d076b1561829592d046d057f0210cf9a4ff355" translate="yes" xml:space="preserve">
          <source>HashSet::try_into</source>
          <target state="translated">HashSet::try_into</target>
        </trans-unit>
        <trans-unit id="a9c0b3c82611415705e046ee581719e01be9eecc" translate="yes" xml:space="preserve">
          <source>HashSet::try_reserve</source>
          <target state="translated">HashSet::try_reserve</target>
        </trans-unit>
        <trans-unit id="105a18b817256119cb17af97da897c56eba29e40" translate="yes" xml:space="preserve">
          <source>HashSet::type_id</source>
          <target state="translated">HashSet::type_id</target>
        </trans-unit>
        <trans-unit id="685fa7682d344986ee2f2ae55086a7531364bc35" translate="yes" xml:space="preserve">
          <source>HashSet::union</source>
          <target state="translated">HashSet::union</target>
        </trans-unit>
        <trans-unit id="c3204331b41dcd6ae424437b8e36081a10f0c506" translate="yes" xml:space="preserve">
          <source>HashSet::with_capacity</source>
          <target state="translated">HashSet::with_capacity</target>
        </trans-unit>
        <trans-unit id="6bb25440ddefbed0a8db0d432f23f0ca38d089d8" translate="yes" xml:space="preserve">
          <source>HashSet::with_capacity_and_hasher</source>
          <target state="translated">HashSet::with_capacity_and_hasher</target>
        </trans-unit>
        <trans-unit id="550d3800dfa4eb2bdb493d733dabf4b1ffabf984" translate="yes" xml:space="preserve">
          <source>HashSet::with_hasher</source>
          <target state="translated">HashSet::with_hasher</target>
        </trans-unit>
        <trans-unit id="fc0f48d98ae0d2092a247d5cee9ccdb867d1d001" translate="yes" xml:space="preserve">
          <source>Hasher</source>
          <target state="translated">Hasher</target>
        </trans-unit>
        <trans-unit id="e9a193bcbf138ba881c64b5b1a29eba015da6009" translate="yes" xml:space="preserve">
          <source>Hasher::finish</source>
          <target state="translated">Hasher::finish</target>
        </trans-unit>
        <trans-unit id="2b1c79f133b4285e8cbe820d3b0dbaa110a81b6c" translate="yes" xml:space="preserve">
          <source>Hasher::write</source>
          <target state="translated">Hasher::write</target>
        </trans-unit>
        <trans-unit id="aea45433ea07ad24495217b0093e410e9770ebb6" translate="yes" xml:space="preserve">
          <source>Hasher::write_i128</source>
          <target state="translated">Hasher::write_i128</target>
        </trans-unit>
        <trans-unit id="f97466e2fd5ec3a618a0b518a5dd39118b1b15e0" translate="yes" xml:space="preserve">
          <source>Hasher::write_i16</source>
          <target state="translated">Hasher::write_i16</target>
        </trans-unit>
        <trans-unit id="10de8ddcd6d092ee0ae793c2f146d59545948d06" translate="yes" xml:space="preserve">
          <source>Hasher::write_i32</source>
          <target state="translated">Hasher::write_i32</target>
        </trans-unit>
        <trans-unit id="fa2e80124215b4059a687baa99ddde7e8adc899d" translate="yes" xml:space="preserve">
          <source>Hasher::write_i64</source>
          <target state="translated">Hasher::write_i64</target>
        </trans-unit>
        <trans-unit id="fe5b0947dfe31def847c17d1e11ec3d408a4124c" translate="yes" xml:space="preserve">
          <source>Hasher::write_i8</source>
          <target state="translated">Hasher::write_i8</target>
        </trans-unit>
        <trans-unit id="53164f3f3dd297fb85292187a041f87e1d16695e" translate="yes" xml:space="preserve">
          <source>Hasher::write_isize</source>
          <target state="translated">Hasher::write_isize</target>
        </trans-unit>
        <trans-unit id="e477fb5169da10ce163639bd122b949d5314f471" translate="yes" xml:space="preserve">
          <source>Hasher::write_u128</source>
          <target state="translated">Hasher::write_u128</target>
        </trans-unit>
        <trans-unit id="05c5de3720de3f253e1541c3b244cb58450b4be2" translate="yes" xml:space="preserve">
          <source>Hasher::write_u16</source>
          <target state="translated">Hasher::write_u16</target>
        </trans-unit>
        <trans-unit id="1cf90d27fda48a3335fb25c8aa60e25c50bc3767" translate="yes" xml:space="preserve">
          <source>Hasher::write_u32</source>
          <target state="translated">Hasher::write_u32</target>
        </trans-unit>
        <trans-unit id="420bdb25cc27d8fac4c5399c4359ccee510eacbd" translate="yes" xml:space="preserve">
          <source>Hasher::write_u64</source>
          <target state="translated">Hasher::write_u64</target>
        </trans-unit>
        <trans-unit id="82a921392efa7001c790d5b80024db7be281f9cb" translate="yes" xml:space="preserve">
          <source>Hasher::write_u8</source>
          <target state="translated">Hasher::write_u8</target>
        </trans-unit>
        <trans-unit id="d1a0408c2f79ae7c9f420468772c41716a5e1a04" translate="yes" xml:space="preserve">
          <source>Hasher::write_usize</source>
          <target state="translated">Hasher::write_usize</target>
        </trans-unit>
        <trans-unit id="461629db972167b8f4c1f8c130db9885c4944304" translate="yes" xml:space="preserve">
          <source>Hashing Functions</source>
          <target state="translated">Функции фиксации</target>
        </trans-unit>
        <trans-unit id="baf48f49b04e2fe65712d113e9024e4c5a00d1bc" translate="yes" xml:space="preserve">
          <source>Haskell (GHC): typeclasses, type families</source>
          <target state="translated">Хаскелл (GHC):шрифтовые классы,семейства типов.</target>
        </trans-unit>
        <trans-unit id="0561de3a6257f6d36364146fd6581f1315dd2333" translate="yes" xml:space="preserve">
          <source>Having &lt;code&gt;common&lt;/code&gt; appear in the test results with &lt;code&gt;running 0 tests&lt;/code&gt; displayed for it is not what we wanted. We just wanted to share some code with the other integration test files.</source>
          <target state="translated">Имея &lt;code&gt;common&lt;/code&gt; в результатах тестов с &lt;code&gt;running 0 tests&lt;/code&gt; , отображаемых для него не то , что мы хотели. Мы просто хотели поделиться кодом с другими файлами интеграционных тестов.</target>
        </trans-unit>
        <trans-unit id="11f087b15a668ce62e66a014863909ef9d55cd94" translate="yes" xml:space="preserve">
          <source>Having Multiple Owners of Mutable Data by Combining &lt;code id=&quot;having-multiple-owners-of-mutable-data-by-combining-rct-and-refcellt&quot;&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Наличие нескольких владельцев изменяемых данных за счет объединения &lt;code id=&quot;having-multiple-owners-of-mutable-data-by-combining-rct-and-refcellt&quot;&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; и &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3039ad6abf86928bcfdadaa49d3256f9e624f29" translate="yes" xml:space="preserve">
          <source>Having multiple relaxed default bounds is unsupported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b19652c5d2b3e9984ece4975d1cc403d1ab4a0a" translate="yes" xml:space="preserve">
          <source>Having one mutable reference (&lt;code&gt;&amp;amp;mut T&lt;/code&gt;) to the object (also known as &lt;strong&gt;mutability&lt;/strong&gt;).</source>
          <target state="translated">Имея одну изменяемой ссылки ( &lt;code&gt;&amp;amp;mut T&lt;/code&gt; ) к объекту (также известному как &lt;strong&gt;мутабильность&lt;/strong&gt; ).</target>
        </trans-unit>
        <trans-unit id="08041929016b8a695800e1c093d6357eb61d9428" translate="yes" xml:space="preserve">
          <source>Having several immutable references (&lt;code&gt;&amp;amp;T&lt;/code&gt;) to the object (also known as &lt;strong&gt;aliasing&lt;/strong&gt;).</source>
          <target state="translated">Наличие нескольких неизменяемых ссылок ( &lt;code&gt;&amp;amp;T&lt;/code&gt; ) на объект (также известное как &lt;strong&gt;псевдоним&lt;/strong&gt; ).</target>
        </trans-unit>
        <trans-unit id="89c8fa1c2c4d0b146e76f764a7dc959cbfc87737" translate="yes" xml:space="preserve">
          <source>Having to worry about the index in &lt;code&gt;word&lt;/code&gt; getting out of sync with the data in &lt;code&gt;s&lt;/code&gt; is tedious and error prone! Managing these indices is even more brittle if we write a &lt;code&gt;second_word&lt;/code&gt; function. Its signature would have to look like this:</source>
          <target state="translated">Беспокойство о том, что индекс в &lt;code&gt;word&lt;/code&gt; не синхронизируется с данными в &lt;code&gt;s&lt;/code&gt; , утомительно и чревато ошибками! Управление этими индексами станет еще более хрупким, если мы напишем функцию &lt;code&gt;second_word&lt;/code&gt; . Его подпись должна была выглядеть так:</target>
        </trans-unit>
        <trans-unit id="257810d9a0b57b3d3f2b083b4e88460a9ed6c299" translate="yes" xml:space="preserve">
          <source>Hello, Cargo!</source>
          <target state="translated">Привет,Грузовик!</target>
        </trans-unit>
        <trans-unit id="0a0a9f2a6772942557ab5355d76af442f8f65e01" translate="yes" xml:space="preserve">
          <source>Hello, World!</source>
          <target state="translated">Привет,Ворлд!</target>
        </trans-unit>
        <trans-unit id="d9d2b1e388fd73fa4e7cc0203db99342ed1255e1" translate="yes" xml:space="preserve">
          <source>Helper struct for safely printing paths with &lt;a href=&quot;../macro.format&quot;&gt;&lt;code&gt;format!&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">Вспомогательная структура для безопасной печати путей с &lt;a href=&quot;../macro.format&quot;&gt; &lt;code&gt;format!&lt;/code&gt; &lt;/a&gt;и &lt;code&gt;{}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8498955fde08da370bacddfd1434e8493282db8" translate="yes" xml:space="preserve">
          <source>Helper trait for &lt;a href=&quot;../primitive.slice#method.concat&quot;&gt;&lt;code&gt;[T]::concat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdd82587ac5843ce3d9f6e79bf40efba742c5a2" translate="yes" xml:space="preserve">
          <source>Helper trait for &lt;a href=&quot;../primitive.slice#method.join&quot;&gt;&lt;code&gt;[T]::join&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8870a3f309d445b4b67cf35abad15e6e3e773d8" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;T&lt;/code&gt; is a trait object with two explicit lifetime bounds, 'a and 'b.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4fbb21f9ed5068758832ea51d122515fab93c7" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;X&lt;/code&gt; will have already been specified the discriminant 0 by the time &lt;code&gt;Y&lt;/code&gt; is encountered, so a conflict occurs.</source>
          <target state="translated">Здесь &lt;code&gt;X&lt;/code&gt; уже будет указан дискриминант 0 к моменту встречи &lt;code&gt;Y&lt;/code&gt; , поэтому возникает конфликт.</target>
        </trans-unit>
        <trans-unit id="b3f6e00f3163ec48a9acfd477c8ec87919fc2c8c" translate="yes" xml:space="preserve">
          <source>Here are a couple examples of this error:</source>
          <target state="translated">Приведем пару примеров этой ошибки:</target>
        </trans-unit>
        <trans-unit id="8ff34494ac843686469f6f02e338741820201079" translate="yes" xml:space="preserve">
          <source>Here are examples of the comparison operators being used.</source>
          <target state="translated">Приведем примеры используемых операторов сравнения.</target>
        </trans-unit>
        <trans-unit id="bca374bff5c3dac21037ded7599cd1fe12249f7d" translate="yes" xml:space="preserve">
          <source>Here are examples of these operators being used.</source>
          <target state="translated">Приведем примеры использования этих операторов.</target>
        </trans-unit>
        <trans-unit id="07272e166a1d2e40b130f94ad3a0aa3df774ca3b" translate="yes" xml:space="preserve">
          <source>Here are similar examples but now for LAST.</source>
          <target state="translated">Вот похожие примеры,но теперь для LAST.</target>
        </trans-unit>
        <trans-unit id="0a1abd5c7569db9404cdcd75f1cc6cdc0c6dca93" translate="yes" xml:space="preserve">
          <source>Here are some example of these operators</source>
          <target state="translated">Вот несколько примеров таких операторов</target>
        </trans-unit>
        <trans-unit id="4684b015ded3bc0731a2cef8198e5596403f6b07" translate="yes" xml:space="preserve">
          <source>Here are some examples of elision errors:</source>
          <target state="translated">Приведем несколько примеров ошибок elision:</target>
        </trans-unit>
        <trans-unit id="4bcc69e7a08f9cc053bd0cff82d93712f586660e" translate="yes" xml:space="preserve">
          <source>Here are some examples where expressions don't have extended temporary scopes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92962597dc4ffea4ff897a85b4d5e4dec6ca581" translate="yes" xml:space="preserve">
          <source>Here are some examples where expressions have extended temporary scopes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0931022beea83b3afc095873234631b7243eeca4" translate="yes" xml:space="preserve">
          <source>Here are some examples:</source>
          <target state="translated">Вот несколько примеров:</target>
        </trans-unit>
        <trans-unit id="51de71d79af0f5165810b64b8288dc0e2f418033" translate="yes" xml:space="preserve">
          <source>Here are some examples: a reference to an &lt;code&gt;i32&lt;/code&gt; without a lifetime parameter, a reference to an &lt;code&gt;i32&lt;/code&gt; that has a lifetime parameter named &lt;code&gt;'a&lt;/code&gt;, and a mutable reference to an &lt;code&gt;i32&lt;/code&gt; that also has the lifetime &lt;code&gt;'a&lt;/code&gt;.</source>
          <target state="translated">Вот несколько примеров: ссылка на &lt;code&gt;i32&lt;/code&gt; без параметра времени жизни, ссылка на &lt;code&gt;i32&lt;/code&gt; , у которого есть параметр времени жизни с именем &lt;code&gt;'a&lt;/code&gt; , и изменяемая ссылка на &lt;code&gt;i32&lt;/code&gt; , у которого также есть время жизни &lt;code&gt;'a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20d5c7a1de98768721ba1e4861f1afaf92322548" translate="yes" xml:space="preserve">
          <source>Here are some of the things this module contains:</source>
          <target state="translated">Вот некоторые из вещей,которые содержатся в этом модуле:</target>
        </trans-unit>
        <trans-unit id="2a92602de41a70e7040e9f2a4fb9598c573570c2" translate="yes" xml:space="preserve">
          <source>Here are some simple examples of where you'll run into this error:</source>
          <target state="translated">Вот несколько простых примеров,где вы столкнетесь с этой ошибкой:</target>
        </trans-unit>
        <trans-unit id="3a02d5c5d61bf51906767acca68761775d677fe8" translate="yes" xml:space="preserve">
          <source>Here are the abilities Unsafe Rust has in addition to Safe Rust:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8f26110eb51a4ab181ea0b693d59c927775bab" translate="yes" xml:space="preserve">
          <source>Here are the topics we&amp;rsquo;ll cover in this chapter:</source>
          <target state="translated">Вот темы, которые мы рассмотрим в этой главе:</target>
        </trans-unit>
        <trans-unit id="bc16616a997e1c54d6f12cfc92a13207a77b9160" translate="yes" xml:space="preserve">
          <source>Here are the two primary ways in which &lt;code&gt;entry&lt;/code&gt; is used. First, a simple example where the logic performed on the values is trivial.</source>
          <target state="translated">Вот два основных способа , в которых &lt;code&gt;entry&lt;/code&gt; используется. Во-первых, простой пример, в котором логика, выполняемая над значениями, тривиальна.</target>
        </trans-unit>
        <trans-unit id="8d3de595e318046b488878fdfd592e24474accd6" translate="yes" xml:space="preserve">
          <source>Here executing &lt;code&gt;x = None&lt;/code&gt; would modify the value being matched and require us to go &quot;back in time&quot; to the &lt;code&gt;None&lt;/code&gt; arm.</source>
          <target state="translated">Здесь выполнение &lt;code&gt;x = None&lt;/code&gt; изменит сопоставляемое значение и потребует от нас вернуться &amp;laquo;назад во времени&amp;raquo; в руку &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b54fff02e5e3fe8139f3151b798d2ca6781ef79d" translate="yes" xml:space="preserve">
          <source>Here executing &lt;code&gt;x = None&lt;/code&gt; would modify the value being matched and require us to go &quot;back in time&quot; to the &lt;code&gt;None&lt;/code&gt; arm. To fix it, change the value in the match arm:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87b503ee6f76be5b3f344961161f897b4c2e8a33" translate="yes" xml:space="preserve">
          <source>Here is a basic example:</source>
          <target state="translated">Вот основной пример:</target>
        </trans-unit>
        <trans-unit id="40d986bccf61bb4616c6b2d5e45138cb6f650868" translate="yes" xml:space="preserve">
          <source>Here is a recap of the reasons to choose &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;, &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;, or &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">Вот краткое изложение причин выбрать &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; , &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; или &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2fd70c4f72651018616cf4fae80bda013db29aef" translate="yes" xml:space="preserve">
          <source>Here is a variation on the previous example, showing that no further elements are taken from &lt;code&gt;iter&lt;/code&gt; after the first &lt;code&gt;Err&lt;/code&gt;.</source>
          <target state="translated">Вот вариант предыдущего примера, показывающий, что никакие дополнительные элементы не берутся из &lt;code&gt;iter&lt;/code&gt; после первого &lt;code&gt;Err&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2d33e000bef3fae0bc1e18459c72a6974d4c8ec" translate="yes" xml:space="preserve">
          <source>Here is a variation on the previous example, showing that no further elements are taken from &lt;code&gt;iter&lt;/code&gt; after the first &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">Вот вариант предыдущего примера, показывающий, что никакие дополнительные элементы не берутся из &lt;code&gt;iter&lt;/code&gt; после первого &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="64fa9f151e952c55124309eb57d3e7e04cdb27ce" translate="yes" xml:space="preserve">
          <source>Here is an example of the same &lt;code&gt;Point&lt;/code&gt; struct implementing the &lt;code&gt;Add&lt;/code&gt; trait using generics.</source>
          <target state="translated">Вот пример той же структуры &lt;code&gt;Point&lt;/code&gt; , реализующей свойство &lt;code&gt;Add&lt;/code&gt; с использованием универсальных шаблонов.</target>
        </trans-unit>
        <trans-unit id="f4eeb15c7a7b93e1eb2dc6a8750be5fd94bbc8b2" translate="yes" xml:space="preserve">
          <source>Here is an example of the same &lt;code&gt;Point&lt;/code&gt; struct implementing the &lt;code&gt;Sub&lt;/code&gt; trait using generics.</source>
          <target state="translated">Вот пример той же структуры &lt;code&gt;Point&lt;/code&gt; , реализующей свойство &lt;code&gt;Sub&lt;/code&gt; с использованием универсальных шаблонов.</target>
        </trans-unit>
        <trans-unit id="e2a455b6868a34c4c660661290fdc27380049549" translate="yes" xml:space="preserve">
          <source>Here is an example response that uses HTTP version 1.1, has a status code of 200, an OK reason phrase, no headers, and no body:</source>
          <target state="translated">Вот пример ответа,который использует HTTP версии 1.1,имеет код статуса 200,фразу &quot;ОК&quot;,без заголовков и без тела:</target>
        </trans-unit>
        <trans-unit id="8d3dccad44a11aba4a0bfd15fb7b2845992244bd" translate="yes" xml:space="preserve">
          <source>Here is an example showcasing how to soundly mutate the contents of an &lt;code&gt;UnsafeCell&amp;lt;_&amp;gt;&lt;/code&gt; despite there being multiple references aliasing the cell:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c4ae388ef10758f9c1ee112d05af3dedb5a8c1" translate="yes" xml:space="preserve">
          <source>Here is an example that demonstrates the error:</source>
          <target state="translated">Вот пример,демонстрирующий ошибку:</target>
        </trans-unit>
        <trans-unit id="eb168180e8af601284ef4a6f97cd122e9d48a93f" translate="yes" xml:space="preserve">
          <source>Here is an example using ranges of &lt;code&gt;char&lt;/code&gt; values:</source>
          <target state="translated">Вот пример использования диапазонов значений &lt;code&gt;char&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2190806deeaf3eb0d2b99ddd8ded1889adb9e2dc" translate="yes" xml:space="preserve">
          <source>Here is an example where the third lifetime elision rule applies:</source>
          <target state="translated">Вот пример,где применяется правило третьей элизии жизни:</target>
        </trans-unit>
        <trans-unit id="8be714949bc61ee0dfb58dd8b6d077f499efa300" translate="yes" xml:space="preserve">
          <source>Here is an example which increments every integer in a vector, checking for overflow:</source>
          <target state="translated">Приведем пример,который увеличивает каждое целое число в векторе,проверяя на переполнение:</target>
        </trans-unit>
        <trans-unit id="b8d2a1ec18a168b45aede187d064b1d87d98387f" translate="yes" xml:space="preserve">
          <source>Here is an example which increments every integer in a vector. We use the checked variant of &lt;code&gt;add&lt;/code&gt; that returns &lt;code&gt;None&lt;/code&gt; when the calculation would result in an overflow.</source>
          <target state="translated">Вот пример, который увеличивает каждое целое число в векторе. Мы используем проверенный вариант &lt;code&gt;add&lt;/code&gt; который возвращает &lt;code&gt;None&lt;/code&gt; , когда вычисление приведет к переполнению.</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">Вот пример:</target>
        </trans-unit>
        <trans-unit id="669e450458761957293db53fc0e8c919ba0f5a7a" translate="yes" xml:space="preserve">
          <source>Here is an unsafe function named &lt;code&gt;dangerous&lt;/code&gt; that doesn&amp;rsquo;t do anything in its body:</source>
          <target state="translated">Вот небезопасная функция с именем &lt;code&gt;dangerous&lt;/code&gt; , которая ничего не делает в своем теле:</target>
        </trans-unit>
        <trans-unit id="d9606eca0f59289409929077841f751f72b656be" translate="yes" xml:space="preserve">
          <source>Here is another example that tries to subtract one from another list of integers, this time checking for underflow:</source>
          <target state="translated">Вот еще один пример,который пытается вычесть одно из другого списка целых чисел,на этот раз проверяя на недолив:</target>
        </trans-unit>
        <trans-unit id="967e8f702b29651ccfd3eff162bdd1236f185e1b" translate="yes" xml:space="preserve">
          <source>Here is how you would define and use a &lt;code&gt;calculate_length&lt;/code&gt; function that has a reference to an object as a parameter instead of taking ownership of the value:</source>
          <target state="translated">Вот как вы могли бы определить и использовать функцию &lt;code&gt;calculate_length&lt;/code&gt; , которая имеет ссылку на объект в качестве параметра вместо того, чтобы владеть значением:</target>
        </trans-unit>
        <trans-unit id="853cb0e889b6e921d08e41239a16f75171fa3cf1" translate="yes" xml:space="preserve">
          <source>Here is that same example again, with some explanatory comments:</source>
          <target state="translated">И снова этот же пример с некоторыми пояснительными комментариями:</target>
        </trans-unit>
        <trans-unit id="183c940df02f2ac1c7e0b320aa5e4607c7fd14f0" translate="yes" xml:space="preserve">
          <source>Here is the error we get when we compile this code:</source>
          <target state="translated">Вот ошибка,которую мы получаем при компиляции этого кода:</target>
        </trans-unit>
        <trans-unit id="20e589c1d30a718b69866f0e87eb12f8b53bb806" translate="yes" xml:space="preserve">
          <source>Here is the plan to build the web server:</source>
          <target state="translated">Вот план по созданию веб-сервера:</target>
        </trans-unit>
        <trans-unit id="c50f83c6cf619c1c5fb8951e5f26cafe1c807151" translate="yes" xml:space="preserve">
          <source>Here is the previous example again, with the correct order:</source>
          <target state="translated">Вот снова предыдущий пример,с правильным порядком:</target>
        </trans-unit>
        <trans-unit id="c6b6ce6ac56caf7839b74c32ae618de3ed902bea" translate="yes" xml:space="preserve">
          <source>Here is this algorithm described in pseudocode.</source>
          <target state="translated">Вот этот алгоритм,описанный в псевдокоде.</target>
        </trans-unit>
        <trans-unit id="5ade7d43a649a8f35a37c5c4df50d404ac17d264" translate="yes" xml:space="preserve">
          <source>Here the &lt;code&gt;Apple&lt;/code&gt; variant has two fields, and should be matched against like so:</source>
          <target state="translated">Здесь вариант &lt;code&gt;Apple&lt;/code&gt; имеет два поля, и его следует сопоставить следующим образом:</target>
        </trans-unit>
        <trans-unit id="847a36b4e8f5bc18d0a990ee9501fe6c952a3db3" translate="yes" xml:space="preserve">
          <source>Here the type &lt;code&gt;T&lt;/code&gt; cannot have a relaxed bound for multiple default traits (&lt;code&gt;Sized&lt;/code&gt; and &lt;code&gt;Send&lt;/code&gt;). This can be fixed by only using one relaxed bound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77492962523ab1872ec0db64f3e31206c8e37741" translate="yes" xml:space="preserve">
          <source>Here we create &lt;code&gt;Status::Value&lt;/code&gt; instances using each &lt;code&gt;u32&lt;/code&gt; value in the range that &lt;code&gt;map&lt;/code&gt; is called on by using the initializer function of &lt;code&gt;Status::Value&lt;/code&gt;. Some people prefer this style, and some people prefer to use closures. They compile to the same code, so use whichever style is clearer to you.</source>
          <target state="translated">Здесь мы создаем экземпляры &lt;code&gt;Status::Value&lt;/code&gt; используя каждое значение &lt;code&gt;u32&lt;/code&gt; в диапазоне, в котором вызывается &lt;code&gt;map&lt;/code&gt; , с помощью функции инициализатора &lt;code&gt;Status::Value&lt;/code&gt; . Кто-то предпочитает этот стиль, а кто-то предпочитает закрытие. Они компилируются в один и тот же код, поэтому используйте тот стиль, который вам понятнее.</target>
        </trans-unit>
        <trans-unit id="ab78b83024b9be055a5f592dcee8323d7eae1a44" translate="yes" xml:space="preserve">
          <source>Here we get a warning about not using the variable &lt;code&gt;y&lt;/code&gt;, but we don&amp;rsquo;t get a warning about not using the variable preceded by the underscore.</source>
          <target state="translated">Здесь мы получаем предупреждение о том, что не используется переменная &lt;code&gt;y&lt;/code&gt; , но мы не получаем предупреждение о том, что не используется переменная, перед которой стоит знак подчеркивания.</target>
        </trans-unit>
        <trans-unit id="e6c5079a1585dd8c6aa581475ab7d948402fef68" translate="yes" xml:space="preserve">
          <source>Here we have an iterator &lt;code&gt;results&lt;/code&gt; over &lt;code&gt;Result&amp;lt;bool, ()&amp;gt;&lt;/code&gt;. Hence, &lt;code&gt;results.collect()&lt;/code&gt; can return any type implementing &lt;code&gt;FromIterator&amp;lt;Result&amp;lt;bool, ()&amp;gt;&amp;gt;&lt;/code&gt;. On the other hand, the &lt;code&gt;?&lt;/code&gt; operator can accept any type implementing &lt;code&gt;Try&lt;/code&gt;.</source>
          <target state="translated">Здесь мы имеем итератор &lt;code&gt;results&lt;/code&gt; над &lt;code&gt;Result&amp;lt;bool, ()&amp;gt;&lt;/code&gt; . Следовательно, &lt;code&gt;results.collect()&lt;/code&gt; может возвращать любой тип, реализующий &lt;code&gt;FromIterator&amp;lt;Result&amp;lt;bool, ()&amp;gt;&amp;gt;&lt;/code&gt; . С другой стороны &lt;code&gt;?&lt;/code&gt; оператор может принимать любой тип, реализующий &lt;code&gt;Try&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb5b6fe6a43391cbaff0a797a1749d4999cf682c" translate="yes" xml:space="preserve">
          <source>Here we have declared a string literal, also known as a string slice. String literals have a static lifetime, which means the string &lt;code&gt;hello_world&lt;/code&gt; is guaranteed to be valid for the duration of the entire program. We can explicitly specify &lt;code&gt;hello_world&lt;/code&gt;'s lifetime as well:</source>
          <target state="translated">Здесь мы объявили строковый литерал, также известный как строковый срез. Строковые литералы имеют статическое время жизни, что означает, что строка &lt;code&gt;hello_world&lt;/code&gt; гарантированно будет действительна на протяжении всей программы. Мы также можем явно указать &lt;code&gt;hello_world&lt;/code&gt; жизни hello_world :</target>
        </trans-unit>
        <trans-unit id="4f6025ae753da089e1d8586a3532b960124e6dc6" translate="yes" xml:space="preserve">
          <source>Here we have used the &lt;code&gt;continue&lt;/code&gt; keyword incorrectly. As we have seen above that &lt;code&gt;continue&lt;/code&gt; pointing to a labeled block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a5e69251fb02d97a8da5895df070cb741e7a14" translate="yes" xml:space="preserve">
          <source>Here we see that &lt;code&gt;flatten()&lt;/code&gt; does not perform a &quot;deep&quot; flatten. Instead, only one level of nesting is removed. That is, if you &lt;code&gt;flatten()&lt;/code&gt; a three-dimensional array the result will be two-dimensional and not one-dimensional. To get a one-dimensional structure, you have to &lt;code&gt;flatten()&lt;/code&gt; again.</source>
          <target state="translated">Здесь мы видим, что &lt;code&gt;flatten()&lt;/code&gt; не выполняет &amp;laquo;глубокого&amp;raquo; сглаживания. Вместо этого удаляется только один уровень вложенности. То есть, если вы &lt;code&gt;flatten()&lt;/code&gt; трехмерный массив, результат будет двумерным, а не одномерным. Чтобы получить одномерную структуру, вам нужно снова &lt;code&gt;flatten()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72ccb25410f6e8d0ac401f0e115875ab4db2e28c" translate="yes" xml:space="preserve">
          <source>Here we tell Rust that when the result is &lt;code&gt;Ok&lt;/code&gt;, return the inner &lt;code&gt;file&lt;/code&gt; value out of the &lt;code&gt;Ok&lt;/code&gt; variant, and we then assign that file handle value to the variable &lt;code&gt;f&lt;/code&gt;. After the &lt;code&gt;match&lt;/code&gt;, we can use the file handle for reading or writing.</source>
          <target state="translated">Здесь мы говорим Rust, что когда результат &lt;code&gt;Ok&lt;/code&gt; , вернуть внутреннее значение &lt;code&gt;file&lt;/code&gt; из варианта &lt;code&gt;Ok&lt;/code&gt; , а затем мы присваиваем это значение дескриптора файла переменной &lt;code&gt;f&lt;/code&gt; . После &lt;code&gt;match&lt;/code&gt; мы можем использовать дескриптор файла для чтения или записи.</target>
        </trans-unit>
        <trans-unit id="80012795e5bb9f7fa353370133e88ca78ecd6ec8" translate="yes" xml:space="preserve">
          <source>Here we&amp;rsquo;re calling the &lt;code&gt;hello&lt;/code&gt; function with the argument &lt;code&gt;&amp;amp;m&lt;/code&gt;, which is a reference to a &lt;code&gt;MyBox&amp;lt;String&amp;gt;&lt;/code&gt; value. Because we implemented the &lt;code&gt;Deref&lt;/code&gt; trait on &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt; in Listing 15-10, Rust can turn &lt;code&gt;&amp;amp;MyBox&amp;lt;String&amp;gt;&lt;/code&gt; into &lt;code&gt;&amp;amp;String&lt;/code&gt; by calling &lt;code&gt;deref&lt;/code&gt;. The standard library provides an implementation of &lt;code&gt;Deref&lt;/code&gt; on &lt;code&gt;String&lt;/code&gt; that returns a string slice, and this is in the API documentation for &lt;code&gt;Deref&lt;/code&gt;. Rust calls &lt;code&gt;deref&lt;/code&gt; again to turn the &lt;code&gt;&amp;amp;String&lt;/code&gt; into &lt;code&gt;&amp;amp;str&lt;/code&gt;, which matches the &lt;code&gt;hello&lt;/code&gt; function&amp;rsquo;s definition.</source>
          <target state="translated">Здесь мы вызываем функцию &lt;code&gt;hello&lt;/code&gt; с аргументом &lt;code&gt;&amp;amp;m&lt;/code&gt; , который является ссылкой на значение &lt;code&gt;MyBox&amp;lt;String&amp;gt;&lt;/code&gt; . Поскольку в листинге 15-10 мы реализовали &lt;code&gt;Deref&lt;/code&gt; для &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt; , Rust может превратить &lt;code&gt;&amp;amp;MyBox&amp;lt;String&amp;gt;&lt;/code&gt; в &lt;code&gt;&amp;amp;String&lt;/code&gt; , вызвав &lt;code&gt;deref&lt;/code&gt; . Стандартная библиотека предоставляет реализацию &lt;code&gt;Deref&lt;/code&gt; on &lt;code&gt;String&lt;/code&gt; , которая возвращает фрагмент строки, и это находится в документации API для &lt;code&gt;Deref&lt;/code&gt; . Rust снова вызывает &lt;code&gt;deref&lt;/code&gt; , чтобы превратить &lt;code&gt;&amp;amp;String&lt;/code&gt; в &lt;code&gt;&amp;amp;str&lt;/code&gt; , что соответствует &lt;code&gt;hello&lt;/code&gt; определение функции.</target>
        </trans-unit>
        <trans-unit id="466e3552c39fe3a92c2d4c054173a56d883575cc" translate="yes" xml:space="preserve">
          <source>Here we&amp;rsquo;ve defined a struct and named it &lt;code&gt;Rectangle&lt;/code&gt;. Inside the curly brackets, we defined the fields as &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;, both of which have type &lt;code&gt;u32&lt;/code&gt;. Then in &lt;code&gt;main&lt;/code&gt;, we created a particular instance of &lt;code&gt;Rectangle&lt;/code&gt; that has a width of 30 and a height of 50.</source>
          <target state="translated">Здесь мы определили структуру и назвали ее &lt;code&gt;Rectangle&lt;/code&gt; . Внутри фигурных скобок мы определили поля как &lt;code&gt;width&lt;/code&gt; и &lt;code&gt;height&lt;/code&gt; , оба из которых имеют тип &lt;code&gt;u32&lt;/code&gt; . Затем в &lt;code&gt;main&lt;/code&gt; мы создали конкретный экземпляр &lt;code&gt;Rectangle&lt;/code&gt; , который имеет ширину 30 и высоту 50.</target>
        </trans-unit>
        <trans-unit id="817f9efff3a295f34cca74e6a4819cd4626be8b2" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a simple comment:</source>
          <target state="translated">Вот простой комментарий:</target>
        </trans-unit>
        <trans-unit id="539936e83a01369f912b07f9a46070e22c533c8a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a small programming problem: write a function that takes a string and returns the first word it finds in that string. If the function doesn&amp;rsquo;t find a space in the string, the whole string must be one word, so the entire string should be returned.</source>
          <target state="translated">Вот небольшая проблема программирования: напишите функцию, которая принимает строку и возвращает первое слово, которое она находит в этой строке. Если функция не находит пробела в строке, вся строка должна состоять из одного слова, поэтому должна быть возвращена вся строка.</target>
        </trans-unit>
        <trans-unit id="7f3b7e87f399f43770545cc13990ab6cc8dd6c83" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a constant declaration where the constant&amp;rsquo;s name is &lt;code&gt;MAX_POINTS&lt;/code&gt; and its value is set to 100,000. (Rust&amp;rsquo;s naming convention for constants is to use all uppercase with underscores between words, and underscores can be inserted in numeric literals to improve readability):</source>
          <target state="translated">Вот пример объявления константы, где имя константы &lt;code&gt;MAX_POINTS&lt;/code&gt; , а ее значение установлено на 100000. (Соглашение Rust об именах констант заключается в использовании всего верхнего регистра с подчеркиванием между словами, а подчеркивания можно вставлять в числовые литералы для улучшения читаемости):</target>
        </trans-unit>
        <trans-unit id="0e399b9c3b58dba78ca66c0c45518f8657e4f783" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how the development and release process works: let&amp;rsquo;s assume that the Rust team is working on the release of Rust 1.5. That release happened in December of 2015, but it will provide us with realistic version numbers. A new feature is added to Rust: a new commit lands on the &lt;code&gt;master&lt;/code&gt; branch. Each night, a new nightly version of Rust is produced. Every day is a release day, and these releases are created by our release infrastructure automatically. So as time passes, our releases look like this, once a night:</source>
          <target state="translated">Вот пример того, как работает процесс разработки и выпуска: предположим, что команда Rust работает над выпуском Rust 1.5. Этот выпуск произошел в декабре 2015 года, но он предоставит нам реалистичные номера версий. В Rust добавлена ​​новая функция: новый коммит попадает в &lt;code&gt;master&lt;/code&gt; ветку. Каждую ночь создается новая ночная версия Rust. Каждый день - это день выпуска, и эти выпуски создаются нашей инфраструктурой выпуска автоматически. По прошествии времени наши релизы выглядят так, раз в ночь:</target>
        </trans-unit>
        <trans-unit id="dd2c057fc04f01fae93788be5795a76d18a55fe9" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of the &lt;code&gt;clone&lt;/code&gt; method in action:</source>
          <target state="translated">Вот пример использования метода &lt;code&gt;clone&lt;/code&gt; в действии:</target>
        </trans-unit>
        <trans-unit id="01162de636320bfb3aac73f8ee64a4ca8f8b3f36" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that shows floating-point numbers in action:</source>
          <target state="translated">Вот пример, показывающий в действии числа с плавающей запятой:</target>
        </trans-unit>
        <trans-unit id="b756692957834549ddc1e80ed843e1c05120a8e7" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how it works: when you call a method with &lt;code&gt;object.something()&lt;/code&gt;, Rust automatically adds in &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;&amp;amp;mut&lt;/code&gt;, or &lt;code&gt;*&lt;/code&gt; so &lt;code&gt;object&lt;/code&gt; matches the signature of the method. In other words, the following are the same:</source>
          <target state="translated">Вот как это работает: когда вы вызываете метод с помощью &lt;code&gt;object.something()&lt;/code&gt; , Rust автоматически добавляет &lt;code&gt;&amp;amp;&lt;/code&gt; , &lt;code&gt;&amp;amp;mut&lt;/code&gt; или &lt;code&gt;*&lt;/code&gt; , чтобы &lt;code&gt;object&lt;/code&gt; соответствовал сигнатуре метода. Другими словами, это то же самое:</target>
        </trans-unit>
        <trans-unit id="bbfc2aa9173a426f43e60848a0174bac37b702fe" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the compiler error:</source>
          <target state="translated">Вот ошибка компилятора:</target>
        </trans-unit>
        <trans-unit id="7ba4bf6763c0003ca703ce8f7299229f35cbda9a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the error:</source>
          <target state="translated">Вот ошибка:</target>
        </trans-unit>
        <trans-unit id="916eb038e9d9b0f05a6d2dec1a88d2849aef616b" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the full code for reference:</source>
          <target state="translated">Вот полный код для справки:</target>
        </trans-unit>
        <trans-unit id="815ea8397604a0309cd918e79463e69ce092e31e" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the resulting compilation error:</source>
          <target state="translated">Вот итоговая ошибка компиляции:</target>
        </trans-unit>
        <trans-unit id="0221cef214e9504c84ca1c9204c7ee34f36785b0" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the scenario we&amp;rsquo;ll test: we&amp;rsquo;ll create a library that tracks a value against a maximum value and sends messages based on how close to the maximum value the current value is. This library could be used to keep track of a user&amp;rsquo;s quota for the number of API calls they&amp;rsquo;re allowed to make, for example.</source>
          <target state="translated">Вот сценарий, который мы протестируем: мы создадим библиотеку, которая отслеживает значение по отношению к максимальному значению и отправляет сообщения в зависимости от того, насколько близко к максимальному значению текущее значение. Эту библиотеку можно использовать, например, для отслеживания квоты пользователя на количество разрешенных им вызовов API.</target>
        </trans-unit>
        <trans-unit id="3d29162aaec04ffdbb58bf12aa825c48d5666dd6" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what the countdown would look like using a &lt;code&gt;for&lt;/code&gt; loop and another method we&amp;rsquo;ve not yet talked about, &lt;code&gt;rev&lt;/code&gt;, to reverse the range:</source>
          <target state="translated">Вот как будет выглядеть обратный отсчет с использованием цикла &lt;code&gt;for&lt;/code&gt; и другого метода, о котором мы еще не говорили, &lt;code&gt;rev&lt;/code&gt; , для изменения диапазона:</target>
        </trans-unit>
        <trans-unit id="d3bb7457d5469dff80002a12eb2b6537482105f8" translate="yes" xml:space="preserve">
          <source>Here's an example of a program which exemplifies the three cases outlined above:</source>
          <target state="translated">Приведем пример программы,иллюстрирующий три вышеописанных случая:</target>
        </trans-unit>
        <trans-unit id="8f4d98d4c0a8996c7a0518c8611a7d795ca5c7fb" translate="yes" xml:space="preserve">
          <source>Here's an example of a struct that has this problem:</source>
          <target state="translated">Вот пример структуры,у которой есть эта проблема:</target>
        </trans-unit>
        <trans-unit id="38707ff87f1d5297f1ba77c802780450fd07e571" translate="yes" xml:space="preserve">
          <source>Here's an example of how a collection might make use of &lt;code&gt;needs_drop&lt;/code&gt;:</source>
          <target state="translated">Вот пример того, как коллекция может использовать &lt;code&gt;needs_drop&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6b4165c575ea75c83f4faaec0830fc7c979ed3b7" translate="yes" xml:space="preserve">
          <source>Here's an example of some in-progress code. We have a trait &lt;code&gt;Foo&lt;/code&gt;:</source>
          <target state="translated">Вот пример незавершенного кода. У нас есть черта &lt;code&gt;Foo&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f441ef09b0ea3aff9bb06d2bb0621baad2037ee9" translate="yes" xml:space="preserve">
          <source>Here's an example of this error:</source>
          <target state="translated">Вот пример этой ошибки:</target>
        </trans-unit>
        <trans-unit id="c9ee387ebc736d2db87034681c5da1089287c37d" translate="yes" xml:space="preserve">
          <source>Here's an example where you want to sort people by height only, disregarding &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;:</source>
          <target state="translated">Вот пример, в котором вы хотите отсортировать людей только по росту, без учета &lt;code&gt;id&lt;/code&gt; и &lt;code&gt;name&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="51e85e4e8113fb3e1f07e1727e78d73f5f0043e6" translate="yes" xml:space="preserve">
          <source>Here's an example:</source>
          <target state="translated">Вот пример:</target>
        </trans-unit>
        <trans-unit id="4cce1c09bcbbaec9487020ee6e7f8025e34bed6b" translate="yes" xml:space="preserve">
          <source>Here's another example but here we do not try and return an expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52eb68597e531c606446cb2bd5c17dccc5e369fd" translate="yes" xml:space="preserve">
          <source>Here's another example that will fail:</source>
          <target state="translated">Вот еще один пример,который провалится:</target>
        </trans-unit>
        <trans-unit id="cb729976f0325910542c6a857a3758115eda6f00" translate="yes" xml:space="preserve">
          <source>Here's one example of this error:</source>
          <target state="translated">Вот один пример этой ошибки:</target>
        </trans-unit>
        <trans-unit id="4919036b58ea25eeee47e5a5bbcefebd8f5446fd" translate="yes" xml:space="preserve">
          <source>Here's the same example, but with &lt;a href=&quot;#method.filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Вот тот же пример, но с &lt;a href=&quot;#method.filter&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#method.map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="f461dd8cfe66dce3c71bb1a0db34025a57dc2b4e" translate="yes" xml:space="preserve">
          <source>Here's the same example, but with &lt;a href=&quot;trait.iterator#method.filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.iterator#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b538038816d2b9d80e3095023dd492b1ae3c134a" translate="yes" xml:space="preserve">
          <source>Here's the same example, but with &lt;a href=&quot;trait.iterator#method.take_while&quot;&gt;&lt;code&gt;take_while&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.iterator#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3adc3a6ab8335913c0c03d10dd56aa70986ccdbc" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;&amp;amp;mut fancy&lt;/code&gt; is mutable, but &lt;code&gt;&amp;amp;(&amp;amp;mut fancy)&lt;/code&gt; is not. Creating an immutable reference to a value borrows it immutably. There can be multiple references of type &lt;code&gt;&amp;amp;(&amp;amp;mut T)&lt;/code&gt; that point to the same value, so they must be immutable to prevent multiple mutable references to the same value.</source>
          <target state="translated">Здесь &lt;code&gt;&amp;amp;mut fancy&lt;/code&gt; является изменяемым, а &lt;code&gt;&amp;amp;(&amp;amp;mut fancy)&lt;/code&gt; - нет. Создание неизменной ссылки на значение неизменно заимствует ее. Может быть несколько ссылок типа &lt;code&gt;&amp;amp;(&amp;amp;mut T)&lt;/code&gt; которые указывают на одно и то же значение, поэтому они должны быть неизменными, чтобы предотвратить множественные изменяемые ссылки на одно и то же значение.</target>
        </trans-unit>
        <trans-unit id="ae9903eacaebe1bfadd3100f5d35d502f8c50279" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;Grams2&lt;/code&gt; is a not equivalent to &lt;code&gt;Grams&lt;/code&gt; -- the former transparently wraps a (non-transparent) struct containing a single float, while &lt;code&gt;Grams&lt;/code&gt; is a transparent wrapper around a float. This can make a difference for the ABI.</source>
          <target state="translated">Здесь &lt;code&gt;Grams2&lt;/code&gt; не эквивалент &lt;code&gt;Grams&lt;/code&gt; - первый прозрачно обертывает (непрозрачную) структуру, содержащую один float, а &lt;code&gt;Grams&lt;/code&gt; - это прозрачная оболочка вокруг float. Это может иметь значение для ABI.</target>
        </trans-unit>
        <trans-unit id="dc33c2bfb4ee352bfa1ddf50a16705d99896734f" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;demo&lt;/code&gt; tries to borrow the string data held within its argument &lt;code&gt;s&lt;/code&gt; and then return that borrow. However, &lt;code&gt;S&lt;/code&gt; is declared as implementing &lt;code&gt;Drop&lt;/code&gt;.</source>
          <target state="translated">Здесь &lt;code&gt;demo&lt;/code&gt; пытается заимствовать строковые данные, содержащиеся в его аргументе &lt;code&gt;s&lt;/code&gt; , а затем вернуть это заимствование. Однако &lt;code&gt;S&lt;/code&gt; объявлен как реализующий &lt;code&gt;Drop&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d42c53fe9a57832c14dca225308392012e6122d1" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;fancy_num&lt;/code&gt; is borrowed by &lt;code&gt;fancy_ref&lt;/code&gt; and so cannot be moved into the closure &lt;code&gt;x&lt;/code&gt;. There is no way to move a value into a closure while it is borrowed, as that would invalidate the borrow.</source>
          <target state="translated">Здесь &lt;code&gt;fancy_num&lt;/code&gt; заимствовано &lt;code&gt;fancy_ref&lt;/code&gt; , поэтому его нельзя переместить в замыкание &lt;code&gt;x&lt;/code&gt; . Невозможно переместить значение в закрытие, пока оно заимствовано, так как это сделало бы заем недействительным.</target>
        </trans-unit>
        <trans-unit id="125b181d950db988334868421de4a90fab534474" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;first&lt;/code&gt; has type &lt;code&gt;A&lt;/code&gt;, referring to &lt;code&gt;to_vec&lt;/code&gt;'s &lt;code&gt;A&lt;/code&gt; type parameter; and &lt;code&gt;rest&lt;/code&gt; has type &lt;code&gt;Vec&amp;lt;A&amp;gt;&lt;/code&gt;, a vector with element type &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">Здесь &lt;code&gt;first&lt;/code&gt; имеет тип &lt;code&gt;A&lt;/code&gt; , со ссылкой на &lt;code&gt;to_vec&lt;/code&gt; &amp;laquo;ы параметра типа; а &lt;code&gt;rest&lt;/code&gt; имеет тип &lt;code&gt;Vec&amp;lt;A&amp;gt;&lt;/code&gt; , вектор с элементом типа &lt;code&gt;A&lt;/code&gt; . &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="843f8d3cb9b3a29d042bd0b638e62192879181c8" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;i32&lt;/code&gt; is the type of each element. After the semicolon, the number &lt;code&gt;5&lt;/code&gt; indicates the array contains five elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5a4c41f4c7ffd30b5c670cb408c350a9013b94" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;i32&lt;/code&gt; is the type of each element. After the semicolon, the number &lt;code&gt;5&lt;/code&gt; indicates the element contains five items.</source>
          <target state="translated">Здесь &lt;code&gt;i32&lt;/code&gt; - это тип каждого элемента. Число &lt;code&gt;5&lt;/code&gt; после точки с запятой указывает на то, что элемент содержит пять элементов.</target>
        </trans-unit>
        <trans-unit id="1068c0619a68aa52935f67e1c63f9f6ef1422570" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;s&lt;/code&gt; will be a &lt;code&gt;&amp;amp;str&lt;/code&gt; that contains the first 4 bytes of the string. Earlier, we mentioned that each of these characters was 2 bytes, which means &lt;code&gt;s&lt;/code&gt; will be &lt;code&gt;Зд&lt;/code&gt;.</source>
          <target state="translated">Здесь &lt;code&gt;s&lt;/code&gt; будет &lt;code&gt;&amp;amp;str&lt;/code&gt; , содержащим первые 4 байта строки. Ранее мы упоминали, что каждый из этих символов был 2 байта, что означает, что &lt;code&gt;s&lt;/code&gt; будет &lt;code&gt;Зд&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75b866d15247e93817fc99798a57f0ab2950be56" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;score&lt;/code&gt; will have the value that&amp;rsquo;s associated with the Blue team, and the result will be &lt;code&gt;Some(&amp;amp;10)&lt;/code&gt;. The result is wrapped in &lt;code&gt;Some&lt;/code&gt; because &lt;code&gt;get&lt;/code&gt; returns an &lt;code&gt;Option&amp;lt;&amp;amp;V&amp;gt;&lt;/code&gt;; if there&amp;rsquo;s no value for that key in the hash map, &lt;code&gt;get&lt;/code&gt; will return &lt;code&gt;None&lt;/code&gt;. The program will need to handle the &lt;code&gt;Option&lt;/code&gt; in one of the ways that we covered in Chapter 6.</source>
          <target state="translated">Здесь &lt;code&gt;score&lt;/code&gt; будет иметь значение, связанное с синей командой, а результатом будет &lt;code&gt;Some(&amp;amp;10)&lt;/code&gt; . Результат заключен в &lt;code&gt;Some&lt;/code&gt; , потому что &lt;code&gt;get&lt;/code&gt; возвращает &lt;code&gt;Option&amp;lt;&amp;amp;V&amp;gt;&lt;/code&gt; ; если для этого ключа в хэш-карте нет значения, &lt;code&gt;get&lt;/code&gt; вернет &lt;code&gt;None&lt;/code&gt; . Программа должна будет обработать &lt;code&gt;Option&lt;/code&gt; одним из способов, которые мы рассмотрели в главе 6.</target>
        </trans-unit>
        <trans-unit id="8bd05f4a31a90f3b6414a315addec81f40aa24ad" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;x&lt;/code&gt; has the lifetime &lt;code&gt;'b&lt;/code&gt;, which in this case is larger than &lt;code&gt;'a&lt;/code&gt;. This means &lt;code&gt;r&lt;/code&gt; can reference &lt;code&gt;x&lt;/code&gt; because Rust knows that the reference in &lt;code&gt;r&lt;/code&gt; will always be valid while &lt;code&gt;x&lt;/code&gt; is valid.</source>
          <target state="translated">Здесь &lt;code&gt;x&lt;/code&gt; имеет время жизни &lt;code&gt;'b&lt;/code&gt; , которое в данном случае больше &lt;code&gt;'a&lt;/code&gt; . Это означает, что &lt;code&gt;r&lt;/code&gt; может ссылаться на &lt;code&gt;x&lt;/code&gt; , потому что Rust знает, что ссылка в &lt;code&gt;r&lt;/code&gt; всегда действительна, пока действительна &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e10c369ea788e27a00713fc168a85308c89bf1c9" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;y&lt;/code&gt; is bound by-value in one case and by-reference in the other.</source>
          <target state="translated">Здесь &lt;code&gt;y&lt;/code&gt; привязано по значению в одном случае и по ссылке в другом.</target>
        </trans-unit>
        <trans-unit id="7d5607669abd7c37655a986b9a8d2fca66769741" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;y&lt;/code&gt; is bound to the contents of the &lt;code&gt;Some&lt;/code&gt; and can be used within the block corresponding to the match arm. However, in case &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, we have not specified what &lt;code&gt;y&lt;/code&gt; is, and the block will use a nonexistent variable.</source>
          <target state="translated">Здесь &lt;code&gt;y&lt;/code&gt; привязан к содержимому &lt;code&gt;Some&lt;/code&gt; и может использоваться в блоке, соответствующем руке совпадения. Однако в случае, если &lt;code&gt;x&lt;/code&gt; равен &lt;code&gt;None&lt;/code&gt; , мы не указали, что такое &lt;code&gt;y&lt;/code&gt; , и блок будет использовать несуществующую переменную.</target>
        </trans-unit>
        <trans-unit id="a792c6d2920136f42b2c0328d50b11b4b1f68c36" translate="yes" xml:space="preserve">
          <source>Here, all types implementing &lt;code&gt;Foo&lt;/code&gt; must have a method &lt;code&gt;foo&amp;lt;T&amp;gt;(x: T)&lt;/code&gt; which can take any type &lt;code&gt;T&lt;/code&gt;. However, in the &lt;code&gt;impl&lt;/code&gt; for &lt;code&gt;bool&lt;/code&gt;, we have added an extra bound that &lt;code&gt;T&lt;/code&gt; is &lt;code&gt;Copy&lt;/code&gt;, which isn't compatible with the original trait.</source>
          <target state="translated">Здесь, все типы , реализующие &lt;code&gt;Foo&lt;/code&gt; должны иметь метод &lt;code&gt;foo&amp;lt;T&amp;gt;(x: T)&lt;/code&gt; , которые могут принимать любой тип &lt;code&gt;T&lt;/code&gt; . Однако в &lt;code&gt;impl&lt;/code&gt; для &lt;code&gt;bool&lt;/code&gt; мы добавили дополнительную границу, что &lt;code&gt;T&lt;/code&gt; равно &lt;code&gt;Copy&lt;/code&gt; , что несовместимо с исходной характеристикой.</target>
        </trans-unit>
        <trans-unit id="e86bf62ea38db4534581f774aebf9c330891b88f" translate="yes" xml:space="preserve">
          <source>Here, even though &lt;code&gt;x&lt;/code&gt; is not one of the parameters of &lt;code&gt;equal_to_x&lt;/code&gt;, the &lt;code&gt;equal_to_x&lt;/code&gt; closure is allowed to use the &lt;code&gt;x&lt;/code&gt; variable that&amp;rsquo;s defined in the same scope that &lt;code&gt;equal_to_x&lt;/code&gt; is defined in.</source>
          <target state="translated">Здесь, даже несмотря на то, что &lt;code&gt;x&lt;/code&gt; не является одним из параметров &lt;code&gt;equal_to_x&lt;/code&gt; , замыканию &lt;code&gt;equal_to_x&lt;/code&gt; разрешено использовать переменную &lt;code&gt;x&lt;/code&gt; , которая определена в той же области, в &lt;code&gt;equal_to_x&lt;/code&gt; определено equal_to_x .</target>
        </trans-unit>
        <trans-unit id="3efa2682153806eb1dbead68e3ef30ae590912ca" translate="yes" xml:space="preserve">
          <source>Here, even though we&amp;rsquo;ve specified a lifetime parameter &lt;code&gt;'a&lt;/code&gt; for the return type, this implementation will fail to compile because the return value lifetime is not related to the lifetime of the parameters at all. Here is the error message we get:</source>
          <target state="translated">Здесь, несмотря на то, что мы указали параметр времени жизни &lt;code&gt;'a&lt;/code&gt; для типа возвращаемого значения, эта реализация не будет скомпилирована, потому что время жизни возвращаемого значения вообще не связано со временем жизни параметров. Вот сообщение об ошибке, которое мы получаем:</target>
        </trans-unit>
        <trans-unit id="da2b63d2db9c34aa4fad7b681faf1cae153440c5" translate="yes" xml:space="preserve">
          <source>Here, our response has a status line with status code 404 and the reason phrase &lt;code&gt;NOT FOUND&lt;/code&gt;. We&amp;rsquo;re still not returning headers, and the body of the response will be the HTML in the file &lt;em&gt;404.html&lt;/em&gt;. You&amp;rsquo;ll need to create a &lt;em&gt;404.html&lt;/em&gt; file next to &lt;em&gt;hello.html&lt;/em&gt; for the error page; again feel free to use any HTML you want or use the example HTML in Listing 20-8.</source>
          <target state="translated">Здесь наш ответ содержит строку состояния с кодом состояния 404 и фразой причины &lt;code&gt;NOT FOUND&lt;/code&gt; . Мы по-прежнему не возвращаем заголовки, и основной частью ответа будет HTML- &lt;em&gt;код&lt;/em&gt; из файла &lt;em&gt;404.html&lt;/em&gt; . Вам нужно создать файл &lt;em&gt;404.html&lt;/em&gt; рядом с &lt;em&gt;hello.html&lt;/em&gt; для страницы с ошибкой; снова не стесняйтесь использовать любой HTML, какой хотите, или используйте пример HTML из Листинга 20-8.</target>
        </trans-unit>
        <trans-unit id="a2749e5eb8656bede400f4e0b8d184580a4d9adf" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;BitAndAssign&lt;/code&gt; trait is implemented for a wrapper around &lt;code&gt;Vec&amp;lt;bool&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Здесь свойство &lt;code&gt;BitAndAssign&lt;/code&gt; реализовано для оболочки вокруг &lt;code&gt;Vec&amp;lt;bool&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73314800534c2c9290a895f1b2e09cd5c74b13fa" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;nothing_is_true&lt;/code&gt; method takes the ownership of &lt;code&gt;self&lt;/code&gt;. However, &lt;code&gt;self&lt;/code&gt; cannot be moved because &lt;code&gt;.borrow()&lt;/code&gt; only provides an &lt;code&gt;&amp;amp;TheDarkKnight&lt;/code&gt;, which is a borrow of the content owned by the &lt;code&gt;RefCell&lt;/code&gt;. To fix this error, you have three choices:</source>
          <target state="translated">Здесь метод &lt;code&gt;nothing_is_true&lt;/code&gt; становится владельцем &lt;code&gt;self&lt;/code&gt; . Однако &lt;code&gt;self&lt;/code&gt; нельзя переместить, потому что &lt;code&gt;.borrow()&lt;/code&gt; предоставляет только &lt;code&gt;&amp;amp;TheDarkKnight&lt;/code&gt; , который является заимствованием содержимого, принадлежащего &lt;code&gt;RefCell&lt;/code&gt; . Чтобы исправить эту ошибку, у вас есть три варианта:</target>
        </trans-unit>
        <trans-unit id="9ecdeb34514236dc334d979e1fa6dac1a4f47ca1" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;yield&lt;/code&gt; keyword is used in an &lt;code&gt;async&lt;/code&gt; block, which is not yet supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f1ad21d4790c6fa776cb2d79a7da13085bbb0b" translate="yes" xml:space="preserve">
          <source>Here, the code counts up through the elements in the array. It starts at index &lt;code&gt;0&lt;/code&gt;, and then loops until it reaches the final index in the array (that is, when &lt;code&gt;index &amp;lt; 5&lt;/code&gt; is no longer true). Running this code will print every element in the array:</source>
          <target state="translated">Здесь код выполняет подсчет элементов массива. Он начинается с индекса &lt;code&gt;0&lt;/code&gt; , а затем повторяется, пока не достигнет последнего индекса в массиве (то есть, когда &lt;code&gt;index &amp;lt; 5&lt;/code&gt; больше не истинно). Запуск этого кода распечатает каждый элемент массива:</target>
        </trans-unit>
        <trans-unit id="f6e9fdb531b1a1a673e70ab403c2068ef72bf3e1" translate="yes" xml:space="preserve">
          <source>Here, the expression &lt;code&gt;&amp;amp;foo()&lt;/code&gt; is borrowing the expression &lt;code&gt;foo()&lt;/code&gt;. As &lt;code&gt;foo()&lt;/code&gt; is a call to a function, and not the name of a variable, this creates a &lt;strong&gt;temporary&lt;/strong&gt; -- that temporary stores the return value from &lt;code&gt;foo()&lt;/code&gt; so that it can be borrowed. You could imagine that &lt;code&gt;let p = bar(&amp;amp;foo());&lt;/code&gt; is equivalent to this:</source>
          <target state="translated">Здесь выражение &lt;code&gt;&amp;amp;foo()&lt;/code&gt; заимствует выражение &lt;code&gt;foo()&lt;/code&gt; . Поскольку &lt;code&gt;foo()&lt;/code&gt; - это вызов функции, а не имя переменной, это создает &lt;strong&gt;временное&lt;/strong&gt; - которое временно сохраняет возвращаемое значение из &lt;code&gt;foo()&lt;/code&gt; чтобы его можно было заимствовать. Вы можете представить, что &lt;code&gt;let p = bar(&amp;amp;foo());&lt;/code&gt; эквивалентно этому:</target>
        </trans-unit>
        <trans-unit id="408c7fbfdfe961fb58eba63dc21b905f34fe6b5c" translate="yes" xml:space="preserve">
          <source>Here, the function &lt;code&gt;eat&lt;/code&gt; takes ownership of &lt;code&gt;x&lt;/code&gt;. However, &lt;code&gt;x&lt;/code&gt; cannot be moved because the borrow to &lt;code&gt;_ref_to_val&lt;/code&gt; needs to last till the function &lt;code&gt;borrow&lt;/code&gt;. To fix that you can do a few different things:</source>
          <target state="translated">Здесь функция &lt;code&gt;eat&lt;/code&gt; становится владельцем &lt;code&gt;x&lt;/code&gt; . Однако &lt;code&gt;x&lt;/code&gt; нельзя переместить, потому что заимствование в &lt;code&gt;_ref_to_val&lt;/code&gt; должно длиться до &lt;code&gt;borrow&lt;/code&gt; функции . Чтобы исправить это, вы можете сделать несколько разных вещей:</target>
        </trans-unit>
        <trans-unit id="34b4fc7688b4cc55dbce35a5cbba7cf5aa481597" translate="yes" xml:space="preserve">
          <source>Here, the function &lt;code&gt;foo&lt;/code&gt; returns a value of type &lt;code&gt;Cell&amp;lt;&amp;amp;'x u32&amp;gt;&lt;/code&gt;, which references the lifetime &lt;code&gt;'x&lt;/code&gt;. However, the return type is declared as &lt;code&gt;impl Trait&amp;lt;'y&amp;gt;&lt;/code&gt; -- this indicates that &lt;code&gt;foo&lt;/code&gt; returns &quot;some type that implements &lt;code&gt;Trait&amp;lt;'y&amp;gt;&lt;/code&gt;&quot;, but it also indicates that the return type &lt;strong&gt;only captures data referencing the lifetime &lt;code&gt;'y&lt;/code&gt;&lt;/strong&gt;. In this case, though, we are referencing data with lifetime &lt;code&gt;'x&lt;/code&gt;, so this function is in error.</source>
          <target state="translated">Здесь функция &lt;code&gt;foo&lt;/code&gt; возвращает значение типа &lt;code&gt;Cell&amp;lt;&amp;amp;'x u32&amp;gt;&lt;/code&gt; , которое ссылается на время жизни &lt;code&gt;'x&lt;/code&gt; . Однако тип возвращаемого значения объявлен как &lt;code&gt;impl Trait&amp;lt;'y&amp;gt;&lt;/code&gt; - это указывает на то, что &lt;code&gt;foo&lt;/code&gt; возвращает &amp;laquo;некоторый тип, реализующий &lt;code&gt;Trait&amp;lt;'y&amp;gt;&lt;/code&gt; &amp;raquo;, но также указывает, что тип возврата &lt;strong&gt;только захватывает данные, относящиеся к времени жизни &lt;code&gt;'y&lt;/code&gt; &lt;/strong&gt; . Однако в этом случае мы ссылаемся на данные с временем жизни &lt;code&gt;'x&lt;/code&gt; , поэтому эта функция ошибочна.</target>
        </trans-unit>
        <trans-unit id="89055a364d466030b4b32dbb99ee9d2965691a35" translate="yes" xml:space="preserve">
          <source>Here, the loop never ends, so &lt;code&gt;!&lt;/code&gt; is the value of the expression. However, this wouldn&amp;rsquo;t be true if we included a &lt;code&gt;break&lt;/code&gt;, because the loop would terminate when it got to the &lt;code&gt;break&lt;/code&gt;.</source>
          <target state="translated">Здесь цикл никогда не заканчивается, так что &lt;code&gt;!&lt;/code&gt; - значение выражения. Однако это было бы неверно, если бы мы включили &lt;code&gt;break&lt;/code&gt; , потому что цикл завершился бы, когда он дойдет до &lt;code&gt;break&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df47ee6ed5cabbf7215bb10c59a544458415fee2" translate="yes" xml:space="preserve">
          <source>Here, the problem is that a reference type like &lt;code&gt;&amp;amp;'a T&lt;/code&gt; is only valid if all the data in T outlives the lifetime &lt;code&gt;'a&lt;/code&gt;. But this impl as written is applicable to any lifetime &lt;code&gt;'a&lt;/code&gt; and any type &lt;code&gt;T&lt;/code&gt; -- we have no guarantee that &lt;code&gt;T&lt;/code&gt; outlives &lt;code&gt;'a&lt;/code&gt;. To fix this, you can add a where clause like &lt;code&gt;where T: 'a&lt;/code&gt;.</source>
          <target state="translated">Здесь проблема в том, что ссылочный тип, такой как &lt;code&gt;&amp;amp;'a T&lt;/code&gt; действителен только в том случае, если все данные в T переживают время жизни &lt;code&gt;'a&lt;/code&gt; . Но это подразумеваемое, как написано, применимо к любому времени жизни &lt;code&gt;'a&lt;/code&gt; и любому типу &lt;code&gt;T&lt;/code&gt; - у нас нет гарантии, что &lt;code&gt;T&lt;/code&gt; переживет &lt;code&gt;'a&lt;/code&gt; . Чтобы исправить это, вы можете добавить предложение where, например &lt;code&gt;where T: 'a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0ef28f4a5284b6e2516b2e042ed2f018d33a029" translate="yes" xml:space="preserve">
          <source>Here, the problem is that the compiler cannot be sure that the &lt;code&gt;'b&lt;/code&gt; lifetime will live longer than &lt;code&gt;'a&lt;/code&gt;, which should be mandatory in order to be sure that &lt;code&gt;Trait::Out&lt;/code&gt; will always have a reference pointing to an existing type. So in this case, we just need to tell the compiler than &lt;code&gt;'b&lt;/code&gt; must outlive &lt;code&gt;'a&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362d656c8582920eb1fa6e2f837dcd77621e2783" translate="yes" xml:space="preserve">
          <source>Here, the supertrait might have methods as follows:</source>
          <target state="translated">Здесь у супертрэта могут быть следующие методы:</target>
        </trans-unit>
        <trans-unit id="09d377b97ceff52f388bef9d69ecd4e08de82e8e" translate="yes" xml:space="preserve">
          <source>Here, the type of &lt;code&gt;bar&lt;/code&gt; isn't known; it could be a pointer to anything. Instead, specify a type for the pointer (preferably something that makes sense for the thing you're pointing to):</source>
          <target state="translated">Здесь тип &lt;code&gt;bar&lt;/code&gt; неизвестен; это может быть указатель на что угодно. Вместо этого укажите тип указателя (желательно то, что имеет смысл для того, на что вы указываете):</target>
        </trans-unit>
        <trans-unit id="6683d46fded95c67df0b49024b3446d80dd204a6" translate="yes" xml:space="preserve">
          <source>Here, the where clause &lt;code&gt;T: 'a&lt;/code&gt; that appears on the impl is not known to be satisfied on the struct. To make this example compile, you have to add a where-clause like &lt;code&gt;T: 'a&lt;/code&gt; to the struct definition:</source>
          <target state="translated">Здесь предложение where &lt;code&gt;T: 'a&lt;/code&gt; которое появляется в impl, не удовлетворяется в структуре. Чтобы этот пример компилировался, вы должны добавить предложение where, например &lt;code&gt;T: 'a&lt;/code&gt; к определению структуры:</target>
        </trans-unit>
        <trans-unit id="5f5bdb12ef17925552b810b20339fc4188e58923" translate="yes" xml:space="preserve">
          <source>Here, there's no need to allocate more memory inside the loop.</source>
          <target state="translated">Здесь нет необходимости выделять больше памяти внутри цикла.</target>
        </trans-unit>
        <trans-unit id="64f50e4beb0199dca819447bd86bfb2e950cfebb" translate="yes" xml:space="preserve">
          <source>Here, transmute is being used to convert the types of the fn arguments. This pattern is incorrect because, because the type of &lt;code&gt;foo&lt;/code&gt; is a function &lt;strong&gt;item&lt;/strong&gt; (&lt;code&gt;typeof(foo)&lt;/code&gt;), which is zero-sized, and the target type (&lt;code&gt;fn()&lt;/code&gt;) is a function pointer, which is not zero-sized. This pattern should be rewritten. There are a few possible ways to do this:</source>
          <target state="translated">Здесь transmute используется для преобразования типов аргументов fn. Этот шаблон неверен, потому что, поскольку тип &lt;code&gt;foo&lt;/code&gt; является &lt;strong&gt;элементом&lt;/strong&gt; функции ( &lt;code&gt;typeof(foo)&lt;/code&gt; ), который имеет нулевой размер, а целевой тип ( &lt;code&gt;fn()&lt;/code&gt; ) является указателем на функцию, который не имеет нулевого размера. Этот шаблон следует переписать. Есть несколько возможных способов сделать это:</target>
        </trans-unit>
        <trans-unit id="11f7e7a9427d5e270e6bb9180be033e23a1b7abb" translate="yes" xml:space="preserve">
          <source>Here, we are still borrowing &lt;code&gt;foo()&lt;/code&gt;, but as the borrow is assigned directly into a variable, the temporary will not be dropped until the end of the enclosing block. Similar rules apply when temporaries are stored into aggregate structures like a tuple or struct:</source>
          <target state="translated">Здесь мы по-прежнему заимствуем &lt;code&gt;foo()&lt;/code&gt; , но поскольку заимствование присваивается непосредственно переменной, временное значение не будет отброшено до конца включающего блока. Подобные правила применяются, когда временные объекты хранятся в агрегированных структурах, таких как кортеж или структура:</target>
        </trans-unit>
        <trans-unit id="2fe93444419186b520c70f702a92a3495d890ab8" translate="yes" xml:space="preserve">
          <source>Here, we create a new variable &lt;code&gt;case_sensitive&lt;/code&gt;. To set its value, we call the &lt;code&gt;env::var&lt;/code&gt; function and pass it the name of the &lt;code&gt;CASE_INSENSITIVE&lt;/code&gt; environment variable. The &lt;code&gt;env::var&lt;/code&gt; function returns a &lt;code&gt;Result&lt;/code&gt; that will be the successful &lt;code&gt;Ok&lt;/code&gt; variant that contains the value of the environment variable if the environment variable is set. It will return the &lt;code&gt;Err&lt;/code&gt; variant if the environment variable is not set.</source>
          <target state="translated">Здесь мы создаем новую переменную &lt;code&gt;case_sensitive&lt;/code&gt; . Чтобы установить его значение, мы вызываем функцию &lt;code&gt;env::var&lt;/code&gt; и передаем ей имя переменной окружения &lt;code&gt;CASE_INSENSITIVE&lt;/code&gt; . Функция &lt;code&gt;env::var&lt;/code&gt; возвращает &lt;code&gt;Result&lt;/code&gt; который будет успешным вариантом &lt;code&gt;Ok&lt;/code&gt; , который содержит значение переменной среды, если переменная среды установлена. Он вернет вариант &lt;code&gt;Err&lt;/code&gt; , если переменная среды не установлена.</target>
        </trans-unit>
        <trans-unit id="629de8d4fd404424f68755750d18203229995313" translate="yes" xml:space="preserve">
          <source>Here, we declare a trait using the &lt;code&gt;trait&lt;/code&gt; keyword and then the trait&amp;rsquo;s name, which is &lt;code&gt;Summary&lt;/code&gt; in this case. Inside the curly brackets, we declare the method signatures that describe the behaviors of the types that implement this trait, which in this case is &lt;code&gt;fn summarize(&amp;amp;self) -&amp;gt; String&lt;/code&gt;.</source>
          <target state="translated">Здесь мы объявляем признак, используя ключевое слово &lt;code&gt;trait&lt;/code&gt; а затем имя признака, которое в данном случае является &lt;code&gt;Summary&lt;/code&gt; . Внутри фигурных скобок мы объявляем сигнатуры методов, которые описывают поведение типов, реализующих эту черту, в данном случае &lt;code&gt;fn summarize(&amp;amp;self) -&amp;gt; String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5d31c7a816695d5663a1af214bdd61a0f312631" translate="yes" xml:space="preserve">
          <source>Here, we first call &lt;code&gt;lock&lt;/code&gt; on the &lt;code&gt;receiver&lt;/code&gt; to acquire the mutex, and then we call &lt;code&gt;unwrap&lt;/code&gt; to panic on any errors. Acquiring a lock might fail if the mutex is in a &lt;em&gt;poisoned&lt;/em&gt; state, which can happen if some other thread panicked while holding the lock rather than releasing the lock. In this situation, calling &lt;code&gt;unwrap&lt;/code&gt; to have this thread panic is the correct action to take. Feel free to change this &lt;code&gt;unwrap&lt;/code&gt; to an &lt;code&gt;expect&lt;/code&gt; with an error message that is meaningful to you.</source>
          <target state="translated">Здесь мы первый вызов &lt;code&gt;lock&lt;/code&gt; на &lt;code&gt;receiver&lt;/code&gt; получить мьютекс, а затем мы называем &lt;code&gt;unwrap&lt;/code&gt; паниковать на любые ошибки. Получение блокировки может завершиться неудачно, если мьютекс находится в &lt;em&gt;отравленном&lt;/em&gt; состоянии, что может произойти, если какой-то другой поток запаниковал, удерживая блокировку, а не снимая блокировку. В этой ситуации вызов &lt;code&gt;unwrap&lt;/code&gt; для паники потока является правильным действием. Не стесняйтесь изменить эту &lt;code&gt;unwrap&lt;/code&gt; на &lt;code&gt;expect&lt;/code&gt; с сообщением об ошибке, которое имеет для вас значение.</target>
        </trans-unit>
        <trans-unit id="90ed3acfd08d6add91c92898299f8f082c9b0a5d" translate="yes" xml:space="preserve">
          <source>Here, we give a description of what the &lt;code&gt;add_one&lt;/code&gt; function does, start a section with the heading &lt;code&gt;Examples&lt;/code&gt;, and then provide code that demonstrates how to use the &lt;code&gt;add_one&lt;/code&gt; function. We can generate the HTML documentation from this documentation comment by running &lt;code&gt;cargo doc&lt;/code&gt;. This command runs the &lt;code&gt;rustdoc&lt;/code&gt; tool distributed with Rust and puts the generated HTML documentation in the &lt;em&gt;target/doc&lt;/em&gt; directory.</source>
          <target state="translated">Здесь мы даем описание того, что &lt;code&gt;add_one&lt;/code&gt; функция add_one , начинаем раздел с заголовка &lt;code&gt;Examples&lt;/code&gt; , а затем предоставляем код, демонстрирующий, как использовать функцию &lt;code&gt;add_one&lt;/code&gt; . Мы можем сгенерировать HTML-документацию из этого комментария к документации, запустив &lt;code&gt;cargo doc&lt;/code&gt; . Эта команда запускает инструмент &lt;code&gt;rustdoc&lt;/code&gt; , поставляемый вместе с Rust, и помещает сгенерированную HTML-документацию в каталог &lt;em&gt;target / doc&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="509084bc1cc2854ecab3677678733d63bccc2260" translate="yes" xml:space="preserve">
          <source>Here, we have a package that only contains &lt;em&gt;src/main.rs&lt;/em&gt;, meaning it only contains a binary crate named &lt;code&gt;my-project&lt;/code&gt;. If a package contains &lt;em&gt;src/main.rs&lt;/em&gt; and &lt;em&gt;src/lib.rs&lt;/em&gt;, it has two crates: a library and a binary, both with the same name as the package. A package can have multiple binary crates by placing files in the &lt;em&gt;src/bin&lt;/em&gt; directory: each file will be a separate binary crate.</source>
          <target state="translated">Здесь у нас есть пакет, который содержит только &lt;em&gt;src / main.rs&lt;/em&gt; , то есть он содержит только двоичный ящик с именем &lt;code&gt;my-project&lt;/code&gt; . Если пакет содержит &lt;em&gt;src / main.rs&lt;/em&gt; и &lt;em&gt;src / lib.rs&lt;/em&gt; , у него есть два ящика: библиотека и двоичный файл, оба с тем же именем, что и пакет. Пакет может иметь несколько бинарных ящиков, помещая файлы в каталог &lt;em&gt;src / bin&lt;/em&gt; : каждый файл будет отдельным двоичным ящиком.</target>
        </trans-unit>
        <trans-unit id="214685b848acbf415bb3dbd9186c1466aa631aa7" translate="yes" xml:space="preserve">
          <source>Here, we have two parameters of type &lt;code&gt;TokenStream&lt;/code&gt;. The first is for the contents of the attribute: the &lt;code&gt;GET, &quot;/&quot;&lt;/code&gt; part. The second is the body of the item the attribute is attached to: in this case, &lt;code&gt;fn index() {}&lt;/code&gt; and the rest of the function&amp;rsquo;s body.</source>
          <target state="translated">Здесь у нас есть два параметра типа &lt;code&gt;TokenStream&lt;/code&gt; . Первый предназначен для содержимого атрибута: &lt;code&gt;GET, &quot;/&quot;&lt;/code&gt; . Второй - это тело элемента, к которому прикреплен атрибут: в данном случае это &lt;code&gt;fn index() {}&lt;/code&gt; и остальная часть тела функции.</target>
        </trans-unit>
        <trans-unit id="9da25d2edfbc8a834054d09a3a531a79272bf467" translate="yes" xml:space="preserve">
          <source>Here, we match a tuple against a pattern. Rust compares the value &lt;code&gt;(1, 2, 3)&lt;/code&gt; to the pattern &lt;code&gt;(x, y, z)&lt;/code&gt; and sees that the value matches the pattern, so Rust binds &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt; to &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;3&lt;/code&gt; to &lt;code&gt;z&lt;/code&gt;. You can think of this tuple pattern as nesting three individual variable patterns inside it.</source>
          <target state="translated">Здесь мы сопоставляем кортеж с шаблоном. Rust сравнивает значение &lt;code&gt;(1, 2, 3)&lt;/code&gt; с шаблоном &lt;code&gt;(x, y, z)&lt;/code&gt; и видит, что значение соответствует шаблону, поэтому Rust связывает &lt;code&gt;1&lt;/code&gt; с &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;2&lt;/code&gt; с &lt;code&gt;y&lt;/code&gt; и &lt;code&gt;3&lt;/code&gt; с &lt;code&gt;z&lt;/code&gt; . Вы можете думать об этом шаблоне кортежа как о вложении в него трех отдельных шаблонов переменных.</target>
        </trans-unit>
        <trans-unit id="3807aec2b6a72b122da57a852fc8dc8b9b746c8b" translate="yes" xml:space="preserve">
          <source>Here, we tried to move a field out of a struct of type &lt;code&gt;DropStruct&lt;/code&gt; which implements the &lt;code&gt;Drop&lt;/code&gt; trait. However, a struct cannot be dropped if one or more of its fields have been moved.</source>
          <target state="translated">Здесь мы попытались переместить поле из структуры типа &lt;code&gt;DropStruct&lt;/code&gt; , которая реализует трейт &lt;code&gt;Drop&lt;/code&gt; . Однако структуру нельзя отбросить, если одно или несколько ее полей были перемещены.</target>
        </trans-unit>
        <trans-unit id="182fd49127f0c327471148134a76b7aecc6837c0" translate="yes" xml:space="preserve">
          <source>Here, we try to print &lt;code&gt;val&lt;/code&gt; after we&amp;rsquo;ve sent it down the channel via &lt;code&gt;tx.send&lt;/code&gt;. Allowing this would be a bad idea: once the value has been sent to another thread, that thread could modify or drop it before we try to use the value again. Potentially, the other thread&amp;rsquo;s modifications could cause errors or unexpected results due to inconsistent or nonexistent data. However, Rust gives us an error if we try to compile the code in Listing 16-9:</source>
          <target state="translated">Здесь мы пытаемся вывести &lt;code&gt;val&lt;/code&gt; после того, как отправили его по каналу через &lt;code&gt;tx.send&lt;/code&gt; . Допустить это было бы плохой идеей: после того, как значение было отправлено в другой поток, этот поток может изменить или отбросить его, прежде чем мы попытаемся снова использовать значение. Возможно, модификации другого потока могут вызвать ошибки или неожиданные результаты из-за несовместимых или несуществующих данных. Однако Rust выдает ошибку, если мы попытаемся скомпилировать код из Листинга 16-9:</target>
        </trans-unit>
        <trans-unit id="e6e942400049c5831b3b39dbc83c98fc061c7f27" translate="yes" xml:space="preserve">
          <source>Here, we&amp;rsquo;ll work up to a program that has one thread to generate values and send them down a channel, and another thread that will receive the values and print them out. We&amp;rsquo;ll be sending simple values between threads using a channel to illustrate the feature. Once you&amp;rsquo;re familiar with the technique, you could use channels to implement a chat system or a system where many threads perform parts of a calculation and send the parts to one thread that aggregates the results.</source>
          <target state="translated">Здесь мы перейдем к программе, в которой один поток генерирует значения и отправляет их по каналу, а другой поток будет получать значения и распечатывать их. Мы будем отправлять простые значения между потоками, используя канал, чтобы проиллюстрировать эту функцию. Когда вы познакомитесь с этой техникой, вы можете использовать каналы для реализации системы чата или системы, в которой многие потоки выполняют части вычислений и отправляют их в один поток, который объединяет результаты.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
