<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="3ae27cf38ab1b77c539eacfe8b86a81cd977c498" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.atan2&quot;&gt;atan2&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#693-695&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fcbc5db557ff4aa011d4e5ddb2b592d59d5c5d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.atanh&quot;&gt;atanh&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#875-877&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd38b17e104e347176dbe7b4d55264279a870d52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.atanh&quot;&gt;atanh&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#877-879&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47a6d5fb0e551c3f01ead4801be899c96db1f00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.cbrt&quot;&gt;cbrt&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#522-524&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597544670b8fd939b847fac44185a9f4c187c49e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.cbrt&quot;&gt;cbrt&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#524-526&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87032c94a05664563a3de1d39bf7a0bdef80077f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.ceil&quot;&gt;ceil&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#70-72&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515677b45326f6f947ce4cbc4a8b49fbf7805bde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.ceil&quot;&gt;ceil&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#70-72&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c66a393ece56ad747ff0e52cf0f4fba9d3a59bda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.clamp&quot;&gt;clamp&lt;/a&gt;(self, min: &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;, max: &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#903-913&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8dab2767f2df7f2287d2fc132eaf62955f3fda7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.clamp&quot;&gt;clamp&lt;/a&gt;(self, min: &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;, max: &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#905-915&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6412f75058ae424b208c1f6c7b9465c0c86701f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.copysign&quot;&gt;copysign&lt;/a&gt;(self, sign: &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#202-204&quot;&gt;[src]&lt;/a&gt;1.35.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b8795e55a5c5dff6f91efddea8494ae9131841" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.copysign&quot;&gt;copysign&lt;/a&gt;(self, sign: &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#202-204&quot;&gt;[src]&lt;/a&gt;1.35.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3a136ee455787fae932341dc7523a95ea50c01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.cos&quot;&gt;cos&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#579-581&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9e5687c1b366fa82deaf697f81f746c1797231" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.cos&quot;&gt;cos&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#581-583&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f39e69c355eae398a57203fa26280d3a6f15aa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.cosh&quot;&gt;cosh&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#796-798&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d269ac43a1967c79c96382c8a098f273051df245" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.cosh&quot;&gt;cosh&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#798-800&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c266345ea2662420ebe4c18c7a9d844f5447edb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.div_euclid&quot;&gt;div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#251-257&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62892c116a3d96c087909d25f3c032d623da66d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.div_euclid&quot;&gt;div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#251-257&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="813e07e7bbfe2485875ee60af1418d1e49c22c27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.exp&quot;&gt;exp&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#365-367&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ade61c7e48ceee0a6c9c01487972f16110a375" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.exp&quot;&gt;exp&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#365-367&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed57e401339ddaa360748d49acc2d4cb928a5fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.exp2&quot;&gt;exp2&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#384-386&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967e0f4a60878aae890c2700c0cc9d294a62ce4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.exp2&quot;&gt;exp2&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#384-386&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797a848086d83550413b7a0c5921c1ca475b189a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.exp_m1&quot;&gt;exp_m1&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#732-734&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5710010f7a2f5b478a743a15387898f768d1bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.exp_m1&quot;&gt;exp_m1&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#734-736&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c05b55aa15c99d03690698639a4f8d31d7f5ec4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.floor&quot;&gt;floor&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#52-54&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5c304c22d088e1e5b2acad1272d311666f29bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.floor&quot;&gt;floor&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#52-54&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5fa6ccb71056848ab88ee9c6257109af5d06c35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.fract&quot;&gt;fract&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#129-131&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944c6e58bc4b0809939e0891107fbced8b0a53b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.fract&quot;&gt;fract&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#129-131&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc329cf5e708bb9f87c750c221dc10576e5bd85d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.hypot&quot;&gt;hypot&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#543-545&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ba76a9f635171c076dd35e5379d631a8adb820" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.hypot&quot;&gt;hypot&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#545-547&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e06eebef0366446c5a09c257cf6a53da36a64f40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.ln&quot;&gt;ln&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#405-407&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90cbaaa3ccc330605fe364bad219edd012a6500f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.ln&quot;&gt;ln&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#405-407&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d3ae9e109f892c2913f7677933455529a6b506" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.ln_1p&quot;&gt;ln_1p&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#752-754&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ce3c9456cc6a524aed06c260bb2bb024eca0c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.ln_1p&quot;&gt;ln_1p&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#754-756&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37bd75b9c97cb7ad68eee27e36a6a808957bbe3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.log&quot;&gt;log&lt;/a&gt;(self, base: &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#428-430&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a45e4d3190712d89da99ee5ebb9ff1911c3a85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.log&quot;&gt;log&lt;/a&gt;(self, base: &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#428-430&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f2cbf30dc526d4d9ca86f13179cd0592884525" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.log10&quot;&gt;log10&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#469-471&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942c378102d6867f5c49c44e6d0d5ab0a3c143c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.log10&quot;&gt;log10&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#471-473&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a3b56288fb0ce0a19bce9f981aca418d930924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.log2&quot;&gt;log2&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#447-452&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e494b3ac62f247e3029811661db9713308aa39c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.log2&quot;&gt;log2&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#447-454&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8429b4ad5983c37114053bc74745c2ae45b9b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.mul_add&quot;&gt;mul_add&lt;/a&gt;(self, a: &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;, b: &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#227-229&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ac353453530e84a0b3f9b18359adae6dde1534" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.mul_add&quot;&gt;mul_add&lt;/a&gt;(self, a: &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;, b: &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#227-229&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2c0836e84c8fec54a1baeeec487244c5903856" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.powf&quot;&gt;powf&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#322-324&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c0580ba2f028199542f071cb36cfd6a3240e1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.powf&quot;&gt;powf&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#322-324&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc217ee95317023aa05edb525ad8ada7b6133e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.powi&quot;&gt;powi&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#305-307&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128801c62be028f888fa68803fe35209936c85ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.powi&quot;&gt;powi&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#305-307&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e4e69e8e431f68ac87c2a0e1b94c70e3b247ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.rem_euclid&quot;&gt;rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#285-288&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69505d1e39c29c796476fba588e981c9f5936308" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.rem_euclid&quot;&gt;rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#285-288&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e606f70cf9f488fc43c9117e5887a13ff8d9665d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.round&quot;&gt;round&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#89-91&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23fa3cc76ea6710c7bd5db8518d0e5a3f272525" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.round&quot;&gt;round&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#89-91&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa7c3da61f0dcd484af6ee0938c3d390e970dff9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.signum&quot;&gt;signum&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#176-178&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91fd2457ef8a59f61a4ea5d122090206c7d94141" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.signum&quot;&gt;signum&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#176-178&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="554cb869a8d903a4ecdfb0f36cfcb97483412590" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.sin&quot;&gt;sin&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#561-563&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c93f9b6c57ee160a605e534d0e0801c0425564" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.sin&quot;&gt;sin&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#563-565&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600a0d5183c43f325465b80f0f5a142faf4046a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.sinh&quot;&gt;sinh&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#774-776&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9ce3e4f5fd990f1b07ef34ffd2130f06d40730" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.sinh&quot;&gt;sinh&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#776-778&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebae6bb575667b6f70c7cb7248a359e6e51d9073" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.sqrt&quot;&gt;sqrt&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#344-346&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7de905513c83ae303218bd12d8fec9612f96724" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.sqrt&quot;&gt;sqrt&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#344-346&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a87a71263fce7d546ec784c494891ccf9e1139e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.tan&quot;&gt;tan&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#596-598&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1036b118a81ff7a8196dbefe335becc9eefec54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.tan&quot;&gt;tan&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#598-600&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7322c01ec0d8dffdd2238a15390c7112884db1b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.tanh&quot;&gt;tanh&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#818-820&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e951d1025c2ecbf74f24547ead43f06675d2f73d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.tanh&quot;&gt;tanh&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#820-822&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a9ad5c2fddee8b708f8fa00ab450e31afd9aa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.trunc&quot;&gt;trunc&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#109-111&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941ce40ae86310d6324ab45a3e3183725d42202d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;method returns a new number and does not mutate the original value&quot;]pub fn &lt;a href=&quot;#method.trunc&quot;&gt;trunc&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#109-111&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ad31dfed0e2a976beeb4c9a371fd331468e4cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the remaining substring as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_prefix&quot;&gt;strip_prefix&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, prefix: P) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1989-1991&quot;&gt;[src]&lt;/a&gt;1.45.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a80c69e43e8e9cad7dc6b4ca9b4b40032a237f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the remaining substring as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_prefix&quot;&gt;strip_prefix&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, prefix: P) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1989-1991&quot;&gt;[src]&lt;/a&gt;1.45.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b2dea031a6e8794bc1957ca586843b6ad18fb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the remaining substring as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_suffix&quot;&gt;strip_suffix&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, suffix: P) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;P as &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;../str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;../str/pattern/trait.reversesearcher&quot;&gt;ReverseSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#2017-2023&quot;&gt;[src]&lt;/a&gt;1.45.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f654c3e23c5cf521b0522b849e51e0d356204a35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the remaining substring as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_suffix&quot;&gt;strip_suffix&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, suffix: P) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;P as &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;str/pattern/trait.reversesearcher&quot;&gt;ReverseSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#2017-2023&quot;&gt;[src]&lt;/a&gt;1.45.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6484e732310b6b2c2710c9c4e73497538c2a7e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the replaced string as a new allocation, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.replace&quot;&gt;replace&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, from: P, to: &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/str.rs.html#263-273&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b580f63c8ae5dba887058edd6011cf809accedf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the replaced string as a new allocation, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.replace&quot;&gt;replace&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, from: P, to: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;string/struct.string&quot;&gt;String&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/str.rs.html#263-273&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959cdb5ca1a4b9433d67f3bae3f48dce51f04000" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the replaced string as a new allocation, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.replacen&quot;&gt;replacen&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P, to: &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;, count: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/str.rs.html#301-312&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009c9dddefc93cbcb4f619beea90e6870d292bfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the replaced string as a new allocation, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.replacen&quot;&gt;replacen&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P, to: &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;string/struct.string&quot;&gt;String&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/str.rs.html#301-312&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf1815d2d2a407ba8e915b81ebb6a5a895d8d3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_add&quot;&gt;checked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#453-456&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657470b920338d5dafcf893355bb7ae07885ecac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_add&quot;&gt;checked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#453-456&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14768121384cf2907ef9495411c62c679770aba4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_add&quot;&gt;checked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#453-456&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f96d8e3db810776009f058ba589cc8807807ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_add&quot;&gt;checked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#453-456&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b205da55464f83010b22cc53b91f085ea6f94b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_add&quot;&gt;checked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#453-456&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e8751b80919ed284dd9a17351894c1a1191631" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_add&quot;&gt;checked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#453-456&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129eb47ffd6dfa1b8df4b98e6f6c3915294e52e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_add&quot;&gt;checked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#450-453&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dadac9a5ec4a726a01dbe28dfa444fd92c1a828b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_add&quot;&gt;checked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#450-453&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa121d558e33508852deb8feee1af92ea97d4c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_add&quot;&gt;checked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#450-453&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad43620e0ba16fb8968b69bdb1ececdf0a0ded1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_add&quot;&gt;checked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#450-453&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520069b336eb0b2eec2c7996c4233ad1cd153555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_add&quot;&gt;checked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#450-453&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293df59f803362495ce38804beb23303f87bafd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_add&quot;&gt;checked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#450-453&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65cd8544f93a82318f54925404a94837ed6629e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_mul&quot;&gt;checked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#541-544&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440ce4b8eec9ce58bc9fbd48d090dd3c94d290cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_mul&quot;&gt;checked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#541-544&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6534d9282ae5909a9ca94bc193ce8fa2284f7457" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_mul&quot;&gt;checked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#541-544&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59736cf80841bc7e0adec2702169b6436d25e3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_mul&quot;&gt;checked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#541-544&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22c89e5bb9aa9ab0d3c8ae079e2fd428a1507f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_mul&quot;&gt;checked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#541-544&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26fdbbea06b76c3fdc2909b642ac1cc17b65373c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_mul&quot;&gt;checked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#541-544&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede73bbbd49f87817fbe16de1c3ff3aa08767aaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_mul&quot;&gt;checked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#534-537&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae844736cbaedcc8513734ec79861fe6ee1d3605" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_mul&quot;&gt;checked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#534-537&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21e3e23c660f2884815d3ddf6767cf71d459201" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_mul&quot;&gt;checked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#534-537&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="802f799007aa08bcf948547d8a7f063b47aa3b2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_mul&quot;&gt;checked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#534-537&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac496bb34ed61aa1f386164e257e22dc35974a36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_mul&quot;&gt;checked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#534-537&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862f6d355d1d5b1978436307273375f4e0130c55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_mul&quot;&gt;checked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#534-537&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3e68536b0f860c8645f1d0326d5e31b214cfa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shl&quot;&gt;checked_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#721-724&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a57a78b9b3e73a52891d1cf986aead00c05608" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shl&quot;&gt;checked_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#721-724&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b5972d911c4154fdb71ca2a2abbc307ca799a86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shl&quot;&gt;checked_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#721-724&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a77626ea18c5feab173348b3aa88ffbadf513c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shl&quot;&gt;checked_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#721-724&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074f1dfe336bfce575e09785c2a5c3dea5d73f85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shl&quot;&gt;checked_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#721-724&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8e00a5f103e84648925a365f77afb84b1186b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shl&quot;&gt;checked_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#721-724&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21340971aaa499788d8311ed75839e51ccab8bf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shl&quot;&gt;checked_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#708-711&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c06a21fb3b8247f9793cc2f39ce65daf14a7a96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shl&quot;&gt;checked_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#708-711&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa47b7913f22fb5de8d6ae20d339353d3de17ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shl&quot;&gt;checked_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#708-711&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c5835d5d7757840fef381322df0183223a7a50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shl&quot;&gt;checked_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#708-711&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0ace76b7d198385162aa98121edffb3ac24cce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shl&quot;&gt;checked_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#708-711&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07358ec5c80fb5a7c7004247da7448704acbc438" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shl&quot;&gt;checked_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#708-711&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db3d970c41e4cd1c7b649369836e34b9d9c1f3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shr&quot;&gt;checked_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#745-748&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121451db434e5e78e45188a1da8c07c2aeabd933" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shr&quot;&gt;checked_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#745-748&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b4037b37d5c94648de7e726ea01e881c4beb37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shr&quot;&gt;checked_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#745-748&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1ea66d5514db9b38a2986ea955af7861b8cffd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shr&quot;&gt;checked_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#745-748&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e7a9dda75abceae6252f2e9561dd270a078448" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shr&quot;&gt;checked_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#745-748&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46435e8132701411ac3436c0e27353d66316b119" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shr&quot;&gt;checked_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#745-748&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0eb74069537ce7ae7458cf534950367ada8524" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shr&quot;&gt;checked_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#731-734&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65ed9fc17f951c269a5f6d9493e8ad2dec1ab1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shr&quot;&gt;checked_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#731-734&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f845eca4c12c1c5e1bc6efb1ee41c27a55ba15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shr&quot;&gt;checked_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#731-734&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44f8f42792083c63712d652b9b484c22c69e861" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shr&quot;&gt;checked_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#731-734&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd9ee93b9e4250e342983c61c4fe8eed60e6cf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shr&quot;&gt;checked_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#731-734&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9670315ff72711a013d592df02a36e589a8a3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_shr&quot;&gt;checked_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#731-734&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0380f562c246ad2b23586320b15ec90400102d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_sub&quot;&gt;checked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#497-500&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510abd2f7c0dc9b4596b0f89326b9b5438d86e24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_sub&quot;&gt;checked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#497-500&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a30ae3e4d82dedf05231d61a156a3a79e48511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_sub&quot;&gt;checked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#497-500&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af90f8278768cca7503b8a0024cae551c1ea05c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_sub&quot;&gt;checked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#497-500&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e38176669cfbbb4ae2f5ab88721aa6156b2e3e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_sub&quot;&gt;checked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#497-500&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccaece63882e7e96404f056eaa5e29496392a080" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_sub&quot;&gt;checked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#497-500&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af5ed71aedd3b54eac90fe8b9e3db1a6690999b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_sub&quot;&gt;checked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#492-495&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3189a0cdec7697b2bf8234e211c1fa49f86925f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_sub&quot;&gt;checked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#492-495&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46660fa8b1d42c1f848f6aa44561f6234d52f435" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_sub&quot;&gt;checked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#492-495&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89ea596a2b92d497537ee034ea11d3bd7cc3c13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_sub&quot;&gt;checked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#492-495&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74af62fea63bfd32f2739a76f0785dcf7771601f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_sub&quot;&gt;checked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#492-495&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca7a5bff5ce9c1d13a18971c513c24620b5a59b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.checked_sub&quot;&gt;checked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#492-495&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c07a78dd2de6c4a6c7b87dc28f3fc7680c552f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_add&quot;&gt;overflowing_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1389-1392&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588c57451f6e78416e71b3c145496d325a80e3c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_add&quot;&gt;overflowing_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1389-1392&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5898481b68446f905d9931f57563a4262b1224eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_add&quot;&gt;overflowing_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1389-1392&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e36aea524f8c46655a8077e5c11bd57a5fd9839" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_add&quot;&gt;overflowing_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1389-1392&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58739eb162366174d51c54aeda10e51daba46a44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_add&quot;&gt;overflowing_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1389-1392&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83638d12a33395381c0907d22cf8162eae811ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_add&quot;&gt;overflowing_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1389-1392&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeafa4e3890b2d340f00102a1c6bcfdd1e464fcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_add&quot;&gt;overflowing_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1208-1211&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0a11c249c99899707e1cb069bca25f1cc16c1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_add&quot;&gt;overflowing_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1208-1211&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad619fb5d2c345e512a2983521fd003f8264d7da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_add&quot;&gt;overflowing_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1208-1211&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81aa3971f27b78d475507e2bf8efbe6a4168565" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_add&quot;&gt;overflowing_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1208-1211&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5d70236aed8fce07b840214a8fc3f831d7d8c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_add&quot;&gt;overflowing_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1208-1211&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fec5143ef9fd7d417f076d5adf3d220d1e7be32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_add&quot;&gt;overflowing_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1208-1211&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab0e3c1c878f90cea718e5a528b70e00a1aa6c56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_mul&quot;&gt;overflowing_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1442-1445&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92864e48ed330d94c3587dc5eca778907e27e3c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_mul&quot;&gt;overflowing_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1442-1445&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d10e0ee9e026ed8f3a2e9969db8acc1bc42b3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_mul&quot;&gt;overflowing_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1442-1445&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02fb035de158d70961b3716e22eaf3d4112179fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_mul&quot;&gt;overflowing_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1442-1445&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e818c5da7743dae00bf82193e3fb1f6a011bbfe7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_mul&quot;&gt;overflowing_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1442-1445&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffcbe34c30ea0ed445bec94beb372b08ddb50d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_mul&quot;&gt;overflowing_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1442-1445&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93381483a0daa91918fd1c1b0ce5e37b3e0df0ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_mul&quot;&gt;overflowing_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1264-1267&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdcdf402144fc13a34a2d4ab3770bb18d1e1ff63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_mul&quot;&gt;overflowing_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1264-1267&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2f2116dafd7a08583b2cf0979cccc1dc057c70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_mul&quot;&gt;overflowing_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1264-1267&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613aea58473219e84ada782e270394dd55249f74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_mul&quot;&gt;overflowing_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1264-1267&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29bdf5685d56f70a2e78dd6f5cfbb89d06939f73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_mul&quot;&gt;overflowing_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1264-1267&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba5c352bac87beab494aca8a1f53323819cc414" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_mul&quot;&gt;overflowing_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1264-1267&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1bb268f67186d143454f909479c10fb88188bf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shl&quot;&gt;overflowing_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1634-1636&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280fb4e58fc30ae0fc6aca1154aea3073248ac8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shl&quot;&gt;overflowing_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1634-1636&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e45d9e01a38a31db086e34916b9512a58f008b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shl&quot;&gt;overflowing_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1634-1636&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a65ada6d9662791f14a3ae261befc16b696c06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shl&quot;&gt;overflowing_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1634-1636&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848b0c3d724e573011d91119ca26ebaf5db147ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shl&quot;&gt;overflowing_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1634-1636&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13610c74bced9273a8aeeace5711b96fafe8e131" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shl&quot;&gt;overflowing_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1634-1636&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640c576894bc5fc818824126fda19cebc0867741" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shl&quot;&gt;overflowing_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1438-1440&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e584367b0b4efda0f06c009f3ba1fd7c4f70117" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shl&quot;&gt;overflowing_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1438-1440&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad8a998f695c51cf5a09eb2cfddedd6a1127dbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shl&quot;&gt;overflowing_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1438-1440&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c985edce5efb137e22d172b85077f54b01d415" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shl&quot;&gt;overflowing_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1438-1440&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fddc6b419c8577b704d3224da97b518b9a9fa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shl&quot;&gt;overflowing_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1438-1440&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb2a0f575af8a2e52445025385fad3817c4bd357" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shl&quot;&gt;overflowing_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1438-1440&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c2b940a1a371d5b910693fbe8f6d9c5afce052" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shr&quot;&gt;overflowing_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1660-1662&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6f15a0be95d060a87316363f2657a9569f0dbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shr&quot;&gt;overflowing_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1660-1662&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4430447ce0eaf9f2c547ec6722817592dfdb4bcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shr&quot;&gt;overflowing_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1660-1662&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd0d3781f70b74184043ccd42455e6b4a409207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shr&quot;&gt;overflowing_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1660-1662&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330421f995b1d97b04f933fe2414f23f30135baf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shr&quot;&gt;overflowing_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1660-1662&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6329cfbd8b43760f9c2bdfccd1f44b7eaf04add2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shr&quot;&gt;overflowing_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1660-1662&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3428ac59eda0bc07845c42e7dc2f34cb2bab5c0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shr&quot;&gt;overflowing_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1465-1467&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e3063003c5ee0ac27afed91730eb70017f599f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shr&quot;&gt;overflowing_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1465-1467&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb140db22917f981cb2ebfdf1deba0af71fe31ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shr&quot;&gt;overflowing_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1465-1467&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cec18f85b13810f4d510e1dafece1d29fe08114" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shr&quot;&gt;overflowing_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1465-1467&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a054541c0cb91cad3d4ea83e81c55bef2e1934" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shr&quot;&gt;overflowing_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1465-1467&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572a4cfdec9b309f6bfb5f05e8ac716041d5990c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_shr&quot;&gt;overflowing_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1465-1467&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad02925d8b396579f6097a8b12bce91b67d35942" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_sub&quot;&gt;overflowing_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1416-1419&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2afb925b3ed8ebbe19d8a19378a92facef3710d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_sub&quot;&gt;overflowing_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1416-1419&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c8938e60b009eed83d2c18da25ab73d3682c24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_sub&quot;&gt;overflowing_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1416-1419&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e650f16490e5842ae795b152ac3d70e3053e0c64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_sub&quot;&gt;overflowing_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1416-1419&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e922bd29e4d40886ed246d3db3b6077f7ddf556" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_sub&quot;&gt;overflowing_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1416-1419&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe868cd598378c61f0d396d72c99d6724ea2f95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_sub&quot;&gt;overflowing_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1416-1419&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a3a57397a7e5087cd8d49d00525771475a92d79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_sub&quot;&gt;overflowing_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1236-1239&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d133542ba186c9b8b85e8d2658e55be8fce876e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_sub&quot;&gt;overflowing_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1236-1239&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ecbffdc312fb0762fc8197ab9c0150ac75e68d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_sub&quot;&gt;overflowing_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1236-1239&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eace013b4d36d6593d2cbb51c998384b62b5b9b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_sub&quot;&gt;overflowing_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1236-1239&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e1aeb3cd7243d3b5e014ea68d1842b1126435f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_sub&quot;&gt;overflowing_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1236-1239&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0314f712c06fd116ee4cb58a34dfc9f3e1dbdcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.overflowing_sub&quot;&gt;overflowing_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1236-1239&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b2fc5145b98e5f144db8334a2f0af010fa9d38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_left&quot;&gt;rotate_left&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c2bb0ed4aac67957f999faace5e3b46e850df5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_left&quot;&gt;rotate_left&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c03d52f61d807509da832e33a161983c0ddd626" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_left&quot;&gt;rotate_left&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a7229bd82d461e913cefcbdfc23603c37bd84e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_left&quot;&gt;rotate_left&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fab7f6023df77e00856e0e9766f07a1a56a374" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_left&quot;&gt;rotate_left&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7225b47cf49842730d9f46c38065d9a02839c7f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_left&quot;&gt;rotate_left&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#222-224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c5a2431d5d896a1f96c76ddd7ca65e741bd6d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_left&quot;&gt;rotate_left&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#220-222&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250b6958f4bf34131e310bc97f3ab903aac8ccc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_left&quot;&gt;rotate_left&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#220-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13ce9cf2f79ec8f9183862d10f618fed1b253e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_left&quot;&gt;rotate_left&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#220-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874034ca638e7671e349f18b1d73a5a4c6ceb8cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_left&quot;&gt;rotate_left&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#220-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a1468adba7781056ee5c13dbe322749fbcf150d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_left&quot;&gt;rotate_left&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#220-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37808f74693521ff9596f5ef098a64b77ab6052" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_left&quot;&gt;rotate_left&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#220-222&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e86255e6737e688d37e8bd2023ea37b418474b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_right&quot;&gt;rotate_right&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#249-251&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a540b0060e5a167cd4920787a18c81f41e92445" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_right&quot;&gt;rotate_right&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#249-251&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c7d52e1cdd7d2b40be0f87a131d92cdaae8c40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_right&quot;&gt;rotate_right&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#249-251&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f977d48cb0cb62c2e34e9a94ce7187c920b0a27c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_right&quot;&gt;rotate_right&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#249-251&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6d76fa3398a1f8ab342fffc715ce87c1865c72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_right&quot;&gt;rotate_right&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#249-251&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945334a0799166029994044a90718ccb3bbc6590" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_right&quot;&gt;rotate_right&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#249-251&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0602680b5a158220693968dcd19306c9b5350c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_right&quot;&gt;rotate_right&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#247-249&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11944093b9fba3c5eb7d0c3a668fa2c6f5fe1bbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_right&quot;&gt;rotate_right&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#247-249&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2665c5a1bf365b593c8c8fd52184e6b8776d3ce6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_right&quot;&gt;rotate_right&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#247-249&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2c6a085a14743153f9816d5b02432c7e9aa21e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_right&quot;&gt;rotate_right&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#247-249&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489ef81ba6035440a26c09c332192f01b6c34c4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_right&quot;&gt;rotate_right&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#247-249&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8aa0939e745bfb3710661bb8a05daa97478b3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.rotate_right&quot;&gt;rotate_right&lt;/a&gt;(self, n: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#247-249&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a932e2938605a2f5e17a3275002d861841a507" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_add&quot;&gt;saturating_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#840-842&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b566be7fbd6ca52109920c4145ab581224f5f34d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_add&quot;&gt;saturating_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#840-842&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34ab93ff071fb0bff09bd8a5e934c3cf02c9643" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_add&quot;&gt;saturating_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#840-842&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7e6aa42e8083dc60743ff7ba6a12291f2933d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_add&quot;&gt;saturating_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#840-842&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d799bfe8ddd9acc70b6418c4b887715b8493c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_add&quot;&gt;saturating_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#840-842&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c83982a399581646128fddfced12b9dd14f091d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_add&quot;&gt;saturating_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#840-842&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0d0cc99271431de5b60ad1b6ba56cd902ace27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_add&quot;&gt;saturating_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#797-799&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c597cfc566de78f138c2e1a7995744a92af6d13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_add&quot;&gt;saturating_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#797-799&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56fe43a0040b5f9c74ef3e69895b741a6ea5c93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_add&quot;&gt;saturating_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#797-799&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feca775ac0963684b539fcce8a324dd391be494a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_add&quot;&gt;saturating_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#797-799&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9200988d063e03da8130aaac8546efb97cd9350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_add&quot;&gt;saturating_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#797-799&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591dc95dd26718a454105bf88329a6bf6c8f5342" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_add&quot;&gt;saturating_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#797-799&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe51a53568e3ac807dba92cf5922f5dcfb6a3c89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_mul&quot;&gt;saturating_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#947-956&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb0dcf00f1629f202f8895432d231b40f3e05b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_mul&quot;&gt;saturating_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#947-956&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3756b5326d06ce787cf48f9c6faf495f762a4137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_mul&quot;&gt;saturating_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#947-956&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e5335f878f8a7161f6ff21c21efb9cc7544a20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_mul&quot;&gt;saturating_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#947-956&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a2bf638301d426e5b500a533c0db19ce297f08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_mul&quot;&gt;saturating_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#947-956&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2089620d92e7283b1b56107f77aebe525627a5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_mul&quot;&gt;saturating_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#947-956&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d208e5c27685873fa401bf91144292a221beb251" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_mul&quot;&gt;saturating_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#843-848&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e61dc0e30f30f676dedba840589ef6c16bebed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_mul&quot;&gt;saturating_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#843-848&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2d0718564c3d646e06018382edee00342426fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_mul&quot;&gt;saturating_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#843-848&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718b14fc1106069f466a73c06e1dbb0970d62e87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_mul&quot;&gt;saturating_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#843-848&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689e184dfa6dbf879ad7c03bccc899755aaf6cb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_mul&quot;&gt;saturating_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#843-848&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97642a1f1573ae6076bda61d056eae89fdf73efe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_mul&quot;&gt;saturating_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#843-848&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2532bc6dfa0aeee32b888373be7e5261629f201b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_sub&quot;&gt;saturating_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#866-868&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee084101b0f401296d966179681591daa0aae57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_sub&quot;&gt;saturating_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#866-868&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a634b35c8c211e7a5aabc63694da9208e708fad4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_sub&quot;&gt;saturating_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#866-868&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1198aef05b9d3476856f0739857ce388978f71f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_sub&quot;&gt;saturating_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#866-868&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9863b0a037692057d94fb27c4970b1404d495c1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_sub&quot;&gt;saturating_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#866-868&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5971b88e2988395a846494c9576f1f1a5c8c715" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_sub&quot;&gt;saturating_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#866-868&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa1796ddad3471d5087adeb871b6b64458b52b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_sub&quot;&gt;saturating_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#819-821&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842bfafa54f7dfb6b8cb5736228ba0dd38c5e311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_sub&quot;&gt;saturating_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#819-821&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2e30942af74e2c858175fee5661b72d1a9251e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_sub&quot;&gt;saturating_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#819-821&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55273e96ceb3be2fdad218b68e9a4cb8a437f81c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_sub&quot;&gt;saturating_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#819-821&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f831a351b2a6eb48f4ab874acc831a293def57a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_sub&quot;&gt;saturating_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#819-821&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553663781e634df2836f71b628703f07dcd37b58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.saturating_sub&quot;&gt;saturating_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#819-821&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ce2c091e64740bad8b5c4a596b9fcc638a377d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1007-1009&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4651931e630e73129b93f044865cc1ff0423b30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1007-1009&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4609e6a0a63e87e2ed2f54221fa8489894017d9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1007-1009&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5349ceb78fae0f939fd62764b875a279729a61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1007-1009&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9d470b587d6c4ed6ed48f2375d97529bca705b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1007-1009&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1f5a5d83bd16fa6478bc520436566657f38049" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1007-1009&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac26c5afa4b194f16e4c1ab96f392e72b3363fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#896-898&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde3a9b1a3d87e7218d8ca651abd0c830342eaf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#896-898&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2bb84ddd5c3c3a177f95ab2a2341f3847ddc8ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#896-898&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934b2e970d63923aa8959945d929ef0b45e29cc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#896-898&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da18d9ed80b6da0fced977e40beeafd7f9726267" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#896-898&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788f18f11c343b4d1a220693b62fcc0a6e790184" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#896-898&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ceb9e146442f55026d04686737f4f2c6882fb83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1054-1056&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878aa4ab5a031924dc0f8aab5d494fffc5d41c44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1054-1056&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b02a9a4511e1ddd994191dc33bca7a950308b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1054-1056&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6319a7d95e9f2497e192995b064a047e67eae5c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1054-1056&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067c7c5a54135f0f965b7f24589bff26ffb9f520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1054-1056&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7024578573fb4d24f2d71fd6dd47973e2a2f77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1054-1056&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f325f86e710258848e589e5ffce09f68c103aaec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#943-945&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d890d5f3a07be4079e84a1b94ffce914067a8816" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#943-945&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f88d339baba258cec7059eb9facbfeef7f5d2d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#943-945&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec2fdaaa336be7da1ce970180c316908e54f31e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#943-945&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5096aaaa305765534ba83027b9c24ee14a2ff1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#943-945&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a70fd101328e1a1f5efbb2cb620b774e131dc3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_mul&quot;&gt;wrapping_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#943-945&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a488be339186cbdff9f4f54d9b7938ca9d2b896" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1229-1235&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8883ff3482945ad3bebb9f3531f7720a4d48c0bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1229-1235&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8100027f91f678fd87799108ae7fc6cb3e9b6336" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1229-1235&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec30167ec44538ff1e5a60e36aee7c8a1fb3878" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1229-1235&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6296aff611f87aaceb8f65374b9c398ec95b4a56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1229-1235&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f305aeb19bdcedf88c3d829d9a4a733af3a40908" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1229-1235&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f4783d57f5c291c3d33da551c572785945c0b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1104-1110&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1ec38776f8e0e8c90c9d00b0d3df761f2e8984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1104-1110&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db90b62eb94e93b0ea3f45f3b000a065baf8b4ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1104-1110&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0711aa2d4068e2628262db449b290a7e1c41d87d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1104-1110&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7acd0578a5baf87f2dbdfb33b21f6aa47d7371" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1104-1110&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b3c5e8464dee70aa92e9932897d1b5a1cdd736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shl&quot;&gt;wrapping_shl&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1104-1110&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7ac896fd5c61ce16f2ff5fb4f40982ee5b8029" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1261-1267&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68dc1b59565719002570ce24b481fe4c1e719b70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1261-1267&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc1a353a050811f2fdef21d25ceb3405d7bedc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1261-1267&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d993af29e3b5a0cdcb8efb350cf4476db81f305" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1261-1267&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a576288e4679db699c5ec768f835ff27bfebec1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1261-1267&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1517241517c3faa502a0c6fc0298dde5e75ecc40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1261-1267&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8447dcead05dc72098fe387ed8d92f68c2ccdf88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1138-1144&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef6ab2646ca058ab1dc19f74822a9e5a4cb94ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1138-1144&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740d859222959db354685b5dcfb9333490290a1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1138-1144&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ce1513f8081b5058d76b795eb23e34319782b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1138-1144&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a7a80f4374d138d73fcab13ac64b88cf4167e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1138-1144&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd68541c70a9dd9510d41ad67919515726bb635" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_shr&quot;&gt;wrapping_shr&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1138-1144&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4db264e7add580ab953ae36050718f9a84c047" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1031-1033&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d8e8a5df872c11b5b12d7621685f1fc5b1c7f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1031-1033&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8864bb5b8555a48b70b7741e85e0c67866f76db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1031-1033&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f4f3f8c4a05a3ba0b76aae39d0e70c2b211462" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1031-1033&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5288cc766b642e1190d74ad182a542e94cf2765" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1031-1033&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec4e357b8fbf148209a6481fe988e8c434015cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1031-1033&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d3803b311d4b8f9feb95add11c4d8d24ae6e8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#919-921&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6691b0fe2025c84dcbf081910c121f3be9d8121" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#919-921&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5dc663e40397d043e944ef0fe85f24e81e3a72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#919-921&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e6304b2aae95a187132d73317efc5c433d0f594" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#919-921&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a24c1af38ccc94dfa3887bd4edc9c873e1b483" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#919-921&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03895df68db6e4cee0ee54abe0c8185e8286f116" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub const fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#919-921&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b230d22db08995fb512d7b5c8ac876033998150b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div&quot;&gt;checked_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#586-593&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbc44af840d5489f0205453ff697211b3b0f282" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div&quot;&gt;checked_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#586-593&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977142083c50ff65cd1ecb74426daaebc8cd0e33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div&quot;&gt;checked_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#586-593&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ab7e30ecead9bc0914d02a35f44fc50fb905cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div&quot;&gt;checked_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#586-593&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d14c453d327b6930da35e8fb7e91f8e6ed28b65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div&quot;&gt;checked_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#586-593&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899871e2556c8f9473df0bc909a277437f8755f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div&quot;&gt;checked_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#586-593&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0641f86beb523dd973a2f08ba7d08591ce43ac9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div&quot;&gt;checked_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#576-584&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda273a86a70072eb6f76b33e0278ca8d8cfa699" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div&quot;&gt;checked_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#576-584&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced5ce9855abeb1f605943ebc418f4e7519b2e95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div&quot;&gt;checked_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#576-584&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f7362f22cf340a1ba239cd4248bfd6ab038289" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div&quot;&gt;checked_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#576-584&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1d223d532f1b1fa468ca7f48aa7796c16469ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div&quot;&gt;checked_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#576-584&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1edead9046fc304e0a9c5af37a5186c57ed6bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div&quot;&gt;checked_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#576-584&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a32b95095b645df785ef8c75a98308db245bdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div_euclid&quot;&gt;checked_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#615-621&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06c919c6de36fc7268730262b1e26f06823c205" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div_euclid&quot;&gt;checked_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#615-621&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0094f9a3d265dc20c54b8c8853861393cea60874" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div_euclid&quot;&gt;checked_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#615-621&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73f5ed5150d14f2ea311bf381f563afc7059b29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div_euclid&quot;&gt;checked_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#615-621&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa3fd745ab318cb5ea7240d6874ccd53e21901c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div_euclid&quot;&gt;checked_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#615-621&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc6e855a25996188082fac7cb90100b3a05c5bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div_euclid&quot;&gt;checked_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#615-621&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b132e01bd2ec6ba4e00d3b911e93d762507a3f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div_euclid&quot;&gt;checked_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#604-610&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65242e44e08895337f30f1d5906782e73fcec80c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div_euclid&quot;&gt;checked_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#604-610&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2751c36a543facf264631a8e63adca73cc9c13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div_euclid&quot;&gt;checked_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#604-610&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a31f36442e046cc50048b52fb235162d8e0d0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div_euclid&quot;&gt;checked_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#604-610&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d78bded7e6961b39bc721208dad2d25a03004b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div_euclid&quot;&gt;checked_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#604-610&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f35d968c16445379b7d9e7d1574d5539c85bac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_div_euclid&quot;&gt;checked_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#604-610&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb42484a1d197afc6f1d0efdb2f1c6b544c1bfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_pow&quot;&gt;checked_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#796-815&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d09af4fb97254e75a698a3f98f340fbfd04754" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_pow&quot;&gt;checked_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#796-815&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9cce9520469c9725e24dc3d67f598a82208a32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_pow&quot;&gt;checked_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#796-815&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1dae2b2e5462df5bcb7ccde5aef0c8e3a093ec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_pow&quot;&gt;checked_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#796-815&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d34660ed7a8e99fb0c88f62fa155db69c13d2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_pow&quot;&gt;checked_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#796-815&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66544d0d8add340a04544c05f437c7d9a2eb0b36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_pow&quot;&gt;checked_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#796-815&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd39526f2dc69e30f53e40260223058bf541934f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_pow&quot;&gt;checked_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#754-775&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235fb28b6a95cbf65f56b02489a041cde5054701" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_pow&quot;&gt;checked_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#754-775&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b504795a58e46ad89a0f19b33b0b7a62c80d71b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_pow&quot;&gt;checked_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#754-775&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac24446182d737ce9bd8bd12971d49c5872524e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_pow&quot;&gt;checked_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#754-775&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c22bacab3b8b62265c4bdfab57ce0172946361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_pow&quot;&gt;checked_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#754-775&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6c9d6554e7be051755a1dd7059a619e5eecbe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_pow&quot;&gt;checked_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#754-775&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fea0b235f26e277eb1fb89696be684e1aaea801" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem&quot;&gt;checked_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#644-651&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828a9fdb9073b41478ac9959fb969671eb9ef06f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem&quot;&gt;checked_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#644-651&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13765338c7c68833672cbc3eef8281f329b69f2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem&quot;&gt;checked_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#644-651&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f123c5df7f3e275bc8380af05ab61f2ab74162" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem&quot;&gt;checked_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#644-651&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab60a6c2fa508ce5ff92467f86e4df80ada105d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem&quot;&gt;checked_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#644-651&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ad9a742f1efd069bbb26a134f7d272e56ea363" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem&quot;&gt;checked_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#644-651&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc768ae41c201a3940cc39503b9f85fa74f1d15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem&quot;&gt;checked_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#631-639&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b765725c7cb427d6c682eeff8089af7d75badbce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem&quot;&gt;checked_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#631-639&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4574fbf5f2ae74726470eb9a4e1cac7f825bcda1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem&quot;&gt;checked_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#631-639&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f71d9e4c3bef99f993f9814fdc82695a88a55aa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem&quot;&gt;checked_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#631-639&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26576c60fe4a4e9b753b8cdda85140a9867f95bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem&quot;&gt;checked_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#631-639&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f300bced6a025f81e4ef47e712b6ea1c0fc7d477" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem&quot;&gt;checked_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#631-639&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b055fe18198134559d5240c7d9ca7da0690b1ce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem_euclid&quot;&gt;checked_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#672-678&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268ad22b682fffcdcf172045d93cfee50bd739f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem_euclid&quot;&gt;checked_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#672-678&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b72f9c5f2f58088e727e656737aced62d24e8e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem_euclid&quot;&gt;checked_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#672-678&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b39c1971de26299fca355c911eaa14d736656d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem_euclid&quot;&gt;checked_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#672-678&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3c2a43532987d78ebe49aa8292ce6a754cd13c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem_euclid&quot;&gt;checked_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#672-678&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4235cb3a15ae49cf88ca9eb5fb3d895673c18ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem_euclid&quot;&gt;checked_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#672-678&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa99efcd07591c9771e7022b66cde968f7e383b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem_euclid&quot;&gt;checked_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#659-665&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0793b440b0bfa81e3b65c2c2353ea67534d4100" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem_euclid&quot;&gt;checked_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#659-665&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6bae522c60c1f9eff33dad27f61d4dcf6115be1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem_euclid&quot;&gt;checked_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#659-665&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7666fd6151ef955fd38837220e11c681b089435d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem_euclid&quot;&gt;checked_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#659-665&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ca50bc0f3fe1d6dd3d986e55e8f8600d0c8242" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem_euclid&quot;&gt;checked_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#659-665&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d989b2cfef44b62727681bf13f9b88fde42a6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.checked_rem_euclid&quot;&gt;checked_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#659-665&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8506206e5b8450e28c4d8722583f5377e07962ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.div_euclid&quot;&gt;div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1820-1826&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75b6c2a3ae56bb76eed3a5155e27b3898032c43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.div_euclid&quot;&gt;div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1820-1826&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610f85b8ef51feb028e247c931e6d97a9a8e7b46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.div_euclid&quot;&gt;div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1820-1826&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e118608d66f000f4f2fcb0d6eea0dc911104c7ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.div_euclid&quot;&gt;div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1820-1826&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0639a133b7ed4bfbaca64c9923a070291bf1a39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.div_euclid&quot;&gt;div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1820-1826&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f414e4444188da2d6e7b91c97ba6db92ec6b2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.div_euclid&quot;&gt;div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1820-1826&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6fa2503fea520e02438815b89ad40d24f29c0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.div_euclid&quot;&gt;div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1585-1587&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1babf75204ed8df5afc849b62bd33fb6cb6f8ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.div_euclid&quot;&gt;div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1585-1587&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9028527efa706162e0753d81f40c8645d89c48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.div_euclid&quot;&gt;div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1585-1587&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf7e22686aa2c323c9cfe27fcdc36e4584f6d15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.div_euclid&quot;&gt;div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1585-1587&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596a550835aed62c6ce4c3d978380de8dfb1de53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.div_euclid&quot;&gt;div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1585-1587&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400a6eab129d4269ee93195852e7a1bd78fc5d86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.div_euclid&quot;&gt;div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1585-1587&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88077e1c2d482f8bc28ceae81b40d516e30d77dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div&quot;&gt;overflowing_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1474-1480&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af655c56ed0b9252f1ccf076fd59eb6d58d18030" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div&quot;&gt;overflowing_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1474-1480&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1476f8a3ddd6cd1d0a2882f7a6075cd841543cf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div&quot;&gt;overflowing_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1474-1480&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721e2310c8e56e265fdc5006e0f24f66e689dc61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div&quot;&gt;overflowing_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1474-1480&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa81ee6d45509a2ae49603711e4e5b57ec6f9dd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div&quot;&gt;overflowing_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1474-1480&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faff0271c0df0301eb5cde6c2f4baf46992e97d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div&quot;&gt;overflowing_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1474-1480&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fbad447201dd91f2f6108481dd820df3f99d485" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div&quot;&gt;overflowing_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1293-1295&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47e74eaa190f7c8aa6d8876211c73c69c80a548" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div&quot;&gt;overflowing_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1293-1295&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c70b623c34dcfbe186f860073fbc97defbbbec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div&quot;&gt;overflowing_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1293-1295&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d54893ed38a3bd7f0e1d07774bd9cdf93dc97b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div&quot;&gt;overflowing_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1293-1295&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e032cc0bcbfea57ef711913809f4f4a480b853e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div&quot;&gt;overflowing_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1293-1295&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758dba34f7462e7580db65988246687b00ffc60c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div&quot;&gt;overflowing_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1293-1295&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7adccd803f90f2b62e89fc92d4d226a56150d216" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div_euclid&quot;&gt;overflowing_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1507-1513&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7a44c80f6f2b5285381caf136207e3c4e21d0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div_euclid&quot;&gt;overflowing_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1507-1513&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133ae76034149053d74b437c320dc358dbef0156" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div_euclid&quot;&gt;overflowing_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1507-1513&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e1fde8e978ad327fd401414e09c6a08a3698ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div_euclid&quot;&gt;overflowing_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1507-1513&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfaac2399ffa2b6aba31fc3f8a5bc5cf5234e400" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div_euclid&quot;&gt;overflowing_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1507-1513&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda082170bb9b4a3ca43abf9ab8344db481c42d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div_euclid&quot;&gt;overflowing_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1507-1513&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1384cb92b8c9652f72980a112f64fe1d2a6737bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div_euclid&quot;&gt;overflowing_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1325-1327&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0d733529f658352a9f7f6c4725a7e310427294" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div_euclid&quot;&gt;overflowing_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1325-1327&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c868d7895b7ea3ed887e11eecfd9970b022a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div_euclid&quot;&gt;overflowing_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1325-1327&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba41109e05a1c965f674347f5d5ba16de89b91e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div_euclid&quot;&gt;overflowing_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1325-1327&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd38938878c22fd3ae71b6b108f9cc2f8731451c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div_euclid&quot;&gt;overflowing_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1325-1327&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c0799513ef5f507be79745990efef15a24a19b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_div_euclid&quot;&gt;overflowing_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1325-1327&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099bac9f7ca122004ad274581867d866e46a56a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_pow&quot;&gt;overflowing_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1712-1741&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2f2e78e5b9abe4ce399b9623659768342e4ac6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_pow&quot;&gt;overflowing_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1712-1741&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a035ce8fdf4eadd9959764202d47fcb47504d3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_pow&quot;&gt;overflowing_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1712-1741&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fec175ad65e61f26d5f0461c0175888d3d0a23f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_pow&quot;&gt;overflowing_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1712-1741&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84e20498485018429291407040dd7203ca02246" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_pow&quot;&gt;overflowing_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1712-1741&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dadb30fa6dd73772b161473b201ab134478c2add" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_pow&quot;&gt;overflowing_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1712-1741&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb3c6f5125e95b0e3ab276f26688e4e7cbb2943" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_pow&quot;&gt;overflowing_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1489-1519&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2d9bbfd931b5bccb391af5d0b05929807dc2fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_pow&quot;&gt;overflowing_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1489-1519&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9705bf5bc66c24a62ff6edb388bfb12179306914" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_pow&quot;&gt;overflowing_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1489-1519&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c8d56540a93130bd1e1533f23acf2e37aece9f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_pow&quot;&gt;overflowing_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1489-1519&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd47389f47d7f78547378e1025395620507826e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_pow&quot;&gt;overflowing_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1489-1519&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917d5d557dc5663fac1b108d7e2ab19b6769feb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_pow&quot;&gt;overflowing_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1489-1519&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42570ae137ac59052d0aae896aaeef6c66434236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem&quot;&gt;overflowing_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1541-1547&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e4285283a48d546c58ed58cb19f7ec4420e450" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem&quot;&gt;overflowing_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1541-1547&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f9c6769c2b6acffa4e2e8898ba1fd78c236df7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem&quot;&gt;overflowing_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1541-1547&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc51b64fad48a7a9b5a0fc67c31f280face1a3a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem&quot;&gt;overflowing_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1541-1547&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba572f00467c4f156960f8fc0ab04234b4ce8ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem&quot;&gt;overflowing_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1541-1547&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa31873e71d99770955455959cbb7e9a4a2cfe6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem&quot;&gt;overflowing_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1541-1547&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c360812475f3365744ee79b0bec854f13b77993" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem&quot;&gt;overflowing_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1354-1356&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e161104b1329d0e0626cab707fc0f9d3ce29f330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem&quot;&gt;overflowing_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1354-1356&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f61e9d2d88cd9b21e42746e41adf4c0e34f5d40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem&quot;&gt;overflowing_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1354-1356&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91afa66a4d3e47c5e8070c80da30b22ba01a38ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem&quot;&gt;overflowing_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1354-1356&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a2439bb7506fc1384a03f18fe8b835ad5b7342" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem&quot;&gt;overflowing_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1354-1356&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499ec2e54974718599a6d8d3dcd880fe5a6bec0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem&quot;&gt;overflowing_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1354-1356&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14244f5f6596929467d4bf79d3be392dcdc3dbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem_euclid&quot;&gt;overflowing_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1574-1580&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0241f81021de4cae797399fbc7f940a73fafb40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem_euclid&quot;&gt;overflowing_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1574-1580&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a9e2f85b6782e349e832b81410056bfb313108" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem_euclid&quot;&gt;overflowing_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1574-1580&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349a5e1061ffefa172efdb522311cf16af744143" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem_euclid&quot;&gt;overflowing_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1574-1580&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8938df4c1bb9a8ee9ae5ff4ab4782d8b965d44e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem_euclid&quot;&gt;overflowing_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1574-1580&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e7cbce72223f386b774c779c8f2ec74febea9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem_euclid&quot;&gt;overflowing_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1574-1580&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb6b85c53620a5b1a5c1a93060de575f7a6343d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem_euclid&quot;&gt;overflowing_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1386-1388&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb29e94c81c99bff537bd742cb13d45e9077a8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem_euclid&quot;&gt;overflowing_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1386-1388&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27031042badab59d5022127c8db8dc6cd2d32f4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem_euclid&quot;&gt;overflowing_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1386-1388&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee5d7f55df7a269ef3a9f9923f83364203e8b0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem_euclid&quot;&gt;overflowing_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1386-1388&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243ff42599e44a27e0241c1eda313c4a1ca5a8b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem_euclid&quot;&gt;overflowing_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1386-1388&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e1bd2c82373b008f28c0a147508d79783b6391" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.overflowing_rem_euclid&quot;&gt;overflowing_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, &lt;a href=&quot;primitive.bool&quot;&gt;bool&lt;/a&gt;&lt;a href=&quot;primitive.tuple&quot;&gt;)&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1386-1388&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd0d251c897a61f1e69746272292dfa0faff5b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.pow&quot;&gt;pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1763-1783&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4805c0f245196ce30252eb2e35f1456e70d942f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.pow&quot;&gt;pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1763-1783&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31157c904ebece31935b12f5c58e7145b8024916" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.pow&quot;&gt;pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1763-1783&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec27bf256d4682543823bbf2b30ea412ff0ee38b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.pow&quot;&gt;pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1763-1783&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca6ffead9b05bf9368ab306bd568ba77c0f27617" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.pow&quot;&gt;pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1763-1783&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb029708cdc7dd86ef8e98af55f9fca734318871" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.pow&quot;&gt;pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1763-1783&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e817aa47253f97143926a7461778e8c9427d5f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.pow&quot;&gt;pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1538-1558&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4128ba53a0ee72063c38c653cece6754fb602b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.pow&quot;&gt;pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1538-1558&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b668393e72546dc9f1e33ff03053d730b7775b0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.pow&quot;&gt;pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1538-1558&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acdf420769c994139f70d3a7f29af868c6ec4282" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.pow&quot;&gt;pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1538-1558&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b56d83d6fb386495402ae84255c61c70cb73d09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.pow&quot;&gt;pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1538-1558&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f93fbb9b43aff053e7eea52f9efec9dc331bc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.pow&quot;&gt;pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1538-1558&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed300a32fff94701886a2fdc471db0cb86b266f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.rem_euclid&quot;&gt;rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1860-1871&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d9520090461a01103c6a55554ff3e82a43d6bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.rem_euclid&quot;&gt;rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1860-1871&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f560040050bbee9e31368f4f2436fa51624a348c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.rem_euclid&quot;&gt;rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1860-1871&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31a290d0054c7ccc5e7f85d2d107a6be279b6ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.rem_euclid&quot;&gt;rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1860-1871&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e1233850cdeb0868aa6b2ee84222b41cc76f6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.rem_euclid&quot;&gt;rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1860-1871&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6b9183de55a4f26fb3908121157b720fc50c96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.rem_euclid&quot;&gt;rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1860-1871&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29cdeb4122658e8bb27accabfbd7a1ecd4b0067" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.rem_euclid&quot;&gt;rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1615-1617&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee99a46e639627799b6f5cf735d246da35c8768f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.rem_euclid&quot;&gt;rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1615-1617&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5a5722bab0bb2de3d1a849f5627bac81b175b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.rem_euclid&quot;&gt;rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1615-1617&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7665fffda475bc316f6e3dc7ff064d501bc5f11d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.rem_euclid&quot;&gt;rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1615-1617&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493569acf46eba87380a5316027f70ec00cac09d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.rem_euclid&quot;&gt;rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1615-1617&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406825cddf0ab37f5201bfb72ecaa2412ea92451" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.rem_euclid&quot;&gt;rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1615-1617&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee25de0f72001e8e762d0e82f445d0d093e1397" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.saturating_pow&quot;&gt;saturating_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#979-985&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e17208f9f5c33d590f2e743c13b8ce55d7936e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.saturating_pow&quot;&gt;saturating_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#979-985&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab9ef72dbf6048a3415ab69ddc97d86090b86c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.saturating_pow&quot;&gt;saturating_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#979-985&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b752664ab6c6c20bdaec6870cdd4ce2f717b206e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.saturating_pow&quot;&gt;saturating_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#979-985&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e64c993b2b1c6d6e47cb3bcce5da8fe5fa1024c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.saturating_pow&quot;&gt;saturating_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#979-985&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c1fa6f99d8f106cece134e8ead9a80de241875" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.saturating_pow&quot;&gt;saturating_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#979-985&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f59d8e3ec58bc0408baaf47d7cb52bc31ed1c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.saturating_pow&quot;&gt;saturating_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#870-875&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1ce92dee554ed54adbc74d48b2683fa1cef856" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.saturating_pow&quot;&gt;saturating_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#870-875&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f932a9b205026da8ab66d2c560708f8c17e548" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.saturating_pow&quot;&gt;saturating_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#870-875&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765cb1c0fe66ec68d8c92e1cf05282976c3706e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.saturating_pow&quot;&gt;saturating_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#870-875&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd94a4a368efffcd189b4992710f49ddf29fa45f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.saturating_pow&quot;&gt;saturating_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#870-875&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9505b4e01691565491c645ea739c5ad0a5c9f1ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.saturating_pow&quot;&gt;saturating_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#870-875&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c929eaeedb284c25379a66dd6d9721ae52a727ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1085-1087&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4b8e41c3995dadacae2506a2514b209bfe2509" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1085-1087&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a556a40fefb2e4ef40c8c906b6d85eeff4fc51c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1085-1087&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a4177c75743ede654e8d91d4bed8c576b3ed15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1085-1087&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d3820b7dd776884b17ca2a5a3cffd9d9faee3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1085-1087&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab5bf68bbe6d7b2bb08179422277d19508b1d46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1085-1087&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b17e6e890c287c07aeef1d76ac34c6017b4dd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#966-968&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6876d48c776912f9ab2e1f08fe10d9e983dec368" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#966-968&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b32000d83f7acd7b970e7ab95739c5f4ecbf12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#966-968&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fcc7562850c8a0147babb653e8908dd6755adbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#966-968&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed289e2f74b4999ea721029d70876fdcdbae3fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#966-968&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3401c8c82182ea92b6c9199a6d408ea1812bdd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div&quot;&gt;wrapping_div&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#966-968&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0472aa6a5579c896617d6b7cee3b25cb9c19d35e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1115-1117&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e43487edff751556f56670f080c335499a04bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1115-1117&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38643413de184c35b53efe05ace9fe7eed50652a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1115-1117&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d20e96cf3a3071b8fc74ad30bd2ec247851660" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1115-1117&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35642b301fdf2b91feb7c19fb107b115ad3032b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1115-1117&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2662acaa0b78533efc05c8625b4086902c710161" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1115-1117&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2a362ea72c01ed50cfb740f2b70a3e0f9a40a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#993-995&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa8fefe59f86c94ec251014b2bb4250ce75e39e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#993-995&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652115c9a51185ae29904cced964bf612abc89f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#993-995&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b0fc4a55ad780807d26930600f60bd8f00e09b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#993-995&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29381c266e8f9df5ff58fa234242cd72dbec8179" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#993-995&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c77c40660cfcefe1897690d19fea80cbd22107" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_div_euclid&quot;&gt;wrapping_div_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#993-995&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54cf12d89a986ba099de7a92bffaa5264c591ebe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1345-1365&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d320480bc3defd04366c4bc59ae20c0f70eb56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1345-1365&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5afdc64f63e69b8c93f7248315da69a29770764a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1345-1365&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39320c73ef4b1ef7ce93545196ba01e4cd639749" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1345-1365&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fefb93a55a0a3589f9358172be670e3468276a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1345-1365&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f266a1fa184884bac611ff1ad4f5180a5e8d2194" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1345-1365&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80bdc3a282a63e38747a5cd8ebf42017870f9b23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1164-1184&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3985e2c0719b4de3abd54b7b416d6562f4e58d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1164-1184&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f850b76785711836d5eb21684cf126e9cd9bd72c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1164-1184&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c5ab8ad5cfed29382a849fc3bf21748321b34e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1164-1184&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ab8edf8bdd5df4dfdf344d9ebb91c9a54f0aa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1164-1184&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd125e40c2556c7f02c553f0088fa82d3541ca9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_pow&quot;&gt;wrapping_pow&lt;/a&gt;(self, exp: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1164-1184&quot;&gt;[src]&lt;/a&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed1bb11bf77f89e3b2e3d6dacb5feb8ffa41500" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1146-1148&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391651d84cb4d3fcb7ef3bddc866d9dc9ef0536f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1146-1148&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c220c9b6dfe714ba1931b6d4a190df2c70ed1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1146-1148&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644ed7a6b5cb7b265af4c77f59e325a1a6b326d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1146-1148&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39f2de12041a8ddc38c9d1d1b7f0104e1ddaf01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1146-1148&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2cc293e15b37c6484b60f65a057d394be0c44c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1146-1148&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="709a3c4d880b2e08b1db1988cffaaeb3e7bdcfd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1018-1020&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8a56f00fe46bbd016b7648c8c77eed6ca3b02a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1018-1020&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b498240e7eb84b7f65b5059cc09459335ff2868" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1018-1020&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781f14f3376cf14dee3fb18822bfa7654c172c05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1018-1020&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf3273d2a435d1c974236f7146d1245e44d6719" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1018-1020&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09eccff9780737dec0868638e1dd72991858c522" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem&quot;&gt;wrapping_rem&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1018-1020&quot;&gt;[src]&lt;/a&gt;1.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335d20fefe95d5fc243febb9a553ccb370a89374" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1175-1177&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7a98ade3f1dbea756f46d1c49eb10319cdb4d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1175-1177&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79178c3d366d2997a0e23dfc150b4f5aebe8d5ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1175-1177&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08da9921b5c6a75c71bb02fc4aeeec3a960623ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1175-1177&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c1030bd6de22ef10bf77128541565b6d9181c00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1175-1177&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7039f218618831da5e6f4d75df46d11bf42245" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#1175-1177&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b004f244cba3f4096b86c8b2351fee6b55b05b93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1046-1048&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a208f52543593c9e9a8d66ba615d023cb526b66b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1046-1048&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d194335cc70690be3b14f7d9275bc673fb09b8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1046-1048&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d123147e01951bf10434f4c032fdc3507e2a0a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1046-1048&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53188478a150af161acd72fd9e20498dd311ea86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1046-1048&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298b61d04cc3d8e305818cd5834535c924c4001a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub fn &lt;a href=&quot;#method.wrapping_rem_euclid&quot;&gt;wrapping_rem_euclid&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#1046-1048&quot;&gt;[src]&lt;/a&gt;1.38.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2560a164bc1928845aabd17967a86063c7b32cd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#471-475&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1b2b7d6e51df8ba26f55843862dcd82d3b7697" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#471-475&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a77df28e64978b06ddae529a32cfa27758e0c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#471-475&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582584fd7d1f3aa36aa478cb5d1cc775f83d01de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#471-475&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44d8141c166d2cdd2e7d622bc0bb057e27c00b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#471-475&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b88656bdb236edef6ba68a446532dfc3e314d96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#471-475&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa82e2e722c142488c9aa4f1af91ba614620a99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#468-472&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf864e064dc09289a0f61f6070e98e093ef8ed75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#468-472&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61911d50e223eb4396811759bb47e17a856c04bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#468-472&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22dfb710462097f15f21a6d83640a11f30c41f69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#468-472&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a495cf60009744a54eea975e35c5ac145c0c107c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#468-472&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b841b285793c26167585ac970cf99db5e8d49289" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#468-472&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49776a92e8b270a5001c9336ca476539ee20a3bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#559-563&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d003feea93a2c2e2ff9c044d38cd44a179061e55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#559-563&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17a0d41d5fce4307f3684afe9a4b92c356f49c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#559-563&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ccf546a4e83228b07a73d7f34e8807387b6bb65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#559-563&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599378519dcc00dd941a61c1aa00b2538733bcbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#559-563&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8d2f383bcd76a3126f1bbb1bfe6cd1abb579c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#559-563&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f0f54d02306a4ff6e59818c23aa6fc863ec1f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#552-556&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27fa8e25c23638a3b2836ffebbacfb5d96a994c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#552-556&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12f813fb309d1d7b419c5a18af8295ba360d939" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#552-556&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe24bb29ce2fb0f28ea866183cdf207a7acfd18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#552-556&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3f102eaa507b1314f7f7f3a2bbbe290cd0a3ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#552-556&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047534cf4a8f194c17428be428c465eeb78ba0a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#552-556&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfbc879def99083089534ff598f71dcf3ba23301" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#515-519&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4010d925f6da7ffe85fbc4ee69267eb7cb09ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#515-519&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2be40aa6a57583ba5ba09335ad39f3ed989fdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#515-519&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd201cefd0c88be524595958e75b1946c4ed7111" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#515-519&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58978330aae5a53e75034cab93ecf83a93069b17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#515-519&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1641f2354c9eeaa5ab0010ec8515c88d8b7053a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/int_macros.rs.html#515-519&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c1abcc1af19d20ea15d74e31a522b11f4def83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#510-514&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035d1a6552509dd9b9bbf83cd5299409297c09f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#510-514&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252fc60b72ed360773b30f62d689fd1a5bfb8b2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#510-514&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb412b1a99ffac900175fd3d9e65ae00fee60f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#510-514&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a50fe596ce777bafc4f00b56d381c83a6bd189f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#510-514&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e494139b2ae7b496c7280f7774d4948a3162514f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the result of the operation, \
                          without modifying the original&quot;]pub unsafe fn &lt;a href=&quot;#method.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;(self, rhs: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/uint_macros.rs.html#510-514&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f156f7e53fce9452e58937a0219a76d82833fb70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_end&quot;&gt;trim_end&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1791-1793&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9cf8794705347edb72a195929b1e110a760787a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_end&quot;&gt;trim_end&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1791-1793&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38fa4927a52beaefe9968039edad1ad95382d5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_end_matches&quot;&gt;trim_end_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;P as &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;../str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;../str/pattern/trait.reversesearcher&quot;&gt;ReverseSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#2061-2072&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6962a61e2d33beb5e10e098826d2a543d27f1c20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_end_matches&quot;&gt;trim_end_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;P as &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;str/pattern/trait.reversesearcher&quot;&gt;ReverseSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#2061-2072&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb717e66b6f99b1274f6dd18358825997c60cb26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_matches&quot;&gt;trim_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;P as &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;../str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;../str/pattern/trait.doubleendedsearcher&quot;&gt;DoubleEndedSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1906-1923&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c090aaf3e3b15033b8271a0731271d03861bc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_matches&quot;&gt;trim_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;P as &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;&amp;gt;::&lt;a href=&quot;str/pattern/trait.pattern#associatedtype.Searcher&quot;&gt;Searcher&lt;/a&gt;: &lt;a href=&quot;str/pattern/trait.doubleendedsearcher&quot;&gt;DoubleEndedSearcher&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1906-1923&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b25b23f498b3ba1b63b157de84e5f9e42585b52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_start&quot;&gt;trim_start&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1754-1756&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26314fdfaa83611bb6a41bfd471ca8c6f92cd070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_start&quot;&gt;trim_start&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1754-1756&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f417dcff9b5b7832e3207c75b62f76aa1c291f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_start_matches&quot;&gt;trim_start_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;../str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1955-1963&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7feb97267545e22daa801cc6801334777696157" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a new slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim_start_matches&quot;&gt;trim_start_matches&lt;/a&gt;&amp;lt;'a, P&amp;gt;(&amp;amp;'a self, pat: P) -&amp;gt; &amp;amp;'a &lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;P: &lt;a href=&quot;str/pattern/trait.pattern&quot;&gt;Pattern&lt;/a&gt;&amp;lt;'a&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1955-1963&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fc5130bcd8940b072d7b1646a69bdc8d7f4f1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim&quot;&gt;trim&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1717-1719&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3868d37222335405170075c451e844562f4941a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use =
  &quot;this returns the trimmed string as a slice, \
                  without modifying the original&quot;]pub fn &lt;a href=&quot;#method.trim&quot;&gt;trim&lt;/a&gt;(&amp;amp;self) -&amp;gt; &amp;amp;&lt;a href=&quot;primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#1717-1719&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915fcff0f3bf637e3bde6a4a3141f9a2ffa1f130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.set_ptr_value&quot;&gt;set_ptr_value&lt;/a&gt;(self, val: &lt;a href=&quot;primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#711-719&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfeecdf9be21c2b5669923b434593f81e9241624" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.set_ptr_value-1&quot;&gt;set_ptr_value&lt;/a&gt;(self, val: &lt;a href=&quot;primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#818-826&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e02232544ff5a7c121dabe7b6e833a5322470ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.wrapping_add&quot;&gt;wrapping_add&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#616-621&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fbee7202b1b5bd1c709b530cfe04c3a965b7342" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.wrapping_add-1&quot;&gt;wrapping_add&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#723-728&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf146099463ac0f250554741d85b519fd9bfc88d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.wrapping_offset&quot;&gt;wrapping_offset&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#281-287&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5573a125d1a24d85a0ef0fda957570876d5d10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.wrapping_offset-1&quot;&gt;wrapping_offset&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#287-293&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53dd70297a0c0d7c4ce3c8ade0370afa64bc7a53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.wrapping_sub&quot;&gt;wrapping_sub&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#673-678&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaeacc375405579dc83a4c4383ed0f02a980b250" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub fn &lt;a href=&quot;#method.wrapping_sub-1&quot;&gt;wrapping_sub&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#780-785&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d2468e3ca46724b3e2fe13d4ae39295390ba2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub unsafe fn &lt;a href=&quot;#method.add&quot;&gt;add&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#494-500&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7cecb29ed63d8851bb8d7484613317920ec04d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub unsafe fn &lt;a href=&quot;#method.add-1&quot;&gt;add&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#601-607&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f334efbbdb20e08dbfb177e67899570e1b3342c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub unsafe fn &lt;a href=&quot;#method.offset&quot;&gt;offset&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#220-226&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c04c1605f7d3982aa68d231124b13cdd50995a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub unsafe fn &lt;a href=&quot;#method.offset-1&quot;&gt;offset&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#225-233&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57bd3c6e501513fb5f5d3cc276ca482ac136eee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub unsafe fn &lt;a href=&quot;#method.sub&quot;&gt;sub&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/const_ptr.rs.html#558-564&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1777cd214d01231baea86aaa0f3e2995bb702f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns a new pointer rather than modifying its argument&quot;]pub unsafe fn &lt;a href=&quot;#method.sub-1&quot;&gt;sub&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mut_ptr.rs.html#665-671&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2d858d6bf0d0e530a9326fc5c80010a05748b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns the subslice without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_prefix&quot;&gt;strip_prefix&lt;/a&gt;(&amp;amp;self, prefix: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;T&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#1720-1732&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e897e63c81000217d4f6674e3e6f772b8fda853" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns the subslice without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_prefix&quot;&gt;strip_prefix&lt;/a&gt;(&amp;amp;self, prefix: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: &lt;a href=&quot;cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;T&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#1720-1732&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a132485509868be3e59969db4667abfe871330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns the subslice without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_suffix&quot;&gt;strip_suffix&lt;/a&gt;(&amp;amp;self, suffix: &lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;T&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#1751-1763&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351e8f657dd418d149f8091e9f91a58b720850a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;returns the subslice without modifying the original&quot;]pub fn &lt;a href=&quot;#method.strip_suffix&quot;&gt;strip_suffix&lt;/a&gt;(&amp;amp;self, suffix: &lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;&amp;amp;[T]&lt;/a&gt;&amp;gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T: &lt;a href=&quot;cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;T&amp;gt;,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/mod.rs.html#1751-1763&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b2dc8d6b4efc250bfada176762f5d2abb9db2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;use `.truncate()` if you don't need the other half&quot;]pub fn &lt;a href=&quot;#method.split_off&quot;&gt;split_off&lt;/a&gt;(&amp;amp;mut self, at: &lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../struct.vecdeque&quot;&gt;VecDeque&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/vec_deque.rs.html#1999-2041&quot;&gt;[src]&lt;/a&gt;1.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4a86dd378202bbecb79573a9a29f98206ca7cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;use `.truncate()` if you don't need the other half&quot;]pub fn &lt;a href=&quot;#method.split_off&quot;&gt;split_off&lt;/a&gt;(&amp;amp;mut self, at: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#1441-1445&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc1bde480279000fdf7d7bab16e95e86b110e14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;use `.truncate()` if you don't need the other half&quot;]pub fn &lt;a href=&quot;#method.split_off&quot;&gt;split_off&lt;/a&gt;(&amp;amp;mut self, at: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#1406-1433&quot;&gt;[src]&lt;/a&gt;1.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a14521d43210e84e4d837e535c7c9050454b236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[must_use = &quot;use `.truncate()` if you don't need the other half&quot;]pub fn &lt;a href=&quot;#method.split_off&quot;&gt;split_off&lt;/a&gt;(&amp;amp;mut self, at: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.vecdeque&quot;&gt;VecDeque&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/vec_deque.rs.html#1999-2041&quot;&gt;[src]&lt;/a&gt;1.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a0fb174403cf2d490415efd095fd770ddf4efc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[repr(packed)]&lt;/code&gt; reduces padding to make the struct size smaller. The representation of enums isn't strictly defined in Rust, and this attribute won't work on enums.</source>
          <target state="translated">&lt;code&gt;#[repr(packed)]&lt;/code&gt; уменьшает отступы, чтобы уменьшить размер структуры. Представление перечислений строго не определено в Rust, и этот атрибут не будет работать с перечислениями.</target>
        </trans-unit>
        <trans-unit id="3fe3d6cef98af858d0d5d918f9b632e38d05312e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[repr(simd)]&lt;/code&gt; will give a struct consisting of a homogeneous series of machine types (i.e., &lt;code&gt;u8&lt;/code&gt;, &lt;code&gt;i32&lt;/code&gt;, etc) a representation that permits vectorization via SIMD. This doesn't make much sense for enums since they don't consist of a single list of data.</source>
          <target state="translated">&lt;code&gt;#[repr(simd)]&lt;/code&gt; даст структуру, состоящую из однородной серии типов машин (например, &lt;code&gt;u8&lt;/code&gt; , &lt;code&gt;i32&lt;/code&gt; и т.д.), представление, которое разрешает векторизацию через SIMD. Это не имеет особого смысла для перечислений, поскольку они не состоят из единого списка данных.</target>
        </trans-unit>
        <trans-unit id="f0bd9f70c7d85250d56fa8eb6dc682dca7b3ddb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[repr(transparent)]&lt;/code&gt; struct around one of the types in this list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48c7d3f0fc5ee14c8c96d789bbf366780419dd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[track_caller]&lt;/code&gt; and &lt;code&gt;#[naked]&lt;/code&gt; cannot both be applied to the same function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57a0e610a164c62e03711b2ba96774ab725f205" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[track_caller]&lt;/code&gt; can not be applied on struct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d24975d88ffde3bf61dcb46929bfa0cae49ef54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[track_caller]&lt;/code&gt; requires functions to have the &lt;code&gt;&quot;Rust&quot;&lt;/code&gt; ABI for implicitly receiving caller location. See &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/2091-inline-semantic.md&quot;&gt;RFC 2091&lt;/a&gt; for details on this and other restrictions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e22c77dfb5bdc39cf85f2511d005d182b68ac69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[unwind(aborts)]&lt;/code&gt; -- specifies that if a non-Rust ABI function should abort the process if it attempts to unwind. This is the safer and preferred option.</source>
          <target state="translated">&lt;code&gt;#[unwind(aborts)]&lt;/code&gt; - указывает, что если функция ABI, отличная от Rust, должна прервать процесс, если она попытается откатиться. Это более безопасный и предпочтительный вариант.</target>
        </trans-unit>
        <trans-unit id="f6ef8afa07009120ba1ff814dbb9b76006904869" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#[unwind(allowed)]&lt;/code&gt; -- specifies that a non-Rust ABI function should be allowed to unwind. This can easily result in Undefined Behavior (UB), so be careful.</source>
          <target state="translated">&lt;code&gt;#[unwind(allowed)]&lt;/code&gt; - указывает, что функциям ABI, отличным от Rust, должна быть разрешена раскрутка. Это может легко привести к неопределенному поведению (UB), поэтому будьте осторожны.</target>
        </trans-unit>
        <trans-unit id="d2141675567e2ff5af40224f9104bc000706071a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#b&lt;/code&gt; - precedes the argument with a &lt;code&gt;0b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;#b&lt;/code&gt; - перед аргументом ставится &lt;code&gt;0b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f27213319ed7730957b4ff0bab03dd5ca3bd1367" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#o&lt;/code&gt; - precedes the argument with a &lt;code&gt;0o&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;#o&lt;/code&gt; - предшествует аргументу &lt;code&gt;0o&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="edebe4d36cf7b19364e0464326bee8846ebdde2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#x&lt;/code&gt; - precedes the argument with a &lt;code&gt;0x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;#x&lt;/code&gt; - перед аргументом &lt;code&gt;0x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="556dbb315900c0a8252cc4637442128cc2c845f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$(i:ident),\*&lt;/code&gt; is &lt;em&gt;also&lt;/em&gt; an NT; it is a complex NT that matches a comma-separated repetition of identifiers. The &lt;code&gt;,&lt;/code&gt; is the separator token for the complex NT; it occurs in between each pair of elements (if any) of the matched fragment.</source>
          <target state="translated">&lt;code&gt;$(i:ident),\*&lt;/code&gt; является &lt;em&gt;также&lt;/em&gt; НТ; это сложный NT, который соответствует повторению идентификаторов, разделенных запятыми. &lt;code&gt;,&lt;/code&gt; Является разделителем маркер для комплексной NT; это происходит между каждой парой элементов (если есть) совпадающего фрагмента.</target>
        </trans-unit>
        <trans-unit id="0d6854746382a364c36a12ffd25cb936fbfb709b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$crate&lt;/code&gt; is only used within &lt;a href=&quot;macros-by-example&quot;&gt;macro transcribers&lt;/a&gt;, and can only be used as the first segment, without a preceding &lt;code&gt;::&lt;/code&gt;. &lt;code&gt;$crate&lt;/code&gt; will expand to a path to access items from the top level of the crate where the macro is defined, regardless of which crate the macro is invoked.</source>
          <target state="translated">&lt;code&gt;$crate&lt;/code&gt; используется только в &lt;a href=&quot;macros-by-example&quot;&gt;транскриберах макросов&lt;/a&gt; и может использоваться только как первый сегмент без предшествующего &lt;code&gt;::&lt;/code&gt; . &lt;code&gt;$crate&lt;/code&gt; расширится до пути для доступа к элементам с верхнего уровня ящика, в котором определен макрос, независимо от того, какой ящик вызывается.</target>
        </trans-unit>
        <trans-unit id="679d8433733458586e46b500fc8086472e219797" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54d7e8aae1d7d250920a5c4fa2d1906438e69c1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; (only dereferencing of references, not raw pointers)</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; и &lt;code&gt;*&lt;/code&gt; (только разыменование ссылок, не сырые указатели)</target>
        </trans-unit>
        <trans-unit id="ed5cf0f3f2314a3c1db59896239e99da325e5c85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; denotes that your pattern expects a reference to an object. Hence &lt;code&gt;&amp;amp;&lt;/code&gt; is a part of said pattern: &lt;code&gt;&amp;amp;Foo&lt;/code&gt; matches different objects than &lt;code&gt;Foo&lt;/code&gt; does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a236bb980229e8d9c386df1defdd23e0611c4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; vs &lt;code&gt;ref&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100b85a2a9d4dd25222be6f6e9373487495df2f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="003a3eb1987d2ceeb5c27dc2dec9740cbefe4089" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;Lifetime&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;Lifetime&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8cfad7584c9bbb0b669e0b14816e837f362b14f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;=&lt;/code&gt;&lt;code&gt;|=&lt;/code&gt;&lt;code&gt;^=&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;=&lt;/code&gt;&lt;code&gt;|=&lt;/code&gt;&lt;code&gt;^=&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3dabac979268ce43c29120df6a9a25cb04ca0786" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;CStr&lt;/code&gt; is to &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;: the former in each pair are borrowed references; the latter are owned strings.</source>
          <target state="translated">&lt;code&gt;&amp;amp;CStr&lt;/code&gt; относится к &lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; так же,&lt;/a&gt; как &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; к &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; : первые в каждой паре являются заимствованными ссылками; последние являются собственными строками.</target>
        </trans-unit>
        <trans-unit id="28ddedd7da11b37f81d4b4b0ec1a458fb4a8fbe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;CStr&lt;/code&gt; is to &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;: the former in each pair are borrowed references; the latter are owned strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231a608bd66cb7f4fedf355a72aeb9dabc04ae6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;OsStr&lt;/code&gt; is to &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;: the former in each pair are borrowed references; the latter are owned strings.</source>
          <target state="translated">&lt;code&gt;&amp;amp;OsStr&lt;/code&gt; относится к &lt;a href=&quot;struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; ,&lt;/a&gt; как &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; к &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; : первые в каждой паре являются заимствованными ссылками; последние являются собственными строками.</target>
        </trans-unit>
        <trans-unit id="25c7e55fe7d70e4444b60101dac687b9cda69215" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;OsStr&lt;/code&gt; is to &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;: the former in each pair are borrowed references; the latter are owned strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a979315d4e1967955d0501abf490f0085268c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;T&lt;/code&gt; or &lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;&amp;amp;U&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; implements &lt;code&gt;Deref&amp;lt;Target = U&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;&amp;amp;T&lt;/code&gt; или &lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;&amp;amp;U&lt;/code&gt; если &lt;code&gt;T&lt;/code&gt; реализует &lt;code&gt;Deref&amp;lt;Target = U&amp;gt;&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="0161cd0539110f53c2febf48c1cca2447115c0df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;T&lt;/code&gt; to &lt;code&gt;*const T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;T&lt;/code&gt; к &lt;code&gt;*const T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46dda6233dba0ecad7934ea0813e4914047cfeab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;T&lt;/code&gt;, &lt;code&gt;&amp;amp;mut T&lt;/code&gt;, &lt;code&gt;*const T&lt;/code&gt;, &lt;code&gt;*mut T&lt;/code&gt;, &lt;code&gt;[T; n]&lt;/code&gt; and &lt;code&gt;[T]&lt;/code&gt; implement the trait if &lt;code&gt;T&lt;/code&gt; does.</source>
          <target state="translated">&lt;code&gt;&amp;amp;T&lt;/code&gt; , &lt;code&gt;&amp;amp;mut T&lt;/code&gt; , &lt;code&gt;*const T&lt;/code&gt; , &lt;code&gt;*mut T&lt;/code&gt; , &lt;code&gt;[T; n]&lt;/code&gt; и &lt;code&gt;[T]&lt;/code&gt; реализуют трейт, если &lt;code&gt;T&lt;/code&gt; это делает.</target>
        </trans-unit>
        <trans-unit id="dc96200efbec5d8076d1b9b94b52ec88183c28a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;T&lt;/code&gt;, &lt;code&gt;&amp;amp;mut T&lt;/code&gt;, &lt;code&gt;*const T&lt;/code&gt;, &lt;code&gt;*mut T&lt;/code&gt;, &lt;code&gt;[T; n]&lt;/code&gt;, and &lt;code&gt;[T]&lt;/code&gt; implement the trait if &lt;code&gt;T&lt;/code&gt; does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50da4761f95f8b4904a2b4673cd94aa0fa7b26f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;[T]&lt;/code&gt; - &lt;em&gt;shared slice&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;[T]&lt;/code&gt; - &lt;em&gt;общий фрагмент&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e24aa999f8934769ffd4c780b39a8e4fb6a9424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;[T]&lt;/code&gt;, a 'shared slice', often just called a 'slice', it doesn't own the data it points to, it borrows it.</source>
          <target state="translated">&lt;code&gt;&amp;amp;[T]&lt;/code&gt; , &amp;laquo;общий срез&amp;raquo;, часто называемый просто &amp;laquo;срезом&amp;raquo;, он не владеет данными, на которые указывает, он их заимствует.</target>
        </trans-unit>
        <trans-unit id="837b4b1aa442e15d820d83dbd88f70dbe053cf46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;expr&lt;/code&gt;, &lt;code&gt;&amp;amp;mut expr&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;expr&lt;/code&gt; , &lt;code&gt;&amp;amp;mut expr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46b729c5a5ac065b8dd74eee17a83326f430f766" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; and &lt;code&gt;&amp;amp;T&lt;/code&gt; follow LLVM&amp;rsquo;s scoped &lt;a href=&quot;http://llvm.org/docs/LangRef.html#noalias&quot;&gt;noalias&lt;/a&gt; model, except if the &lt;code&gt;&amp;amp;T&lt;/code&gt; contains an &lt;a href=&quot;../std/cell/struct.unsafecell&quot;&gt;&lt;code&gt;UnsafeCell&amp;lt;U&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut T&lt;/code&gt; и &lt;code&gt;&amp;amp;T&lt;/code&gt; следуют модели &lt;a href=&quot;http://llvm.org/docs/LangRef.html#noalias&quot;&gt;noalias&lt;/a&gt; с ограниченной областью действия LLVM , за исключением случаев, когда &lt;code&gt;&amp;amp;T&lt;/code&gt; содержит &lt;a href=&quot;../std/cell/struct.unsafecell&quot;&gt; &lt;code&gt;UnsafeCell&amp;lt;U&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="25e74d9ebf04af4dc90c16effe573bf17b812351" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; references can be freely coerced into &lt;code&gt;&amp;amp;T&lt;/code&gt; references with the same referent type, and references with longer lifetimes can be freely coerced into references with shorter ones.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut T&lt;/code&gt; Ссылки &amp;amp; mut T могут быть свободно преобразованы в ссылки &lt;code&gt;&amp;amp;T&lt;/code&gt; с тем же типом референта, а ссылки с более длительным временем жизни могут быть свободно преобразованы в ссылки с более короткими.</target>
        </trans-unit>
        <trans-unit id="994822c40583180d62be96191de5478d1f130277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; references get all of the above except &lt;code&gt;Copy&lt;/code&gt; and &lt;code&gt;Clone&lt;/code&gt; (to prevent creating multiple simultaneous mutable borrows), plus the following, regardless of the type of its referent:</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut T&lt;/code&gt; Ссылки &amp;amp; mut T получают все вышеперечисленное, кроме &lt;code&gt;Copy&lt;/code&gt; и &lt;code&gt;Clone&lt;/code&gt; (для предотвращения создания нескольких одновременных изменяемых заимствований), плюс следующее, независимо от типа его референта:</target>
        </trans-unit>
        <trans-unit id="58231ba0fe17b906446ee76384afc785ea3cf780" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; references get all of the above except &lt;code&gt;ToSocketAddrs&lt;/code&gt;, plus the following, if &lt;code&gt;T&lt;/code&gt; implements that trait:</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut T&lt;/code&gt; Ссылки &amp;amp; mut T получают все вышеперечисленное, кроме &lt;code&gt;ToSocketAddrs&lt;/code&gt; , плюс следующее, если &lt;code&gt;T&lt;/code&gt; реализует этот признак:</target>
        </trans-unit>
        <trans-unit id="9f3e4a0e475933a54d975d40cd0187e169300438" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;&amp;amp;T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;&amp;amp;T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5cafff14ac73559830fb93ee301a81f3f716d8d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;&amp;amp;mut U&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; implements &lt;code&gt;DerefMut&amp;lt;Target = U&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;&amp;amp;mut U&lt;/code&gt; если &lt;code&gt;T&lt;/code&gt; реализует &lt;code&gt;DerefMut&amp;lt;Target = U&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7f58f2fca8c8b73d2398dfdb8b109feaba2f26e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;*mut T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut T&lt;/code&gt; к &lt;code&gt;*mut T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="314c822c9bb0a94fd29dddc9cc81ed697c1733b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut [T]&lt;/code&gt; - &lt;em&gt;mutable slice&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut [T]&lt;/code&gt; - &lt;em&gt;изменяемый срез&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="605363775d1f90fd43b62d85732f360a5bccbdfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;mut [T]&lt;/code&gt;, a 'mutable slice', mutably borrows the data it points to.</source>
          <target state="translated">&lt;code&gt;&amp;amp;mut [T]&lt;/code&gt; , &amp;laquo;изменяемый фрагмент&amp;raquo;, взаимно заимствует данные, на которые он указывает.</target>
        </trans-unit>
        <trans-unit id="ba1a18bfa8b6a24e62dc6f8a2e5508898e614305" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;str&lt;/code&gt;, not &lt;code&gt;&amp;amp;Path&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c76a341db428f538063d9949d921df1bd350ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;type&lt;/code&gt;, &lt;code&gt;&amp;amp;mut type&lt;/code&gt;, &lt;code&gt;&amp;amp;'a type&lt;/code&gt;, &lt;code&gt;&amp;amp;'a mut type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;type&lt;/code&gt; , &lt;code&gt;&amp;amp;mut type&lt;/code&gt; , &lt;code&gt;&amp;amp;'a type&lt;/code&gt; , &lt;code&gt;&amp;amp;'a mut type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e46f816411016db64167d67808550c9a4e1de4a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&lt;/code&gt; - the argument is right-aligned in &lt;code&gt;width&lt;/code&gt; columns</source>
          <target state="translated">&lt;code&gt;&amp;gt;&lt;/code&gt; - аргумент выравнивается по правому краю в столбцах &lt;code&gt;width&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2b9944b1a3b4ab996e45769e6a7d492f69bd586" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f2df8356639a025d9c2c68f00d02b26c7d98800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt; - the argument is left-aligned in &lt;code&gt;width&lt;/code&gt; columns</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; - аргумент выравнивается по левому краю в столбцах &lt;code&gt;width&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1521eb066642c72f0edfb9d98bc93d57ee54bbb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt; (&lt;code&gt;as&lt;/code&gt;&lt;em&gt;TypePath&lt;/em&gt;)? &lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Тип&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;as&lt;/code&gt; &lt;em&gt;TypePath&lt;/em&gt; )? &lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31c6a581d48ddd7b26ffd61864801566caa2ead1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2dbbaf6a02a43903e03096aff35adf3a1a3b43ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;em&gt;GenericParams&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;em&gt;GenericParams&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="765c9e9bad553a140772da4efd5bf00a80d68666" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;u8 as Age&amp;gt;::Mythology&lt;/code&gt; is a trait method, which is definitely not a type. However, the &lt;code&gt;Age&lt;/code&gt; trait provides an associated type &lt;code&gt;Empire&lt;/code&gt; which can be used as a type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30bb03e8170ae70fd3ac09af2cb8fd9b9ada49db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;u8 as Rick&amp;gt;::Morty&lt;/code&gt; is an enum variant, you cannot use a variant as a type, you have to use the enum directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028839fbf25c4f0df369882e065239cc563d52f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt; ( ~[&lt;code&gt;'&lt;/code&gt;&lt;code&gt;\&lt;/code&gt; \n \r \t] | QUOTE_ESCAPE | ASCII_ESCAPE | UNICODE_ESCAPE ) &lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'&lt;/code&gt; (~ [ &lt;code&gt;'&lt;/code&gt; &lt;code&gt;\&lt;/code&gt; \ n \ r \ t] | QUOTE_ESCAPE | ASCII_ESCAPE | UNICODE_ESCAPE) &lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c45d46db2c9cb6be797290a1904f27933d568b9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER_OR_KEYWORD&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER_OR_KEYWORD&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="262b1239e297499c69379411bda505caaab17575" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;identifiers&quot;&gt;NON_KEYWORD_IDENTIFIER&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;identifiers&quot;&gt;NON_KEYWORD_IDENTIFIER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9efc2adcc35c3e643a509481004b4dac937306d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'_&lt;/code&gt;, cannot be used as a lifetime identifier because it is a reserved for the anonymous lifetime. To fix this, use a lowercase letter such as 'a, or a series of lowercase letters such as &lt;code&gt;'foo&lt;/code&gt;. For more information, see &lt;a href=&quot;book/appendix-02-operators#non-operator-symbols&quot;&gt;the book&lt;/a&gt;. For more information on using the anonymous lifetime in rust nightly, see &lt;a href=&quot;https://doc.rust-lang.org/nightly/edition-guide/rust-2018/ownership-and-lifetimes/the-anonymous-lifetime.html&quot;&gt;the nightly book&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7a1d050349eb0a9405c6fd243d43af7d15ed3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'a + trait&lt;/code&gt;, &lt;code&gt;trait + trait&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'a + trait&lt;/code&gt; , &lt;code&gt;trait + trait&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe3a2f028142c8a5e43a922d060f7bb6597aba89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'static&lt;/code&gt; is used for the static lifetime and cannot be used as a generic lifetime parameter</source>
          <target state="translated">&lt;code&gt;'static&lt;/code&gt; используется для статического времени жизни и не может использоваться как общий параметр времени жизни</target>
        </trans-unit>
        <trans-unit id="e921e8c236df635ceb7f81bd144058177296ca55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'static&lt;/code&gt; lifetime elision</source>
          <target state="translated">&lt;code&gt;'static&lt;/code&gt; продолжительность жизни</target>
        </trans-unit>
        <trans-unit id="c5ec56d05d6ab6d5da38345a1ca5bd84376907d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;( $($a:tt $b:tt)* ; )&lt;/code&gt; : legal, because FIRST(&lt;code&gt;$b:tt&lt;/code&gt;) = { &lt;code&gt;$b:tt&lt;/code&gt; } is &amp;sube; FOLLOW(&lt;code&gt;tt&lt;/code&gt;) = ANYTOKEN, as is FIRST(&lt;code&gt;;&lt;/code&gt;) = { &lt;code&gt;;&lt;/code&gt; }.</source>
          <target state="translated">&lt;code&gt;( $($a:tt $b:tt)* ; )&lt;/code&gt; : допустимо, потому что FIRST ( &lt;code&gt;$b:tt&lt;/code&gt; ) = { &lt;code&gt;$b:tt&lt;/code&gt; } равно is FOLLOW ( &lt;code&gt;tt&lt;/code&gt; ) = ANYTOKEN, как FIRST ( &lt;code&gt;;&lt;/code&gt; ) = { &lt;code&gt;;&lt;/code&gt; }.</target>
        </trans-unit>
        <trans-unit id="f8684b12a0aaa57d30fa673b0fe225241654fd25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;( $($t:tt),* , $(t:tt),* )&lt;/code&gt; : legal, (though any attempt to actually use this macro will signal a local ambiguity error during expansion).</source>
          <target state="translated">&lt;code&gt;( $($t:tt),* , $(t:tt),* )&lt;/code&gt; : допустимо (хотя любая попытка использовать этот макрос будет сигнализировать о локальной ошибке неоднозначности во время раскрытия).</target>
        </trans-unit>
        <trans-unit id="56547248e7530810d57671a54cda37e9b3352f80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($($e:expr)*)&lt;/code&gt; : illegal, because expr NTs are not in FOLLOW(expr NT).</source>
          <target state="translated">&lt;code&gt;($($e:expr)*)&lt;/code&gt; : недопустимо, потому что expr NT не находятся в FOLLOW (expr NT).</target>
        </trans-unit>
        <trans-unit id="b55585a8535a57d73d71c16e179bbeb81714a782" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($($ty:ty)-+)&lt;/code&gt; : illegal, because separator &lt;code&gt;-&lt;/code&gt; is not in FOLLOW(&lt;code&gt;ty&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;($($ty:ty)-+)&lt;/code&gt; : недопустимо, потому что разделитель &lt;code&gt;-&lt;/code&gt; отсутствует в FOLLOW ( &lt;code&gt;ty&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="993f4f862973836c075125ff5c2f713d6d815015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($pa:pat $pb:pat $ty:ty ,)&lt;/code&gt; : illegal, because FIRST(&lt;code&gt;$pb:pat $ty:ty ,&lt;/code&gt;) = { &lt;code&gt;$pb:pat&lt;/code&gt; } ⊈ FOLLOW(&lt;code&gt;pat&lt;/code&gt;), and also FIRST(&lt;code&gt;$ty:ty ,&lt;/code&gt;) = { &lt;code&gt;$ty:ty&lt;/code&gt; } ⊈ FOLLOW(&lt;code&gt;pat&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;($pa:pat $pb:pat $ty:ty ,)&lt;/code&gt; : незаконно, потому что FIRST ( &lt;code&gt;$pb:pat $ty:ty ,&lt;/code&gt; ) = { &lt;code&gt;$pb:pat&lt;/code&gt; } ⊈ FOLLOW ( &lt;code&gt;pat&lt;/code&gt; ), а также FIRST ( &lt;code&gt;$ty:ty ,&lt;/code&gt; ) = { &lt;code&gt;$ty:ty&lt;/code&gt; } ⊈ ПОСЛЕДУЮЩИЕ ( &lt;code&gt;pat&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="69e74763727a913538df9dabbce72da9e2cf6c0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($ty:ty $(; not sep)* -)&lt;/code&gt; : illegal, because FIRST(&lt;code&gt;$(; not sep)* -&lt;/code&gt;) = { &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt; } is not in FOLLOW(&lt;code&gt;ty&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;($ty:ty $(; not sep)* -)&lt;/code&gt; : недопустимо, потому что FIRST ( &lt;code&gt;$(; not sep)* -&lt;/code&gt; ) = { &lt;code&gt;;&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; } отсутствует в FOLLOW ( &lt;code&gt;ty&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2f3b057ee5cfe6e8bfec5288c6d4e782ac470fb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($ty:ty &amp;lt; foo ,)&lt;/code&gt; : illegal, because FIRST(&lt;code&gt;&amp;lt; foo ,&lt;/code&gt;) = { &lt;code&gt;&amp;lt;&lt;/code&gt; } ⊈ FOLLOW(&lt;code&gt;ty&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;($ty:ty &amp;lt; foo ,)&lt;/code&gt; : недопустимо, потому что FIRST ( &lt;code&gt;&amp;lt; foo ,&lt;/code&gt; ) = { &lt;code&gt;&amp;lt;&lt;/code&gt; } ⊈ FOLLOW ( &lt;code&gt;ty&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="af4ff89d2055a40fe14d24fa4126bffbd9cc45fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;($ty:ty , foo &amp;lt;)&lt;/code&gt; : legal, because FIRST(&lt;code&gt;, foo &amp;lt;&lt;/code&gt;) = { &lt;code&gt;,&lt;/code&gt; } is &amp;sube; FOLLOW(&lt;code&gt;ty&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;($ty:ty , foo &amp;lt;)&lt;/code&gt; : допустимо, потому что FIRST ( &lt;code&gt;, foo &amp;lt;&lt;/code&gt; ) = { &lt;code&gt;,&lt;/code&gt; } - это &amp;sube; FOLLOW ( &lt;code&gt;ty&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0539b3c0db4be4abfee21cc9878f98aaa385d3d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&amp;amp;str)::Searcher&lt;/code&gt; is not a &lt;code&gt;DoubleEndedSearcher&lt;/code&gt; because the pattern &lt;code&gt;&quot;aa&quot;&lt;/code&gt; in the haystack &lt;code&gt;&quot;aaa&quot;&lt;/code&gt; matches as either &lt;code&gt;&quot;[aa]a&quot;&lt;/code&gt; or &lt;code&gt;&quot;a[aa]&quot;&lt;/code&gt;, depending from which side it is searched.</source>
          <target state="translated">&lt;code&gt;(&amp;amp;str)::Searcher&lt;/code&gt; не является &lt;code&gt;DoubleEndedSearcher&lt;/code&gt; , потому что шаблон &lt;code&gt;&quot;aa&quot;&lt;/code&gt; в стоге сена &lt;code&gt;&quot;aaa&quot;&lt;/code&gt; соответствует либо &lt;code&gt;&quot;[aa]a&quot;&lt;/code&gt; либо &lt;code&gt;&quot;a[aa]&quot;&lt;/code&gt; , в зависимости от того, с какой стороны выполняется поиск.</target>
        </trans-unit>
        <trans-unit id="3270960ea9ef61405038cc8ca9bc030cb6189760" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt; ( &lt;em&gt;NamedFunctionParameters&lt;/em&gt; | &lt;em&gt;NamedFunctionParametersWithVariadics&lt;/em&gt; )&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; ( &lt;em&gt;NamedFunctionParameters&lt;/em&gt; | &lt;em&gt;NamedFunctionParametersWithVariadics&lt;/em&gt; ) &lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7b3166187e8257d7ef06a6c8bf54c27abb02462" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6eb4b1cb7f078b919498ddacb73676b692438d49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8051f59d7a315a8ad3b88e3d66ae9b30745551e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;TupleElements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;TupleElements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa0ec7fe01991e3f5f7275d59b43c4728e1862f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;&lt;code&gt;, &lt;/code&gt;&lt;a href=&quot;../primitive.u16&quot;&gt;&lt;code&gt;u16&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;: the string should be either a string representation of an &lt;a href=&quot;enum.ipaddr&quot;&gt;&lt;code&gt;IpAddr&lt;/code&gt;&lt;/a&gt; address as expected by &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt; implementation or a host name.</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; &lt;code&gt;, &lt;/code&gt; &lt;a href=&quot;../primitive.u16&quot;&gt; &lt;code&gt;u16&lt;/code&gt; &lt;/a&gt; &lt;code&gt;)&lt;/code&gt; : строка должна быть либо строковым представлением адреса &lt;a href=&quot;enum.ipaddr&quot;&gt; &lt;code&gt;IpAddr&lt;/code&gt; ,&lt;/a&gt; как ожидается реализацией &lt;a href=&quot;../str/trait.fromstr&quot;&gt; &lt;code&gt;FromStr&lt;/code&gt; ,&lt;/a&gt; либо именем хоста.</target>
        </trans-unit>
        <trans-unit id="c9f2ad445d33233a41450be81a768f5137382954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;associated-items#methods&quot;&gt;&lt;em&gt;SelfParam&lt;/em&gt;&lt;/a&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;TraitFunctionParam&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; &lt;a href=&quot;associated-items#methods&quot;&gt;&lt;em&gt;SelfParam&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;TraitFunctionParam&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a23c2be37d0d515c84ac91098b92654bb8e96d46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;&lt;code&gt;, &lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.u16.html&quot;&gt;&lt;code&gt;u16&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;: &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; should be either a string representation of an &lt;a href=&quot;enum.ipaddr&quot;&gt;&lt;code&gt;IpAddr&lt;/code&gt;&lt;/a&gt; address as expected by &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt; implementation or a host name. &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.u16.html&quot;&gt;&lt;code&gt;u16&lt;/code&gt;&lt;/a&gt; is the port number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f752d7fa86210a2ae237207713c0a3cd74f1ff7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96d19ff5ae8cd742a0988f5c24e68538a6f9b2df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;structs&quot;&gt;&lt;em&gt;TupleFields&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;structs&quot;&gt;&lt;em&gt;TupleFields&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b521abe1164dc0ac980c183d64a2b10f3ffbcc3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abb6050cd3752fc6923fbffc151a9ef3346eb750" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddaf7e72fa6acac0009a90d87fb214f638b22a0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;FunctionParameters&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;FunctionParameters&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57523ac3e3d7e480b19a1ea5c9bc5ecb877f8112" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;FunctionParametersMaybeNamedVariadic&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;&lt;em&gt;BareFunctionReturnType&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;FunctionParametersMaybeNamedVariadic&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;&lt;em&gt;BareFunctionReturnType&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d5871fd10034fb1e354bac32de3d2c61906ec0ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;MacroMatch&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;MacroMatch&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="74b55f5c151548403aaa3b478e3ecac044413984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;MacroRules&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;MacroRules&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2363c70dc5d2a2b18f346fb77b70abfe460a6d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;SelfParam&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;functions&quot;&gt;&lt;em&gt;FunctionParam&lt;/em&gt;&lt;/a&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; &lt;em&gt;SelfParam&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;a href=&quot;functions&quot;&gt;&lt;em&gt;FunctionParam&lt;/em&gt;&lt;/a&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70af26dcd6fad35f4b4fcae06243f12d1f21387b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TokenTree&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TokenTree&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0be71c00c0efbb926d5d2eb26e5c5a250aed194" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TraitFunctionParameters&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TraitFunctionParameters&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06cc40d2a528db267a6648db6a2b72ac9bb006a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TuplePatternItems&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TuplePatternItems&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="08ac5232fc6093780b1acf7241b4e7bab7156e18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TypePathFnInputs&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt; (&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; &lt;em&gt;TypePathFnInputs &lt;/em&gt;&lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;)&lt;/code&gt; ( &lt;code&gt;-&amp;gt;&lt;/code&gt; &lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Тип&lt;/em&gt;&lt;/a&gt; ) &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f15179412d8625594c23d62eb76f731a89d6072f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(start $foo:expr $($i:ident),\* end)&lt;/code&gt; is a matcher. The whole matcher is a delimited sequence (with open- and close-delimiters &lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt;), and &lt;code&gt;$foo&lt;/code&gt; and &lt;code&gt;$i&lt;/code&gt; are simple NT's with &lt;code&gt;expr&lt;/code&gt; and &lt;code&gt;ident&lt;/code&gt; as their respective fragment specifiers.</source>
          <target state="translated">&lt;code&gt;(start $foo:expr $($i:ident),\* end)&lt;/code&gt; - сопоставление. Весь сопоставитель представляет собой последовательность с разделителями (с открывающими и закрывающими ограничителями &lt;code&gt;(&lt;/code&gt; и &lt;code&gt;)&lt;/code&gt; ), а &lt;code&gt;$foo&lt;/code&gt; и &lt;code&gt;$i&lt;/code&gt; являются простыми NT с &lt;code&gt;expr&lt;/code&gt; и &lt;code&gt;ident&lt;/code&gt; ity в качестве соответствующих спецификаторов фрагментов.</target>
        </trans-unit>
        <trans-unit id="6d8e0bcd3c877e04636e8e5d2cc120bc201c7ba0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; &amp;mdash; indicates any number of repetitions.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; - обозначает любое количество повторов.</target>
        </trans-unit>
        <trans-unit id="282e5f6c59b67793cae57d08e6da597177d4c4ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; ( &lt;code&gt;mut&lt;/code&gt; | &lt;code&gt;const&lt;/code&gt; ) &lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; ( &lt;code&gt;mut&lt;/code&gt; | &lt;code&gt;const&lt;/code&gt; ) &lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1193cded4594582953508928c736d3daf7d0988" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; All number literals allow &lt;code&gt;_&lt;/code&gt; as a visual separator: &lt;code&gt;1_234.0E+18f64&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; Все &lt;code&gt;1_234.0E+18f64&lt;/code&gt; литералы позволяют использовать &lt;code&gt;_&lt;/code&gt; в качестве визуального разделителя: 1_234.0E + 18f64</target>
        </trans-unit>
        <trans-unit id="3a40702b8b24d39bac688bed4e569511e90dbde4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; | &lt;code&gt;+&lt;/code&gt; | &lt;code&gt;?&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; | &lt;code&gt;+&lt;/code&gt; | &lt;code&gt;?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee43d15d8efc0763bf888632f5de5af405f54b7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b556ae5ded966b100577546007e959b0f58fc09f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;&lt;code&gt;/&lt;/code&gt;&lt;code&gt;%&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt;&lt;code&gt;/&lt;/code&gt;&lt;code&gt;%&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7e7b5489f017aedaf04aa71701ce9a7772610d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*T&lt;/code&gt; where &lt;code&gt;T: Sized&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*T&lt;/code&gt; , где &lt;code&gt;T: Sized&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8245cc67913c0555fa10740cfa5f0270bffc311b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*V&lt;/code&gt; where &lt;code&gt;V: Sized&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*V&lt;/code&gt; , где &lt;code&gt;V: Sized&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9081132c760081d69b04aa7ba3b2618d0f8a6dc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*V&lt;/code&gt; where &lt;code&gt;V: Sized&lt;/code&gt; *</source>
          <target state="translated">&lt;code&gt;*V&lt;/code&gt; , где &lt;code&gt;V: Sized&lt;/code&gt; *</target>
        </trans-unit>
        <trans-unit id="601f7465e6a41711507a94ee440b07fdd00bb248" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*const type&lt;/code&gt;, &lt;code&gt;*mut type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*const type&lt;/code&gt; , &lt;code&gt;*mut type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a728e640ea1abe3301c9e1227384335723dcab5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*mut T&lt;/code&gt; but non-zero and covariant.</source>
          <target state="translated">&lt;code&gt;*mut T&lt;/code&gt; , но ненулевое и ковариантное.</target>
        </trans-unit>
        <trans-unit id="582c2739d4e8826d3d84328fd57ac1b0847a2665" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*mut T&lt;/code&gt; to &lt;code&gt;*const T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*mut T&lt;/code&gt; to &lt;code&gt;*const T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f67b647c0c8fa1af24503640eb7546e487545e7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt; &amp;mdash; indicates any number but at least one.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; - обозначает любое число, кроме как минимум одного.</target>
        </trans-unit>
        <trans-unit id="f1ba6bcf257280d5b355dd73ac85086da5cb4e2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt; - This is intended for numeric types and indicates that the sign should always be printed. Positive signs are never printed by default, and the negative sign is only printed by default for the &lt;code&gt;Signed&lt;/code&gt; trait. This flag indicates that the correct sign (&lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt;) should always be printed.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; - Это предназначено для числовых типов и указывает, что знак должен всегда печататься. Положительные знаки никогда не печатаются по умолчанию, а отрицательный знак печатается по умолчанию только для признака &lt;code&gt;Signed&lt;/code&gt; . Этот флаг указывает, что всегда следует печатать правильный знак ( &lt;code&gt;+&lt;/code&gt; или &lt;code&gt;-&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a58721e317a663f3f70bd919555e501c8280c19c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0e3474e7e06d60a73bc2968ca4a191e87573a45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a120d3aa1b45dbb0a50cb7006f6f73b8ea480013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab5b67e8eb7b4ac2b96fd7bc3a598f810162f6d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=bin&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;bin&quot;]&lt;/code&gt; - A runnable executable will be produced. This requires that there is a &lt;code&gt;main&lt;/code&gt; function in the crate which will be run when the program begins executing. This will link in all Rust and native dependencies, producing a distributable binary.</source>
          <target state="translated">&lt;code&gt;--crate-type=bin&lt;/code&gt; , &lt;code&gt;#[crate_type = &quot;bin&quot;]&lt;/code&gt; - будет создан исполняемый файл. Для этого требуется, чтобы в ящике была &lt;code&gt;main&lt;/code&gt; функция, которая будет запускаться при запуске программы. Это свяжет все Rust и нативные зависимости, создав распространяемый двоичный файл.</target>
        </trans-unit>
        <trans-unit id="f63ac98efdf94d2bc7fddfafef0d70a6bff9afed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=cdylib&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;cdylib&quot;]&lt;/code&gt; - A dynamic system library will be produced. This is used when compiling a dynamic library to be loaded from another language. This output type will create &lt;code&gt;*.so&lt;/code&gt; files on Linux, &lt;code&gt;*.dylib&lt;/code&gt; files on macOS, and &lt;code&gt;*.dll&lt;/code&gt; files on Windows.</source>
          <target state="translated">&lt;code&gt;--crate-type=cdylib&lt;/code&gt; , &lt;code&gt;#[crate_type = &quot;cdylib&quot;]&lt;/code&gt; - будет создана динамическая системная библиотека. Это используется при компиляции динамической библиотеки для загрузки с другого языка. Этот тип вывода создает файлы &lt;code&gt;*.so&lt;/code&gt; в Linux, файлы &lt;code&gt;*.dylib&lt;/code&gt; в macOS и файлы &lt;code&gt;*.dll&lt;/code&gt; в Windows.</target>
        </trans-unit>
        <trans-unit id="703b282fa50bb5a0c4679638926e4bc23a2522d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=dylib&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;dylib&quot;]&lt;/code&gt; - A dynamic Rust library will be produced. This is different from the &lt;code&gt;lib&lt;/code&gt; output type in that this forces dynamic library generation. The resulting dynamic library can be used as a dependency for other libraries and/or executables. This output type will create &lt;code&gt;*.so&lt;/code&gt; files on linux, &lt;code&gt;*.dylib&lt;/code&gt; files on osx, and &lt;code&gt;*.dll&lt;/code&gt; files on windows.</source>
          <target state="translated">&lt;code&gt;--crate-type=dylib&lt;/code&gt; , &lt;code&gt;#[crate_type = &quot;dylib&quot;]&lt;/code&gt; - Будет создана динамическая библиотека Rust. Он отличается от типа вывода &lt;code&gt;lib&lt;/code&gt; тем, что вызывает создание динамической библиотеки. Результирующая динамическая библиотека может использоваться в качестве зависимости для других библиотек и / или исполняемых файлов. Этот тип вывода создает файлы &lt;code&gt;*.so&lt;/code&gt; в Linux, файлы &lt;code&gt;*.dylib&lt;/code&gt; в OSX и файлы &lt;code&gt;*.dll&lt;/code&gt; в Windows.</target>
        </trans-unit>
        <trans-unit id="c23ec523239fb33f66c9ffb1db77192fdf59eab3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=lib&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;lib&quot;]&lt;/code&gt; - A Rust library will be produced. This is an ambiguous concept as to what exactly is produced because a library can manifest itself in several forms. The purpose of this generic &lt;code&gt;lib&lt;/code&gt; option is to generate the &quot;compiler recommended&quot; style of library. The output library will always be usable by rustc, but the actual type of library may change from time-to-time. The remaining output types are all different flavors of libraries, and the &lt;code&gt;lib&lt;/code&gt; type can be seen as an alias for one of them (but the actual one is compiler-defined).</source>
          <target state="translated">&lt;code&gt;--crate-type=lib&lt;/code&gt; , &lt;code&gt;#[crate_type = &quot;lib&quot;]&lt;/code&gt; - Будет создана библиотека Rust. Это неоднозначное понятие относительно того, что именно создается, потому что библиотека может проявлять себя в нескольких формах. Цель этой универсальной опции &lt;code&gt;lib&lt;/code&gt; - создать библиотеку в стиле, рекомендованном компилятором. Выходная библиотека всегда будет использоваться rustc, но фактический тип библиотеки может время от времени меняться. Остальные типы вывода представляют собой разные разновидности библиотек, и тип &lt;code&gt;lib&lt;/code&gt; можно рассматривать как псевдоним для одной из них (но фактический тип определяется компилятором).</target>
        </trans-unit>
        <trans-unit id="426b054cd0b79fc4683fcd9b9699aebe53e66145" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=proc-macro&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;proc-macro&quot;]&lt;/code&gt; - The output produced is not specified, but if a &lt;code&gt;-L&lt;/code&gt; path is provided to it then the compiler will recognize the output artifacts as a macro and it can be loaded for a program. Crates compiled with this crate type must only export &lt;a href=&quot;procedural-macros&quot;&gt;procedural macros&lt;/a&gt;. The compiler will automatically set the &lt;code&gt;proc_macro&lt;/code&gt;&lt;a href=&quot;conditional-compilation&quot;&gt;configuration option&lt;/a&gt;. The crates are always compiled with the same target that the compiler itself was built with. For example, if you are executing the compiler from Linux with an &lt;code&gt;x86_64&lt;/code&gt; CPU, the target will be &lt;code&gt;x86_64-unknown-linux-gnu&lt;/code&gt; even if the crate is a dependency of another crate being built for a different target.</source>
          <target state="translated">&lt;code&gt;--crate-type=proc-macro&lt;/code&gt; , &lt;code&gt;#[crate_type = &quot;proc-macro&quot;]&lt;/code&gt; - создаваемый результат не указан, но если ему указан путь &lt;code&gt;-L&lt;/code&gt; , то компилятор распознает выходные артефакты как макрос и его можно загрузить для программы. Ящики, скомпилированные с этим типом ящиков, должны экспортировать только &lt;a href=&quot;procedural-macros&quot;&gt;процедурные макросы&lt;/a&gt; . Компилятор автоматически установит &lt;code&gt;proc_macro&lt;/code&gt; &lt;a href=&quot;conditional-compilation&quot;&gt;конфигурации &lt;/a&gt;proc_macro . Ящики всегда компилируются с той же целью, с которой был собран сам компилятор. Например, если вы запускаете компилятор из Linux с процессором &lt;code&gt;x86_64&lt;/code&gt; , целью будет &lt;code&gt;x86_64-unknown-linux-gnu&lt;/code&gt; . даже если ящик является зависимостью другого ящика, построенного для другой цели.</target>
        </trans-unit>
        <trans-unit id="5965747c226601f33886cabe7850717326736605" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=rlib&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;rlib&quot;]&lt;/code&gt; - A &quot;Rust library&quot; file will be produced. This is used as an intermediate artifact and can be thought of as a &quot;static Rust library&quot;. These &lt;code&gt;rlib&lt;/code&gt; files, unlike &lt;code&gt;staticlib&lt;/code&gt; files, are interpreted by the compiler in future linkage. This essentially means that &lt;code&gt;rustc&lt;/code&gt; will look for metadata in &lt;code&gt;rlib&lt;/code&gt; files like it looks for metadata in dynamic libraries. This form of output is used to produce statically linked executables as well as &lt;code&gt;staticlib&lt;/code&gt; outputs.</source>
          <target state="translated">&lt;code&gt;--crate-type=rlib&lt;/code&gt; , &lt;code&gt;#[crate_type = &quot;rlib&quot;]&lt;/code&gt; - Будет создан файл &quot;библиотеки Rust&quot;. Он используется как промежуточный артефакт и может рассматриваться как &amp;laquo;статическая библиотека Rust&amp;raquo;. Эти файлы &lt;code&gt;rlib&lt;/code&gt; , в отличие от файлов &lt;code&gt;staticlib&lt;/code&gt; , будут интерпретироваться компилятором при будущей компоновке. По сути, это означает, что &lt;code&gt;rustc&lt;/code&gt; будет искать метаданные в файлах &lt;code&gt;rlib&lt;/code&gt; , как ищет метаданные в динамических библиотеках. Эта форма вывода используется для создания статически связанных исполняемых файлов, а также вывода &lt;code&gt;staticlib&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0c235658c9abcef8e535a11dc9e0638db29f373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=staticlib&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;staticlib&quot;]&lt;/code&gt; - A static system library will be produced. This is different from other library outputs in that the compiler will never attempt to link to &lt;code&gt;staticlib&lt;/code&gt; outputs. The purpose of this output type is to create a static library containing all of the local crate's code along with all upstream dependencies. The static library is actually a &lt;code&gt;*.a&lt;/code&gt; archive on linux and osx and a &lt;code&gt;*.lib&lt;/code&gt; file on windows. This format is recommended for use in situations such as linking Rust code into an existing non-Rust application because it will not have dynamic dependencies on other Rust code.</source>
          <target state="translated">&lt;code&gt;--crate-type=staticlib&lt;/code&gt; , &lt;code&gt;#[crate_type = &quot;staticlib&quot;]&lt;/code&gt; - будет создана статическая системная библиотека. Это отличается от других выходных данных библиотеки тем, что компилятор никогда не будет пытаться ссылаться на &lt;code&gt;staticlib&lt;/code&gt; данные staticlib . Цель этого типа вывода - создать статическую библиотеку, содержащую весь код локального крейта вместе со всеми вышестоящими зависимостями. Статическая библиотека на самом деле представляет собой архив &lt;code&gt;*.a&lt;/code&gt; для linux и osx и файл &lt;code&gt;*.lib&lt;/code&gt; для windows. Этот формат рекомендуется использовать в таких ситуациях, как связывание кода Rust с существующим приложением, отличным от Rust, поскольку он не будет иметь динамических зависимостей от другого кода Rust.</target>
        </trans-unit>
        <trans-unit id="40f209656b9352f76ce73cdb6cc660179c1526de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--crate-type=staticlib&lt;/code&gt;, &lt;code&gt;#[crate_type = &quot;staticlib&quot;]&lt;/code&gt; - A static system library will be produced. This is different from other library outputs in that the compiler will never attempt to link to &lt;code&gt;staticlib&lt;/code&gt; outputs. The purpose of this output type is to create a static library containing all of the local crate's code along with all upstream dependencies. The static library is actually a &lt;code&gt;*.a&lt;/code&gt; archive on linux and osx and windows(MinGW), and a &lt;code&gt;*.lib&lt;/code&gt; file on windows(MSVC). This format is recommended for use in situations such as linking Rust code into an existing non-Rust application because it will not have dynamic dependencies on other Rust code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7c689e1b28b2d6011b88dcfd5fa11a2dc4867e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-0&lt;/code&gt;: this is just due to how floats are encoded. It is semantically equivalent to &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;-0.0 == 0.0&lt;/code&gt; results in &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dead096e4b70a9faed25da037024e64c045d649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1.0&lt;/code&gt; if the number is negative, &lt;code&gt;-0.0&lt;/code&gt; or &lt;code&gt;NEG_INFINITY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-1.0&lt;/code&gt; , если число отрицательное, &lt;code&gt;-0.0&lt;/code&gt; или &lt;code&gt;NEG_INFINITY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="589c9414c02ace58b0a0f039ffbffedfebf0e0dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt; if the number is negative</source>
          <target state="translated">&lt;code&gt;-1&lt;/code&gt; , если число отрицательное</target>
        </trans-unit>
        <trans-unit id="d9bf1d94259a76276430b45a63099ca8d243d211" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt; - Currently not used</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt; - В настоящее время не используется</target>
        </trans-unit>
        <trans-unit id="d5cf011131be26d1bee8a68adfc2ae7040345794" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f3f860d0116a88fb25d1c00bf8378a9e15043c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.*&lt;/code&gt; means that this &lt;code&gt;{...}&lt;/code&gt; is associated with &lt;em&gt;two&lt;/em&gt; format inputs rather than one: the first input holds the &lt;code&gt;usize&lt;/code&gt; precision, and the second holds the value to print. Note that in this case, if one uses the format string &lt;code&gt;{&amp;lt;arg&amp;gt;:&amp;lt;spec&amp;gt;.*}&lt;/code&gt;, then the &lt;code&gt;&amp;lt;arg&amp;gt;&lt;/code&gt; part refers to the &lt;em&gt;value&lt;/em&gt; to print, and the &lt;code&gt;precision&lt;/code&gt; must come in the input preceding &lt;code&gt;&amp;lt;arg&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.*&lt;/code&gt; Означает , что это &lt;code&gt;{...}&lt;/code&gt; ассоциирована с &lt;em&gt;двумя&lt;/em&gt; входами формата , а не один: первый вход удерживает &lt;code&gt;usize&lt;/code&gt; точность, а вторая содержит значение для печати. Обратите внимание, что в этом случае, если используется строка формата &lt;code&gt;{&amp;lt;arg&amp;gt;:&amp;lt;spec&amp;gt;.*}&lt;/code&gt; , &lt;code&gt;&amp;lt;arg&amp;gt;&lt;/code&gt; часть &amp;lt;arg&amp;gt; относится к &lt;em&gt;значению&lt;/em&gt; для печати, а &lt;code&gt;precision&lt;/code&gt; должна поступать во входных данных, предшествующих &lt;code&gt;&amp;lt;arg&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3faa709365d20a07db7d880a673ee21fa6785f94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;...u8&lt;/code&gt;, &lt;code&gt;...i32&lt;/code&gt;, &lt;code&gt;...f64&lt;/code&gt;, &lt;code&gt;...usize&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;...u8&lt;/code&gt; , &lt;code&gt;...i32&lt;/code&gt; , &lt;code&gt;...f64&lt;/code&gt; , &lt;code&gt;...usize&lt;/code&gt; и т. д.</target>
        </trans-unit>
        <trans-unit id="9e77e8ba90e2a5ef7a27956fe1edebeabbefebda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..&lt;/code&gt;, &lt;code&gt;expr..&lt;/code&gt;, &lt;code&gt;..expr&lt;/code&gt;, &lt;code&gt;expr..expr&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;..&lt;/code&gt; , &lt;code&gt;expr..&lt;/code&gt; , &lt;code&gt;..expr&lt;/code&gt; , &lt;code&gt;expr..expr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a526f1646ea3a7b488fe557e8d31a2c74d39da0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;..&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6bba69e10bb49e73faa35a5bb3352b8749536585" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..&lt;/code&gt;&lt;code&gt;..=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;..&lt;/code&gt;&lt;code&gt;..=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="170b37b39510ef836b6026bc9cd0fd6c6386e377" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..&lt;/code&gt;end</source>
          <target state="translated">&lt;code&gt;..&lt;/code&gt;end</target>
        </trans-unit>
        <trans-unit id="2e9a03838ece4d3cb456c185d151acc103f5a77c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;..=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a107c2197842219d3ccfc167a7dca700bb702b0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..=&lt;/code&gt;end</source>
          <target state="translated">&lt;code&gt;..=&lt;/code&gt;end</target>
        </trans-unit>
        <trans-unit id="4ce4765390d4da7a503ab0d7bb81bf99eb4e058f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;..=expr&lt;/code&gt;, &lt;code&gt;expr..=expr&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;..=expr&lt;/code&gt; , &lt;code&gt;expr..=expr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="662ada72a5b3a35b3bd30f991d8456edef10b9b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.await&lt;/code&gt;ing a future will suspend the current function's execution until the &lt;code&gt;executor&lt;/code&gt; has run the future to completion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7559061b6410a063e7afa4f4ad0690fe4063f9b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.drain_sorted()&lt;/code&gt; is &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt; * log(&lt;em&gt;n&lt;/em&gt;)); much slower than &lt;code&gt;.drain()&lt;/code&gt;. You should use the latter for most cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a3e949ab19958f3ab7174b05a29e935939b6f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/*!&lt;/code&gt; ( &lt;em&gt;BlockCommentOrDoc&lt;/em&gt; | ~[&lt;code&gt;*/&lt;/code&gt;&lt;em&gt;IsolatedCR&lt;/em&gt;] )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;*/&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/*!&lt;/code&gt; ( &lt;em&gt;BlockCommentOrDoc&lt;/em&gt; | ~ [ &lt;code&gt;*/&lt;/code&gt; &lt;em&gt;IsolatedCR&lt;/em&gt; ])&lt;sup&gt; * &lt;/sup&gt; &lt;code&gt;*/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18b1da013479634a395d70e05b21a30764a0f30c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/**&lt;/code&gt; (~&lt;code&gt;*&lt;/code&gt; | &lt;em&gt;BlockCommentOrDoc&lt;/em&gt; ) (&lt;em&gt;BlockCommentOrDoc&lt;/em&gt; | ~[&lt;code&gt;*/&lt;/code&gt;&lt;em&gt;IsolatedCR&lt;/em&gt;])&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;*/&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/**&lt;/code&gt; (~ &lt;code&gt;*&lt;/code&gt; | &lt;em&gt;BlockCommentOrDoc&lt;/em&gt; ) ( &lt;em&gt;BlockCommentOrDoc&lt;/em&gt; | ~ [ &lt;code&gt;*/&lt;/code&gt; &lt;em&gt;IsolatedCR&lt;/em&gt; ])&lt;sup&gt; * &lt;/sup&gt; &lt;code&gt;*/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe8b7134d9abe13e7e7365e6720f73466482e63e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/*&lt;/code&gt; (~[&lt;code&gt;*&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;] | &lt;code&gt;**&lt;/code&gt; | &lt;em&gt;BlockCommentOrDoc&lt;/em&gt;) (&lt;em&gt;BlockCommentOrDoc&lt;/em&gt; | ~&lt;code&gt;*/&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;*/&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/*&lt;/code&gt; (~ [ &lt;code&gt;*&lt;/code&gt; &lt;code&gt;!&lt;/code&gt; ] | &lt;code&gt;**&lt;/code&gt; | &lt;em&gt;BlockCommentOrDoc&lt;/em&gt; ) ( &lt;em&gt;BlockCommentOrDoc&lt;/em&gt; | ~ &lt;code&gt;*/&lt;/code&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;*/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e7c9e73d2cbe4ae753289c389520b64986cb877" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;//!&lt;/code&gt; ~[&lt;code&gt;\n&lt;/code&gt;&lt;em&gt;IsolatedCR&lt;/em&gt;]&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;//!&lt;/code&gt; ~ [ &lt;code&gt;\n&lt;/code&gt; &lt;em&gt;IsolatedCR&lt;/em&gt; ] &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="629c93bbf9c0b68e100509408b61ca4750affa3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;///&lt;/code&gt; (~&lt;code&gt;/&lt;/code&gt; ~[&lt;code&gt;\n&lt;/code&gt;&lt;em&gt;IsolatedCR&lt;/em&gt;]&lt;sup&gt;*&lt;/sup&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;///&lt;/code&gt; (~ &lt;code&gt;/&lt;/code&gt; ~ [ &lt;code&gt;\n&lt;/code&gt; &lt;em&gt;IsolatedCR&lt;/em&gt; ] &lt;sup&gt;*&lt;/sup&gt; ) &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3b9b5ddc27888c9abf50f321981ddf4160e4e689" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;//&lt;/code&gt; (~[&lt;code&gt;/&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;] | &lt;code&gt;//&lt;/code&gt;) ~&lt;code&gt;\n&lt;/code&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;//&lt;/code&gt; (~ [ &lt;code&gt;/&lt;/code&gt; &lt;code&gt;!&lt;/code&gt; ] | &lt;code&gt;//&lt;/code&gt; ) ~ &lt;code&gt;\n&lt;/code&gt; &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="568ea99a199a81fbe37d329517cd35012139953d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; - This is used to indicate for integer formats that the padding should both be done with a &lt;code&gt;0&lt;/code&gt; character as well as be sign-aware. A format like &lt;code&gt;{:08}&lt;/code&gt; would yield &lt;code&gt;00000001&lt;/code&gt; for the integer &lt;code&gt;1&lt;/code&gt;, while the same format would yield &lt;code&gt;-0000001&lt;/code&gt; for the integer &lt;code&gt;-1&lt;/code&gt;. Notice that the negative version has one fewer zero than the positive version. Note that padding zeroes are always placed after the sign (if any) and before the digits. When used together with the &lt;code&gt;#&lt;/code&gt; flag, a similar rule applies: padding zeroes are inserted after the prefix but before the digits.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; - используется для указания для целочисленных форматов, что заполнение должно выполняться как с помощью символа &lt;code&gt;0&lt;/code&gt; , так и с учетом знаков. Такой формат, как &lt;code&gt;{:08}&lt;/code&gt; , даст &lt;code&gt;00000001&lt;/code&gt; для целого числа &lt;code&gt;1&lt;/code&gt; , а тот же формат даст &lt;code&gt;-0000001&lt;/code&gt; для целого числа &lt;code&gt;-1&lt;/code&gt; . . Обратите внимание, что в отрицательной версии на один ноль меньше, чем в положительной. Обратите внимание, что нули-заполнители всегда помещаются после знака (если есть) и перед цифрами. При использовании вместе с флагом &lt;code&gt;#&lt;/code&gt; применяется аналогичное правило: заполняющие нули вставляются после префикса, но перед цифрами.</target>
        </trans-unit>
        <trans-unit id="49eafd17af63d0226281322d869a6623ed33a1f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; - This is used to indicate for integer formats that the padding to &lt;code&gt;width&lt;/code&gt; should both be done with a &lt;code&gt;0&lt;/code&gt; character as well as be sign-aware. A format like &lt;code&gt;{:08}&lt;/code&gt; would yield &lt;code&gt;00000001&lt;/code&gt; for the integer &lt;code&gt;1&lt;/code&gt;, while the same format would yield &lt;code&gt;-0000001&lt;/code&gt; for the integer &lt;code&gt;-1&lt;/code&gt;. Notice that the negative version has one fewer zero than the positive version. Note that padding zeros are always placed after the sign (if any) and before the digits. When used together with the &lt;code&gt;#&lt;/code&gt; flag, a similar rule applies: padding zeros are inserted after the prefix but before the digits. The prefix is included in the total width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d3b4f960fab8b951592016be741bd27c2b1554" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if the number is zero</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; если число равно нулю</target>
        </trans-unit>
        <trans-unit id="d30f8b1bf339634e4790b245c5c679cc53cb30a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; | NON_ZERO_DEC_DIGIT DEC_DIGIT&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; | NON_ZERO_DEC_DIGIT DEC_DIGIT &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d4789ff4626cf9f8a3e731720085aad5a8da29ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0b&lt;/code&gt; (BIN_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt; BIN_DIGIT (BIN_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;0b&lt;/code&gt; (BIN_DIGIT | &lt;code&gt;_&lt;/code&gt; ) &lt;sup&gt;*&lt;/sup&gt; BIN_DIGIT (BIN_DIGIT | &lt;code&gt;_&lt;/code&gt; ) &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="163f2d22ec0fea83f242b51ab292f17fe1833643" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o&lt;/code&gt; (OCT_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt; OCT_DIGIT (OCT_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;0o&lt;/code&gt; (ЦИФРОВОЧНЫЙ_ОКТ | &lt;code&gt;_&lt;/code&gt; ) &lt;sup&gt;*&lt;/sup&gt; ЦИФРОВОЧНЫЙ_ОЦЕНТР (ЦИФРОВОЙ_ОБЪЕМ | &lt;code&gt;_&lt;/code&gt; ) &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9a9014b67d02c6a0687cd4bad98dbf84226bb385" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x&lt;/code&gt; (HEX_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt; HEX_DIGIT (HEX_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;0x&lt;/code&gt; (ЦИФРОВОЙ_ШЕСТИГРАННЫЙ | &lt;code&gt;_&lt;/code&gt; ) &lt;sup&gt;*&lt;/sup&gt; ЦИФРОВОЙ_ШЕСТИГРАННЫЙ (ЦИФРОВОЙ_ШЕСТНИЧИК | &lt;code&gt;_&lt;/code&gt; ) &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="128574ba868b01112ed81bf50b65a339b823b8d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1.0&lt;/code&gt; if the number is positive, &lt;code&gt;+0.0&lt;/code&gt; or &lt;code&gt;INFINITY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;1.0&lt;/code&gt; , если число положительное, &lt;code&gt;+0.0&lt;/code&gt; или &lt;code&gt;INFINITY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b673697935bd789cb32c1981da35fcd7352e9e5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;192.0.0.10/32&lt;/code&gt; is used for NAT traversal (see &lt;a href=&quot;https://tools.ietf.org/html/rfc8155&quot;&gt;IETF RFC 8155&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;192.0.0.10/32&lt;/code&gt; используется для обхода NAT (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc8155&quot;&gt;IETF RFC 8155&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="32aaa1076a63e49b9731869dba6f42ce4d62f9ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;192.0.0.8/32&lt;/code&gt; is the &quot;IPv4 dummy address&quot; (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7600&quot;&gt;IETF RFC 7600&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;192.0.0.8/32&lt;/code&gt; - это &amp;laquo;фиктивный адрес IPv4&amp;raquo; (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7600&quot;&gt;IETF RFC 7600&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="7c2020782007c65be6a3004609a412eab934e74d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;192.0.0.9/32&lt;/code&gt; is the &quot;Port Control Protocol Anycast&quot; (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7723&quot;&gt;IETF RFC 7723&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;192.0.0.9/32&lt;/code&gt; - это &quot;Anycast протокол управления портами&quot; (см. &lt;a href=&quot;https://tools.ietf.org/html/rfc7723&quot;&gt;IETF RFC 7723&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="e91e1c7bc7ffdb5e7103fddafafdec5f547becff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the number is positive</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; , если число положительное</target>
        </trans-unit>
        <trans-unit id="cda9c317ff4ee7c07b54750659d19b2c5bdbb582" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;em&gt;PathExprSegment&lt;/em&gt; (&lt;code&gt;::&lt;/code&gt;&lt;em&gt;PathExprSegment&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt;&lt;em&gt;PathExprSegment&lt;/em&gt; ( &lt;code&gt;::&lt;/code&gt; &lt;em&gt;PathExprSegment&lt;/em&gt; ) &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c4b8dde90d161683cb64e57970ca01c85f50fade" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;em&gt;SimplePathSegment&lt;/em&gt; (&lt;code&gt;::&lt;/code&gt;&lt;em&gt;SimplePathSegment&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt;&lt;em&gt;SimplePathSegment&lt;/em&gt; ( &lt;code&gt;::&lt;/code&gt; &lt;em&gt;SimplePathSegment&lt;/em&gt; ) &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="37c8bc148d00e01e76a79b4049233c66448004ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;em&gt;TypePathSegment&lt;/em&gt; (&lt;code&gt;::&lt;/code&gt;&lt;em&gt;TypePathSegment&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt;&lt;em&gt;TypePathSegment&lt;/em&gt; ( &lt;code&gt;::&lt;/code&gt; &lt;em&gt;TypePathSegment&lt;/em&gt; ) &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7426f75cbfd4f01354a2107d850d8302646f7c85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::ffff:a.b.c.d&lt;/code&gt; becomes &lt;code&gt;a.b.c.d&lt;/code&gt;. All addresses &lt;em&gt;not&lt;/em&gt; starting with &lt;code&gt;::ffff&lt;/code&gt; will return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d3346b7cb0480509b7b4a937dafaca05264da8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8a1301840ae3c7bc54db174e5ca5a64c07aa0e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt;&lt;code&gt;+=&lt;/code&gt;&lt;code&gt;-=&lt;/code&gt;&lt;code&gt;*=&lt;/code&gt;&lt;code&gt;/=&lt;/code&gt;&lt;code&gt;%=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt;&lt;code&gt;+=&lt;/code&gt;&lt;code&gt;-=&lt;/code&gt;&lt;code&gt;*=&lt;/code&gt;&lt;code&gt;/=&lt;/code&gt;&lt;code&gt;%=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7f4d91e1161fccf09895736e7f69d1d145c93bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;==&lt;/code&gt;&lt;code&gt;!=&lt;/code&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt;&lt;code&gt;!=&lt;/code&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3317371770d66af9b594e8415446c62cf9e5d2d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; &amp;mdash; indicates an optional fragment with zero or one occurrences.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; - указывает на необязательный фрагмент с нулем или одним вхождением.</target>
        </trans-unit>
        <trans-unit id="c8b5542f0315a1671873fc7475e2d5ed5b7abb17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.debug&quot;&gt; &lt;code&gt;Debug&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a665e581da78a74589a8d3f4c9945ce4f5040d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; cannot be overloaded.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; не может быть перегружен.</target>
        </trans-unit>
        <trans-unit id="12095140abf1098f29175c19125eb34ed21aee60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; formatting.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; форматирование.</target>
        </trans-unit>
        <trans-unit id="0c78908808d0313e75c7d9961adda4cf1bdbe680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; is only used to declare that the &lt;a href=&quot;special-types-and-traits#sized&quot;&gt;&lt;code&gt;Sized&lt;/code&gt;&lt;/a&gt; trait may not be implemented for a type parameter or associated type. &lt;code&gt;?Sized&lt;/code&gt; may not be used as a bound for other types.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; используется только для того, чтобы объявить, что черта &lt;a href=&quot;special-types-and-traits#sized&quot;&gt; &lt;code&gt;Sized&lt;/code&gt; &lt;/a&gt; не может быть реализована для параметра типа или связанного типа. &lt;code&gt;?Sized&lt;/code&gt; не может использоваться в качестве ограничения для других типов.</target>
        </trans-unit>
        <trans-unit id="a3344d8564474420070de8ca70623188cd4705ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;#higher-ranked-trait-bounds&quot;&gt;&lt;em&gt;ForLifetimes&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;#higher-ranked-trait-bounds&quot;&gt;&lt;em&gt;ForLifetimes&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b9b173c211b337e137665d048d935506be3c498" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;trait-bounds#higher-ranked-trait-bounds&quot;&gt;&lt;em&gt;ForLifetimes&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;trait-bounds#higher-ranked-trait-bounds&quot;&gt;&lt;em&gt;ForLifetimes&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="204de2a077254b15e9b6591a38c031a2eb4d7a8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Add&lt;/code&gt;able points</source>
          <target state="translated">&lt;code&gt;Add&lt;/code&gt; очки способности</target>
        </trans-unit>
        <trans-unit id="02c1a8a8626c17cd761792798b715028e1b334fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AddrParseError&lt;/code&gt; may be thrown because the provided string does not parse as the given type, often because it includes information only handled by a different address type.</source>
          <target state="translated">&lt;code&gt;AddrParseError&lt;/code&gt; может быть сгенерировано , потому что предоставленная строка не анализируется как данный тип, часто потому, что она включает информацию, обрабатываемую только другим типом адреса.</target>
        </trans-unit>
        <trans-unit id="ef013c0b6cd5ff0e52e22216c885fe1c317cebec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Alphabetic&lt;/code&gt; is described in Chapter 4 (Character Properties) of the &lt;a href=&quot;https://www.unicode.org/versions/latest/&quot;&gt;Unicode Standard&lt;/a&gt; and specified in the &lt;a href=&quot;https://www.unicode.org/reports/tr44/&quot;&gt;Unicode Character Database&lt;/a&gt;&lt;a href=&quot;https://www.unicode.org/Public/UCD/latest/ucd/DerivedCoreProperties.txt&quot;&gt;&lt;code&gt;DerivedCoreProperties.txt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474c77bcf98993f2d7df3861dff64b79cf23d925" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Any&lt;/code&gt; itself can be used to get a &lt;code&gt;TypeId&lt;/code&gt;, and has more features when used as a trait object. As &lt;code&gt;&amp;amp;Any&lt;/code&gt; (a borrowed trait object), it has the &lt;code&gt;is&lt;/code&gt; and &lt;code&gt;downcast_ref&lt;/code&gt; methods, to test if the contained value is of a given type, and to get a reference to the inner value as a type. As &lt;code&gt;&amp;amp;mut Any&lt;/code&gt;, there is also the &lt;code&gt;downcast_mut&lt;/code&gt; method, for getting a mutable reference to the inner value. &lt;code&gt;Box&amp;lt;Any&amp;gt;&lt;/code&gt; adds the &lt;code&gt;downcast&lt;/code&gt; method, which attempts to convert to a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt; documentation for the full details.</source>
          <target state="translated">&lt;code&gt;Any&lt;/code&gt; объект может быть использован для получения &lt;code&gt;TypeId&lt;/code&gt; и имеет больше возможностей при использовании в качестве объекта-признака. Как &lt;code&gt;&amp;amp;Any&lt;/code&gt; (заимствованный объект-признак), он имеет методы &lt;code&gt;is&lt;/code&gt; и &lt;code&gt;downcast_ref&lt;/code&gt; , чтобы проверить, принадлежит ли содержащееся значение заданному типу, и получить ссылку на внутреннее значение как на тип. Как &lt;code&gt;&amp;amp;mut Any&lt;/code&gt; , существует также метод &lt;code&gt;downcast_mut&lt;/code&gt; для получения изменяемой ссылки на внутреннее значение. &lt;code&gt;Box&amp;lt;Any&amp;gt;&lt;/code&gt; добавляет метод &lt;code&gt;downcast&lt;/code&gt; преобразования, который пытается преобразовать в &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; . См. Подробную информацию в документации &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="25a152f6c895c918cc68553da98b968b518b35c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Any&lt;/code&gt; itself can be used to get a &lt;code&gt;TypeId&lt;/code&gt;, and has more features when used as a trait object. As &lt;code&gt;&amp;amp;dyn Any&lt;/code&gt; (a borrowed trait object), it has the &lt;code&gt;is&lt;/code&gt; and &lt;code&gt;downcast_ref&lt;/code&gt; methods, to test if the contained value is of a given type, and to get a reference to the inner value as a type. As &lt;code&gt;&amp;amp;mut dyn Any&lt;/code&gt;, there is also the &lt;code&gt;downcast_mut&lt;/code&gt; method, for getting a mutable reference to the inner value. &lt;code&gt;Box&amp;lt;dyn Any&amp;gt;&lt;/code&gt; adds the &lt;code&gt;downcast&lt;/code&gt; method, which attempts to convert to a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt; documentation for the full details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0347266b8ca23df94d1eea50c39e297394012091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; automatically dereferences to &lt;code&gt;T&lt;/code&gt; (via the &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt; trait), so you can call &lt;code&gt;T&lt;/code&gt;'s methods on a value of type &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;. To avoid name clashes with &lt;code&gt;T&lt;/code&gt;'s methods, the methods of &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; itself are associated functions, called using function-like syntax:</source>
          <target state="translated">&lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; автоматически разыменовывается на &lt;code&gt;T&lt;/code&gt; (через &lt;a href=&quot;../ops/trait.deref&quot;&gt; &lt;code&gt;Deref&lt;/code&gt; &lt;/a&gt; ), поэтому вы можете вызывать методы &lt;code&gt;T&lt;/code&gt; для значения типа &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; . Чтобы избежать конфликтов имен с методами &lt;code&gt;T&lt;/code&gt; , методы &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; сами по себе являются связанными функциями, вызываемыми с использованием синтаксиса, подобного функциям:</target>
        </trans-unit>
        <trans-unit id="c58e5a32606ccc9227d7e5cee3f5ba4531679824" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; will implement &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt; as long as the &lt;code&gt;T&lt;/code&gt; implements &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;. Why can't you put a non-thread-safe type &lt;code&gt;T&lt;/code&gt; in an &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; to make it thread-safe? This may be a bit counter-intuitive at first: after all, isn't the point of &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; thread safety? The key is this: &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; makes it thread safe to have multiple ownership of the same data, but it doesn't add thread safety to its data. Consider &lt;code&gt;Arc&amp;lt;&lt;/code&gt;&lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;. &lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; isn't &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;, and if &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; was always &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;Arc&amp;lt;&lt;/code&gt;&lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; would be as well. But then we'd have a problem: &lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; is not thread safe; it keeps track of the borrowing count using non-atomic operations.</source>
          <target state="translated">&lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; будет реализовывать &lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt; пока &lt;code&gt;T&lt;/code&gt; реализует &lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt; . Почему нельзя поместить в &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; небезопасный для потоков тип &lt;code&gt;T&lt;/code&gt; , чтобы сделать его поточно-ориентированным? Поначалу это может показаться немного противоречащим интуиции: в конце концов, разве не суть потокобезопасности &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; ? Ключ заключается в следующем: &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; делает потокобезопасным иметь несколько владельцев одних и тех же данных, но не добавляет потокобезопасность к своим данным. Рассмотрим &lt;code&gt;Arc&amp;lt;&lt;/code&gt; &lt;a href=&quot;../cell/struct.refcell&quot;&gt; &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; . &lt;a href=&quot;../cell/struct.refcell&quot;&gt; &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; не является &lt;a href=&quot;../marker/trait.sync&quot;&gt; &lt;code&gt;Sync&lt;/code&gt; &lt;/a&gt; , и если &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; всегда был&lt;a href=&quot;../marker/trait.send&quot;&gt; &lt;code&gt;Send&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;Arc&amp;lt;&lt;/code&gt; &lt;a href=&quot;../cell/struct.refcell&quot;&gt; &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; тоже подойдет . Но тогда у нас&lt;a href=&quot;../cell/struct.refcell&quot;&gt; &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; проблема: RefCell &amp;lt;T&amp;gt; не является потокобезопасным; он отслеживает количество заимствований, используя неатомарные операции.</target>
        </trans-unit>
        <trans-unit id="7b4d76c39e3c91d21d508efeb04ca509a86768a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AsMut&lt;/code&gt; auto-dereferences if the inner type is a mutable reference (e.g.: &lt;code&gt;foo.as_mut()&lt;/code&gt; will work the same if &lt;code&gt;foo&lt;/code&gt; has type &lt;code&gt;&amp;amp;mut Foo&lt;/code&gt; or &lt;code&gt;&amp;amp;mut &amp;amp;mut Foo&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;AsMut&lt;/code&gt; автоматически разыменовывает, если внутренний тип является изменяемой ссылкой (например: &lt;code&gt;foo.as_mut()&lt;/code&gt; будет работать так же, если &lt;code&gt;foo&lt;/code&gt; имеет тип &lt;code&gt;&amp;amp;mut Foo&lt;/code&gt; или &lt;code&gt;&amp;amp;mut &amp;amp;mut Foo&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b32e1af96a8f528edf4fe1a43d0d4239e586669e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AsRef&lt;/code&gt; auto-dereferences if the inner type is a reference or a mutable reference (e.g.: &lt;code&gt;foo.as_ref()&lt;/code&gt; will work the same if &lt;code&gt;foo&lt;/code&gt; has type &lt;code&gt;&amp;amp;mut Foo&lt;/code&gt; or &lt;code&gt;&amp;amp;&amp;amp;mut Foo&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;AsRef&lt;/code&gt; Автоматическое разыменование AsRef, если внутренний тип является ссылкой или изменяемой ссылкой (например: &lt;code&gt;foo.as_ref()&lt;/code&gt; будет работать так же, если &lt;code&gt;foo&lt;/code&gt; имеет тип &lt;code&gt;&amp;amp;mut Foo&lt;/code&gt; или &lt;code&gt;&amp;amp;&amp;amp;mut Foo&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8612364b449ccaad9467d7771a4667b001d65b5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AsRef&lt;/code&gt; has the same signature as &lt;a href=&quot;../borrow/trait.borrow&quot;&gt;&lt;code&gt;Borrow&lt;/code&gt;&lt;/a&gt;, but &lt;a href=&quot;../borrow/trait.borrow&quot;&gt;&lt;code&gt;Borrow&lt;/code&gt;&lt;/a&gt; is different in few aspects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71335601db38af9f595633f1fc7a0e382672c521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AsRef&lt;/code&gt; has the same signature as &lt;a href=&quot;../borrow/trait.borrow&quot;&gt;&lt;code&gt;Borrow&lt;/code&gt;&lt;/a&gt;, but &lt;code&gt;Borrow&lt;/code&gt; is different in few aspects:</source>
          <target state="translated">&lt;code&gt;AsRef&lt;/code&gt; имеет ту же сигнатуру, что и &lt;a href=&quot;../borrow/trait.borrow&quot;&gt; &lt;code&gt;Borrow&lt;/code&gt; &lt;/a&gt; , но &lt;code&gt;Borrow&lt;/code&gt; отличается в нескольких аспектах:</target>
        </trans-unit>
        <trans-unit id="a88b6811da8d1dc2aede6016feb769d59697b85d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BTreeMap&lt;/code&gt; also implements an &lt;a href=&quot;#method.entry&quot;&gt;&lt;code&gt;Entry API&lt;/code&gt;&lt;/a&gt;, which allows for more complex methods of getting, setting, updating and removing keys and their values:</source>
          <target state="translated">&lt;code&gt;BTreeMap&lt;/code&gt; также реализует &lt;a href=&quot;#method.entry&quot;&gt; &lt;code&gt;Entry API&lt;/code&gt; &lt;/a&gt; , который позволяет использовать более сложные методы получения, установки, обновления и удаления ключей и их значений:</target>
        </trans-unit>
        <trans-unit id="6d3a0e965bd3a3e531ff02538c6aa064edebc614" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BTreeMap&lt;/code&gt; also implements an &lt;a href=&quot;../struct.btreemap#method.entry&quot;&gt;&lt;code&gt;Entry API&lt;/code&gt;&lt;/a&gt;, which allows for more complex methods of getting, setting, updating and removing keys and their values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cbe594491a593dcde82c1712c2524cd57bf88fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BTreeMap&lt;/code&gt; also implements an &lt;a href=&quot;struct.btreemap#method.entry&quot;&gt;&lt;code&gt;Entry API&lt;/code&gt;&lt;/a&gt;, which allows for more complex methods of getting, setting, updating and removing keys and their values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a702e2dc9eec81c3300f51b86ef48a55faebb29e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bar&amp;lt;T&amp;gt;: Unsize&amp;lt;Bar&amp;lt;U&amp;gt;&amp;gt;&lt;/code&gt;, if the last field of &lt;code&gt;Foo&lt;/code&gt; has type &lt;code&gt;Bar&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Bar&amp;lt;T&amp;gt;: Unsize&amp;lt;Bar&amp;lt;U&amp;gt;&amp;gt;&lt;/code&gt; , если последнее поле &lt;code&gt;Foo&lt;/code&gt; имеет тип &lt;code&gt;Bar&amp;lt;T&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d850a262b1c205e08e5c184fd070770af4b4a1e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Borrow&lt;/code&gt; also requires that &lt;code&gt;Hash&lt;/code&gt;, &lt;code&gt;Eq&lt;/code&gt; and &lt;code&gt;Ord&lt;/code&gt; for borrowed value are equivalent to those of the owned value. For this reason, if you want to borrow only a single field of a struct you can implement &lt;code&gt;AsRef&lt;/code&gt;, but not &lt;code&gt;Borrow&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Borrow&lt;/code&gt; также требует, чтобы &lt;code&gt;Hash&lt;/code&gt; , &lt;code&gt;Eq&lt;/code&gt; и &lt;code&gt;Ord&lt;/code&gt; для заемной стоимости были эквивалентны таковым из собственной стоимости. По этой причине, если вы хотите заимствовать только одно поле структуры, вы можете реализовать &lt;code&gt;AsRef&lt;/code&gt; , но не &lt;code&gt;Borrow&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32758f679236e5bd47c4070dc34a78871f6826ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bound&lt;/code&gt;s are range endpoints:</source>
          <target state="translated">&lt;code&gt;Bound&lt;/code&gt; - это конечные точки диапазона:</target>
        </trans-unit>
        <trans-unit id="823e83c4cafd4a53a8d81698b9684ab42c618434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; allows immutable or mutable borrows checked at compile time; &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; allows only immutable borrows checked at compile time; &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; allows immutable or mutable borrows checked at runtime.</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; разрешает неизменяемые или изменяемые заимствования, проверенные во время компиляции; &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; разрешает только неизменяемые заимствования, проверенные во время компиляции; &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; позволяет проверять неизменяемые или изменяемые заимствования во время выполнения.</target>
        </trans-unit>
        <trans-unit id="e1fad64290b5103584e9141501ddf617fcaa1a90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; for allocating values on the heap</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; для размещения значений в куче</target>
        </trans-unit>
        <trans-unit id="b361da1c68fefbf2972f5ece3ba3bec6a2786de8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;, casually referred to as a 'box', provides the simplest form of heap allocation in Rust. Boxes provide ownership for this allocation, and drop their contents when they go out of scope.</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; , обычно называемый &amp;laquo;ящиком&amp;raquo;, обеспечивает простейшую форму распределения кучи в Rust. Ящики предоставляют право собственности на это распределение и сбрасывают свое содержимое, когда они выходят за рамки.</target>
        </trans-unit>
        <trans-unit id="3f542bc4d35eabefd9e8e45fafc0c38b7e4f4b6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt;, a 'boxed slice'</source>
          <target state="translated">&lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt; , &quot;отрезок в коробке&quot;</target>
        </trans-unit>
        <trans-unit id="801881d69946531837ec71d77061b7afea90f88d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BufReader&amp;lt;R&amp;gt;&lt;/code&gt; can improve the speed of programs that make &lt;em&gt;small&lt;/em&gt; and &lt;em&gt;repeated&lt;/em&gt; read calls to the same file or network socket. It does not help when reading very large amounts at once, or reading just one or a few times. It also provides no advantage when reading from a source that is already in memory, like a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;u8&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7332fc1afe6dc4cd1b0346eac1443d4308c89637" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BufReader&lt;/code&gt; can improve the speed of programs that make &lt;em&gt;small&lt;/em&gt; and &lt;em&gt;repeated&lt;/em&gt; read calls to the same file or network socket. It does not help when reading very large amounts at once, or reading just one or a few times. It also provides no advantage when reading from a source that is already in memory, like a &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BufReader&lt;/code&gt; может повысить скорость программ, которые делают &lt;em&gt;небольшие&lt;/em&gt; и &lt;em&gt;повторяющиеся&lt;/em&gt; вызовы чтения одного и того же файла или сетевого сокета. Это не помогает при чтении очень больших объемов за один раз или чтении всего один или несколько раз. Он также не дает никаких преимуществ при чтении из источника, который уже находится в памяти, например &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2281fe635efea165716b7daf0dd5c5edc33b9e10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BufWriter&amp;lt;W&amp;gt;&lt;/code&gt; can improve the speed of programs that make &lt;em&gt;small&lt;/em&gt; and &lt;em&gt;repeated&lt;/em&gt; write calls to the same file or network socket. It does not help when writing very large amounts at once, or writing just one or a few times. It also provides no advantage when writing to a destination that is in memory, like a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127a433311968328cd3a97c18edbbeb5f32e62cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BufWriter&lt;/code&gt; can improve the speed of programs that make &lt;em&gt;small&lt;/em&gt; and &lt;em&gt;repeated&lt;/em&gt; write calls to the same file or network socket. It does not help when writing very large amounts at once, or writing just one or a few times. It also provides no advantage when writing to a destination that is in memory, like a &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BufWriter&lt;/code&gt; может повысить скорость программ, которые делают &lt;em&gt;небольшие&lt;/em&gt; и &lt;em&gt;повторяющиеся&lt;/em&gt; вызовы записи в один и тот же файл или сетевой сокет. Это не помогает при одновременном написании очень больших сумм или написании всего один или несколько раз. Это также не дает преимуществ при записи в место назначения, которое находится в памяти, например &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e427f05884440b18ca96be2a61cf17fee3e0a22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BuildHasherDefault&amp;lt;H&amp;gt;&lt;/code&gt; can be used when a type &lt;code&gt;H&lt;/code&gt; implements &lt;a href=&quot;trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../default/trait.default&quot;&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/a&gt;, and you need a corresponding &lt;a href=&quot;trait.buildhasher&quot;&gt;&lt;code&gt;BuildHasher&lt;/code&gt;&lt;/a&gt; instance, but none is defined.</source>
          <target state="translated">&lt;code&gt;BuildHasherDefault&amp;lt;H&amp;gt;&lt;/code&gt; можно использовать, когда тип &lt;code&gt;H&lt;/code&gt; реализует &lt;a href=&quot;trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../default/trait.default&quot;&gt; &lt;code&gt;Default&lt;/code&gt; &lt;/a&gt; , и вам нужен соответствующий экземпляр &lt;a href=&quot;trait.buildhasher&quot;&gt; &lt;code&gt;BuildHasher&lt;/code&gt; &lt;/a&gt; , но ни один из них не определен.</target>
        </trans-unit>
        <trans-unit id="b5a08c268371f28820805349860175373a33b1ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CString&lt;/code&gt; implements a &lt;a href=&quot;#method.as_ptr&quot;&gt;&lt;code&gt;as_ptr&lt;/code&gt;&lt;/a&gt; method through the &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt; trait. This method will give you a &lt;code&gt;*const c_char&lt;/code&gt; which you can feed directly to extern functions that expect a nul-terminated string, like C's &lt;code&gt;strdup()&lt;/code&gt;. Notice that &lt;a href=&quot;#method.as_ptr&quot;&gt;&lt;code&gt;as_ptr&lt;/code&gt;&lt;/a&gt; returns a read-only pointer; if the C code writes to it, that causes undefined behavior.</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; реализует метод &lt;a href=&quot;#method.as_ptr&quot;&gt; &lt;code&gt;as_ptr&lt;/code&gt; &lt;/a&gt; через &lt;a href=&quot;../ops/trait.deref&quot;&gt; &lt;code&gt;Deref&lt;/code&gt; &lt;/a&gt; . Этот метод даст вам &lt;code&gt;*const c_char&lt;/code&gt; , которые вы можете подать непосредственно Экстерн функции , которые ожидают строку NUL завершающим, как C в &lt;code&gt;strdup()&lt;/code&gt; . Обратите внимание, что &lt;a href=&quot;#method.as_ptr&quot;&gt; &lt;code&gt;as_ptr&lt;/code&gt; &lt;/a&gt; возвращает указатель только для чтения; если в него записывает код C, это вызывает неопределенное поведение.</target>
        </trans-unit>
        <trans-unit id="4bbfd3a01243f66d2c4567bb5233ec367bea6bd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CString&lt;/code&gt; implements a &lt;a href=&quot;struct.cstr#method.as_ptr&quot;&gt;&lt;code&gt;as_ptr&lt;/code&gt;&lt;/a&gt; method through the &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt; trait. This method will give you a &lt;code&gt;*const c_char&lt;/code&gt; which you can feed directly to extern functions that expect a nul-terminated string, like C's &lt;code&gt;strdup()&lt;/code&gt;. Notice that &lt;a href=&quot;struct.cstr#method.as_ptr&quot;&gt;&lt;code&gt;as_ptr&lt;/code&gt;&lt;/a&gt; returns a read-only pointer; if the C code writes to it, that causes undefined behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ea63d9370201ac1bfdd27cde7a7640430710b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CString&lt;/code&gt; is intended for working with traditional C-style strings (a sequence of non-nul bytes terminated by a single nul byte); the primary use case for these kinds of strings is interoperating with C-like code. Often you will need to transfer ownership to/from that external code. It is strongly recommended that you thoroughly read through the documentation of &lt;code&gt;CString&lt;/code&gt; before use, as improper ownership management of &lt;code&gt;CString&lt;/code&gt; instances can lead to invalid memory accesses, memory leaks, and other memory errors.</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; предназначен для работы с традиционными строками в стиле C (последовательность ненулевых байтов, оканчивающихся одним нулевым байтом); основной вариант использования таких строк - взаимодействие с C-подобным кодом. Часто вам необходимо передать право собственности на этот внешний код или от него. Настоятельно рекомендуется внимательно прочитать документацию по &lt;code&gt;CString&lt;/code&gt; перед использованием, поскольку неправильное управление владением экземплярами &lt;code&gt;CString&lt;/code&gt; может привести к недействительным доступам к памяти, утечкам памяти и другим ошибкам памяти.</target>
        </trans-unit>
        <trans-unit id="552bee9f23e932372156da046bc02de61eabbc12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CString&lt;/code&gt; is just a wrapper over a buffer of bytes with a nul terminator; &lt;a href=&quot;struct.cstring#method.into_string&quot;&gt;&lt;code&gt;CString::into_string&lt;/code&gt;&lt;/a&gt; performs UTF-8 validation on those bytes and may return this error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a550be35eb9aaa7c141746a99cd7257172fa9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CString&lt;/code&gt; is just a wrapper over a buffer of bytes with a nul terminator; &lt;a href=&quot;struct.cstring#method.into_string&quot;&gt;&lt;code&gt;into_string&lt;/code&gt;&lt;/a&gt; performs UTF-8 validation on those bytes and may return this error.</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; - это просто оболочка над буфером байтов с нулевым символом конца; &lt;a href=&quot;struct.cstring#method.into_string&quot;&gt; &lt;code&gt;into_string&lt;/code&gt; &lt;/a&gt; выполняет проверку UTF-8 этих байтов и может вернуть эту ошибку.</target>
        </trans-unit>
        <trans-unit id="6e063319f7cc23f7970916db3429671bad4b5a04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CString&lt;/code&gt; is to &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;&amp;amp;CStr&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;: the former in each pair are owned strings; the latter are borrowed references.</source>
          <target state="translated">&lt;code&gt;CString&lt;/code&gt; - это &lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;&amp;amp;CStr&lt;/code&gt; &lt;/a&gt; как &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; - &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; : первые в каждой паре принадлежат строкам; последние являются заимствованными ссылками.</target>
        </trans-unit>
        <trans-unit id="163b10ccd495353b7e6bab0a58b6dd91a80d6390" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CString&lt;/code&gt; is to &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;&amp;amp;CStr&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;: the former in each pair are owned strings; the latter are borrowed references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4d891119f919e3d7f845218eb14020ba6e6b20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChangeColor&lt;/code&gt; includes three &lt;code&gt;i32&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;ChangeColor&lt;/code&gt; включает три значения &lt;code&gt;i32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7593d5009a5b67a50d84bcc3fa1dd4f49da1fe78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChildStdin&lt;/code&gt; will be converted to &lt;code&gt;Stdio&lt;/code&gt; using &lt;code&gt;Stdio::from&lt;/code&gt; under the hood.</source>
          <target state="translated">&lt;code&gt;ChildStdin&lt;/code&gt; будет преобразован в &lt;code&gt;Stdio&lt;/code&gt; с помощью &lt;code&gt;Stdio::from&lt;/code&gt; под капота.</target>
        </trans-unit>
        <trans-unit id="0a91e3d8a4e2fbfaaee5efbc9a26f632756103a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChildStdout&lt;/code&gt; will be converted to &lt;code&gt;Stdio&lt;/code&gt; using &lt;code&gt;Stdio::from&lt;/code&gt; under the hood.</source>
          <target state="translated">&lt;code&gt;ChildStdout&lt;/code&gt; будет преобразован в &lt;code&gt;Stdio&lt;/code&gt; с помощью &lt;code&gt;Stdio::from&lt;/code&gt; под капота.</target>
        </trans-unit>
        <trans-unit id="65ec692ea58de6d0af4f012e217c5b68e9f11d4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoerceUnsized&lt;/code&gt; can only be implemented for a struct. Unsized types are already able to be coerced without an implementation of &lt;code&gt;CoerceUnsized&lt;/code&gt; whereas a struct containing an unsized type needs to know the unsized type field it's containing is able to be coerced. An &lt;a href=&quot;book/ch19-04-advanced-types#dynamically-sized-types-and-the-sized-trait&quot;&gt;unsized type&lt;/a&gt; is any type that the compiler doesn't know the length or alignment of at compile time. Any struct containing an unsized type is also unsized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838c24d6ca940a21454e98a65ab2bb3085568399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoerceUnsized&lt;/code&gt; is used to coerce one struct containing an unsized type into another struct containing a different unsized type. If the struct doesn't have any fields of unsized types then you don't need explicit coercion to get the types you want. To fix this you can either not try to implement &lt;code&gt;CoerceUnsized&lt;/code&gt; or you can add a field that is unsized to the struct.</source>
          <target state="translated">&lt;code&gt;CoerceUnsized&lt;/code&gt; используется для приведения одной структуры, содержащей тип без размера, к другой структуре, содержащей другой тип без размера. Если в структуре нет полей с нестандартными типами, вам не нужно явное принуждение для получения нужных вам типов. Чтобы исправить это, вы можете либо не пытаться реализовать &lt;code&gt;CoerceUnsized&lt;/code&gt; , либо добавить в структуру поле без размера.</target>
        </trans-unit>
        <trans-unit id="e03c9790dd9391a6ff361ba0d424177759ea5092" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoerceUnsized&lt;/code&gt; only allows for coercion from a structure with a single unsized type field to another struct with a single unsized type field. In fact Rust only allows for a struct to have one unsized type in a struct and that unsized type must be the last field in the struct. So having two unsized types in a single struct is not allowed by the compiler. To fix this use only one field containing an unsized type in the struct and then use multiple structs to manage each unsized type field you need.</source>
          <target state="translated">&lt;code&gt;CoerceUnsized&lt;/code&gt; позволяет только приведение структуры с одним полем безразмерного типа к другой структуре с одним полем безразмерного типа. Фактически Rust позволяет структуре иметь только один тип без размера в структуре, и этот тип без размера должен быть последним полем в структуре. Поэтому наличие двух типов без размера в одной структуре не допускается компилятором. Чтобы исправить это, используйте в структуре только одно поле, содержащее тип без размера, а затем используйте несколько структур для управления каждым нужным полем без размера.</target>
        </trans-unit>
        <trans-unit id="3a0481acda665fcc12e680c0bbae352311a95e5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoerceUnsized&lt;/code&gt; was implemented on a struct which contains more than one field with an unsized type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8696cc14809713f30b1ec59b171fd238852235" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoerceUnsized&lt;/code&gt; was implemented on a struct which does not contain a field with an unsized type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1878960b5f81dbb9a79f23cc0e303d3325ba289" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoerceUnsized&lt;/code&gt; was implemented on something that isn't a struct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1073d32daed568f97d9e146f4c215dce8bfaa24d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Command&lt;/code&gt; can be reused to spawn multiple processes. The builder methods change the command without needing to immediately spawn the process.</source>
          <target state="translated">&lt;code&gt;Command&lt;/code&gt; можно повторно использовать для запуска нескольких процессов. Методы построителя изменяют команду без необходимости немедленно запускать процесс.</target>
        </trans-unit>
        <trans-unit id="3471ba44d81479036dae8854baeb2e6f135d1969" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Copy&lt;/code&gt; and &lt;code&gt;Drop&lt;/code&gt; are exclusive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144f016aa1878881692932e8bea1cb4dfc0ef5da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Copy&lt;/code&gt; can only be implemented for types which do not implement &lt;code&gt;Drop&lt;/code&gt;, and whose fields are all &lt;code&gt;Copy&lt;/code&gt;. For enums, this means all fields of all variants have to be &lt;code&gt;Copy&lt;/code&gt;. For unions, this means all variants have to be &lt;code&gt;Copy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d854c93bbc2863edbf30a316c49001d3cbeb23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Copy&lt;/code&gt; is implemented by the compiler for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2387ecc0d5a1721bf52c01c66152bf11894243" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cow&lt;/code&gt; implements &lt;code&gt;Deref&lt;/code&gt;, which means that you can call non-mutating methods directly on the data it encloses. If mutation is desired, &lt;code&gt;to_mut&lt;/code&gt; will obtain a mutable reference to an owned value, cloning if necessary.</source>
          <target state="translated">&lt;code&gt;Cow&lt;/code&gt; реализует &lt;code&gt;Deref&lt;/code&gt; , что означает, что вы можете вызывать неизменяемые методы непосредственно для данных, которые он включает. Если требуется мутация, &lt;code&gt;to_mut&lt;/code&gt; получит изменяемую ссылку на собственное значение, при необходимости клонируя.</target>
        </trans-unit>
        <trans-unit id="9f6cb943dcd2f8ea9edb4b01e202ed2f4a861da8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cursor&lt;/code&gt;s are used with in-memory buffers, anything implementing &lt;a href=&quot;../convert/trait.asref&quot;&gt;&lt;code&gt;AsRef&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;[u8]&amp;gt;&lt;/code&gt;, to allow them to implement &lt;a href=&quot;trait.read&quot;&gt;&lt;code&gt;Read&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;trait.write&quot;&gt;&lt;code&gt;Write&lt;/code&gt;&lt;/a&gt;, allowing these buffers to be used anywhere you might use a reader or writer that does actual I/O.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123af5ee4d9330c9928262d547fb982dae12cda0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cursor&lt;/code&gt;s are used with in-memory buffers, anything implementing &lt;code&gt;AsRef&amp;lt;[u8]&amp;gt;&lt;/code&gt;, to allow them to implement &lt;a href=&quot;trait.read&quot;&gt;&lt;code&gt;Read&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;trait.write&quot;&gt;&lt;code&gt;Write&lt;/code&gt;&lt;/a&gt;, allowing these buffers to be used anywhere you might use a reader or writer that does actual I/O.</source>
          <target state="translated">&lt;code&gt;Cursor&lt;/code&gt; используются с буферами в памяти, где угодно, реализующими &lt;code&gt;AsRef&amp;lt;[u8]&amp;gt;&lt;/code&gt; , чтобы позволить им реализовывать &lt;a href=&quot;trait.read&quot;&gt; &lt;code&gt;Read&lt;/code&gt; &lt;/a&gt; и / или &lt;a href=&quot;trait.write&quot;&gt; &lt;code&gt;Write&lt;/code&gt; &lt;/a&gt; , позволяя использовать эти буферы везде, где вы можете использовать считыватель или писатель, который выполняет фактический ввод-вывод. .</target>
        </trans-unit>
        <trans-unit id="0837e495407effb23511ed5241a26d901f66c484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Debug&lt;/code&gt; implementations using either &lt;code&gt;derive&lt;/code&gt; or the debug builder API on &lt;a href=&quot;struct.formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; support pretty-printing using the alternate flag: &lt;code&gt;{:#?}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Debug&lt;/code&gt; Реализации отладки с использованием либо &lt;code&gt;derive&lt;/code&gt; либо API построителя отладки в &lt;a href=&quot;struct.formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt; поддерживают красивую печать с использованием альтернативного флага: &lt;code&gt;{:#?}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88324f872814980303a183b3ff52d2c678ca9107" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Debug&lt;/code&gt; should format the output in a programmer-facing, debugging context.</source>
          <target state="translated">&lt;code&gt;Debug&lt;/code&gt; должна форматировать вывод в контексте отладки, доступном программисту.</target>
        </trans-unit>
        <trans-unit id="408f9113a84210ae9dd2c593e27c8c346bc00a03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Deref&lt;/code&gt; and &lt;code&gt;DerefMut&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Deref&lt;/code&gt; и &lt;code&gt;DerefMut&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39ba0409b21585407ae9408db7ad9e55bf9c64ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Deref&lt;/code&gt; behavior</source>
          <target state="translated">&lt;code&gt;Deref&lt;/code&gt; поведение</target>
        </trans-unit>
        <trans-unit id="db2797c1c1ada53b430a041163da972e3dd7ebf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Display&lt;/code&gt; is similar to &lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt;, but &lt;code&gt;Display&lt;/code&gt; is for user-facing output, and so cannot be derived.</source>
          <target state="translated">&lt;code&gt;Display&lt;/code&gt; аналогичен &lt;a href=&quot;trait.debug&quot;&gt; &lt;code&gt;Debug&lt;/code&gt; &lt;/a&gt; , но &lt;code&gt;Display&lt;/code&gt; предназначен для вывода, ориентированного на пользователя, и поэтому не может быть получен.</target>
        </trans-unit>
        <trans-unit id="120c39278dac71cbc0cf99e54e14eb4e1185f781" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Div&lt;/code&gt;idable rational numbers</source>
          <target state="translated">&lt;code&gt;Div&lt;/code&gt; idable рациональных чисел</target>
        </trans-unit>
        <trans-unit id="050685b0fb6b704f72bc9087b9321bdf96535f9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Drop&lt;/code&gt; guarantee</source>
          <target state="translated">&lt;code&gt;Drop&lt;/code&gt; Гарантия падения</target>
        </trans-unit>
        <trans-unit id="7b0a242f7c87959c4363b4a8874c792d5134ffb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Drop&lt;/code&gt; implementation</source>
          <target state="translated">&lt;code&gt;Drop&lt;/code&gt; реализации</target>
        </trans-unit>
        <trans-unit id="67a0cf09aa338a7b6c5af601a694c39b935c1d14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Duration&lt;/code&gt;s implement many common traits, including &lt;a href=&quot;../ops/trait.add&quot;&gt;&lt;code&gt;Add&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ops/trait.sub&quot;&gt;&lt;code&gt;Sub&lt;/code&gt;&lt;/a&gt;, and other &lt;a href=&quot;../ops/index&quot;&gt;&lt;code&gt;ops&lt;/code&gt;&lt;/a&gt; traits.</source>
          <target state="translated">&lt;code&gt;Duration&lt;/code&gt; реализует множество общих черт, включая свойства &lt;a href=&quot;../ops/trait.add&quot;&gt; &lt;code&gt;Add&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../ops/trait.sub&quot;&gt; &lt;code&gt;Sub&lt;/code&gt; &lt;/a&gt; и другие свойства &lt;a href=&quot;../ops/index&quot;&gt; &lt;code&gt;ops&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fafc43558cff0c7288d8a28e292e138b30c243af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.upperexp&quot;&gt;&lt;code&gt;UpperExp&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.upperexp&quot;&gt; &lt;code&gt;UpperExp&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2333f9d85f9754f529640e6cdf9d8f65254b0c06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; formatting.</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; Форматирование E.</target>
        </trans-unit>
        <trans-unit id="49c7f75b5d8afe4dfb27f412ebb712a4696dcfcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Equal&lt;/code&gt; becomes &lt;code&gt;Equal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Equal&lt;/code&gt; становится &lt;code&gt;Equal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9717679d631a302dbb9bb4e57fe62cbe2f951c7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Err(ParseFloatError)&lt;/code&gt; if the string did not represent a valid number. Otherwise, &lt;code&gt;Ok(n)&lt;/code&gt; where &lt;code&gt;n&lt;/code&gt; is the floating-point number represented by &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Err(ParseFloatError)&lt;/code&gt; если строка не представляет допустимое число. В противном случае &lt;code&gt;Ok(n)&lt;/code&gt; где &lt;code&gt;n&lt;/code&gt; - число с плавающей запятой, представленное &lt;code&gt;src&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="307cd046af1477ab94fd9bb2c35318cd3465af83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Error&lt;/code&gt; is a trait representing the basic expectations for error values, i.e., values of type &lt;code&gt;E&lt;/code&gt; in &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;&lt;/a&gt;. Errors must describe themselves through the &lt;a href=&quot;../fmt/trait.display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../fmt/trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt; traits, and may provide cause chain information:</source>
          <target state="translated">&lt;code&gt;Error&lt;/code&gt; - это характеристика, представляющая основные ожидания для значений ошибок, т. &lt;code&gt;E&lt;/code&gt; &lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; &lt;/a&gt; типа E в Result &amp;lt;T, E&amp;gt; . Ошибки должны описывать себя с помощью свойств &lt;a href=&quot;../fmt/trait.display&quot;&gt; &lt;code&gt;Display&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../fmt/trait.debug&quot;&gt; &lt;code&gt;Debug&lt;/code&gt; &lt;/a&gt; и могут предоставлять информацию о цепочке причин:</target>
        </trans-unit>
        <trans-unit id="012ad78246c1fa110e17ab8f856ccc0b016e8f11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; is &lt;em&gt;contravariant&lt;/em&gt; over &lt;code&gt;T&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; being a subtype of &lt;code&gt;U&lt;/code&gt; implies that &lt;code&gt;F&amp;lt;U&amp;gt;&lt;/code&gt; is a subtype of &lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; есть &lt;em&gt;контравариантен&lt;/em&gt; над &lt;code&gt;T&lt;/code&gt; , если &lt;code&gt;T&lt;/code&gt; является подтипом &lt;code&gt;U&lt;/code&gt; следует , что &lt;code&gt;F&amp;lt;U&amp;gt;&lt;/code&gt; является подтипом &lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="83ab5ae87cb46b770f2fa820713b250d85127832" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; is &lt;em&gt;covariant&lt;/em&gt; over &lt;code&gt;T&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; being a subtype of &lt;code&gt;U&lt;/code&gt; implies that &lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; is a subtype of &lt;code&gt;F&amp;lt;U&amp;gt;&lt;/code&gt; (subtyping &quot;passes through&quot;)</source>
          <target state="translated">&lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; является &lt;em&gt;ковариантным&lt;/em&gt; над &lt;code&gt;T&lt;/code&gt; , если &lt;code&gt;T&lt;/code&gt; является подтипом &lt;code&gt;U&lt;/code&gt; , подразумевает, что &lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; является подтипом &lt;code&gt;F&amp;lt;U&amp;gt;&lt;/code&gt; ( подтип &amp;laquo;проходит через&amp;raquo;)</target>
        </trans-unit>
        <trans-unit id="315e125a4dab44bf13aa67b5d693feeda29652db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; is &lt;em&gt;invariant&lt;/em&gt; over &lt;code&gt;T&lt;/code&gt; otherwise (no subtyping relation can be derived)</source>
          <target state="translated">&lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; есть &lt;em&gt;инвариантное&lt;/em&gt; над &lt;code&gt;T&lt;/code&gt; в противном случае (без подтипов соотношение может быть получено)</target>
        </trans-unit>
        <trans-unit id="c519a59507ce8a848d5a9aec95f40f843cd4cc23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; for a char in string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa85583181bde0bf3cf500699554c0e1c383e48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File&lt;/code&gt; will be converted to &lt;code&gt;Stdio&lt;/code&gt; using &lt;code&gt;Stdio::from&lt;/code&gt; under the hood.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; будет преобразован в &lt;code&gt;Stdio&lt;/code&gt; с помощью &lt;code&gt;Stdio::from&lt;/code&gt; под капота.</target>
        </trans-unit>
        <trans-unit id="e343104a7dd587d988d170bbd65468574b149f58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fn&lt;/code&gt; borrows values from the environment immutably.</source>
          <target state="translated">&lt;code&gt;Fn&lt;/code&gt; неизменно заимствует значения из окружающей среды.</target>
        </trans-unit>
        <trans-unit id="ab03fe793e9caead41d64f21baf551347ae2bf93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fn&lt;/code&gt; is implemented automatically by closures which only take immutable references to captured variables or don't capture anything at all, as well as (safe) &lt;a href=&quot;../primitive.fn&quot;&gt;function pointers&lt;/a&gt; (with some caveats, see their documentation for more details). Additionally, for any type &lt;code&gt;F&lt;/code&gt; that implements &lt;code&gt;Fn&lt;/code&gt;, &lt;code&gt;&amp;amp;F&lt;/code&gt; implements &lt;code&gt;Fn&lt;/code&gt;, too.</source>
          <target state="translated">&lt;code&gt;Fn&lt;/code&gt; реализуется автоматически с помощью замыканий, которые принимают только неизменяемые ссылки на захваченные переменные или вообще ничего не захватывают, а также (безопасные) &lt;a href=&quot;../primitive.fn&quot;&gt;указатели на функции&lt;/a&gt; (с некоторыми оговорками, см. Их документацию для более подробной информации). Кроме того, для любого типа &lt;code&gt;F&lt;/code&gt; , который реализует &lt;code&gt;Fn&lt;/code&gt; , &lt;code&gt;&amp;amp;F&lt;/code&gt; реализует &lt;code&gt;Fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17b9ef6427d46f1dc1986b48a964061a03c5df5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FnMut&lt;/code&gt; can change the environment because it mutably borrows values.</source>
          <target state="translated">&lt;code&gt;FnMut&lt;/code&gt; может изменять среду, потому что он взаимно заимствует значения.</target>
        </trans-unit>
        <trans-unit id="e16ca4384cdcbb62b89f104fad6fb04c2fa786f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FnMut&lt;/code&gt; is implemented automatically by closures which take mutable references to captured variables, as well as all types that implement &lt;a href=&quot;trait.fn&quot;&gt;&lt;code&gt;Fn&lt;/code&gt;&lt;/a&gt;, e.g., (safe) &lt;a href=&quot;../primitive.fn&quot;&gt;function pointers&lt;/a&gt; (since &lt;code&gt;FnMut&lt;/code&gt; is a supertrait of &lt;a href=&quot;trait.fn&quot;&gt;&lt;code&gt;Fn&lt;/code&gt;&lt;/a&gt;). Additionally, for any type &lt;code&gt;F&lt;/code&gt; that implements &lt;code&gt;FnMut&lt;/code&gt;, &lt;code&gt;&amp;amp;mut F&lt;/code&gt; implements &lt;code&gt;FnMut&lt;/code&gt;, too.</source>
          <target state="translated">&lt;code&gt;FnMut&lt;/code&gt; автоматически реализуется замыканиями, которые принимают изменяемые ссылки на захваченные переменные, а также все типы, реализующие &lt;a href=&quot;trait.fn&quot;&gt; &lt;code&gt;Fn&lt;/code&gt; &lt;/a&gt; , например (безопасные) &lt;a href=&quot;../primitive.fn&quot;&gt;указатели на функции&lt;/a&gt; (поскольку &lt;code&gt;FnMut&lt;/code&gt; является надстройкой &lt;a href=&quot;trait.fn&quot;&gt; &lt;code&gt;Fn&lt;/code&gt; &lt;/a&gt; ). Кроме того, для любого типа &lt;code&gt;F&lt;/code&gt; , который реализует &lt;code&gt;FnMut&lt;/code&gt; , &lt;code&gt;&amp;amp;mut F&lt;/code&gt; реализует &lt;code&gt;FnMut&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c000f4207e0d7915b5876998e9f4fb9b80cc61ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FnOnce&lt;/code&gt; consumes the variables it captures from its enclosing scope, known as the closure&amp;rsquo;s &lt;em&gt;environment&lt;/em&gt;. To consume the captured variables, the closure must take ownership of these variables and move them into the closure when it is defined. The &lt;code&gt;Once&lt;/code&gt; part of the name represents the fact that the closure can&amp;rsquo;t take ownership of the same variables more than once, so it can be called only once.</source>
          <target state="translated">&lt;code&gt;FnOnce&lt;/code&gt; использует переменные, которые он захватывает из охватывающей области, известной как &lt;em&gt;среда&lt;/em&gt; замыкания . Чтобы использовать захваченные переменные, замыкание должно стать владельцем этих переменных и переместить их в замыкание, когда оно будет определено. Часть имени &lt;code&gt;Once&lt;/code&gt; в имени представляет тот факт, что замыкание не может владеть одними и теми же переменными более одного раза, поэтому его можно вызвать только один раз.</target>
        </trans-unit>
        <trans-unit id="cd9ddc6fdbd0ced3f264442be06b3b6029a50311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FnOnce&lt;/code&gt; is implemented automatically by closure that might consume captured variables, as well as all types that implement &lt;a href=&quot;trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt;, e.g., (safe) &lt;a href=&quot;../primitive.fn&quot;&gt;function pointers&lt;/a&gt; (since &lt;code&gt;FnOnce&lt;/code&gt; is a supertrait of &lt;a href=&quot;trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;FnOnce&lt;/code&gt; реализуется автоматически посредством замыкания, которое может использовать захваченные переменные, а также все типы, реализующие &lt;a href=&quot;trait.fnmut&quot;&gt; &lt;code&gt;FnMut&lt;/code&gt; &lt;/a&gt; , например (безопасные) &lt;a href=&quot;../primitive.fn&quot;&gt;указатели на функции&lt;/a&gt; (поскольку &lt;code&gt;FnOnce&lt;/code&gt; является &lt;a href=&quot;trait.fnmut&quot;&gt; &lt;code&gt;FnMut&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="06c78016c2f9097a65385b837081c030222f2db9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FnOnce&lt;/code&gt; is implemented automatically by closures that might consume captured variables, as well as all types that implement &lt;a href=&quot;trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt;, e.g., (safe) &lt;a href=&quot;../primitive.fn&quot;&gt;function pointers&lt;/a&gt; (since &lt;code&gt;FnOnce&lt;/code&gt; is a supertrait of &lt;a href=&quot;trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc3723b12142bb271d60846686451751ed275c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Foo&amp;lt;..., T, ...&amp;gt;&lt;/code&gt; is &lt;code&gt;Unsize&amp;lt;Foo&amp;lt;..., U, ...&amp;gt;&amp;gt;&lt;/code&gt; if:</source>
          <target state="translated">&lt;code&gt;Foo&amp;lt;..., T, ...&amp;gt;&lt;/code&gt; равно &lt;code&gt;Unsize&amp;lt;Foo&amp;lt;..., U, ...&amp;gt;&amp;gt;&lt;/code&gt; если:</target>
        </trans-unit>
        <trans-unit id="89a48c2bbd2b9e10fe4404a5df11694f8370b513" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Foo&amp;lt;..., T, ...&amp;gt;&lt;/code&gt; to &lt;code&gt;Foo&amp;lt;..., U, ...&amp;gt;&lt;/code&gt;, when:</source>
          <target state="translated">&lt;code&gt;Foo&amp;lt;..., T, ...&amp;gt;&lt;/code&gt; до &lt;code&gt;Foo&amp;lt;..., U, ...&amp;gt;&lt;/code&gt; , когда:</target>
        </trans-unit>
        <trans-unit id="8923a3fc2992a13f6053d0f427a95dc645f28026" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Foo&lt;/code&gt; is a struct.</source>
          <target state="translated">&lt;code&gt;Foo&lt;/code&gt; - это структура.</target>
        </trans-unit>
        <trans-unit id="33267139b253d547e3f89cef15fd011011eee07d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;From&amp;lt;T&amp;gt; for U&lt;/code&gt; implies &lt;a href=&quot;trait.into&quot;&gt;&lt;code&gt;Into&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;U&amp;gt; for T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;From&amp;lt;T&amp;gt; for U&lt;/code&gt; означает &lt;a href=&quot;trait.into&quot;&gt; &lt;code&gt;Into&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;U&amp;gt; for T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddbebe3d839f7eb2b3864ae9f444a47906242efa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;From&lt;/code&gt; is reflexive, which means that &lt;code&gt;From&amp;lt;T&amp;gt; for T&lt;/code&gt; is implemented</source>
          <target state="translated">&lt;code&gt;From&lt;/code&gt; является рефлексивным, что означает, что &lt;code&gt;From&amp;lt;T&amp;gt; for T&lt;/code&gt; реализован</target>
        </trans-unit>
        <trans-unit id="383319f7f95c134a88460b2ead3c30903bc8d0ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FromIterator&lt;/code&gt;'s &lt;a href=&quot;#tymethod.from_iter&quot;&gt;&lt;code&gt;from_iter&lt;/code&gt;&lt;/a&gt; is rarely called explicitly, and is instead used through &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;trait.iterator#method.collect&quot;&gt;&lt;code&gt;collect&lt;/code&gt;&lt;/a&gt; method. See &lt;a href=&quot;trait.iterator#method.collect&quot;&gt;&lt;code&gt;collect&lt;/code&gt;&lt;/a&gt;'s documentation for more examples.</source>
          <target state="translated">&lt;code&gt;FromIterator&lt;/code&gt; &amp;laquo;s &lt;a href=&quot;#tymethod.from_iter&quot;&gt; &lt;code&gt;from_iter&lt;/code&gt; &lt;/a&gt; редко называют явным, и вместо того, чтобы использовать через &lt;a href=&quot;trait.iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; &amp;raquo; s &lt;a href=&quot;trait.iterator#method.collect&quot;&gt; &lt;code&gt;collect&lt;/code&gt; &lt;/a&gt; метод. Дополнительные примеры см. В документации &lt;a href=&quot;trait.iterator#method.collect&quot;&gt; &lt;code&gt;collect&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="75846f53aff08074ef6c72fc49fa1c4fe8797481" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FromStr&lt;/code&gt; does not have a lifetime parameter, and so you can only parse types that do not contain a lifetime parameter themselves. In other words, you can parse an &lt;code&gt;i32&lt;/code&gt; with &lt;code&gt;FromStr&lt;/code&gt;, but not a &lt;code&gt;&amp;amp;i32&lt;/code&gt;. You can parse a struct that contains an &lt;code&gt;i32&lt;/code&gt;, but not one that contains an &lt;code&gt;&amp;amp;i32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FromStr&lt;/code&gt; не имеет параметра времени жизни, поэтому вы можете анализировать только те типы, которые сами по себе не содержат параметра времени жизни. Другими словами, вы можете анализировать &lt;code&gt;i32&lt;/code&gt; с помощью &lt;code&gt;FromStr&lt;/code&gt; , но не &lt;code&gt;&amp;amp;i32&lt;/code&gt; . Вы можете проанализировать структуру, содержащую &lt;code&gt;i32&lt;/code&gt; , но не содержащую &lt;code&gt;&amp;amp;i32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66aa0c9e89ef02c67092cfddaaec72bd30d8b28d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FromStr&lt;/code&gt;'s &lt;a href=&quot;#tymethod.from_str&quot;&gt;&lt;code&gt;from_str&lt;/code&gt;&lt;/a&gt; method is often used implicitly, through &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;../primitive.str#method.parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt; method. See &lt;a href=&quot;../primitive.str#method.parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt;'s documentation for examples.</source>
          <target state="translated">&lt;code&gt;FromStr&lt;/code&gt; &amp;laquo;s &lt;a href=&quot;#tymethod.from_str&quot;&gt; &lt;code&gt;from_str&lt;/code&gt; &lt;/a&gt; метод часто используется неявно, через &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; &amp;raquo; ы &lt;a href=&quot;../primitive.str#method.parse&quot;&gt; &lt;code&gt;parse&lt;/code&gt; &lt;/a&gt; метода. См &lt;a href=&quot;../primitive.str#method.parse&quot;&gt; &lt;code&gt;parse&lt;/code&gt; &lt;/a&gt; документации &amp;laquo;s для примеров.</target>
        </trans-unit>
        <trans-unit id="2e127c143f849da86b8f030508294a284ad3a073" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FromStr&lt;/code&gt;'s &lt;a href=&quot;trait.fromstr#tymethod.from_str&quot;&gt;&lt;code&gt;from_str&lt;/code&gt;&lt;/a&gt; method is often used implicitly, through &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;../primitive.str#method.parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt; method. See &lt;a href=&quot;../primitive.str#method.parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt;'s documentation for examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c26176925aefb6818763fda5280ee8ce487f67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Greater&lt;/code&gt; becomes &lt;code&gt;Less&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Greater&lt;/code&gt; становится &lt;code&gt;Less&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="655598f674f605df53f4d9a6bfe46ada76406c45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hash&lt;/code&gt; and &lt;code&gt;Eq&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Hash&lt;/code&gt; и &lt;code&gt;Eq&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe79dedf221cf2858e17af245fc79b091ba756e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HashMap&lt;/code&gt; also implements an &lt;a href=&quot;#method.entry&quot;&gt;&lt;code&gt;Entry API&lt;/code&gt;&lt;/a&gt;, which allows for more complex methods of getting, setting, updating and removing keys and their values:</source>
          <target state="translated">&lt;code&gt;HashMap&lt;/code&gt; также реализует &lt;a href=&quot;#method.entry&quot;&gt; &lt;code&gt;Entry API&lt;/code&gt; &lt;/a&gt; , который позволяет использовать более сложные методы получения, установки, обновления и удаления ключей и их значений:</target>
        </trans-unit>
        <trans-unit id="5b19dbc4b9c8d751ad4499657d279e35039800d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hasher&lt;/code&gt; provides a fairly basic interface for retrieving the generated hash (with &lt;a href=&quot;#tymethod.finish&quot;&gt;&lt;code&gt;finish&lt;/code&gt;&lt;/a&gt;), and writing integers as well as slices of bytes into an instance (with &lt;a href=&quot;#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#method.write_u8&quot;&gt;&lt;code&gt;write_u8&lt;/code&gt;&lt;/a&gt; etc.). Most of the time, &lt;code&gt;Hasher&lt;/code&gt; instances are used in conjunction with the &lt;a href=&quot;trait.hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; trait.</source>
          <target state="translated">&lt;code&gt;Hasher&lt;/code&gt; предоставляет довольно простой интерфейс для получения сгенерированного хэша (с &lt;a href=&quot;#tymethod.finish&quot;&gt; &lt;code&gt;finish&lt;/code&gt; &lt;/a&gt; ) и записи целых чисел, а также срезов байтов в экземпляр (с помощью &lt;a href=&quot;#tymethod.write&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#method.write_u8&quot;&gt; &lt;code&gt;write_u8&lt;/code&gt; &lt;/a&gt; и т. Д.). В большинстве случаев экземпляры &lt;code&gt;Hasher&lt;/code&gt; используются вместе с &lt;a href=&quot;trait.hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="41a65d63299c400aa49770060d19f27c7ffc2fa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hasher&lt;/code&gt; provides a fairly basic interface for retrieving the generated hash (with &lt;a href=&quot;trait.hasher#tymethod.finish&quot;&gt;&lt;code&gt;finish&lt;/code&gt;&lt;/a&gt;), and writing integers as well as slices of bytes into an instance (with &lt;a href=&quot;trait.hasher#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.hasher#method.write_u8&quot;&gt;&lt;code&gt;write_u8&lt;/code&gt;&lt;/a&gt; etc.). Most of the time, &lt;code&gt;Hasher&lt;/code&gt; instances are used in conjunction with the &lt;a href=&quot;trait.hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; trait.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fb536154c8819c191606675325456145440dc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IntoIterator&lt;/code&gt;, &lt;code&gt;Iterator&lt;/code&gt; and &lt;code&gt;Option&lt;/code&gt; are always the standard library items here, not whatever those names resolve to in the current scope. The variable names &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;iter&lt;/code&gt; and &lt;code&gt;val&lt;/code&gt; are for exposition only, they do not actually have names the user can type.</source>
          <target state="translated">&lt;code&gt;IntoIterator&lt;/code&gt; , &lt;code&gt;Iterator&lt;/code&gt; и &lt;code&gt;Option&lt;/code&gt; всегда являются здесь стандартными элементами библиотеки, независимо от того, к чему эти имена разрешаются в текущей области. Имена переменных &lt;code&gt;next&lt;/code&gt; , &lt;code&gt;iter&lt;/code&gt; и &lt;code&gt;val&lt;/code&gt; предназначены только для демонстрации, на самом деле они не имеют имен, которые пользователь может ввести.</target>
        </trans-unit>
        <trans-unit id="bac80e960ac3526c0d1f15e58fd495dcb9ae71bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IntoIterator&lt;/code&gt;, &lt;code&gt;Iterator&lt;/code&gt;, and &lt;code&gt;Option&lt;/code&gt; are always the standard library items here, not whatever those names resolve to in the current scope. The variable names &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;iter&lt;/code&gt;, and &lt;code&gt;val&lt;/code&gt; are for exposition only, they do not actually have names the user can type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a588c668ba26d92c7b732ba0ff06810bcb85062d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IpAddrKind&lt;/code&gt; is now a custom data type that we can use elsewhere in our code.</source>
          <target state="translated">&lt;code&gt;IpAddrKind&lt;/code&gt; теперь является настраиваемым типом данных, который мы можем использовать в другом месте нашего кода.</target>
        </trans-unit>
        <trans-unit id="ae7f415c5a109455a86645cb6ea78d4911189621" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ipv4Addr&lt;/code&gt; provides a &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt; implementation. The four octets are in decimal notation, divided by &lt;code&gt;.&lt;/code&gt; (this is called &quot;dot-decimal notation&quot;).</source>
          <target state="translated">&lt;code&gt;Ipv4Addr&lt;/code&gt; предоставляет реализацию &lt;a href=&quot;../str/trait.fromstr&quot;&gt; &lt;code&gt;FromStr&lt;/code&gt; &lt;/a&gt; . Четыре октета в десятичной системе счисления разделены на &lt;code&gt;.&lt;/code&gt; (это называется &amp;laquo;десятичная точка с точкой&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="25d3a7db8b0872ae22dd1527ee4728bd11774d7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ipv6Addr&lt;/code&gt; provides a &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt; implementation. There are many ways to represent an IPv6 address in text, but in general, each segments is written in hexadecimal notation, and segments are separated by &lt;code&gt;:&lt;/code&gt;. For more information, see &lt;a href=&quot;https://tools.ietf.org/html/rfc5952&quot;&gt;IETF RFC 5952&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Ipv6Addr&lt;/code&gt; предоставляет реализацию &lt;a href=&quot;../str/trait.fromstr&quot;&gt; &lt;code&gt;FromStr&lt;/code&gt; &lt;/a&gt; . Есть много способов для представления IPv6 - адреса в тексте, но в целом, каждый из сегментов записывается в шестнадцатеричной системе счисления, и сегменты отделены друг от друга &lt;code&gt;:&lt;/code&gt; . Для получения дополнительной информации см. &lt;a href=&quot;https://tools.ietf.org/html/rfc5952&quot;&gt;IETF RFC 5952&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e02eeb04c8aeb9136109b80aaa26b5de83ba7b55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Item&lt;/code&gt; in trait &lt;code&gt;Iterator&lt;/code&gt; cannot be specified multiple times for struct &lt;code&gt;Foo&lt;/code&gt;. To fix this, create a new trait that is a combination of the desired traits and specify the associated type with the new trait.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc39b9ce26cf3dd51514d0ac255e7e6d7f67fd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Layout&lt;/code&gt; queries and calculations in general must be correct. Callers of this trait are allowed to rely on the contracts defined on each method, and implementors must ensure such contracts remain true.</source>
          <target state="translated">&lt;code&gt;Layout&lt;/code&gt; Запросы по макету и расчеты в целом должны быть правильными. Вызывающие этот трейт могут полагаться на контракты, определенные для каждого метода, и разработчики должны гарантировать, что такие контракты остаются верными.</target>
        </trans-unit>
        <trans-unit id="83555e7cbe36ad60ad279ac0629e9090346e6073" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Less&lt;/code&gt; becomes &lt;code&gt;Greater&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Less&lt;/code&gt; становится &lt;code&gt;Greater&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a00bd8fe18ddd9b2eda94fb5e27c80380f09132d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lowercase&lt;/code&gt; is described in Chapter 4 (Character Properties) of the &lt;a href=&quot;https://www.unicode.org/versions/latest/&quot;&gt;Unicode Standard&lt;/a&gt; and specified in the &lt;a href=&quot;https://www.unicode.org/reports/tr44/&quot;&gt;Unicode Character Database&lt;/a&gt;&lt;a href=&quot;https://www.unicode.org/Public/UCD/latest/ucd/DerivedCoreProperties.txt&quot;&gt;&lt;code&gt;DerivedCoreProperties.txt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0178329d137f2adfc18f37f0a346d39d244bb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MBE&lt;/code&gt;: macro-by-example, a macro defined by &lt;code&gt;macro_rules&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MBE&lt;/code&gt; : макрос за примером, макрос, определенный в &lt;code&gt;macro_rules&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a12cc17b8174f7d8693a6ae17cb026ece822fccf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ManuallyDrop&amp;lt;T&amp;gt;&lt;/code&gt; is subject to the same layout optimizations as &lt;code&gt;T&lt;/code&gt;. As a consequence, it has &lt;em&gt;no effect&lt;/em&gt; on the assumptions that the compiler makes about all values being initialized at their type. In particular, initializing a &lt;code&gt;ManuallyDrop&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; with &lt;a href=&quot;fn.zeroed&quot;&gt;&lt;code&gt;mem::zeroed&lt;/code&gt;&lt;/a&gt; is undefined behavior. If you need to handle uninitialized data, use &lt;a href=&quot;union.maybeuninit&quot;&gt;&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;ManuallyDrop&amp;lt;T&amp;gt;&lt;/code&gt; подчиняется тем же макет оптимизации как &lt;code&gt;T&lt;/code&gt; . Как следствие, это &lt;em&gt;не влияет&lt;/em&gt; на предположения, которые делает компилятор относительно всех значений, инициализируемых их типом. В частности, инициализация &lt;code&gt;ManuallyDrop&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; с помощью &lt;a href=&quot;fn.zeroed&quot;&gt; &lt;code&gt;mem::zeroed&lt;/code&gt; &lt;/a&gt; является неопределенным поведением. Если вам нужно обрабатывать неинициализированные данные, используйте вместо этого &lt;a href=&quot;union.maybeuninit&quot;&gt; &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9dfe58bc34e31dd5fa77bea574eb0915c849f9d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ManuallyDrop&amp;lt;T&amp;gt;&lt;/code&gt; is subject to the same layout optimizations as &lt;code&gt;T&lt;/code&gt;. As a consequence, it has &lt;em&gt;no effect&lt;/em&gt; on the assumptions that the compiler makes about its contents. For example, initializing a &lt;code&gt;ManuallyDrop&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; with &lt;a href=&quot;fn.zeroed&quot;&gt;&lt;code&gt;mem::zeroed&lt;/code&gt;&lt;/a&gt; is undefined behavior. If you need to handle uninitialized data, use &lt;a href=&quot;union.maybeuninit&quot;&gt;&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23dd11b2d9c31e419098f46e2b46860299084499" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ManuallyDrop&lt;/code&gt; and drop order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20bd9642814d5945a1377f0eb788bd7d5874828" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ManuallyDrop&lt;/code&gt; robustly prevents double-free because we disable &lt;code&gt;v&lt;/code&gt;'s destructor before doing anything else. &lt;code&gt;mem::forget()&lt;/code&gt; doesn't allow this because it consumes its argument, forcing us to call it only after extracting anything we need from &lt;code&gt;v&lt;/code&gt;. Even if a panic were introduced between construction of &lt;code&gt;ManuallyDrop&lt;/code&gt; and building the string (which cannot happen in the code as shown), it would result in a leak and not a double free. In other words, &lt;code&gt;ManuallyDrop&lt;/code&gt; errs on the side of leaking instead of erring on the side of (double-)dropping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7be5255721703bf2a7217d3b0692596360f6da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; can be used to initialize a large array element-by-element:</source>
          <target state="translated">&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; можно использовать для поэлементной инициализации большого массива:</target>
        </trans-unit>
        <trans-unit id="31daa1c8e82b9004085b19cefd5259e1e13e6df4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; is guaranteed to have the same size, alignment, and ABI as &lt;code&gt;T&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; гарантированно имеет тот же размер, выравнивание и ABI, что и &lt;code&gt;T&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0367dbf80d1202f89cd18ec11ce47396c22ecf8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; serves to enable unsafe code to deal with uninitialized data. It is a signal to the compiler indicating that the data here might &lt;em&gt;not&lt;/em&gt; be initialized:</source>
          <target state="translated">&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; позволяет небезопасному коду работать с неинициализированными данными. Это сигнал компилятору, указывающий, что данные здесь могут быть &lt;em&gt;не&lt;/em&gt; инициализированы:</target>
        </trans-unit>
        <trans-unit id="b33ad928c15c4da9b0715ea0b6157806e30e123a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Move&lt;/code&gt; includes an anonymous struct inside it.</source>
          <target state="translated">&lt;code&gt;Move&lt;/code&gt; включает в себя анонимную структуру.</target>
        </trans-unit>
        <trans-unit id="7aa57fa54bfe82ae00367e667533cb5dc06e6bac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mul&lt;/code&gt;tipliable rational numbers</source>
          <target state="translated">&lt;code&gt;Mul&lt;/code&gt; tipliable рациональные числа</target>
        </trans-unit>
        <trans-unit id="7d7959a136ea4b63039b7e2f3e911b1544014ef3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NAN&lt;/code&gt; if the number is &lt;code&gt;NAN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NAN&lt;/code&gt; , если номер &lt;code&gt;NAN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7db30cc3f5c77b82d9c32d074801cc91e5a3c601" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NT&lt;/code&gt;: non-terminal, the various &quot;meta-variables&quot; or repetition matchers that can appear in a matcher, specified in MBE syntax with a leading &lt;code&gt;$&lt;/code&gt; character.</source>
          <target state="translated">&lt;code&gt;NT&lt;/code&gt; : нетерминальные, различные &quot;метапеременные&quot; или средства сопоставления повторений, которые могут появляться в сопоставлении, указанном в синтаксисе MBE с начальным символом &lt;code&gt;$&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0656d4205f56a744d390c28618c3f2de6418a1da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; will return &lt;code&gt;0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af4fad001f4ddd0b0dc1936058a444336074665" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NonNull&lt;/code&gt; pointers are not &lt;code&gt;Send&lt;/code&gt; because the data they reference may be aliased.</source>
          <target state="translated">&lt;code&gt;NonNull&lt;/code&gt; указатели не &lt;code&gt;Send&lt;/code&gt; потому что данные, на которые они ссылаются, могут иметь псевдоним.</target>
        </trans-unit>
        <trans-unit id="783f4012f263c6d38d1e6e5902a75bd66d94c784" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NonNull&lt;/code&gt; pointers are not &lt;code&gt;Sync&lt;/code&gt; because the data they reference may be aliased.</source>
          <target state="translated">&lt;code&gt;NonNull&lt;/code&gt; указатели не являются &lt;code&gt;Sync&lt;/code&gt; поскольку данные, на которые они ссылаются, могут иметь псевдоним.</target>
        </trans-unit>
        <trans-unit id="11aafbb7d832b9c7331aeec723b4939e40d973e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; if &lt;code&gt;predicate&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; если &lt;code&gt;predicate&lt;/code&gt; возвращает &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23eeefc5377ad42d7348cfcb4d65bd70faa5f4b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; will be mapped to &lt;code&gt;Ok(None)&lt;/code&gt;. &lt;code&gt;Some(Ok(_))&lt;/code&gt; and &lt;code&gt;Some(Err(_))&lt;/code&gt; will be mapped to &lt;code&gt;Ok(Some(_))&lt;/code&gt; and &lt;code&gt;Err(_)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; не будет сопоставлен с &lt;code&gt;Ok(None)&lt;/code&gt; . &lt;code&gt;Some(Ok(_))&lt;/code&gt; и &lt;code&gt;Some(Err(_))&lt;/code&gt; будут сопоставлены с &lt;code&gt;Ok(Some(_))&lt;/code&gt; и &lt;code&gt;Err(_)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="915fe41279fa519186a0735c633ac7fe9d481748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt;: the end of the input was reached unexpectedly. &lt;code&gt;self.valid_up_to()&lt;/code&gt; is 1 to 3 bytes from the end of the input. If a byte stream (such as a file or a network socket) is being decoded incrementally, this could be a valid &lt;code&gt;char&lt;/code&gt; whose UTF-8 byte sequence is spanning multiple chunks.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; : конец ввода достигнут неожиданно. &lt;code&gt;self.valid_up_to()&lt;/code&gt; составляет от 1 до 3 байтов от конца ввода. Если поток байтов (например, файл или сетевой сокет) декодируется постепенно, это может быть действительный &lt;code&gt;char&lt;/code&gt; , последовательность байтов UTF-8 которого охватывает несколько фрагментов.</target>
        </trans-unit>
        <trans-unit id="10b8d9eda27eb8d4bd5f3d04ac9401f4b91750c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ok(None)&lt;/code&gt; will be mapped to &lt;code&gt;None&lt;/code&gt;. &lt;code&gt;Ok(Some(_))&lt;/code&gt; and &lt;code&gt;Err(_)&lt;/code&gt; will be mapped to &lt;code&gt;Some(Ok(_))&lt;/code&gt; and &lt;code&gt;Some(Err(_))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Ok(None)&lt;/code&gt; будет отображаться в &lt;code&gt;None&lt;/code&gt; . &lt;code&gt;Ok(Some(_))&lt;/code&gt; и &lt;code&gt;Err(_)&lt;/code&gt; будут сопоставлены с &lt;code&gt;Some(Ok(_))&lt;/code&gt; и &lt;code&gt;Some(Err(_))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="969b36ec72e09ea63b446c8743ff1d8e122c4c38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ord&lt;/code&gt; requires that the type also be &lt;a href=&quot;trait.partialord&quot;&gt;&lt;code&gt;PartialOrd&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.eq&quot;&gt;&lt;code&gt;Eq&lt;/code&gt;&lt;/a&gt; (which requires &lt;a href=&quot;trait.partialeq&quot;&gt;&lt;code&gt;PartialEq&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50d3586e6c9243f2516d60ce5cb260352ecca01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ord&lt;/code&gt; requires that the type also be &lt;code&gt;PartialOrd&lt;/code&gt; and &lt;code&gt;Eq&lt;/code&gt; (which requires &lt;code&gt;PartialEq&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Ord&lt;/code&gt; требует, чтобы тип также был &lt;code&gt;PartialOrd&lt;/code&gt; и &lt;code&gt;Eq&lt;/code&gt; (для чего требуется &lt;code&gt;PartialEq&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="156171edab2619ca1f591634d596d0390d1448a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OsString&lt;/code&gt; and &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; bridge this gap by simultaneously representing Rust and platform-native string values, and in particular allowing a Rust string to be converted into an &quot;OS&quot; string with no cost if possible. A consequence of this is that &lt;code&gt;OsString&lt;/code&gt; instances are &lt;em&gt;not&lt;/em&gt;&lt;code&gt;NUL&lt;/code&gt; terminated; in order to pass to e.g., Unix system call, you should create a &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;OsString&lt;/code&gt; и &lt;a href=&quot;struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; устраняют&lt;/a&gt; этот пробел, одновременно представляя строковые значения Rust и родной платформы, и, в частности, позволяют конвертировать строку Rust в строку &amp;laquo;OS&amp;raquo;, если это возможно, бесплатно. Следствием этого является то, что экземпляры &lt;code&gt;OsString&lt;/code&gt; &lt;em&gt;не&lt;/em&gt; завершаются &lt;code&gt;NUL&lt;/code&gt; ; чтобы перейти, например, к системному вызову Unix, вы должны создать &lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dab6ecc524aeedeb6977fa8e601878b3f968350c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OsString&lt;/code&gt; is to &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;&amp;amp;OsStr&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;: the former in each pair are owned strings; the latter are borrowed references.</source>
          <target state="translated">&lt;code&gt;OsString&lt;/code&gt; - это &lt;a href=&quot;struct.osstr&quot;&gt; &lt;code&gt;&amp;amp;OsStr&lt;/code&gt; &lt;/a&gt; как &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; - &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; : первые в каждой паре принадлежат строкам; последние являются заимствованными ссылками.</target>
        </trans-unit>
        <trans-unit id="59bb60f6b5010a24dfca76c86f52bfa51f74ef89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OsString&lt;/code&gt; is to &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;&amp;amp;OsStr&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;: the former in each pair are owned strings; the latter are borrowed references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d78c5d1c02d65262ec97b4d65b29498f3d873b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OsStringExt&lt;/code&gt; and &lt;code&gt;OsStrExt&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OsStringExt&lt;/code&gt; и &lt;code&gt;OsStrExt&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0a4a583cad72c98dc82bd9bdcd03b3c1ffc4439" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PanicInfo&lt;/code&gt; structure is passed to a panic hook set by the &lt;a href=&quot;fn.set_hook&quot;&gt;&lt;code&gt;set_hook&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;code&gt;PanicInfo&lt;/code&gt; Структура PanicInfo передается ловушке паники, установленной функцией &lt;a href=&quot;fn.set_hook&quot;&gt; &lt;code&gt;set_hook&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cec45b75d6860995a7203e50ae3a962a9ef7808d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PartialEq&lt;/code&gt; only requires the &lt;a href=&quot;trait.partialeq#tymethod.eq&quot;&gt;&lt;code&gt;eq&lt;/code&gt;&lt;/a&gt; method to be implemented; &lt;a href=&quot;trait.partialeq#method.ne&quot;&gt;&lt;code&gt;ne&lt;/code&gt;&lt;/a&gt; is defined in terms of it by default. Any manual implementation of &lt;a href=&quot;trait.partialeq#method.ne&quot;&gt;&lt;code&gt;ne&lt;/code&gt;&lt;/a&gt;&lt;em&gt;must&lt;/em&gt; respect the rule that &lt;a href=&quot;trait.partialeq#tymethod.eq&quot;&gt;&lt;code&gt;eq&lt;/code&gt;&lt;/a&gt; is a strict inverse of &lt;a href=&quot;trait.partialeq#method.ne&quot;&gt;&lt;code&gt;ne&lt;/code&gt;&lt;/a&gt;; that is, &lt;code&gt;!(a == b)&lt;/code&gt; if and only if &lt;code&gt;a != b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7b303db05a509f2209139e4934153105923236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PartialOrd&lt;/code&gt; only requires implementation of the &lt;a href=&quot;trait.partialord#tymethod.partial_cmp&quot;&gt;&lt;code&gt;partial_cmp&lt;/code&gt;&lt;/a&gt; method, with the others generated from default implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5355736e95ea9f89f34c24a16f0da9ff491cc24c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PartialOrd&lt;/code&gt; only requires implementation of the &lt;code&gt;partial_cmp&lt;/code&gt; method, with the others generated from default implementations.</source>
          <target state="translated">&lt;code&gt;PartialOrd&lt;/code&gt; требует только реализации метода &lt;code&gt;partial_cmp&lt;/code&gt; , а остальные генерируются из реализаций по умолчанию.</target>
        </trans-unit>
        <trans-unit id="5a9209cb7c8805d392d1c3005b4077f80a83bde7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PartialOrd&lt;/code&gt; requires your type to be &lt;a href=&quot;trait.partialeq&quot;&gt;&lt;code&gt;PartialEq&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c163a31b293bc0f90dbc0d3d9ad213bf0fa8b3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PartialOrd&lt;/code&gt; requires your type to be &lt;code&gt;PartialEq&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PartialOrd&lt;/code&gt; требует, чтобы ваш тип был &lt;code&gt;PartialEq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0000dadfbd8d07c0837fb6341b4995596c3f66f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Quit&lt;/code&gt; has no data associated with it at all.</source>
          <target state="translated">&lt;code&gt;Quit&lt;/code&gt; вообще не имеет данных, связанных с ним.</target>
        </trans-unit>
        <trans-unit id="fe41136840c4e5771f4fe8a6b1a7f6ec68cc9a54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RandomState&lt;/code&gt; is the default state for &lt;a href=&quot;../struct.hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477368f614c73c4be43d992ee9d7a086ded6132f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RandomState&lt;/code&gt; is the default state for &lt;a href=&quot;struct.hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; types.</source>
          <target state="translated">&lt;code&gt;RandomState&lt;/code&gt; - это состояние по умолчанию для типов &lt;a href=&quot;struct.hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="300e865358f1f64dc664450490b9d983ca1d9f7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RangeBounds&lt;/code&gt; is implemented by Rust's built-in range types, produced by range syntax like &lt;code&gt;..&lt;/code&gt;, &lt;code&gt;a..&lt;/code&gt;, &lt;code&gt;..b&lt;/code&gt;, &lt;code&gt;..=c&lt;/code&gt;, &lt;code&gt;d..e&lt;/code&gt;, or &lt;code&gt;f..=g&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RangeBounds&lt;/code&gt; реализован встроенными в Rust типами диапазонов, созданными с помощью синтаксиса диапазонов, например &lt;code&gt;..&lt;/code&gt; , &lt;code&gt;a..&lt;/code&gt; , &lt;code&gt;..b&lt;/code&gt; , &lt;code&gt;..=c&lt;/code&gt; , &lt;code&gt;d..e&lt;/code&gt; или &lt;code&gt;f..=g&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1faca3408d5c131744d9b932a5c73012f3d7de47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RangeFull&lt;/code&gt; is primarily used as a &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;slicing index&lt;/a&gt;, its shorthand is &lt;code&gt;..&lt;/code&gt;. It cannot serve as an &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; because it doesn't have a starting point.</source>
          <target state="translated">&lt;code&gt;RangeFull&lt;/code&gt; в основном используется в качестве &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;индекса нарезки&lt;/a&gt; , его стенография &lt;code&gt;..&lt;/code&gt; . Он не может служить &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; потому что у него нет отправной точки.</target>
        </trans-unit>
        <trans-unit id="c11e3c6794acc2af61d2caf398c736fabd1f7214" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RangeFull&lt;/code&gt; is primarily used as a &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;slicing index&lt;/a&gt;, its shorthand is &lt;code&gt;..&lt;/code&gt;. It cannot serve as an &lt;a href=&quot;../iter/trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; because it doesn't have a starting point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a42f09004e96cf6202905726dbe7dcd6ccc932c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; automatically dereferences to &lt;code&gt;T&lt;/code&gt; (via the &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt; trait), so you can call &lt;code&gt;T&lt;/code&gt;'s methods on a value of type &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;. To avoid name clashes with &lt;code&gt;T&lt;/code&gt;'s methods, the methods of &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; itself are associated functions, called using function-like syntax:</source>
          <target state="translated">&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; автоматически разыменовывается на &lt;code&gt;T&lt;/code&gt; (через &lt;a href=&quot;../ops/trait.deref&quot;&gt; &lt;code&gt;Deref&lt;/code&gt; &lt;/a&gt; ), поэтому вы можете вызывать методы &lt;code&gt;T&lt;/code&gt; для значения типа &lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; . Чтобы избежать конфликтов имен с методами &lt;code&gt;T&lt;/code&gt; , методы самого &lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; являются связанными функциями, вызываемыми с использованием синтаксиса, подобного функциям:</target>
        </trans-unit>
        <trans-unit id="35f7a75054dc4c36a2bc2db0dffdcdd788f598ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; enables multiple owners of the same data; &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; have single owners.</source>
          <target state="translated">&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; позволяет нескольким владельцам одних и тех же данных; &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; и &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; имеют одного владельца.</target>
        </trans-unit>
        <trans-unit id="831558b739e532085ab6201badbe8889d3c9e71f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;, a reference counting type that enables multiple ownership</source>
          <target state="translated">&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; , тип подсчета ссылок, допускающий множественное владение</target>
        </trans-unit>
        <trans-unit id="978d0ef1c9d7d27ecdcc7b7ab39455a46f40b737" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ref&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;RefMut&amp;lt;T&amp;gt;&lt;/code&gt;, accessed through &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;, a type that enforces the borrowing rules at runtime instead of compile time</source>
          <target state="translated">&lt;code&gt;Ref&amp;lt;T&amp;gt;&lt;/code&gt; и &lt;code&gt;RefMut&amp;lt;T&amp;gt;&lt;/code&gt; , доступ к которым осуществляется через &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; , тип, который применяет правила заимствования во время выполнения, а не во время компиляции</target>
        </trans-unit>
        <trans-unit id="b2052eaf25ad74826ae3983e8206bd7160340800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; uses Rust's lifetimes to implement 'dynamic borrowing', a process whereby one can claim temporary, exclusive, mutable access to the inner value. Borrows for &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;s are tracked 'at runtime', unlike Rust's native reference types which are entirely tracked statically, at compile time. Because &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; borrows are dynamic it is possible to attempt to borrow a value that is already mutably borrowed; when this happens it results in thread panic.</source>
          <target state="translated">&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; использует время жизни Rust для реализации &amp;laquo;динамического заимствования&amp;raquo;, процесса, посредством которого можно требовать временный, эксклюзивный, изменяемый доступ к внутреннему значению. &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; для RefCell &amp;lt;T&amp;gt; отслеживаются &amp;laquo;во время выполнения&amp;raquo;, в отличие от собственных ссылочных типов Rust, которые полностью отслеживаются статически во время компиляции. Поскольку &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; являются динамическими, можно попытаться заимствовать значение, которое уже взаимно заимствовано; когда это происходит, возникает паника потока.</target>
        </trans-unit>
        <trans-unit id="50836f42761b93ecdbdac8100e6aca1a0f43b1f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Result&lt;/code&gt; is a type that represents either success (&lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;) or failure (&lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;Result&lt;/code&gt; - это тип, который представляет либо успех ( &lt;a href=&quot;enum.result#variant.Ok&quot;&gt; &lt;code&gt;Ok&lt;/code&gt; &lt;/a&gt; ), либо неудачу ( &lt;a href=&quot;enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="cbbdee5b44d902aa97ed736428f72afba13f6fb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sea&lt;/code&gt; is not a module, therefore it is invalid to use it in a visibility path. To fix this error we need to ensure &lt;code&gt;Sea&lt;/code&gt; is a module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d8e6a1f4953bc20e73c3f8710d8ad67773fb16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Self&lt;/code&gt; - a type alias for the type implementing a trait</source>
          <target state="translated">&lt;code&gt;Self&lt;/code&gt; - псевдоним типа для типа, реализующего признак</target>
        </trans-unit>
        <trans-unit id="e7e5183606a553c8d51db12554a0f937635e2c7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Self&lt;/code&gt; - a type alias for the type we are defining or implementing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ad95f6e9cfdf323163cfd3b048d2504d3f7047" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Self&lt;/code&gt; can only be used as the first segment, without a preceding &lt;code&gt;::&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Self&lt;/code&gt; может использоваться только как первый сегмент без предшествующего &lt;code&gt;::&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6d693ccf52aaf5695067d6c3c0bed48de9af9b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Self&lt;/code&gt;, with a capital &quot;S&quot;, is used to refer to the implementing type within &lt;a href=&quot;items/traits&quot;&gt;traits&lt;/a&gt; and &lt;a href=&quot;items/implementations&quot;&gt;implementations&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Self&lt;/code&gt; с заглавной буквы &amp;laquo;S&amp;raquo; используется для обозначения реализующего типа в пределах &lt;a href=&quot;items/traits&quot;&gt;признаков&lt;/a&gt; и &lt;a href=&quot;items/implementations&quot;&gt;реализаций&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a098ae52f47bddf77e085753871e1316217a9a15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sized&lt;/code&gt; or &lt;a href=&quot;../trait-bounds#sized&quot;&gt;&lt;code&gt;?Sized&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Sized&lt;/code&gt; или &lt;a href=&quot;../trait-bounds#sized&quot;&gt; &lt;code&gt;?Sized&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38b74787cd7ab814efe04b896e2616124e83aff5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Some(len)&lt;/code&gt;: an unexpected byte was encountered. The length provided is that of the invalid byte sequence that starts at the index given by &lt;code&gt;valid_up_to()&lt;/code&gt;. Decoding should resume after that sequence (after inserting a &lt;a href=&quot;../char/constant.replacement_character&quot;&gt;&lt;code&gt;U+FFFD REPLACEMENT CHARACTER&lt;/code&gt;&lt;/a&gt;) in case of lossy decoding.</source>
          <target state="translated">&lt;code&gt;Some(len)&lt;/code&gt; : обнаружен неожиданный байт. Предоставленная длина - это длина недопустимой последовательности байтов, которая начинается с индекса, заданного &lt;code&gt;valid_up_to()&lt;/code&gt; . Декодирование должно возобновиться после этой последовательности (после вставки &lt;a href=&quot;../char/constant.replacement_character&quot;&gt; &lt;code&gt;U+FFFD REPLACEMENT CHARACTER&lt;/code&gt; &lt;/a&gt; ) в случае декодирования с потерями.</target>
        </trans-unit>
        <trans-unit id="04f4ec3935609d0a1340a6fe98f067507f55e64b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Some(t)&lt;/code&gt; if &lt;code&gt;predicate&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; (where &lt;code&gt;t&lt;/code&gt; is the wrapped value), and</source>
          <target state="translated">&lt;code&gt;Some(t)&lt;/code&gt; if &lt;code&gt;predicate&lt;/code&gt; возвращает &lt;code&gt;true&lt;/code&gt; (где &lt;code&gt;t&lt;/code&gt; - обернутое значение), и</target>
        </trans-unit>
        <trans-unit id="2c324f343e7048cc1fe190e81ae4db7e76fba532" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Step::backward_unchecked(a, n)&lt;/code&gt; is equivalent to &lt;code&gt;Step::backward(a, n)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ed89f2d84dae7a5a507029d87f1142303ef565" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Step::forward_unchecked(a, n)&lt;/code&gt; is equivalent to &lt;code&gt;Step::forward(a, n)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb371bcb42db156cc20c9b2539c5bd112f770f6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;s are always valid UTF-8. This has a few implications, the first of which is that if you need a non-UTF-8 string, consider &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;. It is similar, but without the UTF-8 constraint. The second implication is that you cannot index into a &lt;code&gt;String&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; всегда действительны в кодировке UTF-8. Это имеет несколько последствий, первое из которых заключается в том, что если вам нужна строка, &lt;a href=&quot;../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; UTF-8, рассмотрите OsString . Он аналогичен, но без ограничения UTF-8. Второе следствие заключается в том, что вы не можете индексировать &lt;code&gt;String&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="90ca11bc923ad94c1f81ca12133091fdf7fb3e9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;s have an internal buffer to hold their data. The capacity is the length of that buffer, and can be queried with the &lt;a href=&quot;#method.capacity&quot;&gt;&lt;code&gt;capacity&lt;/code&gt;&lt;/a&gt; method. This method creates an empty &lt;code&gt;String&lt;/code&gt;, but one with an initial buffer that can hold &lt;code&gt;capacity&lt;/code&gt; bytes. This is useful when you may be appending a bunch of data to the &lt;code&gt;String&lt;/code&gt;, reducing the number of reallocations it needs to do.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; имеют внутренний буфер для хранения своих данных. Емкость - это длина этого буфера, и ее можно запросить с помощью метода &lt;a href=&quot;#method.capacity&quot;&gt; &lt;code&gt;capacity&lt;/code&gt; &lt;/a&gt; . Этот метод создает пустую &lt;code&gt;String&lt;/code&gt; , но с начальным буфером, который может содержать байты &lt;code&gt;capacity&lt;/code&gt; . Это полезно, когда вы можете добавлять к &lt;code&gt;String&lt;/code&gt; кучу данных , уменьшая количество необходимых перераспределений.</target>
        </trans-unit>
        <trans-unit id="c5406795f4f42a8cf094777b32bf249729909b26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;s have an internal buffer to hold their data. The capacity is the length of that buffer, and can be queried with the &lt;a href=&quot;struct.string#method.capacity&quot;&gt;&lt;code&gt;capacity&lt;/code&gt;&lt;/a&gt; method. This method creates an empty &lt;code&gt;String&lt;/code&gt;, but one with an initial buffer that can hold &lt;code&gt;capacity&lt;/code&gt; bytes. This is useful when you may be appending a bunch of data to the &lt;code&gt;String&lt;/code&gt;, reducing the number of reallocations it needs to do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d31a0f49bc10c2c8b7f59ea2435dec22c6da899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;s implement &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;Target=str&amp;gt;&lt;/code&gt;, and so inherit all of &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;'s methods. In addition, this means that you can pass a &lt;code&gt;String&lt;/code&gt; to a function which takes a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; by using an ampersand (&lt;code&gt;&amp;amp;&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; реализует &lt;a href=&quot;../ops/trait.deref&quot;&gt; &lt;code&gt;Deref&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;Target=str&amp;gt;&lt;/code&gt; и поэтому наследует все методы &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; . Кроме того, это означает, что вы можете передать &lt;code&gt;String&lt;/code&gt; функции, которая принимает &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; , используя амперсанд ( &lt;code&gt;&amp;amp;&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="616f59747afb4096178feec1378bc12c2c0ee16f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sub&lt;/code&gt;tractable points</source>
          <target state="translated">&lt;code&gt;Sub&lt;/code&gt; податливые точки</target>
        </trans-unit>
        <trans-unit id="12a9778b6f44e77e521ded615fc1882560f44a91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T: 'a&lt;/code&gt; means that all lifetime parameters of &lt;code&gt;T&lt;/code&gt; outlive &lt;code&gt;'a&lt;/code&gt;. For example if &lt;code&gt;'a&lt;/code&gt; is an unconstrained lifetime parameter then &lt;code&gt;i32: 'static&lt;/code&gt; and &lt;code&gt;&amp;amp;'static str: 'a&lt;/code&gt; are satisfied but &lt;code&gt;Vec&amp;lt;&amp;amp;'a ()&amp;gt;: 'static&lt;/code&gt; is not.</source>
          <target state="translated">&lt;code&gt;T: 'a&lt;/code&gt; означает, что все параметры времени жизни &lt;code&gt;T&lt;/code&gt; переживут &lt;code&gt;'a&lt;/code&gt; . Например, если &lt;code&gt;'a&lt;/code&gt; является неограниченным параметром времени жизни, то &lt;code&gt;i32: 'static&lt;/code&gt; и &lt;code&gt;&amp;amp;'static str: 'a&lt;/code&gt; удовлетворяются, а &lt;code&gt;Vec&amp;lt;&amp;amp;'a ()&amp;gt;: 'static&lt;/code&gt; - нет.</target>
        </trans-unit>
        <trans-unit id="459321b2a9a0d46f2b93aa237d46d7fa1575a399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; implements &lt;code&gt;Unsize&amp;lt;U&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; реализует &lt;code&gt;Unsize&amp;lt;U&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3df70334b96e838c208442527493940829a7f1e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; implicitly implements all the (immutable) methods of the type &lt;code&gt;U&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; неявно реализует все (неизменную) методу типа &lt;code&gt;U&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8d4eb013434bfef79667e4806b748592289401e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; implicitly implements all the (mutable) methods of the type &lt;code&gt;U&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; неявно реализует все (изменяемую) методу типа &lt;code&gt;U&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d8a68b56cb5c034ba3c86ed6d0f7016d3a97d31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is &lt;code&gt;Unsize&amp;lt;dyn Trait&amp;gt;&lt;/code&gt; when &lt;code&gt;T: Trait&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - это &lt;code&gt;Unsize&amp;lt;dyn Trait&amp;gt;&lt;/code&gt; когда &lt;code&gt;T: Trait&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7121c00e015ba8b560db77196ee3ca1b24ea1e37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is not part of the type of any other fields</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; не относится к типу других полей</target>
        </trans-unit>
        <trans-unit id="1f5ebb2139955b181a602337432d3269eb411e99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; needs to have the same size and alignment as what &lt;code&gt;ptr&lt;/code&gt; was allocated with. (&lt;code&gt;T&lt;/code&gt; having a less strict alignment is not sufficient, the alignment really needs to be equal to satisfy the &lt;a href=&quot;../alloc/trait.globalalloc#tymethod.dealloc&quot;&gt;&lt;code&gt;dealloc&lt;/code&gt;&lt;/a&gt; requirement that memory must be allocated and deallocated with the same layout.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd841fdf1c9576488040e963cfff46216f7f88ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; to &lt;code&gt;U&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; is a &lt;a href=&quot;subtyping&quot;&gt;subtype&lt;/a&gt; of &lt;code&gt;U&lt;/code&gt; (&lt;em&gt;reflexive case&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61515edc51de8ef5e91841306c65e35babceaccf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; to &lt;code&gt;U&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; is a subtype of &lt;code&gt;U&lt;/code&gt; (&lt;em&gt;reflexive case&lt;/em&gt;)</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; к &lt;code&gt;U&lt;/code&gt; , если &lt;code&gt;T&lt;/code&gt; является подтипом &lt;code&gt;U&lt;/code&gt; ( &lt;em&gt;возвратный случай&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="f4b3e0994f3c0ba54fa6a0a7c157de1659a4226e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; to &lt;code&gt;U&lt;/code&gt;, when &lt;code&gt;U&lt;/code&gt; is a trait object type and either &lt;code&gt;T&lt;/code&gt; implements &lt;code&gt;U&lt;/code&gt; or &lt;code&gt;T&lt;/code&gt; is a trait object for a subtrait of &lt;code&gt;U&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; к &lt;code&gt;U&lt;/code&gt; , когда &lt;code&gt;U&lt;/code&gt; представляет собой тип объекта и признак либо &lt;code&gt;T&lt;/code&gt; орудий &lt;code&gt;U&lt;/code&gt; или &lt;code&gt;T&lt;/code&gt; является объектом черта для subtrait из &lt;code&gt;U&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb0a402546639d1f725eff610791b967c3560cc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; to &lt;code&gt;dyn U&lt;/code&gt;, when &lt;code&gt;T&lt;/code&gt; implements &lt;code&gt;U + Sized&lt;/code&gt;, and &lt;code&gt;U&lt;/code&gt; is &lt;a href=&quot;items/traits#object-safety&quot;&gt;object safe&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298803983d7a40457357f8582fc151ce8dd27899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt;'s inherent methods (methods implemented directly on &lt;code&gt;T&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; Собственные методы T (методы, реализованные непосредственно на &lt;code&gt;T&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b132400d295073db220415b7d295816af763bfd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T_1&lt;/code&gt; to &lt;code&gt;T_3&lt;/code&gt; where &lt;code&gt;T_1&lt;/code&gt; coerces to &lt;code&gt;T_2&lt;/code&gt; and &lt;code&gt;T_2&lt;/code&gt; coerces to &lt;code&gt;T_3&lt;/code&gt; (&lt;em&gt;transitive case&lt;/em&gt;)</source>
          <target state="translated">&lt;code&gt;T_1&lt;/code&gt; &lt;code&gt;T_3&lt;/code&gt; T_1 до T_3, где &lt;code&gt;T_1&lt;/code&gt; принудительно к &lt;code&gt;T_2&lt;/code&gt; , а &lt;code&gt;T_2&lt;/code&gt; &lt;code&gt;T_3&lt;/code&gt; к T_3 ( &lt;em&gt;переходный случай&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="dda06ebb8f19034175258803196529658f366d05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Trait&lt;/code&gt; is a &lt;a href=&quot;../glossary#local-trait&quot;&gt;local trait&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717ecb3d8358231a31f184dade54b32195c64495" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TraitObject&lt;/code&gt; is guaranteed to match layouts, but it is not the type of trait objects (e.g., the fields are not directly accessible on a &lt;code&gt;&amp;amp;SomeTrait&lt;/code&gt;) nor does it control that layout (changing the definition will not change the layout of a &lt;code&gt;&amp;amp;SomeTrait&lt;/code&gt;). It is only designed to be used by unsafe code that needs to manipulate the low-level details.</source>
          <target state="translated">&lt;code&gt;TraitObject&lt;/code&gt; гарантированно соответствует макетам, но это не тип объектов-признаков (например, поля не доступны напрямую в &lt;code&gt;&amp;amp;SomeTrait&lt;/code&gt; ) и не контролирует этот макет (изменение определения не изменит макет &lt;code&gt;&amp;amp;SomeTrait&lt;/code&gt; ). Он предназначен только для использования небезопасным кодом, которому необходимо манипулировать низкоуровневыми деталями.</target>
        </trans-unit>
        <trans-unit id="1dde1ee20034361adb4cfe29aeec1b5ab72354b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TraitObject&lt;/code&gt; is guaranteed to match layouts, but it is not the type of trait objects (e.g., the fields are not directly accessible on a &lt;code&gt;&amp;amp;dyn SomeTrait&lt;/code&gt;) nor does it control that layout (changing the definition will not change the layout of a &lt;code&gt;&amp;amp;dyn SomeTrait&lt;/code&gt;). It is only designed to be used by unsafe code that needs to manipulate the low-level details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2614973a3f96d521b7753283f54483e26f0f27d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TryFrom&amp;lt;T&amp;gt; for U&lt;/code&gt; implies &lt;a href=&quot;trait.tryinto&quot;&gt;&lt;code&gt;TryInto&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;U&amp;gt; for T&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;TryFrom&amp;lt;T&amp;gt; for U&lt;/code&gt; подразумевает &lt;a href=&quot;trait.tryinto&quot;&gt; &lt;code&gt;TryInto&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;U&amp;gt; for T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="262c3578f5bc85ed6705e91099903717cf6ab0ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TryFrom&amp;lt;T&amp;gt;&lt;/code&gt; can be implemented as follows:</source>
          <target state="translated">&lt;code&gt;TryFrom&amp;lt;T&amp;gt;&lt;/code&gt; может быть реализован следующим образом:</target>
        </trans-unit>
        <trans-unit id="f500c3e10d9f1c53160e520c60fcf93d9f0d8dc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+0009&lt;/code&gt; (horizontal tab, &lt;code&gt;'\t'&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;U+0009&lt;/code&gt; (горизонтальная табуляция, &lt;code&gt;'\t'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="0eee371b065164c50fc78edf6a91510999663db3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+000A&lt;/code&gt; (line feed, &lt;code&gt;'\n'&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;U+000A&lt;/code&gt; ( перевод строки, &lt;code&gt;'\n'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e254e5f09bc8e41e5fff183f48730d4887bab90d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+000B&lt;/code&gt; (vertical tab)</source>
          <target state="translated">&lt;code&gt;U+000B&lt;/code&gt; (вертикальная табуляция)</target>
        </trans-unit>
        <trans-unit id="60b67d8e4ab5ad057e66f3ef97b1b20995c8e588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+000C&lt;/code&gt; (form feed)</source>
          <target state="translated">&lt;code&gt;U+000C&lt;/code&gt; (подача формы)</target>
        </trans-unit>
        <trans-unit id="13303bc8e2167053bc8b070c03cbab754f8efc31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+000D&lt;/code&gt; (carriage return, &lt;code&gt;'\r'&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;U+000D&lt;/code&gt; (возврат каретки, &lt;code&gt;'\r'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ffedd7f81712ec4095c8437506cc5c5d894b252b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+0020&lt;/code&gt; (space, &lt;code&gt;' '&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;U+0020&lt;/code&gt; (пробел, &lt;code&gt;' '&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9e6e484290e68200d792b8e5c7559c03888b646b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+0085&lt;/code&gt; (next line)</source>
          <target state="translated">&lt;code&gt;U+0085&lt;/code&gt; (следующая строка)</target>
        </trans-unit>
        <trans-unit id="b098899ac0fd9b28e8a3283063bef0993f71a603" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+200E&lt;/code&gt; (left-to-right mark)</source>
          <target state="translated">&lt;code&gt;U+200E&lt;/code&gt; (знак слева направо)</target>
        </trans-unit>
        <trans-unit id="7387c90d6570a18e4ef3f831c6218976f9de9544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+200F&lt;/code&gt; (right-to-left mark)</source>
          <target state="translated">&lt;code&gt;U+200F&lt;/code&gt; ( знак справа налево)</target>
        </trans-unit>
        <trans-unit id="b820fd5b508f4cad2f1823a9001f061008054109" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+2028&lt;/code&gt; (line separator)</source>
          <target state="translated">&lt;code&gt;U+2028&lt;/code&gt; (разделитель строк)</target>
        </trans-unit>
        <trans-unit id="ef829c2c981395adf912e910538e5a3686cb3a80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+2029&lt;/code&gt; (paragraph separator)</source>
          <target state="translated">&lt;code&gt;U+2029&lt;/code&gt; (разделитель абзацев)</target>
        </trans-unit>
        <trans-unit id="7f8cead9a1dbbe85fed8f27401392602cee3455e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+FFFD REPLACEMENT CHARACTER&lt;/code&gt; (�) is used in Unicode to represent a decoding error.</source>
          <target state="translated">&lt;code&gt;U+FFFD REPLACEMENT CHARACTER&lt;/code&gt; () используется в Unicode для представления ошибки декодирования.</target>
        </trans-unit>
        <trans-unit id="6195c16a97daf5384a4b9aed4a907cef021630de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unpin&lt;/code&gt; has no consequence at all for non-pinned data. In particular, &lt;a href=&quot;../mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt; happily moves &lt;code&gt;!Unpin&lt;/code&gt; data (it works for any &lt;code&gt;&amp;amp;mut T&lt;/code&gt;, not just when &lt;code&gt;T: Unpin&lt;/code&gt;). However, you cannot use &lt;a href=&quot;../mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt; on data wrapped inside a &lt;a href=&quot;../pin/struct.pin&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt;&lt;/a&gt; because you cannot get the &lt;code&gt;&amp;amp;mut T&lt;/code&gt; you need for that, and &lt;em&gt;that&lt;/em&gt; is what makes this system work.</source>
          <target state="translated">&lt;code&gt;Unpin&lt;/code&gt; имеет никаких последствий для незакрепленных данных. В частности, &lt;a href=&quot;../mem/fn.replace&quot;&gt; &lt;code&gt;mem::replace&lt;/code&gt; &lt;/a&gt; успешно перемещается &lt;code&gt;!Unpin&lt;/code&gt; данные (работает для любого &lt;code&gt;&amp;amp;mut T&lt;/code&gt; , а не только для &lt;code&gt;T: Unpin&lt;/code&gt; ). Однако вы не можете использовать &lt;a href=&quot;../mem/fn.replace&quot;&gt; &lt;code&gt;mem::replace&lt;/code&gt; &lt;/a&gt; для данных, заключенных внутри &lt;a href=&quot;../pin/struct.pin&quot;&gt; &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; &lt;/a&gt; потому что вы не можете получить &lt;code&gt;&amp;amp;mut T&lt;/code&gt; вам нужно для этого, и &lt;em&gt;это&lt;/em&gt; то, что заставляет эту систему работать.</target>
        </trans-unit>
        <trans-unit id="d393f4f108119cf541b6e488c9f66e8555533941" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unpin&lt;/code&gt; has no consequence at all for non-pinned data. In particular, &lt;a href=&quot;../mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt; happily moves &lt;code&gt;!Unpin&lt;/code&gt; data (it works for any &lt;code&gt;&amp;amp;mut T&lt;/code&gt;, not just when &lt;code&gt;T: Unpin&lt;/code&gt;). However, you cannot use &lt;a href=&quot;../mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt; on data wrapped inside a &lt;a href=&quot;../pin/struct.pin&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/a&gt; because you cannot get the &lt;code&gt;&amp;amp;mut T&lt;/code&gt; you need for that, and &lt;em&gt;that&lt;/em&gt; is what makes this system work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efff079b40f2baf685ae584c91dd28f267624b15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; is a type that wraps some &lt;code&gt;T&lt;/code&gt; and indicates unsafe interior operations on the wrapped type. Types with an &lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; field are considered to have an 'unsafe interior'. The &lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; type is the only legal way to obtain aliasable data that is considered mutable. In general, transmuting an &lt;code&gt;&amp;amp;T&lt;/code&gt; type into an &lt;code&gt;&amp;amp;mut T&lt;/code&gt; is considered undefined behavior.</source>
          <target state="translated">&lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; - это тип, который оборачивает некоторый &lt;code&gt;T&lt;/code&gt; и указывает небезопасные внутренние операции с обернутым типом. Типы с &lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; считаются &amp;laquo;небезопасными&amp;raquo;. Тип &lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; - единственный законный способ получить данные с псевдонимами, которые считаются изменяемыми. В общем, преобразование типа &lt;code&gt;&amp;amp;T&lt;/code&gt; в &lt;code&gt;&amp;amp;mut T&lt;/code&gt; считается неопределенным поведением.</target>
        </trans-unit>
        <trans-unit id="3e4346125b6b7807fdd36f09c881261f6029bbe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unsize&lt;/code&gt; is implemented for:</source>
          <target state="translated">&lt;code&gt;Unsize&lt;/code&gt; реализован для:</target>
        </trans-unit>
        <trans-unit id="84b98d5ffecb70c0c02d694c53fc82fd0138d0df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unsize&lt;/code&gt; is used along with &lt;a href=&quot;../ops/trait.coerceunsized&quot;&gt;&lt;code&gt;ops::CoerceUnsized&lt;/code&gt;&lt;/a&gt; to allow &quot;user-defined&quot; containers such as &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt; to contain dynamically-sized types. See the &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md&quot;&gt;DST coercion RFC&lt;/a&gt; and &lt;a href=&quot;https://doc.rust-lang.org/nomicon/coercions.html&quot;&gt;the nomicon entry on coercion&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d63e0fbda6d98ae184316db47dce145c405831" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unsize&lt;/code&gt; is used along with &lt;a href=&quot;../ops/trait.coerceunsized&quot;&gt;&lt;code&gt;ops::CoerceUnsized&lt;/code&gt;&lt;/a&gt; to allow &quot;user-defined&quot; containers such as &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;rc::Rc&lt;/code&gt;&lt;/a&gt; to contain dynamically-sized types. See the &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md&quot;&gt;DST coercion RFC&lt;/a&gt; and &lt;a href=&quot;https://doc.rust-lang.org/nomicon/coercions.html&quot;&gt;the nomicon entry on coercion&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;Unsize&lt;/code&gt; используется вместе с &lt;a href=&quot;../ops/trait.coerceunsized&quot;&gt; &lt;code&gt;ops::CoerceUnsized&lt;/code&gt; &lt;/a&gt; чтобы разрешить &quot;определяемым пользователем&quot; контейнерам, таким как &lt;a href=&quot;../rc/struct.rc&quot;&gt; &lt;code&gt;rc::Rc&lt;/code&gt; &lt;/a&gt; содержать типы с динамическим размером. Дополнительные сведения см. В &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md&quot;&gt;RFC принуждения DST&lt;/a&gt; и &lt;a href=&quot;https://doc.rust-lang.org/nomicon/coercions.html&quot;&gt;в статье nomicon о принуждении&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d5848a85b15f827f6fdeae6545b4e39ec090f86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Uppercase&lt;/code&gt; is described in Chapter 4 (Character Properties) of the &lt;a href=&quot;https://www.unicode.org/versions/latest/&quot;&gt;Unicode Standard&lt;/a&gt; and specified in the &lt;a href=&quot;https://www.unicode.org/reports/tr44/&quot;&gt;Unicode Character Database&lt;/a&gt;&lt;a href=&quot;https://www.unicode.org/Public/UCD/latest/ucd/DerivedCoreProperties.txt&quot;&gt;&lt;code&gt;DerivedCoreProperties.txt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c038f2912a5d6313a3fd98da687fed06b926624" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vec&lt;/code&gt; does not currently guarantee the order in which elements are dropped. The order has changed in the past and may change again.</source>
          <target state="translated">&lt;code&gt;Vec&lt;/code&gt; в настоящее время не гарантирует порядок, в котором удаляются элементы. Порядок менялся в прошлом и может измениться снова.</target>
        </trans-unit>
        <trans-unit id="0842430b9dc722bdd51043a8a8a1dedc6cfbc53f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vec&lt;/code&gt; does not guarantee any particular growth strategy when reallocating when full, nor when &lt;a href=&quot;struct.vec#method.reserve&quot;&gt;&lt;code&gt;reserve&lt;/code&gt;&lt;/a&gt; is called. The current strategy is basic and it may prove desirable to use a non-constant growth factor. Whatever strategy is used will of course guarantee &lt;code&gt;O(1)&lt;/code&gt; amortized &lt;a href=&quot;struct.vec#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Vec&lt;/code&gt; не гарантирует какой-либо конкретной стратегии роста при перераспределении при заполнении или вызове &lt;a href=&quot;struct.vec#method.reserve&quot;&gt; &lt;code&gt;reserve&lt;/code&gt; &lt;/a&gt; . Текущая стратегия является базовой, и может оказаться желательным использование непостоянного фактора роста. Независимо от стратегии используется воля гарантийного конечно &lt;code&gt;O(1)&lt;/code&gt; амортизируется &lt;a href=&quot;struct.vec#method.push&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b2045d6d707efc5c8342c60437b1aef36bf90f02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vec&lt;/code&gt; will never automatically shrink itself, even if completely empty. This ensures no unnecessary allocations or deallocations occur. Emptying a &lt;code&gt;Vec&lt;/code&gt; and then filling it back up to the same &lt;a href=&quot;struct.vec#method.len&quot;&gt;&lt;code&gt;len&lt;/code&gt;&lt;/a&gt; should incur no calls to the allocator. If you wish to free up unused memory, use &lt;a href=&quot;struct.vec#method.shrink_to_fit&quot;&gt;&lt;code&gt;shrink_to_fit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Vec&lt;/code&gt; никогда не сжимается автоматически, даже если он полностью пустой. Это гарантирует отсутствие ненужного выделения или освобождения памяти. Очистка &lt;code&gt;Vec&lt;/code&gt; и последующее заполнение его до того же значения &lt;a href=&quot;struct.vec#method.len&quot;&gt; &lt;code&gt;len&lt;/code&gt; не&lt;/a&gt; должно вызывать никаких обращений к распределителю. Если вы хотите освободить неиспользуемую память, используйте &lt;a href=&quot;struct.vec#method.shrink_to_fit&quot;&gt; &lt;code&gt;shrink_to_fit&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2c138e62037a41259d18bb337a8b3813b4503afb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vec&lt;/code&gt; will never perform a &quot;small optimization&quot; where elements are actually stored on the stack for two reasons:</source>
          <target state="translated">&lt;code&gt;Vec&lt;/code&gt; никогда не будет выполнять &amp;laquo;небольшую оптимизацию&amp;raquo;, когда элементы фактически хранятся в стеке по двум причинам:</target>
        </trans-unit>
        <trans-unit id="aa1995a9cd88dc9bc07c96596b6994906d449977" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vec&lt;/code&gt; will not specifically overwrite any data that is removed from it, but also won't specifically preserve it. Its uninitialized memory is scratch space that it may use however it wants. It will generally just do whatever is most efficient or otherwise easy to implement. Do not rely on removed data to be erased for security purposes. Even if you drop a &lt;code&gt;Vec&lt;/code&gt;, its buffer may simply be reused by another &lt;code&gt;Vec&lt;/code&gt;. Even if you zero a &lt;code&gt;Vec&lt;/code&gt;'s memory first, that may not actually happen because the optimizer does not consider this a side-effect that must be preserved. There is one case which we will not break, however: using &lt;code&gt;unsafe&lt;/code&gt; code to write to the excess capacity, and then increasing the length to match, is always valid.</source>
          <target state="translated">&lt;code&gt;Vec&lt;/code&gt; не будет специально перезаписывать какие-либо данные, которые были удалены из него, но и не будет специально их сохранять. Его неинициализированная память - это рабочее пространство, которое он может использовать как угодно. Обычно он просто делает то, что наиболее эффективно или легко реализуемо. Не рассчитывайте, что удаленные данные будут удалены в целях безопасности. Даже если вы отбросите &lt;code&gt;Vec&lt;/code&gt; , его буфер может быть просто повторно использован другим &lt;code&gt;Vec&lt;/code&gt; . Даже если вы сначала обнулите память &lt;code&gt;Vec&lt;/code&gt; , этого может не произойти, потому что оптимизатор не считает это побочным эффектом, который необходимо сохранить. Однако есть один случай, который мы не будем нарушать: использование &lt;code&gt;unsafe&lt;/code&gt; кода для записи в избыточную емкость с последующим увеличением длины для соответствия всегда допустимо.</target>
        </trans-unit>
        <trans-unit id="d4ee2e04173c939700002545fd065e41231a2d90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Weak&lt;/code&gt; is a version of &lt;a href=&quot;struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt; that holds a non-owning reference to the managed allocation. The allocation is accessed by calling &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the &lt;code&gt;Weak&lt;/code&gt; pointer, which returns an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb3b0e05d73114df2df4ae4191f2651cf500746" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Weak&lt;/code&gt; is a version of &lt;a href=&quot;struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt; that holds a non-owning reference to the managed value. The value is accessed by calling &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the &lt;code&gt;Weak&lt;/code&gt; pointer, which returns an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Weak&lt;/code&gt; - это версия &lt;a href=&quot;struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; ,&lt;/a&gt; которая содержит ссылку на управляемое значение, не являющуюся владельцем. Доступ к значению осуществляется путем вызова &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt; &lt;code&gt;upgrade&lt;/code&gt; &lt;/a&gt; для &lt;code&gt;Weak&lt;/code&gt; указателя, который возвращает &lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;Option&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;struct.arc&quot;&gt; &lt;code&gt;Arc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf8d3fa2913630148a7c94d05eccf0fd619f2356" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Weak&lt;/code&gt; is a version of &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt; that holds a non-owning reference to the managed allocation. The allocation is accessed by calling &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the &lt;code&gt;Weak&lt;/code&gt; pointer, which returns an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c854167f674817e7e2de19bb245e924fdad956f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Weak&lt;/code&gt; is a version of &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt; that holds a non-owning reference to the managed value. The value is accessed by calling &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the &lt;code&gt;Weak&lt;/code&gt; pointer, which returns an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Weak&lt;/code&gt; - это версия &lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; ,&lt;/a&gt; которая содержит ссылку на управляемое значение, не являющуюся владельцем. Доступ к значению осуществляется путем вызова &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt; &lt;code&gt;upgrade&lt;/code&gt; &lt;/a&gt; для &lt;code&gt;Weak&lt;/code&gt; указателя, который возвращает &lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;Option&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fc57320ad35456f5be1c472a78582ad6252a7db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;White_Space&lt;/code&gt; is specified in the &lt;a href=&quot;https://www.unicode.org/reports/tr44/&quot;&gt;Unicode Character Database&lt;/a&gt;&lt;a href=&quot;https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt&quot;&gt;&lt;code&gt;PropList.txt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb59f191736e86bda790823d721bf254904d63c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Write&lt;/code&gt; includes a single &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Write&lt;/code&gt; включает одну &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8baa7d8ca586d34e346b689f942a7f8f4bf972c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.upperhex&quot;&gt;&lt;code&gt;UpperHex&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.upperhex&quot;&gt; &lt;code&gt;UpperHex&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7a8b92bdff1c5b19de16d72892759bdc4ccc055" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt; formatting.</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; форматирование.</target>
        </trans-unit>
        <trans-unit id="0ff29fd323ba01b60e1508eddcf6f34256380d29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X?&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt; with upper-case hexadecimal integers</source>
          <target state="translated">&lt;code&gt;X?&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.debug&quot;&gt; &lt;code&gt;Debug&lt;/code&gt; &lt;/a&gt; с использованием шестнадцатеричных целых чисел в верхнем регистре</target>
        </trans-unit>
        <trans-unit id="bbc583d8cf6721f3d3948d82304abe45ae3702d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;ArrayElements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;ArrayElements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="429917b2fa19fc7d9c387c7fea97018669352a19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f74d282f16d5a862c7eba2396135aaf979e09b75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65c13c020f3ab6f9ac3bfc9026ccfce808c33adb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; (&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt; &lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;шаблон&lt;/em&gt;&lt;/a&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e6133de9165856bec31a963923494e952b07a34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="77033b38f8a1d2b5c1d70a793320df0a734bbe08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;em&gt;SlicePatternItems&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;&lt;em&gt;SlicePatternItems&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f98369e91ab28104a3ef6d5c09ad0caf7644282c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[T; N]&lt;/code&gt; is &lt;code&gt;Unsize&amp;lt;[T]&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[T; N]&lt;/code&gt; равно &lt;code&gt;Unsize&amp;lt;[T]&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="850e65c4e16490294eac7e4adabff47857d4f401" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[T; n]&lt;/code&gt; to &lt;code&gt;[T]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[T; n]&lt;/code&gt; до &lt;code&gt;[T]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20de50777f1e5c511744c9e88dd1c983a0dfc8f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[T]&lt;/code&gt; and &lt;code&gt;[T; n]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[T]&lt;/code&gt; и &lt;code&gt;[T; n]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19cdfcb8e35ace357e164f0ea3be68e0e1513bfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[fill]&amp;gt;&lt;/code&gt; - the argument is right-aligned in &lt;code&gt;width&lt;/code&gt; columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53ebba1ad04ff1655f21eedec8c4884b4f0921f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[fill]&amp;lt;&lt;/code&gt; - the argument is left-aligned in &lt;code&gt;width&lt;/code&gt; columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e132cbaaef31011a1629babcdb2722d2ebad1dd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[fill]^&lt;/code&gt; - the argument is center-aligned in &lt;code&gt;width&lt;/code&gt; columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846683b8124bfad974b84f7fc9e39451ea401d22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\'&lt;/code&gt; | &lt;code&gt;\&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\'&lt;/code&gt; | &lt;code&gt;\&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0188d46c969099ec650ba736f85a9eff66c95ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&lt;/code&gt;&lt;em&gt;followed by&lt;/em&gt; \n</source>
          <target state="translated">&lt;code&gt;\&lt;/code&gt; ,&lt;em&gt;за которым следует&lt;/em&gt; \ n</target>
        </trans-unit>
        <trans-unit id="e1e0c067924632f3f30abfaccf8c2bbb3ddf0077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\u{&lt;/code&gt; ( HEX_DIGIT &lt;code&gt;_&lt;/code&gt;&lt;sup&gt;*&lt;/sup&gt; )&lt;sup&gt;1..6&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\u{&lt;/code&gt; (ЦИФРОВОЙ_ШЕСТНИЧНЫЙ &lt;code&gt;_&lt;/code&gt; &lt;sup&gt;*&lt;/sup&gt; ) &lt;sup&gt;1..6 &lt;/sup&gt; &lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7bfa60964b39253167d48d4743520e2dbebadd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x&lt;/code&gt; HEX_DIGIT HEX_DIGIT</source>
          <target state="translated">&lt;code&gt;\x&lt;/code&gt; HEX_DIGIT HEX_DIGIT</target>
        </trans-unit>
        <trans-unit id="776836237567e80ae21f14d79d75a578ed148885" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x&lt;/code&gt; OCT_DIGIT HEX_DIGIT</source>
          <target state="translated">&lt;code&gt;\x&lt;/code&gt; ЦИФРОВОЙ_ЦИФРОВОЙ_Цифровой ШЕСТИГРАННИК</target>
        </trans-unit>
        <trans-unit id="00300a7210e800449737f4642ef57d12724ef0ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt; - the argument is center-aligned in &lt;code&gt;width&lt;/code&gt; columns</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; - аргумент выравнивается по центру в столбцах &lt;code&gt;width&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="01c21f9f1ecd54e3162bbf94eb10f3ea34601934" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_first&lt;/code&gt; is declared first and &lt;code&gt;_second&lt;/code&gt; is declared second, so &lt;code&gt;main&lt;/code&gt; will print &lt;code&gt;Declared second!&lt;/code&gt; and then &lt;code&gt;Declared first!&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;_first&lt;/code&gt; объявлен первым, а &lt;code&gt;_second&lt;/code&gt; объявлен вторым, поэтому &lt;code&gt;main&lt;/code&gt; будет печатать &lt;code&gt;Declared second!&lt;/code&gt; а потом &lt;code&gt;Declared first!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ead7d5541adaf8ebdf41a6d508ba49b3657a05af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.clone_from(&amp;amp;b)&lt;/code&gt; is equivalent to &lt;code&gt;a = b.clone()&lt;/code&gt; in functionality, but can be overridden to reuse the resources of &lt;code&gt;a&lt;/code&gt; to avoid unnecessary allocations.</source>
          <target state="translated">&lt;code&gt;a.clone_from(&amp;amp;b)&lt;/code&gt; эквивалентна &lt;code&gt;a = b.clone()&lt;/code&gt; , но может быть переопределена для повторного использования ресурсов &lt;code&gt;a&lt;/code&gt; , чтобы избежать ненужного выделения.</target>
        </trans-unit>
        <trans-unit id="bffa81ddece0c699f61e73446e0e7a7aa7574e23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addr&lt;/code&gt; is an address of the remote host. Anything which implements &lt;a href=&quot;trait.tosocketaddrs&quot;&gt;&lt;code&gt;ToSocketAddrs&lt;/code&gt;&lt;/a&gt; trait can be supplied for the address; see this trait documentation for concrete examples.</source>
          <target state="translated">&lt;code&gt;addr&lt;/code&gt; - это адрес удаленного хоста. Для &lt;a href=&quot;trait.tosocketaddrs&quot;&gt; &lt;code&gt;ToSocketAddrs&lt;/code&gt; &lt;/a&gt; можно указать все, что реализует свойство ToSocketAddrs ; см. документацию по этому признаку для конкретных примеров.</target>
        </trans-unit>
        <trans-unit id="050a75bfb5226a182a624df4e6beaa31f13e9244" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;advance_back_by(n)&lt;/code&gt; will return [&lt;code&gt;Ok(())&lt;/code&gt;] if the iterator successfully advances by &lt;code&gt;n&lt;/code&gt; elements, or [&lt;code&gt;Err(k)&lt;/code&gt;] if &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is encountered, where &lt;code&gt;k&lt;/code&gt; is the number of elements the iterator is advanced by before running out of elements (i.e. the length of the iterator). Note that &lt;code&gt;k&lt;/code&gt; is always less than &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1090bbbf988d5db8fe1e7d4310304d4eab0a6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;advance_back_by&lt;/code&gt; is the reverse version of &lt;a href=&quot;trait.iterator#method.advance_by&quot;&gt;&lt;code&gt;advance_by&lt;/code&gt;&lt;/a&gt;. This method will eagerly skip &lt;code&gt;n&lt;/code&gt; elements starting from the back by calling &lt;a href=&quot;trait.doubleendediterator#tymethod.next_back&quot;&gt;&lt;code&gt;next_back&lt;/code&gt;&lt;/a&gt; up to &lt;code&gt;n&lt;/code&gt; times until &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab3df060974d3be2ff9687905004b7556deccac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;advance_by(n)&lt;/code&gt; will return [&lt;code&gt;Ok(())&lt;/code&gt;] if the iterator successfully advances by &lt;code&gt;n&lt;/code&gt; elements, or [&lt;code&gt;Err(k)&lt;/code&gt;] if &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is encountered, where &lt;code&gt;k&lt;/code&gt; is the number of elements the iterator is advanced by before running out of elements (i.e. the length of the iterator). Note that &lt;code&gt;k&lt;/code&gt; is always less than &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
