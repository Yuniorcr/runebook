<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="1cce5cf4c494ba29ff4d7ae159b2451a4462e9e9" translate="yes" xml:space="preserve">
          <source>Expresses that &lt;code&gt;haystack[a..b]&lt;/code&gt; has been rejected as a possible match of the pattern.</source>
          <target state="translated">&lt;code&gt;haystack[a..b]&lt;/code&gt; что стог сена [a..b] был отклонен как возможное совпадение с шаблоном.</target>
        </trans-unit>
        <trans-unit id="d9fc1c82d92eeab98426878b759fceb2c4c1a8a6" translate="yes" xml:space="preserve">
          <source>Expresses that a match of the pattern has been found at &lt;code&gt;haystack[a..b]&lt;/code&gt;.</source>
          <target state="translated">Указывает, что совпадение с шаблоном было найдено в &lt;code&gt;haystack[a..b]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9413e7cf480a6b3fb1a89962b712e0076f99371" translate="yes" xml:space="preserve">
          <source>Expresses that every byte of the haystack has been visited, ending the iteration.</source>
          <target state="translated">Выражает,что каждый байт стог сена был посещен,заканчивая итерацию.</target>
        </trans-unit>
        <trans-unit id="97b695b9b9cfde3612c21b3add972cc0f21f4e26" translate="yes" xml:space="preserve">
          <source>Expression</source>
          <target state="translated">Expression</target>
        </trans-unit>
        <trans-unit id="1c214c7f9bfde2d572e04368579436132fb7c9dc" translate="yes" xml:space="preserve">
          <source>Expression Attributes</source>
          <target state="translated">Атрибуты выражения</target>
        </trans-unit>
        <trans-unit id="e290d0bd398f4e40e7ad97a44c3e4a14487bc65b" translate="yes" xml:space="preserve">
          <source>Expression precedence</source>
          <target state="translated">Приоритет экспрессии</target>
        </trans-unit>
        <trans-unit id="0a7a6ba0d7d2af3106edf9d912c2fc5a47512f54" translate="yes" xml:space="preserve">
          <source>Expression statements</source>
          <target state="translated">Заявления о выражении мнений</target>
        </trans-unit>
        <trans-unit id="ae5fccd8dcd8fc317f8edfc8259af86cd2967a29" translate="yes" xml:space="preserve">
          <source>Expressions</source>
          <target state="translated">Expressions</target>
        </trans-unit>
        <trans-unit id="7bb2466f3a73df210b2543c2d61b582e81a11f51" translate="yes" xml:space="preserve">
          <source>Expressions accept outer attributes in limited situations, see &lt;a href=&quot;expressions#expression-attributes&quot;&gt;Expression Attributes&lt;/a&gt; for details.</source>
          <target state="translated">Выражения принимают внешние атрибуты в ограниченных случаях, подробности см. В разделе &lt;a href=&quot;expressions#expression-attributes&quot;&gt;Атрибуты выражений&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea5a29e3a572dfe0ff53324d950b33e506a558c6" translate="yes" xml:space="preserve">
          <source>Expressions are divided into two main categories: place expressions and value expressions. Likewise within each expression, sub-expressions may occur in either place context or value context. The evaluation of an expression depends both on its own category and the context it occurs within.</source>
          <target state="translated">Выражения делятся на две основные категории:выражения места и выражения значения.Аналогично внутри каждого выражения подвыражения могут встречаться как в контексте места,так и в контексте значения.Оценка выражения зависит как от его собственной категории,так и от контекста,в котором оно происходит.</target>
        </trans-unit>
        <trans-unit id="f3f87c5952fa93a03448097e06e822130ba38581" translate="yes" xml:space="preserve">
          <source>Expressions evaluate to something and make up most of the rest of the code that you&amp;rsquo;ll write in Rust. Consider a simple math operation, such as &lt;code&gt;5 + 6&lt;/code&gt;, which is an expression that evaluates to the value &lt;code&gt;11&lt;/code&gt;. Expressions can be part of statements: in Listing 3-1, the &lt;code&gt;6&lt;/code&gt; in the statement &lt;code&gt;let y = 6;&lt;/code&gt; is an expression that evaluates to the value &lt;code&gt;6&lt;/code&gt;. Calling a function is an expression. Calling a macro is an expression. The block that we use to create new scopes, &lt;code&gt;{}&lt;/code&gt;, is an expression, for example:</source>
          <target state="translated">Выражения что-то оценивают и составляют большую часть остального кода, который вы напишете на Rust. Рассмотрим простую математическую операцию, например &lt;code&gt;5 + 6&lt;/code&gt; , которая является выражением, результатом которого является значение &lt;code&gt;11&lt;/code&gt; . Выражения могут быть частью операторов: в листинге 3-1 цифра &lt;code&gt;6&lt;/code&gt; в операторе &lt;code&gt;let y = 6;&lt;/code&gt; - выражение, которое принимает значение &lt;code&gt;6&lt;/code&gt; . Вызов функции - это выражение. Вызов макроса - это выражение. Блок, который мы используем для создания новых областей видимости, &lt;code&gt;{}&lt;/code&gt; , представляет собой выражение, например:</target>
        </trans-unit>
        <trans-unit id="281dd83602a2719ee60a63350e4c59f5a5ec31ba" translate="yes" xml:space="preserve">
          <source>Extend</source>
          <target state="translated">Extend</target>
        </trans-unit>
        <trans-unit id="3d400e57b7ebc958150362b7ccf527570885afef" translate="yes" xml:space="preserve">
          <source>Extend Cargo using custom commands</source>
          <target state="translated">Расширение груза с помощью пользовательских команд</target>
        </trans-unit>
        <trans-unit id="1aa1b8d09aeae60b76b14c43da05508c2308568e" translate="yes" xml:space="preserve">
          <source>Extend a collection with the contents of an iterator.</source>
          <target state="translated">Расширьте коллекцию содержимым итератора.</target>
        </trans-unit>
        <trans-unit id="63d17bd5e813a98108e872632dda1e3f6fca9930" translate="yes" xml:space="preserve">
          <source>Extend implementation that copies elements out of references before pushing them onto the Vec.</source>
          <target state="translated">Расширьте реализацию,которая копирует элементы из ссылок,прежде чем выталкивать их на Vec.</target>
        </trans-unit>
        <trans-unit id="6ca321bc031c66209872c995fde2c9958df48aec" translate="yes" xml:space="preserve">
          <source>Extend::extend</source>
          <target state="translated">Extend::extend</target>
        </trans-unit>
        <trans-unit id="0bdb432d95a5f44684c48bb5ff9c63a8b741778d" translate="yes" xml:space="preserve">
          <source>Extending Cargo with Custom Commands</source>
          <target state="translated">Расширение груза с помощью пользовательских команд</target>
        </trans-unit>
        <trans-unit id="0bfe02d755fba1dacbc3abdb4bc60dfdcb8cf321" translate="yes" xml:space="preserve">
          <source>Extending a lifetime, or shortening an invariant lifetime. This is advanced, very unsafe Rust!</source>
          <target state="translated">Продление срока службы или сокращение инвариантной жизни.Это продвинутая,очень небезопасная Ржавчина!</target>
        </trans-unit>
        <trans-unit id="f3982b58ea128693a466b38fe551940ae59fc928" translate="yes" xml:space="preserve">
          <source>Extending based on expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165c503abcbf685b22633768fa14b61e6111321a" translate="yes" xml:space="preserve">
          <source>Extending based on patterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7a6525f01fc44c66d625472111d46906a702a3" translate="yes" xml:space="preserve">
          <source>Extends &lt;code&gt;self&lt;/code&gt; with &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">Расширяет &lt;code&gt;self&lt;/code&gt; с &lt;code&gt;path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b0d8441b27aafa3374d0798ba679165b9c0bf75" translate="yes" xml:space="preserve">
          <source>Extends a collection with exactly one element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c596f05a0a374226d4d89af6b8fc31f100676800" translate="yes" xml:space="preserve">
          <source>Extends a collection with the contents of an iterator.</source>
          <target state="translated">Расширяет коллекцию содержимым итератора.</target>
        </trans-unit>
        <trans-unit id="34684b1f4466b8bac4b0eb3da31f67f046bcdfaf" translate="yes" xml:space="preserve">
          <source>Extends a collection with the contents of an iterator. &lt;a href=&quot;../../iter/trait.extend#tymethod.extend&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Расширяет коллекцию содержимым итератора. &lt;a href=&quot;../../iter/trait.extend#tymethod.extend&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53d3d99ff458e4308538b8fa842ffa49b1175ef6" translate="yes" xml:space="preserve">
          <source>Extends a collection with the contents of an iterator. &lt;a href=&quot;../iter/trait.extend#tymethod.extend&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Расширяет коллекцию содержимым итератора. &lt;a href=&quot;../iter/trait.extend#tymethod.extend&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22bdb7eb07189c9fee4746d6cf601a24763232c3" translate="yes" xml:space="preserve">
          <source>Extends a collection with the contents of an iterator. &lt;a href=&quot;iter/trait.extend#tymethod.extend&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Расширяет коллекцию содержимым итератора. &lt;a href=&quot;iter/trait.extend#tymethod.extend&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6747fcd458b4db93fa07e978eeadfc404e97d049" translate="yes" xml:space="preserve">
          <source>Extends the string with the given &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;&amp;amp;OsStr&lt;/code&gt;&lt;/a&gt; slice.</source>
          <target state="translated">Расширяет строку заданным срезом &lt;a href=&quot;struct.osstr&quot;&gt; &lt;code&gt;&amp;amp;OsStr&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a449e6ae4ae76fbd14bf33b19229c470ef831252" translate="yes" xml:space="preserve">
          <source>Extensible Concurrency with the &lt;code id=&quot;extensible-concurrency-with-the-sync-and-send-traits&quot;&gt;Sync&lt;/code&gt; and &lt;code&gt;Send&lt;/code&gt; Traits</source>
          <target state="translated">Extensible параллелизм с &lt;code id=&quot;extensible-concurrency-with-the-sync-and-send-traits&quot;&gt;Sync&lt;/code&gt; и &lt;code&gt;Send&lt;/code&gt; Признаками</target>
        </trans-unit>
        <trans-unit id="35c3ace074cac5108c2b6392030678de1734abf0" translate="yes" xml:space="preserve">
          <source>Extension methods for ASCII-subset only operations.</source>
          <target state="translated">Методы расширения только для операций с ASCII-подсетками.</target>
        </trans-unit>
        <trans-unit id="656bcfe284e2da39c77d4fdab55b16ad3c654719" translate="yes" xml:space="preserve">
          <source>Extensions</source>
          <target state="translated">Extensions</target>
        </trans-unit>
        <trans-unit id="5660e0fb3b8978f5c7dd8e664a4a677b0daa23bf" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;std::process&lt;/code&gt; for Windows.</source>
          <target state="translated">Расширения &lt;code&gt;std::process&lt;/code&gt; для Windows.</target>
        </trans-unit>
        <trans-unit id="8e8b96cc72db0c4dc075e35bc9cdf0733b6acb09" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;std::thread&lt;/code&gt; for Windows.</source>
          <target state="translated">Расширения &lt;code&gt;std::thread&lt;/code&gt; для Windows.</target>
        </trans-unit>
        <trans-unit id="f0c28f41a9e3fa7fb027e52e2670951b4ac96708" translate="yes" xml:space="preserve">
          <source>Extern Prelude</source>
          <target state="translated">внешняя прелюдия</target>
        </trans-unit>
        <trans-unit id="6514bbb426cf43d7f3f90e0fe10f9d7ff363e600" translate="yes" xml:space="preserve">
          <source>Extern crate declarations</source>
          <target state="translated">Декларации внешних ящиков</target>
        </trans-unit>
        <trans-unit id="1eddd7e69cdbd60c0d72ebdd3c45472a5da1f730" translate="yes" xml:space="preserve">
          <source>Extern function declarations with the &quot;C&quot; or &quot;cdecl&quot; ABIs can also be &lt;em&gt;variadic&lt;/em&gt;, allowing them to be called with a variable number of arguments. Normal Rust functions, even those with an &lt;code&gt;extern &quot;ABI&quot;&lt;/code&gt;, cannot be variadic. For more information, see &lt;a href=&quot;https://doc.rust-lang.org/nomicon/ffi.html#variadic-functions&quot;&gt;the nomicon's section on variadic functions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ed2ac66ec6b9cc0432e6d5a4601ee33b6bb930" translate="yes" xml:space="preserve">
          <source>Extern function declarations with the &quot;C&quot; or &quot;cdecl&quot; ABIs can also be &lt;em&gt;variadic&lt;/em&gt;, allowing them to be called with a variable number of arguments. Normal rust functions, even those with an &lt;code&gt;extern &quot;ABI&quot;&lt;/code&gt;, cannot be variadic. For more information, see &lt;a href=&quot;https://doc.rust-lang.org/nomicon/ffi.html#variadic-functions&quot;&gt;the nomicon's section on variadic functions&lt;/a&gt;.</source>
          <target state="translated">Объявления функций Extern с ABI &quot;C&quot; или &quot;cdecl&quot; также могут быть &lt;em&gt;переменными&lt;/em&gt; , что позволяет вызывать их с переменным числом аргументов. Обычные функции ржавчины, даже те, у которых есть внешний &lt;code&gt;extern &quot;ABI&quot;&lt;/code&gt; , не могут быть переменными. Для получения дополнительной информации см. &lt;a href=&quot;https://doc.rust-lang.org/nomicon/ffi.html#variadic-functions&quot;&gt;Раздел nomicon, посвященный вариативным функциям&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="65d89d6a6f18d5795e8b05b432b6cd52044db0ee" translate="yes" xml:space="preserve">
          <source>Extern function qualifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7eccef81a98e5c471b9d99ccf4b50c1b88fe3f" translate="yes" xml:space="preserve">
          <source>Extern functions</source>
          <target state="translated">Внешние функции</target>
        </trans-unit>
        <trans-unit id="a2d449c2066cab7d81ea015424bd8d14387bea22" translate="yes" xml:space="preserve">
          <source>Extern functions are part of Rust's foreign function interface, providing the opposite functionality to &lt;a href=&quot;external-blocks&quot;&gt;external blocks&lt;/a&gt;. Whereas external blocks allow Rust code to call foreign code, extern functions with bodies defined in Rust code &lt;em&gt;can be called by foreign code&lt;/em&gt;. They are defined in the same way as any other Rust function, except that they have the &lt;code&gt;extern&lt;/code&gt; qualifier.</source>
          <target state="translated">Внешние функции являются частью интерфейса внешних функций Rust, обеспечивая функциональность, противоположную &lt;a href=&quot;external-blocks&quot;&gt;внешним блокам&lt;/a&gt; . В то время как внешние блоки позволяют коду Rust вызывать внешний код, внешние функции с телами, определенными в коде Rust, &lt;em&gt;могут вызываться внешним кодом&lt;/em&gt; . Они определяются так же, как и любые другие функции Rust, за исключением того, что имеют квалификатор &lt;code&gt;extern&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ce0af43c07f2157bc2038fa0249d689eb463c91" translate="yes" xml:space="preserve">
          <source>Extern statics can be either immutable or mutable just like &lt;a href=&quot;static-items&quot;&gt;statics&lt;/a&gt; outside of external blocks. An immutable static &lt;em&gt;must&lt;/em&gt; be initialized before any Rust code is executed. It is not enough for the static to be initialized before Rust code reads from it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224dea6c3333066e46cdb1ca575646da5bfd214d" translate="yes" xml:space="preserve">
          <source>External C functions are allowed to be variadic. However, a variadic function takes a minimum number of arguments. For example, consider C's variadic &lt;code&gt;printf&lt;/code&gt; function:</source>
          <target state="translated">Внешние функции C могут быть вариативными. Однако вариативная функция принимает минимальное количество аргументов. Например, рассмотрим вариативную функцию &lt;code&gt;printf&lt;/code&gt; в языке C :</target>
        </trans-unit>
        <trans-unit id="342d6c5cca77be476d8a95967d8d0db8741e506c" translate="yes" xml:space="preserve">
          <source>External blocks</source>
          <target state="translated">Внешние блоки</target>
        </trans-unit>
        <trans-unit id="83d8db48341a32267147990e9523818d742c54b5" translate="yes" xml:space="preserve">
          <source>External blocks form the basis for Rust's foreign function interface. Declarations in an external block describe symbols in external, non-Rust libraries.</source>
          <target state="translated">Внешние блоки образуют основу интерфейса внешней функции Rust.Объявления во внешнем блоке описывают символы во внешних,не относящихся к Rust,библиотеках.</target>
        </trans-unit>
        <trans-unit id="ace0915a6c1896ef0020e8c3d63897ba9f7ed170" translate="yes" xml:space="preserve">
          <source>External blocks provide &lt;em&gt;declarations&lt;/em&gt; of items that are not &lt;em&gt;defined&lt;/em&gt; in the current crate and are the basis of Rust's foreign function interface. These are akin to unchecked imports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e7f57651ea7eed7c7272c6b08048522b200ade" translate="yes" xml:space="preserve">
          <source>External code (like our server in &lt;em&gt;src/bin/main.rs&lt;/em&gt;) doesn&amp;rsquo;t need to know the implementation details regarding using a &lt;code&gt;Worker&lt;/code&gt; struct within &lt;code&gt;ThreadPool&lt;/code&gt;, so we make the &lt;code&gt;Worker&lt;/code&gt; struct and its &lt;code&gt;new&lt;/code&gt; function private. The &lt;code&gt;Worker::new&lt;/code&gt; function uses the &lt;code&gt;id&lt;/code&gt; we give it and stores a &lt;code&gt;JoinHandle&amp;lt;()&amp;gt;&lt;/code&gt; instance that is created by spawning a new thread using an empty closure.</source>
          <target state="translated">Внешний код (например, наш сервер в &lt;em&gt;src / bin / main.rs&lt;/em&gt; ) не должен знать детали реализации, касающиеся использования структуры &lt;code&gt;Worker&lt;/code&gt; в &lt;code&gt;ThreadPool&lt;/code&gt; , поэтому мы делаем структуру &lt;code&gt;Worker&lt;/code&gt; и ее &lt;code&gt;new&lt;/code&gt; функцию закрытыми. Функция &lt;code&gt;Worker::new&lt;/code&gt; использует &lt;code&gt;id&lt;/code&gt; мы ей даем, и сохраняет &lt;code&gt;JoinHandle&amp;lt;()&amp;gt;&lt;/code&gt; который создается путем создания нового потока с использованием пустого закрытия.</target>
        </trans-unit>
        <trans-unit id="6613e88e66a635a2565b186ccf4e3b12f673582c" translate="yes" xml:space="preserve">
          <source>External crates imported with &lt;code&gt;extern crate&lt;/code&gt; in the root module or provided to the compiler (as with the &lt;code&gt;--extern&lt;/code&gt; flag with &lt;code&gt;rustc&lt;/code&gt;) are added to the &quot;extern prelude&quot;. Crates in the extern prelude are in scope in the entire crate, including inner modules. If imported with &lt;code&gt;extern crate orig_name as new_name&lt;/code&gt;, then the symbol &lt;code&gt;new_name&lt;/code&gt; is instead added to the prelude.</source>
          <target state="translated">Внешние ящики , импортированные с &lt;code&gt;extern crate&lt;/code&gt; в корневом модуле или предоставляемые компилятором (как с &lt;code&gt;--extern&lt;/code&gt; флагом с &lt;code&gt;rustc&lt;/code&gt; ) добавляются к &amp;laquo;экстерном прелюдии&amp;raquo;. Ящики в прелюдии extern входят в объем всего ящика, включая внутренние модули. Если импортировано с &lt;code&gt;extern crate orig_name as new_name&lt;/code&gt; , то вместо этого к прелюдии добавляется символ &lt;code&gt;new_name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32ece7447e212ccb757012ae5e86643f98cfc6c5" translate="yes" xml:space="preserve">
          <source>Extra Conditionals with Match Guards</source>
          <target state="translated">Дополнительные условия с охраной матча</target>
        </trans-unit>
        <trans-unit id="d752dee9295f4dfe5d392179a84af08c86a16b3f" translate="yes" xml:space="preserve">
          <source>Extract the duplicate code into the body of the function and specify the inputs and return values of that code in the function signature.</source>
          <target state="translated">Извлеките дубликат кода в тело функции и укажите в сигнатуре функции входные и возвращаемые значения этого кода.</target>
        </trans-unit>
        <trans-unit id="c23bc5711c4106716527b5647362f08a92113ff9" translate="yes" xml:space="preserve">
          <source>Extracting Logic from &lt;code id=&quot;extracting-logic-from-main&quot;&gt;main&lt;/code&gt;</source>
          <target state="translated">Извлечение логики из &lt;code id=&quot;extracting-logic-from-main&quot;&gt;main&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8d7602f3461fa54951122f27033f10fd4dd6680" translate="yes" xml:space="preserve">
          <source>Extracting a borrowed reference to the whole OS string</source>
          <target state="translated">Извлечение заимствованной ссылки на всю строку операционной системы</target>
        </trans-unit>
        <trans-unit id="bd1c17a8059d60877bed23a8c062ed6219764c29" translate="yes" xml:space="preserve">
          <source>Extracting a raw pointer to the whole C string</source>
          <target state="translated">Извлечение необработанного указателя на всю строку C</target>
        </trans-unit>
        <trans-unit id="f3f51cc80e3ae1982747ef739eae23585f64efc4" translate="yes" xml:space="preserve">
          <source>Extracting a slice of the whole C string</source>
          <target state="translated">Извлечение кусочка целой строки C</target>
        </trans-unit>
        <trans-unit id="7c6025beb99c95c0892b851cf9a727b399d3c515" translate="yes" xml:space="preserve">
          <source>Extracting the Argument Parser</source>
          <target state="translated">Извлечение Парсера Аргументов</target>
        </trans-unit>
        <trans-unit id="12801130beeedd079871761a20c76e767840cb13" translate="yes" xml:space="preserve">
          <source>Extracts a &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt; slice containing the entire string.</source>
          <target state="translated">Извлекает &lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; &lt;/a&gt; срез , содержащий всю строку.</target>
        </trans-unit>
        <trans-unit id="077bce36ea34a8682de40493d76c550ac66ae1ea" translate="yes" xml:space="preserve">
          <source>Extracts a handle to the underlying thread.</source>
          <target state="translated">Извлекает рукоятку к основной нити.</target>
        </trans-unit>
        <trans-unit id="aa6ee9425f37e1c341efbcd4e8925124891481c6" translate="yes" xml:space="preserve">
          <source>Extracts a mutable slice of the entire vector.</source>
          <target state="translated">Извлекает мутирующий кусочек всего вектора.</target>
        </trans-unit>
        <trans-unit id="e8196634fb250cabfeeb8a4a353d72847d5abea9" translate="yes" xml:space="preserve">
          <source>Extracts a slice containing the entire vector.</source>
          <target state="translated">Извлекает кусочек,содержащий весь вектор.</target>
        </trans-unit>
        <trans-unit id="bc4640cdf6554d00501ee6f64b836dde5c00e850" translate="yes" xml:space="preserve">
          <source>Extracts a slice corresponding to the portion of the path remaining for iteration.</source>
          <target state="translated">Извлекает кусочек,соответствующий части пути,оставшейся для итерации.</target>
        </trans-unit>
        <trans-unit id="f68aae8ae781accce97421c5e61e3829b8563586" translate="yes" xml:space="preserve">
          <source>Extracts a string slice containing the entire &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">Извлекает фрагмент строки, содержащий всю &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dd84a0b0798bd462adfd72caf33efd2748e9c71" translate="yes" xml:space="preserve">
          <source>Extracts raw handles.</source>
          <target state="translated">Извлекает сырые ручки.</target>
        </trans-unit>
        <trans-unit id="c6728342203a48ea78b904344daa2644f7bc9bca" translate="yes" xml:space="preserve">
          <source>Extracts raw sockets.</source>
          <target state="translated">Извлекает сырые розетки.</target>
        </trans-unit>
        <trans-unit id="d3570013dd1716a99b0c2c5aa380c86577276340" translate="yes" xml:space="preserve">
          <source>Extracts the extension of &lt;a href=&quot;struct.path#method.file_name&quot;&gt;&lt;code&gt;self.file_name&lt;/code&gt;&lt;/a&gt;, if possible.</source>
          <target state="translated">Если возможно, &lt;a href=&quot;struct.path#method.file_name&quot;&gt; &lt;code&gt;self.file_name&lt;/code&gt; &lt;/a&gt; расширение self.file_name .</target>
        </trans-unit>
        <trans-unit id="aba9f813990b5d9b5e64eb012431f01eb12a62e1" translate="yes" xml:space="preserve">
          <source>Extracts the owned data.</source>
          <target state="translated">Извлекает данные,находящиеся в собственности.</target>
        </trans-unit>
        <trans-unit id="4bb8a1ffc5fe23d30e47788db4b04e4bd7ef9dde" translate="yes" xml:space="preserve">
          <source>Extracts the raw file descriptor.</source>
          <target state="translated">Извлекает дескриптор файла-сырца.</target>
        </trans-unit>
        <trans-unit id="145e41f4f95335ea695a373cf463fcbaa9c860e2" translate="yes" xml:space="preserve">
          <source>Extracts the raw file descriptor. &lt;a href=&quot;../io/trait.asrawfd#tymethod.as_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Извлекает дескриптор необработанного файла. &lt;a href=&quot;../io/trait.asrawfd#tymethod.as_raw_fd&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="157d6bba148c30ad9080b9f153526fca61cf9fe7" translate="yes" xml:space="preserve">
          <source>Extracts the raw file descriptor. &lt;a href=&quot;../os/unix/io/trait.asrawfd#tymethod.as_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Извлекает дескриптор необработанного файла. &lt;a href=&quot;../os/unix/io/trait.asrawfd#tymethod.as_raw_fd&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf843522fb743becb77da1f3973dfc766fb5fb45" translate="yes" xml:space="preserve">
          <source>Extracts the raw file descriptor. &lt;a href=&quot;trait.asrawfd#tymethod.as_raw_fd&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ecbe9d7e6f6348c9a2a37d377a77cab837df15" translate="yes" xml:space="preserve">
          <source>Extracts the raw handle, without taking any ownership.</source>
          <target state="translated">Извлекает сырую ручку,не беря на себя никаких прав собственности.</target>
        </trans-unit>
        <trans-unit id="fb58f79e9d98b1a88cfc91994de4506ca5b76415" translate="yes" xml:space="preserve">
          <source>Extracts the raw pthread_t without taking ownership</source>
          <target state="translated">Извлекает необработанный pthread_t,не беря в собственность</target>
        </trans-unit>
        <trans-unit id="264c6329df802b250e08319ad78e526de637a284" translate="yes" xml:space="preserve">
          <source>Extracts the stem (non-extension) portion of &lt;a href=&quot;struct.path#method.file_name&quot;&gt;&lt;code&gt;self.file_name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.path#method.file_name&quot;&gt; &lt;code&gt;self.file_name&lt;/code&gt; &lt;/a&gt; (нерасширяющую) часть self.file_name .</target>
        </trans-unit>
        <trans-unit id="aa7c9b77e315be6b4940e226a98d1c2a71199fcd" translate="yes" xml:space="preserve">
          <source>Extracts the successful type of a &lt;code&gt;Poll&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650999695577c161ded55abd72cdc4bc351a6093" translate="yes" xml:space="preserve">
          <source>Extracts the underlying &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; slice.</source>
          <target state="translated">&lt;a href=&quot;../ffi/struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; нижележащий фрагмент OsStr .</target>
        </trans-unit>
        <trans-unit id="9bfd07353b81ed06ed256e3b838944349974b425" translate="yes" xml:space="preserve">
          <source>Extracts the underlying raw socket from this object.</source>
          <target state="translated">Извлекает сокет из этого объекта.</target>
        </trans-unit>
        <trans-unit id="5ee8247b6d05870f64aaf871d2729bdc31ac6272" translate="yes" xml:space="preserve">
          <source>Extracts the value from the &lt;code&gt;ManuallyDrop&lt;/code&gt; container.</source>
          <target state="translated">Извлекает значение из контейнера &lt;code&gt;ManuallyDrop&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62d749f502c802698c8a607ffdae632027824402" translate="yes" xml:space="preserve">
          <source>Extracts the value from the &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; container. This is a great way to ensure that the data will get dropped, because the resulting &lt;code&gt;T&lt;/code&gt; is subject to the usual drop handling.</source>
          <target state="translated">&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; значение из контейнера MaybeUninit &amp;lt;T&amp;gt; . Это отличный способ гарантировать, что данные будут отброшены, потому что результирующий &lt;code&gt;T&lt;/code&gt; подвергается обычной обработке отбрасывания.</target>
        </trans-unit>
        <trans-unit id="d77ba39cee073972bc000f3eb60f7cf221c2412f" translate="yes" xml:space="preserve">
          <source>FAMILY</source>
          <target state="translated">FAMILY</target>
        </trans-unit>
        <trans-unit id="2f20f7ce5f89c0638962299aea08b6280742c461" translate="yes" xml:space="preserve">
          <source>FIRST</source>
          <target state="translated">FIRST</target>
        </trans-unit>
        <trans-unit id="eb81392957b389f13a1eb1aff4a90a77051ccc8d" translate="yes" xml:space="preserve">
          <source>FIRST and FOLLOW, informally</source>
          <target state="translated">ПЕРВЫЙ и ПЕРВЫЙ,в неофициальном порядке.</target>
        </trans-unit>
        <trans-unit id="76aa8b011108f3fc78ef01901d036d34558de308" translate="yes" xml:space="preserve">
          <source>FIRST(&lt;code&gt;$($d:ident $e:expr );* $( $(h)* );* $( f ;)+ g&lt;/code&gt;) = { &lt;code&gt;$d:ident&lt;/code&gt;, &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;f&lt;/code&gt; }</source>
          <target state="translated">ПЕРВЫЙ ( &lt;code&gt;$($d:ident $e:expr );* $( $(h)* );* $( f ;)+ g&lt;/code&gt; ) = { &lt;code&gt;$d:ident&lt;/code&gt; , &lt;code&gt;h&lt;/code&gt; , &lt;code&gt;;&lt;/code&gt; , &lt;code&gt;f&lt;/code&gt; }</target>
        </trans-unit>
        <trans-unit id="e8000c6cb4a71cc183161d8db5dc14548c68a90f" translate="yes" xml:space="preserve">
          <source>FIRST(&lt;code&gt;$($d:ident $e:expr );* $( $(h)* );* $($( f ;)+ g)*&lt;/code&gt;) = { &lt;code&gt;$d:ident&lt;/code&gt;, &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;f&lt;/code&gt;, &amp;epsilon; }</source>
          <target state="translated">ПЕРВЫЙ ( &lt;code&gt;$($d:ident $e:expr );* $( $(h)* );* $($( f ;)+ g)*&lt;/code&gt; ) = { &lt;code&gt;$d:ident&lt;/code&gt; , &lt;code&gt;h&lt;/code&gt; , &lt;code&gt;;&lt;/code&gt; , &lt;code&gt;f&lt;/code&gt; , &amp;epsilon;}</target>
        </trans-unit>
        <trans-unit id="e2fd18272a4c09d4e029ae98fd4afb46c1c6f501" translate="yes" xml:space="preserve">
          <source>FIRST(M) = (FIRST(&lt;code&gt;tt ...&lt;/code&gt;) \ {&amp;epsilon;}) &amp;cup; SEP_SET(M) &amp;cup; ALPHA_SET(M).</source>
          <target state="translated">ПЕРВЫЙ (M) = (ПЕРВЫЙ ( &lt;code&gt;tt ...&lt;/code&gt; ) \ {&amp;epsilon;}) &amp;cup; SEP_SET (M) &amp;cup; ALPHA_SET (M).</target>
        </trans-unit>
        <trans-unit id="570891275149514a941164503f52d96a230e8f72" translate="yes" xml:space="preserve">
          <source>FIRST(M) is defined by case analysis on the sequence M and the structure of its first token-tree (if any):</source>
          <target state="translated">ПЕРВЫЙ(M)определяется анализом случая на последовательности M и структурой ее первого токен-дерева (если таковое имеется):</target>
        </trans-unit>
        <trans-unit id="2770ed7ea07727161a590105d2cced4460e6fb7a" translate="yes" xml:space="preserve">
          <source>FIRST(M): collects the tokens potentially used first when matching a fragment to M.</source>
          <target state="translated">FIRST(M):собирает маркеры,потенциально используемые первыми при совпадении фрагмента с M.</target>
        </trans-unit>
        <trans-unit id="0cc51227cb07c287afd998c5485405007129eb98" translate="yes" xml:space="preserve">
          <source>FIRST, LAST</source>
          <target state="translated">ПЕРВЫЙ,ПОСЛЕДНИЙ</target>
        </trans-unit>
        <trans-unit id="d54a79c953c49229ca1b999a3877fc833c78a625" translate="yes" xml:space="preserve">
          <source>FLOAT_EXPONENT :</source>
          <target state="translated">FLOAT_EXPONENT :</target>
        </trans-unit>
        <trans-unit id="5688d97bfcb3dd848972075906e724309a5c4fc7" translate="yes" xml:space="preserve">
          <source>FLOAT_LITERAL :</source>
          <target state="translated">FLOAT_LITERAL :</target>
        </trans-unit>
        <trans-unit id="643e5757b63e729e09982a4bc89c853df6f16736" translate="yes" xml:space="preserve">
          <source>FLOAT_SUFFIX :</source>
          <target state="translated">FLOAT_SUFFIX :</target>
        </trans-unit>
        <trans-unit id="5e03334c60577d8657d4920c7623f56e324bf8c1" translate="yes" xml:space="preserve">
          <source>FOLLOW(&lt;code&gt;$( $d:ident $e:expr )\* $(;)\* $( f |)+&lt;/code&gt;) = ANYTOKEN</source>
          <target state="translated">ПОСЛЕДУЮЩИЕ ( &lt;code&gt;$( $d:ident $e:expr )\* $(;)\* $( f |)+&lt;/code&gt; ) = ANYTOKEN</target>
        </trans-unit>
        <trans-unit id="167d62ac4e7d3790ad97aedf4ba14cb8341fe3a2" translate="yes" xml:space="preserve">
          <source>FOLLOW(&lt;code&gt;$( $d:ident $e:expr )\* $(;)\*&lt;/code&gt;) = FOLLOW(&lt;code&gt;$e:expr&lt;/code&gt;) &amp;cap; ANYTOKEN = FOLLOW(&lt;code&gt;$e:expr&lt;/code&gt;)</source>
          <target state="translated">ПОСЛЕДУЮЩИЕ ( &lt;code&gt;$( $d:ident $e:expr )\* $(;)\*&lt;/code&gt; ) = СЛЕДУЮЩИМ ( &lt;code&gt;$e:expr&lt;/code&gt; ) &amp;cap; ANYTOKEN = СЛЕДУЮЩИМ ( &lt;code&gt;$e:expr&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6626c4141f57e9b60be30be617c2cdb171317a01" translate="yes" xml:space="preserve">
          <source>FOLLOW(&lt;code&gt;$( $d:ident $e:expr )\*&lt;/code&gt;) = FOLLOW(&lt;code&gt;$e:expr&lt;/code&gt;)</source>
          <target state="translated">ПОСЛЕДУЮЩИЕ ( &lt;code&gt;$( $d:ident $e:expr )\*&lt;/code&gt; ) = ПОСЛЕДУЮЩИЙ ( &lt;code&gt;$e:expr&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f66d5e29e70cd589cff4e5ab08177a93ed0611c5" translate="yes" xml:space="preserve">
          <source>FOLLOW(M)</source>
          <target state="translated">FOLLOW(M)</target>
        </trans-unit>
        <trans-unit id="9e09d2ab82f025a7e64828cab6c43d0b06a57274" translate="yes" xml:space="preserve">
          <source>FOLLOW(M), for any other M, is defined as the intersection, as t ranges over (LAST(M) \ {&amp;epsilon;}), of FOLLOW(t).</source>
          <target state="translated">FOLLOW (M) для любого другого M определяется как пересечение FOLLOW (t), поскольку t пробегает (LAST (M) \ {&amp;epsilon;}).</target>
        </trans-unit>
        <trans-unit id="4206a86ea038ea435c1ed347f0969f9d822ce69d" translate="yes" xml:space="preserve">
          <source>FOLLOW(M): the set of tokens allowed to follow immediately after some fragment matched by M.</source>
          <target state="translated">FOLLOW(M):набор токенов,разрешенных к просмотру сразу после того,как какой-то фрагмент совпадает с M.</target>
        </trans-unit>
        <trans-unit id="e8725359cf480c43172e8daff805567af5ab28a1" translate="yes" xml:space="preserve">
          <source>FOLLOW(expr) = FOLLOW(stmt) = {&lt;code&gt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;}`.</source>
          <target state="translated">ПОСЛЕДУЮЩИЕ (выражение) = ПОСЛЕДУЮЩИЕ (STMT) = { &lt;code&gt;=&amp;gt;&lt;/code&gt; , &lt;code&gt;,&lt;/code&gt; , &lt;code&gt;;&lt;/code&gt; } `.</target>
        </trans-unit>
        <trans-unit id="f1c94b0843a99531c8c835aca785adb4c5a90dfb" translate="yes" xml:space="preserve">
          <source>FOLLOW(pat) = {&lt;code&gt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;in&lt;/code&gt;}`.</source>
          <target state="translated">FOLLOW (пат) = { &lt;code&gt;=&amp;gt;&lt;/code&gt; , &lt;code&gt;,&lt;/code&gt; , &lt;code&gt;=&lt;/code&gt; , &lt;code&gt;|&lt;/code&gt; , &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;in&lt;/code&gt; } `.</target>
        </trans-unit>
        <trans-unit id="885a9fff1d5cc3b15f49b530772bdc214e6a723a" translate="yes" xml:space="preserve">
          <source>FOLLOW(t) = ANYTOKEN for any other simple token, including block, ident, tt, item, lifetime, literal and meta simple nonterminals, and all terminals.</source>
          <target state="translated">FOLLOW(t)=ANYTOKEN для любого другого простого токена,включая блок,ident,tt,item,life,literal и meta simple nonterminals,и все клеммы.</target>
        </trans-unit>
        <trans-unit id="ba430e4179365d182ff4146ae1dcefc0d6523dab" translate="yes" xml:space="preserve">
          <source>FOLLOW(ty) = FOLLOW(path) = {&lt;code&gt;{&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;:&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;as&lt;/code&gt;, &lt;code&gt;where&lt;/code&gt;, block nonterminals}.</source>
          <target state="translated">ПОСЛЕДУЮЩИЕ (TY) = ПОСЛЕДУЮЩИЕ (путь) = { &lt;code&gt;{&lt;/code&gt; , &lt;code&gt;[&lt;/code&gt; , &lt;code&gt;,&lt;/code&gt; , &lt;code&gt;=&amp;gt;&lt;/code&gt; , &lt;code&gt;:&lt;/code&gt; , &lt;code&gt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;;&lt;/code&gt; , &lt;code&gt;|&lt;/code&gt; , &lt;code&gt;as&lt;/code&gt; , &lt;code&gt;where&lt;/code&gt; , блочные нетерминалы}.</target>
        </trans-unit>
        <trans-unit id="52673718fb30daab6c2f4857915def92bbf5b6a9" translate="yes" xml:space="preserve">
          <source>FOLLOW(vis) = {&lt;code&gt;,&lt;/code&gt;l any keyword or identifier except a non-raw &lt;code&gt;priv&lt;/code&gt;; any token that can begin a type; ident, ty, and path nonterminals}.</source>
          <target state="translated">FOLLOW (vis) = { &lt;code&gt;,&lt;/code&gt; l любое ключевое слово или идентификатор, кроме необработанного &lt;code&gt;priv&lt;/code&gt; ; любой токен, который может начинать тип; identity, ty и нетерминалы пути}.</target>
        </trans-unit>
        <trans-unit id="f90089a1ed80c5ba9419cdf50dfc612afc536d22" translate="yes" xml:space="preserve">
          <source>FRAC_1_PI</source>
          <target state="translated">FRAC_1_PI</target>
        </trans-unit>
        <trans-unit id="e0319e1e557b6305c1c1499cfe0364b5f5cc1130" translate="yes" xml:space="preserve">
          <source>FRAC_1_SQRT_2</source>
          <target state="translated">FRAC_1_SQRT_2</target>
        </trans-unit>
        <trans-unit id="a81334f47dfc908c4c0fb84f83be29c7ab8a4f51" translate="yes" xml:space="preserve">
          <source>FRAC_2_PI</source>
          <target state="translated">FRAC_2_PI</target>
        </trans-unit>
        <trans-unit id="abd901b4867c68111461f7868ae952e8b3de69c1" translate="yes" xml:space="preserve">
          <source>FRAC_2_SQRT_PI</source>
          <target state="translated">FRAC_2_SQRT_PI</target>
        </trans-unit>
        <trans-unit id="573bed53f67faec190045c494f61c1a015153c37" translate="yes" xml:space="preserve">
          <source>FRAC_PI_2</source>
          <target state="translated">FRAC_PI_2</target>
        </trans-unit>
        <trans-unit id="22e278fb1970a27028037caf41c34dee6e5f7c42" translate="yes" xml:space="preserve">
          <source>FRAC_PI_3</source>
          <target state="translated">FRAC_PI_3</target>
        </trans-unit>
        <trans-unit id="e6b17be70a78fe06e105098e0e4ee099ad3f5080" translate="yes" xml:space="preserve">
          <source>FRAC_PI_4</source>
          <target state="translated">FRAC_PI_4</target>
        </trans-unit>
        <trans-unit id="d3d8ae944016d01d1e199f96bd61ce54950f390e" translate="yes" xml:space="preserve">
          <source>FRAC_PI_6</source>
          <target state="translated">FRAC_PI_6</target>
        </trans-unit>
        <trans-unit id="0de52d1fda4d16632d5fb2ad97ae761dc9c7a143" translate="yes" xml:space="preserve">
          <source>FRAC_PI_8</source>
          <target state="translated">FRAC_PI_8</target>
        </trans-unit>
        <trans-unit id="7dc91a3674464a8b5ea13cab4dcb4989d95397d1" translate="yes" xml:space="preserve">
          <source>Failing that, the returned string slice may reference invalid memory or violate the invariants communicated by the &lt;code&gt;str&lt;/code&gt; type.</source>
          <target state="translated">В противном случае возвращаемый фрагмент строки может ссылаться на недопустимую память или нарушать инварианты, передаваемые типом &lt;code&gt;str&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59f40a06eb57b6054d241382e155735a3d65877b" translate="yes" xml:space="preserve">
          <source>Failing to parse:</source>
          <target state="translated">Не могу разобрать:</target>
        </trans-unit>
        <trans-unit id="7cbcd570eef4be686a49dc2bc2d0e5442816cd50" translate="yes" xml:space="preserve">
          <source>Failure to call &lt;a href=&quot;#method.from_raw&quot;&gt;&lt;code&gt;from_raw&lt;/code&gt;&lt;/a&gt; will lead to a memory leak.</source>
          <target state="translated">Отказ вызвать &lt;a href=&quot;#method.from_raw&quot;&gt; &lt;code&gt;from_raw&lt;/code&gt; &lt;/a&gt; приведет к утечке памяти.</target>
        </trans-unit>
        <trans-unit id="63226f57689a39a588b9556e8ae268e590c871c9" translate="yes" xml:space="preserve">
          <source>Failure to call &lt;a href=&quot;struct.cstring#method.from_raw&quot;&gt;&lt;code&gt;CString::from_raw&lt;/code&gt;&lt;/a&gt; will lead to a memory leak.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef83abf2a1fc75890fc470998be15db9d3f0072b" translate="yes" xml:space="preserve">
          <source>Farsi</source>
          <target state="translated">Farsi</target>
        </trans-unit>
        <trans-unit id="64af9d58fb2be75f9f4f919ce107fc70b472fbec" translate="yes" xml:space="preserve">
          <source>Fat pointers are pointers referencing Dynamically Sized Types (also called DST). DST don't have a statically known size, therefore they can only exist behind some kind of pointers that contain additional information. Slices and trait objects are DSTs. In the case of slices, the additional information the fat pointer holds is their size.</source>
          <target state="translated">Толстые указатели-это указатели,ссылающиеся на Типы с динамическим размером (также называемые DST).DST не имеют статически известного размера,поэтому они могут существовать только за некоторыми типами указателей,которые содержат дополнительную информацию.Фрагменты и объекты чертежей являются DST.В случае фрагментов,дополнительной информацией,которую держит жирный указатель,является их размер.</target>
        </trans-unit>
        <trans-unit id="28b58decbe9e8a9fb1763209ba7f2c5ddd1c193d" translate="yes" xml:space="preserve">
          <source>Fat pointers are pointers referencing Dynamically Sized Types (also called DSTs). DSTs don't have a statically known size, therefore they can only exist behind some kind of pointer that contains additional information. For example, slices and trait objects are DSTs. In the case of slices, the additional information the fat pointer holds is their size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d55b8c7dec496f1ef87e07f896e26b69229e1b" translate="yes" xml:space="preserve">
          <source>FatArrow</source>
          <target state="translated">FatArrow</target>
        </trans-unit>
        <trans-unit id="7e4287b17a40231f59d61622530e62a29a3443af" translate="yes" xml:space="preserve">
          <source>Fatal logic errors in Rust cause &lt;em&gt;thread panic&lt;/em&gt;, during which a thread will unwind the stack, running destructors and freeing owned resources. While not meant as a 'try/catch' mechanism, panics in Rust can nonetheless be caught (unless compiling with &lt;code&gt;panic=abort&lt;/code&gt;) with &lt;a href=&quot;../panic/fn.catch_unwind&quot;&gt;&lt;code&gt;catch_unwind&lt;/code&gt;&lt;/a&gt; and recovered from, or alternatively be resumed with &lt;a href=&quot;../panic/fn.resume_unwind&quot;&gt;&lt;code&gt;resume_unwind&lt;/code&gt;&lt;/a&gt;. If the panic is not caught the thread will exit, but the panic may optionally be detected from a different thread with &lt;a href=&quot;struct.joinhandle#method.join&quot;&gt;&lt;code&gt;join&lt;/code&gt;&lt;/a&gt;. If the main thread panics without the panic being caught, the application will exit with a non-zero exit code.</source>
          <target state="translated">Фатальные логические ошибки в Rust вызывают &lt;em&gt;панику потока&lt;/em&gt; , во время которой поток раскручивает стек, запускает деструкторы и освобождает принадлежащие ему ресурсы. Хотя это и не подразумевается как механизм &amp;laquo;попытаться / поймать&amp;raquo;, паники в Rust, тем не менее, могут быть пойманы (кроме компиляции с помощью &lt;code&gt;panic=abort&lt;/code&gt; ) с помощью &lt;a href=&quot;../panic/fn.catch_unwind&quot;&gt; &lt;code&gt;catch_unwind&lt;/code&gt; &lt;/a&gt; и восстановлены, или, альтернативно, возобновлены с помощью &lt;a href=&quot;../panic/fn.resume_unwind&quot;&gt; &lt;code&gt;resume_unwind&lt;/code&gt; &lt;/a&gt; . Если паника не обнаружена, поток выйдет, но при необходимости паника может быть обнаружена из другого потока с &lt;a href=&quot;struct.joinhandle#method.join&quot;&gt; &lt;code&gt;join&lt;/code&gt; &lt;/a&gt; . Если основной поток паникует, но паника не обнаружена, приложение завершится с ненулевым кодом выхода.</target>
        </trans-unit>
        <trans-unit id="ddbe3169df2a0f74f163681bf351df5db1d13339" translate="yes" xml:space="preserve">
          <source>Fearless Concurrency</source>
          <target state="translated">Бесстрашная валюта</target>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="0b807bdc730a4b27845b24638a849382424bab42" translate="yes" xml:space="preserve">
          <source>Feature attributes are only allowed on the nightly release channel. Stable or beta compilers will not comply.</source>
          <target state="translated">Атрибуты функций разрешены только на канале ночного релиза.Стабильные или бета компиляторы не будут соответствовать.</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="e2ff700e32db2c23935e7a4e52cc763c7d881920" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given &lt;a href=&quot;../../../hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../../hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9283f20f4304ed3eb3ce57ab07963c3a1b777bf" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given &lt;a href=&quot;../../hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e7a00a78ea9d3b1a1df39ebe9775ab03b8b174" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given &lt;a href=&quot;../hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3086754a1899641d3271946a0c848c3c20b60f8" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given &lt;a href=&quot;hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c777023546e54e748b36703160b53d183118a8bb" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given &lt;a href=&quot;trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Кормит кусочек этого типа в данный &lt;a href=&quot;trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ce5e264a52b8a95f0d288d4a511af0782f37de5d" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given [&lt;code&gt;Hasher&lt;/code&gt;]. &lt;a href=&quot;../../hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Кормит кусочек этого типа в данный [ &lt;code&gt;Hasher&lt;/code&gt; ]. &lt;a href=&quot;../../hash/trait.hash#method.hash_slice&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5b2875a97a1836943f337622e3bfe4abf69acb3" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given [&lt;code&gt;Hasher&lt;/code&gt;]. &lt;a href=&quot;../hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Кормит кусочек этого типа в данный [ &lt;code&gt;Hasher&lt;/code&gt; ]. &lt;a href=&quot;../hash/trait.hash#method.hash_slice&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a51782694579b108f11b3021d7eed3af1932ab8" translate="yes" xml:space="preserve">
          <source>Feeds a slice of this type into the given [&lt;code&gt;Hasher&lt;/code&gt;]. &lt;a href=&quot;hash/trait.hash#method.hash_slice&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Кормит кусочек этого типа в данный [ &lt;code&gt;Hasher&lt;/code&gt; ]. &lt;a href=&quot;hash/trait.hash#method.hash_slice&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="166896c1362241dd63605c470b9b90b18452344b" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given &lt;a href=&quot;../../../hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../../hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e4eeab3a7b22e0bacc65049fc3dbdd0361b21f" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given &lt;a href=&quot;../../hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9336eaa28085928d881d753dbb23a679ec860ef" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given &lt;a href=&quot;../hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553b072888e14f6fb589f877d5453630501eeea6" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given &lt;a href=&quot;hash/trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712dd6a1f0b25bc76164e57bc7b7ed06b793d8d1" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given &lt;a href=&quot;trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Подает это значение в данный &lt;a href=&quot;trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="528dc4ba180b5e0fdf3a460356136d0d4538452c" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given [&lt;code&gt;Hasher&lt;/code&gt;]. &lt;a href=&quot;../../hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Подает это значение в данный [ &lt;code&gt;Hasher&lt;/code&gt; ]. &lt;a href=&quot;../../hash/trait.hash#tymethod.hash&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a7253be47a5e33a8974cf031ca870cdd79ea7e2" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given [&lt;code&gt;Hasher&lt;/code&gt;]. &lt;a href=&quot;../hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Подает это значение в данный [ &lt;code&gt;Hasher&lt;/code&gt; ]. &lt;a href=&quot;../hash/trait.hash#tymethod.hash&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8b797a2e1e90add5c3065eedd796f7422be504b" translate="yes" xml:space="preserve">
          <source>Feeds this value into the given [&lt;code&gt;Hasher&lt;/code&gt;]. &lt;a href=&quot;hash/trait.hash#tymethod.hash&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Подает это значение в данный [ &lt;code&gt;Hasher&lt;/code&gt; ]. &lt;a href=&quot;hash/trait.hash#tymethod.hash&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20c6342d5558b78fbfcaebca035cf96cfc09fd61" translate="yes" xml:space="preserve">
          <source>Ferris</source>
          <target state="translated">Ferris</target>
        </trans-unit>
        <trans-unit id="4e97b12e606426cf2a177817b263cd257d8395c3" translate="yes" xml:space="preserve">
          <source>Fetch a &lt;code&gt;Utf8Error&lt;/code&gt; to get more details about the conversion failure.</source>
          <target state="translated">Извлекает &lt;code&gt;Utf8Error&lt;/code&gt; , чтобы получить более подробную информацию о случае ошибки преобразования.</target>
        </trans-unit>
        <trans-unit id="aed2f625af6f4e5c53c8ff520b59a87ae9f84782" translate="yes" xml:space="preserve">
          <source>Fetches the environment variable &lt;code&gt;key&lt;/code&gt; from the current process, returning &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if the variable isn't set.</source>
          <target state="translated">Получает &lt;code&gt;key&lt;/code&gt; переменной среды из текущего процесса, возвращая &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; ,&lt;/a&gt; если переменная не установлена.</target>
        </trans-unit>
        <trans-unit id="b340540df67cdd46ed6d6149644b82642c536a79" translate="yes" xml:space="preserve">
          <source>Fetches the environment variable &lt;code&gt;key&lt;/code&gt; from the current process.</source>
          <target state="translated">Получает &lt;code&gt;key&lt;/code&gt; переменной среды из текущего процесса.</target>
        </trans-unit>
        <trans-unit id="6f772ad7b037ef600e878b61e303f6b7de4e1cd5" translate="yes" xml:space="preserve">
          <source>Fetches the value, and applies a function to it that returns an optional new value. Returns a &lt;code&gt;Result&lt;/code&gt; of &lt;code&gt;Ok(previous_value)&lt;/code&gt; if the function returned &lt;code&gt;Some(_)&lt;/code&gt;, else &lt;code&gt;Err(previous_value)&lt;/code&gt;.</source>
          <target state="translated">Выбирает значение и применяет к нему функцию, которая возвращает необязательное новое значение. Возвращает &lt;code&gt;Result&lt;/code&gt; в &lt;code&gt;Ok(previous_value)&lt;/code&gt; , если функция возвращенных &lt;code&gt;Some(_)&lt;/code&gt; , еще &lt;code&gt;Err(previous_value)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="026307a2e2b198a7b11b4e487771b106a1c55079" translate="yes" xml:space="preserve">
          <source>Field access expressions</source>
          <target state="translated">Выражения доступа к полям</target>
        </trans-unit>
        <trans-unit id="c65fecfa2a096796cbc5310420806ac4c241ef80" translate="yes" xml:space="preserve">
          <source>Field accesses on structs and tuples</source>
          <target state="translated">Доступы к полям на структурах и кортежах</target>
        </trans-unit>
        <trans-unit id="caa8c98ec1d007ced9fbda047a0a1b901d77e628" translate="yes" xml:space="preserve">
          <source>Field expressions</source>
          <target state="translated">Полевые выражения</target>
        </trans-unit>
        <trans-unit id="deb6e7b9bef56dbdb9c8601b67588b2bb8dc955b" translate="yes" xml:space="preserve">
          <source>Field struct expression</source>
          <target state="translated">Выражение структуры поля</target>
        </trans-unit>
        <trans-unit id="e8b685271238adf161cffed3c91f54d97023262b" translate="yes" xml:space="preserve">
          <source>Fields</source>
          <target state="translated">Fields</target>
        </trans-unit>
        <trans-unit id="9cce6e78930a15ffa1e05f69626dac54cef653ea" translate="yes" xml:space="preserve">
          <source>Fields and &lt;a href=&quot;items/enumerations&quot;&gt;variants&lt;/a&gt;</source>
          <target state="translated">Поля и &lt;a href=&quot;items/enumerations&quot;&gt;варианты&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7956ab54859c452d96d688d0d038ef94e8d937db" translate="yes" xml:space="preserve">
          <source>Fields of &lt;b&gt;AllocError&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ca41b484fb0424fdf0e477fab4e7d183fa2eac" translate="yes" xml:space="preserve">
          <source>Fields without structural pinning may have a projection method that turns &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&amp;amp;mut Struct&amp;gt;&lt;/code&gt; into &lt;code&gt;&amp;amp;mut Field&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3334577210e32a2009e2aeab4e368b539dfe28a0" translate="yes" xml:space="preserve">
          <source>Fields without structural pinning may have a projection method that turns &lt;code&gt;Pin&amp;lt;&amp;amp;mut Struct&amp;gt;&lt;/code&gt; into &lt;code&gt;&amp;amp;mut Field&lt;/code&gt;:</source>
          <target state="translated">Поля без структурного закрепления могут иметь метод проецирования, который превращает &lt;code&gt;Pin&amp;lt;&amp;amp;mut Struct&amp;gt;&lt;/code&gt; в &lt;code&gt;&amp;amp;mut Field&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f9b5c22ad800082c7a5957c226059bbfcb18e083" translate="yes" xml:space="preserve">
          <source>Figure 14-1: HTML documentation for the &lt;code&gt;add_one&lt;/code&gt; function</source>
          <target state="translated">Рисунок 14-1: HTML-документация для функции &lt;code&gt;add_one&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47215be469a189ca970f4bde70948486d8efef2a" translate="yes" xml:space="preserve">
          <source>Figure 14-2: Rendered documentation for &lt;code&gt;my_crate&lt;/code&gt;, including the comment describing the crate as a whole</source>
          <target state="translated">Рисунок 14-2: Визуализированная документация для &lt;code&gt;my_crate&lt;/code&gt; , включая комментарий, описывающий ящик в целом</target>
        </trans-unit>
        <trans-unit id="9d23324502a10649bdfd0211dc814e9d6f80f334" translate="yes" xml:space="preserve">
          <source>Figure 14-3 shows what the front page of the documentation for this crate generated by &lt;code&gt;cargo doc&lt;/code&gt; would look like:</source>
          <target state="translated">На рис. 14-3 показано, как будет выглядеть первая страница документации для этого ящика, созданного с помощью &lt;code&gt;cargo doc&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6cbdc555f4e8275dbf75958fe807fbcf1bd028c3" translate="yes" xml:space="preserve">
          <source>Figure 14-3: Front page of the documentation for &lt;code&gt;art&lt;/code&gt; that lists the &lt;code&gt;kinds&lt;/code&gt; and &lt;code&gt;utils&lt;/code&gt; modules</source>
          <target state="translated">Рисунок 14-3: Титульный лист документации для &lt;code&gt;art&lt;/code&gt; , которые перечислены &lt;code&gt;kinds&lt;/code&gt; и &lt;code&gt;utils&lt;/code&gt; модули</target>
        </trans-unit>
        <trans-unit id="c9d76b1e9908cad97786dd3a47ce45581971b401" translate="yes" xml:space="preserve">
          <source>Figure 14-4: The front page of the documentation for &lt;code&gt;art&lt;/code&gt; that lists the re-exports</source>
          <target state="translated">Рисунок 14-4: Первая страница документации по &lt;code&gt;art&lt;/code&gt; которой перечислены реэкспортные операции.</target>
        </trans-unit>
        <trans-unit id="6a60f2bc2c0b4fba0e9c2110209113455ada6763" translate="yes" xml:space="preserve">
          <source>Figure 15-1: An infinite &lt;code&gt;List&lt;/code&gt; consisting of infinite &lt;code&gt;Cons&lt;/code&gt; variants</source>
          <target state="translated">Рисунок 15-1: Бесконечный &lt;code&gt;List&lt;/code&gt; состоящий из бесконечных вариантов &lt;code&gt;Cons&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ceebef5638620d07e5bc17ec9f5c0097945b32b" translate="yes" xml:space="preserve">
          <source>Figure 15-2: A &lt;code&gt;List&lt;/code&gt; that is not infinitely sized because &lt;code&gt;Cons&lt;/code&gt; holds a &lt;code&gt;Box&lt;/code&gt;</source>
          <target state="translated">Рисунок 15-2: &lt;code&gt;List&lt;/code&gt; , размер которого не бесконечен, потому что &lt;code&gt;Cons&lt;/code&gt; содержит &lt;code&gt;Box&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3979138bda43e17af7993681a6c9de25829d6b5c" translate="yes" xml:space="preserve">
          <source>Figure 15-3: Two lists, &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;, sharing ownership of a third list, &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">Рисунок 15-3: Два списка, &lt;code&gt;b&lt;/code&gt; и &lt;code&gt;c&lt;/code&gt; , совместно владеющие третьим списком, &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9749a310dbf65124d6b52c446cbeadf16aca2868" translate="yes" xml:space="preserve">
          <source>Figure 15-4: A reference cycle of lists &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; pointing to each other</source>
          <target state="translated">Рисунок 15-4: Контрольный цикл списков &lt;code&gt;a&lt;/code&gt; и &lt;code&gt;b&lt;/code&gt; , указывающих друг на друга</target>
        </trans-unit>
        <trans-unit id="d911acbcc012bd6ae8a8d34419e851de3d989743" translate="yes" xml:space="preserve">
          <source>Figure 20-1: Our final shared project</source>
          <target state="translated">Рисунок 20-1:Наш окончательный совместный проект</target>
        </trans-unit>
        <trans-unit id="94348a85e2baa754a6c88b9f15b8f20ecff6ca6a" translate="yes" xml:space="preserve">
          <source>Figure 4-1: Representation in memory of a &lt;code&gt;String&lt;/code&gt; holding the value &lt;code&gt;&quot;hello&quot;&lt;/code&gt; bound to &lt;code&gt;s1&lt;/code&gt;</source>
          <target state="translated">Рисунок 4-1: Представление в памяти &lt;code&gt;String&lt;/code&gt; содержащей значение &lt;code&gt;&quot;hello&quot;&lt;/code&gt; , привязанное к &lt;code&gt;s1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d60241f03ce61fbfde9bb38dff136b2ebc9f438" translate="yes" xml:space="preserve">
          <source>Figure 4-2: Representation in memory of the variable &lt;code&gt;s2&lt;/code&gt; that has a copy of the pointer, length, and capacity of &lt;code&gt;s1&lt;/code&gt;</source>
          <target state="translated">Рисунок 4-2: Представление в памяти переменной &lt;code&gt;s2&lt;/code&gt; , которая имеет копию указателя, длины и емкости &lt;code&gt;s1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b4c9fe8ce2ac2fe08f18ef7384d2f5e33c8f6dd" translate="yes" xml:space="preserve">
          <source>Figure 4-3: Another possibility for what &lt;code&gt;s2 = s1&lt;/code&gt; might do if Rust copied the heap data as well</source>
          <target state="translated">Рисунок 4-3: Другая возможность того, что могло бы сделать &lt;code&gt;s2 = s1&lt;/code&gt; , если бы Rust также скопировал данные кучи</target>
        </trans-unit>
        <trans-unit id="3ee3bdd573f51164612a3321eeda173f6e011080" translate="yes" xml:space="preserve">
          <source>Figure 4-4: Representation in memory after &lt;code&gt;s1&lt;/code&gt; has been invalidated</source>
          <target state="translated">Рисунок 4-4: Представление в памяти после того, как &lt;code&gt;s1&lt;/code&gt; был признан недействительным</target>
        </trans-unit>
        <trans-unit id="40e2720f5df50422ab02b09a5a1f6311c2356514" translate="yes" xml:space="preserve">
          <source>Figure 4-5: A diagram of &lt;code&gt;&amp;amp;String s&lt;/code&gt; pointing at &lt;code&gt;String s1&lt;/code&gt;</source>
          <target state="translated">Рисунок 4-5: Схема &lt;code&gt;&amp;amp;String s&lt;/code&gt; указывающая на &lt;code&gt;String s1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="362f8cc9378a25ae691e8ceef6aac1b07a01360f" translate="yes" xml:space="preserve">
          <source>Figure 4-6 shows this in a diagram.</source>
          <target state="translated">На рисунках 4-6 это показано на диаграмме.</target>
        </trans-unit>
        <trans-unit id="64753bfc974befeeb207db9ae8164a90b743dadb" translate="yes" xml:space="preserve">
          <source>Figure 4-6: String slice referring to part of a &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">Рисунок 4-6: Срез строки, относящийся к части &lt;code&gt;String&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="71586db00903f9292b2b685a2888975f06820d67" translate="yes" xml:space="preserve">
          <source>File 'main.rs':</source>
          <target state="translated">Файл &quot;main.rs&quot;:</target>
        </trans-unit>
        <trans-unit id="f189168706980cccdcec9897ca166a464ad0c3c5" translate="yes" xml:space="preserve">
          <source>File 'monkeys.in':</source>
          <target state="translated">Записывай &quot;обезьян&quot;:</target>
        </trans-unit>
        <trans-unit id="64ae82ace4169c576e88c6922bb42eb840728222" translate="yes" xml:space="preserve">
          <source>File 'spanish.in':</source>
          <target state="translated">Пиши &quot;по-испански&quot;:</target>
        </trans-unit>
        <trans-unit id="5f69c18fff67e9bb3de98093917fcea8886d0491" translate="yes" xml:space="preserve">
          <source>File Contents</source>
          <target state="translated">Содержание файла</target>
        </trans-unit>
        <trans-unit id="3a8ce65b275014da9366a333c528cc11a27603ad" translate="yes" xml:space="preserve">
          <source>File::as_raw_fd</source>
          <target state="translated">File::as_raw_fd</target>
        </trans-unit>
        <trans-unit id="3d449c38270541419bb0081c528587aba3397218" translate="yes" xml:space="preserve">
          <source>File::as_raw_handle</source>
          <target state="translated">File::as_raw_handle</target>
        </trans-unit>
        <trans-unit id="2056fccad8d9b2001409dacfc6cf02024cffb307" translate="yes" xml:space="preserve">
          <source>File::borrow</source>
          <target state="translated">File::borrow</target>
        </trans-unit>
        <trans-unit id="c5830e06e8a92a0fd9c3e097ccddd2b690bdc088" translate="yes" xml:space="preserve">
          <source>File::borrow_mut</source>
          <target state="translated">File::borrow_mut</target>
        </trans-unit>
        <trans-unit id="d65814ca1f8b90061da3e18a4bc24397f086a9fe" translate="yes" xml:space="preserve">
          <source>File::by_ref</source>
          <target state="translated">File::by_ref</target>
        </trans-unit>
        <trans-unit id="773cd8a79ad9c419222201aaf0bf0218f2c7accf" translate="yes" xml:space="preserve">
          <source>File::bytes</source>
          <target state="translated">File::bytes</target>
        </trans-unit>
        <trans-unit id="a0f3595139353ee753bcd2ff03a5fc64e77911ae" translate="yes" xml:space="preserve">
          <source>File::chain</source>
          <target state="translated">File::chain</target>
        </trans-unit>
        <trans-unit id="95e8cd86390d00f3896c2230ccdd160c9bc23025" translate="yes" xml:space="preserve">
          <source>File::create</source>
          <target state="translated">File::create</target>
        </trans-unit>
        <trans-unit id="54ca8ca0fc241592a42be655c6d268820df9355f" translate="yes" xml:space="preserve">
          <source>File::flush</source>
          <target state="translated">File::flush</target>
        </trans-unit>
        <trans-unit id="e01a168a8912a7cc5799bfb1c398439aec9f4ed1" translate="yes" xml:space="preserve">
          <source>File::fmt</source>
          <target state="translated">File::fmt</target>
        </trans-unit>
        <trans-unit id="462aa700e0b01fb5561cb0c83a065ba37dc301cd" translate="yes" xml:space="preserve">
          <source>File::from</source>
          <target state="translated">File::from</target>
        </trans-unit>
        <trans-unit id="70291bc5b9877c92db3ab4265d45317b2b617c36" translate="yes" xml:space="preserve">
          <source>File::from_raw_fd</source>
          <target state="translated">File::from_raw_fd</target>
        </trans-unit>
        <trans-unit id="0fbc45812981a1ce2ce84aee914f58e3a41e23c0" translate="yes" xml:space="preserve">
          <source>File::from_raw_handle</source>
          <target state="translated">File::from_raw_handle</target>
        </trans-unit>
        <trans-unit id="1e1628b4f36ad5c24d1f52ec7885156a03c69cbc" translate="yes" xml:space="preserve">
          <source>File::initializer</source>
          <target state="translated">File::initializer</target>
        </trans-unit>
        <trans-unit id="4980cc2e25a5cf505b6373948c23c2147c3a35ab" translate="yes" xml:space="preserve">
          <source>File::into</source>
          <target state="translated">File::into</target>
        </trans-unit>
        <trans-unit id="c078e8bb3863ea50046b3ae960bde55336bec78f" translate="yes" xml:space="preserve">
          <source>File::into_raw_fd</source>
          <target state="translated">File::into_raw_fd</target>
        </trans-unit>
        <trans-unit id="6528c63ba1553592afcf8e7bc775ae0f3c8bed47" translate="yes" xml:space="preserve">
          <source>File::into_raw_handle</source>
          <target state="translated">File::into_raw_handle</target>
        </trans-unit>
        <trans-unit id="68e2be694ec5d58cce4c91be7471cd46c71bebcf" translate="yes" xml:space="preserve">
          <source>File::metadata</source>
          <target state="translated">File::metadata</target>
        </trans-unit>
        <trans-unit id="97bcf3457432f7eaa769c60bfb1da6e5b2780916" translate="yes" xml:space="preserve">
          <source>File::open</source>
          <target state="translated">File::open</target>
        </trans-unit>
        <trans-unit id="f871edcbffd3f22d5da646d84c3dcfcd912271d1" translate="yes" xml:space="preserve">
          <source>File::read</source>
          <target state="translated">File::read</target>
        </trans-unit>
        <trans-unit id="a645722c97df48da34622d9796c05e2576e3949e" translate="yes" xml:space="preserve">
          <source>File::read_at</source>
          <target state="translated">File::read_at</target>
        </trans-unit>
        <trans-unit id="ba13bba4025a75bb86d9ef57bbcadf6dcfeba9ee" translate="yes" xml:space="preserve">
          <source>File::read_exact</source>
          <target state="translated">File::read_exact</target>
        </trans-unit>
        <trans-unit id="f847ce48410e6c56a723a0a7624fc3229f0b997d" translate="yes" xml:space="preserve">
          <source>File::read_exact_at</source>
          <target state="translated">File::read_exact_at</target>
        </trans-unit>
        <trans-unit id="d22500382a9c0cd111fa13ebe7d3d2e5c87ce67d" translate="yes" xml:space="preserve">
          <source>File::read_to_end</source>
          <target state="translated">File::read_to_end</target>
        </trans-unit>
        <trans-unit id="eb02a5b72eeb117477f8d7c6607e258e1005512b" translate="yes" xml:space="preserve">
          <source>File::read_to_string</source>
          <target state="translated">File::read_to_string</target>
        </trans-unit>
        <trans-unit id="cbfa0a4bdbeaaeef6f070f890e816cbe54330552" translate="yes" xml:space="preserve">
          <source>File::read_vectored</source>
          <target state="translated">File::read_vectored</target>
        </trans-unit>
        <trans-unit id="f8f3a35a864cf614552d87389a77af39b10a4fdc" translate="yes" xml:space="preserve">
          <source>File::seek</source>
          <target state="translated">File::seek</target>
        </trans-unit>
        <trans-unit id="04234ec7d9e227d6b902291ecda0b26743335f10" translate="yes" xml:space="preserve">
          <source>File::seek_read</source>
          <target state="translated">File::seek_read</target>
        </trans-unit>
        <trans-unit id="9b3226909081e77cc3da58c19157a3a7f35c0e54" translate="yes" xml:space="preserve">
          <source>File::seek_write</source>
          <target state="translated">File::seek_write</target>
        </trans-unit>
        <trans-unit id="176345e9fefce2a35bb8ca66cb1a1bc24e2975ef" translate="yes" xml:space="preserve">
          <source>File::set_len</source>
          <target state="translated">File::set_len</target>
        </trans-unit>
        <trans-unit id="9c04a0373a283e053cc19271b282da528b3c5f40" translate="yes" xml:space="preserve">
          <source>File::set_permissions</source>
          <target state="translated">File::set_permissions</target>
        </trans-unit>
        <trans-unit id="33cb7aebce418bea76661c32675dbfc4ba91da35" translate="yes" xml:space="preserve">
          <source>File::stream_len</source>
          <target state="translated">File::stream_len</target>
        </trans-unit>
        <trans-unit id="4e28fcaafba833a3d432094b16feb7b889799db7" translate="yes" xml:space="preserve">
          <source>File::stream_position</source>
          <target state="translated">File::stream_position</target>
        </trans-unit>
        <trans-unit id="64b1d6dad78834024e7e0e9efe098ba606d995db" translate="yes" xml:space="preserve">
          <source>File::sync_all</source>
          <target state="translated">File::sync_all</target>
        </trans-unit>
        <trans-unit id="e709350c4bb12a169bd7cc6ec460be2e12353b3a" translate="yes" xml:space="preserve">
          <source>File::sync_data</source>
          <target state="translated">File::sync_data</target>
        </trans-unit>
        <trans-unit id="a8fb7874744d19f9cbaacb8302104416299da469" translate="yes" xml:space="preserve">
          <source>File::take</source>
          <target state="translated">File::take</target>
        </trans-unit>
        <trans-unit id="834539604b9138ec19d39db9187ec1234190ba52" translate="yes" xml:space="preserve">
          <source>File::try_clone</source>
          <target state="translated">File::try_clone</target>
        </trans-unit>
        <trans-unit id="51ee322f66b2862e4ae82ee32794015cf227438c" translate="yes" xml:space="preserve">
          <source>File::try_from</source>
          <target state="translated">File::try_from</target>
        </trans-unit>
        <trans-unit id="5a6f3e363dc60b9c57befeee82045b9cfe478aeb" translate="yes" xml:space="preserve">
          <source>File::try_into</source>
          <target state="translated">File::try_into</target>
        </trans-unit>
        <trans-unit id="8736e53b16ffd23f947d8208f6dbbb524a31eea9" translate="yes" xml:space="preserve">
          <source>File::type_id</source>
          <target state="translated">File::type_id</target>
        </trans-unit>
        <trans-unit id="542b4a5df3e669a9980dda08577e7f13b255e2f1" translate="yes" xml:space="preserve">
          <source>File::write</source>
          <target state="translated">File::write</target>
        </trans-unit>
        <trans-unit id="9142df1de524fe95cbc714c918278848b708bd2d" translate="yes" xml:space="preserve">
          <source>File::write_all</source>
          <target state="translated">File::write_all</target>
        </trans-unit>
        <trans-unit id="44e2a43a786d888ec9d0f0e51986a7811f73a422" translate="yes" xml:space="preserve">
          <source>File::write_all_at</source>
          <target state="translated">File::write_all_at</target>
        </trans-unit>
        <trans-unit id="54384dddf08125669e0c4d1cdbd9b1b83db9d608" translate="yes" xml:space="preserve">
          <source>File::write_at</source>
          <target state="translated">File::write_at</target>
        </trans-unit>
        <trans-unit id="9fa986c60627d48b6e3d5772525cc8a9825efd1a" translate="yes" xml:space="preserve">
          <source>File::write_fmt</source>
          <target state="translated">File::write_fmt</target>
        </trans-unit>
        <trans-unit id="7ce04c077eea4442a92bc0af3afbd94829db0fb5" translate="yes" xml:space="preserve">
          <source>File::write_vectored</source>
          <target state="translated">File::write_vectored</target>
        </trans-unit>
        <trans-unit id="78b5a47a53fa4fa99be68dceb6634fc119d54a3f" translate="yes" xml:space="preserve">
          <source>FileExt</source>
          <target state="translated">FileExt</target>
        </trans-unit>
        <trans-unit id="1baa34e6560f1522cca6ce9d9df461092e8ec59b" translate="yes" xml:space="preserve">
          <source>FileType</source>
          <target state="translated">FileType</target>
        </trans-unit>
        <trans-unit id="0a5f31a5f7fa3700db102d4fc6aa5b19c0ebb2d7" translate="yes" xml:space="preserve">
          <source>FileType::borrow</source>
          <target state="translated">FileType::borrow</target>
        </trans-unit>
        <trans-unit id="2562b8c22c9447e2362ce675adc3f4ddeac34448" translate="yes" xml:space="preserve">
          <source>FileType::borrow_mut</source>
          <target state="translated">FileType::borrow_mut</target>
        </trans-unit>
        <trans-unit id="fe2bbc6cec2535dadcf4d56c61f7d1e8ecc65cf5" translate="yes" xml:space="preserve">
          <source>FileType::clone</source>
          <target state="translated">FileType::clone</target>
        </trans-unit>
        <trans-unit id="89c6ed45341ac2e4f56d80de606e3a25cc033a21" translate="yes" xml:space="preserve">
          <source>FileType::clone_from</source>
          <target state="translated">FileType::clone_from</target>
        </trans-unit>
        <trans-unit id="37889d4ad9d83c99f2e5f40ede3353cf703d878b" translate="yes" xml:space="preserve">
          <source>FileType::clone_into</source>
          <target state="translated">FileType::clone_into</target>
        </trans-unit>
        <trans-unit id="6db90bf5c72f0b1ae6fffb6b3290d61092ba6e4c" translate="yes" xml:space="preserve">
          <source>FileType::eq</source>
          <target state="translated">FileType::eq</target>
        </trans-unit>
        <trans-unit id="88e6100ee83e3e063affc8bd1d38b8abbe750f90" translate="yes" xml:space="preserve">
          <source>FileType::fmt</source>
          <target state="translated">FileType::fmt</target>
        </trans-unit>
        <trans-unit id="4c24140c0d7c4231c1c1f84a69f75acd5abee26c" translate="yes" xml:space="preserve">
          <source>FileType::from</source>
          <target state="translated">FileType::from</target>
        </trans-unit>
        <trans-unit id="d27aebc50548197adbf3d79440d218e68ac191db" translate="yes" xml:space="preserve">
          <source>FileType::hash</source>
          <target state="translated">FileType::hash</target>
        </trans-unit>
        <trans-unit id="b3e96c343c991ffee71bdd440a5ee51a29ba889b" translate="yes" xml:space="preserve">
          <source>FileType::hash_slice</source>
          <target state="translated">FileType::hash_slice</target>
        </trans-unit>
        <trans-unit id="b1da059fdf3ae975b1ff2ecd9a45dc8ee7d9f6f0" translate="yes" xml:space="preserve">
          <source>FileType::into</source>
          <target state="translated">FileType::into</target>
        </trans-unit>
        <trans-unit id="a480026f947841bd5dfd2bee65d966da23be2c07" translate="yes" xml:space="preserve">
          <source>FileType::is_block_device</source>
          <target state="translated">FileType::is_block_device</target>
        </trans-unit>
        <trans-unit id="929ec805338d0df6f5cce8afbf2a4a027cd1760c" translate="yes" xml:space="preserve">
          <source>FileType::is_char_device</source>
          <target state="translated">FileType::is_char_device</target>
        </trans-unit>
        <trans-unit id="da96f9ff8310fbe6949063c55fb9b0080bb1235b" translate="yes" xml:space="preserve">
          <source>FileType::is_dir</source>
          <target state="translated">FileType::is_dir</target>
        </trans-unit>
        <trans-unit id="a6d81d0cd16f71094838b204a36990745cb29023" translate="yes" xml:space="preserve">
          <source>FileType::is_fifo</source>
          <target state="translated">FileType::is_fifo</target>
        </trans-unit>
        <trans-unit id="2af1f0a4636078633359db0f3181940d1c2a204b" translate="yes" xml:space="preserve">
          <source>FileType::is_file</source>
          <target state="translated">FileType::is_file</target>
        </trans-unit>
        <trans-unit id="3c1333f1991bced2e5ce2d74904700f65938202d" translate="yes" xml:space="preserve">
          <source>FileType::is_socket</source>
          <target state="translated">FileType::is_socket</target>
        </trans-unit>
        <trans-unit id="60df6415a8b30206c092cfe0fbae9032ba5e2cd1" translate="yes" xml:space="preserve">
          <source>FileType::is_symlink</source>
          <target state="translated">FileType::is_symlink</target>
        </trans-unit>
        <trans-unit id="4e343fd9143441200113a8f67932edca6bc93b9f" translate="yes" xml:space="preserve">
          <source>FileType::is_symlink_dir</source>
          <target state="translated">FileType::is_symlink_dir</target>
        </trans-unit>
        <trans-unit id="c9ad14b62a571a2536098caeee8ea7b916e53728" translate="yes" xml:space="preserve">
          <source>FileType::is_symlink_file</source>
          <target state="translated">FileType::is_symlink_file</target>
        </trans-unit>
        <trans-unit id="a7096bc6ac2d873191e604408d3cd0131982214d" translate="yes" xml:space="preserve">
          <source>FileType::ne</source>
          <target state="translated">FileType::ne</target>
        </trans-unit>
        <trans-unit id="1f1334a629b5790555cc45dc52576d862e1b09bf" translate="yes" xml:space="preserve">
          <source>FileType::to_owned</source>
          <target state="translated">FileType::to_owned</target>
        </trans-unit>
        <trans-unit id="4e9fe33eecd6adda90387c8f66e59fffd6597a45" translate="yes" xml:space="preserve">
          <source>FileType::try_from</source>
          <target state="translated">FileType::try_from</target>
        </trans-unit>
        <trans-unit id="aee4d692b20b4419f3509460ce95c21892a13f39" translate="yes" xml:space="preserve">
          <source>FileType::try_into</source>
          <target state="translated">FileType::try_into</target>
        </trans-unit>
        <trans-unit id="5ff5f887e7b3e8aff555d49306612e357675c9bd" translate="yes" xml:space="preserve">
          <source>FileType::type_id</source>
          <target state="translated">FileType::type_id</target>
        </trans-unit>
        <trans-unit id="929cc186c19be1918402ad5662ea29c9cc865b4b" translate="yes" xml:space="preserve">
          <source>FileTypeExt</source>
          <target state="translated">FileTypeExt</target>
        </trans-unit>
        <trans-unit id="3972652ca488790a15415879855d53ac012c75d8" translate="yes" xml:space="preserve">
          <source>Filename: 404.html</source>
          <target state="translated">Имя:404.html</target>
        </trans-unit>
        <trans-unit id="187ac0475d2c3726c770569bbd34586a2bc90a27" translate="yes" xml:space="preserve">
          <source>Filename: Cargo.toml</source>
          <target state="translated">Фильм:Cargo.toml</target>
        </trans-unit>
        <trans-unit id="e98cdddb1ee8e7c4da95cb3ab4be1e783886b76c" translate="yes" xml:space="preserve">
          <source>Filename: add-one/Cargo.toml</source>
          <target state="translated">Имя файла:add-one/Cargo.toml</target>
        </trans-unit>
        <trans-unit id="8b0ea8f4a250a566178380bcc9a555524c06a32d" translate="yes" xml:space="preserve">
          <source>Filename: add-one/src/lib.rs</source>
          <target state="translated">Имя файла:add-one/src/lib.rs</target>
        </trans-unit>
        <trans-unit id="ab8fe577535c87d7dd689486f1d41a8080c2f271" translate="yes" xml:space="preserve">
          <source>Filename: adder/Cargo.toml</source>
          <target state="translated">Имя файла:adder/Cargo.toml</target>
        </trans-unit>
        <trans-unit id="a90b8a2a0f924bd6227af083f347aa7353d3f031" translate="yes" xml:space="preserve">
          <source>Filename: adder/src/main.rs</source>
          <target state="translated">Имя файла:adder/src/main.rs</target>
        </trans-unit>
        <trans-unit id="55f9db44bd21ac460147a956ffca8a2b4cb94f18" translate="yes" xml:space="preserve">
          <source>Filename: hello.html</source>
          <target state="translated">Имя фильма:hello.html</target>
        </trans-unit>
        <trans-unit id="5c1a8e7babcba6042bc1a6786f94a4f521498fff" translate="yes" xml:space="preserve">
          <source>Filename: hello_macro_derive/Cargo.toml</source>
          <target state="translated">Имя фильма:hello_macro_derive/Cargo.toml</target>
        </trans-unit>
        <trans-unit id="0c53901dfc6059b090347760f0e4570d0a6ea6b4" translate="yes" xml:space="preserve">
          <source>Filename: hello_macro_derive/src/lib.rs</source>
          <target state="translated">Имя фильма:hello_macro_derive/src/lib.rs</target>
        </trans-unit>
        <trans-unit id="c085a35a49926c12b0b2f35a9d7e21e1f29ddfad" translate="yes" xml:space="preserve">
          <source>Filename: main.rs</source>
          <target state="translated">Имя фильма:main.rs</target>
        </trans-unit>
        <trans-unit id="81f5927534928d025112f0d5ae4d73cccfd04baa" translate="yes" xml:space="preserve">
          <source>Filename: output.txt</source>
          <target state="translated">Имя файла:output.txt</target>
        </trans-unit>
        <trans-unit id="6360f8e91fa7b0fef745323be28824d312222104" translate="yes" xml:space="preserve">
          <source>Filename: poem.txt</source>
          <target state="translated">Имя фильма:poem.txt</target>
        </trans-unit>
        <trans-unit id="0fdd7d7934ab894a3047c2245042589e94e3f26b" translate="yes" xml:space="preserve">
          <source>Filename: src/bin/main.rs</source>
          <target state="translated">Имя файла:src/bin/main.rs</target>
        </trans-unit>
        <trans-unit id="8e86c775b0151ad294556754d9d32d0a378d89a2" translate="yes" xml:space="preserve">
          <source>Filename: src/front_of_house.rs</source>
          <target state="translated">Имя файла:src/front_of_house.rs</target>
        </trans-unit>
        <trans-unit id="e47929b5d2ede0dcd00ecfe8380b419d77496276" translate="yes" xml:space="preserve">
          <source>Filename: src/front_of_house/hosting.rs</source>
          <target state="translated">Имя файла:src/front_of_house/hosting.rs</target>
        </trans-unit>
        <trans-unit id="7d2518c204baa1386e9e328285a548971d9689e1" translate="yes" xml:space="preserve">
          <source>Filename: src/lib.rs</source>
          <target state="translated">Имя фильма:src/lib.rs</target>
        </trans-unit>
        <trans-unit id="6bf165519fb28f6463bffd299a348551f7a70ffe" translate="yes" xml:space="preserve">
          <source>Filename: src/main.rs</source>
          <target state="translated">Имя фильма:src/main.rs</target>
        </trans-unit>
        <trans-unit id="4c278d633f2b0c6d8e3ac60f43097864b83be1d1" translate="yes" xml:space="preserve">
          <source>Filename: tests/common.rs</source>
          <target state="translated">Имя файла:тесты/общие.рс</target>
        </trans-unit>
        <trans-unit id="89bb3352206d43a9c7be07621ae99a4c7a63d59b" translate="yes" xml:space="preserve">
          <source>Filename: tests/integration_test.rs</source>
          <target state="translated">Имя файла:tests/integration_test.rs</target>
        </trans-unit>
        <trans-unit id="da7e9e679b1fa7c216538bf5373f282426df5514" translate="yes" xml:space="preserve">
          <source>Files are automatically closed when they go out of scope. Errors detected on closing are ignored by the implementation of &lt;code&gt;Drop&lt;/code&gt;. Use the method &lt;a href=&quot;struct.file#method.sync_all&quot;&gt;&lt;code&gt;sync_all&lt;/code&gt;&lt;/a&gt; if these errors must be manually handled.</source>
          <target state="translated">Файлы автоматически закрываются, когда они выходят за рамки. Ошибки, обнаруженные при закрытии, игнорируются реализацией &lt;code&gt;Drop&lt;/code&gt; . Используйте метод &lt;a href=&quot;struct.file#method.sync_all&quot;&gt; &lt;code&gt;sync_all&lt;/code&gt; ,&lt;/a&gt; если эти ошибки необходимо обрабатывать вручную.</target>
        </trans-unit>
        <trans-unit id="c9f364a0ba59ec6db4093419159a64cbb17d3ea1" translate="yes" xml:space="preserve">
          <source>Filesystem Path</source>
          <target state="translated">Путь к файловой системе</target>
        </trans-unit>
        <trans-unit id="d6f2cf3e28184d29b142a65282628e9e9ed3b391" translate="yes" xml:space="preserve">
          <source>Filesystem manipulation operations.</source>
          <target state="translated">Операции манипуляции с файловой системой.</target>
        </trans-unit>
        <trans-unit id="1810ebd9bf18910a703b86e95fef3813caed4917" translate="yes" xml:space="preserve">
          <source>Fill/Alignment</source>
          <target state="translated">Fill/Alignment</target>
        </trans-unit>
        <trans-unit id="c8e2efee182c5700f3ea63856c64beff2fb9c8c8" translate="yes" xml:space="preserve">
          <source>Fills &lt;code&gt;self&lt;/code&gt; with elements by cloning &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7decf1aa22b02ae8abf9a96849ee423eee838e4" translate="yes" xml:space="preserve">
          <source>Filter</source>
          <target state="translated">Filter</target>
        </trans-unit>
        <trans-unit id="cbdc4f8747f1519b270349e133c571ee1757bb1c" translate="yes" xml:space="preserve">
          <source>Filter::all</source>
          <target state="translated">Filter::all</target>
        </trans-unit>
        <trans-unit id="213652adf17d8d5b23821af3df01aaf36e105b47" translate="yes" xml:space="preserve">
          <source>Filter::any</source>
          <target state="translated">Filter::any</target>
        </trans-unit>
        <trans-unit id="c56449e149c1793febf6f13545654fac67e14e5a" translate="yes" xml:space="preserve">
          <source>Filter::borrow</source>
          <target state="translated">Filter::borrow</target>
        </trans-unit>
        <trans-unit id="a80b74f3a8cb1f73ab5e73e6e8d67e70d6ab3056" translate="yes" xml:space="preserve">
          <source>Filter::borrow_mut</source>
          <target state="translated">Filter::borrow_mut</target>
        </trans-unit>
        <trans-unit id="76237c827e872488f01eff9ed90f791a915570c6" translate="yes" xml:space="preserve">
          <source>Filter::by_ref</source>
          <target state="translated">Filter::by_ref</target>
        </trans-unit>
        <trans-unit id="c08ff6ff4c7d0c0a773ca134ca43a253a245dfd2" translate="yes" xml:space="preserve">
          <source>Filter::chain</source>
          <target state="translated">Filter::chain</target>
        </trans-unit>
        <trans-unit id="6aa9effab13d7de89564c149c0bea2c3feb5e4b3" translate="yes" xml:space="preserve">
          <source>Filter::clone</source>
          <target state="translated">Filter::clone</target>
        </trans-unit>
        <trans-unit id="e8b20e49791eb3c6b7a3e63b638a8f8db9699303" translate="yes" xml:space="preserve">
          <source>Filter::clone_from</source>
          <target state="translated">Filter::clone_from</target>
        </trans-unit>
        <trans-unit id="b1a5e59ab9400c8da99232745d0500b07031cca8" translate="yes" xml:space="preserve">
          <source>Filter::clone_into</source>
          <target state="translated">Filter::clone_into</target>
        </trans-unit>
        <trans-unit id="e3902049f2a6ddd774deb61257ff1952539bf21a" translate="yes" xml:space="preserve">
          <source>Filter::cloned</source>
          <target state="translated">Filter::cloned</target>
        </trans-unit>
        <trans-unit id="76bdb4ad2df9791c692d243dd7adee158b8b1812" translate="yes" xml:space="preserve">
          <source>Filter::cmp</source>
          <target state="translated">Filter::cmp</target>
        </trans-unit>
        <trans-unit id="f720610c04103a2d0aba4df49c3f0fa78ee69c23" translate="yes" xml:space="preserve">
          <source>Filter::collect</source>
          <target state="translated">Filter::collect</target>
        </trans-unit>
        <trans-unit id="775f688375a5095a1cc2ef60b92888bab1a6e97a" translate="yes" xml:space="preserve">
          <source>Filter::copied</source>
          <target state="translated">Filter::copied</target>
        </trans-unit>
        <trans-unit id="f16939860dd5d154c5f25da7f419042acbf0c772" translate="yes" xml:space="preserve">
          <source>Filter::count</source>
          <target state="translated">Filter::count</target>
        </trans-unit>
        <trans-unit id="67fdc43a3084de4052d59b3b63f0c63e6bb5d964" translate="yes" xml:space="preserve">
          <source>Filter::cycle</source>
          <target state="translated">Filter::cycle</target>
        </trans-unit>
        <trans-unit id="cd9139b739680b08d5f86e5eaac4157bc1eca80d" translate="yes" xml:space="preserve">
          <source>Filter::enumerate</source>
          <target state="translated">Filter::enumerate</target>
        </trans-unit>
        <trans-unit id="c26e44c81ed8d12f0079a166a0d6667f105d37ec" translate="yes" xml:space="preserve">
          <source>Filter::eq</source>
          <target state="translated">Filter::eq</target>
        </trans-unit>
        <trans-unit id="a15849cd825bfff00ebb42b59700eb882c5694d9" translate="yes" xml:space="preserve">
          <source>Filter::filter</source>
          <target state="translated">Filter::filter</target>
        </trans-unit>
        <trans-unit id="24efc78d3f6adc5e59647487bd7ca0c304590d15" translate="yes" xml:space="preserve">
          <source>Filter::filter_map</source>
          <target state="translated">Filter::filter_map</target>
        </trans-unit>
        <trans-unit id="a08364af9a780af59da2e7dacb512c40b0b44167" translate="yes" xml:space="preserve">
          <source>Filter::find</source>
          <target state="translated">Filter::find</target>
        </trans-unit>
        <trans-unit id="dfd691ecf4bc1689e21b0e8f66fd7983b9f63f3d" translate="yes" xml:space="preserve">
          <source>Filter::find_map</source>
          <target state="translated">Filter::find_map</target>
        </trans-unit>
        <trans-unit id="5fcc14d3fdac172bc84f9cacf0d607f84e029b57" translate="yes" xml:space="preserve">
          <source>Filter::flat_map</source>
          <target state="translated">Filter::flat_map</target>
        </trans-unit>
        <trans-unit id="26583da011e813ddafc93dccbf1207378fa84499" translate="yes" xml:space="preserve">
          <source>Filter::flatten</source>
          <target state="translated">Filter::flatten</target>
        </trans-unit>
        <trans-unit id="0081de77ca92e9a27e84cd163fdbdc3a133d7ec2" translate="yes" xml:space="preserve">
          <source>Filter::fmt</source>
          <target state="translated">Filter::fmt</target>
        </trans-unit>
        <trans-unit id="cb5810e92581c7ab74b65631c90f7a801485519b" translate="yes" xml:space="preserve">
          <source>Filter::fold</source>
          <target state="translated">Filter::fold</target>
        </trans-unit>
        <trans-unit id="c2f6811f53cf481731dba95f289bc5b451fb8096" translate="yes" xml:space="preserve">
          <source>Filter::for_each</source>
          <target state="translated">Filter::for_each</target>
        </trans-unit>
        <trans-unit id="5d32efb9ef420f99d29d9cfdafd65780f6152d22" translate="yes" xml:space="preserve">
          <source>Filter::from</source>
          <target state="translated">Filter::from</target>
        </trans-unit>
        <trans-unit id="89189c4cbf29e04977c47f5286c6c94193c7d1d7" translate="yes" xml:space="preserve">
          <source>Filter::fuse</source>
          <target state="translated">Filter::fuse</target>
        </trans-unit>
        <trans-unit id="3d442ac00bf682738eb7e8185a5e11718f4244af" translate="yes" xml:space="preserve">
          <source>Filter::ge</source>
          <target state="translated">Filter::ge</target>
        </trans-unit>
        <trans-unit id="988424c48047d84bced56ec599d616c88d157ba1" translate="yes" xml:space="preserve">
          <source>Filter::gt</source>
          <target state="translated">Filter::gt</target>
        </trans-unit>
        <trans-unit id="935ea9ea374208a06eb72657dc289a8b1352b9c8" translate="yes" xml:space="preserve">
          <source>Filter::inspect</source>
          <target state="translated">Filter::inspect</target>
        </trans-unit>
        <trans-unit id="c066ff580282ed2966a365604533d7fc4e4343b4" translate="yes" xml:space="preserve">
          <source>Filter::into</source>
          <target state="translated">Filter::into</target>
        </trans-unit>
        <trans-unit id="5bd2ab99188866f12a730a837d29da3bcaad7a8e" translate="yes" xml:space="preserve">
          <source>Filter::into_iter</source>
          <target state="translated">Filter::into_iter</target>
        </trans-unit>
        <trans-unit id="654d65456d47a9a637a8ace3472ffb07cc121839" translate="yes" xml:space="preserve">
          <source>Filter::is_sorted</source>
          <target state="translated">Filter::is_sorted</target>
        </trans-unit>
        <trans-unit id="120f503d9cd2ba86358dfadbcba49346124c01ea" translate="yes" xml:space="preserve">
          <source>Filter::is_sorted_by</source>
          <target state="translated">Filter::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="94b2a18bec30d810f9dcb765cca9e6a8de1b6cd3" translate="yes" xml:space="preserve">
          <source>Filter::is_sorted_by_key</source>
          <target state="translated">Filter::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="159d811fafa2e0efe7c5ba7415af454c491f66cd" translate="yes" xml:space="preserve">
          <source>Filter::last</source>
          <target state="translated">Filter::last</target>
        </trans-unit>
        <trans-unit id="3d7f719326ba1977f049f327dae155cd5d008edc" translate="yes" xml:space="preserve">
          <source>Filter::le</source>
          <target state="translated">Filter::le</target>
        </trans-unit>
        <trans-unit id="f75e00cbb3e7d9494f344d32f9634dc98d3159db" translate="yes" xml:space="preserve">
          <source>Filter::lt</source>
          <target state="translated">Filter::lt</target>
        </trans-unit>
        <trans-unit id="d357c8df2881bd5268acbe3d45730d4a2455a03f" translate="yes" xml:space="preserve">
          <source>Filter::map</source>
          <target state="translated">Filter::map</target>
        </trans-unit>
        <trans-unit id="685fae1c6826405dbf3dd5154e10decba5601aef" translate="yes" xml:space="preserve">
          <source>Filter::max</source>
          <target state="translated">Filter::max</target>
        </trans-unit>
        <trans-unit id="0e44ccbef3a78d02dba3572d78ec33af28c5e10d" translate="yes" xml:space="preserve">
          <source>Filter::max_by</source>
          <target state="translated">Filter::max_by</target>
        </trans-unit>
        <trans-unit id="4e356fad5f964adfe160f41cf46044f86e855415" translate="yes" xml:space="preserve">
          <source>Filter::max_by_key</source>
          <target state="translated">Filter::max_by_key</target>
        </trans-unit>
        <trans-unit id="cd5c61dcdd3a4eb6ffe9980bcfa99812a22a99b8" translate="yes" xml:space="preserve">
          <source>Filter::min</source>
          <target state="translated">Filter::min</target>
        </trans-unit>
        <trans-unit id="6267572b9001345858bd23a3c2a5283613550f1c" translate="yes" xml:space="preserve">
          <source>Filter::min_by</source>
          <target state="translated">Filter::min_by</target>
        </trans-unit>
        <trans-unit id="1434d5ff7c813900572d3d1d17e7e9c616ddca1c" translate="yes" xml:space="preserve">
          <source>Filter::min_by_key</source>
          <target state="translated">Filter::min_by_key</target>
        </trans-unit>
        <trans-unit id="99b66bcba4654ffdef5ad6f5a89651da3c827526" translate="yes" xml:space="preserve">
          <source>Filter::ne</source>
          <target state="translated">Filter::ne</target>
        </trans-unit>
        <trans-unit id="9f2847ef7da7296603b441916e18d32d60eae92d" translate="yes" xml:space="preserve">
          <source>Filter::next</source>
          <target state="translated">Filter::next</target>
        </trans-unit>
        <trans-unit id="f45b4e6d5533e6f3377975f48156cab4e4d39687" translate="yes" xml:space="preserve">
          <source>Filter::next_back</source>
          <target state="translated">Filter::next_back</target>
        </trans-unit>
        <trans-unit id="a26082fae2f4ba20b3e7fae7ad76d84b633340b4" translate="yes" xml:space="preserve">
          <source>Filter::nth</source>
          <target state="translated">Filter::nth</target>
        </trans-unit>
        <trans-unit id="33367b8b38a92926a22e41e47c6609e03d903dae" translate="yes" xml:space="preserve">
          <source>Filter::nth_back</source>
          <target state="translated">Filter::nth_back</target>
        </trans-unit>
        <trans-unit id="9299c303759eec1e6d407635cf1c4c8007db8f32" translate="yes" xml:space="preserve">
          <source>Filter::partial_cmp</source>
          <target state="translated">Filter::partial_cmp</target>
        </trans-unit>
        <trans-unit id="4b800d21e02fa744f44ecf3517b8c0380f8c45dc" translate="yes" xml:space="preserve">
          <source>Filter::partition</source>
          <target state="translated">Filter::partition</target>
        </trans-unit>
        <trans-unit id="50b0dd0933b632753646b3db69322e05915e7e9c" translate="yes" xml:space="preserve">
          <source>Filter::peekable</source>
          <target state="translated">Filter::peekable</target>
        </trans-unit>
        <trans-unit id="56cbb0512792b87b005d0edc38dd7f5b7d66d89c" translate="yes" xml:space="preserve">
          <source>Filter::position</source>
          <target state="translated">Filter::position</target>
        </trans-unit>
        <trans-unit id="8abcfc1e2912b7d94dafa01d3c894ad55bf06811" translate="yes" xml:space="preserve">
          <source>Filter::product</source>
          <target state="translated">Filter::product</target>
        </trans-unit>
        <trans-unit id="744beb8eba444cd8007aca26fddc12f77d06c7ee" translate="yes" xml:space="preserve">
          <source>Filter::rev</source>
          <target state="translated">Filter::rev</target>
        </trans-unit>
        <trans-unit id="2fbee7cabd92c1bbb40aa4e4d8bc11ffb7323bd0" translate="yes" xml:space="preserve">
          <source>Filter::rfind</source>
          <target state="translated">Filter::rfind</target>
        </trans-unit>
        <trans-unit id="c04751947038390718dfb4e703413f7458033f8a" translate="yes" xml:space="preserve">
          <source>Filter::rfold</source>
          <target state="translated">Filter::rfold</target>
        </trans-unit>
        <trans-unit id="fb5edd411694fb58eb50d1adee34a1f1672a86d1" translate="yes" xml:space="preserve">
          <source>Filter::rposition</source>
          <target state="translated">Filter::rposition</target>
        </trans-unit>
        <trans-unit id="0443bec5e567f4f41bf9211e6a14a53d932ca5de" translate="yes" xml:space="preserve">
          <source>Filter::scan</source>
          <target state="translated">Filter::scan</target>
        </trans-unit>
        <trans-unit id="3c87d52dd510721bf36aa5824dfda723f1cc9c41" translate="yes" xml:space="preserve">
          <source>Filter::size_hint</source>
          <target state="translated">Filter::size_hint</target>
        </trans-unit>
        <trans-unit id="73ff3ae6b81ca5209cbedecccee9a9295c89e420" translate="yes" xml:space="preserve">
          <source>Filter::skip</source>
          <target state="translated">Filter::skip</target>
        </trans-unit>
        <trans-unit id="63485bee608bbb032e62ac1926d4423f7e4ff5cf" translate="yes" xml:space="preserve">
          <source>Filter::skip_while</source>
          <target state="translated">Filter::skip_while</target>
        </trans-unit>
        <trans-unit id="b3e2246b0543b7c24d7766b9a4c389adda77e23a" translate="yes" xml:space="preserve">
          <source>Filter::step_by</source>
          <target state="translated">Filter::step_by</target>
        </trans-unit>
        <trans-unit id="cb8f3bb10ced2597f26dbbb4a22a852a6b7fc5a6" translate="yes" xml:space="preserve">
          <source>Filter::sum</source>
          <target state="translated">Filter::sum</target>
        </trans-unit>
        <trans-unit id="fd528d522f0e9356841949d9382636816d91e657" translate="yes" xml:space="preserve">
          <source>Filter::take</source>
          <target state="translated">Filter::take</target>
        </trans-unit>
        <trans-unit id="53e4721dbfdbc67e38abc29a2ba5b0855c42f1d6" translate="yes" xml:space="preserve">
          <source>Filter::take_while</source>
          <target state="translated">Filter::take_while</target>
        </trans-unit>
        <trans-unit id="8d7cc088f213c95ed6d117d9f20756f4b59fd99c" translate="yes" xml:space="preserve">
          <source>Filter::to_owned</source>
          <target state="translated">Filter::to_owned</target>
        </trans-unit>
        <trans-unit id="91edcccfbd424db1e271a58b030ecd53ce7cc376" translate="yes" xml:space="preserve">
          <source>Filter::try_fold</source>
          <target state="translated">Filter::try_fold</target>
        </trans-unit>
        <trans-unit id="4e5dc865ae5492bff8c965279dc8d8d6549367fc" translate="yes" xml:space="preserve">
          <source>Filter::try_for_each</source>
          <target state="translated">Filter::try_for_each</target>
        </trans-unit>
        <trans-unit id="a29a975cd5ff530452972a645aab000d7a0a9564" translate="yes" xml:space="preserve">
          <source>Filter::try_from</source>
          <target state="translated">Filter::try_from</target>
        </trans-unit>
        <trans-unit id="e0430947230f7346595292222e6fd915f5dd81cc" translate="yes" xml:space="preserve">
          <source>Filter::try_into</source>
          <target state="translated">Filter::try_into</target>
        </trans-unit>
        <trans-unit id="8cec84df6490ee5ddbb4ad01e2e99b6ef2f04f4f" translate="yes" xml:space="preserve">
          <source>Filter::try_rfold</source>
          <target state="translated">Filter::try_rfold</target>
        </trans-unit>
        <trans-unit id="0754f58624302676282d4836edee3ed84e8620f7" translate="yes" xml:space="preserve">
          <source>Filter::type_id</source>
          <target state="translated">Filter::type_id</target>
        </trans-unit>
        <trans-unit id="74df6714231936212824bfa512b7d688c36309ea" translate="yes" xml:space="preserve">
          <source>Filter::unzip</source>
          <target state="translated">Filter::unzip</target>
        </trans-unit>
        <trans-unit id="8e017a842575b7cdf7dcc2ab224971d1284d20ec" translate="yes" xml:space="preserve">
          <source>Filter::zip</source>
          <target state="translated">Filter::zip</target>
        </trans-unit>
        <trans-unit id="cbcae3949ded35d509783e6f0637ed71ff60f4a6" translate="yes" xml:space="preserve">
          <source>FilterMap</source>
          <target state="translated">FilterMap</target>
        </trans-unit>
        <trans-unit id="7b92b5eae9e8062c60cffe29ca8736eca2f30e6c" translate="yes" xml:space="preserve">
          <source>FilterMap::all</source>
          <target state="translated">FilterMap::all</target>
        </trans-unit>
        <trans-unit id="056763da49a00dedd56d642628227f49af82fa2c" translate="yes" xml:space="preserve">
          <source>FilterMap::any</source>
          <target state="translated">FilterMap::any</target>
        </trans-unit>
        <trans-unit id="e22da377c9a59dd2414678b2de94caf302f4b11a" translate="yes" xml:space="preserve">
          <source>FilterMap::borrow</source>
          <target state="translated">FilterMap::borrow</target>
        </trans-unit>
        <trans-unit id="f52bf4743271f18a79db1b6d0cf7659f6a5a4470" translate="yes" xml:space="preserve">
          <source>FilterMap::borrow_mut</source>
          <target state="translated">FilterMap::borrow_mut</target>
        </trans-unit>
        <trans-unit id="afd052ecc7eac7c108a37d4e4f95c5b462c283a8" translate="yes" xml:space="preserve">
          <source>FilterMap::by_ref</source>
          <target state="translated">FilterMap::by_ref</target>
        </trans-unit>
        <trans-unit id="6c4d335a70bb28a89e78be903a69ac81820531b4" translate="yes" xml:space="preserve">
          <source>FilterMap::chain</source>
          <target state="translated">FilterMap::chain</target>
        </trans-unit>
        <trans-unit id="e72e0d33d70b5bb441f9c636ac02c73fec770065" translate="yes" xml:space="preserve">
          <source>FilterMap::clone</source>
          <target state="translated">FilterMap::clone</target>
        </trans-unit>
        <trans-unit id="e59e8e02d0632862f5235d89cd22b4d107ce257e" translate="yes" xml:space="preserve">
          <source>FilterMap::clone_from</source>
          <target state="translated">FilterMap::clone_from</target>
        </trans-unit>
        <trans-unit id="90db74595be16c2cb19f9cab1796a2edce3d0af7" translate="yes" xml:space="preserve">
          <source>FilterMap::clone_into</source>
          <target state="translated">FilterMap::clone_into</target>
        </trans-unit>
        <trans-unit id="c9777fbc2076ee56339b6fc1fbdf983d76c7b127" translate="yes" xml:space="preserve">
          <source>FilterMap::cloned</source>
          <target state="translated">FilterMap::cloned</target>
        </trans-unit>
        <trans-unit id="5807d265563c7c60620fc8da08b872c9ab8d3fd9" translate="yes" xml:space="preserve">
          <source>FilterMap::cmp</source>
          <target state="translated">FilterMap::cmp</target>
        </trans-unit>
        <trans-unit id="1bad71d537463c8edec7eeed9bb36bbe800d0240" translate="yes" xml:space="preserve">
          <source>FilterMap::collect</source>
          <target state="translated">FilterMap::collect</target>
        </trans-unit>
        <trans-unit id="f362b610a095c9213723aa6b7c29a70ad6a75d23" translate="yes" xml:space="preserve">
          <source>FilterMap::copied</source>
          <target state="translated">FilterMap::copied</target>
        </trans-unit>
        <trans-unit id="15f849a9134f9ee541710bde8fa395c7f5827ea5" translate="yes" xml:space="preserve">
          <source>FilterMap::count</source>
          <target state="translated">FilterMap::count</target>
        </trans-unit>
        <trans-unit id="b04e79b1c207ad85f19cc770bf3af8a8cdfc7564" translate="yes" xml:space="preserve">
          <source>FilterMap::cycle</source>
          <target state="translated">FilterMap::cycle</target>
        </trans-unit>
        <trans-unit id="d5eaa8ed50a34c4d51cf80b092cd79a044f981dc" translate="yes" xml:space="preserve">
          <source>FilterMap::enumerate</source>
          <target state="translated">FilterMap::enumerate</target>
        </trans-unit>
        <trans-unit id="3049b24cc78d8dee8b282464fe6a54629d9d99a7" translate="yes" xml:space="preserve">
          <source>FilterMap::eq</source>
          <target state="translated">FilterMap::eq</target>
        </trans-unit>
        <trans-unit id="c6574764327f750fbed775fea3b87ff0f564ab4b" translate="yes" xml:space="preserve">
          <source>FilterMap::filter</source>
          <target state="translated">FilterMap::filter</target>
        </trans-unit>
        <trans-unit id="5fd3ed340b926621f6e6a7cec27c42b8aa8de606" translate="yes" xml:space="preserve">
          <source>FilterMap::filter_map</source>
          <target state="translated">FilterMap::filter_map</target>
        </trans-unit>
        <trans-unit id="e64c38e3c57d335f0029952b9f3dfb8de6339646" translate="yes" xml:space="preserve">
          <source>FilterMap::find</source>
          <target state="translated">FilterMap::find</target>
        </trans-unit>
        <trans-unit id="a782576451cde1a09fb3fcb04ed110cb35558244" translate="yes" xml:space="preserve">
          <source>FilterMap::find_map</source>
          <target state="translated">FilterMap::find_map</target>
        </trans-unit>
        <trans-unit id="2f1d9d14678b908bdc8f961d330d535e24696c96" translate="yes" xml:space="preserve">
          <source>FilterMap::flat_map</source>
          <target state="translated">FilterMap::flat_map</target>
        </trans-unit>
        <trans-unit id="373bd651e683619f593d10b616679672c7aaed59" translate="yes" xml:space="preserve">
          <source>FilterMap::flatten</source>
          <target state="translated">FilterMap::flatten</target>
        </trans-unit>
        <trans-unit id="c1bd93959b35c9e527b2799deacab3c73c0eb53a" translate="yes" xml:space="preserve">
          <source>FilterMap::fmt</source>
          <target state="translated">FilterMap::fmt</target>
        </trans-unit>
        <trans-unit id="17c141370292082f0ec7c950597e3f230f9c5eba" translate="yes" xml:space="preserve">
          <source>FilterMap::fold</source>
          <target state="translated">FilterMap::fold</target>
        </trans-unit>
        <trans-unit id="764f2cd89d16cf2d61f033ea733cbd68ac155cf8" translate="yes" xml:space="preserve">
          <source>FilterMap::for_each</source>
          <target state="translated">FilterMap::for_each</target>
        </trans-unit>
        <trans-unit id="b529e2a588242fc40bc3a565040f503232812103" translate="yes" xml:space="preserve">
          <source>FilterMap::from</source>
          <target state="translated">FilterMap::from</target>
        </trans-unit>
        <trans-unit id="782e9758d3b5d111b6dc199ff21b0148712a9942" translate="yes" xml:space="preserve">
          <source>FilterMap::fuse</source>
          <target state="translated">FilterMap::fuse</target>
        </trans-unit>
        <trans-unit id="3382272e7370c0b6147c8c387ffc37b4d4c5e3a6" translate="yes" xml:space="preserve">
          <source>FilterMap::ge</source>
          <target state="translated">FilterMap::ge</target>
        </trans-unit>
        <trans-unit id="4b8238e089d3397b749e1b187d2a724b2617946b" translate="yes" xml:space="preserve">
          <source>FilterMap::gt</source>
          <target state="translated">FilterMap::gt</target>
        </trans-unit>
        <trans-unit id="82617e4f67971bc78b124b6cb5a257d959803b60" translate="yes" xml:space="preserve">
          <source>FilterMap::inspect</source>
          <target state="translated">FilterMap::inspect</target>
        </trans-unit>
        <trans-unit id="aa02bb54120358798026dad5fd5c4d13752028ae" translate="yes" xml:space="preserve">
          <source>FilterMap::into</source>
          <target state="translated">FilterMap::into</target>
        </trans-unit>
        <trans-unit id="d9156abee7291c0e1aff8b8e10dfdf72b8682948" translate="yes" xml:space="preserve">
          <source>FilterMap::into_iter</source>
          <target state="translated">FilterMap::into_iter</target>
        </trans-unit>
        <trans-unit id="b5f609b521b0384ad2700db99a7535f641b735d3" translate="yes" xml:space="preserve">
          <source>FilterMap::is_sorted</source>
          <target state="translated">FilterMap::is_sorted</target>
        </trans-unit>
        <trans-unit id="125f87f00258d3f5268e75a03b685825e6459606" translate="yes" xml:space="preserve">
          <source>FilterMap::is_sorted_by</source>
          <target state="translated">FilterMap::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="db08443b07b0a8ffcf37e18de9535ef98fc6640f" translate="yes" xml:space="preserve">
          <source>FilterMap::is_sorted_by_key</source>
          <target state="translated">FilterMap::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="63d4423b8f09aee32267033e6ed51ee3d75dbe39" translate="yes" xml:space="preserve">
          <source>FilterMap::last</source>
          <target state="translated">FilterMap::last</target>
        </trans-unit>
        <trans-unit id="508b943f88718a1ffcbe85638512d90a4a5aeb16" translate="yes" xml:space="preserve">
          <source>FilterMap::le</source>
          <target state="translated">FilterMap::le</target>
        </trans-unit>
        <trans-unit id="f59441da463942dd788b8584520a628dbb0a7821" translate="yes" xml:space="preserve">
          <source>FilterMap::lt</source>
          <target state="translated">FilterMap::lt</target>
        </trans-unit>
        <trans-unit id="b97224e4f5de7796c1b3262a2a8093bdeff53e3d" translate="yes" xml:space="preserve">
          <source>FilterMap::map</source>
          <target state="translated">FilterMap::map</target>
        </trans-unit>
        <trans-unit id="93f0d3347911a786232d9f9e9dd863f797f500e2" translate="yes" xml:space="preserve">
          <source>FilterMap::max</source>
          <target state="translated">FilterMap::max</target>
        </trans-unit>
        <trans-unit id="6ed3c1e75437eb9e78693e8457ba8a6a19a9eeb6" translate="yes" xml:space="preserve">
          <source>FilterMap::max_by</source>
          <target state="translated">FilterMap::max_by</target>
        </trans-unit>
        <trans-unit id="1f115c7e6fcefc2da1a6cb134d4cacec12999553" translate="yes" xml:space="preserve">
          <source>FilterMap::max_by_key</source>
          <target state="translated">FilterMap::max_by_key</target>
        </trans-unit>
        <trans-unit id="5910845dc1ac65e3512f9f11db4bb64d77317203" translate="yes" xml:space="preserve">
          <source>FilterMap::min</source>
          <target state="translated">FilterMap::min</target>
        </trans-unit>
        <trans-unit id="35d98e882270cba4778f1d16fbe51a082da7d77c" translate="yes" xml:space="preserve">
          <source>FilterMap::min_by</source>
          <target state="translated">FilterMap::min_by</target>
        </trans-unit>
        <trans-unit id="bd2fcb562ae558f66536954f665c945857c9ad67" translate="yes" xml:space="preserve">
          <source>FilterMap::min_by_key</source>
          <target state="translated">FilterMap::min_by_key</target>
        </trans-unit>
        <trans-unit id="03f3e5a4e3eee64b9fb373323ea94527e555da6c" translate="yes" xml:space="preserve">
          <source>FilterMap::ne</source>
          <target state="translated">FilterMap::ne</target>
        </trans-unit>
        <trans-unit id="7ba597ec213271e4a028a80dc2193495e8a9579f" translate="yes" xml:space="preserve">
          <source>FilterMap::next</source>
          <target state="translated">FilterMap::next</target>
        </trans-unit>
        <trans-unit id="08c78668993a1e3f69d527bd6cf931f4bbf29e6e" translate="yes" xml:space="preserve">
          <source>FilterMap::next_back</source>
          <target state="translated">FilterMap::next_back</target>
        </trans-unit>
        <trans-unit id="092ec64a808e7c6fae88552498cb84deac692fe6" translate="yes" xml:space="preserve">
          <source>FilterMap::nth</source>
          <target state="translated">FilterMap::nth</target>
        </trans-unit>
        <trans-unit id="8a5b5faea870c471f74dfaeb9ef1c2978daa1b52" translate="yes" xml:space="preserve">
          <source>FilterMap::nth_back</source>
          <target state="translated">FilterMap::nth_back</target>
        </trans-unit>
        <trans-unit id="ad666374da1329cd1c98c13570e3079bb4d9753b" translate="yes" xml:space="preserve">
          <source>FilterMap::partial_cmp</source>
          <target state="translated">FilterMap::partial_cmp</target>
        </trans-unit>
        <trans-unit id="3a1f557504b4f033d74e3a0cd191e1bc44061c10" translate="yes" xml:space="preserve">
          <source>FilterMap::partition</source>
          <target state="translated">FilterMap::partition</target>
        </trans-unit>
        <trans-unit id="464af94ecc2766027bb520d65baac83210a96d68" translate="yes" xml:space="preserve">
          <source>FilterMap::peekable</source>
          <target state="translated">FilterMap::peekable</target>
        </trans-unit>
        <trans-unit id="b6f5926027a29b108c8c4e148fba7961cd883263" translate="yes" xml:space="preserve">
          <source>FilterMap::position</source>
          <target state="translated">FilterMap::position</target>
        </trans-unit>
        <trans-unit id="d4662fb16a6925d0bdf1426861c2a05c92e21e7d" translate="yes" xml:space="preserve">
          <source>FilterMap::product</source>
          <target state="translated">FilterMap::product</target>
        </trans-unit>
        <trans-unit id="2f01e0b767f05f370a85a3bce7f34a15bdc9a56b" translate="yes" xml:space="preserve">
          <source>FilterMap::rev</source>
          <target state="translated">FilterMap::rev</target>
        </trans-unit>
        <trans-unit id="b9fe0d46b42128b7dc2d7f453059d68d1988c06c" translate="yes" xml:space="preserve">
          <source>FilterMap::rfind</source>
          <target state="translated">FilterMap::rfind</target>
        </trans-unit>
        <trans-unit id="bb45767b515f5a13f54d1f8925702c231e459f48" translate="yes" xml:space="preserve">
          <source>FilterMap::rfold</source>
          <target state="translated">FilterMap::rfold</target>
        </trans-unit>
        <trans-unit id="3b53374da06b703dbb129fb0e8ac3835e2b66f53" translate="yes" xml:space="preserve">
          <source>FilterMap::rposition</source>
          <target state="translated">FilterMap::rposition</target>
        </trans-unit>
        <trans-unit id="278a05a25baf85f2add4950e7c66a2320e6b50b2" translate="yes" xml:space="preserve">
          <source>FilterMap::scan</source>
          <target state="translated">FilterMap::scan</target>
        </trans-unit>
        <trans-unit id="167ea8a00b9ef9c7ea919b1e9de5fba54ddc0740" translate="yes" xml:space="preserve">
          <source>FilterMap::size_hint</source>
          <target state="translated">FilterMap::size_hint</target>
        </trans-unit>
        <trans-unit id="9fdc76c5b90747996aecbe0fdb9da980250a87a2" translate="yes" xml:space="preserve">
          <source>FilterMap::skip</source>
          <target state="translated">FilterMap::skip</target>
        </trans-unit>
        <trans-unit id="0f412c7f819fc672e3cd01cabc2fe79a44cf585b" translate="yes" xml:space="preserve">
          <source>FilterMap::skip_while</source>
          <target state="translated">FilterMap::skip_while</target>
        </trans-unit>
        <trans-unit id="87cce8dbbb10863949d947cefa0807292845bbfb" translate="yes" xml:space="preserve">
          <source>FilterMap::step_by</source>
          <target state="translated">FilterMap::step_by</target>
        </trans-unit>
        <trans-unit id="282c5277a534d22485e237e603241e16a5f9e5f9" translate="yes" xml:space="preserve">
          <source>FilterMap::sum</source>
          <target state="translated">FilterMap::sum</target>
        </trans-unit>
        <trans-unit id="99f988100f49cae2541730ccb54030e896cd2571" translate="yes" xml:space="preserve">
          <source>FilterMap::take</source>
          <target state="translated">FilterMap::take</target>
        </trans-unit>
        <trans-unit id="57b392761e70688448cbe9355f4bb904a0511634" translate="yes" xml:space="preserve">
          <source>FilterMap::take_while</source>
          <target state="translated">FilterMap::take_while</target>
        </trans-unit>
        <trans-unit id="876276a289c68259eb1f6162c94a574e37c52d43" translate="yes" xml:space="preserve">
          <source>FilterMap::to_owned</source>
          <target state="translated">FilterMap::to_owned</target>
        </trans-unit>
        <trans-unit id="284869e46c98e507cba7aeae84131afbfc8aa3e8" translate="yes" xml:space="preserve">
          <source>FilterMap::try_fold</source>
          <target state="translated">FilterMap::try_fold</target>
        </trans-unit>
        <trans-unit id="873249a637f8784b6dfb037f99f7a9afa12e2ba3" translate="yes" xml:space="preserve">
          <source>FilterMap::try_for_each</source>
          <target state="translated">FilterMap::try_for_each</target>
        </trans-unit>
        <trans-unit id="b26e84db8c832a00d7f4ec926259648291fad5b1" translate="yes" xml:space="preserve">
          <source>FilterMap::try_from</source>
          <target state="translated">FilterMap::try_from</target>
        </trans-unit>
        <trans-unit id="dc276d5890d13630365d25d01f73a94caac57e69" translate="yes" xml:space="preserve">
          <source>FilterMap::try_into</source>
          <target state="translated">FilterMap::try_into</target>
        </trans-unit>
        <trans-unit id="f9633b81f914f1be9e1f4e12becd6ea257145954" translate="yes" xml:space="preserve">
          <source>FilterMap::try_rfold</source>
          <target state="translated">FilterMap::try_rfold</target>
        </trans-unit>
        <trans-unit id="f9434165936bad747cb6920cd683f2f70ffac33f" translate="yes" xml:space="preserve">
          <source>FilterMap::type_id</source>
          <target state="translated">FilterMap::type_id</target>
        </trans-unit>
        <trans-unit id="f4645fc713c3c09c25deb1f92c2a7b15bf56f9b3" translate="yes" xml:space="preserve">
          <source>FilterMap::unzip</source>
          <target state="translated">FilterMap::unzip</target>
        </trans-unit>
        <trans-unit id="5d51993841e241bdd0f7af97f0689f8877d8cf6a" translate="yes" xml:space="preserve">
          <source>FilterMap::zip</source>
          <target state="translated">FilterMap::zip</target>
        </trans-unit>
        <trans-unit id="37cb4de530573cb240e27ee116ddd7f334d96a4e" translate="yes" xml:space="preserve">
          <source>Filtering to Run Multiple Tests</source>
          <target state="translated">Фильтрация для запуска многократных испытаний</target>
        </trans-unit>
        <trans-unit id="03852e06afb208b880e5478db67fe7284385a208" translate="yes" xml:space="preserve">
          <source>Final Project: Building a Multithreaded Web Server</source>
          <target state="translated">Окончательный проект:Создание многопоточного веб-сервера</target>
        </trans-unit>
        <trans-unit id="a0d2c6f63e0ec75dd04cb469fec8f4cddc384550" translate="yes" xml:space="preserve">
          <source>Finally, if ever you're interested in what the actual capacity of the collection is, most collections provide a &lt;code&gt;capacity&lt;/code&gt; method to query this information on demand. This can be useful for debugging purposes, or for use with the &lt;code&gt;reserve&lt;/code&gt; methods.</source>
          <target state="translated">Наконец, если вас когда-либо интересует фактическая емкость коллекции, большинство коллекций предоставляют метод &lt;code&gt;capacity&lt;/code&gt; для запроса этой информации по запросу. Это может быть полезно для целей отладки или для использования с &lt;code&gt;reserve&lt;/code&gt; методами.</target>
        </trans-unit>
        <trans-unit id="5057e0c4d54ac6561f43dd750beeee0c71ccd643" translate="yes" xml:space="preserve">
          <source>Finally, if you want to &lt;code&gt;dbg!(..)&lt;/code&gt; multiple values, it will treat them as a tuple (and return it, too):</source>
          <target state="translated">Наконец, если вы хотите &lt;code&gt;dbg!(..)&lt;/code&gt; несколько значений, он будет рассматривать их как кортеж (и тоже возвращать его):</target>
        </trans-unit>
        <trans-unit id="afdf2f40b9b960b4d92937b2c4eaf5bbc5a5f9a5" translate="yes" xml:space="preserve">
          <source>Finally, if you wish to still be able to access the original type, you can create a new &lt;code&gt;enum&lt;/code&gt; with a variant for each type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9f333a75202b2d585bd73ba51b8b4167fbe6ea" translate="yes" xml:space="preserve">
          <source>Finally, it is useful for the reader to keep in mind that according to the definitions of this formalism, no simple NT matches the empty fragment, and likewise no token matches the empty fragment of Rust syntax. (Thus, the &lt;em&gt;only&lt;/em&gt; NT that can match the empty fragment is a complex NT.) This is not actually true, because the &lt;code&gt;vis&lt;/code&gt; matcher can match an empty fragment. Thus, for the purposes of the formalism, we will treat &lt;code&gt;$v:vis&lt;/code&gt; as actually being &lt;code&gt;$($v:vis)?&lt;/code&gt;, with a requirement that the matcher match an empty fragment.</source>
          <target state="translated">Наконец, читателю полезно иметь в виду, что согласно определениям этого формализма, ни один простой NT не соответствует пустому фрагменту, и точно так же ни один токен не соответствует пустому фрагменту синтаксиса Rust. (Таким образом, &lt;em&gt;единственный&lt;/em&gt; NT, который может соответствовать пустому фрагменту, - это сложный NT.) На самом деле это не так, потому что &lt;code&gt;vis&lt;/code&gt; может соответствовать пустому фрагменту. Таким образом, для целей формализма мы будем рассматривать &lt;code&gt;$v:vis&lt;/code&gt; как действительное значение &lt;code&gt;$($v:vis)?&lt;/code&gt; , с требованием, чтобы сопоставитель соответствовал пустому фрагменту.</target>
        </trans-unit>
        <trans-unit id="58c68111d14cda947ed8f36da0ddde0b0eefb4b4" translate="yes" xml:space="preserve">
          <source>Finally, round the size of the struct to the nearest multiple of its &lt;a href=&quot;fn.align_of&quot;&gt;alignment&lt;/a&gt;. The alignment of the struct is usually the largest alignment of all its fields; this can be changed with the use of &lt;code&gt;repr(align(N))&lt;/code&gt;.</source>
          <target state="translated">Наконец, округлите размер структуры до ближайшего кратного ее &lt;a href=&quot;fn.align_of&quot;&gt;выравнивания&lt;/a&gt; . Выравнивание структуры обычно является наибольшим выравниванием всех ее полей; это можно изменить с помощью &lt;code&gt;repr(align(N))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b6451b88d5b36c4db78ede6ff2093f67ddbc787" translate="yes" xml:space="preserve">
          <source>Finally, some appendixes contain useful information about the language in a more reference-like format. Appendix A covers Rust&amp;rsquo;s keywords, Appendix B covers Rust&amp;rsquo;s operators and symbols, Appendix C covers derivable traits provided by the standard library, Appendix D covers some useful development tools, and Appendix E explains Rust editions.</source>
          <target state="translated">Наконец, некоторые приложения содержат полезную информацию о языке в формате, более похожем на справочник. В приложении A описаны ключевые слова Rust, в приложении B описаны операторы и символы Rust, в приложении C описаны производные свойства, предоставляемые стандартной библиотекой, в приложении D описаны некоторые полезные инструменты разработки, а в приложении E описаны редакции Rust.</target>
        </trans-unit>
        <trans-unit id="685942198bdcba88a6f3ec4528092dcd922fa44c" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; keywords cannot be used to branch out from an async block. Therefore the following is illegal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1a919e9ce1e7229991dc6f5ff6a1bc5e62a081" translate="yes" xml:space="preserve">
          <source>Finally, the definition for FOLLOW(M) is built up as follows. pat, expr, etc. represent simple nonterminals with the given fragment specifier.</source>
          <target state="translated">Наконец,определение для FOLLOW(M)построено следующим образом.pat,expr и т.д.представляют собой простые нетерминалы со спецификатором данного фрагмента.</target>
        </trans-unit>
        <trans-unit id="7b36b2ea3ef096f4ea76abe3b88dfbc7ea77d828" translate="yes" xml:space="preserve">
          <source>Finally, the fields of a struct or a reference to a struct are treated as separate entities when borrowing. If the struct does not implement &lt;a href=&quot;../special-types-and-traits#drop&quot;&gt;&lt;code&gt;Drop&lt;/code&gt;&lt;/a&gt; and is stored in a local variable, this also applies to moving out of each of its fields. This also does not apply if automatic dereferencing is done though user defined types other than &lt;a href=&quot;../special-types-and-traits#boxt&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380bab2eff15b19d764ef3dede97b0a3724bf24b" translate="yes" xml:space="preserve">
          <source>Finally, the fields of a struct or a reference to a struct are treated as separate entities when borrowing. If the struct does not implement &lt;a href=&quot;../special-types-and-traits#drop&quot;&gt;&lt;code&gt;Drop&lt;/code&gt;&lt;/a&gt; and is stored in a local variable, this also applies to moving out of each of its fields. This also does not apply if automatic dereferencing is done though user defined types.</source>
          <target state="translated">Наконец, поля структуры или ссылки на структуру при заимствовании обрабатываются как отдельные объекты. Если структура не реализует &lt;a href=&quot;../special-types-and-traits#drop&quot;&gt; &lt;code&gt;Drop&lt;/code&gt; &lt;/a&gt; и хранится в локальной переменной, это также относится к выходу из каждого из ее полей. Это также не применяется, если автоматическое разыменование выполняется через определенные пользователем типы.</target>
        </trans-unit>
        <trans-unit id="8ea92f7eac703a6790db697e7ddca35702303491" translate="yes" xml:space="preserve">
          <source>Finally, the future is wrapped in a pinned box:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c1ba38702bf121d72f8d950ee229564f388f8a" translate="yes" xml:space="preserve">
          <source>Finally, the size of the struct is the current offset rounded up to the nearest multiple of the struct's alignment.</source>
          <target state="translated">Наконец,размер структуры-это текущее смещение,округленное до ближайшего кратного выравнивания структуры.</target>
        </trans-unit>
        <trans-unit id="548f9672973eaeba55b9a5a51839b947dcf766a5" translate="yes" xml:space="preserve">
          <source>Finally, there are some rustc-specific ABI strings:</source>
          <target state="translated">Наконец,есть некоторые специфические для ржавчины ABI-строки:</target>
        </trans-unit>
        <trans-unit id="89bd21dfa629771ada041a6142c77fa2db99944d" translate="yes" xml:space="preserve">
          <source>Finally, this book is not normative. It may include details that are specific to &lt;code&gt;rustc&lt;/code&gt; itself, and should not be taken as a specification for the Rust language. We intend to produce such a book someday, and until then, the reference is the closest thing we have to one.</source>
          <target state="translated">Наконец, эта книга не является нормативной. Он может включать детали, специфичные для самого &lt;code&gt;rustc&lt;/code&gt; , и не должны восприниматься как спецификация для языка Rust. Мы намерены когда-нибудь выпустить такую ​​книгу, а до тех пор референсы будут наиболее близкими к ней.</target>
        </trans-unit>
        <trans-unit id="663b39c893a31add869d68d1a6799a4bd0c74e8d" translate="yes" xml:space="preserve">
          <source>Finally, we need to check for the environment variable. The functions for working with environment variables are in the &lt;code&gt;env&lt;/code&gt; module in the standard library, so we want to bring that module into scope with a &lt;code&gt;use std::env;&lt;/code&gt; line at the top of &lt;em&gt;src/lib.rs&lt;/em&gt;. Then we&amp;rsquo;ll use the &lt;code&gt;var&lt;/code&gt; function from the &lt;code&gt;env&lt;/code&gt; module to check for an environment variable named &lt;code&gt;CASE_INSENSITIVE&lt;/code&gt;, as shown in Listing 12-23.</source>
          <target state="translated">Наконец, нам нужно проверить переменную окружения. Функции для работы с переменными среды находятся в модуле &lt;code&gt;env&lt;/code&gt; стандартной библиотеки, поэтому мы хотим добавить этот модуль в область видимости с помощью &lt;code&gt;use std::env;&lt;/code&gt; линии в верхней части &lt;em&gt;SRC / lib.rs&lt;/em&gt; . Затем мы воспользуемся функцией &lt;code&gt;var&lt;/code&gt; из модуля &lt;code&gt;env&lt;/code&gt; , чтобы проверить переменную среды с именем &lt;code&gt;CASE_INSENSITIVE&lt;/code&gt; , как показано в листинге 12-23.</target>
        </trans-unit>
        <trans-unit id="7b94f451664fd622143f67b7930e9fe770df8ffa" translate="yes" xml:space="preserve">
          <source>Finally, we print the vector using the debug formatter, &lt;code&gt;:?&lt;/code&gt;. Let&amp;rsquo;s try running the code first with no arguments and then with two arguments:</source>
          <target state="translated">Наконец, мы выводим вектор с помощью отладки форматировщика, &lt;code&gt;:?&lt;/code&gt; . Давайте попробуем запустить код сначала без аргументов, а затем с двумя аргументами:</target>
        </trans-unit>
        <trans-unit id="b161bc0b0c419ae3078ec5bae46ff2b23172929b" translate="yes" xml:space="preserve">
          <source>Finally, we&amp;rsquo;ll discuss &lt;em&gt;lifetimes&lt;/em&gt;, a variety of generics that give the compiler information about how references relate to each other. Lifetimes allow us to borrow values in many situations while still enabling the compiler to check that the references are valid.</source>
          <target state="translated">Наконец, мы обсудим &lt;em&gt;время жизни&lt;/em&gt; , множество универсальных шаблонов, которые предоставляют компилятору информацию о том, как ссылки соотносятся друг с другом. Время жизни позволяет нам заимствовать значения во многих ситуациях, при этом позволяя компилятору проверять правильность ссылок.</target>
        </trans-unit>
        <trans-unit id="d7a0dc1697c1346659c0be4f103861518f7b9d81" translate="yes" xml:space="preserve">
          <source>Finally, we&amp;rsquo;ll explore some advanced features related to functions and closures, which include function pointers and returning closures.</source>
          <target state="translated">Наконец, мы рассмотрим некоторые расширенные функции, связанные с функциями и замыканиями, которые включают указатели на функции и возвращаемые замыкания.</target>
        </trans-unit>
        <trans-unit id="171b5cf2cd61ebf1db80d501121ab244d56de9bf" translate="yes" xml:space="preserve">
          <source>Find a thread pool crate on &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; and implement a similar web server using the crate instead. Then compare its API and robustness to the thread pool we implemented.</source>
          <target state="translated">Найдите ящик пула потоков на &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; и реализуйте аналогичный веб-сервер, используя вместо этого ящик. Затем сравните его API и надежность с реализованным нами пулом потоков.</target>
        </trans-unit>
        <trans-unit id="46a827a2f0dc244988c76bf6fe0fe311647c9125" translate="yes" xml:space="preserve">
          <source>Find the maximum value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60191f2292bd928f112e13ade98b13a4839ed4f4" translate="yes" xml:space="preserve">
          <source>Finds the maximum of the current value and the argument &lt;code&gt;val&lt;/code&gt;, and sets the new value to the result.</source>
          <target state="translated">Находит максимум текущего значения и аргумента &lt;code&gt;val&lt;/code&gt; и устанавливает новое значение для результата.</target>
        </trans-unit>
        <trans-unit id="498de5df28b597678df8cbe9a80720213d72aed5" translate="yes" xml:space="preserve">
          <source>Finds the minimum of the current value and the argument &lt;code&gt;val&lt;/code&gt;, and sets the new value to the result.</source>
          <target state="translated">Находит минимум текущего значения и аргумента &lt;code&gt;val&lt;/code&gt; и устанавливает новое значение для результата.</target>
        </trans-unit>
        <trans-unit id="e3e69bc01095a6f3fac0836e7beb312d9c2aefe1" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;a href=&quot;enum.searchstep#variant.Match&quot;&gt;&lt;code&gt;Match&lt;/code&gt;&lt;/a&gt; result. See &lt;a href=&quot;trait.reversesearcher#tymethod.next_back&quot;&gt;&lt;code&gt;next_back()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0385924037131ded8a259e11b4749e29f93d51" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;a href=&quot;enum.searchstep#variant.Match&quot;&gt;&lt;code&gt;Match&lt;/code&gt;&lt;/a&gt; result. See &lt;a href=&quot;trait.reversesearcher#tymethod.next_back&quot;&gt;&lt;code&gt;next_back()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;trait.reversesearcher#method.next_match_back&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a10a45ca33d7ae22aa5bce3d25e091693c4a83a" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;a href=&quot;enum.searchstep#variant.Match&quot;&gt;&lt;code&gt;Match&lt;/code&gt;&lt;/a&gt; result. See &lt;a href=&quot;trait.searcher#tymethod.next&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69156046927a7cd67c7d9e462b0e5fcab34a0d88" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;a href=&quot;enum.searchstep#variant.Match&quot;&gt;&lt;code&gt;Match&lt;/code&gt;&lt;/a&gt; result. See &lt;a href=&quot;trait.searcher#tymethod.next&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;trait.searcher#method.next_match&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1adaf75dd08f31b2a6e16fb196782a3e2358d10d" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;a href=&quot;enum.searchstep#variant.Reject&quot;&gt;&lt;code&gt;Reject&lt;/code&gt;&lt;/a&gt; result. See &lt;a href=&quot;trait.reversesearcher#tymethod.next_back&quot;&gt;&lt;code&gt;next_back()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a293f6cc0a4dc35516ad7c5ff771448e15ba3002" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;a href=&quot;enum.searchstep#variant.Reject&quot;&gt;&lt;code&gt;Reject&lt;/code&gt;&lt;/a&gt; result. See &lt;a href=&quot;trait.reversesearcher#tymethod.next_back&quot;&gt;&lt;code&gt;next_back()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;trait.reversesearcher#method.next_reject_back&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcaccecdc2e217c486e841419f3a046ccb423510" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;a href=&quot;enum.searchstep#variant.Reject&quot;&gt;&lt;code&gt;Reject&lt;/code&gt;&lt;/a&gt; result. See &lt;a href=&quot;trait.searcher#tymethod.next&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.searcher#method.next_match&quot;&gt;&lt;code&gt;next_match()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33f904b27576d8886562d66556bcac59bfa6d4c" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;a href=&quot;enum.searchstep#variant.Reject&quot;&gt;&lt;code&gt;Reject&lt;/code&gt;&lt;/a&gt; result. See &lt;a href=&quot;trait.searcher#tymethod.next&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.searcher#method.next_match&quot;&gt;&lt;code&gt;next_match()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;trait.searcher#method.next_reject&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e15e49aba2d1097c5b0c90f18a8985868ff5345" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;code&gt;Match&lt;/code&gt; result. See &lt;code&gt;next()&lt;/code&gt;</source>
          <target state="translated">Находит следующий результат &lt;code&gt;Match&lt;/code&gt; . См. &lt;code&gt;next()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f756114721031a50a5d8ac031e3faff85aa6ddf5" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;code&gt;Match&lt;/code&gt; result. See &lt;code&gt;next()&lt;/code&gt;&lt;a href=&quot;trait.searcher#method.next_match&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Находит следующий результат &lt;code&gt;Match&lt;/code&gt; . См. &lt;code&gt;next()&lt;/code&gt; &lt;a href=&quot;trait.searcher#method.next_match&quot;&gt;Подробнее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2240ff0cf3b8d663704cb6ee664b2dad69c1451" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;code&gt;Match&lt;/code&gt; result. See &lt;code&gt;next_back()&lt;/code&gt;</source>
          <target state="translated">Находит следующий результат &lt;code&gt;Match&lt;/code&gt; . См. &lt;code&gt;next_back()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b818e5dcb2a1ad45e7017c0a12a4f4decc1c165c" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;code&gt;Reject&lt;/code&gt; result. See &lt;code&gt;next()&lt;/code&gt; and &lt;code&gt;next_match()&lt;/code&gt;</source>
          <target state="translated">Находит следующий результат &lt;code&gt;Reject&lt;/code&gt; . Смотрите &lt;code&gt;next()&lt;/code&gt; и &lt;code&gt;next_match()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b8a778d42413c82824cbf998f891d30368b19e92" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;code&gt;Reject&lt;/code&gt; result. See &lt;code&gt;next()&lt;/code&gt; and &lt;code&gt;next_match()&lt;/code&gt;&lt;a href=&quot;trait.searcher#method.next_reject&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Находит следующий результат &lt;code&gt;Reject&lt;/code&gt; . Смотрите &lt;code&gt;next()&lt;/code&gt; и &lt;code&gt;next_match()&lt;/code&gt; &lt;a href=&quot;trait.searcher#method.next_reject&quot;&gt;Подробнее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4ca03f0531ac97b63f1238433b5fa19d39bf3db" translate="yes" xml:space="preserve">
          <source>Finds the next &lt;code&gt;Reject&lt;/code&gt; result. See &lt;code&gt;next_back()&lt;/code&gt;</source>
          <target state="translated">Находит следующий результат &lt;code&gt;Reject&lt;/code&gt; . См. &lt;code&gt;next_back()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71299e80a415886028dd476494a1f27b4e8c0c3d" translate="yes" xml:space="preserve">
          <source>Finishes output and returns any error encountered.</source>
          <target state="translated">Завершает вывод и возвращает любую обнаруженную ошибку.</target>
        </trans-unit>
        <trans-unit id="2aa5b8ef6d4b44127ec3baa7d85c821bd5d9e7fb" translate="yes" xml:space="preserve">
          <source>First of all, The Rust Standard Library is divided into a number of focused modules, &lt;a href=&quot;#modules&quot;&gt;all listed further down this page&lt;/a&gt;. These modules are the bedrock upon which all of Rust is forged, and they have mighty names like &lt;a href=&quot;slice/index&quot;&gt;&lt;code&gt;std::slice&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmp/index&quot;&gt;&lt;code&gt;std::cmp&lt;/code&gt;&lt;/a&gt;. Modules' documentation typically includes an overview of the module along with examples, and are a smart place to start familiarizing yourself with the library.</source>
          <target state="translated">Прежде всего, стандартная библиотека Rust разделена на несколько специализированных модулей, &lt;a href=&quot;#modules&quot;&gt;все они перечислены ниже на этой странице&lt;/a&gt; . Эти модули являются основой, на которой выкован весь Rust, и у них есть могущественные имена, такие как &lt;a href=&quot;slice/index&quot;&gt; &lt;code&gt;std::slice&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;cmp/index&quot;&gt; &lt;code&gt;std::cmp&lt;/code&gt; &lt;/a&gt; . Документация по модулям обычно включает в себя обзор модуля вместе с примерами и является хорошей отправной точкой для знакомства с библиотекой.</target>
        </trans-unit>
        <trans-unit id="fc7b5a52488afcf282a02fd4d0b848ba0846b2b9" translate="yes" xml:space="preserve">
          <source>First, &lt;code&gt;s2&lt;/code&gt; has an &lt;code&gt;&amp;amp;&lt;/code&gt;, meaning that we&amp;rsquo;re adding a &lt;em&gt;reference&lt;/em&gt; of the second string to the first string because of the &lt;code&gt;s&lt;/code&gt; parameter in the &lt;code&gt;add&lt;/code&gt; function: we can only add a &lt;code&gt;&amp;amp;str&lt;/code&gt; to a &lt;code&gt;String&lt;/code&gt;; we can&amp;rsquo;t add two &lt;code&gt;String&lt;/code&gt; values together. But wait&amp;mdash;the type of &lt;code&gt;&amp;amp;s2&lt;/code&gt; is &lt;code&gt;&amp;amp;String&lt;/code&gt;, not &lt;code&gt;&amp;amp;str&lt;/code&gt;, as specified in the second parameter to &lt;code&gt;add&lt;/code&gt;. So why does Listing 8-18 compile?</source>
          <target state="translated">Во-первых, &lt;code&gt;s2&lt;/code&gt; имеет &lt;code&gt;&amp;amp;&lt;/code&gt; , что означает, что мы добавляем &lt;em&gt;ссылку&lt;/em&gt; на вторую строку к первой строке из-за параметра &lt;code&gt;s&lt;/code&gt; в функции &lt;code&gt;add&lt;/code&gt; : мы можем добавить только &lt;code&gt;&amp;amp;str&lt;/code&gt; к &lt;code&gt;String&lt;/code&gt; ; мы не можем сложить два значения &lt;code&gt;String&lt;/code&gt; вместе. Но подождите - тип &lt;code&gt;&amp;amp;s2&lt;/code&gt; - &lt;code&gt;&amp;amp;String&lt;/code&gt; , а не &lt;code&gt;&amp;amp;str&lt;/code&gt; , как указано во втором &lt;code&gt;add&lt;/code&gt; параметре . Так почему же листинг 8-18 компилируется?</target>
        </trans-unit>
        <trans-unit id="2149e186bda6874699886cb87496264d05159bfb" translate="yes" xml:space="preserve">
          <source>First, Listing 5-6 shows how we create a new &lt;code&gt;User&lt;/code&gt; instance in &lt;code&gt;user2&lt;/code&gt; without the update syntax. We set new values for &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;username&lt;/code&gt; but otherwise use the same values from &lt;code&gt;user1&lt;/code&gt; that we created in Listing 5-2.</source>
          <target state="translated">Во-первых, в листинге 5-6 показано, как мы создаем новый экземпляр &lt;code&gt;User&lt;/code&gt; в &lt;code&gt;user2&lt;/code&gt; без синтаксиса обновления. Мы устанавливаем новые значения для &lt;code&gt;email&lt;/code&gt; и &lt;code&gt;username&lt;/code&gt; но в остальном используем те же значения из &lt;code&gt;user1&lt;/code&gt; , которые мы создали в листинге 5-2.</target>
        </trans-unit>
        <trans-unit id="2b41d69eb26a6b40f4aae2f050715fea536b1f0a" translate="yes" xml:space="preserve">
          <source>First, Rust style is to indent with four spaces, not a tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3040dcb3a93d5116af8b98dddf1679cc848e8028" translate="yes" xml:space="preserve">
          <source>First, a set of parentheses encompasses the whole pattern. A dollar sign (&lt;code&gt;$&lt;/code&gt;) is next, followed by a set of parentheses that captures values that match the pattern within the parentheses for use in the replacement code. Within &lt;code&gt;$()&lt;/code&gt; is &lt;code&gt;$x:expr&lt;/code&gt;, which matches any Rust expression and gives the expression the name &lt;code&gt;$x&lt;/code&gt;.</source>
          <target state="translated">Во-первых, набор круглых скобок охватывает весь шаблон. Далее идет знак доллара ( &lt;code&gt;$&lt;/code&gt; ), за которым следует набор круглых скобок, в которых фиксируются значения, которые соответствуют шаблону в круглых скобках для использования в коде замены. Внутри &lt;code&gt;$()&lt;/code&gt; находится &lt;code&gt;$x:expr&lt;/code&gt; , которое соответствует любому выражению Rust и дает выражению имя &lt;code&gt;$x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36f043a38969ebd0c1100d1946c0070f78f5083d" translate="yes" xml:space="preserve">
          <source>First, in Listing 16-6, we&amp;rsquo;ll create a channel but not do anything with it. Note that this won&amp;rsquo;t compile yet because Rust can&amp;rsquo;t tell what type of values we want to send over the channel.</source>
          <target state="translated">Сначала в листинге 16-6 мы создадим канал, но ничего с ним не будем делать. Обратите внимание, что это еще не компилируется, потому что Rust не может сказать, какой тип значений мы хотим отправить по каналу.</target>
        </trans-unit>
        <trans-unit id="a904d8b464a341807b2afce181cf10f340831790" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s explore how our code might look if it did create a new thread for every connection. As mentioned earlier, this isn&amp;rsquo;t our final plan due to the problems with potentially spawning an unlimited number of threads, but it is a starting point. Listing 20-11 shows the changes to make to &lt;code&gt;main&lt;/code&gt; to spawn a new thread to handle each stream within the &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">Во-первых, давайте посмотрим, как мог бы выглядеть наш код, если бы он действительно создавал новый поток для каждого соединения. Как упоминалось ранее, это не наш окончательный план из-за проблем с потенциальным созданием неограниченного количества потоков, но это отправная точка. В листинге 20-11 показаны изменения, которые необходимо внести в &lt;code&gt;main&lt;/code&gt; , чтобы создать новый поток для обработки каждого потока в цикле &lt;code&gt;for&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2d8fc1aab0782183ce43b898abd828e1a971de0" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s observe how the content printed by &lt;code&gt;minigrep&lt;/code&gt; is currently being written to standard output, including any error messages we want to write to standard error instead. We&amp;rsquo;ll do that by redirecting the standard output stream to a file while also intentionally causing an error. We won&amp;rsquo;t redirect the standard error stream, so any content sent to standard error will continue to display on the screen.</source>
          <target state="translated">Во-первых, давайте посмотрим, как контент, напечатанный &lt;code&gt;minigrep&lt;/code&gt; , в настоящее время записывается в стандартный вывод, включая любые сообщения об ошибках, которые мы хотим вместо этого записать в стандартную ошибку. Мы сделаем это, перенаправив стандартный поток вывода в файл, при этом намеренно вызывая ошибку. Мы не будем перенаправлять стандартный поток ошибок, поэтому любой контент, отправленный со стандартной ошибкой, будет продолжать отображаться на экране.</target>
        </trans-unit>
        <trans-unit id="299d434ba9482e48711594e406595923ccc6a45d" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s take a look at the ownership rules. Keep these rules in mind as we work through the examples that illustrate them:</source>
          <target state="translated">Во-первых, давайте посмотрим на правила владения. Помните об этих правилах, пока мы прорабатываем примеры, которые их иллюстрируют:</target>
        </trans-unit>
        <trans-unit id="1e6993f10ab80d08ed459d70a6e9b72bea9f1bb6" translate="yes" xml:space="preserve">
          <source>First, notice that all the tuple code in the variable declaration and the function return value is gone. Second, note that we pass &lt;code&gt;&amp;amp;s1&lt;/code&gt; into &lt;code&gt;calculate_length&lt;/code&gt; and, in its definition, we take &lt;code&gt;&amp;amp;String&lt;/code&gt; rather than &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">Во-первых, обратите внимание, что весь код кортежа в объявлении переменной и возвращаемое значение функции исчез. Во-вторых, обратите внимание, что мы передаем &lt;code&gt;&amp;amp;s1&lt;/code&gt; в &lt;code&gt;calculate_length&lt;/code&gt; и в его определении мы берем &lt;code&gt;&amp;amp;String&lt;/code&gt; а не &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60e88a2c11a7190bdc4e6ea4f275db2a41748c26" translate="yes" xml:space="preserve">
          <source>First, our &lt;code&gt;main&lt;/code&gt; function now performs two tasks: it parses arguments and reads files. For such a small function, this isn&amp;rsquo;t a major problem. However, if we continue to grow our program inside &lt;code&gt;main&lt;/code&gt;, the number of separate tasks the &lt;code&gt;main&lt;/code&gt; function handles will increase. As a function gains responsibilities, it becomes more difficult to reason about, harder to test, and harder to change without breaking one of its parts. It&amp;rsquo;s best to separate functionality so each function is responsible for one task.</source>
          <target state="translated">Во-первых, наша &lt;code&gt;main&lt;/code&gt; функция теперь выполняет две задачи: анализирует аргументы и читает файлы. Для такой маленькой функции это не большая проблема. Однако, если мы продолжим расширять нашу программу внутри &lt;code&gt;main&lt;/code&gt; , количество отдельных задач, обрабатываемых функцией &lt;code&gt;main&lt;/code&gt; , увеличится. По мере того как функция получает ответственность, становится все труднее обдумывать ее, труднее тестировать и труднее изменить, не нарушив одну из ее частей. Лучше всего разделить функциональность, чтобы каждая функция отвечала за одну задачу.</target>
        </trans-unit>
        <trans-unit id="2531f22fd6a5bf69e9d2107ddeefb2d48bde3d1b" translate="yes" xml:space="preserve">
          <source>First, we add a &lt;code&gt;use&lt;/code&gt; line: &lt;code&gt;use rand::Rng&lt;/code&gt;. The &lt;code&gt;Rng&lt;/code&gt; trait defines methods that random number generators implement, and this trait must be in scope for us to use those methods. Chapter 10 will cover traits in detail.</source>
          <target state="translated">Во- первых, мы добавим &lt;code&gt;use&lt;/code&gt; линии: &lt;code&gt;use rand::Rng&lt;/code&gt; . В &lt;code&gt;Rng&lt;/code&gt; Trait определяет методы, генераторы случайных чисел реализовать, и эта черта должна находиться в области видимости для нас использовать эти методы. В главе 10 мы подробно рассмотрим черты характера.</target>
        </trans-unit>
        <trans-unit id="5620d966096cc525a97c7b483a8ab91d3a93c5d6" translate="yes" xml:space="preserve">
          <source>First, we add another &lt;code&gt;use&lt;/code&gt; statement to bring in a relevant part of the standard library: we need &lt;code&gt;std::fs&lt;/code&gt; to handle files.</source>
          <target state="translated">Во-первых, мы добавляем еще один оператор &lt;code&gt;use&lt;/code&gt; чтобы включить соответствующую часть стандартной библиотеки: нам нужен &lt;code&gt;std::fs&lt;/code&gt; для обработки файлов.</target>
        </trans-unit>
        <trans-unit id="bc25543e6bea82949a22fa47ac93b7c3b107613c" translate="yes" xml:space="preserve">
          <source>First, we bring the &lt;code&gt;std::env&lt;/code&gt; module into scope with a &lt;code&gt;use&lt;/code&gt; statement so we can use its &lt;code&gt;args&lt;/code&gt; function. Notice that the &lt;code&gt;std::env::args&lt;/code&gt; function is nested in two levels of modules. As we discussed in &lt;a href=&quot;ch07-04-bringing-paths-into-scope-with-the-use-keyword#creating-idiomatic-use-paths&quot;&gt;Chapter 7&lt;/a&gt;, in cases where the desired function is nested in more than one module, it&amp;rsquo;s conventional to bring the parent module into scope rather than the function. By doing so, we can easily use other functions from &lt;code&gt;std::env&lt;/code&gt;. It&amp;rsquo;s also less ambiguous than adding &lt;code&gt;use std::env::args&lt;/code&gt; and then calling the function with just &lt;code&gt;args&lt;/code&gt;, because &lt;code&gt;args&lt;/code&gt; might easily be mistaken for a function that&amp;rsquo;s defined in the current module.</source>
          <target state="translated">Сначала мы &lt;code&gt;std::env&lt;/code&gt; модуль std :: env в область видимости с &lt;code&gt;use&lt;/code&gt; оператора use, чтобы мы могли использовать его функцию &lt;code&gt;args&lt;/code&gt; . Обратите внимание, что функция &lt;code&gt;std::env::args&lt;/code&gt; вложена в два уровня модулей. Как мы обсуждали в &lt;a href=&quot;ch07-04-bringing-paths-into-scope-with-the-use-keyword#creating-idiomatic-use-paths&quot;&gt;главе 7&lt;/a&gt; , в случаях, когда желаемая функция вложена более чем в один модуль, обычно в область видимости помещается родительский модуль, а не функция. Поступая так, мы можем легко использовать другие функции из &lt;code&gt;std::env&lt;/code&gt; . Это также менее двусмысленно, чем добавление &lt;code&gt;use std::env::args&lt;/code&gt; и последующий вызов функции только с &lt;code&gt;args&lt;/code&gt; , потому что &lt;code&gt;args&lt;/code&gt; может быть легко ошибочно принят за функцию, определенную в текущем модуле.</target>
        </trans-unit>
        <trans-unit id="77c43259a6ef4fde9dcd2d5039e611a741bb307a" translate="yes" xml:space="preserve">
          <source>First, we call &lt;code&gt;into_iter()&lt;/code&gt; on the value. Then, we match on the iterator that returns, calling &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; over and over until we see a &lt;code&gt;None&lt;/code&gt;. At that point, we &lt;code&gt;break&lt;/code&gt; out of the loop, and we're done iterating.</source>
          <target state="translated">Сначала мы вызываем &lt;code&gt;into_iter()&lt;/code&gt; для значения. Затем мы сопоставляем итератор, который возвращается, вызывая &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt; снова и снова, пока не увидим &lt;code&gt;None&lt;/code&gt; . В этот момент, мы &lt;code&gt;break&lt;/code&gt; из петли, и мы сделали итерацию.</target>
        </trans-unit>
        <trans-unit id="6ab5c3115b5c520a97acc958c118c302f43db0ef" translate="yes" xml:space="preserve">
          <source>First, we create a new trait named &lt;code&gt;FnBox&lt;/code&gt;. This trait has the one method &lt;code&gt;call_box&lt;/code&gt;, which is similar to the &lt;code&gt;call&lt;/code&gt; methods on the other &lt;code&gt;Fn*&lt;/code&gt; traits except that it takes &lt;code&gt;self: Box&amp;lt;Self&amp;gt;&lt;/code&gt; to take ownership of &lt;code&gt;self&lt;/code&gt; and move the value out of the &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Сначала мы создаем новый &lt;code&gt;FnBox&lt;/code&gt; именем FnBox . Эта черта имеет один метод &lt;code&gt;call_box&lt;/code&gt; , который похож на &lt;code&gt;call&lt;/code&gt; методы на другом &lt;code&gt;Fn*&lt;/code&gt; черта кроме того, что он принимает &lt;code&gt;self: Box&amp;lt;Self&amp;gt;&lt;/code&gt; , чтобы взять на себя ответственность &lt;code&gt;self&lt;/code&gt; и переместить значение из &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ff037ac0d1711710cacef25650f7925ee9931dc" translate="yes" xml:space="preserve">
          <source>First, we define a struct named &lt;code&gt;Guess&lt;/code&gt; that has a field named &lt;code&gt;value&lt;/code&gt; that holds an &lt;code&gt;i32&lt;/code&gt;. This is where the number will be stored.</source>
          <target state="translated">Сначала мы определяем структуру с именем &lt;code&gt;Guess&lt;/code&gt; ,у которой есть поле с именем &lt;code&gt;value&lt;/code&gt; , содержащее &lt;code&gt;i32&lt;/code&gt; . Здесь будет храниться номер.</target>
        </trans-unit>
        <trans-unit id="7d453ea285cf874f5e20bf0a44d8de3966ff594c" translate="yes" xml:space="preserve">
          <source>First, we had to change &lt;code&gt;s&lt;/code&gt; to be &lt;code&gt;mut&lt;/code&gt;. Then we had to create a mutable reference with &lt;code&gt;&amp;amp;mut s&lt;/code&gt; and accept a mutable reference with &lt;code&gt;some_string: &amp;amp;mut String&lt;/code&gt;.</source>
          <target state="translated">Во-первых, нам пришлось изменить &lt;code&gt;s&lt;/code&gt; на &lt;code&gt;mut&lt;/code&gt; . Затем нам пришлось создать изменяемую ссылку с помощью &lt;code&gt;&amp;amp;mut s&lt;/code&gt; и принять изменяемую ссылку с помощью &lt;code&gt;some_string: &amp;amp;mut String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1a3297145da0b9ddf78f8d191794fb1446a4150" translate="yes" xml:space="preserve">
          <source>First, we hardcode the data corresponding to the &lt;em&gt;/&lt;/em&gt; request into the &lt;code&gt;get&lt;/code&gt; variable. Because we&amp;rsquo;re reading raw bytes into the buffer, we transform &lt;code&gt;get&lt;/code&gt; into a byte string by adding the &lt;code&gt;b&quot;&quot;&lt;/code&gt; byte string syntax at the start of the content data. Then we check whether &lt;code&gt;buffer&lt;/code&gt; starts with the bytes in &lt;code&gt;get&lt;/code&gt;. If it does, it means we&amp;rsquo;ve received a well-formed request to &lt;em&gt;/&lt;/em&gt;, which is the success case we&amp;rsquo;ll handle in the &lt;code&gt;if&lt;/code&gt; block that returns the contents of our HTML file.</source>
          <target state="translated">Сначала мы жестко кодируем данные, соответствующие запросу &lt;em&gt;/,&lt;/em&gt; в переменную &lt;code&gt;get&lt;/code&gt; . Поскольку мы читаем необработанные байты в буфер, мы преобразуем &lt;code&gt;get&lt;/code&gt; в байтовую строку, добавляя синтаксис байтовой строки &lt;code&gt;b&quot;&quot;&lt;/code&gt; в начало данных содержимого. Затем мы проверяем, начинается ли &lt;code&gt;buffer&lt;/code&gt; с байтов в &lt;code&gt;get&lt;/code&gt; . Если это так, это означает, что мы получили правильно сформированный запрос к &lt;em&gt;/&lt;/em&gt; , и это успешный случай, который мы обработаем в блоке &lt;code&gt;if&lt;/code&gt; , который возвращает содержимое нашего HTML-файла.</target>
        </trans-unit>
        <trans-unit id="67c337bec6fe5e9baa6919a72ca1dc381f0c72e6" translate="yes" xml:space="preserve">
          <source>First, we loop through each of the thread pool &lt;code&gt;workers&lt;/code&gt;. We use &lt;code&gt;&amp;amp;mut&lt;/code&gt; for this because &lt;code&gt;self&lt;/code&gt; is a mutable reference, and we also need to be able to mutate &lt;code&gt;worker&lt;/code&gt;. For each worker, we print a message saying that this particular worker is shutting down, and then we call &lt;code&gt;join&lt;/code&gt; on that worker&amp;rsquo;s thread. If the call to &lt;code&gt;join&lt;/code&gt; fails, we use &lt;code&gt;unwrap&lt;/code&gt; to make Rust panic and go into an ungraceful shutdown.</source>
          <target state="translated">Сначала мы перебираем каждого из &lt;code&gt;workers&lt;/code&gt; пула потоков . Мы используем для этого &lt;code&gt;&amp;amp;mut&lt;/code&gt; потому что &lt;code&gt;self&lt;/code&gt; - это изменяемая ссылка, и нам также нужно иметь возможность изменять &lt;code&gt;worker&lt;/code&gt; . Для каждого воркера мы печатаем сообщение о том, что этот конкретный воркер закрывается, а затем вызываем &lt;code&gt;join&lt;/code&gt; для этого рабочего потока. Если вызов &lt;code&gt;join&lt;/code&gt; терпит неудачу, мы используем &lt;code&gt;unwrap&lt;/code&gt; чтобы заставить Rust паниковать и некорректно завершить работу .</target>
        </trans-unit>
        <trans-unit id="4c15dd08c54ccaef878863fcce7531d8669281a2" translate="yes" xml:space="preserve">
          <source>First, we lowercase the &lt;code&gt;query&lt;/code&gt; string and store it in a shadowed variable with the same name. Calling &lt;code&gt;to_lowercase&lt;/code&gt; on the query is necessary so no matter whether the user&amp;rsquo;s query is &lt;code&gt;&quot;rust&quot;&lt;/code&gt;, &lt;code&gt;&quot;RUST&quot;&lt;/code&gt;, &lt;code&gt;&quot;Rust&quot;&lt;/code&gt;, or &lt;code&gt;&quot;rUsT&quot;&lt;/code&gt;, we&amp;rsquo;ll treat the query as if it were &lt;code&gt;&quot;rust&quot;&lt;/code&gt; and be insensitive to the case.</source>
          <target state="translated">Сначала мы вводим строку &lt;code&gt;query&lt;/code&gt; нижний регистр и сохраняем ее в затененной переменной с тем же именем. Вызов &lt;code&gt;to_lowercase&lt;/code&gt; в запросе необходим, поэтому независимо от того, является ли запрос пользователя &lt;code&gt;&quot;rust&quot;&lt;/code&gt; , &lt;code&gt;&quot;RUST&quot;&lt;/code&gt; , &lt;code&gt;&quot;Rust&quot;&lt;/code&gt; или &lt;code&gt;&quot;rUsT&quot;&lt;/code&gt; , мы будем обрабатывать запрос, как если бы он был &lt;code&gt;&quot;rust&quot;&lt;/code&gt; , и будем нечувствительны к кейс.</target>
        </trans-unit>
        <trans-unit id="65f94c7193ac8d89c46d0cf4b30dc2e56b5807e0" translate="yes" xml:space="preserve">
          <source>First, we lowercase the &lt;code&gt;query&lt;/code&gt; string and store it in a shadowed variable with the same name. Calling &lt;code&gt;to_lowercase&lt;/code&gt; on the query is necessary so no matter whether the user&amp;rsquo;s query is &lt;code&gt;&quot;rust&quot;&lt;/code&gt;, &lt;code&gt;&quot;RUST&quot;&lt;/code&gt;, &lt;code&gt;&quot;Rust&quot;&lt;/code&gt;, or &lt;code&gt;&quot;rUsT&quot;&lt;/code&gt;, we&amp;rsquo;ll treat the query as if it were &lt;code&gt;&quot;rust&quot;&lt;/code&gt; and be insensitive to the case. While &lt;code&gt;to_lowercase&lt;/code&gt; will handle basic Unicode, it won't be 100% accurate. If we were writing a real application, we'd want to do a bit more work here, but this section is about environment variables, not Unicode, so we'll leave it at that here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23da79e53710cbb9d9524e2acf5446ad6eea5d1a" translate="yes" xml:space="preserve">
          <source>First, we&amp;rsquo;ll review how to extract a function to reduce code duplication. Next, we&amp;rsquo;ll use the same technique to make a generic function from two functions that differ only in the types of their parameters. We&amp;rsquo;ll also explain how to use generic types in struct and enum definitions.</source>
          <target state="translated">Сначала мы рассмотрим, как извлечь функцию, чтобы уменьшить дублирование кода. Далее мы воспользуемся той же техникой, чтобы создать универсальную функцию из двух функций, которые отличаются только типами своих параметров. Мы также объясним, как использовать универсальные типы в определениях структур и перечислений.</target>
        </trans-unit>
        <trans-unit id="ab7b98b1216839b90c2ba36a3e1d94b2940e258c" translate="yes" xml:space="preserve">
          <source>First, we&amp;rsquo;ll use a method named &lt;code&gt;level&lt;/code&gt; whose only parameter is a reference to &lt;code&gt;self&lt;/code&gt; and whose return value is an &lt;code&gt;i32&lt;/code&gt;, which is not a reference to anything:</source>
          <target state="translated">Во-первых, мы будем использовать метод с именем &lt;code&gt;level&lt;/code&gt; , единственный параметр которого - ссылка на &lt;code&gt;self&lt;/code&gt; , а возвращаемое значение - &lt;code&gt;i32&lt;/code&gt; , который ни на что не ссылается:</target>
        </trans-unit>
        <trans-unit id="ebc1b5224daaa43800af474dfe2a67270d2c64a8" translate="yes" xml:space="preserve">
          <source>First, you aren&amp;rsquo;t allowed to use &lt;code&gt;mut&lt;/code&gt; with constants. Constants aren&amp;rsquo;t just immutable by default&amp;mdash;they&amp;rsquo;re always immutable.</source>
          <target state="translated">Во-первых, вам не разрешено использовать &lt;code&gt;mut&lt;/code&gt; с константами. Константы не просто неизменяемы по умолчанию - они всегда неизменны.</target>
        </trans-unit>
        <trans-unit id="a37b907fb3b08482758f4b94eb7905467643c0cc" translate="yes" xml:space="preserve">
          <source>First: what are thin and fat pointers?</source>
          <target state="translated">Первое:что такое тонкие и толстые указки?</target>
        </trans-unit>
        <trans-unit id="8f4320a9bbe54780e4b1be068359ce0c3e42263e" translate="yes" xml:space="preserve">
          <source>Fix Your Code with &lt;code id=&quot;fix-your-code-with-rustfix&quot;&gt;rustfix&lt;/code&gt;</source>
          <target state="translated">Исправьте свой код с помощью &lt;code id=&quot;fix-your-code-with-rustfix&quot;&gt;rustfix&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="456cf8a255eb59ebf894cb52911a86af4e0bff54" translate="yes" xml:space="preserve">
          <source>Fixed example:</source>
          <target state="translated">Исправлен пример:</target>
        </trans-unit>
        <trans-unit id="46b15ff97ce4188ff129110dc0f200273d75d6f6" translate="yes" xml:space="preserve">
          <source>FixedSizeArray</source>
          <target state="translated">FixedSizeArray</target>
        </trans-unit>
        <trans-unit id="10febdb2af33240d31157815d06600628d271c1b" translate="yes" xml:space="preserve">
          <source>FixedSizeArray::as_mut_slice</source>
          <target state="translated">FixedSizeArray::as_mut_slice</target>
        </trans-unit>
        <trans-unit id="f3cdc8722aecf5254db9dc4b899708cf59624ff8" translate="yes" xml:space="preserve">
          <source>FixedSizeArray::as_slice</source>
          <target state="translated">FixedSizeArray::as_slice</target>
        </trans-unit>
        <trans-unit id="74d70129228428cb4a00fa07c90df5cecbd391db" translate="yes" xml:space="preserve">
          <source>Fixing the &lt;code id=&quot;fixing-the-largest-function-with-trait-bounds&quot;&gt;largest&lt;/code&gt; Function with Trait Bounds</source>
          <target state="translated">Исправление самой &lt;code id=&quot;fixing-the-largest-function-with-trait-bounds&quot;&gt;largest&lt;/code&gt; функции с помощью границ признаков</target>
        </trans-unit>
        <trans-unit id="bbed51341da047b6a94c2210a2cc73a851e30623" translate="yes" xml:space="preserve">
          <source>Fixing the Error Handling</source>
          <target state="translated">Устранение ошибок</target>
        </trans-unit>
        <trans-unit id="027245ccd994e4fdf64ec804047d0b807eb6ca26" translate="yes" xml:space="preserve">
          <source>Flag indicating what form of alignment was requested.</source>
          <target state="translated">Флаг,указывающий,какая форма выравнивания была запрошена.</target>
        </trans-unit>
        <trans-unit id="da6ec40326ab64f852f9b68303a74a8d34fcffbf" translate="yes" xml:space="preserve">
          <source>Flags for formatting</source>
          <target state="translated">Флаги для форматирования</target>
        </trans-unit>
        <trans-unit id="c5bda5b47fc05cd947485d9dcbc97c118c87af17" translate="yes" xml:space="preserve">
          <source>FlatMap</source>
          <target state="translated">FlatMap</target>
        </trans-unit>
        <trans-unit id="55f7ffcafa8a176774484e54fc484f1dca47b72e" translate="yes" xml:space="preserve">
          <source>FlatMap::all</source>
          <target state="translated">FlatMap::all</target>
        </trans-unit>
        <trans-unit id="831495e089cc3e2bd763a99a1e31c54c37f852a0" translate="yes" xml:space="preserve">
          <source>FlatMap::any</source>
          <target state="translated">FlatMap::any</target>
        </trans-unit>
        <trans-unit id="f416c20467c8d199e5325633d964ae6b0bdccc36" translate="yes" xml:space="preserve">
          <source>FlatMap::borrow</source>
          <target state="translated">FlatMap::borrow</target>
        </trans-unit>
        <trans-unit id="0f50fa0b8ab26f20cea1f5fb6f3730a5604c35d1" translate="yes" xml:space="preserve">
          <source>FlatMap::borrow_mut</source>
          <target state="translated">FlatMap::borrow_mut</target>
        </trans-unit>
        <trans-unit id="89c9cad149062b6897a19684327c3ae5982ebace" translate="yes" xml:space="preserve">
          <source>FlatMap::by_ref</source>
          <target state="translated">FlatMap::by_ref</target>
        </trans-unit>
        <trans-unit id="c6f0a1b16fccff09f7335c088d321c69b06ca959" translate="yes" xml:space="preserve">
          <source>FlatMap::chain</source>
          <target state="translated">FlatMap::chain</target>
        </trans-unit>
        <trans-unit id="2d45e75c6f6700f82e192c77480ec8d8d907e11e" translate="yes" xml:space="preserve">
          <source>FlatMap::clone</source>
          <target state="translated">FlatMap::clone</target>
        </trans-unit>
        <trans-unit id="e5214baf27582eace148fdb9cb8f95195ba3bf8c" translate="yes" xml:space="preserve">
          <source>FlatMap::clone_from</source>
          <target state="translated">FlatMap::clone_from</target>
        </trans-unit>
        <trans-unit id="c32a40933a63eee1e8a0cbd457ef7c05726a69b2" translate="yes" xml:space="preserve">
          <source>FlatMap::clone_into</source>
          <target state="translated">FlatMap::clone_into</target>
        </trans-unit>
        <trans-unit id="c1f27e08be29b514c198bc7981660e3e47bd811a" translate="yes" xml:space="preserve">
          <source>FlatMap::cloned</source>
          <target state="translated">FlatMap::cloned</target>
        </trans-unit>
        <trans-unit id="4dfb53dc9aa97c2971aa6c756cdbd0bdb3436919" translate="yes" xml:space="preserve">
          <source>FlatMap::cmp</source>
          <target state="translated">FlatMap::cmp</target>
        </trans-unit>
        <trans-unit id="2cdaf60c33826b55dd432eda68ef7f30e20db492" translate="yes" xml:space="preserve">
          <source>FlatMap::collect</source>
          <target state="translated">FlatMap::collect</target>
        </trans-unit>
        <trans-unit id="92b5287378b975cdd6eb3d34fc3ed8fbc47bd575" translate="yes" xml:space="preserve">
          <source>FlatMap::copied</source>
          <target state="translated">FlatMap::copied</target>
        </trans-unit>
        <trans-unit id="6e26ebde4a566056367b49d24d357a4de5ea7ec1" translate="yes" xml:space="preserve">
          <source>FlatMap::count</source>
          <target state="translated">FlatMap::count</target>
        </trans-unit>
        <trans-unit id="c627c3238d8bca5bf9bd82f8615c5b311d3dc317" translate="yes" xml:space="preserve">
          <source>FlatMap::cycle</source>
          <target state="translated">FlatMap::cycle</target>
        </trans-unit>
        <trans-unit id="8c9d482a5ba44802cd6b475ac707537e0b74c551" translate="yes" xml:space="preserve">
          <source>FlatMap::enumerate</source>
          <target state="translated">FlatMap::enumerate</target>
        </trans-unit>
        <trans-unit id="e1b10ed4bcc2c007a3876d69ca7f6998dfc386e9" translate="yes" xml:space="preserve">
          <source>FlatMap::eq</source>
          <target state="translated">FlatMap::eq</target>
        </trans-unit>
        <trans-unit id="59aade0b7a453e9f98a9103c697f12521005318a" translate="yes" xml:space="preserve">
          <source>FlatMap::filter</source>
          <target state="translated">FlatMap::filter</target>
        </trans-unit>
        <trans-unit id="2fdbe05e9dadc13643f106b9eda46a88c0b1a996" translate="yes" xml:space="preserve">
          <source>FlatMap::filter_map</source>
          <target state="translated">FlatMap::filter_map</target>
        </trans-unit>
        <trans-unit id="fad2443193400c8a63870e603e5bca91422f362a" translate="yes" xml:space="preserve">
          <source>FlatMap::find</source>
          <target state="translated">FlatMap::find</target>
        </trans-unit>
        <trans-unit id="125dbed80de4b69dffc0dfe11847e62b883770d9" translate="yes" xml:space="preserve">
          <source>FlatMap::find_map</source>
          <target state="translated">FlatMap::find_map</target>
        </trans-unit>
        <trans-unit id="b6489882f5d9daee9820331897d0b4627133e07c" translate="yes" xml:space="preserve">
          <source>FlatMap::flat_map</source>
          <target state="translated">FlatMap::flat_map</target>
        </trans-unit>
        <trans-unit id="5c844d63a8259face3787e8f3299ac3b95755901" translate="yes" xml:space="preserve">
          <source>FlatMap::flatten</source>
          <target state="translated">FlatMap::flatten</target>
        </trans-unit>
        <trans-unit id="7584f7a4ad8eb0b9e113c6aa4f2d46cf83b69b8c" translate="yes" xml:space="preserve">
          <source>FlatMap::fmt</source>
          <target state="translated">FlatMap::fmt</target>
        </trans-unit>
        <trans-unit id="4278b2b98a5bc75ad2b12d42fb2cec52596d7ebe" translate="yes" xml:space="preserve">
          <source>FlatMap::fold</source>
          <target state="translated">FlatMap::fold</target>
        </trans-unit>
        <trans-unit id="1ffb13409823faf10fd3ae3f3074c8038c60c7da" translate="yes" xml:space="preserve">
          <source>FlatMap::for_each</source>
          <target state="translated">FlatMap::for_each</target>
        </trans-unit>
        <trans-unit id="0fcab2131764cdc3768560c3b1df806cf7dfe63b" translate="yes" xml:space="preserve">
          <source>FlatMap::from</source>
          <target state="translated">FlatMap::from</target>
        </trans-unit>
        <trans-unit id="14f6989573f8625324fdc8b8df9585bc9a1af65d" translate="yes" xml:space="preserve">
          <source>FlatMap::fuse</source>
          <target state="translated">FlatMap::fuse</target>
        </trans-unit>
        <trans-unit id="7ea462adb211e84d27be1814f2efbdec85119daf" translate="yes" xml:space="preserve">
          <source>FlatMap::ge</source>
          <target state="translated">FlatMap::ge</target>
        </trans-unit>
        <trans-unit id="136942cf0fe762e017ee40007f923d9271764888" translate="yes" xml:space="preserve">
          <source>FlatMap::gt</source>
          <target state="translated">FlatMap::gt</target>
        </trans-unit>
        <trans-unit id="56d26cf413c4394c3c690fee39f5f690cddcb862" translate="yes" xml:space="preserve">
          <source>FlatMap::inspect</source>
          <target state="translated">FlatMap::inspect</target>
        </trans-unit>
        <trans-unit id="b1a341556fccb8a6be0a5131d4f93c4c107b492f" translate="yes" xml:space="preserve">
          <source>FlatMap::into</source>
          <target state="translated">FlatMap::into</target>
        </trans-unit>
        <trans-unit id="e7dcc1b2ca70b8d936af84416012126e5732e25e" translate="yes" xml:space="preserve">
          <source>FlatMap::into_iter</source>
          <target state="translated">FlatMap::into_iter</target>
        </trans-unit>
        <trans-unit id="007628a6c352d20c0124a62b84d90c6724624f53" translate="yes" xml:space="preserve">
          <source>FlatMap::is_sorted</source>
          <target state="translated">FlatMap::is_sorted</target>
        </trans-unit>
        <trans-unit id="9129a45f76204f8c0351777e3da2b554a0b582f4" translate="yes" xml:space="preserve">
          <source>FlatMap::is_sorted_by</source>
          <target state="translated">FlatMap::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="d22e20cf5c02a9ebd29f54967389a09e0adfcfd2" translate="yes" xml:space="preserve">
          <source>FlatMap::is_sorted_by_key</source>
          <target state="translated">FlatMap::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="914399f8b8e96bde2c7fd618fdd4c48d1e9f9c6b" translate="yes" xml:space="preserve">
          <source>FlatMap::last</source>
          <target state="translated">FlatMap::last</target>
        </trans-unit>
        <trans-unit id="c9c703d00fbde0472ecac7cb117332c2f00b6308" translate="yes" xml:space="preserve">
          <source>FlatMap::le</source>
          <target state="translated">FlatMap::le</target>
        </trans-unit>
        <trans-unit id="7360f05321dff1711d111ce541e910a129e8d56c" translate="yes" xml:space="preserve">
          <source>FlatMap::lt</source>
          <target state="translated">FlatMap::lt</target>
        </trans-unit>
        <trans-unit id="b2efff963360869fc2ad9335eb94ff36586cd28d" translate="yes" xml:space="preserve">
          <source>FlatMap::map</source>
          <target state="translated">FlatMap::map</target>
        </trans-unit>
        <trans-unit id="e356ce911add6c369fab96edbb719464384bba68" translate="yes" xml:space="preserve">
          <source>FlatMap::max</source>
          <target state="translated">FlatMap::max</target>
        </trans-unit>
        <trans-unit id="257a5dd5d73e305052601eebdee4a4144216f407" translate="yes" xml:space="preserve">
          <source>FlatMap::max_by</source>
          <target state="translated">FlatMap::max_by</target>
        </trans-unit>
        <trans-unit id="34e9a3ee89c7633227b0c7e3080f159ebe1f6745" translate="yes" xml:space="preserve">
          <source>FlatMap::max_by_key</source>
          <target state="translated">FlatMap::max_by_key</target>
        </trans-unit>
        <trans-unit id="94181b6165e939e7637c998da161b8e6499990f0" translate="yes" xml:space="preserve">
          <source>FlatMap::min</source>
          <target state="translated">FlatMap::min</target>
        </trans-unit>
        <trans-unit id="bb1e852b532bd04e8a57ef7446395d8d5fe5cc58" translate="yes" xml:space="preserve">
          <source>FlatMap::min_by</source>
          <target state="translated">FlatMap::min_by</target>
        </trans-unit>
        <trans-unit id="de471f0806e95f0c8e23e763226ce017d6b1b108" translate="yes" xml:space="preserve">
          <source>FlatMap::min_by_key</source>
          <target state="translated">FlatMap::min_by_key</target>
        </trans-unit>
        <trans-unit id="6c6f160abb7fb76039410b7ac9b852e5021ff6b8" translate="yes" xml:space="preserve">
          <source>FlatMap::ne</source>
          <target state="translated">FlatMap::ne</target>
        </trans-unit>
        <trans-unit id="413f510bb1b95afc92fa6eefe3f8c079cc4a4473" translate="yes" xml:space="preserve">
          <source>FlatMap::next</source>
          <target state="translated">FlatMap::next</target>
        </trans-unit>
        <trans-unit id="112103f858355cb1a8010b4285b08f7678bbaf9f" translate="yes" xml:space="preserve">
          <source>FlatMap::next_back</source>
          <target state="translated">FlatMap::next_back</target>
        </trans-unit>
        <trans-unit id="447ac571074b370963af84bb1ccc70cfd30971dd" translate="yes" xml:space="preserve">
          <source>FlatMap::nth</source>
          <target state="translated">FlatMap::nth</target>
        </trans-unit>
        <trans-unit id="19960eeb0a79269d9090196f451f486631f2b2fa" translate="yes" xml:space="preserve">
          <source>FlatMap::nth_back</source>
          <target state="translated">FlatMap::nth_back</target>
        </trans-unit>
        <trans-unit id="9fc3ac65efe50b7b9e8c052a3c45d03586fa19e6" translate="yes" xml:space="preserve">
          <source>FlatMap::partial_cmp</source>
          <target state="translated">FlatMap::partial_cmp</target>
        </trans-unit>
        <trans-unit id="b8420210bc00b780e997a2f176d15bd70a9cefc2" translate="yes" xml:space="preserve">
          <source>FlatMap::partition</source>
          <target state="translated">FlatMap::partition</target>
        </trans-unit>
        <trans-unit id="d96a8ef922a7dd232909440321f99286aee95938" translate="yes" xml:space="preserve">
          <source>FlatMap::peekable</source>
          <target state="translated">FlatMap::peekable</target>
        </trans-unit>
        <trans-unit id="9288726a37bae0b67d5b14478913d587122a7cff" translate="yes" xml:space="preserve">
          <source>FlatMap::position</source>
          <target state="translated">FlatMap::position</target>
        </trans-unit>
        <trans-unit id="943b213a0bfff37b51e3f3abb7e24395a9eeaff5" translate="yes" xml:space="preserve">
          <source>FlatMap::product</source>
          <target state="translated">FlatMap::product</target>
        </trans-unit>
        <trans-unit id="7b6ba5d98ab711868a29538fd256421af7fccddb" translate="yes" xml:space="preserve">
          <source>FlatMap::rev</source>
          <target state="translated">FlatMap::rev</target>
        </trans-unit>
        <trans-unit id="ffc3ba85262bf1bee58e06cd4bd7ac51112bb7bd" translate="yes" xml:space="preserve">
          <source>FlatMap::rfind</source>
          <target state="translated">FlatMap::rfind</target>
        </trans-unit>
        <trans-unit id="fe6cce940b1123c4767e7142e02b0874d48f1ef8" translate="yes" xml:space="preserve">
          <source>FlatMap::rfold</source>
          <target state="translated">FlatMap::rfold</target>
        </trans-unit>
        <trans-unit id="898c71d717e9f617cc31776c3b0e1fda2441d3bb" translate="yes" xml:space="preserve">
          <source>FlatMap::rposition</source>
          <target state="translated">FlatMap::rposition</target>
        </trans-unit>
        <trans-unit id="70837142b6824cfea9881ff15102481af06523ea" translate="yes" xml:space="preserve">
          <source>FlatMap::scan</source>
          <target state="translated">FlatMap::scan</target>
        </trans-unit>
        <trans-unit id="a72ce51abbc23ca3b19fb0bfc4d326cbd5308d6b" translate="yes" xml:space="preserve">
          <source>FlatMap::size_hint</source>
          <target state="translated">FlatMap::size_hint</target>
        </trans-unit>
        <trans-unit id="576b084fc5b101cd96570df280cf9563178dc0b6" translate="yes" xml:space="preserve">
          <source>FlatMap::skip</source>
          <target state="translated">FlatMap::skip</target>
        </trans-unit>
        <trans-unit id="990653817c5f3095db5801bef648ae48d6779ccd" translate="yes" xml:space="preserve">
          <source>FlatMap::skip_while</source>
          <target state="translated">FlatMap::skip_while</target>
        </trans-unit>
        <trans-unit id="cf9f2b6c21d3b585de5e080a4488ed8b2c27a1a9" translate="yes" xml:space="preserve">
          <source>FlatMap::step_by</source>
          <target state="translated">FlatMap::step_by</target>
        </trans-unit>
        <trans-unit id="0ada750aca7bbff98c03f0857972a15b9d9648a3" translate="yes" xml:space="preserve">
          <source>FlatMap::sum</source>
          <target state="translated">FlatMap::sum</target>
        </trans-unit>
        <trans-unit id="254acb09707335820a8e9275de9208df9fe45564" translate="yes" xml:space="preserve">
          <source>FlatMap::take</source>
          <target state="translated">FlatMap::take</target>
        </trans-unit>
        <trans-unit id="e2cd6313ade76c7297a2894057b99af8f8568ad3" translate="yes" xml:space="preserve">
          <source>FlatMap::take_while</source>
          <target state="translated">FlatMap::take_while</target>
        </trans-unit>
        <trans-unit id="f01f588225546b5db35652e4f0ae1badb647ccfc" translate="yes" xml:space="preserve">
          <source>FlatMap::to_owned</source>
          <target state="translated">FlatMap::to_owned</target>
        </trans-unit>
        <trans-unit id="bc2526e55e922f158b916e5feb1a4f9204a46d81" translate="yes" xml:space="preserve">
          <source>FlatMap::try_fold</source>
          <target state="translated">FlatMap::try_fold</target>
        </trans-unit>
        <trans-unit id="d00acbb4947216d76778b375caaa9531b3c7a01b" translate="yes" xml:space="preserve">
          <source>FlatMap::try_for_each</source>
          <target state="translated">FlatMap::try_for_each</target>
        </trans-unit>
        <trans-unit id="f98ca2e0c1a9c29db9a5cbf530d4e1cd8f6d7537" translate="yes" xml:space="preserve">
          <source>FlatMap::try_from</source>
          <target state="translated">FlatMap::try_from</target>
        </trans-unit>
        <trans-unit id="83b3931fb3265079ae3a473c969b6429f59f284f" translate="yes" xml:space="preserve">
          <source>FlatMap::try_into</source>
          <target state="translated">FlatMap::try_into</target>
        </trans-unit>
        <trans-unit id="324cd76beab30c1f527357aa91c0d96ed5842438" translate="yes" xml:space="preserve">
          <source>FlatMap::try_rfold</source>
          <target state="translated">FlatMap::try_rfold</target>
        </trans-unit>
        <trans-unit id="8a22d8d83287254ab6a23ee75e949e98501f6760" translate="yes" xml:space="preserve">
          <source>FlatMap::type_id</source>
          <target state="translated">FlatMap::type_id</target>
        </trans-unit>
        <trans-unit id="2de222ea97e7cb23e6ac9590d214d64f195cdd1c" translate="yes" xml:space="preserve">
          <source>FlatMap::unzip</source>
          <target state="translated">FlatMap::unzip</target>
        </trans-unit>
        <trans-unit id="db281575c806e87003c9b6682de864fc0df2c6b7" translate="yes" xml:space="preserve">
          <source>FlatMap::zip</source>
          <target state="translated">FlatMap::zip</target>
        </trans-unit>
        <trans-unit id="0af14ddb20aabbe1bd98f28f2c2f744284ccedb3" translate="yes" xml:space="preserve">
          <source>Flatten</source>
          <target state="translated">Flatten</target>
        </trans-unit>
        <trans-unit id="6378b27c94c7794528ec83525ca6682b68867eec" translate="yes" xml:space="preserve">
          <source>Flatten::all</source>
          <target state="translated">Flatten::all</target>
        </trans-unit>
        <trans-unit id="e537d39e2eeb046a286f6dc24210f196c2d61d0c" translate="yes" xml:space="preserve">
          <source>Flatten::any</source>
          <target state="translated">Flatten::any</target>
        </trans-unit>
        <trans-unit id="5df2c8dc161ea0f44000a8a7e6342e9273d021dc" translate="yes" xml:space="preserve">
          <source>Flatten::borrow</source>
          <target state="translated">Flatten::borrow</target>
        </trans-unit>
        <trans-unit id="84d618ced9026bc2da12c2d26053c6b0ea2832f2" translate="yes" xml:space="preserve">
          <source>Flatten::borrow_mut</source>
          <target state="translated">Flatten::borrow_mut</target>
        </trans-unit>
        <trans-unit id="74988a93d8ba79ac6a15f23e599ffe2f23d121f4" translate="yes" xml:space="preserve">
          <source>Flatten::by_ref</source>
          <target state="translated">Flatten::by_ref</target>
        </trans-unit>
        <trans-unit id="6549aaf28075727d38f42f2f9b05397627efdff6" translate="yes" xml:space="preserve">
          <source>Flatten::chain</source>
          <target state="translated">Flatten::chain</target>
        </trans-unit>
        <trans-unit id="1d6a474ca145d35d3343b59b0db187a0d609a48e" translate="yes" xml:space="preserve">
          <source>Flatten::clone</source>
          <target state="translated">Flatten::clone</target>
        </trans-unit>
        <trans-unit id="a61e2674c6ebe5e369a60cd98e4d14c1bdbc7ecd" translate="yes" xml:space="preserve">
          <source>Flatten::clone_from</source>
          <target state="translated">Flatten::clone_from</target>
        </trans-unit>
        <trans-unit id="b77c050e5d12e01700009a11e456e000faadd474" translate="yes" xml:space="preserve">
          <source>Flatten::clone_into</source>
          <target state="translated">Flatten::clone_into</target>
        </trans-unit>
        <trans-unit id="70230129a5a138fb98df5c13a6ad9b1512002b32" translate="yes" xml:space="preserve">
          <source>Flatten::cloned</source>
          <target state="translated">Flatten::cloned</target>
        </trans-unit>
        <trans-unit id="7bbd7d570ad36636c913a9c8cbd18cfb5adea88f" translate="yes" xml:space="preserve">
          <source>Flatten::cmp</source>
          <target state="translated">Flatten::cmp</target>
        </trans-unit>
        <trans-unit id="76980a69644d7dfe349ef13faef81ade2648a2f3" translate="yes" xml:space="preserve">
          <source>Flatten::collect</source>
          <target state="translated">Flatten::collect</target>
        </trans-unit>
        <trans-unit id="ba6f2bf705c0726e60fb3b5c631c9e8ba71a38c7" translate="yes" xml:space="preserve">
          <source>Flatten::copied</source>
          <target state="translated">Flatten::copied</target>
        </trans-unit>
        <trans-unit id="7ed45506f42e57be3ac6257b86e3a2328aee7f22" translate="yes" xml:space="preserve">
          <source>Flatten::count</source>
          <target state="translated">Flatten::count</target>
        </trans-unit>
        <trans-unit id="be9beb234550863ee98e63eadf7a2a2ac4c88820" translate="yes" xml:space="preserve">
          <source>Flatten::cycle</source>
          <target state="translated">Flatten::cycle</target>
        </trans-unit>
        <trans-unit id="ca72956e75e462249891af1c4d9e29a3c340bd27" translate="yes" xml:space="preserve">
          <source>Flatten::enumerate</source>
          <target state="translated">Flatten::enumerate</target>
        </trans-unit>
        <trans-unit id="2a9759914de233d5e6579bdc9b33a2209c3a8358" translate="yes" xml:space="preserve">
          <source>Flatten::eq</source>
          <target state="translated">Flatten::eq</target>
        </trans-unit>
        <trans-unit id="642b7ffbc86337b9b2e53a6a1b94b8dc49b65539" translate="yes" xml:space="preserve">
          <source>Flatten::filter</source>
          <target state="translated">Flatten::filter</target>
        </trans-unit>
        <trans-unit id="65ded6356f6e126088527091aa1cda97844fcba0" translate="yes" xml:space="preserve">
          <source>Flatten::filter_map</source>
          <target state="translated">Flatten::filter_map</target>
        </trans-unit>
        <trans-unit id="044b010b61b947fc0b8970d857cf151425e135b0" translate="yes" xml:space="preserve">
          <source>Flatten::find</source>
          <target state="translated">Flatten::find</target>
        </trans-unit>
        <trans-unit id="64cdc8f49da3fee8a3829164b9381155cca9a8bc" translate="yes" xml:space="preserve">
          <source>Flatten::find_map</source>
          <target state="translated">Flatten::find_map</target>
        </trans-unit>
        <trans-unit id="fbceeb9e0a2e8f7040fa8eae075282f8aade0232" translate="yes" xml:space="preserve">
          <source>Flatten::flat_map</source>
          <target state="translated">Flatten::flat_map</target>
        </trans-unit>
        <trans-unit id="2a2632fc9594da6c4e5ac878933c36a7ce8506c0" translate="yes" xml:space="preserve">
          <source>Flatten::flatten</source>
          <target state="translated">Flatten::flatten</target>
        </trans-unit>
        <trans-unit id="dd6734500dab755029f2d9f77d7cfe9ece45f723" translate="yes" xml:space="preserve">
          <source>Flatten::fmt</source>
          <target state="translated">Flatten::fmt</target>
        </trans-unit>
        <trans-unit id="9a29c24349f70fcf122bf03fd36e163675ac9f7a" translate="yes" xml:space="preserve">
          <source>Flatten::fold</source>
          <target state="translated">Flatten::fold</target>
        </trans-unit>
        <trans-unit id="d2b27a5433d79fd4a93dbf5304184654ea746b76" translate="yes" xml:space="preserve">
          <source>Flatten::for_each</source>
          <target state="translated">Flatten::for_each</target>
        </trans-unit>
        <trans-unit id="f02bc4e5cf877bd2a8f5fb77330649f946dd8c7c" translate="yes" xml:space="preserve">
          <source>Flatten::from</source>
          <target state="translated">Flatten::from</target>
        </trans-unit>
        <trans-unit id="e3507685efab8ac5ecaa03bf287d4c718237a452" translate="yes" xml:space="preserve">
          <source>Flatten::fuse</source>
          <target state="translated">Flatten::fuse</target>
        </trans-unit>
        <trans-unit id="f07045a07e1ac8513837d15d1ec32837341eabcc" translate="yes" xml:space="preserve">
          <source>Flatten::ge</source>
          <target state="translated">Flatten::ge</target>
        </trans-unit>
        <trans-unit id="18da0db46ede4c4e9350844a5fe4f2d2274f31b3" translate="yes" xml:space="preserve">
          <source>Flatten::gt</source>
          <target state="translated">Flatten::gt</target>
        </trans-unit>
        <trans-unit id="722a0d4464ed406627f2f5a56ffa12e0fc1e8196" translate="yes" xml:space="preserve">
          <source>Flatten::inspect</source>
          <target state="translated">Flatten::inspect</target>
        </trans-unit>
        <trans-unit id="9038111fe007cebcd62592d7da4378fd8cd0ddc9" translate="yes" xml:space="preserve">
          <source>Flatten::into</source>
          <target state="translated">Flatten::into</target>
        </trans-unit>
        <trans-unit id="54d478ead00f59905a55dcdb561d01c146b61fd4" translate="yes" xml:space="preserve">
          <source>Flatten::into_iter</source>
          <target state="translated">Flatten::into_iter</target>
        </trans-unit>
        <trans-unit id="1f53c39807466ee056a762c8bb70af58d51102d6" translate="yes" xml:space="preserve">
          <source>Flatten::is_sorted</source>
          <target state="translated">Flatten::is_sorted</target>
        </trans-unit>
        <trans-unit id="99e14c30526feba1349b21ae6448ce04dc088808" translate="yes" xml:space="preserve">
          <source>Flatten::is_sorted_by</source>
          <target state="translated">Flatten::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="05f031fcd127e3c76e69783269222edde058928f" translate="yes" xml:space="preserve">
          <source>Flatten::is_sorted_by_key</source>
          <target state="translated">Flatten::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="167347567e9e36963c9b163dc2921f9764574bfb" translate="yes" xml:space="preserve">
          <source>Flatten::last</source>
          <target state="translated">Flatten::last</target>
        </trans-unit>
        <trans-unit id="59a60a72d8b85bae670a6ec6d6b1c7f0b4374dc4" translate="yes" xml:space="preserve">
          <source>Flatten::le</source>
          <target state="translated">Flatten::le</target>
        </trans-unit>
        <trans-unit id="bf97088162f8613f4d0c4bd4d261b0a18f3879b3" translate="yes" xml:space="preserve">
          <source>Flatten::lt</source>
          <target state="translated">Flatten::lt</target>
        </trans-unit>
        <trans-unit id="3a8699a18f82d35e0444dabf1fea5718454a04b7" translate="yes" xml:space="preserve">
          <source>Flatten::map</source>
          <target state="translated">Flatten::map</target>
        </trans-unit>
        <trans-unit id="971af5e71369a17fae6c02994f662f7c1a30c72e" translate="yes" xml:space="preserve">
          <source>Flatten::max</source>
          <target state="translated">Flatten::max</target>
        </trans-unit>
        <trans-unit id="055208d53a428731c79d10e7f2cd7a58a65901f3" translate="yes" xml:space="preserve">
          <source>Flatten::max_by</source>
          <target state="translated">Flatten::max_by</target>
        </trans-unit>
        <trans-unit id="648db41109ce31b9176dbd6022bb142f8fbea63e" translate="yes" xml:space="preserve">
          <source>Flatten::max_by_key</source>
          <target state="translated">Flatten::max_by_key</target>
        </trans-unit>
        <trans-unit id="8292a6b614fa7627ff7156cfa936be0ce5ecea55" translate="yes" xml:space="preserve">
          <source>Flatten::min</source>
          <target state="translated">Flatten::min</target>
        </trans-unit>
        <trans-unit id="1ca455139385f0481bcf43be9b6211e86be6e9cb" translate="yes" xml:space="preserve">
          <source>Flatten::min_by</source>
          <target state="translated">Flatten::min_by</target>
        </trans-unit>
        <trans-unit id="3469af64a679ee79aee5996a0319e6c7d95a1310" translate="yes" xml:space="preserve">
          <source>Flatten::min_by_key</source>
          <target state="translated">Flatten::min_by_key</target>
        </trans-unit>
        <trans-unit id="ef8f8fffefb73fc7348db9447211056250507e70" translate="yes" xml:space="preserve">
          <source>Flatten::ne</source>
          <target state="translated">Flatten::ne</target>
        </trans-unit>
        <trans-unit id="272ed09059d038377f61436223e52ba15c11b454" translate="yes" xml:space="preserve">
          <source>Flatten::next</source>
          <target state="translated">Flatten::next</target>
        </trans-unit>
        <trans-unit id="6ed0e583171d5730167d3925b7f66ab5407e5a6a" translate="yes" xml:space="preserve">
          <source>Flatten::next_back</source>
          <target state="translated">Flatten::next_back</target>
        </trans-unit>
        <trans-unit id="f83cb633f58a8127eb53726450c5004cab59c22d" translate="yes" xml:space="preserve">
          <source>Flatten::nth</source>
          <target state="translated">Flatten::nth</target>
        </trans-unit>
        <trans-unit id="906f8bd6dbad910277215452b72f8ecb4493b03b" translate="yes" xml:space="preserve">
          <source>Flatten::nth_back</source>
          <target state="translated">Flatten::nth_back</target>
        </trans-unit>
        <trans-unit id="b45584894a3184899393e2e35ffa7d84c020e248" translate="yes" xml:space="preserve">
          <source>Flatten::partial_cmp</source>
          <target state="translated">Flatten::partial_cmp</target>
        </trans-unit>
        <trans-unit id="1326415f76b3ee0702ae181196138a1da2b8783e" translate="yes" xml:space="preserve">
          <source>Flatten::partition</source>
          <target state="translated">Flatten::partition</target>
        </trans-unit>
        <trans-unit id="ec97561985365e9099f643e7f6904c13d7b21fd7" translate="yes" xml:space="preserve">
          <source>Flatten::peekable</source>
          <target state="translated">Flatten::peekable</target>
        </trans-unit>
        <trans-unit id="00b0e7b90c4867222af5876dbf3b63065324cfdc" translate="yes" xml:space="preserve">
          <source>Flatten::position</source>
          <target state="translated">Flatten::position</target>
        </trans-unit>
        <trans-unit id="0b876d8774954704d6a4f4d43ff764e2f62e2c9c" translate="yes" xml:space="preserve">
          <source>Flatten::product</source>
          <target state="translated">Flatten::product</target>
        </trans-unit>
        <trans-unit id="ff196a64f89e7d72f68d826286f92097d9b1ece7" translate="yes" xml:space="preserve">
          <source>Flatten::rev</source>
          <target state="translated">Flatten::rev</target>
        </trans-unit>
        <trans-unit id="7267d42f2a661daf38b970f24ef035e184fd9351" translate="yes" xml:space="preserve">
          <source>Flatten::rfind</source>
          <target state="translated">Flatten::rfind</target>
        </trans-unit>
        <trans-unit id="45d2ff094df3d26c61a36270b8f07f83e8e5e07e" translate="yes" xml:space="preserve">
          <source>Flatten::rfold</source>
          <target state="translated">Flatten::rfold</target>
        </trans-unit>
        <trans-unit id="ad2b35a0674e4ff1c33b5453f7b4b6c7b565a180" translate="yes" xml:space="preserve">
          <source>Flatten::rposition</source>
          <target state="translated">Flatten::rposition</target>
        </trans-unit>
        <trans-unit id="c72be32d7b5232d751abac5840b35a5590803c12" translate="yes" xml:space="preserve">
          <source>Flatten::scan</source>
          <target state="translated">Flatten::scan</target>
        </trans-unit>
        <trans-unit id="2751595a2a3743ada0b7f330c315f9ba7e604b21" translate="yes" xml:space="preserve">
          <source>Flatten::size_hint</source>
          <target state="translated">Flatten::size_hint</target>
        </trans-unit>
        <trans-unit id="719ec1c1fd63a2ee5cd01c6d957412482c788246" translate="yes" xml:space="preserve">
          <source>Flatten::skip</source>
          <target state="translated">Flatten::skip</target>
        </trans-unit>
        <trans-unit id="8517a605d396572f805fe6af0230042a552b2350" translate="yes" xml:space="preserve">
          <source>Flatten::skip_while</source>
          <target state="translated">Flatten::skip_while</target>
        </trans-unit>
        <trans-unit id="eca7e88833692e39b6f9af6ac4e764aa9801cc1a" translate="yes" xml:space="preserve">
          <source>Flatten::step_by</source>
          <target state="translated">Flatten::step_by</target>
        </trans-unit>
        <trans-unit id="1080bc491e844001c194e780cb411a27dc80f258" translate="yes" xml:space="preserve">
          <source>Flatten::sum</source>
          <target state="translated">Flatten::sum</target>
        </trans-unit>
        <trans-unit id="b1f45e3b2fc44e5e7692f1843043de19468f3281" translate="yes" xml:space="preserve">
          <source>Flatten::take</source>
          <target state="translated">Flatten::take</target>
        </trans-unit>
        <trans-unit id="2489ed525114cd215de8170aeb7a02d8dac85234" translate="yes" xml:space="preserve">
          <source>Flatten::take_while</source>
          <target state="translated">Flatten::take_while</target>
        </trans-unit>
        <trans-unit id="a68643f524eb3165bd80bad5436c59fcfa11fcf3" translate="yes" xml:space="preserve">
          <source>Flatten::to_owned</source>
          <target state="translated">Flatten::to_owned</target>
        </trans-unit>
        <trans-unit id="55101c5d87b3e8e91f704992caf59c5a02c3a9a9" translate="yes" xml:space="preserve">
          <source>Flatten::try_fold</source>
          <target state="translated">Flatten::try_fold</target>
        </trans-unit>
        <trans-unit id="b9003e86513292141f138e44919ff2e9b4e5ec22" translate="yes" xml:space="preserve">
          <source>Flatten::try_for_each</source>
          <target state="translated">Flatten::try_for_each</target>
        </trans-unit>
        <trans-unit id="8c94ac06304502f80ab771cd077de0e05f32ad4f" translate="yes" xml:space="preserve">
          <source>Flatten::try_from</source>
          <target state="translated">Flatten::try_from</target>
        </trans-unit>
        <trans-unit id="8c47a05dbe76fce1ac45eaad991c1459babafd7d" translate="yes" xml:space="preserve">
          <source>Flatten::try_into</source>
          <target state="translated">Flatten::try_into</target>
        </trans-unit>
        <trans-unit id="1150ea07e36800b3c23c6fef303c0db8cc2cc651" translate="yes" xml:space="preserve">
          <source>Flatten::try_rfold</source>
          <target state="translated">Flatten::try_rfold</target>
        </trans-unit>
        <trans-unit id="60786eceea34873c96933ce0f24809d4169ea724" translate="yes" xml:space="preserve">
          <source>Flatten::type_id</source>
          <target state="translated">Flatten::type_id</target>
        </trans-unit>
        <trans-unit id="636ae3b4e642a02f33332bd930cb8c4897983777" translate="yes" xml:space="preserve">
          <source>Flatten::unzip</source>
          <target state="translated">Flatten::unzip</target>
        </trans-unit>
        <trans-unit id="257fcdc639672ecc8d1c76cd08bb5d85d427e136" translate="yes" xml:space="preserve">
          <source>Flatten::zip</source>
          <target state="translated">Flatten::zip</target>
        </trans-unit>
        <trans-unit id="50e65289e2c773b01f0800828c6c91a71c48f0cb" translate="yes" xml:space="preserve">
          <source>Flattening once only removes one level of nesting:</source>
          <target state="translated">При выравнивании один раз удаляется только один уровень гнездования:</target>
        </trans-unit>
        <trans-unit id="0132840ddd72a6d00a7d9eae2c8c7920bb049af1" translate="yes" xml:space="preserve">
          <source>Flattens a slice of &lt;code&gt;T&lt;/code&gt; into a single value &lt;code&gt;Self::Output&lt;/code&gt;, placing a given separator between each.</source>
          <target state="translated">Сглаживает фрагмент &lt;code&gt;T&lt;/code&gt; в одно значение &lt;code&gt;Self::Output&lt;/code&gt; , помещая между ними заданный разделитель.</target>
        </trans-unit>
        <trans-unit id="9534a89d8aa0d41ae0710eafe7247193c9b256f0" translate="yes" xml:space="preserve">
          <source>Flattens a slice of &lt;code&gt;T&lt;/code&gt; into a single value &lt;code&gt;Self::Output&lt;/code&gt;, placing a given separator between each. &lt;a href=&quot;slice/trait.sliceconcatext#method.connect&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Сглаживает фрагмент &lt;code&gt;T&lt;/code&gt; в одно значение &lt;code&gt;Self::Output&lt;/code&gt; , помещая между ними заданный разделитель. &lt;a href=&quot;slice/trait.sliceconcatext#method.connect&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09b89d3be7140cb65f98edbcd63bf5d5810fcd17" translate="yes" xml:space="preserve">
          <source>Flattens a slice of &lt;code&gt;T&lt;/code&gt; into a single value &lt;code&gt;Self::Output&lt;/code&gt;, placing a given separator between each. &lt;a href=&quot;slice/trait.sliceconcatext#tymethod.join&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Сглаживает фрагмент &lt;code&gt;T&lt;/code&gt; в одно значение &lt;code&gt;Self::Output&lt;/code&gt; , помещая между ними заданный разделитель. &lt;a href=&quot;slice/trait.sliceconcatext#tymethod.join&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a6dcd1f499bd97e21e4181f8911e1274dcc8f58" translate="yes" xml:space="preserve">
          <source>Flattens a slice of &lt;code&gt;T&lt;/code&gt; into a single value &lt;code&gt;Self::Output&lt;/code&gt;.</source>
          <target state="translated">Сглаживает фрагмент &lt;code&gt;T&lt;/code&gt; в одно значение &lt;code&gt;Self::Output&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c64a1918c8c75d3a6c599598a89b781e61c86988" translate="yes" xml:space="preserve">
          <source>Flattens a slice of &lt;code&gt;T&lt;/code&gt; into a single value &lt;code&gt;Self::Output&lt;/code&gt;. &lt;a href=&quot;slice/trait.sliceconcatext#tymethod.concat&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Сглаживает фрагмент &lt;code&gt;T&lt;/code&gt; в одно значение &lt;code&gt;Self::Output&lt;/code&gt; . &lt;a href=&quot;slice/trait.sliceconcatext#tymethod.concat&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9c5f3fe33f00613b76fc40a67722510e55920eb" translate="yes" xml:space="preserve">
          <source>Float addition that allows optimizations based on algebraic rules. May assume inputs are finite.</source>
          <target state="translated">Поплавковое дополнение,позволяющее оптимизацию на основе алгебраических правил.Может предполагать,что входы конечны.</target>
        </trans-unit>
        <trans-unit id="52499cebbcb214cabfe0a704e43a1fb104def099" translate="yes" xml:space="preserve">
          <source>Float division that allows optimizations based on algebraic rules. May assume inputs are finite.</source>
          <target state="translated">Деление поплавка,позволяющее оптимизировать на основе алгебраических правил.Может предполагать,что входы конечны.</target>
        </trans-unit>
        <trans-unit id="bc6141321e3d4c4de44fa14f30b656e4984e0713" translate="yes" xml:space="preserve">
          <source>Float multiplication that allows optimizations based on algebraic rules. May assume inputs are finite.</source>
          <target state="translated">Плавающее умножение,позволяющее оптимизацию на основе алгебраических правил.Может предполагать,что входы конечны.</target>
        </trans-unit>
        <trans-unit id="4ce00125ee33ccfea7b8391349b004512e0631fc" translate="yes" xml:space="preserve">
          <source>Float remainder that allows optimizations based on algebraic rules. May assume inputs are finite.</source>
          <target state="translated">Плавающий остаток,который позволяет оптимизировать на основе алгебраических правил.Может предполагать,что входы конечны.</target>
        </trans-unit>
        <trans-unit id="6c32fd01dbb17847421092ea2ccb3eef2d237af0" translate="yes" xml:space="preserve">
          <source>Float subtraction that allows optimizations based on algebraic rules. May assume inputs are finite.</source>
          <target state="translated">Плавающее вычитание,которое позволяет оптимизировать на основе алгебраических правил.Может предполагать,что входы конечны.</target>
        </trans-unit>
        <trans-unit id="b322920c63a6e6bae036b4e3c0515703738c1bb1" translate="yes" xml:space="preserve">
          <source>FloatToInt</source>
          <target state="translated">FloatToInt</target>
        </trans-unit>
        <trans-unit id="f980f6669a99ae97aa471b598c62ac0c3e1f823b" translate="yes" xml:space="preserve">
          <source>Floating Point</source>
          <target state="translated">Плавающая точка</target>
        </trans-unit>
        <trans-unit id="45036235c9c4abd7b11f7d03dccc9d1dff8eb2f8" translate="yes" xml:space="preserve">
          <source>Floating point types (f32 and f64). This is being deprecated and will not be available in a future version of Rust (see &lt;a href=&quot;https://github.com/rust-lang/rust/issues/41620&quot;&gt;issue #41620&lt;/a&gt;).</source>
          <target state="translated">Типы с плавающей запятой (f32 и f64). Это устарело и не будет доступно в будущей версии Rust (см. &lt;a href=&quot;https://github.com/rust-lang/rust/issues/41620&quot;&gt;Issue # 41620&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ef5cfdfa7defdf70726b76da829b0fe14f65909e" translate="yes" xml:space="preserve">
          <source>Floating-Point Types</source>
          <target state="translated">Типы с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="d11f66aff25662009484827fd72f259b820f6fce" translate="yes" xml:space="preserve">
          <source>Floating-point</source>
          <target state="translated">Floating-point</target>
        </trans-unit>
        <trans-unit id="4360ebce69c40c7912c546b8749e2ef775efcd1d" translate="yes" xml:space="preserve">
          <source>Floating-point literals</source>
          <target state="translated">Буквы с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="78376c313af60d60b363b980ef50678fc594133a" translate="yes" xml:space="preserve">
          <source>Floating-point literals are currently accepted, but due to the complexity of comparing them, they are going to be forbidden on literal patterns in a future version of Rust (see &lt;a href=&quot;https://github.com/rust-lang/rust/issues/41620&quot;&gt;issue #41620&lt;/a&gt;).</source>
          <target state="translated">Литералы с плавающей запятой в настоящее время принимаются, но из-за сложности их сравнения они будут запрещены в шаблонах литералов в будущей версии Rust (см. &lt;a href=&quot;https://github.com/rust-lang/rust/issues/41620&quot;&gt;Issue # 41620&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="39a753eeef8506a068f8801ce25d6973d1bebd2d" translate="yes" xml:space="preserve">
          <source>Floating-point numbers are represented according to the IEEE-754 standard. The &lt;code&gt;f32&lt;/code&gt; type is a single-precision float, and &lt;code&gt;f64&lt;/code&gt; has double precision.</source>
          <target state="translated">Числа с плавающей запятой представлены в соответствии со стандартом IEEE-754. Тип &lt;code&gt;f32&lt;/code&gt; - это число с плавающей точкой одинарной точности, а &lt;code&gt;f64&lt;/code&gt; - двойной точности.</target>
        </trans-unit>
        <trans-unit id="c77fa93b82b89d18fe6eec4a6c763b65896680b4" translate="yes" xml:space="preserve">
          <source>Floating-point suffixes</source>
          <target state="translated">Суффиксы с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="2a9bb411b345b451f4de56294a2e04b8bb44acd7" translate="yes" xml:space="preserve">
          <source>Floating-point types</source>
          <target state="translated">Типы с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="b591f9a1c42f27d4c4bd26d282be40b7c6e85c25" translate="yes" xml:space="preserve">
          <source>Floats and Ints have the same endianness on all supported platforms.</source>
          <target state="translated">Floats и Ints имеют одинаковую эндианность на всех поддерживаемых платформах.</target>
        </trans-unit>
        <trans-unit id="7120a4a1223ce171f0d2cfc3936e1fbe3242f8a9" translate="yes" xml:space="preserve">
          <source>Flush this output stream, ensuring that all intermediately buffered contents reach their destination.</source>
          <target state="translated">Промойте этот выходной поток,гарантируя,что все промежуточно буферизованное содержимое достигнет своего адресата.</target>
        </trans-unit>
        <trans-unit id="11e5d3922d6bab7c0c9ab6b22418d00727480d0e" translate="yes" xml:space="preserve">
          <source>Flush this output stream, ensuring that all intermediately buffered contents reach their destination. &lt;a href=&quot;../../../io/trait.write#tymethod.flush&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Очистите этот выходной поток, гарантируя, что все промежуточно буферизованное содержимое достигнет места назначения. &lt;a href=&quot;../../../io/trait.write#tymethod.flush&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6f07902e73f7da8a0b11290876961118d116c44" translate="yes" xml:space="preserve">
          <source>Flush this output stream, ensuring that all intermediately buffered contents reach their destination. &lt;a href=&quot;../io/trait.write#tymethod.flush&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Очистите этот выходной поток, гарантируя, что все промежуточно буферизованное содержимое достигнет места назначения. &lt;a href=&quot;../io/trait.write#tymethod.flush&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="789421fd045243ff9df826043d84e59d1e2aea7e" translate="yes" xml:space="preserve">
          <source>Flush this output stream, ensuring that all intermediately buffered contents reach their destination. &lt;a href=&quot;io/trait.write#tymethod.flush&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Очистите этот выходной поток, гарантируя, что все промежуточно буферизованное содержимое достигнет места назначения. &lt;a href=&quot;io/trait.write#tymethod.flush&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d31d71fc0f019cc686c94e54986a1090b2f8d953" translate="yes" xml:space="preserve">
          <source>Flush this output stream, ensuring that all intermediately buffered contents reach their destination. &lt;a href=&quot;trait.write#tymethod.flush&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Очистите этот выходной поток, гарантируя, что все промежуточно буферизованное содержимое достигнет места назначения. &lt;a href=&quot;trait.write#tymethod.flush&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="97f22050b4373bd22012fd26f53a60dc8f2b7438" translate="yes" xml:space="preserve">
          <source>Fn</source>
          <target state="translated">Fn</target>
        </trans-unit>
        <trans-unit id="056571b6bd538e1535f1a1885d9b32da7f141ee6" translate="yes" xml:space="preserve">
          <source>Fn::call</source>
          <target state="translated">Fn::call</target>
        </trans-unit>
        <trans-unit id="420a3294fc08a40e696614ef505f5ae7675c908a" translate="yes" xml:space="preserve">
          <source>FnMut</source>
          <target state="translated">FnMut</target>
        </trans-unit>
        <trans-unit id="7058c27c0e6429a4b6c5bf52b3c5e54116d44494" translate="yes" xml:space="preserve">
          <source>FnMut::call_mut</source>
          <target state="translated">FnMut::call_mut</target>
        </trans-unit>
        <trans-unit id="6fad81ecb429baed573c945fb613aa8792b2676b" translate="yes" xml:space="preserve">
          <source>FnOnce</source>
          <target state="translated">FnOnce</target>
        </trans-unit>
        <trans-unit id="dbc3b78f4e51810e9d273ad6baf9fc5201a5a6f9" translate="yes" xml:space="preserve">
          <source>FnOnce::call_once</source>
          <target state="translated">FnOnce::call_once</target>
        </trans-unit>
        <trans-unit id="b04326a1880243af0c022215459eab0a42fc4bce" translate="yes" xml:space="preserve">
          <source>Folding is useful whenever you have a collection of something, and want to produce a single value from it.</source>
          <target state="translated">Складывание полезно всякий раз,когда у вас есть коллекция чего-то,и вы хотите получить из этого одну ценность.</target>
        </trans-unit>
        <trans-unit id="049d0e1886b38562b2d1550218c69703314ea03f" translate="yes" xml:space="preserve">
          <source>Follow-set Ambiguity Restrictions</source>
          <target state="translated">Ограничения по однозначности,установленные в соответствии со следующими параметрами</target>
        </trans-unit>
        <trans-unit id="03df26aff78415b204036fc3617fc106fe18f8fa" translate="yes" xml:space="preserve">
          <source>Following the Pointer to the Value with the Dereference Operator</source>
          <target state="translated">Следуя указателю на значение с помощью оператора уклонения</target>
        </trans-unit>
        <trans-unit id="5bd2efa47d9f58ed1261195b65a4c89b8c16ef77" translate="yes" xml:space="preserve">
          <source>Foo is a struct</source>
          <target state="translated">Фу-это структура</target>
        </trans-unit>
        <trans-unit id="efa35157485464b05359fcfe9f301757903b6164" translate="yes" xml:space="preserve">
          <source>For (an erroneous) example, here a &lt;code&gt;struct&lt;/code&gt; variant name were used as a function:</source>
          <target state="translated">Для (ошибочного) примера здесь имя варианта &lt;code&gt;struct&lt;/code&gt; использовалось как функция:</target>
        </trans-unit>
        <trans-unit id="e4c2229e9dabe7c9b8ed00d340552949b1352584" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;items/enumerations#custom-discriminant-values-for-field-less-enumerations&quot;&gt;C-like enumerations&lt;/a&gt;, the &lt;code&gt;C&lt;/code&gt; representation has the size and alignment of the default &lt;code&gt;enum&lt;/code&gt; size and alignment for the target platform's C ABI.</source>
          <target state="translated">Для &lt;a href=&quot;items/enumerations#custom-discriminant-values-for-field-less-enumerations&quot;&gt;перечислений&lt;/a&gt; , подобных &lt;code&gt;C&lt;/code&gt; , представление C имеет размер и выравнивание размера &lt;code&gt;enum&lt;/code&gt; по умолчанию и выравнивание для C ABI целевой платформы.</target>
        </trans-unit>
        <trans-unit id="12601868b110bccb432aa4fc5e827b149936a899" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;items/enumerations#custom-discriminant-values-for-field-less-enumerations&quot;&gt;C-like enumerations&lt;/a&gt;, they set the size and alignment to be the same as the primitive type of the same name. For example, a C-like enumeration with a &lt;code&gt;u8&lt;/code&gt; representation can only have discriminants between 0 and 255 inclusive.</source>
          <target state="translated">Для &lt;a href=&quot;items/enumerations#custom-discriminant-values-for-field-less-enumerations&quot;&gt;перечислений&lt;/a&gt; , подобных C , они устанавливают размер и выравнивание такими же, как у примитивного типа с тем же именем. Например, C-подобное перечисление с представлением &lt;code&gt;u8&lt;/code&gt; может иметь дискриминанты только от 0 до 255 включительно.</target>
        </trans-unit>
        <trans-unit id="d97dbac13875101902d78d79d2008fd919d0a3cd" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;items/enumerations#custom-discriminant-values-for-fieldless-enumerations&quot;&gt;field-less enums&lt;/a&gt;, primitive representations set the size and alignment to be the same as the primitive type of the same name. For example, a field-less enum with a &lt;code&gt;u8&lt;/code&gt; representation can only have discriminants between 0 and 255 inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928dfa57bc9d97afc6451c5f626c02eedca2bff4" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;items/enumerations#custom-discriminant-values-for-fieldless-enumerations&quot;&gt;field-less enums&lt;/a&gt;, the &lt;code&gt;C&lt;/code&gt; representation has the size and alignment of the default &lt;code&gt;enum&lt;/code&gt; size and alignment for the target platform's C ABI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2dc6c0f5371a2e2facba64ec0821770c3bf059" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Result&lt;/code&gt;, the variants are &lt;code&gt;Ok&lt;/code&gt; or &lt;code&gt;Err&lt;/code&gt;. The &lt;code&gt;Ok&lt;/code&gt; variant indicates the operation was successful, and inside &lt;code&gt;Ok&lt;/code&gt; is the successfully generated value. The &lt;code&gt;Err&lt;/code&gt; variant means the operation failed, and &lt;code&gt;Err&lt;/code&gt; contains information about how or why the operation failed.</source>
          <target state="translated">Для &lt;code&gt;Result&lt;/code&gt; варианты &lt;code&gt;Ok&lt;/code&gt; или &lt;code&gt;Err&lt;/code&gt; . Вариант &lt;code&gt;Ok&lt;/code&gt; указывает, что операция прошла успешно, а внутри &lt;code&gt;Ok&lt;/code&gt; находится успешно сгенерированное значение. Вариант &lt;code&gt;Err&lt;/code&gt; означает, что операция завершилась неудачно, а &lt;code&gt;Err&lt;/code&gt; содержит информацию о том, как и почему операция завершилась неудачей.</target>
        </trans-unit>
        <trans-unit id="8baf4140d041ccdcdf77b0c6099035c4a7773845" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;align&lt;/code&gt;, if the specified alignment is less than the alignment of the type without the &lt;code&gt;align&lt;/code&gt; modifier, then the alignment is unaffected.</source>
          <target state="translated">Для &lt;code&gt;align&lt;/code&gt; , если указанное выравнивание меньше выравнивания типа без модификатора &lt;code&gt;align&lt;/code&gt; , то выравнивание не изменяется.</target>
        </trans-unit>
        <trans-unit id="95953d2494ecdb1a594e093e00b3f00569f19670" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;packed&lt;/code&gt;, if the specified alignment is greater than the type's alignment without the &lt;code&gt;packed&lt;/code&gt; modifier, then the alignment and layout is unaffected. The alignments of each field, for the purpose of positioning fields, is the smaller of the specified alignment and the alignment of the field's type.</source>
          <target state="translated">В случае с &lt;code&gt;packed&lt;/code&gt; , если указанное выравнивание больше, чем выравнивание типа без модификатора &lt;code&gt;packed&lt;/code&gt; , то выравнивание и макет не затрагиваются. Выравнивание каждого поля для целей позиционирования полей является меньшим из указанного выравнивания и выравнивания типа поля.</target>
        </trans-unit>
        <trans-unit id="923e7c9f8f5916bc98ca7d99786bb3a648ab5049" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;path&lt;/code&gt; attributes inside inline module blocks, the relative location of the file path depends on the kind of source file the &lt;code&gt;path&lt;/code&gt; attribute is located in. &quot;mod-rs&quot; source files are root modules (such as &lt;code&gt;lib.rs&lt;/code&gt; or &lt;code&gt;main.rs&lt;/code&gt;) and modules with files named &lt;code&gt;mod.rs&lt;/code&gt;. &quot;non-mod-rs&quot; source files are all other module files. Paths for &lt;code&gt;path&lt;/code&gt; attributes inside inline module blocks in a mod-rs file are relative to the directory of the mod-rs file including the inline module components as directories. For non-mod-rs files, it is the same except the path starts with a directory with the name of the non-mod-rs module. For example, the following code snippet would use the paths shown based on where it is located:</source>
          <target state="translated">Для атрибутов &lt;code&gt;path&lt;/code&gt; внутри встроенных блоков модуля относительное расположение пути к файлу зависит от типа исходного файла, в котором находится атрибут &lt;code&gt;path&lt;/code&gt; . Исходные файлы &quot;mod-rs&quot; являются корневыми модулями (такими как &lt;code&gt;lib.rs&lt;/code&gt; или &lt;code&gt;main.rs&lt;/code&gt; ) и модули с файлами по имени &lt;code&gt;mod.rs&lt;/code&gt; . Исходными файлами &quot;non-mod-rs&quot; являются все остальные файлы модулей. Пути для &lt;code&gt;path&lt;/code&gt; Атрибуты внутри встроенных модулей модуля в файле mod-rs относятся к каталогу файла mod-rs, включая компоненты встроенного модуля в качестве каталогов. Для файлов без mod-rs это то же самое, за исключением того, что путь начинается с каталога с именем модуля non-mod-rs. Например, следующий фрагмент кода будет использовать показанные пути в зависимости от того, где он расположен:</target>
        </trans-unit>
        <trans-unit id="dfab802e53dcd0980d9211ee320dac167a703dcd" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;path&lt;/code&gt; attributes on modules not inside inline module blocks, the file path is relative to the directory the source file is located. For example, the following code snippet would use the paths shown based on where it is located:</source>
          <target state="translated">Для атрибутов &lt;code&gt;path&lt;/code&gt; в модулях, не входящих в состав встроенных блоков модуля, путь к файлу определяется относительно каталога, в котором находится исходный файл. Например, следующий фрагмент кода будет использовать показанные пути в зависимости от того, где он расположен:</target>
        </trans-unit>
        <trans-unit id="3dd7e36edad8d4c66b9d73756a7e9df42b2bf6bf" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;structs&lt;/code&gt;, the size is determined by the following algorithm.</source>
          <target state="translated">Для &lt;code&gt;structs&lt;/code&gt; размер определяется по следующему алгоритму.</target>
        </trans-unit>
        <trans-unit id="6ff44c29aba6a3b1bc418f65dba60f927d755f35" translate="yes" xml:space="preserve">
          <source>For Linux, macOS, and PowerShell on Windows, enter this:</source>
          <target state="translated">Для Linux,macOS и PowerShell под Windows,введите это:</target>
        </trans-unit>
        <trans-unit id="0255b4e2a2f93f2b4e2d8aa8385a301c695c0e77" translate="yes" xml:space="preserve">
          <source>For Sets, all operations have the cost of the equivalent Map operation.</source>
          <target state="translated">Для Наборов все операции имеют стоимость эквивалентной операции на карте.</target>
        </trans-unit>
        <trans-unit id="c7cc1c1542e1186f4de55716920db5bc7661558a" translate="yes" xml:space="preserve">
          <source>For Windows CMD, enter this:</source>
          <target state="translated">Для Windows CMD,введите это:</target>
        </trans-unit>
        <trans-unit id="e8a09318e4aecc4ba3f5576d47f7d0fc0404e3e6" translate="yes" xml:space="preserve">
          <source>For a Rust program to pass the privacy checking pass, all paths must be valid accesses given the two rules above. This includes all use statements, expressions, types, etc.</source>
          <target state="translated">Для того,чтобы программа Rust прошла проверку конфиденциальности,все пути должны быть действительными с учетом двух правил,приведенных выше.Сюда относятся все операторы использования,выражения,типы и т.д.</target>
        </trans-unit>
        <trans-unit id="721c13185217ca5163b540357358e984418f8298" translate="yes" xml:space="preserve">
          <source>For a discussion of different locking strategies and their trade-offs, see &lt;a href=&quot;../sync/atomic/fn.spin_loop_hint&quot;&gt;&lt;code&gt;core::sync::atomic::spin_loop_hint&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f352f3c8751107e9c7e42b98ad0591d3538c17" translate="yes" xml:space="preserve">
          <source>For a file, the value specifies the last time that a file was read from or written to. For a directory, the value specifies when the directory was created. For both files and directories, the specified date is correct, but the time of day is always set to midnight.</source>
          <target state="translated">Для файла значение определяет последний раз,когда файл был прочитан или записан.Для каталога,значение указывает,когда каталог был создан.Для файлов и каталогов указанная дата корректна,но время суток всегда устанавливается на полночь.</target>
        </trans-unit>
        <trans-unit id="647fe810a619072712836a1bdb49dbed8a4b1f4b" translate="yes" xml:space="preserve">
          <source>For a file, the value specifies the last time that a file was written to. For a directory, the structure specifies when the directory was created.</source>
          <target state="translated">Для файла значение определяет последний раз,когда файл был записан.Для каталога структура указывает,когда он был создан.</target>
        </trans-unit>
        <trans-unit id="184a572ea33b05885cd109fbccf58b322acfb836" translate="yes" xml:space="preserve">
          <source>For a full reference, see &lt;a href=&quot;http://www.unicode.org/versions/Unicode7.0.0/ch03.pdf#G33992&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Для полной справки см. &lt;a href=&quot;http://www.unicode.org/versions/Unicode7.0.0/ch03.pdf#G33992&quot;&gt;Здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a026a81446d2c299885fea4ef646b54b601a628" translate="yes" xml:space="preserve">
          <source>For a generic item, you can copy over the parameters:</source>
          <target state="translated">Для общего элемента можно скопировать параметры:</target>
        </trans-unit>
        <trans-unit id="7421ee5b154df5e28d3a023a162558830a4adb57" translate="yes" xml:space="preserve">
          <source>For a generic struct, &lt;code&gt;#[derive]&lt;/code&gt; implements &lt;code&gt;Clone&lt;/code&gt; conditionally by adding bound &lt;code&gt;Clone&lt;/code&gt; on generic parameters.</source>
          <target state="translated">Для универсальной структуры &lt;code&gt;#[derive]&lt;/code&gt; реализует &lt;code&gt;Clone&lt;/code&gt; условно, добавляя связанный &lt;code&gt;Clone&lt;/code&gt; к универсальным параметрам.</target>
        </trans-unit>
        <trans-unit id="32da4d49301b83f44881cf4568bed0ee41e96684" translate="yes" xml:space="preserve">
          <source>For a let statement with an initializer, an &lt;em&gt;extending expression&lt;/em&gt; is an expression which is one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584bf730787a75a1719997d08b667d38c08e2ea5" translate="yes" xml:space="preserve">
          <source>For a more complete documentation see &lt;a href=&quot;fn.spawn&quot;&gt;&lt;code&gt;thread::spawn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для более полной документации см. &lt;a href=&quot;fn.spawn&quot;&gt; &lt;code&gt;thread::spawn&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c8c460d22a41e7606c57994d8c6a28932718cf2b" translate="yes" xml:space="preserve">
          <source>For a more complex example of moving data out of a pinned type, imagine if &lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; had a method &lt;code&gt;fn get_pin_mut(self: Pin&amp;lt;&amp;amp;mut Self&amp;gt;) -&amp;gt; Pin&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt;. Then we could do the following:</source>
          <target state="translated">В качестве более сложного примера перемещения данных из закрепленного типа представьте, что &lt;a href=&quot;../cell/struct.refcell&quot;&gt; &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; имеет метод &lt;code&gt;fn get_pin_mut(self: Pin&amp;lt;&amp;amp;mut Self&amp;gt;) -&amp;gt; Pin&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; . Тогда мы могли бы сделать следующее:</target>
        </trans-unit>
        <trans-unit id="4ac34c74fd617d583af55fa97b4ee576cf77109d" translate="yes" xml:space="preserve">
          <source>For a more comprehensive benchmark, you should check using various texts of various sizes as the &lt;code&gt;contents&lt;/code&gt;, different words and words of different lengths as the &lt;code&gt;query&lt;/code&gt;, and all kinds of other variations. The point is this: iterators, although a high-level abstraction, get compiled down to roughly the same code as if you&amp;rsquo;d written the lower-level code yourself. Iterators are one of Rust&amp;rsquo;s &lt;em&gt;zero-cost abstractions&lt;/em&gt;, by which we mean using the abstraction imposes no additional runtime overhead. This is analogous to how Bjarne Stroustrup, the original designer and implementor of C++, defines &lt;em&gt;zero-overhead&lt;/em&gt; in &amp;ldquo;Foundations of C++&amp;rdquo; (2012):</source>
          <target state="translated">Для более полного теста вам следует проверить, используя различные тексты разного размера в качестве &lt;code&gt;contents&lt;/code&gt; , разные слова и слова разной длины в качестве &lt;code&gt;query&lt;/code&gt; и всевозможные другие варианты. Дело в том, что итераторы, хотя и являются абстракцией высокого уровня, компилируются примерно до того же кода, как если бы вы сами написали код более низкого уровня. Итераторы - это одна из &lt;em&gt;абстракций&lt;/em&gt; Rust с &lt;em&gt;нулевой стоимостью&lt;/em&gt; , под которой мы подразумеваем, что использование абстракции не накладывает дополнительных накладных расходов во время выполнения. Это аналогично тому, как Бьярн Страуструп, оригинальный разработчик и разработчик C ++, определяет &lt;em&gt;нулевые накладные расходы&lt;/em&gt; в &amp;laquo;Основах C ++&amp;raquo; (2012):</target>
        </trans-unit>
        <trans-unit id="e8c3ee9b7f75a6166ad08fd46bdfb3c7c5f3aa2d" translate="yes" xml:space="preserve">
          <source>For a more comprehensive understanding of 'digit', see &lt;a href=&quot;#method.is_numeric&quot;&gt;&lt;code&gt;is_numeric&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для более полного понимания &amp;laquo;цифры&amp;raquo; см. &lt;a href=&quot;#method.is_numeric&quot;&gt; &lt;code&gt;is_numeric&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="af029266b2102335e9ca60b4eb325b82424cec62" translate="yes" xml:space="preserve">
          <source>For a more in-depth explanation of how to use &lt;code&gt;PhantomData&amp;lt;T&amp;gt;&lt;/code&gt;, please see &lt;a href=&quot;https://doc.rust-lang.org/nomicon/phantom-data.html&quot;&gt;the Nomicon&lt;/a&gt;.</source>
          <target state="translated">Для более подробного объяснения того, как использовать &lt;code&gt;PhantomData&amp;lt;T&amp;gt;&lt;/code&gt; , см. &lt;a href=&quot;https://doc.rust-lang.org/nomicon/phantom-data.html&quot;&gt;Nomicon&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="34072c7c26ac45c9889fc99ef1564d3ceab6d702" translate="yes" xml:space="preserve">
          <source>For a mutex, this means that the &lt;a href=&quot;#method.lock&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#method.try_lock&quot;&gt;&lt;code&gt;try_lock&lt;/code&gt;&lt;/a&gt; methods return a &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; which indicates whether a mutex has been poisoned or not. Most usage of a mutex will simply &lt;a href=&quot;../result/enum.result#method.unwrap&quot;&gt;&lt;code&gt;unwrap()&lt;/code&gt;&lt;/a&gt; these results, propagating panics among threads to ensure that a possibly invalid invariant is not witnessed.</source>
          <target state="translated">Для мьютекса это означает, что методы &lt;a href=&quot;#method.lock&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#method.try_lock&quot;&gt; &lt;code&gt;try_lock&lt;/code&gt; &lt;/a&gt; возвращают &lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; ,&lt;/a&gt; который указывает, был ли мьютекс отравлен или нет. Большинство случаев использования мьютекса будет просто &lt;a href=&quot;../result/enum.result#method.unwrap&quot;&gt; &lt;code&gt;unwrap()&lt;/code&gt; &lt;/a&gt; эти результаты, распространяя панику среди потоков, чтобы гарантировать, что возможно недопустимый инвариант не будет засвидетельствован.</target>
        </trans-unit>
        <trans-unit id="1303e2aac1fec56b39d2ac04d0af4683a5f720f6" translate="yes" xml:space="preserve">
          <source>For a mutex, this means that the &lt;a href=&quot;struct.mutex#method.lock&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.mutex#method.try_lock&quot;&gt;&lt;code&gt;try_lock&lt;/code&gt;&lt;/a&gt; methods return a &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; which indicates whether a mutex has been poisoned or not. Most usage of a mutex will simply &lt;a href=&quot;../result/enum.result#method.unwrap&quot;&gt;&lt;code&gt;unwrap()&lt;/code&gt;&lt;/a&gt; these results, propagating panics among threads to ensure that a possibly invalid invariant is not witnessed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110bad19ab93479b5e966e4b0cc50f978bba8b9c" translate="yes" xml:space="preserve">
          <source>For a place expression to be &lt;a href=&quot;expressions/operator-expr#assignment-expressions&quot;&gt;assigned&lt;/a&gt; to, mutably &lt;a href=&quot;expressions/operator-expr#borrow-operators&quot;&gt;borrowed&lt;/a&gt;, &lt;a href=&quot;#implicit-borrows&quot;&gt;implicitly mutably borrowed&lt;/a&gt;, or bound to a pattern containing &lt;code&gt;ref mut&lt;/code&gt; it must be &lt;em&gt;mutable&lt;/em&gt;. We call these &lt;em&gt;mutable place expressions&lt;/em&gt;. In contrast, other place expressions are called &lt;em&gt;immutable place expressions&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727cb8735a255c915e275d498c1053a4223d0653" translate="yes" xml:space="preserve">
          <source>For a place expression to be &lt;a href=&quot;expressions/operator-expr#assignment-expressions&quot;&gt;assigned&lt;/a&gt; to, mutably &lt;a href=&quot;expressions/operator-expr#borrow-operators&quot;&gt;borrowed&lt;/a&gt;, &lt;a href=&quot;expressions#implicit-borrows&quot;&gt;implicitly mutably borrowed&lt;/a&gt;, or bound to a pattern containing &lt;code&gt;ref mut&lt;/code&gt; it must be &lt;em&gt;mutable&lt;/em&gt;. We call these &lt;em&gt;mutable place expressions&lt;/em&gt;. In contrast, other place expressions are called &lt;em&gt;immutable place expressions&lt;/em&gt;.</source>
          <target state="translated">Для выражения места быть &lt;a href=&quot;expressions/operator-expr#assignment-expressions&quot;&gt;назначено&lt;/a&gt; на, mutably &lt;a href=&quot;expressions/operator-expr#borrow-operators&quot;&gt;заимствованы&lt;/a&gt; , &lt;a href=&quot;expressions#implicit-borrows&quot;&gt;неявно mutably заимствовано&lt;/a&gt; , или связанные с шаблоном , содержащим &lt;code&gt;ref mut&lt;/code&gt; он должен быть &lt;em&gt;изменяемым&lt;/em&gt; . Мы называем эти &lt;em&gt;выражения изменяемого места&lt;/em&gt; . Напротив, другие выражения места называются &lt;em&gt;неизменяемыми выражениями места&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0a4fd6dad5fac8c5fd74a9dbca3eb356df92719e" translate="yes" xml:space="preserve">
          <source>For a pointer to be valid, it is necessary, but not always sufficient, that the pointer be &lt;em&gt;dereferenceable&lt;/em&gt;: the memory range of the given size starting at the pointer must all be within the bounds of a single allocated object. Note that in Rust, every (stack-allocated) variable is considered a separate allocated object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9301d58c943a74d83bb3fa1ba310ec944b1bcb" translate="yes" xml:space="preserve">
          <source>For a real-world metaphor for a mutex, imagine a panel discussion at a conference with only one microphone. Before a panelist can speak, they have to ask or signal that they want to use the microphone. When they get the microphone, they can talk for as long as they want to and then hand the microphone to the next panelist who requests to speak. If a panelist forgets to hand the microphone off when they&amp;rsquo;re finished with it, no one else is able to speak. If management of the shared microphone goes wrong, the panel won&amp;rsquo;t work as planned!</source>
          <target state="translated">В качестве реальной метафоры мьютекса представьте себе панельную дискуссию на конференции с использованием только одного микрофона. Прежде чем участник дискуссии сможет выступить, он должен спросить или подать сигнал, что они хотят использовать микрофон. Когда они получают микрофон, они могут говорить столько, сколько хотят, а затем передать микрофон следующему участнику дискуссии, который просит выступить. Если участник дискуссии забудет передать микрофон, когда он закончил с ним, никто другой не сможет говорить. Если управление общим микрофоном идет не так, как планировалось, панель не будет работать!</target>
        </trans-unit>
        <trans-unit id="50947d30fed8f70a7887dbcd8ce5acf23cbf7259" translate="yes" xml:space="preserve">
          <source>For a safe alternative see &lt;a href=&quot;#method.get&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ff72d90a7e5c0bf0e102c5c91fc1584cbdbc95" translate="yes" xml:space="preserve">
          <source>For a safe alternative see &lt;a href=&quot;#method.get_mut&quot;&gt;&lt;code&gt;get_mut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574f9240f72aeac0bfeae5e0f00d9253ad522ec4" translate="yes" xml:space="preserve">
          <source>For a safe version of this function, see the &lt;a href=&quot;#method.from_u32&quot;&gt;&lt;code&gt;from_u32&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80cb9fa8331624fe1b3590f8bda584f9d5823d76" translate="yes" xml:space="preserve">
          <source>For a safe version of this function, see the &lt;a href=&quot;fn.from_u32&quot;&gt;&lt;code&gt;from_u32&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Для безопасной версии этой функции см. &lt;a href=&quot;fn.from_u32&quot;&gt; &lt;code&gt;from_u32&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aa5bc88b13ac7c1bbb6ef7b8b5f285e4ac562cee" translate="yes" xml:space="preserve">
          <source>For a somewhat artificial example:</source>
          <target state="translated">Для несколько искусственного примера:</target>
        </trans-unit>
        <trans-unit id="3018ad27db79c39f8145afd228804aab3254e82a" translate="yes" xml:space="preserve">
          <source>For a type like &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, both possibilites (structural pinning or not) make sense. A &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; with structural pinning could have &lt;code&gt;get_pin&lt;/code&gt;/&lt;code&gt;get_pin_mut&lt;/code&gt; methods to get pinned references to elements. However, it could &lt;em&gt;not&lt;/em&gt; allow calling &lt;code&gt;pop&lt;/code&gt; on a pinned &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; because that would move the (structurally pinned) contents! Nor could it allow &lt;code&gt;push&lt;/code&gt;, which might reallocate and thus also move the contents. A &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; without structural pinning could &lt;code&gt;impl&amp;lt;T&amp;gt; Unpin for Vec&amp;lt;T&amp;gt;&lt;/code&gt;, because the contents are never pinned and the &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; itself is fine with being moved as well. At that point pinning just has no effect on the vector at all.</source>
          <target state="translated">Для такого типа, как &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; , оба варианта (структурное закрепление или нет) имеют смысл. &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; со структурным пиннингом может иметь &lt;code&gt;get_pin&lt;/code&gt; / &lt;code&gt;get_pin_mut&lt;/code&gt; методы , чтобы получить возлагали ссылки на элементы. Однако он не &lt;em&gt;мог&lt;/em&gt; разрешить вызов &lt;code&gt;pop&lt;/code&gt; для закрепленного &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; потому что это переместило бы (структурно закрепленное) содержимое! Также он не мог разрешить &lt;code&gt;push&lt;/code&gt; , который может перераспределить и, таким образом, также переместить содержимое. &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; без структурного пиннинга может &lt;code&gt;impl&amp;lt;T&amp;gt; Unpin for Vec&amp;lt;T&amp;gt;&lt;/code&gt; , так как содержимое никогда не возлагали и &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; сам тоже нормально переносится. В этот момент закрепление вообще не влияет на вектор.</target>
        </trans-unit>
        <trans-unit id="8f35186e1bcfe1224be1716d0530b7876d335108" translate="yes" xml:space="preserve">
          <source>For a type like &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, both possibilities (structural pinning or not) make sense. A &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; with structural pinning could have &lt;code&gt;get_pin&lt;/code&gt;/&lt;code&gt;get_pin_mut&lt;/code&gt; methods to get pinned references to elements. However, it could &lt;em&gt;not&lt;/em&gt; allow calling &lt;a href=&quot;../vec/struct.vec#method.pop&quot;&gt;&lt;code&gt;pop&lt;/code&gt;&lt;/a&gt; on a pinned &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; because that would move the (structurally pinned) contents! Nor could it allow &lt;a href=&quot;../vec/struct.vec#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt;, which might reallocate and thus also move the contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d296f2a80f5db17e16b446a5a9cfb39f9637e3" translate="yes" xml:space="preserve">
          <source>For active Rust users, a new edition brings together incremental changes into an easy-to-understand package.</source>
          <target state="translated">Для активных пользователей Rust новая редакция объединяет инкрементные изменения в простой для понимания пакет.</target>
        </trans-unit>
        <trans-unit id="73ca74581814e147e2e3595a2c92e5345d58125c" translate="yes" xml:space="preserve">
          <source>For additional practice, add an &lt;code&gt;add-two&lt;/code&gt; crate to this workspace in a similar way as the &lt;code&gt;add-one&lt;/code&gt; crate!</source>
          <target state="translated">Для дополнительной практики добавьте ящик &lt;code&gt;add-two&lt;/code&gt; в эту рабочую область так же, как ящик &lt;code&gt;add-one&lt;/code&gt; !</target>
        </trans-unit>
        <trans-unit id="d6837630c0df8773ee6d141d026932e22f322a94" translate="yes" xml:space="preserve">
          <source>For all other enumerations, the layout is unspecified.</source>
          <target state="translated">Для всех остальных перечислений макет не указан.</target>
        </trans-unit>
        <trans-unit id="f839518ecde1e4d473a1e1391c3cecd147a2688f" translate="yes" xml:space="preserve">
          <source>For all types, the &lt;code&gt;replace&lt;/code&gt; method replaces the current interior value and returns the replaced value and the &lt;code&gt;into_inner&lt;/code&gt; method consumes the &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; and returns the interior value. Additionally, the &lt;code&gt;set&lt;/code&gt; method replaces the interior value, dropping the replaced value.</source>
          <target state="translated">Для всех типов метод &lt;code&gt;replace&lt;/code&gt; заменяет текущее внутреннее значение и возвращает замененное значение, а метод &lt;code&gt;into_inner&lt;/code&gt; использует &lt;code&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt; и возвращает внутреннее значение. Кроме того, метод &lt;code&gt;set&lt;/code&gt; заменяет внутреннее значение, удаляя замененное значение.</target>
        </trans-unit>
        <trans-unit id="4a74f1f69aa81d61ed79104423a7e929d2a5e90f" translate="yes" xml:space="preserve">
          <source>For an unsafe version of this function which ignores these checks, see &lt;a href=&quot;#method.from_u32_unchecked&quot;&gt;&lt;code&gt;from_u32_unchecked&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476b6d833d40fa72a41a7850a15d62e625fad288" translate="yes" xml:space="preserve">
          <source>For an unsafe version of this function which ignores these checks, see &lt;a href=&quot;fn.from_u32_unchecked&quot;&gt;&lt;code&gt;from_u32_unchecked&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">О небезопасной версии этой функции, которая игнорирует эти проверки, см. &lt;a href=&quot;fn.from_u32_unchecked&quot;&gt; &lt;code&gt;from_u32_unchecked&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="deac77531516e2593df857782566c5a6bc6ab633" translate="yes" xml:space="preserve">
          <source>For an unseparated complex NT in a matcher, &lt;code&gt;M = ... $(tt ...) OP ...&lt;/code&gt;, if OP = &lt;code&gt;\*&lt;/code&gt; or &lt;code&gt;+&lt;/code&gt;, we must have FOLLOW(&lt;code&gt;tt ...&lt;/code&gt;) &amp;supe; FIRST(&lt;code&gt;tt ...&lt;/code&gt;).</source>
          <target state="translated">Для неразделенной сложной NT в сопоставителе &lt;code&gt;M = ... $(tt ...) OP ...&lt;/code&gt; , если OP = &lt;code&gt;\*&lt;/code&gt; или &lt;code&gt;+&lt;/code&gt; , мы должны иметь FOLLOW ( &lt;code&gt;tt ...&lt;/code&gt; ) &amp;supe; FIRST ( &lt;code&gt;tt ...&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="567c47b2126f9c8ec60a221bb903f23b7c59a470" translate="yes" xml:space="preserve">
          <source>For another enhancement, let&amp;rsquo;s add a test of the &lt;code&gt;add_one::add_one&lt;/code&gt; function within the &lt;code&gt;add_one&lt;/code&gt; crate:</source>
          <target state="translated">Для еще одного улучшения давайте добавим тест функции &lt;code&gt;add_one::add_one&lt;/code&gt; в ящик &lt;code&gt;add_one&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a452ba88131c8535dae1f914470890abc9e80f80" translate="yes" xml:space="preserve">
          <source>For another example of an error, suppose there's another trait defined in &lt;code&gt;foo&lt;/code&gt; named &lt;code&gt;ForeignTrait2&lt;/code&gt; that takes two type parameters. Then this &lt;code&gt;impl&lt;/code&gt; results in the same rule violation:</source>
          <target state="translated">В качестве другого примера ошибки предположим, что в &lt;code&gt;foo&lt;/code&gt; определена еще одна черта с именем &lt;code&gt;ForeignTrait2&lt;/code&gt; , которая принимает два параметра типа. Тогда это &lt;code&gt;impl&lt;/code&gt; результаты в том же нарушении правил:</target>
        </trans-unit>
        <trans-unit id="b298ee6634f789f7504bbe56b35081e11b1776b3" translate="yes" xml:space="preserve">
          <source>For any &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;n&lt;/code&gt;, where no overflow occurs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e967e04cf21f07d7428cc8f9d5d43b5223ad6b6" translate="yes" xml:space="preserve">
          <source>For any &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;n&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7177439b1c102fad0f955acbe04d8571f3bc735" translate="yes" xml:space="preserve">
          <source>For any &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, and &lt;code&gt;n&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0400fbd14de605a36ca6850ba610aa532b5ec511" translate="yes" xml:space="preserve">
          <source>For any &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;n&lt;/code&gt;, and &lt;code&gt;m&lt;/code&gt; where &lt;code&gt;n + m&lt;/code&gt; does not overflow:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a4733d0f33a5abdaf576d0946acf68336e9c47" translate="yes" xml:space="preserve">
          <source>For any &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;n&lt;/code&gt;, and &lt;code&gt;m&lt;/code&gt;, where no overflow occurs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b420862395f4311806121a428bcf8094fcd87366" translate="yes" xml:space="preserve">
          <source>For any &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;n&lt;/code&gt;, and &lt;code&gt;m&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283c28e21e5d022c297a84900d000ac8c19d139f" translate="yes" xml:space="preserve">
          <source>For any &lt;code&gt;a&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b45cf56ca7c18d52ba90d4d864763045b8b7c39" translate="yes" xml:space="preserve">
          <source>For any lint check &lt;code&gt;C&lt;/code&gt;:</source>
          <target state="translated">На наличие ворса проверьте &lt;code&gt;C&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="056c0dacdd55194f54d5847447d6f623af23b2c3" translate="yes" xml:space="preserve">
          <source>For any separated complex NT in a matcher, &lt;code&gt;M = ... $(tt ...) SEP OP ...&lt;/code&gt;, we must have &lt;code&gt;SEP&lt;/code&gt; &amp;isin; FOLLOW(&lt;code&gt;tt ...&lt;/code&gt;).</source>
          <target state="translated">Для любой разделенной комплексной NT в сопоставлении, &lt;code&gt;M = ... $(tt ...) SEP OP ...&lt;/code&gt; , мы должны иметь &lt;code&gt;SEP&lt;/code&gt; &amp;isin; FOLLOW ( &lt;code&gt;tt ...&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1d2f6725c963b627309938adf90568e934652249" translate="yes" xml:space="preserve">
          <source>For any two successive token tree sequences in a matcher &lt;code&gt;M&lt;/code&gt; (i.e. &lt;code&gt;M = ... tt uu ...&lt;/code&gt;) with &lt;code&gt;uu ...&lt;/code&gt; nonempty, we must have FOLLOW(&lt;code&gt;... tt&lt;/code&gt;) &amp;cup; {&amp;epsilon;} &amp;supe; FIRST(&lt;code&gt;uu ...&lt;/code&gt;).</source>
          <target state="translated">Для любых двух последовательных последовательностей дерева токенов в сопоставлении &lt;code&gt;M&lt;/code&gt; (т.е. &lt;code&gt;M = ... tt uu ...&lt;/code&gt; ) с непустым &lt;code&gt;uu ...&lt;/code&gt; мы должны иметь FOLLOW ( &lt;code&gt;... tt&lt;/code&gt; ) &amp;cup; {&amp;epsilon;} &amp;supe; FIRST ( &lt;code&gt;uu ...&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6cdbdbd6c13dc2fb6d28991d433130904066520c" translate="yes" xml:space="preserve">
          <source>For associated functions, there would not be a &lt;code&gt;receiver&lt;/code&gt;: there would only be the list of other arguments. You could use fully qualified syntax everywhere that you call functions or methods. However, you&amp;rsquo;re allowed to omit any part of this syntax that Rust can figure out from other information in the program. You only need to use this more verbose syntax in cases where there are multiple implementations that use the same name and Rust needs help to identify which implementation you want to call.</source>
          <target state="translated">Для связанных функций не будет &lt;code&gt;receiver&lt;/code&gt; : будет только список других аргументов. Вы можете использовать полностью определенный синтаксис везде, где вызываете функции или методы. Однако вам разрешено опустить любую часть этого синтаксиса, которую Rust может определить из другой информации в программе. Вам нужно использовать этот более подробный синтаксис только в тех случаях, когда существует несколько реализаций, использующих одно и то же имя, и Rust нуждается в помощи, чтобы определить, какую реализацию вы хотите вызвать.</target>
        </trans-unit>
        <trans-unit id="a482aec762a0ae7cc8035a9d32a39718410a1d01" translate="yes" xml:space="preserve">
          <source>For builtin pointer types, pointers to &lt;code&gt;T&lt;/code&gt; will coerce to pointers to &lt;code&gt;U&lt;/code&gt; if &lt;code&gt;T: Unsize&amp;lt;U&amp;gt;&lt;/code&gt; by converting from a thin pointer to a fat pointer.</source>
          <target state="translated">Для типов встроенных указателей указатели на &lt;code&gt;T&lt;/code&gt; приведут к указателям на &lt;code&gt;U&lt;/code&gt; , если &lt;code&gt;T: Unsize&amp;lt;U&amp;gt;&lt;/code&gt; путем преобразования из тонкого указателя в толстый указатель.</target>
        </trans-unit>
        <trans-unit id="cd4e266e3c4d23a572f017e57b60117e05b20fc7" translate="yes" xml:space="preserve">
          <source>For cases when one does need thread-safe interior mutability, Rust provides &lt;a href=&quot;../sync/atomic/index&quot;&gt;atomic data types&lt;/a&gt;, as well as explicit locking via &lt;a href=&quot;../sync/struct.mutex&quot;&gt;&lt;code&gt;sync::Mutex&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../sync/struct.rwlock&quot;&gt;&lt;code&gt;sync::RwLock&lt;/code&gt;&lt;/a&gt;. These types ensure that any mutation cannot cause data races, hence the types are &lt;code&gt;Sync&lt;/code&gt;. Likewise, &lt;a href=&quot;../sync/struct.arc&quot;&gt;&lt;code&gt;sync::Arc&lt;/code&gt;&lt;/a&gt; provides a thread-safe analogue of &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для случаев, когда действительно нужна поточно-безопасная внутренняя изменчивость, Rust предоставляет &lt;a href=&quot;../sync/atomic/index&quot;&gt;атомарные типы данных&lt;/a&gt; , а также явную блокировку через &lt;a href=&quot;../sync/struct.mutex&quot;&gt; &lt;code&gt;sync::Mutex&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../sync/struct.rwlock&quot;&gt; &lt;code&gt;sync::RwLock&lt;/code&gt; &lt;/a&gt; . Эти типы гарантируют, что любая мутация не может вызвать гонку данных, поэтому типы являются &lt;code&gt;Sync&lt;/code&gt; . Точно так же &lt;a href=&quot;../sync/struct.arc&quot;&gt; &lt;code&gt;sync::Arc&lt;/code&gt; &lt;/a&gt; предоставляет поточно-ориентированный аналог &lt;a href=&quot;../rc/struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="862c6a0aebea1113158c46f1472b585a3d948023" translate="yes" xml:space="preserve">
          <source>For convenience and historical reasons, the tuple type with no elements (&lt;code&gt;()&lt;/code&gt;) is often called &lt;em&gt;unit&lt;/em&gt; or &lt;em&gt;the unit type&lt;/em&gt;. It's one value is also called &lt;em&gt;unit&lt;/em&gt; or &lt;em&gt;the unit value&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ce88c6063c5e04848b361d4df1470f061a981a" translate="yes" xml:space="preserve">
          <source>For convenience, running &lt;code&gt;cargo doc --open&lt;/code&gt; will build the HTML for your current crate&amp;rsquo;s documentation (as well as the documentation for all of your crate&amp;rsquo;s dependencies) and open the result in a web browser. Navigate to the &lt;code&gt;add_one&lt;/code&gt; function and you&amp;rsquo;ll see how the text in the documentation comments is rendered, as shown in Figure 14-1:</source>
          <target state="translated">Для удобства при запуске &lt;code&gt;cargo doc --open&lt;/code&gt; будет создан HTML- код для документации вашего текущего ящика (а также документация для всех зависимостей вашего ящика) и откроется результат в веб-браузере. Перейдите к функции &lt;code&gt;add_one&lt;/code&gt; , и вы увидите, как отображается текст в комментариях к документации, как показано на рисунке 14-1:</target>
        </trans-unit>
        <trans-unit id="066c1d6d346620b3bed514578530bbc0f4c88848" translate="yes" xml:space="preserve">
          <source>For converting to strings use the &lt;a href=&quot;macro.format&quot;&gt;&lt;code&gt;format!&lt;/code&gt;&lt;/a&gt; macro, and for converting from strings use the &lt;a href=&quot;str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt; trait.</source>
          <target state="translated">Для преобразования в строки используйте &lt;a href=&quot;macro.format&quot;&gt; &lt;code&gt;format!&lt;/code&gt; &lt;/a&gt; макрос, а для преобразования из строк используйте &lt;a href=&quot;str/trait.fromstr&quot;&gt; &lt;code&gt;FromStr&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b495fc173ff830e38cba8fae0764e0cd7d19620b" translate="yes" xml:space="preserve">
          <source>For custom types, the coercion here works by coercing &lt;code&gt;Foo&amp;lt;T&amp;gt;&lt;/code&gt; to &lt;code&gt;Foo&amp;lt;U&amp;gt;&lt;/code&gt; provided an impl of &lt;code&gt;CoerceUnsized&amp;lt;Foo&amp;lt;U&amp;gt;&amp;gt; for Foo&amp;lt;T&amp;gt;&lt;/code&gt; exists. Such an impl can only be written if &lt;code&gt;Foo&amp;lt;T&amp;gt;&lt;/code&gt; has only a single non-phantomdata field involving &lt;code&gt;T&lt;/code&gt;. If the type of that field is &lt;code&gt;Bar&amp;lt;T&amp;gt;&lt;/code&gt;, an implementation of &lt;code&gt;CoerceUnsized&amp;lt;Bar&amp;lt;U&amp;gt;&amp;gt; for Bar&amp;lt;T&amp;gt;&lt;/code&gt; must exist. The coercion will work by coercing the &lt;code&gt;Bar&amp;lt;T&amp;gt;&lt;/code&gt; field into &lt;code&gt;Bar&amp;lt;U&amp;gt;&lt;/code&gt; and filling in the rest of the fields from &lt;code&gt;Foo&amp;lt;T&amp;gt;&lt;/code&gt; to create a &lt;code&gt;Foo&amp;lt;U&amp;gt;&lt;/code&gt;. This will effectively drill down to a pointer field and coerce that.</source>
          <target state="translated">Для настраиваемых типов приведение здесь работает путем принуждения &lt;code&gt;Foo&amp;lt;T&amp;gt;&lt;/code&gt; к &lt;code&gt;Foo&amp;lt;U&amp;gt;&lt;/code&gt; при условии, что существует импликация &lt;code&gt;CoerceUnsized&amp;lt;Foo&amp;lt;U&amp;gt;&amp;gt; for Foo&amp;lt;T&amp;gt;&lt;/code&gt; . Такое осущ можно записать только тогда , когда &lt;code&gt;Foo&amp;lt;T&amp;gt;&lt;/code&gt; имеет только одно поле , не phantomdata с участием &lt;code&gt;T&lt;/code&gt; . Если тип этого поля - &lt;code&gt;Bar&amp;lt;T&amp;gt;&lt;/code&gt; , должна существовать реализация &lt;code&gt;CoerceUnsized&amp;lt;Bar&amp;lt;U&amp;gt;&amp;gt; for Bar&amp;lt;T&amp;gt;&lt;/code&gt; . Принуждение будет работать путем преобразования поля &lt;code&gt;Bar&amp;lt;T&amp;gt;&lt;/code&gt; в &lt;code&gt;Bar&amp;lt;U&amp;gt;&lt;/code&gt; и заполнения остальных полей из &lt;code&gt;Foo&amp;lt;T&amp;gt;&lt;/code&gt; для создания &lt;code&gt;Foo&amp;lt;U&amp;gt;&lt;/code&gt; .Это позволит эффективно перейти к полю указателя и принудить его.</target>
        </trans-unit>
        <trans-unit id="60d481b314010be795197eaef3eeb1b40bbbd1e2" translate="yes" xml:space="preserve">
          <source>For default impls in traits, the private helper solution won't work, however closures or copying the parameters should still work.</source>
          <target state="translated">При наличии импликаций по умолчанию,решение приватного помощника не будет работать,однако,закрытие или копирование параметров все равно должно работать.</target>
        </trans-unit>
        <trans-unit id="18fd7ffece3fe76bf6c6f04f78a662dc5e132236" translate="yes" xml:space="preserve">
          <source>For detailed semantics of this method, see the documentation on &lt;a href=&quot;trait.bufread#method.read_line&quot;&gt;&lt;code&gt;BufRead::read_line&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Подробную семантику этого метода см. В документации &lt;a href=&quot;trait.bufread#method.read_line&quot;&gt; &lt;code&gt;BufRead::read_line&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4cf690f8462a72a3256098f14214a450a9f6aa92" translate="yes" xml:space="preserve">
          <source>For each field in declaration order in the struct, first determine the size and alignment of the field. If the current offset is not a multiple of the field's alignment, then add padding bytes to the current offset until it is a multiple of the field's alignment. The offset for the field is what the current offset is now. Then increase the current offset by the size of the field.</source>
          <target state="translated">Для каждого поля в порядке декларирования в структуре сначала определите его размер и выравнивание.Если текущее смещение не кратно выравниванию поля,то добавьте байты подкладки к текущему смещению,пока оно не будет кратно выравниванию поля.Смещение для поля-это текущее смещение.Затем увеличьте текущее смещение на размер поля.</target>
        </trans-unit>
        <trans-unit id="72130935b2d001683aa85f003dc696305f2bc73d" translate="yes" xml:space="preserve">
          <source>For each field in the struct ordered by declaration order:</source>
          <target state="translated">Для каждого поля в структуре,упорядоченного по порядку декларирования:</target>
        </trans-unit>
        <trans-unit id="0b3508d4624d79af6901523f5a605066ff78ea42" translate="yes" xml:space="preserve">
          <source>For each instance of &lt;code&gt;BuildHasher&lt;/code&gt;, the &lt;a href=&quot;trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;s created by &lt;a href=&quot;#tymethod.build_hasher&quot;&gt;&lt;code&gt;build_hasher&lt;/code&gt;&lt;/a&gt; should be identical. That is, if the same stream of bytes is fed into each hasher, the same output will also be generated.</source>
          <target state="translated">Для каждого экземпляра &lt;code&gt;BuildHasher&lt;/code&gt; , то &lt;a href=&quot;trait.hasher&quot;&gt; &lt;code&gt;Hasher&lt;/code&gt; &lt;/a&gt; ы создан &lt;a href=&quot;#tymethod.build_hasher&quot;&gt; &lt;code&gt;build_hasher&lt;/code&gt; &lt;/a&gt; должен быть идентичным. То есть, если один и тот же поток байтов подается в каждый хешер, будет сгенерирован один и тот же вывод.</target>
        </trans-unit>
        <trans-unit id="840895a2afaae6a7f348dca1ec8fcc81fdac329e" translate="yes" xml:space="preserve">
          <source>For each instance of &lt;code&gt;BuildHasher&lt;/code&gt;, the &lt;a href=&quot;trait.hasher&quot;&gt;&lt;code&gt;Hasher&lt;/code&gt;&lt;/a&gt;s created by &lt;a href=&quot;trait.buildhasher#tymethod.build_hasher&quot;&gt;&lt;code&gt;build_hasher&lt;/code&gt;&lt;/a&gt; should be identical. That is, if the same stream of bytes is fed into each hasher, the same output will also be generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc391d5855b94ebf31185098078b770ff17af670" translate="yes" xml:space="preserve">
          <source>For enum variants without any data, like &lt;code&gt;Message::Quit&lt;/code&gt;, we can&amp;rsquo;t destructure the value any further. We can only match on the literal &lt;code&gt;Message::Quit&lt;/code&gt; value, and no variables are in that pattern.</source>
          <target state="translated">Для вариантов перечисления без каких-либо данных, таких как &lt;code&gt;Message::Quit&lt;/code&gt; , мы не можем дальше деструктурировать значение. Мы можем сопоставить только буквальное значение &lt;code&gt;Message::Quit&lt;/code&gt; , и в этом шаблоне нет переменных.</target>
        </trans-unit>
        <trans-unit id="2444658cffe28e2cc2f850d1658b58b1e1a36719" translate="yes" xml:space="preserve">
          <source>For enums with fields, it is also possible to combine &lt;code&gt;repr(C)&lt;/code&gt; and a primitive representation (e.g., &lt;code&gt;repr(C, u8)&lt;/code&gt;). This modifies the &lt;a href=&quot;#reprc-enums-with-fields&quot;&gt;&lt;code&gt;repr(C)&lt;/code&gt;&lt;/a&gt; by changing the representation of the discriminant enum to the chosen primitive instead. So, if you chose the &lt;code&gt;u8&lt;/code&gt; representation, then the discriminant enum would have a size and alignment of 1 byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01828e4ae2c2ba5ffc6317469f77820dbf8111b" translate="yes" xml:space="preserve">
          <source>For example when polling on a resource, it is common to check that it is available, and if not to yield in order to avoid busy waiting.</source>
          <target state="translated">Например,при опросе на ресурсе принято проверять его доступность,а если нет,то и сдаваться,чтобы избежать напряженного ожидания.</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">Например,</target>
        </trans-unit>
        <trans-unit id="4cd230a3a552ee68ec4ba47f5a2564073dbae972" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;../fs/struct.file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; implements &lt;a href=&quot;trait.read&quot;&gt;&lt;code&gt;Read&lt;/code&gt;&lt;/a&gt;, but not &lt;code&gt;BufRead&lt;/code&gt;. &lt;a href=&quot;struct.bufreader&quot;&gt;&lt;code&gt;BufReader&lt;/code&gt;&lt;/a&gt; to the rescue!</source>
          <target state="translated">Например, &lt;a href=&quot;../fs/struct.file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; реализует &lt;a href=&quot;trait.read&quot;&gt; &lt;code&gt;Read&lt;/code&gt; &lt;/a&gt; , но не &lt;code&gt;BufRead&lt;/code&gt; . &lt;a href=&quot;struct.bufreader&quot;&gt; &lt;code&gt;BufReader&lt;/code&gt; спешит&lt;/a&gt; на помощь!</target>
        </trans-unit>
        <trans-unit id="361121404b53f092e2a50ba865c6a4b2bee21aac" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;struct.bufreader&quot;&gt;&lt;code&gt;BufReader&lt;/code&gt;&lt;/a&gt; works with the &lt;a href=&quot;trait.bufread&quot;&gt;&lt;code&gt;BufRead&lt;/code&gt;&lt;/a&gt; trait to add extra methods to any reader:</source>
          <target state="translated">Например, &lt;a href=&quot;struct.bufreader&quot;&gt; &lt;code&gt;BufReader&lt;/code&gt; &lt;/a&gt; работает с чертой &lt;a href=&quot;trait.bufread&quot;&gt; &lt;code&gt;BufRead&lt;/code&gt; ,&lt;/a&gt; чтобы добавить дополнительные методы любому читателю:</target>
        </trans-unit>
        <trans-unit id="6b55b0abb99e67319bb61c01d86a93c08d513103" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;&amp;amp;mut 42&lt;/code&gt; is coerced to have type &lt;code&gt;&amp;amp;i8&lt;/code&gt; in the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67eaa2d704432ad951e8c12a7692afce83f73e05" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/&lt;/code&gt; on Unix and  on Windows.</source>
          <target state="translated">Например, &lt;code&gt;/&lt;/code&gt; в Unix и в Windows.</target>
        </trans-unit>
        <trans-unit id="5bb29cde4c0e0fc335df372cebebbd7ecb1d0966" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/&lt;/code&gt; on Unix and &lt;code&gt;\&lt;/code&gt; on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbee0db43e5b9a6c95b5e074429ae3b04c296c30" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;2 + (3 * 4)&lt;/code&gt; is an expression that returns the value 14.</source>
          <target state="translated">Например, &lt;code&gt;2 + (3 * 4)&lt;/code&gt; - это выражение, возвращающее значение 14.</target>
        </trans-unit>
        <trans-unit id="ca7ec8e9d4ad8d1018c384f60f3aa9bf305dff15" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;42&lt;/code&gt; is coerced to have type &lt;code&gt;i8&lt;/code&gt; in the following:</source>
          <target state="translated">Например, &lt;code&gt;42&lt;/code&gt; приводится к типу &lt;code&gt;i8&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="5371c62b3b65397d993bded38544b14c041e769c" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;match&lt;/code&gt; is a keyword. If you try to compile the following function that uses &lt;code&gt;match&lt;/code&gt; as its name:</source>
          <target state="translated">Например, &lt;code&gt;match&lt;/code&gt; - это ключевое слово. Если вы попытаетесь скомпилировать следующую функцию, которая использует &lt;code&gt;match&lt;/code&gt; качестве имени:</target>
        </trans-unit>
        <trans-unit id="5e5ca1f4b6c9ffec30148620048c12e2abed5a4e" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;x&lt;/code&gt; is coerced to have type &lt;code&gt;&amp;amp;dyn Display&lt;/code&gt; in the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce0a6199428243d121ad738edca52d7c9b01aad" translate="yes" xml:space="preserve">
          <source>For example, Listing 17-10 shows what happens if we try to create a &lt;code&gt;Screen&lt;/code&gt; with a &lt;code&gt;String&lt;/code&gt; as a component:</source>
          <target state="translated">Например, в листинге 17-10 показано, что произойдет, если мы попытаемся создать &lt;code&gt;Screen&lt;/code&gt; со &lt;code&gt;String&lt;/code&gt; в качестве компонента:</target>
        </trans-unit>
        <trans-unit id="7ae1a94372a4d885d5d7e8da154bdfbd122ab503" translate="yes" xml:space="preserve">
          <source>For example, Listing 9-6 shows a function that reads a username from a file. If the file doesn&amp;rsquo;t exist or can&amp;rsquo;t be read, this function will return those errors to the code that called this function.</source>
          <target state="translated">Например, в листинге 9-6 показана функция, которая считывает имя пользователя из файла. Если файл не существует или не может быть прочитан, эта функция вернет эти ошибки в код, который вызвал эту функцию.</target>
        </trans-unit>
        <trans-unit id="ef753a93b41984ab0e06400f8bb2fb5a5a2abf4c" translate="yes" xml:space="preserve">
          <source>For example, a function like:</source>
          <target state="translated">Например,такая функция:</target>
        </trans-unit>
        <trans-unit id="3f4165e8867ad36b5f552b0f32d954c181e56a0b" translate="yes" xml:space="preserve">
          <source>For example, a function that reads a file into a string will error with &lt;code&gt;InvalidData&lt;/code&gt; if the file's contents are not valid UTF-8.</source>
          <target state="translated">Например, функция, считывающая файл в строку, выдаст ошибку &lt;code&gt;InvalidData&lt;/code&gt; , если содержимое файла не соответствует UTF-8.</target>
        </trans-unit>
        <trans-unit id="8e2494ae56a52ee6df403aa3b61355ff286423ad" translate="yes" xml:space="preserve">
          <source>For example, a logging library could use the standard formatting syntax, but it would internally pass around this structure until it has been determined where output should go to.</source>
          <target state="translated">Например,библиотека протоколирования может использовать стандартный синтаксис форматирования,но она будет внутренне обходить эту структуру до тех пор,пока не будет определено,куда идти вывод.</target>
        </trans-unit>
        <trans-unit id="5e2c5e436747dc3d24355943f34ee57e52844d68" translate="yes" xml:space="preserve">
          <source>For example, a vector with capacity 10 and length 0 would be an empty vector with space for 10 more elements. Pushing 10 or fewer elements onto the vector will not change its capacity or cause reallocation to occur. However, if the vector's length is increased to 11, it will have to reallocate, which can be slow. For this reason, it is recommended to use &lt;a href=&quot;struct.vec#method.with_capacity&quot;&gt;&lt;code&gt;Vec::with_capacity&lt;/code&gt;&lt;/a&gt; whenever possible to specify how big the vector is expected to get.</source>
          <target state="translated">Например, вектор с емкостью 10 и длиной 0 будет пустым вектором с пространством для еще 10 элементов. Размещение 10 или менее элементов в векторе не приведет к изменению его емкости и не вызовет перераспределения. Однако, если длину вектора увеличить до 11, его придется перераспределить, что может быть медленным. По этой причине рекомендуется по возможности использовать &lt;a href=&quot;struct.vec#method.with_capacity&quot;&gt; &lt;code&gt;Vec::with_capacity&lt;/code&gt; &lt;/a&gt; для указания ожидаемого размера вектора.</target>
        </trans-unit>
        <trans-unit id="15c054116144a3608c09f73dba885ef5e0021d4e" translate="yes" xml:space="preserve">
          <source>For example, both &lt;code&gt;'a'&lt;/code&gt; and &lt;code&gt;&quot;aa&quot;&lt;/code&gt; are patterns that would match at index &lt;code&gt;1&lt;/code&gt; in the string &lt;code&gt;&quot;baaaab&quot;&lt;/code&gt;.</source>
          <target state="translated">Например, и &lt;code&gt;'a'&lt;/code&gt; и &lt;code&gt;&quot;aa&quot;&lt;/code&gt; - это шаблоны, которые соответствуют индексу &lt;code&gt;1&lt;/code&gt; в строке &lt;code&gt;&quot;baaaab&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdda7fdae278a2fce4f5c887aa83a373c5a696fb" translate="yes" xml:space="preserve">
          <source>For example, calling &lt;code&gt;Pin::new_unchecked&lt;/code&gt; on an &lt;code&gt;&amp;amp;'a mut T&lt;/code&gt; is unsafe because while you are able to pin it for the given lifetime &lt;code&gt;'a&lt;/code&gt;, you have no control over whether it is kept pinned once &lt;code&gt;'a&lt;/code&gt; ends:</source>
          <target state="translated">Например, вызов &lt;code&gt;Pin::new_unchecked&lt;/code&gt; для &lt;code&gt;&amp;amp;'a mut T&lt;/code&gt; небезопасен, потому что, хотя вы можете закрепить его в течение заданного времени жизни &lt;code&gt;'a&lt;/code&gt; , у вас нет контроля над тем, будет ли он закреплен после завершения &lt;code&gt;'a&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bfbfcca5281911965a5b0e44815f304c140950c7" translate="yes" xml:space="preserve">
          <source>For example, consider the case of a simple web server, which can be simplified to:</source>
          <target state="translated">Например,рассмотрим случай с простым веб-сервером,который можно упростить:</target>
        </trans-unit>
        <trans-unit id="77381e13d866eca11479a03b8f4821b0157f9d3e" translate="yes" xml:space="preserve">
          <source>For example, dataflow uses this to inject static assertions so that &lt;code&gt;rustc_peek(potentially_uninitialized)&lt;/code&gt; would actually double-check that dataflow did indeed compute that it is uninitialized at that point in the control flow.</source>
          <target state="translated">Например, поток данных использует это для вставки статических утверждений, чтобы &lt;code&gt;rustc_peek(potentially_uninitialized)&lt;/code&gt; дважды проверял, действительно ли поток данных вычислил, что он не инициализирован в этой точке потока управления.</target>
        </trans-unit>
        <trans-unit id="95fe2e68803fedf130f77f394bc5d434187ebbd8" translate="yes" xml:space="preserve">
          <source>For example, given a trait &lt;code&gt;Trait&lt;/code&gt;, the following are all trait objects:</source>
          <target state="translated">Например, для данной черты &lt;code&gt;Trait&lt;/code&gt; все следующие объекты являются объектами черты:</target>
        </trans-unit>
        <trans-unit id="072c7bf2984ac36fc73c1e383853c5c169bc7a47" translate="yes" xml:space="preserve">
          <source>For example, if for some reason we wanted to take the values produced by an instance of &lt;code&gt;Counter&lt;/code&gt;, pair them with values produced by another &lt;code&gt;Counter&lt;/code&gt; instance after skipping the first value, multiply each pair together, keep only those results that are divisible by 3, and add all the resulting values together, we could do so, as shown in the test in Listing 13-23:</source>
          <target state="translated">Например, если по какой-то причине мы хотели взять значения, созданные экземпляром &lt;code&gt;Counter&lt;/code&gt; , соединить их со значениями, созданными другим экземпляром &lt;code&gt;Counter&lt;/code&gt; после пропуска первого значения, умножить каждую пару вместе, оставить только те результаты, которые делятся на 3, и сложив все полученные значения вместе, мы могли бы сделать это, как показано в тесте в Листинге 13-23:</target>
        </trans-unit>
        <trans-unit id="d1649808c8d99c391bdbb77f15f15e2efe15c030" translate="yes" xml:space="preserve">
          <source>For example, if we want to add documentation that describes the purpose of the &lt;code&gt;my_crate&lt;/code&gt; crate that contains the &lt;code&gt;add_one&lt;/code&gt; function, we can add documentation comments that start with &lt;code&gt;//!&lt;/code&gt; to the beginning of the &lt;em&gt;src/lib.rs&lt;/em&gt; file, as shown in Listing 14-2:</source>
          <target state="translated">Например, если мы хотим добавить документацию, описывающую назначение ящика &lt;code&gt;my_crate&lt;/code&gt; , содержащего функцию &lt;code&gt;add_one&lt;/code&gt; , мы можем добавить комментарии к документации, которые начинаются с &lt;code&gt;//!&lt;/code&gt; в начало файла &lt;em&gt;src / lib.rs&lt;/em&gt; , как показано в листинге 14-2:</target>
        </trans-unit>
        <trans-unit id="018dcc20bfe547cf343634d4cd949c5d217b88cd" translate="yes" xml:space="preserve">
          <source>For example, if you want to make sure that a specific field is dropped after the others, make it the last field of a struct:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed038364c42a5f7e182a80d72dbd7c44cb810818" translate="yes" xml:space="preserve">
          <source>For example, if you wanted to get a &lt;code&gt;Pin&lt;/code&gt; of a field of something, you could use this to get access to that field in one line of code. However, there are several gotchas with these &quot;pinning projections&quot;; see the &lt;a href=&quot;index#projections-and-structural-pinning&quot;&gt;&lt;code&gt;pin&lt;/code&gt; module&lt;/a&gt; documentation for further details on that topic.</source>
          <target state="translated">Например, если вы хотите получить &lt;code&gt;Pin&lt;/code&gt; код какого-либо поля, вы можете использовать его, чтобы получить доступ к этому полю в одной строке кода. Однако с этими &amp;laquo;закрепляющими проекциями&amp;raquo; есть несколько ошибок; дополнительную информацию по этой теме см. в документации по &lt;a href=&quot;index#projections-and-structural-pinning&quot;&gt; &lt;code&gt;pin&lt;/code&gt; модулю&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="571bf6c61d49ae11d24afcb576448263d3d5f7ca" translate="yes" xml:space="preserve">
          <source>For example, in Chapter 12 we mentioned that there&amp;rsquo;s a Rust implementation of the &lt;code&gt;grep&lt;/code&gt; tool called &lt;code&gt;ripgrep&lt;/code&gt; for searching files. If we want to install &lt;code&gt;ripgrep&lt;/code&gt;, we can run the following:</source>
          <target state="translated">Например, в главе 12 мы упоминали, что существует реализация Rust инструмента &lt;code&gt;grep&lt;/code&gt; под названием &lt;code&gt;ripgrep&lt;/code&gt; для поиска файлов. Если мы хотим установить &lt;code&gt;ripgrep&lt;/code&gt; , мы можем запустить следующее:</target>
        </trans-unit>
        <trans-unit id="7823fda3f1a738b0793d510efb6630e193e80753" translate="yes" xml:space="preserve">
          <source>For example, in Listing 10-13, we implemented the &lt;code&gt;Summary&lt;/code&gt; trait on the &lt;code&gt;NewsArticle&lt;/code&gt; and &lt;code&gt;Tweet&lt;/code&gt; types. We can define a &lt;code&gt;notify&lt;/code&gt; function that calls the &lt;code&gt;summarize&lt;/code&gt; method on its &lt;code&gt;item&lt;/code&gt; parameter, which is of some type that implements the &lt;code&gt;Summary&lt;/code&gt; trait. To do this, we can use the &lt;code&gt;impl Trait&lt;/code&gt; syntax, like this:</source>
          <target state="translated">Например, в листинге 10-13 мы реализовали трейт &lt;code&gt;Summary&lt;/code&gt; для типов &lt;code&gt;NewsArticle&lt;/code&gt; и &lt;code&gt;Tweet&lt;/code&gt; . Мы можем определить функцию &lt;code&gt;notify&lt;/code&gt; которая вызывает метод &lt;code&gt;summarize&lt;/code&gt; для своего параметра &lt;code&gt;item&lt;/code&gt; , который имеет некоторый тип, реализующий черту &lt;code&gt;Summary&lt;/code&gt; . Для этого мы можем использовать синтаксис &lt;code&gt;impl Trait&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="486ea7dfb7b30caa97edaa5c45c8d899d49328bd" translate="yes" xml:space="preserve">
          <source>For example, in the below example, since the enum is marked as &lt;code&gt;non_exhaustive&lt;/code&gt;, it is required that downstream crates match non-exhaustively on it.</source>
          <target state="translated">Например, в приведенном ниже примере, поскольку перечисление помечено как &lt;code&gt;non_exhaustive&lt;/code&gt; , требуется, чтобы нижележащие ящики соответствовали ему не полностью.</target>
        </trans-unit>
        <trans-unit id="ef1242010b70221ef0947673271efa44f22329d9" translate="yes" xml:space="preserve">
          <source>For example, in the code in Listing 3-4, if you changed the definition of the &lt;code&gt;a&lt;/code&gt; array to have four elements but forgot to update the condition to &lt;code&gt;while index &amp;lt; 4&lt;/code&gt;, the code would panic. Using the &lt;code&gt;for&lt;/code&gt; loop, you wouldn&amp;rsquo;t need to remember to change any other code if you changed the number of values in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef6c4c588de41928f2df858cbeb2e205bc6fd49" translate="yes" xml:space="preserve">
          <source>For example, in the code in Listing 3-4, if you removed an item from the &lt;code&gt;a&lt;/code&gt; array but forgot to update the condition to &lt;code&gt;while index &amp;lt; 4&lt;/code&gt;, the code would panic. Using the &lt;code&gt;for&lt;/code&gt; loop, you wouldn&amp;rsquo;t need to remember to change any other code if you changed the number of values in the array.</source>
          <target state="translated">Например, в коде в листинге 3-4, если вы удалили элемент из &lt;code&gt;a&lt;/code&gt; массиве , но забыл обновить состояние до , &lt;code&gt;while index &amp;lt; 4&lt;/code&gt; , то код будет паниковать. Используя цикл &lt;code&gt;for&lt;/code&gt; , вам не нужно помнить об изменении любого другого кода, если вы изменили количество значений в массиве.</target>
        </trans-unit>
        <trans-unit id="e1af9e58057bb08d42a00f959d4a9482b5211903" translate="yes" xml:space="preserve">
          <source>For example, in the following code:</source>
          <target state="translated">Например,в следующем коде:</target>
        </trans-unit>
        <trans-unit id="fa8a840ae5de7e7d26ee293da2703a78a823f744" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s change &lt;em&gt;src/main.rs&lt;/em&gt; to the following:</source>
          <target state="translated">Например, изменим &lt;em&gt;src / main.rs&lt;/em&gt; на следующее:</target>
        </trans-unit>
        <trans-unit id="bb34889b7e2a2e1630ad6fd19ca5c05805b4edf0" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s say we have a function that greets people by name and we want to test that the name we pass into the function appears in the output:</source>
          <target state="translated">Например, предположим, что у нас есть функция, которая приветствует людей по имени, и мы хотим проверить, отображается ли имя, которое мы передаем функции, в выводе:</target>
        </trans-unit>
        <trans-unit id="df2b03fc7d0094e8a94e4730123f2cb77700187c" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s say we have multiple structs that hold various kinds and amounts of text: a &lt;code&gt;NewsArticle&lt;/code&gt; struct that holds a news story filed in a particular location and a &lt;code&gt;Tweet&lt;/code&gt; that can have at most 280 characters along with metadata that indicates whether it was a new tweet, a retweet, or a reply to another tweet.</source>
          <target state="translated">Например, предположим, что у нас есть несколько структур, которые содержат различные виды и объемы текста: структура &lt;code&gt;NewsArticle&lt;/code&gt; , которая содержит новость, поданную в определенном месте, и &lt;code&gt;Tweet&lt;/code&gt; который может содержать не более 280 символов вместе с метаданными, указывающими, был ли это новый твит, ретвит или ответ на другой твит.</target>
        </trans-unit>
        <trans-unit id="5beb741830fde205d90a1dcb79133d20364520e1" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s say we want to make an &lt;code&gt;OutlinePrint&lt;/code&gt; trait with an &lt;code&gt;outline_print&lt;/code&gt; method that will print a value framed in asterisks. That is, given a &lt;code&gt;Point&lt;/code&gt; struct that implements &lt;code&gt;Display&lt;/code&gt; to result in &lt;code&gt;(x, y)&lt;/code&gt;, when we call &lt;code&gt;outline_print&lt;/code&gt; on a &lt;code&gt;Point&lt;/code&gt; instance that has &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;3&lt;/code&gt; for &lt;code&gt;y&lt;/code&gt;, it should print the following:</source>
          <target state="translated">Например, предположим, что мы хотим создать &lt;code&gt;OutlinePrint&lt;/code&gt; с помощью метода &lt;code&gt;outline_print&lt;/code&gt; , который будет печатать значение, выделенное звездочками. То есть, учитывая структуру &lt;code&gt;Point&lt;/code&gt; , которая реализует &lt;code&gt;Display&lt;/code&gt; для получения результата &lt;code&gt;(x, y)&lt;/code&gt; , когда мы вызываем &lt;code&gt;outline_print&lt;/code&gt; для экземпляра &lt;code&gt;Point&lt;/code&gt; , который имеет &lt;code&gt;1&lt;/code&gt; для &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;3&lt;/code&gt; для &lt;code&gt;y&lt;/code&gt; , он должен напечатать следующее:</target>
        </trans-unit>
        <trans-unit id="67eefc842f1334a9710cea463d2936fc943cb35a" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s start from the code in Listing 7-17 and move the &lt;code&gt;front_of_house&lt;/code&gt; module to its own file &lt;em&gt;src/front_of_house.rs&lt;/em&gt; by changing the crate root file so it contains the code shown in Listing 7-21. In this case, the crate root file is &lt;em&gt;src/lib.rs&lt;/em&gt;, but this procedure also works with binary crates whose crate root file is &lt;em&gt;src/main.rs&lt;/em&gt;.</source>
          <target state="translated">Например, давайте начнем с кода в листинге 7-17 и переместим модуль &lt;code&gt;front_of_house&lt;/code&gt; в его собственный файл &lt;em&gt;src / front_of_house.rs&lt;/em&gt; , изменив корневой файл ящика так, чтобы он содержал код, показанный в листинге 7-21. В этом случае обрешетки корневого файл &lt;em&gt;SRC / lib.rs&lt;/em&gt; , но эта процедура также работает с бинарными обрешетками , чья обрешетка корневого файл &lt;em&gt;SRC / main.rs&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="79ba89b628a47ae9fac2bb7b0ff7554c4c375147" translate="yes" xml:space="preserve">
          <source>For example, reading line-by-line is inefficient without using a buffer, so if you want to read by line, you'll need &lt;code&gt;BufRead&lt;/code&gt;, which includes a &lt;a href=&quot;#method.read_line&quot;&gt;&lt;code&gt;read_line&lt;/code&gt;&lt;/a&gt; method as well as a &lt;a href=&quot;#method.lines&quot;&gt;&lt;code&gt;lines&lt;/code&gt;&lt;/a&gt; iterator.</source>
          <target state="translated">Например, построчное чтение без использования буфера неэффективно, поэтому, если вы хотите читать построчно, вам понадобится &lt;code&gt;BufRead&lt;/code&gt; , который включает метод &lt;a href=&quot;#method.read_line&quot;&gt; &lt;code&gt;read_line&lt;/code&gt; ,&lt;/a&gt; а также итератор &lt;a href=&quot;#method.lines&quot;&gt; &lt;code&gt;lines&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7ee5d959d1301ac8a3ca0cb560c0412e0eaf4ece" translate="yes" xml:space="preserve">
          <source>For example, reading line-by-line is inefficient without using a buffer, so if you want to read by line, you'll need &lt;code&gt;BufRead&lt;/code&gt;, which includes a &lt;a href=&quot;trait.bufread#method.read_line&quot;&gt;&lt;code&gt;read_line&lt;/code&gt;&lt;/a&gt; method as well as a &lt;a href=&quot;trait.bufread#method.lines&quot;&gt;&lt;code&gt;lines&lt;/code&gt;&lt;/a&gt; iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d283913d102f25021490de7addfaf1023c5a559" translate="yes" xml:space="preserve">
          <source>For example, recall the cons list example in Listing 15-18 where we used &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; to allow multiple lists to share ownership of another list. Because &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; holds only immutable values, we can&amp;rsquo;t change any of the values in the list once we&amp;rsquo;ve created them. Let&amp;rsquo;s add in &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; to gain the ability to change the values in the lists. Listing 15-24 shows that by using a &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; in the &lt;code&gt;Cons&lt;/code&gt; definition, we can modify the value stored in all the lists:</source>
          <target state="translated">Например, вспомните пример списка cons в Листинге 15-18, где мы использовали &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; чтобы позволить нескольким спискам совместно владеть другим списком. Поскольку &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; содержит только неизменяемые значения, мы не можем изменить ни одно из значений в списке после их создания. Давайте добавим &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; чтобы получить возможность изменять значения в списках. В листинге 15-24 показано, что, используя &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; в определении &lt;code&gt;Cons&lt;/code&gt; , мы можем изменить значение, хранящееся во всех списках:</target>
        </trans-unit>
        <trans-unit id="55a0a06bf1a6582afc9c911dda23940db684b038" translate="yes" xml:space="preserve">
          <source>For example, say each of your tests runs some code that creates a file on disk named &lt;em&gt;test-output.txt&lt;/em&gt; and writes some data to that file. Then each test reads the data in that file and asserts that the file contains a particular value, which is different in each test. Because the tests run at the same time, one test might overwrite the file between when another test writes and reads the file. The second test will then fail, not because the code is incorrect but because the tests have interfered with each other while running in parallel. One solution is to make sure each test writes to a different file; another solution is to run the tests one at a time.</source>
          <target state="translated">Например, предположим, что каждый из ваших тестов запускает некоторый код, который создает на диске файл с именем &lt;em&gt;test-output.txt&lt;/em&gt; и записывает некоторые данные в этот файл. Затем каждый тест считывает данные из этого файла и утверждает, что файл содержит определенное значение, которое отличается в каждом тесте. Поскольку тесты выполняются одновременно, один тест может перезаписать файл между тем, когда другой тест записывает и читает файл. Тогда второй тест завершится неудачно не потому, что код неправильный, а потому, что тесты мешали друг другу при параллельной работе. Одно из решений - убедиться, что каждый тест записывает в отдельный файл; другое решение - запускать тесты по одному.</target>
        </trans-unit>
        <trans-unit id="4814345fbf007312eaa1283d22f4721e9e65da7f" translate="yes" xml:space="preserve">
          <source>For example, say we had two functions: one that finds the largest item in a slice of &lt;code&gt;i32&lt;/code&gt; values and one that finds the largest item in a slice of &lt;code&gt;char&lt;/code&gt; values. How would we eliminate that duplication? Let&amp;rsquo;s find out!</source>
          <target state="translated">Например, предположим, что у нас есть две функции: одна, которая находит самый большой элемент в срезе значений &lt;code&gt;i32&lt;/code&gt; , и вторая, которая находит самый большой элемент в срезе значений &lt;code&gt;char&lt;/code&gt; . Как нам устранить это дублирование? Давайте разберемся!</target>
        </trans-unit>
        <trans-unit id="4cba319e8cf72cafc05de924ba069b585b2c709d" translate="yes" xml:space="preserve">
          <source>For example, say we made a library named &lt;code&gt;art&lt;/code&gt; for modeling artistic concepts. Within this library are two modules: a &lt;code&gt;kinds&lt;/code&gt; module containing two enums named &lt;code&gt;PrimaryColor&lt;/code&gt; and &lt;code&gt;SecondaryColor&lt;/code&gt; and a &lt;code&gt;utils&lt;/code&gt; module containing a function named &lt;code&gt;mix&lt;/code&gt;, as shown in Listing 14-3:</source>
          <target state="translated">Например, допустим, мы создали библиотеку под названием &lt;code&gt;art&lt;/code&gt; для моделирования художественных концепций. В этой библиотеке два модуля: а &lt;code&gt;kinds&lt;/code&gt; модуль , содержащий два перечислений названные &lt;code&gt;PrimaryColor&lt;/code&gt; и &lt;code&gt;SecondaryColor&lt;/code&gt; и через &lt;code&gt;utils&lt;/code&gt; модуль , содержащий функцию с именем &lt;code&gt;mix&lt;/code&gt; , как показано в листинге 14-3:</target>
        </trans-unit>
        <trans-unit id="6034956f55199745f53b082e0813b66b3ccd59d0" translate="yes" xml:space="preserve">
          <source>For example, say we want to get values from a row in a spreadsheet in which some of the columns in the row contain integers, some floating-point numbers, and some strings. We can define an enum whose variants will hold the different value types, and then all the enum variants will be considered the same type: that of the enum. Then we can create a vector that holds that enum and so, ultimately, holds different types. We&amp;rsquo;ve demonstrated this in Listing 8-10.</source>
          <target state="translated">Например, предположим, что мы хотим получить значения из строки в электронной таблице, в которой некоторые столбцы в строке содержат целые числа, некоторые числа с плавающей запятой и некоторые строки. Мы можем определить перечисление, варианты которого будут содержать разные типы значений, и тогда все варианты перечисления будут считаться одним типом: типом перечисления. Затем мы можем создать вектор, который содержит это перечисление и, таким образом, в конечном итоге содержит разные типы. Мы продемонстрировали это в Листинге 8-10.</target>
        </trans-unit>
        <trans-unit id="fa13929a3b270eef2878bd884ac068ec70c4ce69" translate="yes" xml:space="preserve">
          <source>For example, say you write a program that uses an approximation of a mathematical constant, such as pi, as this program does:</source>
          <target state="translated">Например,скажем,вы пишете программу,которая использует аппроксимацию математической константы,такой как пи,как эта программа:</target>
        </trans-unit>
        <trans-unit id="6a1d451b5816383f70b638071c7a253213366d2b" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;trait.tryfrom&quot;&gt;&lt;code&gt;TryFrom&lt;/code&gt;&lt;/a&gt; trait (conversion that returns a &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;) has a blanket implementation for all types where a reverse &lt;a href=&quot;trait.into&quot;&gt;&lt;code&gt;Into&lt;/code&gt;&lt;/a&gt; implementation exists.</source>
          <target state="translated">Например, &lt;a href=&quot;trait.tryfrom&quot;&gt; &lt;code&gt;TryFrom&lt;/code&gt; &lt;/a&gt; (преобразование, возвращающее &lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; ) имеет общую реализацию для всех типов, где существует обратная реализация &lt;a href=&quot;trait.into&quot;&gt; &lt;code&gt;Into&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="151702debd099e963ea8f32f250d147e3f891b7b" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;Foo&lt;/code&gt; struct below has no type parameters, but is supplied with two in the definition of &lt;code&gt;Bar&lt;/code&gt;:</source>
          <target state="translated">Например, структура &lt;code&gt;Foo&lt;/code&gt; ниже не имеет параметров типа, но поставляется с двумя параметрами в определении &lt;code&gt;Bar&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="55ee334160f14fc8439e8031cfca7e75b754c140" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;Foo&lt;/code&gt; struct below is defined to be generic in &lt;code&gt;T&lt;/code&gt;, but the type parameter is missing in the definition of &lt;code&gt;Bar&lt;/code&gt;:</source>
          <target state="translated">Например, структура &lt;code&gt;Foo&lt;/code&gt; ниже определена как общая в &lt;code&gt;T&lt;/code&gt; , но параметр типа отсутствует в определении &lt;code&gt;Bar&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c5ce73524ef8f36dbf496c73993c1de5644cb594" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;Foo&lt;/code&gt; trait has a method &lt;code&gt;foo&lt;/code&gt; with a type parameter &lt;code&gt;T&lt;/code&gt;, but the implementation of &lt;code&gt;foo&lt;/code&gt; for the type &lt;code&gt;Bar&lt;/code&gt; is missing this parameter. To fix this error, they must have the same type parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f472151ef9c4c8e584f48b10f04fca2193dee33" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;Foo&lt;/code&gt; trait has a method &lt;code&gt;foo&lt;/code&gt; with two function parameters (&lt;code&gt;&amp;amp;self&lt;/code&gt; and &lt;code&gt;u8&lt;/code&gt;), but the implementation of &lt;code&gt;foo&lt;/code&gt; for the type &lt;code&gt;Bar&lt;/code&gt; omits the &lt;code&gt;u8&lt;/code&gt; parameter. To fix this error, they must have the same parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28582c1af9d66b47d8b372c20e239e80fd1b954e" translate="yes" xml:space="preserve">
          <source>For example, the code above can be fixed to:</source>
          <target state="translated">Например,можно исправить приведенный выше код:</target>
        </trans-unit>
        <trans-unit id="d4ec33ffd8a400e8731c3959c2108ca0e6ee81ff" translate="yes" xml:space="preserve">
          <source>For example, the following &lt;a href=&quot;../macro.format&quot;&gt;&lt;code&gt;format!&lt;/code&gt;&lt;/a&gt; expressions all use named argument:</source>
          <target state="translated">Например, следующий &lt;a href=&quot;../macro.format&quot;&gt; &lt;code&gt;format!&lt;/code&gt; &lt;/a&gt;все выражения используют именованный аргумент:</target>
        </trans-unit>
        <trans-unit id="00c40dd32be2ecfc7a31834a5b9e57d6d91eabce" translate="yes" xml:space="preserve">
          <source>For example, the following &lt;code&gt;match&lt;/code&gt; block has too many arms:</source>
          <target state="translated">Например, в следующем блоке &lt;code&gt;match&lt;/code&gt; слишком много рук:</target>
        </trans-unit>
        <trans-unit id="ccff2a62302aec83d3032aa28ffe87629cd5d301" translate="yes" xml:space="preserve">
          <source>For example, the following calls all print the same thing &lt;code&gt;Hello x is 0.01000&lt;/code&gt;:</source>
          <target state="translated">Например, все следующие вызовы &lt;code&gt;Hello x is 0.01000&lt;/code&gt; одно и то же Hello x, равное 0,01000 :</target>
        </trans-unit>
        <trans-unit id="f8410f740d252ba94b087c65dca435d74ad4c130" translate="yes" xml:space="preserve">
          <source>For example, the following code defines an inert &lt;code&gt;some_inert_attribute&lt;/code&gt; attribute that is not formally defined anywhere and the &lt;code&gt;some_proc_macro_attribute&lt;/code&gt; procedural macro is responsible for detecting its presence and removing it from the output token stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea53cb95724623abd128d3eeb0328ecf14aacb1" translate="yes" xml:space="preserve">
          <source>For example, the following code will always print &lt;code&gt;1.5&lt;/code&gt; even if the system locale uses a decimal separator other than a dot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885017323eb28c594e76743a2b0d28eacb31ef45" translate="yes" xml:space="preserve">
          <source>For example, the following defines the type &lt;code&gt;Point&lt;/code&gt; as a synonym for the type &lt;code&gt;(u8, u8)&lt;/code&gt;, the type of pairs of unsigned 8 bit integers:</source>
          <target state="translated">Например, следующее определяет тип &lt;code&gt;Point&lt;/code&gt; как синоним типа &lt;code&gt;(u8, u8)&lt;/code&gt; , типа пар 8-битных целых чисел без знака:</target>
        </trans-unit>
        <trans-unit id="7cf92604c65fd608b9bab83d5d85641029aff675" translate="yes" xml:space="preserve">
          <source>For example, the following derive macro defines a helper attribute &lt;code&gt;helper&lt;/code&gt;, but ultimately doesn't do anything with it.</source>
          <target state="translated">Например, следующий макрос Выведите определяет атрибут помощника &lt;code&gt;helper&lt;/code&gt; , но в конечном счете , ничего с ним не делать.</target>
        </trans-unit>
        <trans-unit id="b4bc188ed3ec55a280f2bbbfb77e3725b58a7535" translate="yes" xml:space="preserve">
          <source>For example, the following macro definition ignores its input and outputs a function &lt;code&gt;answer&lt;/code&gt; into its scope.</source>
          <target state="translated">Например, следующее определение макроса игнорирует его ввод и выводит &lt;code&gt;answer&lt;/code&gt; функции в свою область видимости.</target>
        </trans-unit>
        <trans-unit id="57464fd8804b2cf7021000e159e4c26bf42d7d2e" translate="yes" xml:space="preserve">
          <source>For example, the following will create an &lt;a href=&quot;../items/implementations&quot;&gt;&lt;code&gt;impl&lt;/code&gt; item&lt;/a&gt; for the &lt;a href=&quot;../../std/cmp/trait.partialeq&quot;&gt;&lt;code&gt;PartialEq&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../std/clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt; traits for &lt;code&gt;Foo&lt;/code&gt;, and the type parameter &lt;code&gt;T&lt;/code&gt; will be given the &lt;code&gt;PartialEq&lt;/code&gt; or &lt;code&gt;Clone&lt;/code&gt; constraints for the appropriate &lt;code&gt;impl&lt;/code&gt;:</source>
          <target state="translated">Например, следующее создаст &lt;a href=&quot;../items/implementations&quot;&gt;элемент &lt;/a&gt; &lt;code&gt;impl&lt;/code&gt; для &lt;a href=&quot;../../std/cmp/trait.partialeq&quot;&gt; &lt;code&gt;PartialEq&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../../std/clone/trait.clone&quot;&gt; &lt;code&gt;Clone&lt;/code&gt; &lt;/a&gt; для &lt;code&gt;Foo&lt;/code&gt; , а параметру типа &lt;code&gt;T&lt;/code&gt; будут даны ограничения &lt;code&gt;PartialEq&lt;/code&gt; или &lt;code&gt;Clone&lt;/code&gt; для соответствующего &lt;code&gt;impl&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="54f0cc8d17f1c6f2f1e67596b770e99d8f237e11" translate="yes" xml:space="preserve">
          <source>For example, the function above behaves as if it was written as:</source>
          <target state="translated">Например,вышеприведенная функция ведет себя так,как будто она была написана как:</target>
        </trans-unit>
        <trans-unit id="6c27c96db626276f442777ef3f3477feae99f3a5" translate="yes" xml:space="preserve">
          <source>For example, the sized array type &lt;code&gt;[i8; 2]&lt;/code&gt; implements &lt;code&gt;Unsize&amp;lt;[i8]&amp;gt;&lt;/code&gt; and &lt;code&gt;Unsize&amp;lt;dyn fmt::Debug&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366340c67c059c204db621f7eae2415b246044b0" translate="yes" xml:space="preserve">
          <source>For example, the sized array type &lt;code&gt;[i8; 2]&lt;/code&gt; implements &lt;code&gt;Unsize&amp;lt;[i8]&amp;gt;&lt;/code&gt; and &lt;code&gt;Unsize&amp;lt;fmt::Debug&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Например, размер массива type &lt;code&gt;[i8; 2]&lt;/code&gt; реализует &lt;code&gt;Unsize&amp;lt;[i8]&amp;gt;&lt;/code&gt; и &lt;code&gt;Unsize&amp;lt;fmt::Debug&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9fd0eff00179b77af92d43c41f240143cf69cdfa" translate="yes" xml:space="preserve">
          <source>For example, the trait below has a method &lt;code&gt;foo&lt;/code&gt; with a type parameter &lt;code&gt;T&lt;/code&gt;, but the implementation of &lt;code&gt;foo&lt;/code&gt; for the type &lt;code&gt;Bar&lt;/code&gt; is missing this parameter:</source>
          <target state="translated">Например, в приведенной ниже характеристике есть метод &lt;code&gt;foo&lt;/code&gt; с параметром типа &lt;code&gt;T&lt;/code&gt; , но в реализации &lt;code&gt;foo&lt;/code&gt; для типа &lt;code&gt;Bar&lt;/code&gt; этот параметр отсутствует:</target>
        </trans-unit>
        <trans-unit id="8b644523186dc68fa33f4525c4f5b85593ff99b3" translate="yes" xml:space="preserve">
          <source>For example, the trait below has a method &lt;code&gt;foo&lt;/code&gt; with two function parameters (&lt;code&gt;&amp;amp;self&lt;/code&gt; and &lt;code&gt;u8&lt;/code&gt;), but the implementation of &lt;code&gt;foo&lt;/code&gt; for the type &lt;code&gt;Bar&lt;/code&gt; omits the &lt;code&gt;u8&lt;/code&gt; parameter:</source>
          <target state="translated">Например, в приведенном ниже &lt;code&gt;u8&lt;/code&gt; есть метод &lt;code&gt;foo&lt;/code&gt; с двумя параметрами функции ( &lt;code&gt;&amp;amp;self&lt;/code&gt; и u8 ), но реализация &lt;code&gt;foo&lt;/code&gt; для типа &lt;code&gt;Bar&lt;/code&gt; опускает параметр &lt;code&gt;u8&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b2054ac7104ff8f94e8f0fe677bda5de864b59e2" translate="yes" xml:space="preserve">
          <source>For example, these two matches on &lt;code&gt;x: &amp;amp;i32&lt;/code&gt; are equivalent:</source>
          <target state="translated">Например, эти два совпадения на &lt;code&gt;x: &amp;amp;i32&lt;/code&gt; эквивалентны:</target>
        </trans-unit>
        <trans-unit id="0f0ebafee793ef772176055bfbe1e63d094aa7f0" translate="yes" xml:space="preserve">
          <source>For example, this attribute macro takes the input stream and returns it as is, effectively being the no-op of attributes.</source>
          <target state="translated">Например,данный атрибутный макрос берет входной поток и возвращает его как есть,фактически являясь отсутствием атрибутов.</target>
        </trans-unit>
        <trans-unit id="3b2d902f733498146c7d79ff0d4666385f011551" translate="yes" xml:space="preserve">
          <source>For example, this can happen when a drop has taken place:</source>
          <target state="translated">Например,это может произойти,когда произошла капля:</target>
        </trans-unit>
        <trans-unit id="d7dedeceba4a8900e43a594ae72dc887e0a2e3eb" translate="yes" xml:space="preserve">
          <source>For example, this can happen when storing a &lt;code&gt;&amp;amp;mut&lt;/code&gt; inside an immutable &lt;code&gt;Box&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5807b7a347e69661509cba501c2fe0d4b703ef04" translate="yes" xml:space="preserve">
          <source>For example, this function returns &lt;code&gt;true&lt;/code&gt; on unix platforms and &lt;code&gt;false&lt;/code&gt; on other platforms.</source>
          <target state="translated">Например, эта функция возвращает &lt;code&gt;true&lt;/code&gt; на платформах unix и &lt;code&gt;false&lt;/code&gt; на других платформах.</target>
        </trans-unit>
        <trans-unit id="bfe3e762f0308c232acfe535a85b5bf692d7a562" translate="yes" xml:space="preserve">
          <source>For example, this is a simple function:</source>
          <target state="translated">Например,это простая функция:</target>
        </trans-unit>
        <trans-unit id="574f015c9f879de83a47af30c961f0cb2ef98124" translate="yes" xml:space="preserve">
          <source>For example, we can refactor the code in Listing 18-15 to support RGB and HSV colors in the &lt;code&gt;ChangeColor&lt;/code&gt; message, as shown in Listing 18-16.</source>
          <target state="translated">Например, мы можем реорганизовать код в листинге 18-15 для поддержки цветов RGB и HSV в сообщении &lt;code&gt;ChangeColor&lt;/code&gt; , как показано в листинге 18-16.</target>
        </trans-unit>
        <trans-unit id="f82030bd7f1111a5c705663c05195d4bd4d79595" translate="yes" xml:space="preserve">
          <source>For example, while &lt;a href=&quot;../f64/index&quot;&gt;&lt;code&gt;f64&lt;/code&gt;&lt;/a&gt; doesn't implement &lt;a href=&quot;../cmp/trait.ord&quot;&gt;&lt;code&gt;Ord&lt;/code&gt;&lt;/a&gt; because &lt;code&gt;NaN != NaN&lt;/code&gt;, we can use &lt;code&gt;partial_cmp&lt;/code&gt; as our sort function when we know the slice doesn't contain a &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">Например, хотя &lt;a href=&quot;../f64/index&quot;&gt; &lt;code&gt;f64&lt;/code&gt; &lt;/a&gt; не реализует &lt;a href=&quot;../cmp/trait.ord&quot;&gt; &lt;code&gt;Ord&lt;/code&gt; ,&lt;/a&gt; потому что &lt;code&gt;NaN != NaN&lt;/code&gt; , мы можем использовать &lt;code&gt;partial_cmp&lt;/code&gt; в качестве нашей функции сортировки, если знаем, что срез не содержит &lt;code&gt;NaN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6422942d92b193786388ab0bda397e05164540c1" translate="yes" xml:space="preserve">
          <source>For example, while &lt;a href=&quot;../primitive.f64&quot;&gt;&lt;code&gt;f64&lt;/code&gt;&lt;/a&gt; doesn't implement &lt;a href=&quot;../cmp/trait.ord&quot;&gt;&lt;code&gt;Ord&lt;/code&gt;&lt;/a&gt; because &lt;code&gt;NaN != NaN&lt;/code&gt;, we can use &lt;code&gt;partial_cmp&lt;/code&gt; as our sort function when we know the slice doesn't contain a &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b764d8204b44c3e5e2540dd303c676cd8f62e40" translate="yes" xml:space="preserve">
          <source>For example, while &lt;a href=&quot;f64/index&quot;&gt;&lt;code&gt;f64&lt;/code&gt;&lt;/a&gt; doesn't implement &lt;a href=&quot;cmp/trait.ord&quot;&gt;&lt;code&gt;Ord&lt;/code&gt;&lt;/a&gt; because &lt;code&gt;NaN != NaN&lt;/code&gt;, we can use &lt;code&gt;partial_cmp&lt;/code&gt; as our sort function when we know the slice doesn't contain a &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">Например, хотя &lt;a href=&quot;f64/index&quot;&gt; &lt;code&gt;f64&lt;/code&gt; &lt;/a&gt; не реализует &lt;a href=&quot;cmp/trait.ord&quot;&gt; &lt;code&gt;Ord&lt;/code&gt; ,&lt;/a&gt; потому что &lt;code&gt;NaN != NaN&lt;/code&gt; , мы можем использовать &lt;code&gt;partial_cmp&lt;/code&gt; в качестве нашей функции сортировки, если знаем, что срез не содержит &lt;code&gt;NaN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e424d677e36813abb83127c7379735d7c5273964" translate="yes" xml:space="preserve">
          <source>For example, while &lt;a href=&quot;primitive.f64&quot;&gt;&lt;code&gt;f64&lt;/code&gt;&lt;/a&gt; doesn't implement &lt;a href=&quot;cmp/trait.ord&quot;&gt;&lt;code&gt;Ord&lt;/code&gt;&lt;/a&gt; because &lt;code&gt;NaN != NaN&lt;/code&gt;, we can use &lt;code&gt;partial_cmp&lt;/code&gt; as our sort function when we know the slice doesn't contain a &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8dc8734abe186200131ed8ac632d434e048366c" translate="yes" xml:space="preserve">
          <source>For example, with a &lt;code&gt;repr(C, u8)&lt;/code&gt; enum it is not possible to have 257 unique discriminants (&quot;tags&quot;) whereas the same enum with only a &lt;code&gt;repr(C)&lt;/code&gt; attribute will compile without any problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94d1535c10da4f2821748f9ce38729f26e00dbe" translate="yes" xml:space="preserve">
          <source>For example, with:</source>
          <target state="translated">Например,с:</target>
        </trans-unit>
        <trans-unit id="17eeedca2613fada694d9a21076a8833ab19837f" translate="yes" xml:space="preserve">
          <source>For example, you could implement &lt;code&gt;Drop&lt;/code&gt; as follows:</source>
          <target state="translated">Например, вы можете реализовать &lt;code&gt;Drop&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="0e89540393294fb9755a8c7be8446018477b85f9" translate="yes" xml:space="preserve">
          <source>For example, you may have done something like:</source>
          <target state="translated">Например,вы могли сделать что-то подобное:</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>
        </trans-unit>
        <trans-unit id="e2ec009e5911b36cd0b755b32a4d4072a53597da" translate="yes" xml:space="preserve">
          <source>For example: By creating a generic function that takes an &lt;code&gt;AsRef&amp;lt;str&amp;gt;&lt;/code&gt; we express that we want to accept all references that can be converted to &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; as an argument. Since both &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; implement &lt;code&gt;AsRef&amp;lt;str&amp;gt;&lt;/code&gt; we can accept both as input argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67a863b99ff7d27d3808154564c3bc4114136bc" translate="yes" xml:space="preserve">
          <source>For example: By creating a generic function that takes an &lt;code&gt;AsRef&amp;lt;str&amp;gt;&lt;/code&gt; we express that we want to accept all references that can be converted to &lt;code&gt;&amp;amp;str&lt;/code&gt; as an argument. Since both &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;&amp;amp;str&lt;/code&gt; implement &lt;code&gt;AsRef&amp;lt;str&amp;gt;&lt;/code&gt; we can accept both as input argument.</source>
          <target state="translated">Например: создавая универсальную функцию, которая принимает &lt;code&gt;AsRef&amp;lt;str&amp;gt;&lt;/code&gt; мы выражаем, что хотим принять все ссылки, которые могут быть преобразованы в &lt;code&gt;&amp;amp;str&lt;/code&gt; в качестве аргумента. Поскольку и &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; ,&lt;/a&gt; и &lt;code&gt;&amp;amp;str&lt;/code&gt; реализуют &lt;code&gt;AsRef&amp;lt;str&amp;gt;&lt;/code&gt; мы можем принять оба как входной аргумент.</target>
        </trans-unit>
        <trans-unit id="7b85128b7000b81f6830c4ca37b9c6350ef69882" translate="yes" xml:space="preserve">
          <source>For example: By creating a generic function that takes an &lt;code&gt;AsRef&amp;lt;str&amp;gt;&lt;/code&gt; we express that we want to accept all references that can be converted to [&lt;code&gt;&amp;amp;str&lt;/code&gt;] as an argument. Since both &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and [&lt;code&gt;&amp;amp;str&lt;/code&gt;] implement &lt;code&gt;AsRef&amp;lt;str&amp;gt;&lt;/code&gt; we can accept both as input argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c242c0b4118acc9ccca5d9ffb3d5007ec8e99339" translate="yes" xml:space="preserve">
          <source>For expensive key functions (e.g. functions that are not simple property accesses or basic operations), &lt;a href=&quot;#method.sort_by_cached_key&quot;&gt;&lt;code&gt;sort_by_cached_key&lt;/code&gt;&lt;/a&gt; is likely to be significantly faster, as it does not recompute element keys.</source>
          <target state="translated">Для дорогостоящих ключевых функций (например, функций, которые не являются простыми доступами к свойствам или базовыми операциями) &lt;a href=&quot;#method.sort_by_cached_key&quot;&gt; &lt;code&gt;sort_by_cached_key&lt;/code&gt; &lt;/a&gt; , вероятно, будет значительно быстрее, поскольку он не пересчитывает ключи элементов.</target>
        </trans-unit>
        <trans-unit id="fac202d9a81aa406cb4f2aa07e7d19ccd78a9e21" translate="yes" xml:space="preserve">
          <source>For floating-point types, this indicates how many digits after the decimal point should be printed.</source>
          <target state="translated">Для типов с плавающей точкой это указывает,сколько цифр после запятой должно быть выведено.</target>
        </trans-unit>
        <trans-unit id="60a97f7f70b38aec22b5767907484329e4b88190" translate="yes" xml:space="preserve">
          <source>For generic types (counting the built-in types above as generic over &lt;code&gt;T&lt;/code&gt;), if a generic implementation is available, then the compiler does not automatically implement it for types that could use the implementation except that they do not meet the requisite trait bounds. For instance, the standard library implements &lt;code&gt;Send&lt;/code&gt; for all &lt;code&gt;&amp;amp;T&lt;/code&gt; where &lt;code&gt;T&lt;/code&gt; is &lt;code&gt;Sync&lt;/code&gt;; this means that the compiler will not implement &lt;code&gt;Send&lt;/code&gt; for &lt;code&gt;&amp;amp;T&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; is &lt;code&gt;Send&lt;/code&gt; but not &lt;code&gt;Sync&lt;/code&gt;.</source>
          <target state="translated">Для универсальных типов (считая встроенные типы выше как универсальные по сравнению с &lt;code&gt;T&lt;/code&gt; ), если универсальная реализация доступна, то компилятор не реализует ее автоматически для типов, которые могут использовать эту реализацию, за исключением того, что они не соответствуют требуемым границам черт. Например, стандартная библиотека реализует &lt;code&gt;Send&lt;/code&gt; для всех &lt;code&gt;&amp;amp;T&lt;/code&gt; где &lt;code&gt;T&lt;/code&gt; - это &lt;code&gt;Sync&lt;/code&gt; ; это означает, что компилятор не будет реализовывать &lt;code&gt;Send&lt;/code&gt; for &lt;code&gt;&amp;amp;T&lt;/code&gt; если &lt;code&gt;T&lt;/code&gt; равно &lt;code&gt;Send&lt;/code&gt; , но не &lt;code&gt;Sync&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9bb6b1fc5ac516815924015fa9742f7f462b2df" translate="yes" xml:space="preserve">
          <source>For historical reasons and convenience, the tuple type with no elements (&lt;code&gt;()&lt;/code&gt;) is often called &amp;lsquo;unit&amp;rsquo; or &amp;lsquo;the unit type&amp;rsquo;.</source>
          <target state="translated">По историческим причинам и для удобства тип кортежа без элементов ( &lt;code&gt;()&lt;/code&gt; ) часто называют &amp;laquo;модулем&amp;raquo; или &amp;laquo;типом модуля&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="0cae8f11b3fc955cca56e9644b85da41554bc0c8" translate="yes" xml:space="preserve">
          <source>For historical reasons, the Windows API uses a form of potentially ill-formed UTF-16 encoding for strings. Specifically, the 16-bit code units in Windows strings may contain &lt;a href=&quot;https://simonsapin.github.io/wtf-8/#ill-formed-utf-16&quot;&gt;isolated surrogate code points which are not paired together&lt;/a&gt;. The Unicode standard requires that surrogate code points (those in the range U+D800 to U+DFFF) always be &lt;em&gt;paired&lt;/em&gt;, because in the UTF-16 encoding a &lt;em&gt;surrogate code unit pair&lt;/em&gt; is used to encode a single character. For compatibility with code that does not enforce these pairings, Windows does not enforce them, either.</source>
          <target state="translated">По историческим причинам Windows API использует форму потенциально некорректной кодировки UTF-16 для строк. В частности, 16-битные кодовые единицы в строках Windows могут содержать &lt;a href=&quot;https://simonsapin.github.io/wtf-8/#ill-formed-utf-16&quot;&gt;изолированные суррогатные кодовые точки, которые не связаны вместе&lt;/a&gt; . Стандарт Unicode требует, чтобы суррогатные кодовые точки (те, которые находятся в диапазоне от U + D800 до U + DFFF) всегда были &lt;em&gt;парными&lt;/em&gt; , потому что в кодировке UTF-16 &lt;em&gt;пара суррогатных кодовых единиц&lt;/em&gt; используется для кодирования одного символа. Для совместимости с кодом, который не обеспечивает эти пары, Windows также не применяет их.</target>
        </trans-unit>
        <trans-unit id="8916c85db1ffc957e4227acdfffd5e1133284b2f" translate="yes" xml:space="preserve">
          <source>For historical reasons, the scoping of macros by example does not work entirely like items. Macros have two forms of scope: textual scope, and path-based scope. Textual scope is based on the order that things appear in source files, or even across multiple files, and is the default scoping. It is explained further below. Path-based scope works exactly the same way that item scoping does. The scoping, exporting, and importing of macros is controlled largely by attributes.</source>
          <target state="translated">По историческим причинам поиск макросов на примере не работает полностью как элементы.Макросы имеют две формы scope:текстовый scope и scope на основе пути.Текстовая область видимости основана на порядке,в котором элементы появляются в исходных файлах,или даже в нескольких файлах,и является областью видимости по умолчанию.Это объясняется ниже.Основанная на путях область видимости работает точно так же,как и область видимости элементов.Область действия,экспорт и импорт макросов в основном контролируется атрибутами.</target>
        </trans-unit>
        <trans-unit id="710b4db2d0c9327d5cbb0b2974185ecea3b00d3d" translate="yes" xml:space="preserve">
          <source>For information about possible values, see &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/winnt/ne-winnt-security_impersonation_level&quot;&gt;Impersonation Levels&lt;/a&gt; on the Windows Dev Center site. The &lt;code&gt;SECURITY_SQOS_PRESENT&lt;/code&gt; flag is set automatically when using this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1e7857364d8e31bcd2215cbf664f2f9ca1f5e2" translate="yes" xml:space="preserve">
          <source>For information about possible values, see &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa379572.aspx&quot;&gt;Impersonation Levels&lt;/a&gt; on the Windows Dev Center site. The &lt;code&gt;SECURITY_SQOS_PRESENT&lt;/code&gt; flag is set automatically when using this method.</source>
          <target state="translated">Дополнительные сведения о возможных значениях см. В разделе &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa379572.aspx&quot;&gt;Уровни олицетворения&lt;/a&gt; на сайте Центра разработки Windows. &lt;code&gt;SECURITY_SQOS_PRESENT&lt;/code&gt; флаг устанавливается автоматически при использовании этого метода.</target>
        </trans-unit>
        <trans-unit id="1b51d9cd63e79117823cb3a5577ae76f76a648aa" translate="yes" xml:space="preserve">
          <source>For information on the design of the orphan rules, see &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/1023-rebalancing-coherence.md&quot;&gt;RFC 1023&lt;/a&gt;.</source>
          <target state="translated">Для получения информации о разработке сиротских правил см. &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/1023-rebalancing-coherence.md&quot;&gt;RFC 1023&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f4337d5c37f28afdc9f6e968d52d47c802b104d" translate="yes" xml:space="preserve">
          <source>For information on the design of the orphan rules, see &lt;a href=&quot;https://rust-lang.github.io/rfcs/2451-re-rebalancing-coherence.html&quot;&gt;RFC 2451&lt;/a&gt; and &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/1023-rebalancing-coherence.md&quot;&gt;RFC 1023&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225b6b46a542b54e86029105be58c6f2b15b07b2" translate="yes" xml:space="preserve">
          <source>For instance, if the receiver has type &lt;code&gt;Box&amp;lt;[i32;2]&amp;gt;&lt;/code&gt;, then the candidate types will be &lt;code&gt;Box&amp;lt;[i32;2]&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;amp;Box&amp;lt;[i32;2]&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;amp;mut Box&amp;lt;[i32;2]&amp;gt;&lt;/code&gt;, &lt;code&gt;[i32; 2]&lt;/code&gt; (by dereferencing), &lt;code&gt;&amp;amp;[i32; 2]&lt;/code&gt;, &lt;code&gt;&amp;amp;mut [i32; 2]&lt;/code&gt;, &lt;code&gt;[i32]&lt;/code&gt; (by unsized coercion), &lt;code&gt;&amp;amp;[i32]&lt;/code&gt;, and finally &lt;code&gt;&amp;amp;mut [i32]&lt;/code&gt;.</source>
          <target state="translated">Например, если получатель имеет тип &lt;code&gt;Box&amp;lt;[i32;2]&amp;gt;&lt;/code&gt; , тогда типами кандидатов будут &lt;code&gt;Box&amp;lt;[i32;2]&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;amp;Box&amp;lt;[i32;2]&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;amp;mut Box&amp;lt;[i32;2]&amp;gt;&lt;/code&gt; , &lt;code&gt;[i32; 2]&lt;/code&gt; (путем разыменования), &lt;code&gt;&amp;amp;[i32; 2]&lt;/code&gt; , &lt;code&gt;&amp;amp;mut [i32; 2]&lt;/code&gt; , &lt;code&gt;[i32]&lt;/code&gt; (безразмерным принуждением), &lt;code&gt;&amp;amp;[i32]&lt;/code&gt; и, наконец, &lt;code&gt;&amp;amp;mut [i32]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2cd16941ca5e3ae0d133c47349cf0b4a2aebe81d" translate="yes" xml:space="preserve">
          <source>For instance, you cannot &lt;a href=&quot;../io/trait.read&quot;&gt;&lt;code&gt;Read&lt;/code&gt;&lt;/a&gt; into an uninitialized buffer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baaaebe339d6ce17ed6cfc031733bf141b61b1fd" translate="yes" xml:space="preserve">
          <source>For integral types, this is ignored.</source>
          <target state="translated">Для интегральных типов это игнорируется.</target>
        </trans-unit>
        <trans-unit id="6b107823eaed82b9e1f15dcd767296d37bccac20" translate="yes" xml:space="preserve">
          <source>For iterating from the front, the &lt;a href=&quot;#method.match_indices&quot;&gt;&lt;code&gt;match_indices&lt;/code&gt;&lt;/a&gt; method can be used.</source>
          <target state="translated">Для итерации спереди можно использовать метод &lt;a href=&quot;#method.match_indices&quot;&gt; &lt;code&gt;match_indices&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d88445f2a62566b0d770ee0bdb5ade912a95ab77" translate="yes" xml:space="preserve">
          <source>For iterating from the front, the &lt;a href=&quot;#method.matches&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; method can be used.</source>
          <target state="translated">Для итерации спереди можно использовать метод &lt;a href=&quot;#method.matches&quot;&gt; &lt;code&gt;matches&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b7f9b888e8aa5560f84815a010ccb71f10239c27" translate="yes" xml:space="preserve">
          <source>For iterating from the front, the &lt;a href=&quot;#method.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt; method can be used.</source>
          <target state="translated">Для итерации спереди можно использовать метод &lt;a href=&quot;#method.split&quot;&gt; &lt;code&gt;split&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e0637745021a8ec9092d57748f466adfb249ea99" translate="yes" xml:space="preserve">
          <source>For iterating from the front, the &lt;a href=&quot;#method.split_terminator&quot;&gt;&lt;code&gt;split_terminator&lt;/code&gt;&lt;/a&gt; method can be used.</source>
          <target state="translated">Для итерации спереди можно использовать метод &lt;a href=&quot;#method.split_terminator&quot;&gt; &lt;code&gt;split_terminator&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1e9e4dafbc9ce6c65b15e4c57d7f5f65e014a32e" translate="yes" xml:space="preserve">
          <source>For iterating from the front, the &lt;a href=&quot;../primitive.str#method.match_indices&quot;&gt;&lt;code&gt;match_indices&lt;/code&gt;&lt;/a&gt; method can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb60863336a5828341624e45c853be30e7540908" translate="yes" xml:space="preserve">
          <source>For iterating from the front, the &lt;a href=&quot;../primitive.str#method.matches&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; method can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e1a5e53ef176500cb5cc5c96f0c172831e17377" translate="yes" xml:space="preserve">
          <source>For iterating from the front, the &lt;a href=&quot;../primitive.str#method.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt; method can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1664e44bf9c6ccc6fd225330d68f0d37f3ab44" translate="yes" xml:space="preserve">
          <source>For iterating from the front, the &lt;a href=&quot;../primitive.str#method.split_terminator&quot;&gt;&lt;code&gt;split_terminator&lt;/code&gt;&lt;/a&gt; method can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11475214701d372b10cbf16754495bc1940945f6" translate="yes" xml:space="preserve">
          <source>For iterating from the front, the &lt;a href=&quot;primitive.str#method.match_indices&quot;&gt;&lt;code&gt;match_indices&lt;/code&gt;&lt;/a&gt; method can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e160ba151777d5c8f04b9b2dbd5d16202c6f385d" translate="yes" xml:space="preserve">
          <source>For iterating from the front, the &lt;a href=&quot;primitive.str#method.matches&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; method can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8ad82d7847387c51f38511c2d2151c6a8665e2" translate="yes" xml:space="preserve">
          <source>For iterating from the front, the &lt;a href=&quot;primitive.str#method.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt; method can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d8ce67fc7ac86d26b31c3c26679d8b19f654bc" translate="yes" xml:space="preserve">
          <source>For iterating from the front, the &lt;a href=&quot;primitive.str#method.split_terminator&quot;&gt;&lt;code&gt;split_terminator&lt;/code&gt;&lt;/a&gt; method can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e44fb98adc45057811caa8d42750cc0e5fe8aeb" translate="yes" xml:space="preserve">
          <source>For matches of &lt;code&gt;pat&lt;/code&gt; within &lt;code&gt;self&lt;/code&gt; that overlap, only the indices corresponding to the first match are returned.</source>
          <target state="translated">Для совпадений &lt;code&gt;pat&lt;/code&gt; внутри &lt;code&gt;self&lt;/code&gt; , которые перекрываются, возвращаются только индексы, соответствующие первому совпадению.</target>
        </trans-unit>
        <trans-unit id="abfb993550ab741f151661d1422d9018d04e9a77" translate="yes" xml:space="preserve">
          <source>For matches of &lt;code&gt;pat&lt;/code&gt; within &lt;code&gt;self&lt;/code&gt; that overlap, only the indices corresponding to the last match are returned.</source>
          <target state="translated">Для совпадений &lt;code&gt;pat&lt;/code&gt; внутри &lt;code&gt;self&lt;/code&gt; , которые перекрываются, возвращаются только индексы, соответствующие последнему совпадению.</target>
        </trans-unit>
        <trans-unit id="30e29f2a7f5a8332281828c6f9dfcd0e797d1dad" translate="yes" xml:space="preserve">
          <source>For method calls, the receiver (&lt;code&gt;self&lt;/code&gt; parameter) can only take advantage of &lt;a href=&quot;#unsized-coercions&quot;&gt;unsized coercions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2f959308ccc06c3abbb26c45f8c6f0b3f855b0" translate="yes" xml:space="preserve">
          <source>For method calls, the receiver (&lt;code&gt;self&lt;/code&gt; parameter) can only take advantage of &lt;a href=&quot;type-coercions#unsized-coercions&quot;&gt;unsized coercions&lt;/a&gt;.</source>
          <target state="translated">Для вызовов методов получатель ( параметр &lt;code&gt;self&lt;/code&gt; ) может использовать только &lt;a href=&quot;type-coercions#unsized-coercions&quot;&gt;безразмерные приведения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd5dd94d6e8475bf5fd070eb97a21cb66eb1d253" translate="yes" xml:space="preserve">
          <source>For more about tuples, see &lt;a href=&quot;../book/ch03-02-data-types#the-tuple-type&quot;&gt;the book&lt;/a&gt;.</source>
          <target state="translated">Подробнее о кортежах см. &lt;a href=&quot;../book/ch03-02-data-types#the-tuple-type&quot;&gt;В книге&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8eb606573f263490abda0eae447840de1fd6312f" translate="yes" xml:space="preserve">
          <source>For more detail on &lt;code&gt;const&lt;/code&gt;, see the &lt;a href=&quot;../book/ch03-01-variables-and-mutability#differences-between-variables-and-constants&quot;&gt;Rust Book&lt;/a&gt; or the &lt;a href=&quot;../reference/items/constant-items&quot;&gt;Reference&lt;/a&gt;</source>
          <target state="translated">Подробнее о &lt;code&gt;const&lt;/code&gt; см. В &lt;a href=&quot;../book/ch03-01-variables-and-mutability#differences-between-variables-and-constants&quot;&gt;книге Rust&lt;/a&gt; или в &lt;a href=&quot;../reference/items/constant-items&quot;&gt;справочнике.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34901312029c002d808f1bf7b19bb2453b8fe980" translate="yes" xml:space="preserve">
          <source>For more detail on &lt;code&gt;const&lt;/code&gt;, see the &lt;a href=&quot;../book/ch03-01-variables-and-mutability#differences-between-variables-and-constants&quot;&gt;Rust Book&lt;/a&gt; or the &lt;a href=&quot;../reference/items/constant-items&quot;&gt;Reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e291c473e6cc9b335b99368f64cbc1d71a0d4c0" translate="yes" xml:space="preserve">
          <source>For more detail, see the &lt;a href=&quot;macro-ambiguity&quot;&gt;formal specification&lt;/a&gt;.</source>
          <target state="translated">Подробнее см. &lt;a href=&quot;macro-ambiguity&quot;&gt;Официальную спецификацию&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="22cc9134960646cae2e564ac06646cd0ebd7a8d6" translate="yes" xml:space="preserve">
          <source>For more details consult the &lt;a href=&quot;../reference/expressions/loop-expr#break-expressions&quot;&gt;Reference on &quot;break expression&quot;&lt;/a&gt; and the &lt;a href=&quot;../reference/expressions/loop-expr#break-and-loop-values&quot;&gt;Reference on &quot;break and loop values&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a550b344fcc2f00c8b16595ecc991ab71ffaa66" translate="yes" xml:space="preserve">
          <source>For more details, see the respective documentation of each item in the list.</source>
          <target state="translated">Подробнее см.соответствующую документацию по каждому пункту в списке.</target>
        </trans-unit>
        <trans-unit id="8026e54bc7efbcbe76562e4e5409a24d75961350" translate="yes" xml:space="preserve">
          <source>For more details, see the traits &lt;a href=&quot;trait.pattern&quot;&gt;&lt;code&gt;Pattern&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;trait.searcher&quot;&gt;&lt;code&gt;Searcher&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;trait.reversesearcher&quot;&gt;&lt;code&gt;ReverseSearcher&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;trait.doubleendedsearcher&quot;&gt;&lt;code&gt;DoubleEndedSearcher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2fb50eba7ae83c8f13df4bd900c89c668818e9" translate="yes" xml:space="preserve">
          <source>For more details, see the traits [&lt;code&gt;Pattern&lt;/code&gt;], [&lt;code&gt;Searcher&lt;/code&gt;], [&lt;code&gt;ReverseSearcher&lt;/code&gt;], and [&lt;code&gt;DoubleEndedSearcher&lt;/code&gt;].</source>
          <target state="translated">Для получения дополнительной информации см. Черты [ &lt;code&gt;Pattern&lt;/code&gt; ], [ &lt;code&gt;Searcher&lt;/code&gt; ], [ &lt;code&gt;ReverseSearcher&lt;/code&gt; ] и [ &lt;code&gt;DoubleEndedSearcher&lt;/code&gt; ].</target>
        </trans-unit>
        <trans-unit id="89263bf3e6beb75e4571e90b66b3c70d0427828c" translate="yes" xml:space="preserve">
          <source>For more details, the &lt;a href=&quot;https://doc.rust-lang.org/stable/edition-guide/index.html&quot;&gt;&lt;em&gt;Edition Guide&lt;/em&gt;&lt;/a&gt; is a complete book about editions that enumerates the differences between editions and explains how to automatically upgrade your code to a new edition via &lt;code&gt;cargo fix&lt;/code&gt;.</source>
          <target state="translated">Дополнительные сведения см. В &lt;a href=&quot;https://doc.rust-lang.org/stable/edition-guide/index.html&quot;&gt;&lt;em&gt;Руководстве по выпуску&lt;/em&gt;&lt;/a&gt; - это полная книга о выпусках, в которой перечислены различия между выпусками и объясняется, как автоматически обновить код до новой версии с помощью &lt;code&gt;cargo fix&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6e6c205cbf7db8578d92757926cdfff233ef1ca" translate="yes" xml:space="preserve">
          <source>For more details, visit &lt;a href=&quot;../../book/ch15-02-deref&quot;&gt;the chapter in &lt;em&gt;The Rust Programming Language&lt;/em&gt;&lt;/a&gt; as well as the reference sections on &lt;a href=&quot;../../reference/expressions/operator-expr#the-dereference-operator&quot;&gt;the dereference operator&lt;/a&gt;, &lt;a href=&quot;../../reference/expressions/method-call-expr&quot;&gt;method resolution&lt;/a&gt; and &lt;a href=&quot;../../reference/type-coercions&quot;&gt;type coercions&lt;/a&gt;.</source>
          <target state="translated">Для получения более подробной информации посетите &lt;a href=&quot;../../book/ch15-02-deref&quot;&gt;главу на языке &lt;em&gt;программирования Rust,&lt;/em&gt;&lt;/a&gt; а также справочные разделы, посвященные &lt;a href=&quot;../../reference/expressions/operator-expr#the-dereference-operator&quot;&gt;оператору разыменования&lt;/a&gt; , &lt;a href=&quot;../../reference/expressions/method-call-expr&quot;&gt;разрешению методов&lt;/a&gt; и приведению &lt;a href=&quot;../../reference/type-coercions&quot;&gt;типов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c7b389f333511523f6507959ed7a6c82c5ac6a24" translate="yes" xml:space="preserve">
          <source>For more information about &lt;a href=&quot;book/ch03-02-data-types&quot;&gt;primitives&lt;/a&gt; and &lt;a href=&quot;book/ch05-00-structs&quot;&gt;structs&lt;/a&gt;, take a look at the Book.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc5cd9e3e865afa46a350086d1b1c96c19d01d7c" translate="yes" xml:space="preserve">
          <source>For more information about Cargo, check out &lt;a href=&quot;https://doc.rust-lang.org/cargo/index.html&quot;&gt;its documentation&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о Cargo ознакомьтесь с &lt;a href=&quot;https://doc.rust-lang.org/cargo/index.html&quot;&gt;его документацией&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fa0a4fd36684df6f8397d7fa9786ae835418c592" translate="yes" xml:space="preserve">
          <source>For more information about associated types, see &lt;a href=&quot;book/ch19-03-advanced-traits#specifying-placeholder-types-in-trait-definitions-with-associated-types&quot;&gt;the book&lt;/a&gt;. For more information on associated type bounds, see &lt;a href=&quot;https://rust-lang.github.io/rfcs/2289-associated-type-bounds.html&quot;&gt;RFC 2289&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8da00a231113177386f7e47cc0a2389ab7cc277" translate="yes" xml:space="preserve">
          <source>For more information about casts, take a look at the Type cast section in &lt;a href=&quot;reference/expressions/operator-expr#type-cast-expressions&quot;&gt;The Reference Book&lt;/a&gt;.</source>
          <target state="translated">Дополнительные сведения о приведении типов см. В разделе &amp;laquo; &lt;a href=&quot;reference/expressions/operator-expr#type-cast-expressions&quot;&gt;Приведение&lt;/a&gt; типов&amp;raquo; в Справочнике .</target>
        </trans-unit>
        <trans-unit id="6cd0c62441350987a4762127fe18207f874a343a" translate="yes" xml:space="preserve">
          <source>For more information about named threads, see &lt;a href=&quot;index#naming-threads&quot;&gt;this module-level documentation&lt;/a&gt;.</source>
          <target state="translated">Дополнительные сведения об именованных потоках см. В &lt;a href=&quot;index#naming-threads&quot;&gt;этой документации на уровне модуля&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="102d4511f19624e4e594eba5e2a713f736f94403" translate="yes" xml:space="preserve">
          <source>For more information about primitives and structs, take a look at The Book: https://doc.rust-lang.org/book/ch03-02-data-types.html https://doc.rust-lang.org/book/ch05-00-structs.html</source>
          <target state="translated">Более подробную информацию о примитивах и структурах можно найти в Книге:https://doc.rust-lang.org/book/ch03-02-data-types.html https://doc.rust-lang.org/book/ch05-00-structs.html.</target>
        </trans-unit>
        <trans-unit id="c3bf4058fb0bfe3a7675bbb543b62e5dee4c6887" translate="yes" xml:space="preserve">
          <source>For more information about specifying representations, see the &lt;a href=&quot;https://doc.rust-lang.org/nomicon/other-reprs.html&quot;&gt;&quot;Alternative Representations&quot; section&lt;/a&gt; of the Rustonomicon.</source>
          <target state="translated">Для получения дополнительной информации об указании представлений см. &lt;a href=&quot;https://doc.rust-lang.org/nomicon/other-reprs.html&quot;&gt;Раздел &amp;laquo;Альтернативные представления&amp;raquo;&lt;/a&gt; Rustonomicon.</target>
        </trans-unit>
        <trans-unit id="8bd1cbeb47b7decd82b7fd7ecf8bae1087ce674f" translate="yes" xml:space="preserve">
          <source>For more information about the &lt;code&gt;cfg&lt;/code&gt; attribute, read the section on &lt;a href=&quot;reference/conditional-compilation&quot;&gt;Conditional Compilation&lt;/a&gt; in the Reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4442c14c85c92ae0273cf16c727092964e793917" translate="yes" xml:space="preserve">
          <source>For more information about the cfg attribute, read: https://doc.rust-lang.org/reference.html#conditional-compilation</source>
          <target state="translated">Для получения дополнительной информации об атрибуте cfg читайте:https://doc.rust-lang.org/reference.html#conditional-compilation.</target>
        </trans-unit>
        <trans-unit id="992fc2eeb08dc25782d2fddc6c0b6015bc376de5" translate="yes" xml:space="preserve">
          <source>For more information about the inline attribute, https: read://doc.rust-lang.org/reference.html#inline-attributes</source>
          <target state="translated">Дополнительная информация об атрибуте inline,https:read://doc.rust-lang.org/reference.html#inline-атрибуты</target>
        </trans-unit>
        <trans-unit id="9db48592ab4095960e3e44f8b09079a0c0259f44" translate="yes" xml:space="preserve">
          <source>For more information about the inline attribute, read: https://doc.rust-lang.org/reference.html#inline-attributes</source>
          <target state="translated">Подробнее об атрибуте inline читайте:https://doc.rust-lang.org/reference.html#inline-attributes.</target>
        </trans-unit>
        <trans-unit id="cfa646f3fb3a336d8ee248174c90b109ddf1ff5a" translate="yes" xml:space="preserve">
          <source>For more information about the particulars of how the path is separated into components, see &lt;a href=&quot;#method.components&quot;&gt;&lt;code&gt;components&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о том, как путь разделяется на компоненты, см. &lt;a href=&quot;#method.components&quot;&gt; &lt;code&gt;components&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d208a7a00016bd80eb36abc405d4d67532f3f3f6" translate="yes" xml:space="preserve">
          <source>For more information about the particulars of how the path is separated into components, see &lt;a href=&quot;struct.path#method.components&quot;&gt;&lt;code&gt;components&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd76571f2b2b3e596e0b9a91b81882353dbf69b8" translate="yes" xml:space="preserve">
          <source>For more information about the stack size for threads, see &lt;a href=&quot;index#stack-size&quot;&gt;this module-level documentation&lt;/a&gt;.</source>
          <target state="translated">Дополнительные сведения о размере стека для потоков см. В &lt;a href=&quot;index#stack-size&quot;&gt;этой документации на уровне модуля&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7fb8ee866c1b39714e1dcfd554e8800ff32ff81a" translate="yes" xml:space="preserve">
          <source>For more information about this option, see &lt;a href=&quot;#method.join_multicast_v4&quot;&gt;&lt;code&gt;join_multicast_v4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации об этой опции см. &lt;a href=&quot;#method.join_multicast_v4&quot;&gt; &lt;code&gt;join_multicast_v4&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="57833ee07247599f44cb309fde1124280eb648a4" translate="yes" xml:space="preserve">
          <source>For more information about this option, see &lt;a href=&quot;#method.join_multicast_v6&quot;&gt;&lt;code&gt;join_multicast_v6&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Дополнительные сведения об этой опции см . В разделе &lt;a href=&quot;#method.join_multicast_v6&quot;&gt; &lt;code&gt;join_multicast_v6&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3ce681618c57caf981736423d26acc94ae89b21d" translate="yes" xml:space="preserve">
          <source>For more information about this option, see &lt;a href=&quot;#method.set_broadcast&quot;&gt;&lt;code&gt;set_broadcast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации об этой опции см. &lt;a href=&quot;#method.set_broadcast&quot;&gt; &lt;code&gt;set_broadcast&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="395c58ec3f6bc027abde9bbf9fad1f4f5468d568" translate="yes" xml:space="preserve">
          <source>For more information about this option, see &lt;a href=&quot;#method.set_multicast_loop_v4&quot;&gt;&lt;code&gt;set_multicast_loop_v4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации об этой опции см. &lt;a href=&quot;#method.set_multicast_loop_v4&quot;&gt; &lt;code&gt;set_multicast_loop_v4&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="19a25d5021da7a65fa90afdcaa8c94b2d240f4ea" translate="yes" xml:space="preserve">
          <source>For more information about this option, see &lt;a href=&quot;#method.set_multicast_loop_v6&quot;&gt;&lt;code&gt;set_multicast_loop_v6&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации об этой опции см. &lt;a href=&quot;#method.set_multicast_loop_v6&quot;&gt; &lt;code&gt;set_multicast_loop_v6&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="df749fde579be395be3ce58123ceffc9653388c3" translate="yes" xml:space="preserve">
          <source>For more information about this option, see &lt;a href=&quot;#method.set_multicast_ttl_v4&quot;&gt;&lt;code&gt;set_multicast_ttl_v4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации об этой опции см. &lt;a href=&quot;#method.set_multicast_ttl_v4&quot;&gt; &lt;code&gt;set_multicast_ttl_v4&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6c0d794b98dbf3eac083b7075a715bd37c850949" translate="yes" xml:space="preserve">
          <source>For more information about this option, see &lt;a href=&quot;#method.set_nodelay&quot;&gt;&lt;code&gt;set_nodelay&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации об этой опции см. &lt;a href=&quot;#method.set_nodelay&quot;&gt; &lt;code&gt;set_nodelay&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f6e7cb5f78e58ab89345b5ca811fb23b56f9162d" translate="yes" xml:space="preserve">
          <source>For more information about this option, see &lt;a href=&quot;#method.set_ttl&quot;&gt;&lt;code&gt;set_ttl&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации об этой опции см. &lt;a href=&quot;#method.set_ttl&quot;&gt; &lt;code&gt;set_ttl&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2a394bc2e818a902cb20ef60be1aacfb5b6bed5f" translate="yes" xml:space="preserve">
          <source>For more information about this option, see &lt;a href=&quot;struct.tcplistener#method.set_ttl&quot;&gt;&lt;code&gt;TcpListener::set_ttl&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa7c5c36f089ee6dcc230b22a43e81dfd29e6b2" translate="yes" xml:space="preserve">
          <source>For more information about this option, see &lt;a href=&quot;struct.tcpstream#method.set_nodelay&quot;&gt;&lt;code&gt;TcpStream::set_nodelay&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f687f34df5c1fceb0c2f349452aeb54b4703e77" translate="yes" xml:space="preserve">
          <source>For more information about this option, see &lt;a href=&quot;struct.tcpstream#method.set_ttl&quot;&gt;&lt;code&gt;TcpStream::set_ttl&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3059868c3caa8fd899a2dfbced1ef7fac82dec" translate="yes" xml:space="preserve">
          <source>For more information about this option, see &lt;a href=&quot;struct.udpsocket#method.join_multicast_v4&quot;&gt;&lt;code&gt;UdpSocket::join_multicast_v4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a6b546e03443d3c886b47248d82d04304e9248" translate="yes" xml:space="preserve">
          <source>For more information about this option, see &lt;a href=&quot;struct.udpsocket#method.join_multicast_v6&quot;&gt;&lt;code&gt;UdpSocket::join_multicast_v6&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8976685aa3713d913257de37c43c4da5f4633071" translate="yes" xml:space="preserve">
          <source>For more information about this option, see &lt;a href=&quot;struct.udpsocket#method.set_broadcast&quot;&gt;&lt;code&gt;UdpSocket::set_broadcast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07036701bb4372022b206f78e36755f596630148" translate="yes" xml:space="preserve">
          <source>For more information about this option, see &lt;a href=&quot;struct.udpsocket#method.set_multicast_loop_v4&quot;&gt;&lt;code&gt;UdpSocket::set_multicast_loop_v4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35ff8940232500740f176ac52d9cff14d41ab14b" translate="yes" xml:space="preserve">
          <source>For more information about this option, see &lt;a href=&quot;struct.udpsocket#method.set_multicast_loop_v6&quot;&gt;&lt;code&gt;UdpSocket::set_multicast_loop_v6&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4078ff38e27b60f80025612aee1ce51e84fa1526" translate="yes" xml:space="preserve">
          <source>For more information about this option, see &lt;a href=&quot;struct.udpsocket#method.set_multicast_ttl_v4&quot;&gt;&lt;code&gt;UdpSocket::set_multicast_ttl_v4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0b5493666a5b9737f7e29ab01f3a736aa6fac1" translate="yes" xml:space="preserve">
          <source>For more information about this option, see &lt;a href=&quot;struct.udpsocket#method.set_ttl&quot;&gt;&lt;code&gt;UdpSocket::set_ttl&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5fe57c8b77795ff593ae38ee9a6c491d030bcba" translate="yes" xml:space="preserve">
          <source>For more information about type casts, take a look at the section of the &lt;a href=&quot;reference/expressions/operator-expr#type-cast-expressions&quot;&gt;The Rust Reference&lt;/a&gt; on type cast expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26525f8ef356116ef471c0be5406f813dea377a" translate="yes" xml:space="preserve">
          <source>For more information and a list of supported ABIs, see &lt;a href=&quot;https://doc.rust-lang.org/nomicon/ffi.html#foreign-calling-conventions&quot;&gt;the nomicon's section on foreign calling conventions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16217596c793a9bbadfbe3ea0e828a9914e8bd03" translate="yes" xml:space="preserve">
          <source>For more information and a list of supported ABIs, see [the nomicon's section on foreign calling conventions][nomicon-abi].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bf128360e21745d96296482aa04348caf9fa97" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;if&lt;/code&gt; expressions, see the &lt;a href=&quot;../book/ch03-05-control-flow#if-expressions&quot;&gt;Rust book&lt;/a&gt; or the &lt;a href=&quot;../reference/expressions/if-expr&quot;&gt;Reference&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о выражениях &lt;code&gt;if&lt;/code&gt; см. &lt;a href=&quot;../book/ch03-05-control-flow#if-expressions&quot;&gt;Книгу Rust&lt;/a&gt; или &lt;a href=&quot;../reference/expressions/if-expr&quot;&gt;справочник&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="26c4f344d22bc81326bce9f0d84393a6ba5329dd" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;impl Trait&lt;/code&gt; syntax, see the &lt;a href=&quot;../book/ch10-02-traits#returning-types-that-implement-traits&quot;&gt;Rust book&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о синтаксисе &lt;code&gt;impl Trait&lt;/code&gt; см. &lt;a href=&quot;../book/ch10-02-traits#returning-types-that-implement-traits&quot;&gt;Книгу Rust&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8baad10e10ead72e523430c806f5046d53166956" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;loop&lt;/code&gt; and loops in general, see the &lt;a href=&quot;../reference/expressions/loop-expr&quot;&gt;Reference&lt;/a&gt;.</source>
          <target state="translated">Более подробной информации о &lt;code&gt;loop&lt;/code&gt; и петлях в целом, см &lt;a href=&quot;../reference/expressions/loop-expr&quot;&gt;Reference&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d9e2e99793fab9dd3626d998768ee865c474bfd" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;match&lt;/code&gt; and matching in general, see the &lt;a href=&quot;../reference/expressions/match-expr&quot;&gt;Reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0710e2e1ea383271033954b11a70c7bad7ea2cb4" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;use&lt;/code&gt; and paths in general, see the &lt;a href=&quot;../reference/items/use-declarations&quot;&gt;Reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d8b3ebb20cee3aad696e4716ebdeb83e61bc82" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;while&lt;/code&gt; and loops in general, see the &lt;a href=&quot;../reference/expressions/loop-expr#predicate-loops&quot;&gt;reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f290aa363db2393559b1506887c6b8507f90da13" translate="yes" xml:space="preserve">
          <source>For more information on Clippy, see &lt;a href=&quot;https://github.com/rust-lang/rust-clippy&quot;&gt;its documentation&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о Clippy см. &lt;a href=&quot;https://github.com/rust-lang/rust-clippy&quot;&gt;Его документацию&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="38db950fcbbf4fcba31dce2f10974dd6a5fef98a" translate="yes" xml:space="preserve">
          <source>For more information on FFI, check the &lt;a href=&quot;../book/ch19-01-unsafe-rust#using-extern-functions-to-call-external-code&quot;&gt;Rust book&lt;/a&gt; or the &lt;a href=&quot;../reference/items/external-blocks&quot;&gt;Reference&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о FFI обратитесь к &lt;a href=&quot;../book/ch19-01-unsafe-rust#using-extern-functions-to-call-external-code&quot;&gt;книге Rust&lt;/a&gt; или &lt;a href=&quot;../reference/items/external-blocks&quot;&gt;справочнику&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d641d6c32a05462a1486b1dc6324213dda8812b9" translate="yes" xml:space="preserve">
          <source>For more information on Rust's ownership system, take a look at the &lt;a href=&quot;book/ch04-02-references-and-borrowing&quot;&gt;References &amp;amp; Borrowing&lt;/a&gt; section of the Book.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285f1b877490199173d757dddff730450bb4b01f" translate="yes" xml:space="preserve">
          <source>For more information on floating point numbers, see &lt;a href=&quot;https://en.wikipedia.org/wiki/Single-precision_floating-point_format&quot;&gt;Wikipedia&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee24777d534cc43d3f116683cebd1988effa8023" translate="yes" xml:space="preserve">
          <source>For more information on for-loops, see the &lt;a href=&quot;../book/ch03-05-control-flow#looping-through-a-collection-with-for&quot;&gt;Rust book&lt;/a&gt; or the &lt;a href=&quot;../reference/expressions/loop-expr#iterator-loops&quot;&gt;Reference&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о циклах for см. &lt;a href=&quot;../book/ch03-05-control-flow#looping-through-a-collection-with-for&quot;&gt;Книгу Rust&lt;/a&gt; или &lt;a href=&quot;../reference/expressions/loop-expr#iterator-loops&quot;&gt;Справочник&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a24996038d4cee454655450978dea7d8a2b46904" translate="yes" xml:space="preserve">
          <source>For more information on formatters, see &lt;a href=&quot;https://doc.rust-lang.org/core/fmt/index.html&quot;&gt;the module-level documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ad00a80543ba5ff60480a82f25b9b9fc2fe15a" translate="yes" xml:space="preserve">
          <source>For more information on formatters, see &lt;a href=&quot;index&quot;&gt;the module-level documentation&lt;/a&gt;.</source>
          <target state="translated">Дополнительные сведения о средствах форматирования см. В &lt;a href=&quot;index&quot;&gt;документации уровня модуля&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ff3812b259ec258484f134f2413ea468207c8e57" translate="yes" xml:space="preserve">
          <source>For more information on how to use references, see &lt;a href=&quot;../book/ch04-02-references-and-borrowing&quot;&gt;the book's section on &quot;References and Borrowing&quot;&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о том, как использовать ссылки, см &lt;a href=&quot;../book/ch04-02-references-and-borrowing&quot;&gt;. Раздел книги &amp;laquo;Ссылки и заимствование&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab47fbe22d48e3b8af90238a1671382c62540270" translate="yes" xml:space="preserve">
          <source>For more information on implementations, see the &lt;a href=&quot;../book/ch05-03-method-syntax&quot;&gt;Rust book&lt;/a&gt; or the &lt;a href=&quot;../reference/items/implementations&quot;&gt;Reference&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о реализациях см. &lt;a href=&quot;../book/ch05-03-method-syntax&quot;&gt;Книгу Rust&lt;/a&gt; или &lt;a href=&quot;../reference/items/implementations&quot;&gt;Справочник&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cd2bcc840b6d179d8b0cd5dcc59be377dcf31780" translate="yes" xml:space="preserve">
          <source>For more information on structs, take a look at the &lt;a href=&quot;../book/ch05-01-defining-structs&quot;&gt;Rust Book&lt;/a&gt; or the &lt;a href=&quot;../reference/items/structs&quot;&gt;Reference&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о структурах, взгляните на &lt;a href=&quot;../book/ch05-01-defining-structs&quot;&gt;Rust Book&lt;/a&gt; или &lt;a href=&quot;../reference/items/structs&quot;&gt;Reference&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5ce49c995bb1152375ebd2c5ecd45128ba41cc83" translate="yes" xml:space="preserve">
          <source>For more information on the &lt;code&gt;let&lt;/code&gt; keyword, see the &lt;a href=&quot;../book/ch18-01-all-the-places-for-patterns#let-statements&quot;&gt;Rust book&lt;/a&gt; or the &lt;a href=&quot;../reference/statements#let-statements&quot;&gt;Reference&lt;/a&gt;</source>
          <target state="translated">Для получения дополнительной информации о ключевом слове &lt;code&gt;let&lt;/code&gt; см. &lt;a href=&quot;../book/ch18-01-all-the-places-for-patterns#let-statements&quot;&gt;Книгу Rust&lt;/a&gt; или &lt;a href=&quot;../reference/statements#let-statements&quot;&gt;справочник.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="55f4ff0283f817ff45a08f2d5b8976730a7bb67c" translate="yes" xml:space="preserve">
          <source>For more information on the &lt;code&gt;move&lt;/code&gt; keyword, see the &lt;a href=&quot;../book/ch13-01-closures&quot;&gt;closure&lt;/a&gt;'s section of the Rust book or the &lt;a href=&quot;../book/ch16-01-threads#using-move-closures-with-threads&quot;&gt;threads&lt;/a&gt; section</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5404b7f8ed3a8699d7f7e7b750cd0c12cdb64a72" translate="yes" xml:space="preserve">
          <source>For more information on the &lt;code&gt;pub&lt;/code&gt; keyword, please see the visibility section of the &lt;a href=&quot;../reference/visibility-and-privacy?highlight=pub#visibility-and-privacy&quot;&gt;reference&lt;/a&gt; and for some examples, see &lt;a href=&quot;https://doc.rust-lang.org/rust-by-example/mod/visibility.html&quot;&gt;Rust by Example&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc632ff0cf0c0731c6a179ab2eab0a11d96c7a4" translate="yes" xml:space="preserve">
          <source>For more information on the &lt;code&gt;rls&lt;/code&gt;, see &lt;a href=&quot;https://github.com/rust-lang/rls&quot;&gt;its documentation&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о &lt;code&gt;rls&lt;/code&gt; см. &lt;a href=&quot;https://github.com/rust-lang/rls&quot;&gt;Его документацию&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e3863c21d325c3c3d855add8a948767200d6c9d5" translate="yes" xml:space="preserve">
          <source>For more information on the effect of async, see &lt;a href=&quot;../expressions/block-expr#async-blocks&quot;&gt;&lt;code&gt;async&lt;/code&gt; blocks&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5291eb6d53f544698352ae404ca44de78b99df0" translate="yes" xml:space="preserve">
          <source>For more information on the meaning and layout of the &lt;code&gt;flowinfo&lt;/code&gt; and &lt;code&gt;scope_id&lt;/code&gt; parameters, see &lt;a href=&quot;https://tools.ietf.org/html/rfc2553#section-3.3&quot;&gt;IETF RFC 2553, Section 3.3&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о значении и структуре параметров &lt;code&gt;flowinfo&lt;/code&gt; и &lt;code&gt;scope_id&lt;/code&gt; см. &lt;a href=&quot;https://tools.ietf.org/html/rfc2553#section-3.3&quot;&gt;IETF RFC 2553, раздел 3.3&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9e3e7095c9863573782cdbe8dd1a7bbcbf2fb4f" translate="yes" xml:space="preserve">
          <source>For more information on the rust ownership system, take a look at https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html.</source>
          <target state="translated">Более подробную информацию о системе владения ржавчиной см.на сайте https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html.</target>
        </trans-unit>
        <trans-unit id="dd65d29db2c0c0e3fa4010b1a534ac28777bc593" translate="yes" xml:space="preserve">
          <source>For more information on the various types of functions and how they're used, consult the &lt;a href=&quot;../book/ch03-03-how-functions-work&quot;&gt;Rust book&lt;/a&gt; or the &lt;a href=&quot;../reference/items/functions&quot;&gt;Reference&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации о различных типах функций и их использовании обратитесь к &lt;a href=&quot;../book/ch03-03-how-functions-work&quot;&gt;книге Rust&lt;/a&gt; или &lt;a href=&quot;../reference/items/functions&quot;&gt;справочнику&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ba53489dfe57a910985fb20af8e3e6d3e80de7b1" translate="yes" xml:space="preserve">
          <source>For more information on what &lt;code&gt;as&lt;/code&gt; is capable of, see the &lt;a href=&quot;../reference/expressions/operator-expr#type-cast-expressions&quot;&gt;Reference&lt;/a&gt;</source>
          <target state="translated">Дополнительные сведения о возможностях &lt;code&gt;as&lt;/code&gt; см. В &lt;a href=&quot;../reference/expressions/operator-expr#type-cast-expressions&quot;&gt;справочнике.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="200342727dbc618ada8e648e6bb5b49b50685bf3" translate="yes" xml:space="preserve">
          <source>For more information on what &lt;code&gt;as&lt;/code&gt; is capable of, see the &lt;a href=&quot;../reference/expressions/operator-expr#type-cast-expressions&quot;&gt;Reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1294a54cecd68adbf06bcf29dd93bf0d7224b50a" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;https://doc.rust-lang.org/nomicon/atomics.html&quot;&gt;nomicon&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации см. &lt;a href=&quot;https://doc.rust-lang.org/nomicon/atomics.html&quot;&gt;Номикон&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8515ff7c1a2ff91adff1550ef7c0680acfebc183" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;reference/attributes/codegen&quot;&gt;&lt;code&gt;instruction_set&lt;/code&gt; attribute&lt;/a&gt; section of the Reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2722cfdeb47cf791bc768e784fd872da493e862a" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;reference/attributes/codegen#the-inline-attribute&quot;&gt;&lt;code&gt;inline&lt;/code&gt; Attribute&lt;/a&gt; section of the Reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430f53d43ce499b5fc6e5944890296c5d6682bce" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;reference/attributes/codegen#the-inline-attribute&quot;&gt;&lt;code&gt;inline&lt;/code&gt; attribute&lt;/a&gt; section of the Reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be2448b1c40c0c0e54b5bb192d0485e421966fb" translate="yes" xml:space="preserve">
          <source>For more information see the Rust Reference on &lt;a href=&quot;reference/visibility-and-privacy&quot;&gt;Visibility&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации см. Справочник по Rust по &lt;a href=&quot;reference/visibility-and-privacy&quot;&gt;видимости&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8d5d738749a358bd9c9bd1e06a8750768118877d" translate="yes" xml:space="preserve">
          <source>For more information, please see &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0447-no-unused-impl-parameters.md&quot;&gt;RFC 447&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации см. &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0447-no-unused-impl-parameters.md&quot;&gt;RFC 447&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="81e4e160a9649ee9d3702198e8d0083beee65f16" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;#capacity-and-reallocation&quot;&gt;Capacity and Reallocation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad517b06e20ad9092f17ffc60fe635ca1c292a27" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0599-default-object-bound.md&quot;&gt;RFC 599&lt;/a&gt; and its amendment &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/1156-adjust-default-object-bounds.md&quot;&gt;RFC 1156&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be296727789507d09db0e50484a6ee533f9b657" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://github.com/rust-lang/rust/issues/74052&quot;&gt;GitHub issue #74052&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13280a26e699d624818597363ac11248df07682b" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;macro.write&quot;&gt;&lt;code&gt;write!&lt;/code&gt;&lt;/a&gt;. For information on the format string syntax, see &lt;a href=&quot;fmt/index&quot;&gt;&lt;code&gt;std::fmt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации см. &lt;a href=&quot;macro.write&quot;&gt; &lt;code&gt;write!&lt;/code&gt; &lt;/a&gt;. Для получения информации о синтаксисе строки формата см. &lt;a href=&quot;fmt/index&quot;&gt; &lt;code&gt;std::fmt&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8b67eca63270d5078808d08322ebcadad733aa46" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;macro.write&quot;&gt;&lt;code&gt;write!&lt;/code&gt;&lt;/a&gt;. For information on the format string syntax, see &lt;a href=&quot;https://doc.rust-lang.org/core/fmt/index.html&quot;&gt;&lt;code&gt;std::fmt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105a7b06489677dc75af87ff58131cb813821718" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;type.lockresult&quot;&gt;&lt;code&gt;LockResult&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;TryLockResult&lt;/code&gt; doesn't necessarily hold the associated guard in the &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; type as the lock may not have been acquired for other reasons.</source>
          <target state="translated">Для получения дополнительной информации см. &lt;a href=&quot;type.lockresult&quot;&gt; &lt;code&gt;LockResult&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;TryLockResult&lt;/code&gt; не обязательно держать связанный с ним охранником в &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; типа, блокировка не может быть приобретена по другим причинам.</target>
        </trans-unit>
        <trans-unit id="061ee0b6c46c6f1de9b553ef8ec0ea2c4506aea3" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;fn.stderr&quot;&gt;&lt;code&gt;io::stderr&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Для получения дополнительной информации см. Метод &lt;a href=&quot;fn.stderr&quot;&gt; &lt;code&gt;io::stderr&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2d8d91c96fdfd1707d627d52a81e7ba2e66f436d" translate="yes" xml:space="preserve">
          <source>For more information, see the documentation in &lt;a href=&quot;fmt/index&quot;&gt;&lt;code&gt;std::fmt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Для получения дополнительной информации см. Документацию в &lt;a href=&quot;fmt/index&quot;&gt; &lt;code&gt;std::fmt&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b075f87a0aa0ececd35398edb04098f5381d1784" translate="yes" xml:space="preserve">
          <source>For more information, see the documentation in &lt;a href=&quot;https://doc.rust-lang.org/core/fmt/index.html&quot;&gt;&lt;code&gt;std::fmt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22b73ddcf768c9c706f3f5ce7c0719488d3f3d0b" translate="yes" xml:space="preserve">
          <source>For more information, take a look at the &lt;a href=&quot;../book/ch06-01-defining-an-enum&quot;&gt;Rust Book&lt;/a&gt; or the &lt;a href=&quot;../reference/items/enumerations&quot;&gt;Reference&lt;/a&gt;</source>
          <target state="translated">Для получения дополнительной информации взгляните на &lt;a href=&quot;../book/ch06-01-defining-an-enum&quot;&gt;книгу Rust&lt;/a&gt; или &lt;a href=&quot;../reference/items/enumerations&quot;&gt;Справочник.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1dcd53adc5b18c6de5c84d7a2eea62c7f636c8a4" translate="yes" xml:space="preserve">
          <source>For most filesystems, the operating system guarantees that all writes are atomic: no writes get mangled because another process writes at the same time.</source>
          <target state="translated">Для большинства файловых систем операционная система гарантирует,что все записи являются атомарными:никакие записи не будут искажены из-за того,что другой процесс записывает в то же самое время.</target>
        </trans-unit>
        <trans-unit id="e69c5be27e4e91243d49f0a635a88ca5efc30bd8" translate="yes" xml:space="preserve">
          <source>For most platforms a backtrace with a filename/line number requires that programs be compiled with debug information. Without debug information filenames/line numbers will not be reported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c93ed371993f23b715f83d6c14f6a2845f0553e" translate="yes" xml:space="preserve">
          <source>For most situations, having all libraries available as a dylib is recommended if dynamically linking. For other situations, the compiler will emit a warning if it is unable to determine which formats to link each library with.</source>
          <target state="translated">Для большинства ситуаций при динамической компоновке рекомендуется иметь все библиотеки,доступные в виде dylib.Для других ситуаций компилятор выдаст предупреждение,если не сможет определить,с какими форматами связывать каждую библиотеку.</target>
        </trans-unit>
        <trans-unit id="f60bc833f920bbe05de763c3c4c66d6c4df0a446" translate="yes" xml:space="preserve">
          <source>For non-numeric types, this can be considered a &quot;maximum width&quot;. If the resulting string is longer than this width, then it is truncated down to this many characters and that truncated value is emitted with proper &lt;code&gt;fill&lt;/code&gt;, &lt;code&gt;alignment&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; if those parameters are set.</source>
          <target state="translated">Для нечисловых типов это можно считать &amp;laquo;максимальной шириной&amp;raquo;. Если результирующая строка длиннее этой ширины, то она усекается до такого количества символов, и это усеченное значение выдается с правильным &lt;code&gt;fill&lt;/code&gt; , &lt;code&gt;alignment&lt;/code&gt; и &lt;code&gt;width&lt;/code&gt; если эти параметры установлены.</target>
        </trans-unit>
        <trans-unit id="759891ff1588306215a2ec66ea4ffdf3b900cc9a" translate="yes" xml:space="preserve">
          <source>For non-users, a new edition signals that some major advancements have landed, which might make Rust worth another look.</source>
          <target state="translated">Для непользователей,новое издание сигнализирует,что некоторые крупные достижения приземлились,что может заставить Ржавчину выглядеть по-другому.</target>
        </trans-unit>
        <trans-unit id="032e9d1e38ac32b8d4f9cea98bf791c06db59c12" translate="yes" xml:space="preserve">
          <source>For non-zero-sized values, a &lt;a href=&quot;struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt; will use the &lt;a href=&quot;../alloc/struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; allocator for its allocation. It is valid to convert both ways between a &lt;a href=&quot;struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt; and a raw pointer allocated with the &lt;a href=&quot;../alloc/struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; allocator, given that the &lt;a href=&quot;../alloc/struct.layout&quot;&gt;&lt;code&gt;Layout&lt;/code&gt;&lt;/a&gt; used with the allocator is correct for the type. More precisely, a &lt;code&gt;value: *mut T&lt;/code&gt; that has been allocated with the &lt;a href=&quot;../alloc/struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; allocator with &lt;code&gt;Layout::for_value(&amp;amp;*value)&lt;/code&gt; may be converted into a box using &lt;a href=&quot;struct.box#method.from_raw&quot;&gt;&lt;code&gt;Box::&amp;lt;T&amp;gt;::from_raw(value)&lt;/code&gt;&lt;/a&gt;. Conversely, the memory backing a &lt;code&gt;value: *mut T&lt;/code&gt; obtained from &lt;a href=&quot;struct.box#method.into_raw&quot;&gt;&lt;code&gt;Box::&amp;lt;T&amp;gt;::into_raw&lt;/code&gt;&lt;/a&gt; may be deallocated using the &lt;a href=&quot;../alloc/struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; allocator with &lt;a href=&quot;../alloc/struct.layout#method.for_value&quot;&gt;&lt;code&gt;Layout::for_value(&amp;amp;*value)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be924402e1b9e352b3e21f3848f1b4490ef1405" translate="yes" xml:space="preserve">
          <source>For non-zero-sized values, a &lt;a href=&quot;struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt; will use the &lt;a href=&quot;../alloc/struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; allocator for its allocation. It is valid to convert both ways between a &lt;a href=&quot;struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt; and a raw pointer allocated with the &lt;a href=&quot;../alloc/struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; allocator, given that the &lt;a href=&quot;../alloc/struct.layout&quot;&gt;&lt;code&gt;Layout&lt;/code&gt;&lt;/a&gt; used with the allocator is correct for the type. More precisely, a &lt;code&gt;value: *mut T&lt;/code&gt; that has been allocated with the &lt;a href=&quot;../alloc/struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; allocator with &lt;code&gt;Layout::for_value(&amp;amp;*value)&lt;/code&gt; may be converted into a box using &lt;code&gt;Box::&amp;lt;T&amp;gt;::from_raw(value)&lt;/code&gt;. Conversely, the memory backing a &lt;code&gt;value: *mut T&lt;/code&gt; obtained from &lt;code&gt;Box::&amp;lt;T&amp;gt;::into_raw&lt;/code&gt; may be deallocated using the &lt;a href=&quot;../alloc/struct.global&quot;&gt;&lt;code&gt;Global&lt;/code&gt;&lt;/a&gt; allocator with &lt;code&gt;Layout::for_value(&amp;amp;*value)&lt;/code&gt;.</source>
          <target state="translated">Для значений ненулевого размера &lt;a href=&quot;struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; будет использовать &lt;a href=&quot;../alloc/struct.global&quot;&gt; &lt;code&gt;Global&lt;/code&gt; &lt;/a&gt; распределитель для своего распределения. Допустимо преобразование обоих способов между &lt;a href=&quot;struct.box&quot;&gt; &lt;code&gt;Box&lt;/code&gt; &lt;/a&gt; и необработанным указателем, выделенным &lt;a href=&quot;../alloc/struct.global&quot;&gt; &lt;code&gt;Global&lt;/code&gt; &lt;/a&gt; распределителем, при условии, что &lt;a href=&quot;../alloc/struct.layout&quot;&gt; &lt;code&gt;Layout&lt;/code&gt; &lt;/a&gt; используемый с распределителем, соответствует типу. Точнее, &lt;code&gt;value: *mut T&lt;/code&gt; , которое было выделено &lt;a href=&quot;../alloc/struct.global&quot;&gt; &lt;code&gt;Global&lt;/code&gt; &lt;/a&gt; распределителем с помощью &lt;code&gt;Layout::for_value(&amp;amp;*value)&lt;/code&gt; может быть преобразовано в блок с помощью &lt;code&gt;Box::&amp;lt;T&amp;gt;::from_raw(value)&lt;/code&gt; . И наоборот, память, поддерживающая &lt;code&gt;value: *mut T&lt;/code&gt; полученное из &lt;code&gt;Box::&amp;lt;T&amp;gt;::into_raw&lt;/code&gt; может быть освобождена с помощью &lt;a href=&quot;../alloc/struct.global&quot;&gt; &lt;code&gt;Global&lt;/code&gt; &lt;/a&gt;распределитель с &lt;code&gt;Layout::for_value(&amp;amp;*value)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54643b534ba092bdf13786f2ee7895ae533d1d71" translate="yes" xml:space="preserve">
          <source>For now, let&amp;rsquo;s ignore the top two lines and focus on the function to see how it works. Note the &lt;code&gt;#[test]&lt;/code&gt; annotation before the &lt;code&gt;fn&lt;/code&gt; line: this attribute indicates this is a test function, so the test runner knows to treat this function as a test. We could also have non-test functions in the &lt;code&gt;tests&lt;/code&gt; module to help set up common scenarios or perform common operations, so we need to indicate which functions are tests by using the &lt;code&gt;#[test]&lt;/code&gt; attribute.</source>
          <target state="translated">А пока давайте проигнорируем две верхние строки и сосредоточимся на функции, чтобы увидеть, как она работает. Обратите внимание на аннотацию &lt;code&gt;#[test]&lt;/code&gt; перед строкой &lt;code&gt;fn&lt;/code&gt; : этот атрибут указывает, что это тестовая функция, поэтому исполнитель тестов знает, что следует рассматривать эту функцию как тест. У нас также могут быть нетестовые функции в модуле &lt;code&gt;tests&lt;/code&gt; чтобы помочь настроить общие сценарии или выполнить общие операции, поэтому нам нужно указать, какие функции являются тестами, с помощью атрибута &lt;code&gt;#[test]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e33cfb6813b2ec50a1428dbe54a0333feee6ab7" translate="yes" xml:space="preserve">
          <source>For now, our handling of the stream consists of calling &lt;code&gt;unwrap&lt;/code&gt; to terminate our program if the stream has any errors; if there aren&amp;rsquo;t any errors, the program prints a message. We&amp;rsquo;ll add more functionality for the success case in the next listing. The reason we might receive errors from the &lt;code&gt;incoming&lt;/code&gt; method when a client connects to the server is that we&amp;rsquo;re not actually iterating over connections. Instead, we&amp;rsquo;re iterating over &lt;em&gt;connection attempts&lt;/em&gt;. The connection might not be successful for a number of reasons, many of them operating system specific. For example, many operating systems have a limit to the number of simultaneous open connections they can support; new connection attempts beyond that number will produce an error until some of the open connections are closed.</source>
          <target state="translated">На данный момент наша обработка потока состоит из вызова &lt;code&gt;unwrap&lt;/code&gt; для завершения нашей программы, если в потоке есть ошибки; если ошибок нет, программа выводит сообщение. В следующем листинге мы добавим дополнительные функции для успешного случая. Причина, по которой мы можем получать ошибки от &lt;code&gt;incoming&lt;/code&gt; метода, когда клиент подключается к серверу, заключается в том, что мы фактически не перебираем соединения. Вместо этого мы повторяем &lt;em&gt;попытки подключения&lt;/em&gt;. Подключение может быть неудачным по ряду причин, многие из которых зависят от операционной системы. Например, многие операционные системы имеют ограничение на количество одновременных открытых подключений, которые они могут поддерживать; новые попытки подключения сверх этого числа вызовут ошибку, пока не будут закрыты некоторые из открытых подключений.</target>
        </trans-unit>
        <trans-unit id="a1f6c1be5a9e80f33cd381d2dcb445e8ff860c04" translate="yes" xml:space="preserve">
          <source>For optimal performance, collections will generally avoid shrinking themselves. If you believe that a collection will not soon contain any more elements, or just really need the memory, the &lt;code&gt;shrink_to_fit&lt;/code&gt; method prompts the collection to shrink the backing array to the minimum size capable of holding its elements.</source>
          <target state="translated">Для оптимальной производительности коллекции, как правило, не сжимаются. Если вы считаете, что коллекция скоро не будет содержать больше элементов или просто действительно потребуется память, метод &lt;code&gt;shrink_to_fit&lt;/code&gt; предлагает коллекции сжать поддерживающий массив до минимального размера, способного вместить его элементы.</target>
        </trans-unit>
        <trans-unit id="cd7c16642fc855b86a6681106c12d1bc5cae24fe" translate="yes" xml:space="preserve">
          <source>For other types an index expression &lt;code&gt;a[b]&lt;/code&gt; is equivalent to &lt;code&gt;*std::ops::Index::index(&amp;amp;a, b)&lt;/code&gt;, or &lt;code&gt;*std::ops::IndexMut::index_mut(&amp;amp;mut a, b)&lt;/code&gt; in a mutable place expression context. Just as with methods, Rust will also insert dereference operations on &lt;code&gt;a&lt;/code&gt; repeatedly to find an implementation.</source>
          <target state="translated">Для других типов выражение индекса &lt;code&gt;a[b]&lt;/code&gt; эквивалентно &lt;code&gt;*std::ops::Index::index(&amp;amp;a, b)&lt;/code&gt; или &lt;code&gt;*std::ops::IndexMut::index_mut(&amp;amp;mut a, b)&lt;/code&gt; в a изменяемый контекст выражения места. Как и в случае с методами, Rust будет многократно вставлять операции разыменования в &lt;code&gt;a&lt;/code&gt; чтобы найти реализацию.</target>
        </trans-unit>
        <trans-unit id="13c849dda2f0ae7e001d50a92c5a1d89fda3d6fe" translate="yes" xml:space="preserve">
          <source>For our final project, we&amp;rsquo;ll make a web server that says &amp;ldquo;hello&amp;rdquo; and looks like Figure 20-1 in a web browser.</source>
          <target state="translated">Для нашего последнего проекта мы создадим веб-сервер, который говорит &amp;laquo;привет&amp;raquo; и выглядит в веб-браузере, как на рис. 20-1.</target>
        </trans-unit>
        <trans-unit id="d255769548dbb0d1d2dd3966fe6705e70e8ba063" translate="yes" xml:space="preserve">
          <source>For primitive signed integers (&lt;a href=&quot;../primitive.i8&quot;&gt;&lt;code&gt;i8&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../primitive.i128&quot;&gt;&lt;code&gt;i128&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../primitive.isize&quot;&gt;&lt;code&gt;isize&lt;/code&gt;&lt;/a&gt;), negative values are formatted as the two&amp;rsquo;s complement representation.</source>
          <target state="translated">Для примитивных целых чисел со &lt;a href=&quot;../primitive.i128&quot;&gt; &lt;code&gt;i128&lt;/code&gt; &lt;/a&gt; (от &lt;a href=&quot;../primitive.i8&quot;&gt; &lt;code&gt;i8&lt;/code&gt; &lt;/a&gt; до i128 и &lt;a href=&quot;../primitive.isize&quot;&gt; &lt;code&gt;isize&lt;/code&gt; &lt;/a&gt; ) отрицательные значения форматируются как представление дополнения до двух.</target>
        </trans-unit>
        <trans-unit id="aac9f771ea2b1ce33ddd4c4adcf5da0c753c4439" translate="yes" xml:space="preserve">
          <source>For primitive signed integers (&lt;code&gt;i8&lt;/code&gt; to &lt;code&gt;i128&lt;/code&gt;, and &lt;code&gt;isize&lt;/code&gt;), negative values are formatted as the two&amp;rsquo;s complement representation.</source>
          <target state="translated">Для примитивных целых чисел со &lt;code&gt;i128&lt;/code&gt; (от &lt;code&gt;i8&lt;/code&gt; до i128 и &lt;code&gt;isize&lt;/code&gt; ) отрицательные значения форматируются как представление дополнения до двух.</target>
        </trans-unit>
        <trans-unit id="ce2928dd11d16b979a65e7e0873fbf1de3498202" translate="yes" xml:space="preserve">
          <source>For regions of memory which might overlap, use &lt;a href=&quot;../ptr/fn.copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f7e3e69f692e2801e97c9dcecae515bd256300" translate="yes" xml:space="preserve">
          <source>For regions of memory which might overlap, use &lt;a href=&quot;fn.copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Для областей памяти, которые могут перекрываться, используйте вместо этого &lt;a href=&quot;fn.copy&quot;&gt; &lt;code&gt;copy&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="699bb35cf747c434fb017049f75ca63a96555a2f" translate="yes" xml:space="preserve">
          <source>For resources in languages other than English. Most are still in progress; see &lt;a href=&quot;https://github.com/rust-lang/book/issues?q=is%3Aopen+is%3Aissue+label%3ATranslations&quot;&gt;the Translations label&lt;/a&gt; to help or let us know about a new translation!</source>
          <target state="translated">Для ресурсов на языках, отличных от английского. Большинство из них все еще в процессе; см. &lt;a href=&quot;https://github.com/rust-lang/book/issues?q=is%3Aopen+is%3Aissue+label%3ATranslations&quot;&gt;ярлык Переводы,&lt;/a&gt; чтобы помочь или сообщить нам о новом переводе!</target>
        </trans-unit>
        <trans-unit id="b3ace2755d26172c16b8f52be41575cb599f9217" translate="yes" xml:space="preserve">
          <source>For similar reasons, &lt;strong&gt;this trait should never fail&lt;/strong&gt;. Failure during dereferencing can be extremely confusing when &lt;code&gt;Deref&lt;/code&gt; is invoked implicitly.</source>
          <target state="translated">По аналогичным причинам &lt;strong&gt;эта черта никогда не должна подводить&lt;/strong&gt; . Сбой во время разыменования может сильно сбивать с толку, когда &lt;code&gt;Deref&lt;/code&gt; вызывается неявно.</target>
        </trans-unit>
        <trans-unit id="f143a2f7cb6b7d643f9e55d76c2173dbf1fa2576" translate="yes" xml:space="preserve">
          <source>For similar reasons, &lt;strong&gt;this trait should never fail&lt;/strong&gt;. Failure during dereferencing can be extremely confusing when &lt;code&gt;DerefMut&lt;/code&gt; is invoked implicitly.</source>
          <target state="translated">По аналогичным причинам &lt;strong&gt;эта черта никогда не должна подводить&lt;/strong&gt; . Сбой во время разыменования может сбивать с толку, когда &lt;code&gt;DerefMut&lt;/code&gt; вызывается неявно.</target>
        </trans-unit>
        <trans-unit id="651693930e4ce9c887254d6c0684024c66f33563" translate="yes" xml:space="preserve">
          <source>For simple key functions (e.g., functions that are property accesses or basic operations), &lt;a href=&quot;#method.sort_by_key&quot;&gt;&lt;code&gt;sort_by_key&lt;/code&gt;&lt;/a&gt; is likely to be faster.</source>
          <target state="translated">Для простых ключевых функций (например, функций, которые являются &lt;a href=&quot;#method.sort_by_key&quot;&gt; &lt;code&gt;sort_by_key&lt;/code&gt; &lt;/a&gt; к свойствам или базовыми операциями) sort_by_key , вероятно, будет быстрее.</target>
        </trans-unit>
        <trans-unit id="89523ea381daa16404e1b923b1eb9b76ace1d71b" translate="yes" xml:space="preserve">
          <source>For splitting from the front, the &lt;a href=&quot;#method.splitn&quot;&gt;&lt;code&gt;splitn&lt;/code&gt;&lt;/a&gt; method can be used.</source>
          <target state="translated">Для раскола спереди можно использовать &lt;a href=&quot;#method.splitn&quot;&gt; &lt;code&gt;splitn&lt;/code&gt; &lt;/a&gt; метод.</target>
        </trans-unit>
        <trans-unit id="11e6e81fe37e9ab31f7eacdfb8dae37e44c66a22" translate="yes" xml:space="preserve">
          <source>For splitting from the front, the &lt;a href=&quot;../primitive.str#method.splitn&quot;&gt;&lt;code&gt;splitn&lt;/code&gt;&lt;/a&gt; method can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c0abfb259f7386ec06ccced34dac985722f5e3" translate="yes" xml:space="preserve">
          <source>For splitting from the front, the &lt;a href=&quot;primitive.str#method.splitn&quot;&gt;&lt;code&gt;splitn&lt;/code&gt;&lt;/a&gt; method can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad7e92077f13212fee670b70ee5343cc7564f8c" translate="yes" xml:space="preserve">
          <source>For struct-like enum variants, such as &lt;code&gt;Message::Move&lt;/code&gt;, we can use a pattern similar to the pattern we specify to match structs. After the variant name, we place curly brackets and then list the fields with variables so we break apart the pieces to use in the code for this arm. Here we use the shorthand form as we did in Listing 18-13.</source>
          <target state="translated">Для структуроподобных вариантов перечисления, таких как &lt;code&gt;Message::Move&lt;/code&gt; , мы можем использовать шаблон, аналогичный шаблону, который мы указываем для сопоставления структур. После имени варианта мы помещаем фигурные скобки, а затем перечисляем поля с переменными, поэтому мы разбиваем части, которые будут использоваться в коде для этой руки. Здесь мы используем сокращенную форму, как в листинге 18-13.</target>
        </trans-unit>
        <trans-unit id="5810f8b96156118100100f4ed7849dc0cd2c9c1a" translate="yes" xml:space="preserve">
          <source>For such a small example, a &lt;code&gt;for&lt;/code&gt; loop may be cleaner, but &lt;code&gt;for_each&lt;/code&gt; might be preferable to keep a functional style with longer iterators:</source>
          <target state="translated">Для такого небольшого примера цикл &lt;code&gt;for&lt;/code&gt; может быть чище, но &lt;code&gt;for_each&lt;/code&gt; может быть предпочтительнее, чтобы сохранить функциональный стиль с более длинными итераторами:</target>
        </trans-unit>
        <trans-unit id="e8118375098fa91fd1336cc1a1d200113a068697" translate="yes" xml:space="preserve">
          <source>For the error type, we used the &lt;em&gt;trait object&lt;/em&gt;&lt;code&gt;Box&amp;lt;dyn Error&amp;gt;&lt;/code&gt; (and we&amp;rsquo;ve brought &lt;code&gt;std::error::Error&lt;/code&gt; into scope with a &lt;code&gt;use&lt;/code&gt; statement at the top). We&amp;rsquo;ll cover trait objects in &lt;a href=&quot;ch17-00-oop&quot;&gt;Chapter 17&lt;/a&gt;. For now, just know that &lt;code&gt;Box&amp;lt;dyn Error&amp;gt;&lt;/code&gt; means the function will return a type that implements the &lt;code&gt;Error&lt;/code&gt; trait, but we don&amp;rsquo;t have to specify what particular type the return value will be. This gives us flexibility to return error values that may be of different types in different error cases. The &lt;code&gt;dyn&lt;/code&gt; keyword is short for &amp;ldquo;dynamic.&amp;rdquo;</source>
          <target state="translated">В качестве типа ошибки мы использовали &lt;em&gt;объект-признак &lt;/em&gt; &lt;code&gt;Box&amp;lt;dyn Error&amp;gt;&lt;/code&gt; (и мы добавили &lt;code&gt;std::error::Error&lt;/code&gt; в область видимости с &lt;code&gt;use&lt;/code&gt; оператора use вверху). Мы рассмотрим характерные объекты в &lt;a href=&quot;ch17-00-oop&quot;&gt;главе 17&lt;/a&gt; . На данный момент просто знайте, что &lt;code&gt;Box&amp;lt;dyn Error&amp;gt;&lt;/code&gt; означает, что функция вернет тип, реализующий черту &lt;code&gt;Error&lt;/code&gt; , но нам не нужно указывать, какой именно тип будет возвращаемое значение. Это дает нам возможность возвращать значения ошибок, которые могут быть разных типов в разных случаях ошибки. &lt;code&gt;dyn&lt;/code&gt; ключевое слово является аббревиатурой &amp;laquo;динамика&amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="ff1e8b621d2f0697fd650c7bd5bdebd31c66d8f4" translate="yes" xml:space="preserve">
          <source>For the first code example, please check the function definition. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f504eb5407df9eef6d4025ac7f91c4112cc6cf" translate="yes" xml:space="preserve">
          <source>For the full list of configuration options and defaults for each profile, see &lt;a href=&quot;https://doc.rust-lang.org/cargo/index.html&quot;&gt;Cargo&amp;rsquo;s documentation&lt;/a&gt;.</source>
          <target state="translated">Полный список параметров конфигурации и значений по умолчанию для каждого профиля см. &lt;a href=&quot;https://doc.rust-lang.org/cargo/index.html&quot;&gt;В документации Cargo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="791c57d5635fae5aa217abb12eda43c0b9996769" translate="yes" xml:space="preserve">
          <source>For the full list of configuration options and defaults for each profile, see &lt;a href=&quot;https://doc.rust-lang.org/cargo/reference/profiles.html&quot;&gt;Cargo&amp;rsquo;s documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a68c719c83bfb13b132657f78b2e4ff48741b1d" translate="yes" xml:space="preserve">
          <source>For the implementation of the &lt;code&gt;send&lt;/code&gt; method, the first parameter is still an immutable borrow of &lt;code&gt;self&lt;/code&gt;, which matches the trait definition. We call &lt;code&gt;borrow_mut&lt;/code&gt; on the &lt;code&gt;RefCell&amp;lt;Vec&amp;lt;String&amp;gt;&amp;gt;&lt;/code&gt; in &lt;code&gt;self.sent_messages&lt;/code&gt; to get a mutable reference to the value inside the &lt;code&gt;RefCell&amp;lt;Vec&amp;lt;String&amp;gt;&amp;gt;&lt;/code&gt;, which is the vector. Then we can call &lt;code&gt;push&lt;/code&gt; on the mutable reference to the vector to keep track of the messages sent during the test.</source>
          <target state="translated">Для реализации метода &lt;code&gt;send&lt;/code&gt; первым параметром остается неизменяемое заимствование &lt;code&gt;self&lt;/code&gt; , которое соответствует определению признака. Мы вызываем &lt;code&gt;borrow_mut&lt;/code&gt; в &lt;code&gt;RefCell&amp;lt;Vec&amp;lt;String&amp;gt;&amp;gt;&lt;/code&gt; в &lt;code&gt;self.sent_messages&lt;/code&gt; , чтобы получить изменяемую ссылку на значение внутри &lt;code&gt;RefCell&amp;lt;Vec&amp;lt;String&amp;gt;&amp;gt;&lt;/code&gt; , которое является вектором. Затем мы можем вызвать &lt;code&gt;push&lt;/code&gt; для изменяемой ссылки на вектор, чтобы отслеживать сообщения, отправленные во время теста.</target>
        </trans-unit>
        <trans-unit id="a95e91b27e6ad6f9ade905d772c0b6782aa828f3" translate="yes" xml:space="preserve">
          <source>For the mutable counterpart see &lt;a href=&quot;#method.as_mut&quot;&gt;&lt;code&gt;as_mut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5a9781a149f8d35fca4d184f08a35d9f2cbdac" translate="yes" xml:space="preserve">
          <source>For the mutable counterpart see &lt;a href=&quot;#method.as_uninit_mut&quot;&gt;&lt;code&gt;as_uninit_mut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f973a0bac5133bff0149357edc17c4cb290249" translate="yes" xml:space="preserve">
          <source>For the mutable counterpart see &lt;a href=&quot;#method.as_uninit_slice_mut&quot;&gt;&lt;code&gt;as_uninit_slice_mut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
