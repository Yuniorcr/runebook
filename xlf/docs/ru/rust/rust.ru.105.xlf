<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="c3e4da265b84e30a1786f13426cf75aed6960c56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-3&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangeinclusive&quot;&gt;RangeInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#417-420&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ba6a9253fc94fe3e99acf8800e0f1defec3ab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-4&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangeto&quot;&gt;RangeTo&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#279-283&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="819b35ab32d18d287c370f93b997e649afb2b523" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-5&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;../ops/struct.rangetoinclusive&quot;&gt;RangeToInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#468-471&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8b22806fcdd7532f405bcfaf22e03f38b10dbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-6&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#247-250&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215de98c2441aabc0be13cf26aee4f33e44e1cb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-7&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#299-304&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1514e4030301a1f197e46e0f3cc7f87f4e8035" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-8&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#387-390&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3babb146b3a1cf8704f77ee45a36caa8807e74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.get_unchecked_mut-9&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#431-433&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28775690cd5d433c0c24501001cbc64cf84b168c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.grow-2&quot;&gt;grow&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/alloc.rs.html#224-232&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d516da8d409167162fb60c00210d1ae6eb472c24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.grow_zeroed-2&quot;&gt;grow_zeroed&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/alloc.rs.html#235-243&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84185daff573a33d4bfe3a78767bae642b109363" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-1&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#625-628&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc1016a1a1190aeaf45b83351be660c830dfc9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-10&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/tcp.rs.html#605-608&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4d2b8506b4393c22581b4074aa52327c14f299" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-11&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#272-274&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd56761183629749a8325cf0e57f8b7fbb38437b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-12&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#429-431&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a24849ab2b3e2eac4f12b7c8fcc7c3afd8b807b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-13&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#713-715&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e7e386c128aef6bbc1ebb4233dbaf1e5c30050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-14&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#131-133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeab7940bb7873c1f8d6c236315f9658864b2d5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-15&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#32-34&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41828fb84f716dadb32e5f60ffcf320cc01bec76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-16&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#303-305&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bec5c1d728e31663111eb3c3edac3ee675bab7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-16&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered/bufreader.rs.html#293-295&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d556c9f046ad4e4663538fdabf8220f8e4d044" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-17&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#280-282&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f0e31ff59e5c1f6017643b22072ef1ae9d2fe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-17&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#283-285&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6680c495227bbd62139261f30394ad333d781cbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-18&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2358-2360&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93b37fc0d9a2504ce90a411b1feadcd84d9eefb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-18&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2360-2362&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39da1fbad38dab245747643b2c2250ee7fcad2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-19&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2167-2170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78042fb1c93ec2edd62cd1e162b80e6165b454e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-19&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2169-2172&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bbb5241d3582882dc8e6f564a8d5c92c2f1ba71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-2&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/util.rs.html#117-119&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97e88d562c473edb1494a427601140e5b83430c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-2&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/util.rs.html#118-120&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63818893ee8db91295e96fc006f518bfba9d483" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-3&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/util.rs.html#191-193&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ec8c05ecc85e766f88a382972c1479b4d25975" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-3&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/util.rs.html#193-195&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f247518e7eeda19f8aee5c2c6ef4d71ffdd9a21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-4&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#399-401&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20785507d8774349a777e25522f9adf22b1df9df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-5&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/tcp.rs.html#565-568&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f881a013ee0f10c7942269bcfd499799cbc5579" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-6&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#692-694&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0985cbe7c699712c0ff62e18fe62930f57e072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-7&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#406-409&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32bbe85d7cf095322fb3df9fc58c07acd2b8c753" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-8&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#345-348&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47df57417295c2ae3d348b6f034351211557f3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.initializer-9&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#671-674&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54640d4dd069eb58a28d8d4296920c8b8367e656" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.pre_exec&quot;&gt;pre_exec&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../../../process/struct.command&quot;&gt;Command&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../../../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;() -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt; + &lt;a href=&quot;../../../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../../../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; + 'static,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#128-134&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e50774085d2d845da7b6135a277b7474aaa10d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.pre_exec&quot;&gt;pre_exec&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../../../process/struct.command&quot;&gt;Command&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../../../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;() -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt; + &lt;a href=&quot;../../../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../../../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; + 'static,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#144-150&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c44992cdda925759e893a8e30343ec72b54fbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.realloc-1&quot;&gt;realloc&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_size: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/alloc.rs.html#46-52&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32650f3aef0258ee25cea3fb9abb93274519da72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#method.shrink-2&quot;&gt;shrink&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/alloc.rs.html#246-286&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc5a50c6681695c5e6296f694261912c1a7af93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;#tymethod.pre_exec&quot;&gt;pre_exec&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../../../process/struct.command&quot;&gt;Command&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../../../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;() -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt; + &lt;a href=&quot;../../../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../../../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; + 'static,&amp;nbsp;&lt;/code&gt;1.34.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515c6dc7f863c0a5ccb356964730ca75e7fcd8c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../../../io/trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../../io/struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#692-694&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c25885378cf6528a08b40bd7f46e64a645305dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../../../io/trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../../io/struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#713-715&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f95f2e17fb9a256d2305eba880933bbf7137205" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../../iter/trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &amp;amp;mut &amp;lt;&lt;a href=&quot;struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt; as &lt;a href=&quot;../../iter/trait.sourceiter&quot;&gt;SourceIter&lt;/a&gt;&amp;gt;::&lt;a href=&quot;../../iter/trait.sourceiter#associatedtype.Source&quot;&gt;Source&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/binary_heap.rs.html#1179-1181&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f588e90388a700471935f895823d3437ecb8035" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../io/trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;../io/type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.unixdatagram&quot;&gt;UnixDatagram&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#1758-1760&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe28dc152d8c21d5759eedd57fbd52ef63f07cb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../io/trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;../io/type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.unixlistener&quot;&gt;UnixListener&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#1087-1089&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="555719705398ecbd95c7de836cf5f358cc38d29c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../io/trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;../io/type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.unixstream&quot;&gt;UnixStream&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#767-769&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f447cb0eae075a2db52002ffee1dd3b9f82917e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../io/trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../io/struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#625-628&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb9a67fbd93ebf97d623d5e8fc1780bcc02c4bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../io/trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../io/struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#671-674&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c948def04cecde7825eefe9512db3487eccf384a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../io/trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../io/struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#131-133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f635489439105601cb436f128471f3ff83d594" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../io/trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../io/struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/tcp.rs.html#565-568&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439a7153c3ac89c711ede024e9a94e0f9d508204" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../io/trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../io/struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/tcp.rs.html#605-608&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823d07c71d7c98a441583c3a1634e7aaba1a8b1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../io/trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../io/struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#345-348&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9484116a37f3730182411a092cd2d0f1cc93a17a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../io/trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../io/struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#406-409&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10c8f327155024ee75c8036c7ed2bd84a275261" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../iter/trait.iterator#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/iter.rs.html#279-283&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e0c0df50183d346601b6bef5553455a68c0f9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../iter/trait.iterator#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;i: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt; as &lt;a href=&quot;../iter/trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;../iter/trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#2980-2995&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242c2acdb6bb76bb3b861d7122da4238e83c8ea7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../iter/trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &amp;amp;mut &amp;lt;&lt;a href=&quot;struct.intoiter&quot;&gt;IntoIter&lt;/a&gt;&amp;lt;T&amp;gt; as &lt;a href=&quot;../iter/trait.sourceiter&quot;&gt;SourceIter&lt;/a&gt;&amp;gt;::&lt;a href=&quot;../iter/trait.sourceiter#associatedtype.Source&quot;&gt;Source&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/vec.rs.html#3080-3082&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9b14328303cec8ef98e48f3d721a70ad4f1335" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../os/unix/io/trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;../os/unix/io/type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.file&quot;&gt;File&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/io.rs.html#132-134&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64dd787ab688fc840038b69ba273f31b24fc1b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../os/unix/io/trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;../os/unix/io/type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.stdio&quot;&gt;Stdio&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#175-179&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4cfc687f528d1df2ff04f846f9a2afbc4a62330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../os/unix/io/trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;../os/unix/io/type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.stdio&quot;&gt;Stdio&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#191-195&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45db1c8adffdf5114906dd9bf4415c451a62bdce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../os/unix/io/trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;../os/unix/io/type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.tcplistener&quot;&gt;TcpListener&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#810-813&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f71a10c3507c6e041efb98c135bbbee0e9b9a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../os/unix/io/trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;../os/unix/io/type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.tcpstream&quot;&gt;TcpStream&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#802-805&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c2dd6c72f0a6c02c3e55503878e4930daf6d89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../os/unix/io/trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;../os/unix/io/type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.udpsocket&quot;&gt;UdpSocket&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#818-821&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e97f7d366720b610b221d1c79d54d4cafe818c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../os/unix/process/trait.commandext#tymethod.pre_exec&quot;&gt;pre_exec&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &amp;amp;mut &lt;a href=&quot;struct.command&quot;&gt;Command&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;() -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; + 'static,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#128-134&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cda1e286d561bed9f7026ce502b2a0e85e8766" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../os/unix/process/trait.commandext#tymethod.pre_exec&quot;&gt;pre_exec&lt;/a&gt;&amp;lt;F&amp;gt;(&amp;amp;mut self, f: F) -&amp;gt; &amp;amp;mut &lt;a href=&quot;struct.command&quot;&gt;Command&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F: &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;FnMut&lt;/a&gt;() -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&amp;gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; + 'static,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/process.rs.html#144-150&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72099d2976281520f210db40e430b8c0fa98a4ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../os/windows/io/trait.fromrawhandle#tymethod.from_raw_handle&quot;&gt;from_raw_handle&lt;/a&gt;(handle: &lt;a href=&quot;../os/windows/io/type.rawhandle&quot;&gt;RawHandle&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.file&quot;&gt;File&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/io.rs.html#111-114&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d7dea3e0a456f5f3a6af5f9bf606a9c52ea978" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../os/windows/io/trait.fromrawhandle#tymethod.from_raw_handle&quot;&gt;from_raw_handle&lt;/a&gt;(handle: &lt;a href=&quot;../os/windows/io/type.rawhandle&quot;&gt;RawHandle&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.stdio&quot;&gt;Stdio&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/process.rs.html#12-16&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2683f65a456b28b923da99fd8575a18344e9e069" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../os/windows/io/trait.fromrawsocket#tymethod.from_raw_socket&quot;&gt;from_raw_socket&lt;/a&gt;(sock: &lt;a href=&quot;../os/windows/io/type.rawsocket&quot;&gt;RawSocket&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.tcplistener&quot;&gt;TcpListener&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/io.rs.html#190-193&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e141b88b6d7ad0da06751bd0497f4aee832f12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../os/windows/io/trait.fromrawsocket#tymethod.from_raw_socket&quot;&gt;from_raw_socket&lt;/a&gt;(sock: &lt;a href=&quot;../os/windows/io/type.rawsocket&quot;&gt;RawSocket&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.tcpstream&quot;&gt;TcpStream&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/io.rs.html#183-186&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2219cdbb69dd221b55debd126d15edae401c7fa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../os/windows/io/trait.fromrawsocket#tymethod.from_raw_socket&quot;&gt;from_raw_socket&lt;/a&gt;(sock: &lt;a href=&quot;../os/windows/io/type.rawsocket&quot;&gt;RawSocket&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.udpsocket&quot;&gt;UdpSocket&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/io.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b98699e2b61afbf9190788a786229def12974b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.range&quot;&gt;Range&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#193-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a746cd7ccfa318f25aeadd25b2668d72c28a76a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangefrom&quot;&gt;RangeFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#344-351&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd4c683aaaf82d3d104b2d40ee6e83c4ceed30c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangefull&quot;&gt;RangeFull&lt;/a&gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#110-112&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369ea6036b5a5bdca381658aa7e175cb984b860a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangeinclusive&quot;&gt;RangeInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#412-415&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d711d405b9a56e911e46832856ce9ef40c55a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangeto&quot;&gt;RangeTo&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#273-277&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d745af107369b5895399d2faf97bb8654562dc3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangetoinclusive&quot;&gt;RangeToInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#463-466&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556651b2d7df9cb07c5c98575a8ae2a20a2e6f71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#290-296&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8942ae6478af778d3d40d59a3c55792c2dddfa5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#344-347&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d3ed824d0c379168fc77bcb77254e2ad41a03d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#381-384&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0137ac0b5efb8bca72cfb6627787b5e2ff9aff80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#426-428&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77aa322f06e3a8718bb5d0a0bcabb6de910702a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#465-468&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4845de111acc7afa32c2fc1e65461a32c6059d8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#508-511&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65704203050efdca98a2e583f6b6b37001157025" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.range&quot;&gt;Range&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#202-208&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab4ee1d03410141fa06c2dd5abe0f75eec1f4d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangefrom&quot;&gt;RangeFrom&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#353-359&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65048c31625b5bc9f1f5ec25102deeb086a9eb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangefull&quot;&gt;RangeFull&lt;/a&gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#114-116&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ff55b8b75607ac8f2aa9b0346fe731b7691550" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangeinclusive&quot;&gt;RangeInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#417-420&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc4451bbfad33bac838968354478c78e810a38a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangeto&quot;&gt;RangeTo&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#279-283&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8908c382eb73a2c6f1723dc01782542baaa75468" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangetoinclusive&quot;&gt;RangeToInclusive&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;SliceIndex&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../slice/trait.sliceindex#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/traits.rs.html#468-471&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e269266b406a15c47661f72ace283a5a483241cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#299-304&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8976bb4f83a0bc2cd176c6a35598532e693a0759" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#350-353&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165ff4bf020012b725960f1690654bff19647858" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#387-390&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef98a738c20c13e1521102de01229f9606561b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#431-433&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f232f362d36606fcfe8c30bead38deedcfe711e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#471-474&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357ec8d73b3e479fc33f07113ffe8eed66b7ecec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#514-517&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34426111fd01ef8bd0cd69a689bc1e7229b23fb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;alloc/trait.allocref#method.grow&quot;&gt;grow&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;alloc/struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;alloc/struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;alloc/struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc/mod.rs.html#367-375&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7eb0a20a49ecc88475bc0b71d7ae5849006d911" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;alloc/trait.allocref#method.grow_zeroed&quot;&gt;grow_zeroed&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;alloc/struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;alloc/struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;alloc/struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc/mod.rs.html#378-386&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03287d7ed0f953b5f304057126693d6bc673dac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;alloc/trait.allocref#method.shrink&quot;&gt;shrink&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;alloc/struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;alloc/struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;alloc/struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc/mod.rs.html#389-397&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8bede7c9efa8845181ebf8d42ce4e764852999f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;alloc/trait.allocref#tymethod.dealloc&quot;&gt;dealloc&lt;/a&gt;(&amp;amp;self, ptr: &lt;a href=&quot;ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, layout: &lt;a href=&quot;alloc/struct.layout&quot;&gt;Layout&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc/mod.rs.html#361-364&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da652ba2c5ba1339eb8ab5c2c0d6c2058efcf520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;io/trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;io/struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#272-274&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0dfedd4be71cf1cee33d2b36df0d5bc9247c480" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;io/trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;io/struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/impls.rs.html#32-34&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b893583e46120056c7e62f38c9848f626c1fca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.char&quot;&gt;char&lt;/a&gt;, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.char&quot;&gt;char&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#469-482&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc45f46876efc3cca5089b4bc84dab0bd9187c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2214111befeee4cf4052dbab1a8dd2c1016cc60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f98dfbd4d07aff439811304dee8103ff16f1867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f19c553f109dec021058d0130f418c2f1baae26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f49b1d4104ecee520e6f2dec9156616989c702" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a29c1ed8b967b4b1716023b81aad156bd6d38c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f252293100c91c0ec73c8f04649b7b5b6320819" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7084cd49b3c7c14296cda95b1d0ba8c2d881187a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be161987228d116c46b8c50400bcc41a9411d160" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de5c3811c218ec8b9551f62239aa5bb112ffa88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899fae1cd40ac38c5f965dfae7f8b2e95568c1df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4760fdda31bcafc8d215c57886d8a47a54e24931" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;backward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#197-200&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42564835e0c5969537fa634623b28effefefed2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.char&quot;&gt;char&lt;/a&gt;, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.char&quot;&gt;char&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#453-466&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a638048d2206c71c51b50fe1166c80228bc42327" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d04d32a5411f8b5f7552ea76c41a64315d81150" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6018f89e8ee57bee16856fd070680be181ee46ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1740622a942276aea2fc80a19847db8c1bf81a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7559972fa2eaa9b0b33ca44f165a7b33642de149" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5c8361b9adeae513dc7e865f42335e13b6c99f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb89a6700dc8f22fd487800c1c265c194eea260f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009c958d821bf7c5406c9cae6f25ffef44386198" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24367b13dd3abbe5e929b5dd995f5f0a4e8063ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd04ec82b5fc5c985dff3a61130ec5b4058604d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10f620e8ead014aff72fed485f7cfd3851da5f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdeb56a05a936f779d00f8392f50fc670f46234f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;forward_unchecked&lt;/a&gt;(start: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;, n: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/range.rs.html#191-194&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c0503969b5ca85e56e0e1357da803e380c3b56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;get_unchecked&lt;/a&gt;(self, slice: &lt;a href=&quot;primitive.pointer&quot;&gt;*const &lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#238-244&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f5526bce10f4a4f8671c03540ccf20825a546b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;slice/trait.sliceindex#tymethod.get_unchecked_mut&quot;&gt;get_unchecked_mut&lt;/a&gt;(self, slice: &lt;a href=&quot;primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;primitive.slice&quot;&gt;[&lt;/a&gt;T&lt;a href=&quot;primitive.slice&quot;&gt;]&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/slice/index.rs.html#247-250&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c82750f46d103bdba8233a5f2329ea222e6336" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.allocref#method.grow&quot;&gt;grow&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/alloc.rs.html#230-238&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d9cfb0bba2e6f4562cd6ae1470ba1a386c8fe3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.allocref#method.grow&quot;&gt;grow&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/alloc.rs.html#224-232&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f5a1a7724942ccc838842ada3a174bff72a7ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.allocref#method.grow_zeroed&quot;&gt;grow_zeroed&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/alloc.rs.html#241-249&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c99d334cec37249a63cb8c1abd4becc4b5a9acb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.allocref#method.grow_zeroed&quot;&gt;grow_zeroed&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/alloc.rs.html#235-243&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c0766d9f7d23f7f141556da453f171b57b1aa96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.allocref#method.shrink&quot;&gt;shrink&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/alloc.rs.html#252-292&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2cc60e3298c87f0cd0dccdcd923f28a02fa652" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.allocref#method.shrink&quot;&gt;shrink&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;old_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../result/enum.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;, &lt;a href=&quot;struct.allocerror&quot;&gt;AllocError&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/alloc.rs.html#246-286&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e61e7b7e3e1080665631abe9f6ebf3fceca66480" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.allocref#tymethod.dealloc&quot;&gt;dealloc&lt;/a&gt;(&amp;amp;self, ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/alloc.rs.html#221-227&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a04b44fbbda0d1a6948e85bc2a6f625e5a89c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.allocref#tymethod.dealloc&quot;&gt;dealloc&lt;/a&gt;(&amp;amp;self, ptr: &lt;a href=&quot;../ptr/struct.nonnull&quot;&gt;NonNull&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;, layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/alloc.rs.html#215-221&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fbc88ddb3a1712572d6cdc580b44477cd74d98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.fromrawfd#tymethod.from_raw_fd&quot;&gt;from_raw_fd&lt;/a&gt;(fd: &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;type.rawfd&quot;&gt;RawFd&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/io.rs.html#119-121&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3bd498c8294e659730982989fd6ba94c4cf6fb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.globalalloc#method.alloc_zeroed&quot;&gt;alloc_zeroed&lt;/a&gt;(&amp;amp;self, layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/alloc.rs.html#27-38&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1923f02b5e3aabac6f85661fbb10e4ba08fd9a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.globalalloc#method.realloc&quot;&gt;realloc&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new_size: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/alloc.rs.html#46-52&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af4f052e36752dc0660e64c0ba7b846ce1623f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.globalalloc#tymethod.alloc&quot;&gt;alloc&lt;/a&gt;(&amp;amp;self, layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/alloc.rs.html#8-24&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7247dfd57395da1ceb64cc4cddd46c2011daa9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.globalalloc#tymethod.dealloc&quot;&gt;dealloc&lt;/a&gt;(&amp;amp;self, ptr: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;, _layout: &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;)&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/alloc.rs.html#41-43&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7721d8d2eff622dad15c77ace971c0388bf87804" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.iterator#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; B where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.map&quot;&gt;Map&lt;/a&gt;&amp;lt;I, F&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#948-955&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08af2bcdb8e3c3b71037f7ba235b4150d48af909" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.iterator#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; T where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.cloned&quot;&gt;Cloned&lt;/a&gt;&amp;lt;I&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#433-440&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d28fa1a9feaf3e63a437f89b7eca7442b36494" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.iterator#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&amp;amp;mut self, idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; T where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.copied&quot;&gt;Copied&lt;/a&gt;&amp;lt;I&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#298-305&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69d0db603a7ab6ee64f70efb4c91f35d0e535f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.iterator#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.enumerate&quot;&gt;Enumerate&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.enumerate&quot;&gt;Enumerate&lt;/a&gt;&amp;lt;I&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1444-1452&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db061f83659733f9b8c021952719fd112cf509df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.iterator#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.fuse&quot;&gt;Fuse&lt;/a&gt;&amp;lt;I&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#118-129&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be9b60540ffe2cd50e0f65dfa52f7c01c0f79cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.iterator#method.__iterator_get_unchecked&quot;&gt;__iterator_get_unchecked&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;mut self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;idx: &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;A, B&amp;gt; as &lt;a href=&quot;trait.iterator&quot;&gt;Iterator&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.iterator#associatedtype.Item&quot;&gt;Item&lt;/a&gt; where&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;struct.zip&quot;&gt;Zip&lt;/a&gt;&amp;lt;A, B&amp;gt;: TrustedRandomAccess,&amp;nbsp;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/zip.rs.html#62-69&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb6ed2d3087c3bd78645f04899a626ca66604a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered.rs.html#303-305&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e267e02813c5d54063bea3350c7ad2ad6d088cf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/buffered/bufreader.rs.html#293-295&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e796a11501594bce05d15ab0e73678f3fb0cd42d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#280-282&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8461708e35b3e4bbc22eb72b1198889163b1396" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/cursor.rs.html#283-285&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd930bedffda6f357a677fbdf47e1a94c27d390" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2167-2170&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689bdcc3db5ad0a1fbffe86b870978ab2df94260" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2169-2172&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b847524e6120d6fab3795274b40db8e33da222" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2358-2360&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fad36d488636a8cbe8fc8f053338192a3e4d44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#2360-2362&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d728ad855a44dc5c6b74b6e48858b07473186231" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#399-401&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b00542226483f049634edaa82425e1606fc2155" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#429-431&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6627e9fc95d352b7351e65868274b9e208db2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/util.rs.html#117-119&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd9dab9a629bfff297a481ae815b9ea3f1263a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/util.rs.html#118-120&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62c773477da79d7cf4f0c8b4db500cd40acde31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/util.rs.html#191-193&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58763bdd47df87f414d0c6a0d3ecf5933c9f2f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.read#method.initializer&quot;&gt;initializer&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/util.rs.html#193-195&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f64b1f014e94edec0fb79446865df169483b55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/fuse.rs.html#529-536&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2cc5131503be39a4100512337dfb7e8c0a9a44c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1031-1034&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf8b8093da4b3f2f77b7bf6e579e6394a631486" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1180-1183&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa7bc56f272d34366f1c0804ca00bb5291e8af0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1324-1327&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d9910c3bc8e768a8bfd65bb590b86d9f8f2158" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1562-1565&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d4b7498e838fce477ac7ff64e75cfd6c0030cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1860-1863&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4aa411f3c84749378deb262e5a043040dfd1855" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#1979-1982&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d220c654bf5c5ea4191831219afb5b255cf144" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2114-2117&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b57cc8c9f236ee253c4daf2ee35a0a89219f54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2415-2418&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65100348059cedfb5020dd55c071aba946543da4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2542-2545&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5435cc61697f38faea482fe7183ed24a774de1be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2724-2727&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4172fb539d35df55de8f4f3bb3ad9f9b7fc947af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#2891-2894&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a98b1355854dca99831ac62f41246b5ccf8eb16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn &lt;a href=&quot;trait.sourceiter#tymethod.as_inner&quot;&gt;as_inner&lt;/a&gt;(&amp;amp;mut self) -&amp;gt; &lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;mut &lt;/a&gt;S&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/iter/adapters/zip.rs.html#346-349&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cfe40fdf2d08b9c6f36a42fdb3a62e27c72fd7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn&lt;/code&gt; also acts like an &lt;code&gt;unsafe {}&lt;/code&gt; block around the code inside the function. This means it is not just a signal to the caller, but also promises that the preconditions for the operations inside the function are upheld. Mixing these two meanings can be confusing and &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/2585&quot;&gt;proposal&lt;/a&gt;s exist to use &lt;code&gt;unsafe {}&lt;/code&gt; blocks inside such functions when making &lt;code&gt;unsafe&lt;/code&gt; operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f8205051666fe460d26b63bd2a4b14de70171d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe fn&lt;/code&gt;: calling this function means abiding by a contract the compiler cannot enforce.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21af6d35e8f320a6888f4b0692c0440e55ec063e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe impl&lt;/code&gt;: the contract necessary to implement the trait has been checked by the programmer and is guaranteed to be respected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17ac4ce0e81b5b021eb729511b7b4be3eb95241" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe trait&lt;/code&gt;: implementing the &lt;a href=&quot;keyword.trait&quot;&gt;&lt;code&gt;trait&lt;/code&gt;&lt;/a&gt; means abiding by a contract the compiler cannot enforce.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ccbe87bead73d8ac5c34efd1d03f23bed1b272c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe {}&lt;/code&gt;: the contract necessary to call the operations inside the block has been checked by the programmer and is guaranteed to be respected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805f2b9152d73be6994ac2a9ed4f55d25b3958ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt; - denote unsafe code, functions, traits, or implementations</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt; - обозначают небезопасный код, функции, характеристики или реализации</target>
        </trans-unit>
        <trans-unit id="b8f5446501043cd72eba942178b8c8f9d7127e09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt; blocks</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt; блоки</target>
        </trans-unit>
        <trans-unit id="e8e3345d0d20542f3961bfada324b4be5ae460c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt; blocks and &lt;code&gt;const unsafe fn&lt;/code&gt; are allowed, but the body/block may only do the following unsafe operations:</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt; Разрешены небезопасные блоки и &lt;code&gt;const unsafe fn&lt;/code&gt; , но тело / блок могут выполнять только следующие небезопасные операции:</target>
        </trans-unit>
        <trans-unit id="26711f73b5cc99d230568d4bde6b5e376339229e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt; can be used on functions. Note that functions and statics declared in &lt;a href=&quot;keyword.extern&quot;&gt;&lt;code&gt;extern&lt;/code&gt;&lt;/a&gt; blocks are implicitly marked as &lt;code&gt;unsafe&lt;/code&gt; (but not functions declared as &lt;code&gt;extern &quot;something&quot; fn ...&lt;/code&gt;). Mutable statics are always unsafe, wherever they are declared. Methods can also be declared as &lt;code&gt;unsafe&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa370f536df8b7e006c8811ff9b5f6d3390758b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt;&lt;em&gt;BlockExpression&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt;&lt;em&gt;BlockExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1151ebe2f34f7b34944ae85afe324b29de8f15ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;extern&lt;/code&gt;&lt;a href=&quot;functions&quot;&gt;&lt;em&gt;Abi&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;extern&lt;/code&gt;&lt;a href=&quot;functions&quot;&gt;&lt;em&gt;Abi&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6b449b84465a6dfedf9fdd8c4060055ec11634f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;impl&lt;/code&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;!&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt;&lt;code&gt;for&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;impl&lt;/code&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;!&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../paths#paths-in-types&quot;&gt;&lt;em&gt;TypePath&lt;/em&gt;&lt;/a&gt;&lt;code&gt;for&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23b16f492df3e8cfe43a157f5ac9e883f40331bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;mod&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;mod&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c213f71744e3496c0a4c469e371467c7ccc65dc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;trait&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt; ( &lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt; )&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;unsafe&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt; &lt;code&gt;trait&lt;/code&gt; &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER &lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt; ? &lt;/sup&gt;( &lt;code&gt;:&lt;/code&gt; &lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt; ?&lt;/sup&gt; ) &lt;sup&gt;? &lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt; ? &lt;/sup&gt; &lt;code&gt;{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="472fa0a8af4da5ffdd1e861a005bad94b17ba8a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unwrap&lt;/code&gt; the &lt;code&gt;Result&amp;lt;T&amp;gt;&lt;/code&gt;, propagating the panic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb0a77ab71ec0bbd26928506e21321581be6903" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unzip()&lt;/code&gt; consumes an entire iterator of pairs, producing two collections: one from the left elements of the pairs, and one from the right elements.</source>
          <target state="translated">&lt;code&gt;unzip()&lt;/code&gt; использует весь итератор пар, создавая две коллекции: одну из левых элементов пар и одну из правых элементов.</target>
        </trans-unit>
        <trans-unit id="f456905a1d3d6d03c7b6621576a3403358714371" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use&lt;/code&gt; - bring symbols into scope</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; - ввести символы в область видимости</target>
        </trans-unit>
        <trans-unit id="14ae1a9aead1dddc54a27bba1ba6f3f1e2e22e18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use&lt;/code&gt; Paths</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; пути</target>
        </trans-unit>
        <trans-unit id="5169fc857a584a19af23b472571ef92b6980c9ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use&lt;/code&gt; Visibility</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; видимость</target>
        </trans-unit>
        <trans-unit id="f1bde37586217501db68bfc7d52534b8fcfd6058" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use&lt;/code&gt; declarations</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; объявления</target>
        </trans-unit>
        <trans-unit id="232f6c6cf9d575813a9014b62ed17c56d46c8564" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use&lt;/code&gt;&lt;em&gt;UseTree&lt;/em&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt;&lt;em&gt;UseTree&lt;/em&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="66200641914a8ccaf8f122b32177d225ef47c976" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use_max&lt;/code&gt; is the capacity that was (or would have been) returned when (if) the block was allocated via a call to &lt;code&gt;alloc_excess&lt;/code&gt; or &lt;code&gt;realloc_excess&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;use_max&lt;/code&gt; - это емкость, которая была (или должна была быть) возвращена, когда (если) блок был выделен через вызов &lt;code&gt;alloc_excess&lt;/code&gt; или &lt;code&gt;realloc_excess&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d608195115134d4ea9fea4472362792947f140f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use_min&lt;/code&gt; is &lt;code&gt;self.usable_size(layout).0&lt;/code&gt;, and</source>
          <target state="translated">&lt;code&gt;use_min&lt;/code&gt; - это &lt;code&gt;self.usable_size(layout).0&lt;/code&gt; , и</target>
        </trans-unit>
        <trans-unit id="291f5d8219cb005b1bc7f164594312229e1e7394" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;usize&lt;/code&gt; and &lt;code&gt;isize&lt;/code&gt; are at least 16-bits wide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b38fa0b1ef7073555973d244758d06cb19996e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;usize&lt;/code&gt; and &lt;code&gt;isize&lt;/code&gt; have a size big enough to contain every address on the target platform. For example, on a 32 bit target, this is 4 bytes and on a 64 bit target, this is 8 bytes.</source>
          <target state="translated">&lt;code&gt;usize&lt;/code&gt; и &lt;code&gt;isize&lt;/code&gt; имеют размер, достаточный для размещения всех адресов целевой платформы. Например, для 32-битной цели это 4 байта, а для 64-битной цели - 8 байтов.</target>
        </trans-unit>
        <trans-unit id="8517555f62051bd887048d0f96f8011d175bf39e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var = expr&lt;/code&gt;, &lt;code&gt;ident = type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;var = expr&lt;/code&gt; , &lt;code&gt;ident = type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e1f1b24a5b6675ef99987af788624aa2117200b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variant(x, ..)&lt;/code&gt;, &lt;code&gt;struct_type { x, .. }&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;variant(x, ..)&lt;/code&gt; , &lt;code&gt;struct_type { x, .. }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="75ce46d92480cdcd4600e7f8c69b733a667507a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vec!&lt;/code&gt; allows &lt;code&gt;Vec&lt;/code&gt;s to be defined with the same syntax as array expressions. There are two forms of this macro:</source>
          <target state="translated">&lt;code&gt;vec!&lt;/code&gt; позволяет определять &lt;code&gt;Vec&lt;/code&gt; с тем же синтаксисом, что и выражения массива. Есть две формы этого макроса:</target>
        </trans-unit>
        <trans-unit id="fbd1def4fd4e7409afc8f13d7310b1ad7193138a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vec![x; n]&lt;/code&gt;, &lt;code&gt;vec![a, b, c, d]&lt;/code&gt;, and &lt;a href=&quot;struct.vec#method.with_capacity&quot;&gt;&lt;code&gt;Vec::with_capacity(n)&lt;/code&gt;&lt;/a&gt;, will all produce a &lt;code&gt;Vec&lt;/code&gt; with exactly the requested capacity. If &lt;a href=&quot;struct.vec#method.len&quot;&gt;&lt;code&gt;len&lt;/code&gt;&lt;/a&gt;&lt;code&gt;==&lt;/code&gt;&lt;a href=&quot;struct.vec#method.capacity&quot;&gt;&lt;code&gt;capacity&lt;/code&gt;&lt;/a&gt;, (as is the case for the &lt;a href=&quot;../macro.vec&quot;&gt;&lt;code&gt;vec!&lt;/code&gt;&lt;/a&gt; macro), then a &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; can be converted to and from a &lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt;&lt;/a&gt; without reallocating or moving the elements.</source>
          <target state="translated">&lt;code&gt;vec![x; n]&lt;/code&gt; , &lt;code&gt;vec![a, b, c, d]&lt;/code&gt; и &lt;a href=&quot;struct.vec#method.with_capacity&quot;&gt; &lt;code&gt;Vec::with_capacity(n)&lt;/code&gt; &lt;/a&gt; все создадут &lt;code&gt;Vec&lt;/code&gt; с точно запрошенной емкостью. Если &lt;a href=&quot;struct.vec#method.len&quot;&gt; &lt;code&gt;len&lt;/code&gt; &lt;/a&gt; &lt;code&gt;==&lt;/code&gt; &lt;a href=&quot;struct.vec#method.capacity&quot;&gt; &lt;code&gt;capacity&lt;/code&gt; &lt;/a&gt; (как в случае с макросом &lt;a href=&quot;../macro.vec&quot;&gt; &lt;code&gt;vec!&lt;/code&gt; &lt;/a&gt; ), &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; можно преобразовать в &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt; &lt;/a&gt; без перераспределения или перемещения элементов.</target>
        </trans-unit>
        <trans-unit id="2d08b44ca2e8c97b5ffc525b474768abf57a3776" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vis&lt;/code&gt; may only be followed by one of: &lt;code&gt;,&lt;/code&gt;, an identifier other than a non-raw &lt;code&gt;priv&lt;/code&gt;, any token that can begin a type, or a metavariable with a &lt;code&gt;ident&lt;/code&gt;, &lt;code&gt;ty&lt;/code&gt;, or &lt;code&gt;path&lt;/code&gt; fragment specifier.</source>
          <target state="translated">&lt;code&gt;vis&lt;/code&gt; может следовать только один из: &lt;code&gt;,&lt;/code&gt; , идентификатора, отличных от несырьевого &lt;code&gt;priv&lt;/code&gt; , любой маркер , который может начать тип, или метапеременный с &lt;code&gt;ident&lt;/code&gt; , &lt;code&gt;ty&lt;/code&gt; , или &lt;code&gt;path&lt;/code&gt; фрагментом спецификатором.</target>
        </trans-unit>
        <trans-unit id="f91c2c8cc6543bfd4e86094ff90e3a9ce854567d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vis&lt;/code&gt;: a possibly empty &lt;a href=&quot;visibility-and-privacy&quot;&gt;&lt;em&gt;Visibility&lt;/em&gt;&lt;/a&gt; qualifier</source>
          <target state="translated">&lt;code&gt;vis&lt;/code&gt; : возможно, пустой квалификатор &lt;a href=&quot;visibility-and-privacy&quot;&gt;&lt;em&gt;видимости&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76143324a8d362fe9906ff5b06906dd181169374" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warn(C)&lt;/code&gt; warns about violations of &lt;code&gt;C&lt;/code&gt; but continues compilation.</source>
          <target state="translated">&lt;code&gt;warn(C)&lt;/code&gt; предупреждает о нарушениях &lt;code&gt;C&lt;/code&gt; , но продолжает компиляцию.</target>
        </trans-unit>
        <trans-unit id="5ed18d103b24e9d9ef79833b0840427fc16e4165" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; ( &lt;em&gt;WhereClauseItem&lt;/em&gt;&lt;code&gt;,&lt;/code&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;WhereClauseItem&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; ( &lt;em&gt;WhereClauseItem &lt;/em&gt; &lt;code&gt;,&lt;/code&gt; ) &lt;sup&gt;* &lt;/sup&gt;&lt;em&gt;WhereClauseItem &lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="46fff36fad83b20aa97b4640a9571fd166f8cb3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; - denote clauses that constrain a type</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; - обозначают предложения, которые ограничивают тип</target>
        </trans-unit>
        <trans-unit id="3102f69845791898bf8e655b931f1ffabf0761b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; allows specifying constraints on lifetime and generic parameters. The &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0135-where.md&quot;&gt;RFC&lt;/a&gt; introducing &lt;code&gt;where&lt;/code&gt; contains detailed informations about the keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f46acdf03039d6eab58ab9bf5f85be207bed3429" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; can also be used for lifetimes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d816193f2acb3fd3cd256fc8d320db367a49a30d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; can also be used to express more complicated constraints that cannot be written with the &lt;code&gt;&amp;lt;T: Trait&amp;gt;&lt;/code&gt; syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513c3b3fe31065e43610214b11516877bfb788c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; can be used for constraints with traits:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e107977b55bce4f228fbc34edfc92b750ccde8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; clauses must use generic type parameters: it does not make sense to use them otherwise. An example causing this error:</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; предложениях должны использоваться параметры универсального типа: иначе их использовать не имеет смысла. Пример, вызывающий эту ошибку:</target>
        </trans-unit>
        <trans-unit id="fb0288bb2f89080d728053137b15834688f57035" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; is available anywhere generic and lifetime parameters are available, as can be seen with the &lt;a href=&quot;borrow/enum.cow&quot;&gt;&lt;code&gt;Cow&lt;/code&gt;&lt;/a&gt; type from the standard library:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a805febf23aefbedce95cfd9e535dfc8d88a2060" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while foo(&amp;amp;temp()) {bar();}&lt;/code&gt;. The temporary containing the return value from the call to &lt;code&gt;temp()&lt;/code&gt; is created in the loop conditional expression. Hence it will be freed at the end of the loop conditional expression; in this example before the call to &lt;code&gt;bar&lt;/code&gt; if the loop body is executed.</source>
          <target state="translated">&lt;code&gt;while foo(&amp;amp;temp()) {bar();}&lt;/code&gt; . В условном выражении цикла создается временный объект, содержащий возвращаемое значение из вызова &lt;code&gt;temp()&lt;/code&gt; . Следовательно, он будет освобожден в конце условного выражения цикла; в этом примере перед вызовом &lt;code&gt;bar&lt;/code&gt; если выполняется тело цикла.</target>
        </trans-unit>
        <trans-unit id="2198a7aaf735574c836bd8137d8e90a6901689d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while let&lt;/code&gt; expressions</source>
          <target state="translated">&lt;code&gt;while let&lt;/code&gt; выражения</target>
        </trans-unit>
        <trans-unit id="921bef7a3e65fdbb7f908d578534f5b7317761c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while&lt;/code&gt; - loop conditionally based on the result of an expression</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; - цикл, условно основанный на результате выражения</target>
        </trans-unit>
        <trans-unit id="eac35922cf4ee157cf944fe0305a56d8cd6378d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;&lt;em&gt;except struct expression&lt;/em&gt;&lt;/sub&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b4d0912cc7b8dba0ecbcf87816f452ee5f70dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;except struct expression&lt;/sub&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; &lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression,&lt;/em&gt;&lt;/a&gt;&lt;sub&gt; кроме выражения структуры &lt;/sub&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd717fa3b3f27dab2ddea68a0232e4da8c42e644" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while&lt;/code&gt;&lt;code&gt;let&lt;/code&gt;&lt;a href=&quot;match-expr&quot;&gt;&lt;em&gt;MatchArmPatterns&lt;/em&gt;&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;&lt;em&gt;except struct or lazy boolean operator expression&lt;/em&gt;&lt;/sub&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a119d968bd20b54a077326e844d3f9dfc3789f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while&lt;/code&gt;&lt;code&gt;let&lt;/code&gt;&lt;a href=&quot;match-expr&quot;&gt;&lt;em&gt;MatchArmPatterns&lt;/em&gt;&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;except struct expression&lt;/sub&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; &lt;code&gt;let&lt;/code&gt; &lt;a href=&quot;match-expr&quot;&gt;&lt;em&gt;MatchArmPatterns&lt;/em&gt;&lt;/a&gt; &lt;code&gt;=&lt;/code&gt; &lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sub&gt; кроме выражения структуры &lt;/sub&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9725c6db67ef47c4123c705d0b5bcff6ee2a61d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write&lt;/code&gt; does not drop the contents of &lt;code&gt;dst&lt;/code&gt;. This is safe, but it could leak allocations or resources, so care should be taken not to overwrite an object that should be dropped.</source>
          <target state="translated">&lt;code&gt;write&lt;/code&gt; не удаляет содержимое &lt;code&gt;dst&lt;/code&gt; . Это безопасно, но может привести к утечке распределений или ресурсов, поэтому следует проявлять осторожность, чтобы не перезаписать объект, который следует отбросить.</target>
        </trans-unit>
        <trans-unit id="ddc34afa23fa651f44486b9ec6afe1675fa1ae1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write_bytes&lt;/code&gt; is similar to C's &lt;a href=&quot;https://en.cppreference.com/w/c/string/byte/memset&quot;&gt;&lt;code&gt;memset&lt;/code&gt;&lt;/a&gt;, but sets &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes to &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;write_bytes&lt;/code&gt; аналогичен &lt;a href=&quot;https://en.cppreference.com/w/c/string/byte/memset&quot;&gt; &lt;code&gt;memset&lt;/code&gt; &lt;/a&gt; C , но устанавливает для &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes значение &lt;code&gt;val&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="054a9108334d065897c67d31900457afaf2eff38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write_unaligned&lt;/code&gt; does not drop the contents of &lt;code&gt;dst&lt;/code&gt;. This is safe, but it could leak allocations or resources, so care should be taken not to overwrite an object that should be dropped.</source>
          <target state="translated">&lt;code&gt;write_unaligned&lt;/code&gt; не удаляет содержимое &lt;code&gt;dst&lt;/code&gt; . Это безопасно, но может привести к утечке распределений или ресурсов, поэтому следует проявлять осторожность, чтобы не перезаписать объект, который следует отбросить.</target>
        </trans-unit>
        <trans-unit id="0cb4125bd17c272925aea82766043022e2093246" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;write_volatile&lt;/code&gt; does not drop the contents of &lt;code&gt;dst&lt;/code&gt;. This is safe, but it could leak allocations or resources, so care should be taken not to overwrite an object that should be dropped.</source>
          <target state="translated">&lt;code&gt;write_volatile&lt;/code&gt; не удаляет содержимое &lt;code&gt;dst&lt;/code&gt; . Это безопасно, но может привести к утечке распределений или ресурсов, поэтому следует проявлять осторожность, чтобы не перезаписать объект, который следует отбросить.</target>
        </trans-unit>
        <trans-unit id="8276083d136c27da43c9907e5cdba7fc594950a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;gt;= 0&lt;/code&gt;: &lt;code&gt;arctan(y/x)&lt;/code&gt; -&amp;gt; &lt;code&gt;[-pi/2, pi/2]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x &amp;gt;= 0&lt;/code&gt; : &lt;code&gt;arctan(y/x)&lt;/code&gt; -&amp;gt; &lt;code&gt;[-pi/2, pi/2]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0b5bbf457f12b8925eeebe054ee2e7627ea0aa6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x = 0&lt;/code&gt;, &lt;code&gt;y = 0&lt;/code&gt;: &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x = 0&lt;/code&gt; , &lt;code&gt;y = 0&lt;/code&gt; : &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cac4e5a63b3dddd8eb480045393d001706c0c924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x86&lt;/code&gt; or &lt;code&gt;x86_64&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x86&lt;/code&gt; или &lt;code&gt;x86_64&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b00e0b8945f50a14fa61d6e9a2b0332a4c6a1dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.lowerhex&quot;&gt;&lt;code&gt;LowerHex&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.lowerhex&quot;&gt; &lt;code&gt;LowerHex&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="025160341e85be696bd147a9a4541ba42341e742" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; formatting.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; форматирование.</target>
        </trans-unit>
        <trans-unit id="e6a735703e80ddf3d43a9cb53dbbf35cd6648332" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; , в &lt;code&gt;while&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa6059b34937a8c76b7e69ee691d0f5c18fd74f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x?&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt; with lower-case hexadecimal integers</source>
          <target state="translated">&lt;code&gt;x?&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.debug&quot;&gt; &lt;code&gt;Debug&lt;/code&gt; &lt;/a&gt; с использованием строчных шестнадцатеричных целых чисел</target>
        </trans-unit>
        <trans-unit id="c010c672c012cef8144a3c2ea0d4da05d2e7fa96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y &amp;gt;= 0&lt;/code&gt;: &lt;code&gt;arctan(y/x) + pi&lt;/code&gt; -&amp;gt; &lt;code&gt;(pi/2, pi]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y &amp;gt;= 0&lt;/code&gt; : &lt;code&gt;arctan(y/x) + pi&lt;/code&gt; -&amp;gt; &lt;code&gt;(pi/2, pi]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9913280959bcf6536763f373a06fe85b3b866062" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y &amp;lt; 0&lt;/code&gt;: &lt;code&gt;arctan(y/x) - pi&lt;/code&gt; -&amp;gt; &lt;code&gt;(-pi, -pi/2)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;y &amp;lt; 0&lt;/code&gt; : &lt;code&gt;arctan(y/x) - pi&lt;/code&gt; -&amp;gt; &lt;code&gt;(-pi, -pi/2)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc3dc24bbc59a13785c638cfa29eb558067b929c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zip()&lt;/code&gt; is often used to zip an infinite iterator to a finite one. This works because the finite iterator will eventually return &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, ending the zipper. Zipping with &lt;code&gt;(0..)&lt;/code&gt; can look a lot like &lt;a href=&quot;trait.iterator#method.enumerate&quot;&gt;&lt;code&gt;enumerate&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;zip()&lt;/code&gt; часто используется для привязки бесконечного итератора к конечному. Это работает, потому что конечный итератор в конечном итоге вернет &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt; , завершив застежку-молнию. Архивирование с помощью &lt;code&gt;(0..)&lt;/code&gt; может выглядеть как &lt;a href=&quot;trait.iterator#method.enumerate&quot;&gt; &lt;code&gt;enumerate&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="1ae414c709e33c3350c16c90713b290b063a371c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zip()&lt;/code&gt; returns a new iterator that will iterate over two other iterators, returning a tuple where the first element comes from the first iterator, and the second element comes from the second iterator.</source>
          <target state="translated">&lt;code&gt;zip()&lt;/code&gt; возвращает новый итератор, который будет перебирать два других итератора, возвращая кортеж, в котором первый элемент поступает от первого итератора, а второй элемент - от второго итератора.</target>
        </trans-unit>
        <trans-unit id="c747b39d424c4c127d32ba50d56d1da6309879fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&lt;/code&gt;&lt;a href=&quot;structs&quot;&gt;&lt;em&gt;StructFields&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{&lt;/code&gt;&lt;a href=&quot;structs&quot;&gt;&lt;em&gt;StructFields&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d32b0513d1b98e371087b4eb163c3d26f2ab32e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&lt;/code&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{&lt;/code&gt;&lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ed79972f6f7f79a47068e04e16add33aff259f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;|&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;|&lt;/code&gt;&lt;a href=&quot;../patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; )&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;|&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt;&lt;a href=&quot;../patterns&quot;&gt;&lt;em&gt;Выкройка&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;|&lt;/code&gt; &lt;a href=&quot;../patterns&quot;&gt;&lt;em&gt;Выкройка&lt;/em&gt;&lt;/a&gt; ) &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3e9e4a1d79413f2c783c3985129cfcd9ace14a8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~&lt;/code&gt;&lt;a href=&quot;expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;~&lt;/code&gt;&lt;a href=&quot;expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc377ffbf59e15917ded85798b6434d0c79d5fe0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.array&quot;&gt;See also the array primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.array&quot;&gt;См. Также примитивный тип массива&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5afe898a7ddade3301b919bc7b98efe0e6058fdb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.f32&quot;&gt;See also the &lt;code&gt;f32&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.f32&quot;&gt;См. Также примитивный тип &lt;code&gt;f32&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9bc08298e33e2ecdf0888a6a61ec82422f09c61a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.f64&quot;&gt;See also the &lt;code&gt;f64&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.f64&quot;&gt;См. Также примитивный тип &lt;code&gt;f64&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0d0a06c6bcf39135bd01b7dd5810efffad07bfba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.i128&quot;&gt;See also the &lt;code&gt;i128&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.i128&quot;&gt;См. Также примитивный тип &lt;code&gt;i128&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e46d7c1a98001ada23aacc00ad0acfcec133f38e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.i16&quot;&gt;See also the &lt;code&gt;i16&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.i16&quot;&gt;См. Также примитивный тип &lt;code&gt;i16&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="93b00deff3e36bdc53fed2a9cac7284ea7b0c778" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.i32&quot;&gt;See also the &lt;code&gt;i32&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.i32&quot;&gt;См. Также примитивный тип &lt;code&gt;i32&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="156e0a557d174e90ddf6cf3583116c84a9dee15c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.i64&quot;&gt;See also the &lt;code&gt;i64&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.i64&quot;&gt;См. Также примитивный тип &lt;code&gt;i64&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fc160ff8ffee74ff77604c7ce32bf62e1fd258b7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.i8&quot;&gt;See also the &lt;code&gt;i8&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.i8&quot;&gt;См. Также примитивный тип &lt;code&gt;i8&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d16336f499199cbfb74f9b6f69e3d9e23882b4b8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.isize&quot;&gt;See also the &lt;code&gt;isize&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.isize&quot;&gt;См. Также примитивный тип &lt;code&gt;isize&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e0cb4b94b9c8c01463e93bd16e042cf95ee2c64e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.pointer&quot;&gt;See also the pointer primitive types&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.pointer&quot;&gt;См. Также примитивные типы указателя&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d4d3d757af0c56fd5735b0d5301a2da0f9ee1ef8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;See also the slice primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;См. Также тип примитива среза&lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="012dc525e54452ca9e5513daa2b317478262a8a4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.str&quot;&gt;See also the &lt;code&gt;str&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.str&quot;&gt;См. Также примитивный тип &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="afff95f99c68cafc1f9bbcaac001052edd8b1e40" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.u128&quot;&gt;See also the &lt;code&gt;u128&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.u128&quot;&gt;См. Также примитивный тип &lt;code&gt;u128&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d7f056041f87bf11e5967e21149325855cafcbf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.u16&quot;&gt;See also the &lt;code&gt;u16&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.u16&quot;&gt;См. Также примитивный тип &lt;code&gt;u16&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="641d2f36ab10c6cd94d2d3af160150ae5d6727f4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.u32&quot;&gt;See also the &lt;code&gt;u32&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.u32&quot;&gt;См. Также примитивный тип &lt;code&gt;u32&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="441e0403b4acb7dc1b791d3f82a64c9dc1aac5b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.u64&quot;&gt;See also the &lt;code&gt;u64&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.u64&quot;&gt;См. Также примитивный тип &lt;code&gt;u64&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d8f6f83eb8a6b4c59043b83e50c484d60b96451f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;See also the &lt;code&gt;u8&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;См. Также примитивный тип &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="21c2215b2e7378f4350b9cbb17bd270077b8f7d9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;See also the &lt;code&gt;usize&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;../primitive.usize&quot;&gt;См. Также примитивный тип &lt;code&gt;usize&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="23cff6fa47e9e9a5dd926a95bc4c16992d40e5d6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;f32/consts/index&quot;&gt;See also the &lt;code&gt;std::f32::consts&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3755d956ff02149ee56f84f936c4a79c5e59a075" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;f32/index&quot;&gt;See also the &lt;code&gt;std::f32&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;f32/index&quot;&gt;См. Также модуль &lt;code&gt;std::f32&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac6e19d622994546d7ba48a0f42be45d93daec05" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;f64/consts/index&quot;&gt;See also the &lt;code&gt;std::f64::consts&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3247c982f613de71992993ea86d058c3974dc4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;f64/index&quot;&gt;See also the &lt;code&gt;std::f64&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;f64/index&quot;&gt;См. Также модуль &lt;code&gt;std::f64&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d9c0016ff76a5a5f74edfeb3e6fcfad7711c5fca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.f32.html&quot;&gt;See also the &lt;code&gt;f32&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb5c674b321bfd9fffc8a9ab1ff79bd4c379cf6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.f64.html&quot;&gt;See also the &lt;code&gt;f64&lt;/code&gt; primitive type&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf3d15d8745c67fb84d8994eaddf9d1e04c5e0d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;i128/index&quot;&gt;See also the &lt;code&gt;std::i128&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;i128/index&quot;&gt;См. Также модуль &lt;code&gt;std::i128&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be30ad00b808390fe80fd2391b71bb056a65227e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;i16/index&quot;&gt;See also the &lt;code&gt;std::i16&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;i16/index&quot;&gt;См. Также модуль &lt;code&gt;std::i16&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="188b02eb10822e25f1f315068f6a8f2057abb225" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;i32/index&quot;&gt;See also the &lt;code&gt;std::i32&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;i32/index&quot;&gt;См. Также модуль &lt;code&gt;std::i32&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ceac7726866419e153d0d3c52994db5fe0ef8e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;i64/index&quot;&gt;See also the &lt;code&gt;std::i64&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;i64/index&quot;&gt;См. Также модуль &lt;code&gt;std::i64&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7691514b6d93900c7943a77ca07f2b0b9ba7da66" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;i8/index&quot;&gt;See also the &lt;code&gt;std::i8&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;i8/index&quot;&gt;См. Также модуль &lt;code&gt;std::i8&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="183e6c4e2632c343159b5362cf5789fcf8d616e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;isize/index&quot;&gt;See also the &lt;code&gt;std::isize&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;isize/index&quot;&gt;См. Также модуль &lt;code&gt;std::isize&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="52008a607ee91e4a6ca2a87dfc01495af8b05bad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;ptr/index&quot;&gt;See also the &lt;code&gt;std::ptr&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;ptr/index&quot;&gt;См. Также модуль &lt;code&gt;std::ptr&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b446fb280d5ecf908446abb0aaa3bfc2a2b109a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;slice/index&quot;&gt;See also the &lt;code&gt;std::slice&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;slice/index&quot;&gt;См. Также модуль &lt;code&gt;std::slice&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9589ef92f30f110cfa700b0f3b19b545732f4789" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;str/index&quot;&gt;See also the &lt;code&gt;std::str&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;str/index&quot;&gt;См. Также модуль &lt;code&gt;std::str&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="97669e507582d88ff0ecc27318b816708a20d07a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;u128/index&quot;&gt;See also the &lt;code&gt;std::u128&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;u128/index&quot;&gt;См. Также модуль &lt;code&gt;std::u128&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f74a6f3e8587d7a4384628b6eb04ac060fa5f73" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;u16/index&quot;&gt;See also the &lt;code&gt;std::u16&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;u16/index&quot;&gt;См. Также модуль &lt;code&gt;std::u16&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ecd6227400d1feb039e4d2713cbd95f6fe31597" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;u32/index&quot;&gt;See also the &lt;code&gt;std::u32&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;u32/index&quot;&gt;См. Также модуль &lt;code&gt;std::u32&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5b3976137d48100bdcd7648dfb2518526966187b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;u64/index&quot;&gt;See also the &lt;code&gt;std::u64&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;u64/index&quot;&gt;См. Также модуль &lt;code&gt;std::u64&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b14a4674db1787eb1f4f3f6326efac88545cfae0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;u8/index&quot;&gt;See also the &lt;code&gt;std::u8&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;u8/index&quot;&gt;См. Также модуль &lt;code&gt;std::u8&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9e26dfc27379e83ee98ee0278a32aa28cd01c29f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;usize/index&quot;&gt;See also the &lt;code&gt;std::usize&lt;/code&gt; module&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;usize/index&quot;&gt;См. Также модуль &lt;code&gt;std::usize&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a3eefcded9201133af35fa70d9f2865840a2fffa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/em&gt;: &lt;code&gt;#[inline]&lt;/code&gt; in every form is a hint, with no &lt;em&gt;requirements&lt;/em&gt; on the language to place a copy of the attributed function in the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f3c9e23aca0ccbd48ac3f286df211fff76d935" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/em&gt;: The &lt;code&gt;rustc&lt;/code&gt; compiler automatically inlines functions based on internal heuristics. Incorrectly inlining functions can make the program slower, so this attribute should be used with care.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637c974bae6335515daaba4b0425cbe32f775e3a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;Warning:&lt;/strong&gt;&lt;/em&gt; Dereferencing an unaligned pointer is &lt;a href=&quot;behavior-considered-undefined&quot;&gt;undefined behavior&lt;/a&gt; and it is possible to &lt;a href=&quot;https://github.com/rust-lang/rust/issues/27060&quot;&gt;safely create unaligned pointers to &lt;code&gt;packed&lt;/code&gt; fields&lt;/a&gt;. Like all ways to create undefined behavior in safe Rust, this is a bug.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1ae6d5c7cdf4e2d0b23927a13af7f461df3c3e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;Warning:&lt;/strong&gt;&lt;/em&gt; For &lt;a href=&quot;../types/trait-object&quot;&gt;trait objects&lt;/a&gt;, if there is an inherent method of the same name as a trait method, it will give a compiler error when trying to call the method in a method call expression. Instead, you can call the method using &lt;a href=&quot;call-expr#disambiguating-function-calls&quot;&gt;disambiguating function call syntax&lt;/a&gt;, in which case it calls the trait method, not the inherent method. There is no way to call the inherent method. Just don't define inherent methods on trait objects with the same name a trait method and you'll be fine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeed6b580b7499dc92bb8235e947d69b2b3e3ccb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;Warning:&lt;/strong&gt;&lt;/em&gt; The following list is not exhaustive. There is no formal model of Rust's semantics for what is and is not allowed in unsafe code, so there may be more behavior considered unsafe. The following list is just what we know for sure is undefined behavior. Please read the &lt;a href=&quot;https://doc.rust-lang.org/nomicon/index.html&quot;&gt;Rustonomicon&lt;/a&gt; before writing unsafe code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171845cf214853b0c7d13267275f2e59cc8fd49d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A &lt;code&gt;\r&lt;/code&gt; not followed by a &lt;code&gt;\n&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;За &lt;code&gt;\r&lt;/code&gt; не следует &lt;code&gt;\n&lt;/code&gt; &lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="896fb33c45a7e28daf5fae1c1416751fa7aa0637" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Abi&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Аби&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="7af965bf10928c2c6e2403bc2ce7cb98a024f8ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ArithmeticOrLogicalExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ArithmeticOrLogicalExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8850228ae2540294c04b59c901a233548818abeb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ArrayElements&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ArrayElements&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="18b5944dcf636a5c91ca30d2b3c07609b0f80acf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ArrayExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ArrayExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="86753a06ca9f7ba368a8897e80566a8268300ea4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ArrayType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ArrayType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="7b8fdd377339508be889cf902ef8a135a53cd2a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AsClause&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;AsClause&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="b9c4b414bb510492d52d2adbfa0dd809e951b767" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AssignmentExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Выражение присвоения&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="a1060e1ba4896660ea37b8ce63c1059a2355a5cd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Associated Items&lt;/em&gt; are the items declared in &lt;a href=&quot;traits&quot;&gt;traits&lt;/a&gt; or defined in &lt;a href=&quot;implementations&quot;&gt;implementations&lt;/a&gt;. They are called this because they are defined on an associate type &amp;mdash; the type in the implementation. They are a subset of the kinds of items you can declare in a module. Specifically, there are &lt;a href=&quot;#associated-functions-and-methods&quot;&gt;associated functions&lt;/a&gt; (including methods), &lt;a href=&quot;#associated-types&quot;&gt;associated types&lt;/a&gt;, and &lt;a href=&quot;#associated-constants&quot;&gt;associated constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2daea7f8aeef67fba1c92d781f3c640fb18296cc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Associated Items&lt;/em&gt; are the items declared in &lt;a href=&quot;traits&quot;&gt;traits&lt;/a&gt; or defined in &lt;a href=&quot;implementations&quot;&gt;implementations&lt;/a&gt;. They are called this because they are defined on an associate type &amp;mdash; the type in the implementation. They are a subset of the kinds of items you can declare in a module. Specifically, there are &lt;a href=&quot;associated-items#associated-functions-and-methods&quot;&gt;associated functions&lt;/a&gt; (including methods), &lt;a href=&quot;associated-items#associated-types&quot;&gt;associated types&lt;/a&gt;, and &lt;a href=&quot;associated-items#associated-constants&quot;&gt;associated constants&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Связанные элементы&lt;/em&gt; - это элементы, объявленные в &lt;a href=&quot;traits&quot;&gt;трейтах&lt;/a&gt; или определенные в &lt;a href=&quot;implementations&quot;&gt;реализациях&lt;/a&gt; . Они называются так, потому что они определены для ассоциированного типа - типа в реализации. Они представляют собой подмножество типов элементов, которые вы можете объявить в модуле. В частности, есть &lt;a href=&quot;associated-items#associated-functions-and-methods&quot;&gt;связанные функции&lt;/a&gt; (включая методы), &lt;a href=&quot;associated-items#associated-types&quot;&gt;связанные типы&lt;/a&gt; и &lt;a href=&quot;associated-items#associated-constants&quot;&gt;связанные константы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ac109c8aaa6a1b884c029e2991539365303f4a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Associated constants&lt;/em&gt; are &lt;a href=&quot;constant-items&quot;&gt;constants&lt;/a&gt; associated with a type.</source>
          <target state="translated">&lt;em&gt;Связанные константы&lt;/em&gt; - это &lt;a href=&quot;constant-items&quot;&gt;константы,&lt;/a&gt; связанные с типом.</target>
        </trans-unit>
        <trans-unit id="27a22d074f123889d3225fe003a61829bf9e9847" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Associated functions&lt;/em&gt; are &lt;a href=&quot;functions&quot;&gt;functions&lt;/a&gt; associated with a type.</source>
          <target state="translated">&lt;em&gt;Связанные функции&lt;/em&gt; - это &lt;a href=&quot;functions&quot;&gt;функции,&lt;/a&gt; связанные с типом.</target>
        </trans-unit>
        <trans-unit id="6a668d2d58269c25414ad3ff72866e24064ff941" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Associated types&lt;/em&gt; are &lt;a href=&quot;type-aliases&quot;&gt;type aliases&lt;/a&gt; associated with another type. Associated types cannot be defined in &lt;a href=&quot;implementations#inherent-implementations&quot;&gt;inherent implementations&lt;/a&gt; nor can they be given a default implementation in traits.</source>
          <target state="translated">&lt;em&gt;Связанные типы&lt;/em&gt; - это &lt;a href=&quot;type-aliases&quot;&gt;псевдонимы &lt;/a&gt;&lt;em&gt;типов&lt;/em&gt; , связанные с другим типом. Связанные типы не могут быть определены в &lt;a href=&quot;implementations#inherent-implementations&quot;&gt;собственных реализациях,&lt;/a&gt; и им нельзя дать реализацию по умолчанию в трейтах.</target>
        </trans-unit>
        <trans-unit id="5b66769226f7c43473e0e95bd7bfc4ced1c33421" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Associated types&lt;/em&gt; connect a type placeholder with a trait such that the trait method definitions can use these placeholder types in their signatures. The implementor of a trait will specify the concrete type to be used in this type&amp;rsquo;s place for the particular implementation. That way, we can define a trait that uses some types without needing to know exactly what those types are until the trait is implemented.</source>
          <target state="translated">&lt;em&gt;Связанные типы&lt;/em&gt; связывают заполнитель типа с признаком, так что определения методов признака могут использовать эти типы заполнителей в своих подписях. Разработчик трейта укажет конкретный тип, который будет использоваться вместо этого типа для конкретной реализации. Таким образом, мы можем определить трейт, использующий некоторые типы, без необходимости точно знать, что это за типы, пока трейт не будет реализован.</target>
        </trans-unit>
        <trans-unit id="30dd757d0b1cc9dedc8a2aae62c5497245a5f2c4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AsyncBlockExpression&lt;/em&gt; :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5409326301ea6c9670042b678a146a8590c2a69" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AsyncConstQualifiers&lt;/em&gt; :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a112d460e50fceafe7508669859d6170f108420e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AsyncConstQualifiers&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;unsafe&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt; (&lt;code&gt;extern&lt;/code&gt;&lt;em&gt;Abi&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf2912c53086da65e70188ef9bf7b9fc7a20c2e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Attr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Attr&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f838c004e01c1eeaed35c161adee827f056b1dfa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AttrInput&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;AttrInput&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="6d22677ee607ab5d87346790036a43373e395d1f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Attribute macros&lt;/em&gt; define new &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt; which can be attached to &lt;a href=&quot;items&quot;&gt;items&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Макросы атрибутов&lt;/em&gt; определяют новые &lt;a href=&quot;attributes&quot;&gt;атрибуты,&lt;/a&gt; которые могут быть прикреплены к &lt;a href=&quot;items&quot;&gt;элементам&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f43f7be389bb79d0ddabb2d14ccf8d9bcf119232" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Attribute macros&lt;/em&gt; define new &lt;a href=&quot;attributes&quot;&gt;outer attributes&lt;/a&gt; which can be attached to &lt;a href=&quot;items&quot;&gt;items&lt;/a&gt;, including items in &lt;a href=&quot;items/external-blocks&quot;&gt;&lt;code&gt;extern&lt;/code&gt; blocks&lt;/a&gt;, inherent and trait &lt;a href=&quot;items/implementations&quot;&gt;implementations&lt;/a&gt;, and &lt;a href=&quot;items/traits&quot;&gt;trait definitions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6dedc36ebc439d9b064625b39cb7a672f2e7bc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AwaitExpression&lt;/em&gt; :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0dc24b964f44bd5547f633daf6cbf9d76b638e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BareFunctionReturnType&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;BareFunctionReturnType&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="0a33b45f4dc92b88f285a44ace162de9c75018a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BareFunctionType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;BareFunctionType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="08e49cdb20a45fa41c61e0d32fb166ba3c7463a0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BlockCommentOrDoc&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;BlockCommentOrDoc&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="cc638e7cdced8011de5e0eb90479bc2e8b83b608" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BlockExpression&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;BlockExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6441cdd8ad7428fa0bb45b030365eb53981fcbcd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BlockExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;BlockExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="bf3f4642938316db2257c5eaa0402f8005ef001a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BorrowExpression&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;BorrowExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="86343c9272ae9ae53dc6f5e0f2704ab99eab5baa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BorrowExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;BorrowExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="af1528833b5928011eebcdd68a634088db06a41b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BreakExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;BreakExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="84eee52c54b688323da4dea745c5529909707675" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CallExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;CallExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f85ca38240bd386d80ee61a93ce3c4f89a83c0b1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CallParams&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;CallParams&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="70306b863cdb9fc80d1150ee1893c4b854c286a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CfgAttrAttribute&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;CfgAttrAttribute&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="a7459f3fb67f3c84ad0db3116391795340975d38" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CfgAttrs&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;CfgAttrs&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="d89db728f2d366b1b26c0701467c8f598308edf7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ClosureExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ClosureExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="57b7aa70faf777ea546a54a39ebe1db8b7da71d8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ClosureParam&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;ClosureParam&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;ClosureParam&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;ClosureParam&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="934a15c08190ec04166bdec8c7630ec61065a12f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ClosureParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ClosureParam&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="91debf9a8dc0617494d29a7ae3c60c0497dcb73e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ClosureParameters&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ClosureParameters&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="6179a001625f5bc7462572316bf4b62222738aba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Closures&lt;/em&gt;, a function-like construct you can store in a variable</source>
          <target state="translated">&lt;em&gt;Замыкания&lt;/em&gt; , функционально-подобная конструкция, которую можно хранить в переменной.</target>
        </trans-unit>
        <trans-unit id="8d4bde915497a96a99a619eb31908e6f6a25f66f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ComparisonExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ComparisonExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="2987b6f39aba0488f464403134153b55e5806493" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Compound types&lt;/em&gt; can group multiple values into one type. Rust has two primitive compound types: tuples and arrays.</source>
          <target state="translated">&lt;em&gt;Составные типы&lt;/em&gt; могут группировать несколько значений в один тип. В Rust есть два примитивных составных типа: кортежи и массивы.</target>
        </trans-unit>
        <trans-unit id="60e102c6b06e65ff9f5d576023fdf32a474f2082" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CompoundAssignmentExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;CompoundAssignmentExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="bb646db9e45009650f92db559a38f16a7f8e2ef8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Conditionally compiled source code&lt;/em&gt; is source code that may or may not be considered a part of the source code depending on certain conditions.  Source code can be conditionally compiled using &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt;, &lt;a href=&quot;conditional-compilation#the-cfg-attribute&quot;&gt;&lt;code&gt;cfg&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;conditional-compilation#the-cfg_attr-attribute&quot;&gt;&lt;code&gt;cfg_attr&lt;/code&gt;&lt;/a&gt;, and the built-in &lt;a href=&quot;conditional-compilation#the-cfg-macro&quot;&gt;&lt;code&gt;cfg&lt;/code&gt; macro&lt;/a&gt;. These conditions are based on the target architecture of the compiled crate, arbitrary values passed to the compiler, and a few other miscellaneous things further described below in detail.</source>
          <target state="translated">&lt;em&gt;Условно скомпилированный исходный код&lt;/em&gt; - это исходный код, который может или не может считаться частью исходного кода в зависимости от определенных условий. Исходный код можно условно скомпилировать с помощью &lt;a href=&quot;attributes&quot;&gt;атрибутов&lt;/a&gt; , &lt;a href=&quot;conditional-compilation#the-cfg-attribute&quot;&gt; &lt;code&gt;cfg&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;conditional-compilation#the-cfg_attr-attribute&quot;&gt; &lt;code&gt;cfg_attr&lt;/code&gt; &lt;/a&gt; , а также встроенного &lt;a href=&quot;conditional-compilation#the-cfg-macro&quot;&gt;макроса &lt;/a&gt; &lt;code&gt;cfg&lt;/code&gt; . Эти условия основаны на целевой архитектуре скомпилированного ящика, произвольных значениях, переданных компилятору, и некоторых других вещах, более подробно описанных ниже.</target>
        </trans-unit>
        <trans-unit id="551566af7fc2c8a4556ccf759cebb67d5726c105" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Conditionally compiled source code&lt;/em&gt; is source code that may or may not be considered a part of the source code depending on certain conditions.  Source code can be conditionally compiled using the &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt;&lt;a href=&quot;#the-cfg-attribute&quot;&gt;&lt;code&gt;cfg&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#the-cfg_attr-attribute&quot;&gt;&lt;code&gt;cfg_attr&lt;/code&gt;&lt;/a&gt; and the built-in &lt;a href=&quot;#the-cfg-macro&quot;&gt;&lt;code&gt;cfg&lt;/code&gt; macro&lt;/a&gt;. These conditions are based on the target architecture of the compiled crate, arbitrary values passed to the compiler, and a few other miscellaneous things further described below in detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804879068ad65b1104b5c96ff86fc5dcadf047e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Configuration options&lt;/em&gt; are names and key-value pairs that are either set or unset. Names are written as a single identifier such as, for example, &lt;code&gt;unix&lt;/code&gt;. Key-value pairs are written as an identifier, &lt;code&gt;=&lt;/code&gt;, and then a string. For example, &lt;code&gt;target_arch = &quot;x86_64&quot;&lt;/code&gt; is a configuration option.</source>
          <target state="translated">&lt;em&gt;Параметры конфигурации&lt;/em&gt; - это имена и пары ключ-значение, которые либо установлены, либо не установлены. Имена записываются как единый идентификатор, например, &lt;code&gt;unix&lt;/code&gt; . Пары ключ-значение записываются в виде идентификатора &lt;code&gt;=&lt;/code&gt; , а затем строки. Например, &lt;code&gt;target_arch = &quot;x86_64&quot;&lt;/code&gt; - это вариант конфигурации.</target>
        </trans-unit>
        <trans-unit id="5fd8ccd8ef14d64b54dcb73071bdd435858764ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationAll&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ConfigurationAll&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2a3f3490554aae2a1d05d22716ecbc21e7a0008d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationAny&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ConfigurationAny&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="40baa237b3e5d609aa99144c9113a95044546f0e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationNot&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ConfigurationNot&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7092727ee4218d2aa4c23ace8b1ff8f8643c46ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationOption&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ConfigurationOption&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d624df479df18156c3af914bf1922ad9f4caa8fd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationOption&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Вариант конфигурации&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="5ad4964f057a83107f2eb1c72ee64caf3eacf36b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationPredicate&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;ConfigurationPredicate&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;ConfigurationPredicate&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f1296f5daec2c617bdc3dd3f2f359fb7f679e202" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationPredicate&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ConfigurationPredicate&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="cb0936b7a69327261de8e0b0c03f3d56f0d00fd1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConfigurationPredicateList&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ConfigurationPredicateList&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="012cc76248fe9505eddab45a5035f8eae8d9318f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ConstantItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ConstantItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="9531d18a1e12260e962aa3594378fd4dee19a8b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ContinueExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ПродолжитьВыражение&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="64cb78e1be5024c4314dec53c07cc0240fe7e8f7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Crate&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Ящик&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="9e27cd4ebba2623a3adbf84e0fc68a0aafe5b354" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CrateRef&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;CrateRef&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="09a4c07aae2d970ef44b5c5ec76a82f1d3f31ed5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;DelimTokenTree&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;DelimTokenTree&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9c6909aef579ed884ef08c1950f045984b47eaa5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;DelimTokenTree&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;DelimTokenTree&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="cb711f6d1258a2d9fde66b31f4e41b3ff4f4d5e1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Deref coercion&lt;/em&gt; is a convenience that Rust performs on arguments to functions and methods. Deref coercion converts a reference to a type that implements &lt;code&gt;Deref&lt;/code&gt; into a reference to a type that &lt;code&gt;Deref&lt;/code&gt; can convert the original type into. Deref coercion happens automatically when we pass a reference to a particular type&amp;rsquo;s value as an argument to a function or method that doesn&amp;rsquo;t match the parameter type in the function or method definition. A sequence of calls to the &lt;code&gt;deref&lt;/code&gt; method converts the type we provided into the type the parameter needs.</source>
          <target state="translated">&lt;em&gt;Принуждение Deref&lt;/em&gt; - это удобство, которое Rust выполняет с аргументами функций и методов. Приведение Deref преобразует ссылку на тип, реализующий &lt;code&gt;Deref&lt;/code&gt; , в ссылку на тип, в который &lt;code&gt;Deref&lt;/code&gt; может преобразовать исходный тип. Принуждение deref происходит автоматически, когда мы передаем ссылку на значение определенного типа в качестве аргумента функции или метода, который не соответствует типу параметра в определении функции или метода. Последовательность вызовов метода &lt;code&gt;deref&lt;/code&gt; преобразует предоставленный нами тип в тип, который необходим параметру.</target>
        </trans-unit>
        <trans-unit id="00b39e9b2b897da2cf3505d90379e6f590357a64" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Deref coercion&lt;/em&gt; is a convenience that Rust performs on arguments to functions and methods. Deref coercion works only on types that implement the &lt;code&gt;Deref&lt;/code&gt; trait. Deref coercion converts such a type into a reference to another type. For example, deref coercion can convert &lt;code&gt;&amp;amp;String&lt;/code&gt; to &lt;code&gt;&amp;amp;str&lt;/code&gt; because &lt;code&gt;String&lt;/code&gt; implements the &lt;code&gt;Deref&lt;/code&gt; trait such that it returns &lt;code&gt;str&lt;/code&gt;. Deref coercion happens automatically when we pass a reference to a particular type&amp;rsquo;s value as an argument to a function or method that doesn&amp;rsquo;t match the parameter type in the function or method definition. A sequence of calls to the &lt;code&gt;deref&lt;/code&gt; method converts the type we provided into the type the parameter needs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37eed1edd1a8cde28e85b8c1ad70682884b34cfc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;DereferenceExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Выражение разыменования&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="93a17345f347f73760b0ad5f130e9e9151400ea2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Derive macros&lt;/em&gt; define new inputs for the &lt;a href=&quot;attributes/derive&quot;&gt;&lt;code&gt;derive&lt;/code&gt; attribute&lt;/a&gt;. These macros can create new &lt;a href=&quot;items&quot;&gt;items&lt;/a&gt; given the token stream of a &lt;a href=&quot;items/structs&quot;&gt;struct&lt;/a&gt;, &lt;a href=&quot;items/enumerations&quot;&gt;enum&lt;/a&gt;, or &lt;a href=&quot;items/unions&quot;&gt;union&lt;/a&gt;. They can also define &lt;a href=&quot;#derive-macro-helper-attributes&quot;&gt;derive macro helper attributes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f75031d02347fc664901b1f2bf13fed47fb373" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Derive macros&lt;/em&gt; define new inputs for the &lt;a href=&quot;attributes/derive&quot;&gt;&lt;code&gt;derive&lt;/code&gt; attribute&lt;/a&gt;. These macros can create new &lt;a href=&quot;items&quot;&gt;items&lt;/a&gt; given the token stream of a &lt;a href=&quot;items/structs&quot;&gt;struct&lt;/a&gt;, &lt;a href=&quot;items/enumerations&quot;&gt;enum&lt;/a&gt;, or &lt;a href=&quot;items/unions&quot;&gt;union&lt;/a&gt;. They can also define &lt;a href=&quot;procedural-macros#derive-macro-helper-attributes&quot;&gt;derive macro helper attributes&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Макросы &lt;/em&gt;&lt;a href=&quot;attributes/derive&quot;&gt; &lt;code&gt;derive&lt;/code&gt; &lt;/a&gt; определяют новые входные данные для атрибута извлечения . Эти макросы могут создавать новые &lt;a href=&quot;items&quot;&gt;элементы с&lt;/a&gt; учетом потока токенов &lt;a href=&quot;items/structs&quot;&gt;структуры&lt;/a&gt; , &lt;a href=&quot;items/enumerations&quot;&gt;перечисления&lt;/a&gt; или &lt;a href=&quot;items/unions&quot;&gt;объединения&lt;/a&gt; . Они также могут определять &lt;a href=&quot;procedural-macros#derive-macro-helper-attributes&quot;&gt;вспомогательные атрибуты макроса&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="119a91c56447c43f1658acfafd5f4d75a39e168e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprField&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;EnumExprField&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;EnumExprField&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;EnumExprField&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="af63d6116b0ffd79b25d33ee20cdc2c652857fec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprField&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumExprField&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="1f26b60ccfa5cdd6e5115153df20e841973bdc24" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprFieldless&lt;/em&gt; : &lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;EnumExprFieldless&lt;/em&gt; : &lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a3e247b5324fe26d81405de894f9ae01cd12c71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprFields&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumExprFields&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="a1e63e280dcac737e7087d81c417bb2ab6ef170a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprStruct&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;EnumExprStruct&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81a31b2effb76cd9ae25598167249ffe2927f24d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprStruct&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumExprStruct&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="872818237167326d46f7d79f82a474d7620d59e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumExprTuple&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumExprTuple&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="7a247d38a26600c1d6ab239677aae501828c23bb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumItem&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt;&lt;em&gt;EnumItem&lt;/em&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;EnumItem&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;EnumItem&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c96047187a48e4499f3d9eb09874509e7dcf5a6b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f1d208e299cd6d7197f344b241477faf59f14365" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumItemDiscriminant&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumItemDiscriminant&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="392efbedcf0e93dd1c123943deacda31699a635d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumItemStruct&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumItemStruct&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="535fb7350a5f7ecf9c99b545d4d08879625019c9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumItemTuple&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumItemTuple&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="560d9a1d9be288e4fd935c185e48e368caa0cd50" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumItems&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumItems&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="480d1890c3d2b2e50731052f78fb268c56243900" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Enumeration&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Перечисление&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8f62338d6b7c311d14624b530b32b048db1ab97a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EnumerationVariantExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;EnumerationVariantExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="dd5815fe88c57026716044be8c2b7d220a9fa4cc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ErrorPropagationExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ErrorPropagationExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="cb9ee65024268a75134206e6a4c99f7d8fa0f89f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExampleGrammar&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;ExampleGrammar&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="80c44d7022c9adcdd921a5b80aee11712f70fc05" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Expression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Выражение&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="e58544a48f06924557169ef1418c4689a451c875" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExpressionStatement&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExpressionStatement&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="7cc396823b918359020f355cf1dc9da18933258b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExpressionWithBlock&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExpressionWithBlock&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="596bbce5f87bab0fd29d812454db376d6aca155e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExpressionWithoutBlock&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ExpressionWithoutBlock&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6c94d5af9134aa8b1f09f00ed31c6f369919f09c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExpressionWithoutBlock&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExpressionWithoutBlock&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="446e71b1899f357476dc9ae92fa474c0107ed591" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExternBlock&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExternBlock&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="1b561479775d2c9407f5fd110e063fb310a737a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExternCrate&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExternCrate&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c7cf4477548c689d6a4ea7f06ba8c1d3681deb95" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExternalFunctionItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExternalFunctionItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="37172998df85b0e7dd731b75e4d62eb9a9c7b379" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExternalItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Внешний элемент&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c0d8bdffca78d8882e397411de97d66a0f45e54d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExternalItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;ExternalItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="08bd64786f839eb621640ebd233ca37b6a4950c3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ExternalStaticItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ExternalStaticItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="ca497f47dd18f54d8f558a5e7a74e5f715f1a983" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FieldExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ПолеВыражение&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="7a09c2fd212d136b9c8764d23e72ed1626095d14" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ForLifetimes&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ForLifetimes&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="fb5f5509306f986a8ce27f23fda17690166842f4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ForLifetimes&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;ForLifetimes&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="162bb590eada5f15f64a539675ab6a6a7f5751fb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Function-like procedural macros&lt;/em&gt; are procedural macros that are invoked using the macro invocation operator (&lt;code&gt;!&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;Подобный функциям процедурный макрос&lt;/em&gt; - это процедурный макрос, который вызывается с помощью оператора вызова макроса ( &lt;code&gt;!&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ec28b24ac72ab68956c914d032226ef2400adbed" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Function&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Функция&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8168d63a8074aab909c34b26df738e48ecfde250" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionParam&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;FunctionParam&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;FunctionParam&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;FunctionParam&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9c894aa89db1ffe8f9db0eef51225568cfe54120" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;FunctionParam&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="0f42bf8375c939e33e16809b4a34a1ac2d861f69" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionParameters&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Параметры функции&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="9a31e1b61e366904b87a234a9c76e83e22d71da6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionParametersMaybeNamedVariadic&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;FunctionParametersMaybeNamedVariadic&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="1c3279a6ddd347e91a65b511c22f09a8aeb666d8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionQualifiers&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;FunctionQualifiers&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="39418f8af9ab5576f6c64f1ee2ad007aa5750e01" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionQualifiers&lt;/em&gt;&lt;code&gt;fn&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;FunctionQualifiers&lt;/em&gt;&lt;code&gt;fn&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="788b2713b2513627be56a9c05d69615eb51c0722" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionReturnType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;FunctionReturnType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="38b65471a255a2036cede5bcb3d47f5c080c49c8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FunctionReturnType&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;FunctionReturnType&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c5e08598325a6fef007cf94d3ecd46442c7fafee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericArgs&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GenericArgs&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c54e63947d01d4af369104ad05fe28f3eb40ce84" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericArgsBinding&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;GenericArgsBinding&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;GenericArgsBinding&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;GenericArgsBinding&lt;/em&gt; ) &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6f38617bda8c69b2aad0962cd10c3412991b5c0b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericArgsBinding&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GenericArgsBinding&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="81dc2ce7abba66a5df4eb392835de6eb00035c8c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericArgsBindings&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GenericArgsBindings&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="b73f8a4aab172b4a6c9574ba65d5bb321d657dd1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericArgsLifetimes&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GenericArgsLifetimes&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f8a974f32d33a7bd75a95fdf90a18c5c1e6073d9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericArgsTypes&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GenericArgsTypes&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="3c24974b6beee6e1f7b208bc03c9dcc3fc124d86" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GenericParams&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GenericParams&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="da9e88754d1d196b1d9ba3e958771b23d53dadb1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Generics&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Дженерики&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="ea913979d94c8460bf48a0d160d405c6a3cb364e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GroupedExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GroupedExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="d9335cb7193c14f1c28286092073632a0e0c482a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GroupedPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;GroupedPattern&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="1d7c2bcd43e46897232ff538bfc77694fb9d1cf3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IdentifierPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;IdentifierPattern&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="552a257d41f0a82c496a8c9d9d5ff9cf5f001458" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IfExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;IfExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="bf2626f317e3f10399cb330cefe01d92a99d8b6f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IfLetExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;IfLetExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="79ee94938a3f8246e8c14f54e7a997fd1ad6c760" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ImplTraitType&lt;/em&gt; : &lt;code&gt;impl&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;ImplTraitType&lt;/em&gt; : &lt;code&gt;impl&lt;/code&gt; &lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05613b00e6dd0110b60f330b7e46df5b89a82cd7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ImplTraitTypeOneBound&lt;/em&gt; : &lt;code&gt;impl&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TraitBound&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;ImplTraitTypeOneBound&lt;/em&gt; : &lt;code&gt;impl&lt;/code&gt; &lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TraitBound&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4fd05262d3d8919770d7462003fd7944b0dd430" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Implementation&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Реализация&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f9e585f484aa302617b5f3921aaffff9cb3e1f10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Incorrect&lt;/em&gt; usage of this function: calling &lt;code&gt;x.zeroed().assume_init()&lt;/code&gt; when &lt;code&gt;0&lt;/code&gt; is not a valid bit-pattern for the type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cfcf205225b502eeddd6cc3a859a4ac35782fa4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Incorrect&lt;/em&gt; usage of this function: initializing a reference with zero.</source>
          <target state="translated">&lt;em&gt;Неправильное&lt;/em&gt; использование этой функции: инициализация ссылки нулем.</target>
        </trans-unit>
        <trans-unit id="28628453b676c4b17b657f804b1cdabf0268307f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Incorrect&lt;/em&gt; usage of this function: initializing a struct with zero, where some fields cannot hold 0 as a valid value.</source>
          <target state="translated">&lt;em&gt;Неправильное&lt;/em&gt; использование этой функции: инициализация структуры нулем, где некоторые поля не могут содержать 0 как допустимое значение.</target>
        </trans-unit>
        <trans-unit id="1e35375dd8ca064ff4be0792decd69979e2a94f1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Incorrect&lt;/em&gt; usage of this method:</source>
          <target state="translated">&lt;em&gt;Неправильное&lt;/em&gt; использование этого метода:</target>
        </trans-unit>
        <trans-unit id="961f9ab6d4d7a15bbb9471b7c35943977995f396" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Incorrect&lt;/em&gt; usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef527fb5291b6c60294b335d7557e367e2681981" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Incorrect&lt;/em&gt; usages of this method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf29de4a8b94f53e344a29577c238666b6c4f853" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IndexExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;IndexExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c94ff0faba99ce65f8412731449d7be18d1e3771" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InferredType&lt;/em&gt; : &lt;code&gt;_&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;InferredType&lt;/em&gt; : &lt;code&gt;_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="95b1cb6f36e254b0e037447afbf413b63c98f580" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InfiniteLoopExpression&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;InfiniteLoopExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6a29190f932069fb30261267a0f7f6a8f0edf508" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InfiniteLoopExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;InfiniteLoopExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="863ac61ae9beee9e20887415b53077b2cd587cc4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InherentImpl&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;InherentImpl&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="a79afb1ce32a4539826399a2e1aefd3500e2864c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InherentImpl&lt;/em&gt; | &lt;em&gt;TraitImpl&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;InherentImpl&lt;/em&gt; | &lt;em&gt;TraitImpl&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="25f84d39eb0b9d4931e76839cb6cce77d4382f61" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InherentImplItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;InherentImplItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="2eff57e7451fa06aafae25f01ccf8779642171cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InherentImplItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;InherentImplItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9d5c07a8ba88eeed78b7d7e38091e5c9ecaa5fca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inheritance&lt;/em&gt; is a mechanism whereby an object can inherit from another object&amp;rsquo;s definition, thus gaining the parent object&amp;rsquo;s data and behavior without you having to define them again.</source>
          <target state="translated">&lt;em&gt;Наследование&lt;/em&gt; - это механизм, с помощью которого объект может наследовать от определения другого объекта, таким образом получая данные и поведение родительского объекта без необходимости их повторного определения.</target>
        </trans-unit>
        <trans-unit id="37b838e42be8ffd5750f71b0c368c67cc7d9cc92" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inner attributes&lt;/em&gt;, written with a bang (&lt;code&gt;!&lt;/code&gt;) after the hash (&lt;code&gt;#&lt;/code&gt;), apply to the item that the attribute is declared within. &lt;em&gt;Outer attributes&lt;/em&gt;, written without the bang after the hash, apply to the thing that follows the attribute.</source>
          <target state="translated">&lt;em&gt;Внутренние атрибуты&lt;/em&gt; , обозначенные знаком ( &lt;code&gt;!&lt;/code&gt; ) После решетки ( &lt;code&gt;#&lt;/code&gt; ), применяются к элементу, в котором объявлен атрибут. &lt;em&gt;Внешние атрибуты&lt;/em&gt; , записанные без знака после хеша, применяются к тому, что следует за атрибутом.</target>
        </trans-unit>
        <trans-unit id="b21dd44482c776a4ae70c27fc6354483a4a31457" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;InnerAttribute&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Внутренний атрибут&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="6a4a98cd6f0b1230436493f0b5d42df54fbefc46" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Interior mutability&lt;/em&gt; is a design pattern in Rust that allows you to mutate data even when there are immutable references to that data; normally, this action is disallowed by the borrowing rules. To mutate data, the pattern uses &lt;code&gt;unsafe&lt;/code&gt; code inside a data structure to bend Rust&amp;rsquo;s usual rules that govern mutation and borrowing. We haven&amp;rsquo;t yet covered unsafe code; we will in Chapter 19. We can use types that use the interior mutability pattern when we can ensure that the borrowing rules will be followed at runtime, even though the compiler can&amp;rsquo;t guarantee that. The &lt;code&gt;unsafe&lt;/code&gt; code involved is then wrapped in a safe API, and the outer type is still immutable.</source>
          <target state="translated">&lt;em&gt;Внутренняя изменчивость&lt;/em&gt; - это шаблон проектирования в Rust, который позволяет вам изменять данные даже при наличии неизменяемых ссылок на эти данные; Обычно это действие запрещено правилами заимствования. Для изменения данных шаблон использует &lt;code&gt;unsafe&lt;/code&gt; код внутри структуры данных, чтобы изменить обычные правила Rust, которые управляют изменением и заимствованием. Мы еще не рассмотрели небезопасный код; мы сделаем это в главе 19. Мы можем использовать типы, которые используют шаблон внутренней изменчивости, когда мы можем гарантировать, что правила заимствования будут соблюдаться во время выполнения, даже если компилятор не может этого гарантировать. Затем задействованный &lt;code&gt;unsafe&lt;/code&gt; код упаковывается в безопасный API, а внешний тип остается неизменным.</target>
        </trans-unit>
        <trans-unit id="91f906ea541949971bce8092251fb34ad2874f01" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IsolatedCR&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ИзолированныйCR&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="15b1db203d17ae708a602c52e1b8b0a79a33743c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;It's much nicer!&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Это намного приятнее!&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3589cc7a2650a6a39893a4f30ad24db14bcc98c3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ItalicCamelCase&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ItalicCamelCase&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e4294d2f533011b09278da1f0928e3fabf6c585" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Item&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;Item&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="35eaaafb0e0cfcbe9059a1b585f1a998f21adff7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IteratorLoopExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;IteratorLoopExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c5c5224fda773552cba7aaab8d33158d49416eb2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Iterators&lt;/em&gt;, a way of processing a series of elements</source>
          <target state="translated">&lt;em&gt;Итераторы&lt;/em&gt; , способ обработки серии элементов</target>
        </trans-unit>
        <trans-unit id="6878bb942a50edb04c637f441255c08839fd8b5e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LazyBooleanExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LazyBooleanExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="e4ec5679d98469d83e30b728ef14a087b47cc5ad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LetStatement&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LetStatement&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="50e44bb3a7ace5b8fd084f781de2033f5d340501" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LetStatement&lt;/em&gt;, &lt;em&gt;Item&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;LetStatement&lt;/em&gt; , &lt;em&gt;Пункт&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="39582c4eee46618d53ec3ef9cb470cd2be058e46" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Lifetime&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Срок службы&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="0ea24f230231f68a2b34565b7dcca2f3da5ddd71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Lifetime&lt;/em&gt; | &lt;em&gt;TraitBound&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Срок службы&lt;/em&gt; | &lt;em&gt;TraitBound&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ebf62dff1412adf1ae4b162299598ee5a032a6e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LifetimeBounds&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LifetimeBounds&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="060de76296a6782922ad4030917b108ef8967b15" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LifetimeParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LifetimeParam&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="db9dbc6cc32224342ea50dccd96dda25d69288f1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LifetimeParams&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;LifetimeParams&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="03a0239bb786012518cf2c6c045b55b7937dfe9b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LifetimeParams&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LifetimeParams&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="0b9e9f262b361c2f9cde92cf65edeac7a44b031e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LifetimeWhereClauseItem&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;LifetimeWhereClauseItem&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b5e16a802a7971ac6b243273fb14a2dccf57bf67" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LifetimeWhereClauseItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LifetimeWhereClauseItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="2edfdb6001688b168202c1220fd23770fbcb9d2b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Literal patterns&lt;/em&gt; match exactly the same value as what is created by the literal. Since negative numbers are not &lt;a href=&quot;expressions/literal-expr&quot;&gt;literals&lt;/a&gt;, literal patterns also accept an optional minus sign before the literal, which acts like the negation operator.</source>
          <target state="translated">&lt;em&gt;Шаблоны&lt;/em&gt; литерала соответствуют точно тому же значению, что и созданное литералом. Поскольку отрицательные числа не являются &lt;a href=&quot;expressions/literal-expr&quot;&gt;литералами&lt;/a&gt; , шаблоны литералов также принимают необязательный знак минус перед литералом, который действует как оператор отрицания.</target>
        </trans-unit>
        <trans-unit id="464b5ac4b1f4a4fffbbf7466eec695e49502c6aa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LiteralExpression&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;LiteralExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="80ad5e778c4821aa8ad4533e2e1b28aceca96a97" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LiteralExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Литеральное выражение&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="b2462e40e7f72a721e3006bfd0b52a9aee146737" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LiteralPattern&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;LiteralPattern&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e24c33e733c079f39066482083d99720d7a590a0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LiteralPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LiteralPattern&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="884209fe2f2a76e7cda80f39d4d922f1c38b8004" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LoopExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LoopExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="14ce3d029e799f142eb096754128bfcb245b572f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LoopLabel&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;LoopLabel&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="899f19ae53fdd000cfcb9c004274efe07708a07c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroFragSpec&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroFragSpec&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="3da67bc64cc6b58442ceabf314b6d8f315774765" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroInvocation&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Макро-вызов&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="86736fdf72b16f87485cb2da5b9702f1f15e0d0d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroInvocationSemi&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MacroInvocationSemi&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0c25696e65bad5ef16fa4cff7c02ac72724ed33" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroInvocationSemi&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroInvocationSemi&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="1314757d6629df1286f781c412bcb2a7cfc877cd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroItem&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;MacroItem&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="107065ee19fe1d1535cd6a2549f6ef154a38aad6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroMatch&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroMatch&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="10f1c042b96121396ef40d4d223f94b891eadae1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroMatch&lt;/em&gt;&lt;sup&gt;+&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;MacroMatch&lt;/em&gt;&lt;sup&gt;+&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="aa73b9a1272ca09d2634ea23fbb5d95ac193c417" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroMatcher&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroMatcher&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c85576888e4fc3cc4860eb43185db02056a40314" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroMatcher&lt;/em&gt;&lt;code&gt;=&amp;gt;&lt;/code&gt;&lt;em&gt;MacroTranscriber&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MacroMatcher&lt;/em&gt;&lt;code&gt;=&amp;gt;&lt;/code&gt;&lt;em&gt;MacroTranscriber&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5ffe14d46b6069b4bd1e26e86ac80bb7d5bc67f4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRepOp&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroRepOp&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="5a2b0452859a72cf796927f33eb344fb43ce17a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRepSep&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroRepSep&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="b47a89691628c051ab5d56c0b0874a4768743618" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRule&lt;/em&gt; ( &lt;code&gt;;&lt;/code&gt;&lt;em&gt;MacroRule&lt;/em&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;MacroRule&lt;/em&gt; ( &lt;code&gt;;&lt;/code&gt; &lt;em&gt;MacroRule&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;;&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7a3a64afb6e6e4c9cb8013297f3aecf634458b77" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRule&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Макроправило&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="e0d02c2687f0b8d0a3ec1e79a5d0a4e723aaa459" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRules&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Макроправила&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="300a4e1e637630e5311d1580fa57ad0907c4949c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRulesDef&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroRulesDef&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="7432d8c5ee6a6f8435e41ebcb841a8e9e3efbe09" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroRulesDefinition&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Макроправила Определение&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="0aa63b176d3289e7d5fe278979b47b6351d1c8f5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MacroTranscriber&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MacroTranscriber&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="301310ca509d88b71bdcbce85bca8484407c855a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArm&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MatchArm&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8ef8dd7b9ee9553c116df71c870c9fe2196820b0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArm&lt;/em&gt;&lt;code&gt;=&amp;gt;&lt;/code&gt; ( &lt;a href=&quot;block-expr#block-expressions&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt; | &lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt; ) &lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;MatchArm &lt;/em&gt; &lt;code&gt;=&amp;gt;&lt;/code&gt; ( &lt;a href=&quot;block-expr#block-expressions&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt; | &lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt; ) &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2de5bb0846ec774f125279cb3bb588170d31ea1e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArm&lt;/em&gt;&lt;code&gt;=&amp;gt;&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;MatchArm&lt;/em&gt;&lt;code&gt;=&amp;gt;&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="af2a8e7c1bb63707445e68194a98566db9ae9c62" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArmGuard&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MatchArmGuard&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="872ab4d9cba4ef81fd6eff181c3df94d111b4c90" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArmPatterns&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MatchArmPatterns&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="51d70fe968fee1e7e37c530e278c9f179e55c999" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArms&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MatchArms&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="b0dcf9c9f72e6c885154f72e9f84114403538d7f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchArms&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;MatchArms&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="93cef99b84f5880c91ba6132e54cffaa8bb07cb1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MatchExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MatchExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="59546d2d50e5e2644feb3600d82325e80727d837" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MaybeNamedFunctionParameters&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MaybeNamedFunctionParameters&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="e3e8698bcc99e08a21191034a6f81b16c183dbab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MaybeNamedFunctionParameters&lt;/em&gt; | &lt;em&gt;MaybeNamedFunctionParametersVariadic&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MaybeNamedFunctionParameters&lt;/em&gt; | &lt;em&gt;MaybeNamedFunctionParametersVariadic&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bdf70a1b2c190ce80402e5ed97a8e9f90da84521" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MaybeNamedFunctionParametersVariadic&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MaybeNamedFunctionParametersVariadic&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="ec466b5c020581c11646855a10025f8789e4720d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MaybeNamedParam&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt;&lt;em&gt;MaybeNamedParam&lt;/em&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;MaybeNamedParam&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;MaybeNamedParam&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="de8577b4b4d9a6ef30f90cc872d3edd2da01d708" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MaybeNamedParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MaybeNamedParam&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="a3e31631cab04f772c43505b41bc02828d169566" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Message-passing&lt;/em&gt; concurrency, where channels send messages between threads</source>
          <target state="translated">&lt;em&gt;Передачи сообщений&lt;/em&gt; параллелизм, где каналы передачи сообщений между потоками</target>
        </trans-unit>
        <trans-unit id="6421221bdae5d3f17103c8797dccdfa396e56c64" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaItem&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MetaItem&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd9d222feeff596ac3ec40241e21471c3875c6ca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MetaItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="631b2977683a81dc7b858b95988c10709eeca01c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaItemInner&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; MetaItemInner )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;MetaItemInner&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; MetaItemInner) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a0a236982f9fe3679818752e8c83dbdada7e61fd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaItemInner&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MetaItemInner&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="a46470f7df8921c8404bc47b518414ef4ebe4e99" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaListIdents&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MetaListIdents&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b89767b1e8283ee44c2da2f824ccf3cf13cf9e9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaListIdents&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;MetaListIdents&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="69329eee070eb64bdd8e9ebfd52d7a97bd2bd718" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaListNameValueStr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MetaListNameValueStr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="253f2c53a18a5eb7f5cdbfb33a96efc6d67efb57" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaListNameValueStr&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;MetaListNameValueStr&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="525440e46ebe819cb3f49893ee89b9befcb43c78" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaListPaths&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MetaListPaths&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="623b1dde663ef9f165bf458c94a79025f4f511f9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaListPaths&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;MetaListPaths&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="0d1903ff0a2527be2a0e272eab75174749d6fc10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaNameValueStr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MetaNameValueStr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b219e52aa36ab2d3868c212bf29298e8f3e03d76" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaNameValueStr&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;MetaNameValueStr&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="8dda892455f17857ab98d3e2fac0ec83a1144173" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaSeq&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MetaSeq&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="3e86baf44bbbc009b1410a0c45820c7a75b171b9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaWord&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MetaWord&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f27a607b80b63639e5c352b9449a8087cf31209" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MetaWord&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;MetaWord&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="7cc1d093a2803d4f22d129156c7ea0623492edd7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Method&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Метод&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="116ae302839cf2f314903962433adec3cd7ac223" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MethodCallExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;MethodCallExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="6d1e1b8c482fe8dac376ede8bea2c4c40be8d75d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Methods&lt;/em&gt; are similar to functions: they&amp;rsquo;re declared with the &lt;code&gt;fn&lt;/code&gt; keyword and their name, they can have parameters and a return value, and they contain some code that is run when they&amp;rsquo;re called from somewhere else. However, methods are different from functions in that they&amp;rsquo;re defined within the context of a struct (or an enum or a trait object, which we cover in Chapters 6 and 17, respectively), and their first parameter is always &lt;code&gt;self&lt;/code&gt;, which represents the instance of the struct the method is being called on.</source>
          <target state="translated">&lt;em&gt;Методы&lt;/em&gt; похожи на функции: они объявляются с ключевым словом &lt;code&gt;fn&lt;/code&gt; и своим именем, у них могут быть параметры и возвращаемое значение, и они содержат некоторый код, который запускается, когда они вызываются из другого места. Однако методы отличаются от функций тем, что они определены в контексте структуры (или перечисления, или объекта-признака, которые мы рассмотрим в главах 6 и 17, соответственно), и их первый параметр всегда &lt;code&gt;self&lt;/code&gt; , который представляет экземпляр структуры, для которой вызывается метод.</target>
        </trans-unit>
        <trans-unit id="02da3ae59b83d41fac0ece7c0e674a6453dd1a2b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Module&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Module&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12a97132963c0e60bc212205136da7166461dc92" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Module&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Модуль&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="83b4121f259948e1d6bf06a38eadea9b08bfc769" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Modules&lt;/em&gt; let us organize code within a crate into groups for readability and easy reuse. Modules also control the &lt;em&gt;privacy&lt;/em&gt; of items, which is whether an item can be used by outside code (&lt;em&gt;public&lt;/em&gt;) or is an internal implementation detail and not available for outside use (&lt;em&gt;private&lt;/em&gt;).</source>
          <target state="translated">&lt;em&gt;Модули&lt;/em&gt; позволяют нам организовывать код в ящике в группы для удобства чтения и повторного использования. Модули также управляют &lt;em&gt;конфиденциальностью&lt;/em&gt; элементов, то есть тем, может ли элемент использоваться внешним кодом ( &lt;em&gt;общедоступный&lt;/em&gt; ) или является внутренней деталью реализации и недоступен для внешнего использования ( &lt;em&gt;частный&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="2795bcf66d84e6f66e4e78f1f52e5e397edb297a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Mutex&lt;/em&gt; is an abbreviation for &lt;em&gt;mutual exclusion&lt;/em&gt;, as in, a mutex allows only one thread to access some data at any given time. To access the data in a mutex, a thread must first signal that it wants access by asking to acquire the mutex&amp;rsquo;s &lt;em&gt;lock&lt;/em&gt;. The lock is a data structure that is part of the mutex that keeps track of who currently has exclusive access to the data. Therefore, the mutex is described as &lt;em&gt;guarding&lt;/em&gt; the data it holds via the locking system.</source>
          <target state="translated">&lt;em&gt;Мьютекс&lt;/em&gt; - это аббревиатура для &lt;em&gt;взаимного исключения&lt;/em&gt; , например, мьютекс позволяет только одному потоку получать доступ к некоторым данным в любой момент времени. Для того, чтобы получить доступ к данным в мьютекса, поток должен первый сигнал , что он хочет получить доступ, задав получить мьютекс в &lt;em&gt;замок&lt;/em&gt; . Блокировка - это структура данных, которая является частью мьютекса, отслеживающего, кто в настоящее время имеет монопольный доступ к данным. Таким образом, мьютекс описывается как &lt;em&gt;защита&lt;/em&gt; данных, которые он хранит, с помощью системы блокировки.</target>
        </trans-unit>
        <trans-unit id="c141f34947bfe55e1f46d1e448bdd473c2e41277" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NamedFunctionParam&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt;&lt;em&gt;NamedFunctionParam&lt;/em&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;NamedFunctionParam&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;NamedFunctionParam&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="177e1ec2a1a343f8b157386f08366b0643b92099" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NamedFunctionParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;NamedFunctionParam&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="9c1536bd5b283e57a048ae939494854cc91bcee5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NamedFunctionParameters&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Параметры NamedFunctionParameters&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="efc20863a7794bc34aebfc1e0f3ff83907a77f44" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NamedFunctionParametersWithVariadics&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;NamedFunctionParametersWithVariadics&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="209ca2070cdd0548a6ec072ee0f642ab57d0d9b0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NegationExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Выражение отрицания&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="85373d9d19e2d5e6a72b0d46955723308c982fbc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NeverType&lt;/em&gt; : &lt;code&gt;!&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;NeverType&lt;/em&gt; : &lt;code&gt;!&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4a7de36936293c2079a21203197e69abd8fdff0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Non-capturing closures&lt;/em&gt; are closures that don't capture anything from their environment. They can be coerced to function pointers (&lt;code&gt;fn&lt;/code&gt;) with the matching signature.</source>
          <target state="translated">&lt;em&gt;Закрытия без захвата&lt;/em&gt; - это замыкания, которые ничего не захватывают из своей среды. Их можно принудить к указателям функций ( &lt;code&gt;fn&lt;/code&gt; ) с соответствующей подписью.</target>
        </trans-unit>
        <trans-unit id="71e43cde2b083a05111a610fc93b88f4dd64cadc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Non-capturing closures&lt;/em&gt; are closures that don't capture anything from their environment. They can be coerced to function pointers (e.g., &lt;code&gt;fn()&lt;/code&gt;) with the matching signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882c1a5626b4c0e262eded317452a5078e941639" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Non-reference patterns&lt;/em&gt; include all patterns except bindings, &lt;a href=&quot;#wildcard-pattern&quot;&gt;wildcard patterns&lt;/a&gt; (&lt;code&gt;_&lt;/code&gt;), &lt;a href=&quot;#path-patterns&quot;&gt;&lt;code&gt;const&lt;/code&gt; patterns&lt;/a&gt; of reference types, and &lt;a href=&quot;#reference-patterns&quot;&gt;reference patterns&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd380afc1048d6388f700be958b8b6c54432a25" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Non-reference patterns&lt;/em&gt; include all patterns except bindings, &lt;a href=&quot;patterns#wildcard-pattern&quot;&gt;wildcard patterns&lt;/a&gt; (&lt;code&gt;_&lt;/code&gt;), &lt;a href=&quot;patterns#path-patterns&quot;&gt;&lt;code&gt;const&lt;/code&gt; patterns&lt;/a&gt; of reference types, and &lt;a href=&quot;patterns#reference-patterns&quot;&gt;reference patterns&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Не ссылочные шаблоны&lt;/em&gt; включают все шаблоны, кроме привязок, &lt;a href=&quot;patterns#wildcard-pattern&quot;&gt;шаблонов подстановки&lt;/a&gt; ( &lt;code&gt;_&lt;/code&gt; ), &lt;a href=&quot;patterns#path-patterns&quot;&gt;шаблонов &lt;/a&gt; &lt;code&gt;const&lt;/code&gt; ссылочных типов и &lt;a href=&quot;patterns#reference-patterns&quot;&gt;шаблонов ссылок&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c87699403d42475f0b497d21fa62cf5035ebcee2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: The actual definition of &lt;a href=&quot;../io/trait.write&quot;&gt;&lt;code&gt;Write&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;../io/type.result&quot;&gt;&lt;code&gt;io::Result&lt;/code&gt;&lt;/a&gt;, which is just a synonym for &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T, &lt;/code&gt;&lt;a href=&quot;../io/struct.error&quot;&gt;&lt;code&gt;io::Error&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Примечание. Фактическое определение &lt;a href=&quot;../io/trait.write&quot;&gt; &lt;code&gt;Write&lt;/code&gt; &lt;/a&gt; использует &lt;a href=&quot;../io/type.result&quot;&gt; &lt;code&gt;io::Result&lt;/code&gt; &lt;/a&gt; , который является просто синонимом &lt;a href=&quot;enum.result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;T, &lt;/code&gt; &lt;a href=&quot;../io/struct.error&quot;&gt; &lt;code&gt;io::Error&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70b104ca519b1781e89b16883d9ec4abee1ce28d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: Currently, no overflow checking is done for the &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; implementation; if you use an integer range and the integer overflows, it might panic in debug mode or create an endless loop in release mode. &lt;strong&gt;This overflow behavior might change in the future.&lt;/strong&gt;</source>
          <target state="translated">&lt;em&gt;Примечание&lt;/em&gt; . В настоящее время для реализации &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; проверка переполнения не выполняется ; если вы используете целочисленный диапазон и целое число переполняется, это может вызвать панику в режиме отладки или создать бесконечный цикл в режиме выпуска. &lt;strong&gt;Это поведение переполнения может измениться в будущем.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aecfa3608c4d8a7a4964330cc7c3952f2fb94db9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: Overflow in the &lt;a href=&quot;../iter/trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; implementation (when the contained data type reaches its numerical limit) is allowed to panic, wrap, or saturate. This behavior is defined by the implementation of the &lt;a href=&quot;../iter/trait.step&quot;&gt;&lt;code&gt;Step&lt;/code&gt;&lt;/a&gt; trait. For primitive integers, this follows the normal rules, and respects the overflow checks profile (panic in debug, wrap in release). Note also that overflow happens earlier than you might assume: the overflow happens in the call to &lt;code&gt;next&lt;/code&gt; that yields the maximum value, as the range must be set to a state to yield the next value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6fe5bb6643384b50deb8681210e5ccb8e78af08" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: this method might never get stabilized and/or removed in the future as there will likely be another, preferred way of obtaining this iterator (either via &lt;code&gt;IntoIterator&lt;/code&gt; for arrays or via another way).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc93b7140db62afdb6fbb6d9fa3f786f2aaf3af" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;O&lt;/em&gt;(1)</source>
          <target state="translated">&lt;em&gt;O&lt;/em&gt;(1)</target>
        </trans-unit>
        <trans-unit id="26001603760e93c344ba82211ea2486bf400dcd5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;O&lt;/em&gt;(log(&lt;em&gt;n&lt;/em&gt;))</source>
          <target state="translated">&lt;em&gt;O&lt;/em&gt;(log(&lt;em&gt;n&lt;/em&gt;))</target>
        </trans-unit>
        <trans-unit id="eec8da9292eb5132a06f44b8215f3e11aed6fcfe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ObsoleteRangePattern&lt;/em&gt; :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e802f553e220dd18bf4818941d72e6a9dc76bc2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;OperatorExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;OperatorExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="707bdb59efd6df1d04ef0a97e7761ae6368376ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;OuterAttribute&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Внешний Атрибут&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="61f4c3add2cbf87a1ebb0e51006bbc38d76a9f38" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="07fb203ce3874c1923d12826417b8439f3e810f6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;a href=&quot;../visibility-and-privacy&quot;&gt;&lt;em&gt;Visibility&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;a href=&quot;../visibility-and-privacy&quot;&gt;&lt;em&gt;Visibility&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6fbb1da1d7470d11a25428cf31c46f6a27063b7f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ParenthesizedType&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ParenthesizedType&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8b7acc2936472747aad080689d7ab467ef52624a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ParenthesizedType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ParenthesizedType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="e44566e2561c2eb7a6760edc74d9f4edecae92f5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Path patterns&lt;/em&gt; are patterns that refer either to constant values or to structs or enum variants that have no fields.</source>
          <target state="translated">&lt;em&gt;Шаблоны пути&lt;/em&gt; - это шаблоны, которые относятся либо к постоянным значениям, либо к структурам или вариантам перечисления, у которых нет полей.</target>
        </trans-unit>
        <trans-unit id="9bcee4bd86adf42333cbfbdb5021dc5e4de35bfd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathExprSegment&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;PathExprSegment&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="6866344cc2c77f90134a1e4d8664a91ddb6a1e6c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Выражение пути&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="3b21ff3120356d5734116a476d3f58af846cfa68" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathIdentSegment&lt;/em&gt; (&lt;code&gt;::&lt;/code&gt;&lt;em&gt;GenericArgs&lt;/em&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;PathIdentSegment&lt;/em&gt; ( &lt;code&gt;::&lt;/code&gt; &lt;em&gt;GenericArgs&lt;/em&gt; ) &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4f2ab1dc66ffbe80c3e3eb05499904b9752b616b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathIdentSegment&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;PathIdentSegment&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="7241efbf440598772b31c6c3ba3217aa3ff10522" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathIdentSegment&lt;/em&gt;&lt;code&gt;::&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt; (&lt;a href=&quot;#paths-in-expressions&quot;&gt;&lt;em&gt;GenericArgs&lt;/em&gt;&lt;/a&gt; | &lt;em&gt;TypePathFn&lt;/em&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519c591d68e404044ea856e26adda836058be072" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathIdentSegment&lt;/em&gt;&lt;code&gt;::&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt; (&lt;a href=&quot;paths#paths-in-expressions&quot;&gt;&lt;em&gt;GenericArgs&lt;/em&gt;&lt;/a&gt; | &lt;em&gt;TypePathFn&lt;/em&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;PathIdentSegment &lt;/em&gt; &lt;code&gt;::&lt;/code&gt; &lt;sup&gt;? &lt;/sup&gt;( &lt;a href=&quot;paths#paths-in-expressions&quot;&gt;&lt;em&gt;GenericArgs&lt;/em&gt;&lt;/a&gt; | &lt;em&gt;TypePathFn&lt;/em&gt; ) &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2fae05622c303c1d4eccd9ca25430d9d32917508" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathInExpression&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;PathInExpression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3de904317f4b7c125296f50803a5214ebd2270a5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathInExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;PathInExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8cb7cab543206666211bb802cc27b3ce29047765" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PathPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;PathPattern&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="655915425e7447753811d878f0caf9ea904e20d7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Pattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Узор&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="2914ffb7ff344149928f6c450927e6b2664825a4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PatternWithoutRange&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;PatternWithoutRange&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9195beb1c2177cbc277f4dde7c20e913e608d03b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PatternWithoutRange&lt;/em&gt; :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea4d82b3bba42a2dc742d0b085995b0ec2a5047" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PredicateLoopExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;PredicateLoopExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="d3cd25c56d27f14b1134b4e294f89b2590b57963" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Procedural macros&lt;/em&gt; allow creating syntax extensions as execution of a function. Procedural macros come in one of three flavors:</source>
          <target state="translated">&lt;em&gt;Процедурные макросы&lt;/em&gt; позволяют создавать расширения синтаксиса как выполнение функции. Процедурные макросы бывают трех видов:</target>
        </trans-unit>
        <trans-unit id="b72a8031347aaf18a58618d59af907d6c8eb9013" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;QualifiedPathInExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;QualifiedPathInExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="77fb3b42cb3dd1ced63e0329de85c328c846330d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;QualifiedPathInType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;QualifiedPathInType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8c80a51014e86782790035357c12fab1f5ffdba3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;QualifiedPathType&lt;/em&gt; (&lt;code&gt;::&lt;/code&gt;&lt;em&gt;PathExprSegment&lt;/em&gt;)&lt;sup&gt;+&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;QualifiedPathType&lt;/em&gt; ( &lt;code&gt;::&lt;/code&gt; &lt;em&gt;PathExprSegment&lt;/em&gt; ) &lt;sup&gt;+&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="04f0ea3553ecb7b0b5c8b2bef5c9d0d391a2da64" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;QualifiedPathType&lt;/em&gt; (&lt;code&gt;::&lt;/code&gt;&lt;em&gt;TypePathSegment&lt;/em&gt;)&lt;sup&gt;+&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;QualifiedPathType&lt;/em&gt; ( &lt;code&gt;::&lt;/code&gt; &lt;em&gt;TypePathSegment&lt;/em&gt; ) &lt;sup&gt;+&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4c26401cc9a8056bf9b2a2a79e730a48613992d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;QualifiedPathType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;QualifiedPathType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="135a398a47f9295958865e188f2406e097785d05" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeExpr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangeExpr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7a9f296c9a093396885dfd5991001d600043f24" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeExpr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeExpr&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="3e653b374c01c7c5dec8665cf4b6535aa5c5e1de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="920b763f29d5ca056654f00f7ffa9c69fe46209a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeFromExpr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangeFromExpr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ea2f802e68ac2369c7598af82179afc86b1e0b6e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeFromExpr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeFromExpr&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="363671b9548fb436fda9c9b87cba616cf37f641b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeFullExpr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangeFullExpr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="85f26367c428a460c7b8099c16615e492b299ee1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeFullExpr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeFullExpr&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="126c1a4b65ea9632a7efbfb0fe1c9a1d350f463b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeInclusiveExpr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangeInclusiveExpr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="19898a1d631dc21ba75a2493d9f0afca74a49f53" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeInclusiveExpr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeInclusiveExpr&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="0a1c66b8f9a46931d432ab8cd938cd1959062e1f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangePattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangePattern&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="9c16f86e2eb7ae21d849c20b2a94807de0634de8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangePatternBound&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangePatternBound&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="4a480ed659b1aa78f6fb968f5330e1b629aa22a6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangePatternBound&lt;/em&gt;&lt;code&gt;...&lt;/code&gt;&lt;em&gt;RangePatternBound&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangePatternBound&lt;/em&gt;&lt;code&gt;...&lt;/code&gt;&lt;em&gt;RangePatternBound&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="73bf4ee3f8f843c79f33f8120c7889ebeb1f871d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangePatternBound&lt;/em&gt;&lt;code&gt;..=&lt;/code&gt;&lt;em&gt;RangePatternBound&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangePatternBound&lt;/em&gt;&lt;code&gt;..=&lt;/code&gt;&lt;em&gt;RangePatternBound&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b91cce69b109a1113c0f1301b3921f6c0d8c9841" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeToExpr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangeToExpr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="056f04414a6072c6d8a7d5278b753371763d0866" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeToExpr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeToExpr&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c0a3c68e83ea112500ca6f8241341ce0c95b83e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeToInclusiveExpr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RangeToInclusiveExpr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="48d09923603391e16f14398b177229e34d2e4358" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RangeToInclusiveExpr&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RangeToInclusiveExpr&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="122d0ec9354f5c94b472176c44d7a71f69f7003b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Raw identifiers&lt;/em&gt; are the syntax that lets you use keywords where they wouldn&amp;rsquo;t normally be allowed. You use a raw identifier by prefixing a keyword with &lt;code&gt;r#&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;Необработанные идентификаторы&lt;/em&gt; - это синтаксис, позволяющий использовать ключевые слова там, где они обычно не допускаются. Вы используете необработанный идентификатор, добавляя к ключевому слову префикс &lt;code&gt;r#&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="beb7fd319e09e40c039ed0e647571be692b1855c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RawPointerType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;RawPointerType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="bbdab98148adb37f1fd44c8053155f959bcbd95a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ReferencePattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ReferencePattern&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="395e4a70cb5a7f0d9cf660245c9441944ed4492a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ReferenceType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ReferenceType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="b9c776700e56a1df9936d2c1a23ead233cc403bd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RestPattern&lt;/em&gt; :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009634e33886b0d3afe59323b0dfb20337a5713e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ReturnExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ReturnExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="6995779224fa4b3c0e17b2c0a7c11e16c2d79815" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;See &lt;a href=&quot;../unsafe-blocks&quot;&gt;&lt;code&gt;unsafe&lt;/code&gt; block&lt;/a&gt; for more information on when to use &lt;code&gt;unsafe&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;См. &lt;a href=&quot;../unsafe-blocks&quot;&gt;Блокировку &lt;/a&gt; &lt;code&gt;unsafe&lt;/code&gt; для получения дополнительной информации о том, когда использовать &lt;code&gt;unsafe&lt;/code&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ab791639c0e3785d063efb8b6c7566c0199d057f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;See also the function &lt;a href=&quot;fn.set_alloc_error_hook&quot;&gt;&lt;code&gt;set_alloc_error_hook&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;См. Также функцию &lt;a href=&quot;fn.set_alloc_error_hook&quot;&gt; &lt;code&gt;set_alloc_error_hook&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5813e441679317ceb3a63f6e1a90700dbc6169a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;See also the function &lt;a href=&quot;fn.set_hook&quot;&gt;&lt;code&gt;set_hook&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;См. Также функцию &lt;a href=&quot;fn.set_hook&quot;&gt; &lt;code&gt;set_hook&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d97539b5ffa0ef84ac1570d65777c1c03aa27113" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;See also the traits &lt;a href=&quot;ops/trait.fn&quot;&gt;&lt;code&gt;Fn&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;ops/trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;ops/trait.fnonce&quot;&gt;&lt;code&gt;FnOnce&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;См. Также &lt;a href=&quot;ops/trait.fnmut&quot;&gt; &lt;code&gt;FnMut&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;ops/trait.fn&quot;&gt; &lt;code&gt;Fn&lt;/code&gt; &lt;/a&gt; , FnMut и &lt;a href=&quot;ops/trait.fnonce&quot;&gt; &lt;code&gt;FnOnce&lt;/code&gt; &lt;/a&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42d2d11002016447d13712109a6707c15283f050" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;See the &lt;a href=&quot;index&quot;&gt;&lt;code&gt;pin&lt;/code&gt; module&lt;/a&gt; documentation for an explanation of pinning.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;См. Документацию по &lt;a href=&quot;index&quot;&gt; &lt;code&gt;pin&lt;/code&gt; модулю&lt;/a&gt; для объяснения закрепления.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5438bca624c396667e7b6deac3c984f7f2e82c10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SelfParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;SelfParam&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="db4af228731279d394e3046af1d9e82aa1512ac3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Shared-state&lt;/em&gt; concurrency, where multiple threads have access to some piece of data</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;Параллелизм с &lt;em&gt;общим состоянием&lt;/em&gt; , когда несколько потоков имеют доступ к некоторой части данных</target>
        </trans-unit>
        <trans-unit id="0d0d87d74a6f19db546222754efe847fa431550c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ShorthandSelf&lt;/em&gt; :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92f6128170d5621eab7e2ceb2d70a694ce8c6db" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SimplePath&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;SimplePath&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0b742875ad3c0b5a35438c2af92edfd0de93ba9d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SimplePath&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;SimplePath&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="68150a373debcb76a880319decd58fb043d731d6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SimplePathSegment&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;SimplePathSegment&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="0324cd3da292de895d59cdae2cacefbad3e79e47" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SlicePattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;SlicePattern&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="a6c0034e733b03b075024b92ab19b14a2b9f498d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SlicePatternItems&lt;/em&gt; :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96410cd37f6f4dea7c598221484d3b2edd47c848" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SliceType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;SliceType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8ff80eb69934e90a9bfaaff015c59b5ca994b9a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Smart pointers&lt;/em&gt;, on the other hand, are data structures that not only act like a pointer but also have additional metadata and capabilities. The concept of smart pointers isn&amp;rsquo;t unique to Rust: smart pointers originated in C++ and exist in other languages as well. In Rust, the different smart pointers defined in the standard library provide functionality beyond that provided by references. One example that we&amp;rsquo;ll explore in this chapter is the &lt;em&gt;reference counting&lt;/em&gt; smart pointer type. This pointer enables you to have multiple owners of data by keeping track of the number of owners and, when no owners remain, cleaning up the data.</source>
          <target state="translated">&lt;em&gt;С&lt;/em&gt; другой стороны, &lt;em&gt;интеллектуальные указатели&lt;/em&gt; - это структуры данных, которые не только действуют как указатели, но также имеют дополнительные метаданные и возможности. Концепция интеллектуальных указателей не уникальна для Rust: интеллектуальные указатели возникли в C ++ и существуют также на других языках. В Rust различные интеллектуальные указатели, определенные в стандартной библиотеке, обеспечивают функциональность, превышающую ту, которая предоставляется ссылками. Одним из примеров, который мы рассмотрим в этой главе, является тип интеллектуального указателя с &lt;em&gt;подсчетом ссылок&lt;/em&gt; . Этот указатель позволяет иметь несколько владельцев данных, отслеживая количество владельцев и, когда владельцев не осталось, очищая данные.</target>
        </trans-unit>
        <trans-unit id="253b660cc8be4465d9b8ddd37b6607dc6b51ea77" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Statement&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Заявление&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="26a623aabcd120adedebbfc207e47e8c9cfe6dbc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Statements&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Заявления&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f461b10420ba8e20055ecc8b1a33e58f3b5ee363" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Statements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;Statements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7ebdfb0ba3d68cd6c1c0c7c808149dc0f3e08735" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StaticItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StaticItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="d8f8c4e4ebe6a1807a58735dd36e3530ebfc7941" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Struct&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Структура&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="52de2279345f8eaf6d3b9e9c7795289b76503d5a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructBase&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructBase&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="3e68420d222a81975d88531202a554741fffad0f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprField&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;StructExprField&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;StructBase&lt;/em&gt; | &lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;)</source>
          <target state="translated">&lt;em&gt;StructExprField&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;StructExprField&lt;/em&gt; ) &lt;sup&gt;*&lt;/sup&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;StructBase&lt;/em&gt; | &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt; )</target>
        </trans-unit>
        <trans-unit id="ba0ff6935d6ae7e74f48961a1cc8ea925fb0432a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprField&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructExprField&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="524c2b5dba514f3a256359d4d6e99a80046aee79" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprFields&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructExprFields&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="1c7ac038df32af7bf2bedcfcebd8fee418a53e36" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprStruct&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;StructExprStruct&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="95f24431f7f433e9b111cdeb800975e2c6e55d0c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprStruct&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructExprStruct&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="6de6378cef86647803576068cd25d307bc2350b9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprTuple&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructExprTuple&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="61ababa832b8ff99e7349a379374adddff95127a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExprUnit&lt;/em&gt; : &lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;StructExprUnit&lt;/em&gt; : &lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92355bdddc574903ee30863a71b7025c51d74961" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="566e949e4f05b2c3cfb42ec91c7ec84804cfcce4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructField&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;StructField&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;StructField&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;StructField&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9a81102e1c82570d28ba1ed11e2d83d0367aef8a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructField&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructField&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="b287480750338275a7af1d6a5b7aad82bb060b6a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructFields&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructFields&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="2bc73189662b63d3361c96b56002244624e69b6d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructPattern&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="210e692a7c3e16c9edf54f6c2392a561a1618c7f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternElements&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructPatternElements&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="39d6ef08ece264673dc6b967b150bae385d05b06" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternElements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;StructPatternElements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="238986fb7c84a86b855335c64191a4e00b6cbb02" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternEtCetera&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructPatternEtCetera&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="dbf37477a9316ac6d3b788abc2dc349da0d57a12" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternField&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;StructPatternField&lt;/em&gt;) &lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;StructPatternField&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;StructPatternField&lt;/em&gt; ) &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9f596823fc1b43f97ed24051c4fd4ebb4203a65d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternField&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructPatternField&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f4a10981df34d23c369c9a6a0648c68dcbf8aaae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternFields&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt; | &lt;code&gt;,&lt;/code&gt;&lt;em&gt;StructPatternEtCetera&lt;/em&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;StructPatternFields&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; | &lt;code&gt;,&lt;/code&gt; &lt;em&gt;StructPatternEtCetera&lt;/em&gt; ) &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="fccf1153a8be4b68ce951da35c0661394670ab0f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructPatternFields&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructPatternFields&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="37314f8f642d31d4e4564ef3ba2e2309e3e2d3a8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructStruct&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;StructStruct&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="30c3ada6c51caeba99cd9d386f477d7aeaf83b53" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;StructStruct&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;StructStruct&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="697dfdce9bf3d9b41f94517d0194ddf489983e3a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This trait (&lt;code&gt;Fn&lt;/code&gt;) is not to be confused with &lt;a href=&quot;../primitive.fn&quot;&gt;function pointers&lt;/a&gt; (&lt;code&gt;fn&lt;/code&gt;).&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Эту черту ( &lt;code&gt;Fn&lt;/code&gt; ) не следует путать с &lt;a href=&quot;../primitive.fn&quot;&gt;указателями на функции&lt;/a&gt; ( &lt;code&gt;fn&lt;/code&gt; ).&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="91d944359a1bf8307d79c422c78262d9c0aec213" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TokenTree&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TokenTree&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="2017c51c85a49d1a852c3fbcde11cec60a9770fa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Trait&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Черта&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8f1b04dca43b7cfc7c69bb4af366545ceb5cac93" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitBound&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitBound&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="69592ca3ff1513e3be0359c2d1e9d62b068f9cfd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitConst&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitConst&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="97642c40f2a81ad79da9dd23372db0cae60029dd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunc&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TraitFunc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2bff8c8b32dfde9becdad8eae0c57efb0b637ebc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunc&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitFunc&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="ccb6375dd90976afd53f0381f82559e851230993" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunctionDecl&lt;/em&gt; ( &lt;code&gt;;&lt;/code&gt; | &lt;a href=&quot;../expressions/block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt; )</source>
          <target state="translated">&lt;em&gt;TraitFunctionDecl&lt;/em&gt; ( &lt;code&gt;;&lt;/code&gt; | &lt;a href=&quot;../expressions/block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="a8860991019f8c63d82dc67b054c4a0c9a23a4f1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunctionDecl&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitFunctionDecl&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="1edaa550e25dd7fde1873d474f96d031a4017cbd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunctionParam&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;TraitFunctionParam&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;TraitFunctionParam&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;TraitFunctionParam&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ecd1d61ce756e7673c6818d9a758948b783371ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunctionParam&lt;/em&gt;&lt;sup&gt;&lt;a href=&quot;#parameter-patterns&quot;&gt;&amp;dagger;&lt;/a&gt;&lt;/sup&gt; :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d10b607e829541bf1f81fd98aab71758f19f48" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunctionParam&lt;/em&gt;&lt;sup&gt;&lt;a href=&quot;traits#parameter-patterns&quot;&gt;&amp;dagger;&lt;/a&gt;&lt;/sup&gt; :</source>
          <target state="translated">&lt;em&gt;TraitFunctionParam &lt;/em&gt;&lt;sup&gt;&lt;a href=&quot;traits#parameter-patterns&quot;&gt;&amp;dagger;&lt;/a&gt;&lt;/sup&gt; :</target>
        </trans-unit>
        <trans-unit id="a304cd39ecff7dfdf794e47ad36c15dfbbc30542" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitFunctionParameters&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Параметры TraitFunction&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="75defe812406ddb68a95aeda39c25e43d70aa012" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitImpl&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitImpl&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c39bd3ba05d7bf507ec884d8e1702a2c0b69c5b0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitImplItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitImplItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="e93aaffcb29c8c74184121078f4b21b7c5416378" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitImplItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;TraitImplItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9615e2378bf81154c725f2b3d137b61337d67b8e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c432af0ce759fb8a417605aca32e642204b833dd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;TraitItem&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="bf4c27a989d13969f392dc056bde2eb918b684f2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitMethod&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitMethod&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="791b15e5455d4a95a0273c137120e140492b3e97" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitMethodDecl&lt;/em&gt; ( &lt;code&gt;;&lt;/code&gt; | &lt;a href=&quot;../expressions/block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt; )</source>
          <target state="translated">&lt;em&gt;TraitMethodDecl&lt;/em&gt; ( &lt;code&gt;;&lt;/code&gt; | &lt;a href=&quot;../expressions/block-expr&quot;&gt;&lt;em&gt;Выражение блока&lt;/em&gt;&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="23e30546f4c27238213b7a7d90d7983989fd08a0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitMethodDecl&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitMethodDecl&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f845415b3371af4a9129112e68d3ca8790ac2c2f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitObjectType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitObjectType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="559a479177d1c18edecb461b5ab5dafaa0b24a60" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitObjectTypeOneBound&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitObjectTypeOneBound&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="00367738ee72462454e7cefc5497751d3b2dd2d8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TraitType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TraitType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="88fb9e46d8f66f4eefea0a0d09b786fb08ff77bb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleElements&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleElements&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="82ca008d064e6f22f73764cbb41705b3661743c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="b2be422d56678c4beb25054bbb013f90df3f36ad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleField&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;TupleField&lt;/em&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;TupleField&lt;/em&gt; ( &lt;code&gt;,&lt;/code&gt; &lt;em&gt;TupleField&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;,&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d1964c69c34169ddb45c023b8f6ad7804e8784a9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleField&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleField&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="7f2fc45439a6ac05238e8033d3cafbac51cca003" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleFields&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleFields&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="8b561f8148edf91fc8ceba4d6d7f08151b328e44" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleIndexingExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleIndexingExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="82636c0586552b7db7833ce549c8c2fee23bca69" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TuplePattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TuplePattern&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="28bab88d51b0299abc9e03fea50716b7fc4cb76e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TuplePatternItems&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TuplePatternItems&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="63a42f8cc9d12ee22bbd928872038e51b2e84a96" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleStruct&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleStruct&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="55b0f11f035f5785aec4eee7a34e3cd60a0b8788" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleStructItems&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleStructItems&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="e626c4062aed9330f99f19598396153bc65ab2c4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleStructPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleStructPattern&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="b0af4e3e1c043681b4e7e98dd6f497431ff99f36" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TupleType&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TupleType&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="36197e9dcc19894ea01b3a33c74db9be233fa5b2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Type&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Type&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="acb7cfdb169b01b2056fd4b70ce695b6dce975ab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Type&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Тип&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="6580f30f2fbb91f0c202a16b5526ebec104ef496" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeAlias&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ТипАлиасы&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="a85ec990c24c83498baea143d931c7990a230d47" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeBoundWhereClauseItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypeBoundWhereClauseItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="cee61c431d57aafff44991227e4c69fe1cdf53de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeCastExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;ТипCastExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f1cd8e81e1617639d66de79aea2715d0ace7acad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeNoBounds&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TypeNoBounds&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5424aab74d0d2fe39cdbd91f014de769d880a226" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeNoBounds&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Тип Нет Границы&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="5d9c8a26eb599b91e226d0a8bce641cb0ac7132f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeParam&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypeParam&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="80fe390e286fbce96ff6498e206bd07fcdb725b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeParamBound&lt;/em&gt; ( &lt;code&gt;+&lt;/code&gt;&lt;em&gt;TypeParamBound&lt;/em&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;+&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;em&gt;TypeParamBound&lt;/em&gt; ( &lt;code&gt;+&lt;/code&gt; &lt;em&gt;TypeParamBound&lt;/em&gt; ) &lt;sup&gt;* &lt;/sup&gt; &lt;code&gt;+&lt;/code&gt; &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0191bd504228dd677a10483ab9eb36cde3d82d86" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeParamBound&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypeParamBound&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="149b7266088edec9953b0bb5ea7594bff53ee9e3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeParamBounds&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypeParamBounds&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="323f8099b5cc4fcb6313ce7c8ad6f5c5b99c7699" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypeParams&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;TypeParams&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="3e8dd9667f560979efe1f5c373fccd047664263f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypePath&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypePath&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="ec3b0747981182a147f649cbca42c150573d2cbb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypePathFn&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypePathFn&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="adac299c0d146ed47076cfb530c5e9cad37370c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypePathFnInputs&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypePathFnInputs&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="5d0639cb5518a2640ee102f46e684dc647486f0a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypePathSegment&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;TypePathSegment&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="46b4c6aa12174d14d88aacb98289adcf0f462615" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypedSelf&lt;/em&gt; :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8474ac4310cfa625a58db09eda48a6193fdce3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Union&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Союз&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="ef35f21f99ec1e61037f284bf1cabe5f9e9e272b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;UnsafeBlockExpression&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;UnsafeBlockExpression&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="4054dfafbaa8bb2a66ecccf5b3ebb00ee96ffe74" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;UseDeclaration&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Заявление об использовании&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="f50876417424d4d896476cb7f20d89dd7713485a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;UseTree&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;UseTree&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="71ebdef7d7317084043d257adb8cb88491987d82" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;VisItem&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;VisItem&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43fd81989c8fb8be977c8584a63a2a9b4265eb46" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;VisItem&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;VisItem&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="2ccf92fd74eccfb92144612b5643b6134e7f98b2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Visibility&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;Видимость&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="d45de78fa9ccdf83478ce3380d866ccb6658db66" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Where clauses&lt;/em&gt; provide another way to specify bounds on type and lifetime parameters as well as a way to specify bounds on types that aren't type parameters.</source>
          <target state="translated">&lt;em&gt;Предложения Where&lt;/em&gt; предоставляют другой способ указать границы для параметров типа и времени жизни, а также способ указать границы для типов, которые не являются параметрами типа.</target>
        </trans-unit>
        <trans-unit id="ff786522e51ee848c23ade94d46bd1a722a44ef6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;WhereClause&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;WhereClause&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="2f425d58e216b8abdf730282aec2e2ced920cf8e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;WhereClauseItem&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;WhereClauseItem&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="5754695102dfe3cd0f49e9d18dc6e5bd798aace5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;WildcardPattern&lt;/em&gt; :</source>
          <target state="translated">&lt;em&gt;WildcardPattern&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="302c963be9788a72ba07e67b0021b52f4c796ab2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;any ASCII (i.e 0x00 to 0x7F), except&lt;/em&gt;&lt;code&gt;&quot;&lt;/code&gt;, &lt;code&gt;\&lt;/code&gt;&lt;em&gt;and IsolatedCR&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;любой ASCII (например, от 0x00 до 0x7F), кроме &lt;/em&gt; &lt;code&gt;&quot;&lt;/code&gt; , &lt;code&gt;\&lt;/code&gt; &lt;em&gt;и IsolatedCR&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b45bef9788c16b898f5430e15f0ffd77c1e56277" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;any ASCII (i.e. 0x00 to 0x7F), except&lt;/em&gt;&lt;code&gt;'&lt;/code&gt;, &lt;code&gt;\&lt;/code&gt;, \n, \r or \t</source>
          <target state="translated">&lt;em&gt;любой ASCII (например, от 0x00 до 0x7F), кроме &lt;/em&gt; &lt;code&gt;'&lt;/code&gt; , &lt;code&gt;\&lt;/code&gt; , \ n, \ r или \ t</target>
        </trans-unit>
        <trans-unit id="1f7743746809b99884ae23fba74c25051171b18d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;any ASCII (i.e. 0x00 to 0x7F)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;любой ASCII (например, от 0x00 до 0x7F)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d2c2a89bc15e15ebf0ac33105fd923646f79fb71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;by Steve Klabnik and Carol Nichols, with contributions from the Rust Community&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Стива Клабника и Кэрол Николс при участии сообщества Rust&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="11422e22a39de0af093535e24fc8505d168c2bb0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;nothing&lt;/em&gt; &amp;rArr; &lt;a href=&quot;trait.display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;ничего&lt;/em&gt; &amp;rArr; &lt;a href=&quot;trait.display&quot;&gt; &lt;code&gt;Display&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f06557a4f67dee5e955068615617812bd7b49d0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.__pad0&quot;&gt;&lt;code id=&quot;__pad0.v&quot;&gt;__pad0: &lt;a href=&quot;../../raw/type.c_int&quot;&gt;c_int&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.__pad0&quot;&gt; &lt;code id=&quot;__pad0.v&quot;&gt;__pad0: &lt;a href=&quot;../../raw/type.c_int&quot;&gt;c_int&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5e1ec0ce159f0bf33609a539da0e8047872a5461" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.__pad0&quot;&gt;&lt;code&gt;__pad0: &lt;a href=&quot;../../raw/type.c_int&quot;&gt;c_int&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5677f02800461e733fbf31ef92f786a12d6f671e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.__unused&quot;&gt;&lt;code id=&quot;__unused.v&quot;&gt;__unused: &lt;a href=&quot;../../../primitive.array&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;a href=&quot;../../../primitive.array&quot;&gt;; 3]&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.__unused&quot;&gt; &lt;code id=&quot;__unused.v&quot;&gt;__unused: &lt;a href=&quot;../../../primitive.array&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;a href=&quot;../../../primitive.array&quot;&gt;; 3]&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f25b268817165a1d1b6181b50cec9782caef003c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.__unused&quot;&gt;&lt;code&gt;__unused: &lt;a href=&quot;../../../primitive.array&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;a href=&quot;../../../primitive.array&quot;&gt;; 3]&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8810ba453083a9187a21a12b15eb7a149bea36c1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.data&quot;&gt;&lt;code id=&quot;data.v&quot;&gt;data: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.data&quot;&gt; &lt;code id=&quot;data.v&quot;&gt;data: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fdb6f43554d85ed83513a5c7252de168465fb0e4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.data&quot;&gt;&lt;code&gt;data: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da329b4a7a67a97d64b4cf6cc5010bf78c39c6d9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.end&quot;&gt;&lt;code id=&quot;end.v&quot;&gt;end: Idx&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.end&quot;&gt; &lt;code id=&quot;end.v&quot;&gt;end: Idx&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e8b9e5128ed96063cbde046917d3e1bbf68695aa" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.end&quot;&gt;&lt;code&gt;end: Idx&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c64e45c6930570347f7cc67847b4c4b931ac0a1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.gid&quot;&gt;&lt;code&gt;gid: gid_t&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13577b6feccf3971f23407018824a3bef45ebf9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.major&quot;&gt;&lt;code id=&quot;major.v&quot;&gt;major: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.major&quot;&gt; &lt;code id=&quot;major.v&quot;&gt;major: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="180d30d6da1a5642ab4b3ac7ec2eaa9132a9a0f7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.micro&quot;&gt;&lt;code id=&quot;micro.v&quot;&gt;micro: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.micro&quot;&gt; &lt;code id=&quot;micro.v&quot;&gt;micro: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="416703e1955def8a64303bc8dc479d6065856279" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.minor&quot;&gt;&lt;code id=&quot;minor.v&quot;&gt;minor: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.minor&quot;&gt; &lt;code id=&quot;minor.v&quot;&gt;minor: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="476428f21b8eae584ac05efe5a7ca97fd4472841" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.pid&quot;&gt;&lt;code&gt;pid: &lt;a href=&quot;../../../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;pid_t&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a043f1f7253ee911b4231525dd4e3356df5001" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_atime&quot;&gt;&lt;code id=&quot;st_atime.v&quot;&gt;st_atime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_atime&quot;&gt; &lt;code id=&quot;st_atime.v&quot;&gt;st_atime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="88a8aea8817a162eae78ae613a911f9515b12e77" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_atime&quot;&gt;&lt;code&gt;st_atime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6395466b333dbe35b1ed9267380cf6ebc61b7c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_atime_nsec&quot;&gt;&lt;code id=&quot;st_atime_nsec.v&quot;&gt;st_atime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_atime_nsec&quot;&gt; &lt;code id=&quot;st_atime_nsec.v&quot;&gt;st_atime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c4e975d6ca926760badf0484e88c1a5f80eca5f4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_atime_nsec&quot;&gt;&lt;code&gt;st_atime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084cbb4253fac525903fe6cb3af050f521ae48ab" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_blksize&quot;&gt;&lt;code id=&quot;st_blksize.v&quot;&gt;st_blksize: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_blksize&quot;&gt; &lt;code id=&quot;st_blksize.v&quot;&gt;st_blksize: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="48a0fa6c395adf1bb23a13ffa2bce13424bd28fc" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_blksize&quot;&gt;&lt;code&gt;st_blksize: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3971e6c694e7fbd63db0f0bedebd2c9b3181e73" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_blocks&quot;&gt;&lt;code id=&quot;st_blocks.v&quot;&gt;st_blocks: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_blocks&quot;&gt; &lt;code id=&quot;st_blocks.v&quot;&gt;st_blocks: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6945bffecc2f13d9645db5caacf7e1030679d781" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_blocks&quot;&gt;&lt;code&gt;st_blocks: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dfcbef09a11b9bfd30285716478de2f114a05da" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_ctime&quot;&gt;&lt;code id=&quot;st_ctime.v&quot;&gt;st_ctime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_ctime&quot;&gt; &lt;code id=&quot;st_ctime.v&quot;&gt;st_ctime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="edc993fddf1468bf720f4a004b1781cd0247b2b6" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_ctime&quot;&gt;&lt;code&gt;st_ctime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29688f2aab6b1e81b77a9bd8f260ec2ebac3c0ba" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_ctime_nsec&quot;&gt;&lt;code id=&quot;st_ctime_nsec.v&quot;&gt;st_ctime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_ctime_nsec&quot;&gt; &lt;code id=&quot;st_ctime_nsec.v&quot;&gt;st_ctime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="90fc7a304723be5ac1943a1cdcb5bcdb9513abcb" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_ctime_nsec&quot;&gt;&lt;code&gt;st_ctime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9697dcc912c6b9171594847f38a2631d99d4bfc7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_dev&quot;&gt;&lt;code id=&quot;st_dev.v&quot;&gt;st_dev: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_dev&quot;&gt; &lt;code id=&quot;st_dev.v&quot;&gt;st_dev: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="aae51ed6eee425239a8e272db02939e8e535ecf4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_dev&quot;&gt;&lt;code&gt;st_dev: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e708b7c08677d2226d492b09bc57f021de593f4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_gid&quot;&gt;&lt;code id=&quot;st_gid.v&quot;&gt;st_gid: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_gid&quot;&gt; &lt;code id=&quot;st_gid.v&quot;&gt;st_gid: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="269b3cf908b2551f4daa8c06c81968f18dbb5f76" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_gid&quot;&gt;&lt;code&gt;st_gid: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537f8b3679513c1355553fedd3faf79ae6540555" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_ino&quot;&gt;&lt;code id=&quot;st_ino.v&quot;&gt;st_ino: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_ino&quot;&gt; &lt;code id=&quot;st_ino.v&quot;&gt;st_ino: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c5d10a1e4e57c55f42b4f0cd802e346972bdf14e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_ino&quot;&gt;&lt;code&gt;st_ino: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5a73d56e9ec1691cc0b77c93c60d9eb6ae0127" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_mode&quot;&gt;&lt;code id=&quot;st_mode.v&quot;&gt;st_mode: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_mode&quot;&gt; &lt;code id=&quot;st_mode.v&quot;&gt;st_mode: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f10b68554011c826c4899b80165cae5748240a97" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_mode&quot;&gt;&lt;code&gt;st_mode: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413b5e14b5dfc07ddd073f68f742388395ec9660" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_mtime&quot;&gt;&lt;code id=&quot;st_mtime.v&quot;&gt;st_mtime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_mtime&quot;&gt; &lt;code id=&quot;st_mtime.v&quot;&gt;st_mtime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1b5fa7ffa0d8126091accdc7cc7e3e604d76d818" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_mtime&quot;&gt;&lt;code&gt;st_mtime: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534c9e596a4c78975da3107baefb599a862104f3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_mtime_nsec&quot;&gt;&lt;code id=&quot;st_mtime_nsec.v&quot;&gt;st_mtime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_mtime_nsec&quot;&gt; &lt;code id=&quot;st_mtime_nsec.v&quot;&gt;st_mtime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6d2283b04e01fcf1ca7c120d2393f33f9ebe0654" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_mtime_nsec&quot;&gt;&lt;code&gt;st_mtime_nsec: &lt;a href=&quot;../../raw/type.c_long&quot;&gt;c_long&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5692c36ead107be34df7bdeb0d0074f52b37a5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_nlink&quot;&gt;&lt;code id=&quot;st_nlink.v&quot;&gt;st_nlink: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_nlink&quot;&gt; &lt;code id=&quot;st_nlink.v&quot;&gt;st_nlink: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="aaef2f6dd9cb690e3547c40960e56eac25e35aa5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_nlink&quot;&gt;&lt;code&gt;st_nlink: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1273a6096f46f541222315f10648ed37ee993ea9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_rdev&quot;&gt;&lt;code id=&quot;st_rdev.v&quot;&gt;st_rdev: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_rdev&quot;&gt; &lt;code id=&quot;st_rdev.v&quot;&gt;st_rdev: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9d7902079131a46d648f876bef957657ff6bf071" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_rdev&quot;&gt;&lt;code&gt;st_rdev: &lt;a href=&quot;../../../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7bf2eea86eaa3c6a503716f0877168d1e72843" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_size&quot;&gt;&lt;code id=&quot;st_size.v&quot;&gt;st_size: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_size&quot;&gt; &lt;code id=&quot;st_size.v&quot;&gt;st_size: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8f45e5f13815f0f3c5aab5d2a1b277e8033f6f4e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_size&quot;&gt;&lt;code&gt;st_size: &lt;a href=&quot;../../../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb60037ec6366dc35d9714f06b0fd9c774f5d44" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_uid&quot;&gt;&lt;code id=&quot;st_uid.v&quot;&gt;st_uid: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.st_uid&quot;&gt; &lt;code id=&quot;st_uid.v&quot;&gt;st_uid: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d46f8dcd45364b35d76d33b85e0f0ed1f2e7634e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.st_uid&quot;&gt;&lt;code&gt;st_uid: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddff13a75a62b336450792dac9389705ff5535e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.start&quot;&gt;&lt;code id=&quot;start.v&quot;&gt;start: Idx&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.start&quot;&gt; &lt;code id=&quot;start.v&quot;&gt;start: Idx&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="af8b3af2aa4614858b6950e276c3acf0a64c1e3f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.start&quot;&gt;&lt;code&gt;start: Idx&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595c429917c7e83bb5ea003723a3dad4fbc3892c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.status&quot;&gt;&lt;code id=&quot;status.v&quot;&gt;status: &lt;a href=&quot;struct.exitstatus&quot;&gt;ExitStatus&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.status&quot;&gt; &lt;code id=&quot;status.v&quot;&gt;status: &lt;a href=&quot;struct.exitstatus&quot;&gt;ExitStatus&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e93eabd5593b023c6dfc2bca04c10c2de5ca2b42" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.status&quot;&gt;&lt;code&gt;status: &lt;a href=&quot;struct.exitstatus&quot;&gt;ExitStatus&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825360808bc06e18c7f2405dabacd498f4219908" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stderr&quot;&gt;&lt;code id=&quot;stderr.v&quot;&gt;stderr: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstderr&quot;&gt;ChildStderr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.stderr&quot;&gt; &lt;code id=&quot;stderr.v&quot;&gt;stderr: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstderr&quot;&gt;ChildStderr&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="98259434ff21e599526464c9c321fa1c184d2e5b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stderr&quot;&gt;&lt;code id=&quot;stderr.v&quot;&gt;stderr: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.stderr&quot;&gt; &lt;code id=&quot;stderr.v&quot;&gt;stderr: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="84185b3536ebac67ee0dbc7a30674d4e9008394b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stderr&quot;&gt;&lt;code&gt;stderr: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstderr&quot;&gt;ChildStderr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f4ca3fb543feec14cd5def103671639160d8d0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stderr&quot;&gt;&lt;code&gt;stderr: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b26a9e0d20f6cfab3b55fbedd302f4e67d3a6c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stdin&quot;&gt;&lt;code id=&quot;stdin.v&quot;&gt;stdin: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstdin&quot;&gt;ChildStdin&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.stdin&quot;&gt; &lt;code id=&quot;stdin.v&quot;&gt;stdin: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstdin&quot;&gt;ChildStdin&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2530b82852eab389bdd6b2c66096b3200041a8a1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stdin&quot;&gt;&lt;code&gt;stdin: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstdin&quot;&gt;ChildStdin&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0a7a091d0d9050c602ca56d1525931ad7deea2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stdout&quot;&gt;&lt;code id=&quot;stdout.v&quot;&gt;stdout: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstdout&quot;&gt;ChildStdout&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.stdout&quot;&gt; &lt;code id=&quot;stdout.v&quot;&gt;stdout: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstdout&quot;&gt;ChildStdout&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="df1647dd486f6b3f232e94bbe3907a6c0233f73d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stdout&quot;&gt;&lt;code id=&quot;stdout.v&quot;&gt;stdout: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.stdout&quot;&gt; &lt;code id=&quot;stdout.v&quot;&gt;stdout: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5492098d95b1f1e5c8fa566a2fdc8f661c57749b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stdout&quot;&gt;&lt;code&gt;stdout: &lt;a href=&quot;../option/enum.option&quot;&gt;Option&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstdout&quot;&gt;ChildStdout&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6edc4e223688c13e4eb4c29bfa7ef2147fb7e0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.stdout&quot;&gt;&lt;code&gt;stdout: &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba907a731ad6441fe9f4a5e76b930e72328ce89" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.uid&quot;&gt;&lt;code&gt;uid: uid_t&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5df205eb14bf75f9a41d2d8686bf3e7bbd3b5a7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.vtable&quot;&gt;&lt;code id=&quot;vtable.v&quot;&gt;vtable: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;structfield.vtable&quot;&gt; &lt;code id=&quot;vtable.v&quot;&gt;vtable: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a76113e12c1d2c555f776fe8a9bcc0b42963a6c3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;structfield.vtable&quot;&gt;&lt;code&gt;vtable: &lt;a href=&quot;../primitive.pointer&quot;&gt;*mut &lt;/a&gt;&lt;a href=&quot;../primitive.unit&quot;&gt;()&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946b4825a836b123aed1b0db3bdee153a15764b5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AcqRel&quot;&gt;&lt;code id=&quot;AcqRel.v&quot;&gt;AcqRel&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AcqRel&quot;&gt;&lt;code id=&quot;AcqRel.v&quot;&gt;AcqRel&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4230cc993ac07ca6573267284010ddeec6c0e7b1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Acquire&quot;&gt;&lt;code id=&quot;Acquire.v&quot;&gt;Acquire&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Acquire&quot;&gt;&lt;code id=&quot;Acquire.v&quot;&gt;Acquire&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dc03c50ab33c44b4d36f66bde38b884449d85298" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AddrInUse&quot;&gt;&lt;code id=&quot;AddrInUse.v&quot;&gt;AddrInUse&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AddrInUse&quot;&gt;&lt;code id=&quot;AddrInUse.v&quot;&gt;AddrInUse&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1e2f3ad358c4f9376ca5812807bdd724fa113d13" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AddrNotAvailable&quot;&gt;&lt;code id=&quot;AddrNotAvailable.v&quot;&gt;AddrNotAvailable&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AddrNotAvailable&quot;&gt;&lt;code id=&quot;AddrNotAvailable.v&quot;&gt;AddrNotAvailable&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a44f465c3041a29d11e1e21b6969999191177828" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AdminLocal&quot;&gt;&lt;code id=&quot;AdminLocal.v&quot;&gt;AdminLocal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AdminLocal&quot;&gt;&lt;code id=&quot;AdminLocal.v&quot;&gt;AdminLocal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4a1aab14de7e04e1624f4f2b9dc6fdff082be47a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AllocErr&quot;&gt;&lt;code id=&quot;AllocErr.v&quot;&gt;AllocErr&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AllocErr&quot;&gt;&lt;code id=&quot;AllocErr.v&quot;&gt;AllocErr&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6aea25cc850b5b0669f632bb78a8cb03d3b1012f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AllocError.field.layout&quot;&gt;&lt;code&gt;layout:&amp;nbsp;&lt;a href=&quot;../alloc/struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AllocError.field.layout&quot;&gt;&lt;code&gt;layout:&amp;nbsp;&lt;a href=&quot;../alloc/struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8c56e960d29aea402847dc3cb9c2765608c50e01" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.AlreadyExists&quot;&gt;&lt;code id=&quot;AlreadyExists.v&quot;&gt;AlreadyExists&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.AlreadyExists&quot;&gt;&lt;code id=&quot;AlreadyExists.v&quot;&gt;AlreadyExists&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2103b11c02c41b20de7b764371ab1bb036ab3215" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Borrowed&quot;&gt;&lt;code id=&quot;Borrowed.v&quot;&gt;Borrowed(&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;'a &lt;/a&gt;B)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Borrowed&quot;&gt; &lt;code id=&quot;Borrowed.v&quot;&gt;Borrowed(&lt;a href=&quot;../primitive.reference&quot;&gt;&amp;amp;'a &lt;/a&gt;B)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e4494920de112b3e89be4c3786787e2a871ce5a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Both&quot;&gt;&lt;code id=&quot;Both.v&quot;&gt;Both&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Both&quot;&gt;&lt;code id=&quot;Both.v&quot;&gt;Both&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="195633d52548a9956e44a14bb98d903a93470814" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.BrokenPipe&quot;&gt;&lt;code id=&quot;BrokenPipe.v&quot;&gt;BrokenPipe&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.BrokenPipe&quot;&gt;&lt;code id=&quot;BrokenPipe.v&quot;&gt;BrokenPipe&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c06dc18f824fba3f7eed99af71c6c15e25b0f467" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.CapacityOverflow&quot;&gt;&lt;code id=&quot;CapacityOverflow.v&quot;&gt;CapacityOverflow&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.CapacityOverflow&quot;&gt;&lt;code id=&quot;CapacityOverflow.v&quot;&gt;CapacityOverflow&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="119cdee165ba265ebe5e4af818c7cf2037a1cdee" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Center&quot;&gt;&lt;code id=&quot;Center.v&quot;&gt;Center&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Center&quot;&gt;&lt;code id=&quot;Center.v&quot;&gt;Center&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="19bc00cf17ef0759c612db31b403eb94011a38f4" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Complete&quot;&gt;&lt;code id=&quot;Complete.v&quot;&gt;Complete(R)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Complete&quot;&gt;&lt;code id=&quot;Complete.v&quot;&gt;Complete(R)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a14409bce0e2fae9b46e220d9d0c91d82f930c2a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.ConnectionAborted&quot;&gt;&lt;code id=&quot;ConnectionAborted.v&quot;&gt;ConnectionAborted&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.ConnectionAborted&quot;&gt;&lt;code id=&quot;ConnectionAborted.v&quot;&gt;ConnectionAborted&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9b8f4dcd7d9a633c50319b6e301160353718a09b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.ConnectionRefused&quot;&gt;&lt;code id=&quot;ConnectionRefused.v&quot;&gt;ConnectionRefused&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.ConnectionRefused&quot;&gt;&lt;code id=&quot;ConnectionRefused.v&quot;&gt;ConnectionRefused&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fb1ea9fb34f773addb085d7bcfeffdf0a1415e16" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.ConnectionReset&quot;&gt;&lt;code id=&quot;ConnectionReset.v&quot;&gt;ConnectionReset&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.ConnectionReset&quot;&gt;&lt;code id=&quot;ConnectionReset.v&quot;&gt;ConnectionReset&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ce7593f8f4bb701502df6d50e2a38596b5c8a53d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.CurDir&quot;&gt;&lt;code id=&quot;CurDir.v&quot;&gt;CurDir&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.CurDir&quot;&gt;&lt;code id=&quot;CurDir.v&quot;&gt;CurDir&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="84c1a1e1ada471c42be621e237a9254c3b5880aa" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Current&quot;&gt;&lt;code id=&quot;Current.v&quot;&gt;Current(&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Current&quot;&gt;&lt;code id=&quot;Current.v&quot;&gt;Current(&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8555525de0dceb6fc1426858d8f93bcde834077e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.DeviceNS&quot;&gt;&lt;code id=&quot;DeviceNS.v&quot;&gt;DeviceNS(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.DeviceNS&quot;&gt; &lt;code id=&quot;DeviceNS.v&quot;&gt;DeviceNS(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dd839a797c1a40f3f1e67eb9f42850b9214871d8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Disconnected&quot;&gt;&lt;code id=&quot;Disconnected.v&quot;&gt;Disconnected(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Disconnected&quot;&gt;&lt;code id=&quot;Disconnected.v&quot;&gt;Disconnected(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="233b8a56070e10c5a6edb89ca81599295404f11c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Disconnected&quot;&gt;&lt;code id=&quot;Disconnected.v&quot;&gt;Disconnected&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Disconnected&quot;&gt;&lt;code id=&quot;Disconnected.v&quot;&gt;Disconnected&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c0eb1ad83d989c28d2123be40143869034589ee9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Disk&quot;&gt;&lt;code id=&quot;Disk.v&quot;&gt;Disk(&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Disk&quot;&gt;&lt;code id=&quot;Disk.v&quot;&gt;Disk(&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6e365e1d981853ff8abacf24d6c798e85b26da8b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Done&quot;&gt;&lt;code id=&quot;Done.v&quot;&gt;Done&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Done&quot;&gt;&lt;code id=&quot;Done.v&quot;&gt;Done&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ebd1e2656a25389b38042a2ee93aa0b0274a99a9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Empty&quot;&gt;&lt;code id=&quot;Empty.v&quot;&gt;Empty&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Empty&quot;&gt;&lt;code id=&quot;Empty.v&quot;&gt;Empty&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0a848e76f7264564f321770ded44bb9b7a1b6a35" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.End&quot;&gt;&lt;code id=&quot;End.v&quot;&gt;End(&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.End&quot;&gt;&lt;code id=&quot;End.v&quot;&gt;End(&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8723331951b34d82be19c1ce625b1ee6fce56d46" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Equal&quot;&gt;&lt;code id=&quot;Equal.v&quot;&gt;Equal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Equal&quot;&gt;&lt;code id=&quot;Equal.v&quot;&gt;Equal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f2ab196f2f7910502ba63d388b2f3e81b93c0c1e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Err&quot;&gt;&lt;code id=&quot;Err.v&quot;&gt;Err(E)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Err&quot;&gt;&lt;code id=&quot;Err.v&quot;&gt;Err(E)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b06630fdb5853b0a418ffdd873576b5d9c8e2b2b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Excluded&quot;&gt;&lt;code id=&quot;Excluded.v&quot;&gt;Excluded(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Excluded&quot;&gt;&lt;code id=&quot;Excluded.v&quot;&gt;Excluded(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cd86649b7c0dfd7f171f39f3053fd365094c5c2f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Full&quot;&gt;&lt;code id=&quot;Full.v&quot;&gt;Full(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Full&quot;&gt;&lt;code id=&quot;Full.v&quot;&gt;Full(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0530d6c549164d07b8b93ef5281b06fb1cb9fe7b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Global&quot;&gt;&lt;code id=&quot;Global.v&quot;&gt;Global&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Global&quot;&gt;&lt;code id=&quot;Global.v&quot;&gt;Global&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="c6051a7f005811e75ec6c3941285e0a20030184a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Greater&quot;&gt;&lt;code id=&quot;Greater.v&quot;&gt;Greater&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Greater&quot;&gt;&lt;code id=&quot;Greater.v&quot;&gt;Greater&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="28027264a8441670c966494a873a91c837582fed" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Included&quot;&gt;&lt;code id=&quot;Included.v&quot;&gt;Included(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Included&quot;&gt;&lt;code id=&quot;Included.v&quot;&gt;Included(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="97b749903f93feeafc24b841c8f5eab4658dac32" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Infinite&quot;&gt;&lt;code id=&quot;Infinite.v&quot;&gt;Infinite&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Infinite&quot;&gt;&lt;code id=&quot;Infinite.v&quot;&gt;Infinite&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="29801ef3d9b2a5ad56cd3314f21e2ed90897033b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.InterfaceLocal&quot;&gt;&lt;code id=&quot;InterfaceLocal.v&quot;&gt;InterfaceLocal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.InterfaceLocal&quot;&gt;&lt;code id=&quot;InterfaceLocal.v&quot;&gt;InterfaceLocal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a153734777372f0e6fe6c60d5d2d4e768d9a00e2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Interrupted&quot;&gt;&lt;code id=&quot;Interrupted.v&quot;&gt;Interrupted&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Interrupted&quot;&gt;&lt;code id=&quot;Interrupted.v&quot;&gt;Interrupted&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="944cde559a80f504150d19aac1a4186667a904f3" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.InvalidData&quot;&gt;&lt;code id=&quot;InvalidData.v&quot;&gt;InvalidData&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.InvalidData&quot;&gt;&lt;code id=&quot;InvalidData.v&quot;&gt;InvalidData&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="861dfeecaacd5ddd3f7f53e4e01501b19aed3c2e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.InvalidDigit&quot;&gt;&lt;code id=&quot;InvalidDigit.v&quot;&gt;InvalidDigit&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.InvalidDigit&quot;&gt;&lt;code id=&quot;InvalidDigit.v&quot;&gt;InvalidDigit&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cec6b2f0a96ccb9826f2699dd136b03c65975f65" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.InvalidInput&quot;&gt;&lt;code id=&quot;InvalidInput.v&quot;&gt;InvalidInput&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.InvalidInput&quot;&gt;&lt;code id=&quot;InvalidInput.v&quot;&gt;InvalidInput&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1c48a08f5e35337d1285fa3d1f5ea2fa86b8980a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Left&quot;&gt;&lt;code id=&quot;Left.v&quot;&gt;Left&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Left&quot;&gt;&lt;code id=&quot;Left.v&quot;&gt;Left&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bfc5b4925fbc65a6078ed6e61288122455b8da20" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Less&quot;&gt;&lt;code id=&quot;Less.v&quot;&gt;Less&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Less&quot;&gt;&lt;code id=&quot;Less.v&quot;&gt;Less&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="04c2e527909a275828dbb2bc9c176ac1614afb9a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.LinkLocal&quot;&gt;&lt;code id=&quot;LinkLocal.v&quot;&gt;LinkLocal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.LinkLocal&quot;&gt;&lt;code id=&quot;LinkLocal.v&quot;&gt;LinkLocal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3a3be082674449bec271275edbb5b3bdedbea9cf" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Match&quot;&gt;&lt;code id=&quot;Match.v&quot;&gt;Match(&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Match&quot;&gt;&lt;code id=&quot;Match.v&quot;&gt;Match(&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="33c57e7136af06da2673c92afbecc78b42d4bb8d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Nan&quot;&gt;&lt;code id=&quot;Nan.v&quot;&gt;Nan&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Nan&quot;&gt;&lt;code id=&quot;Nan.v&quot;&gt;Nan&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1833b9dfa5fa15a79300095828f4a1061fcca6ae" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.None&quot;&gt;&lt;code id=&quot;None.v&quot;&gt;None&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.None&quot;&gt;&lt;code id=&quot;None.v&quot;&gt;None&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8b7f9960f8fede66e69c8346c0fe55971b394846" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Normal&quot;&gt;&lt;code id=&quot;Normal.v&quot;&gt;Normal(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Normal&quot;&gt; &lt;code id=&quot;Normal.v&quot;&gt;Normal(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="73e37be22e9836d151f22b696fa4cc08cde49c7a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Normal&quot;&gt;&lt;code id=&quot;Normal.v&quot;&gt;Normal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Normal&quot;&gt;&lt;code id=&quot;Normal.v&quot;&gt;Normal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="302bdd905be9ba572bf55602011599880b543fb0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.NotConnected&quot;&gt;&lt;code id=&quot;NotConnected.v&quot;&gt;NotConnected&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.NotConnected&quot;&gt;&lt;code id=&quot;NotConnected.v&quot;&gt;NotConnected&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bf20326c7704ca8a2d60e0103d4eef981db0a71b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.NotPresent&quot;&gt;&lt;code id=&quot;NotPresent.v&quot;&gt;NotPresent&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.NotPresent&quot;&gt;&lt;code id=&quot;NotPresent.v&quot;&gt;NotPresent&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="bd6891d626f18686dd978498d564a3a9dd632671" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.NotUnicode&quot;&gt;&lt;code id=&quot;NotUnicode.v&quot;&gt;NotUnicode(&lt;a href=&quot;../ffi/struct.osstring&quot;&gt;OsString&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.NotUnicode&quot;&gt;&lt;code id=&quot;NotUnicode.v&quot;&gt;NotUnicode(&lt;a href=&quot;../ffi/struct.osstring&quot;&gt;OsString&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="58ca30b68e1ee1141f60c556208edc9df2863f7a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Occupied&quot;&gt;&lt;code id=&quot;Occupied.v&quot;&gt;Occupied(&lt;a href=&quot;struct.occupiedentry&quot;&gt;OccupiedEntry&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Occupied&quot;&gt; &lt;code id=&quot;Occupied.v&quot;&gt;Occupied(&lt;a href=&quot;struct.occupiedentry&quot;&gt;OccupiedEntry&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="79d84ac84d7562b64ee8b46eb17bc54857797e35" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Occupied&quot;&gt;&lt;code id=&quot;Occupied.v&quot;&gt;Occupied(&lt;a href=&quot;struct.rawoccupiedentrymut&quot;&gt;RawOccupiedEntryMut&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Occupied&quot;&gt; &lt;code id=&quot;Occupied.v&quot;&gt;Occupied(&lt;a href=&quot;struct.rawoccupiedentrymut&quot;&gt;RawOccupiedEntryMut&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="fd094f1fe30e236145ad34a6ef2aeae32c47c024" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Ok&quot;&gt;&lt;code id=&quot;Ok.v&quot;&gt;Ok(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Ok&quot;&gt;&lt;code id=&quot;Ok.v&quot;&gt;Ok(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ad29067dc1ddb6390eecde4b19ddb7b4e48556ec" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.OrganizationLocal&quot;&gt;&lt;code id=&quot;OrganizationLocal.v&quot;&gt;OrganizationLocal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.OrganizationLocal&quot;&gt;&lt;code id=&quot;OrganizationLocal.v&quot;&gt;OrganizationLocal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="614945d762d7b7f3ca7d4d33a62bfa4cf751b4f5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Other&quot;&gt;&lt;code id=&quot;Other.v&quot;&gt;Other&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Other&quot;&gt;&lt;code id=&quot;Other.v&quot;&gt;Other&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1f80b89959df88b9a4c7a182108e33e7ae034e34" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Overflow&quot;&gt;&lt;code id=&quot;Overflow.v&quot;&gt;Overflow&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Overflow&quot;&gt;&lt;code id=&quot;Overflow.v&quot;&gt;Overflow&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0a7ec9dfedf294e598bbdf184ee94ac142f649e2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Owned&quot;&gt;&lt;code id=&quot;Owned.v&quot;&gt;Owned(&amp;lt;B as &lt;a href=&quot;trait.toowned&quot;&gt;ToOwned&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.toowned#associatedtype.Owned&quot;&gt;Owned&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Owned&quot;&gt; &lt;code id=&quot;Owned.v&quot;&gt;Owned(&amp;lt;B as &lt;a href=&quot;trait.toowned&quot;&gt;ToOwned&lt;/a&gt;&amp;gt;::&lt;a href=&quot;trait.toowned#associatedtype.Owned&quot;&gt;Owned&lt;/a&gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="366f13f97df38e7760f99f4ed4e6f443cb52b78a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.ParentDir&quot;&gt;&lt;code id=&quot;ParentDir.v&quot;&gt;ParentDir&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.ParentDir&quot;&gt;&lt;code id=&quot;ParentDir.v&quot;&gt;ParentDir&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8fca49f6b1e54b2f6eb0e0614b84b19a82a57a2d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Pending&quot;&gt;&lt;code id=&quot;Pending.v&quot;&gt;Pending&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Pending&quot;&gt;&lt;code id=&quot;Pending.v&quot;&gt;Pending&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f8ea77fa0d82d545e02bfa5a78c7b86db79b230a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.PermissionDenied&quot;&gt;&lt;code id=&quot;PermissionDenied.v&quot;&gt;PermissionDenied&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.PermissionDenied&quot;&gt;&lt;code id=&quot;PermissionDenied.v&quot;&gt;PermissionDenied&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="426c64483da2ed8fb22c4d0ef80fe7462462dec0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Poisoned&quot;&gt;&lt;code id=&quot;Poisoned.v&quot;&gt;Poisoned(&lt;a href=&quot;struct.poisonerror&quot;&gt;PoisonError&lt;/a&gt;&amp;lt;T&amp;gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Poisoned&quot;&gt;&lt;code id=&quot;Poisoned.v&quot;&gt;Poisoned(&lt;a href=&quot;struct.poisonerror&quot;&gt;PoisonError&lt;/a&gt;&amp;lt;T&amp;gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="aabf6ec799b83a62729dd8ddca3e66fd2e29a1b0" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Prefix&quot;&gt;&lt;code id=&quot;Prefix.v&quot;&gt;Prefix(&lt;a href=&quot;struct.prefixcomponent&quot;&gt;PrefixComponent&lt;/a&gt;&amp;lt;'a&amp;gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Prefix&quot;&gt;&lt;code id=&quot;Prefix.v&quot;&gt;Prefix(&lt;a href=&quot;struct.prefixcomponent&quot;&gt;PrefixComponent&lt;/a&gt;&amp;lt;'a&amp;gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3de0621cd9bcefb6247dfd9619970dbd8debeda9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Read&quot;&gt;&lt;code id=&quot;Read.v&quot;&gt;Read&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Read&quot;&gt;&lt;code id=&quot;Read.v&quot;&gt;Read&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e1efd3f72ec0589cd90bdcc31f61d490b9e1ba0b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Ready&quot;&gt;&lt;code id=&quot;Ready.v&quot;&gt;Ready(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Ready&quot;&gt;&lt;code id=&quot;Ready.v&quot;&gt;Ready(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="288a138d722b4ebc06719c5a87497ea19f4b32b2" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.RealmLocal&quot;&gt;&lt;code id=&quot;RealmLocal.v&quot;&gt;RealmLocal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.RealmLocal&quot;&gt;&lt;code id=&quot;RealmLocal.v&quot;&gt;RealmLocal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9f7194b11e9652ccc63640018e61ad9fa189051d" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Reject&quot;&gt;&lt;code id=&quot;Reject.v&quot;&gt;Reject(&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Reject&quot;&gt;&lt;code id=&quot;Reject.v&quot;&gt;Reject(&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="aa24735ea4548068cac195fa82eac6028e590e9b" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Release&quot;&gt;&lt;code id=&quot;Release.v&quot;&gt;Release&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Release&quot;&gt;&lt;code id=&quot;Release.v&quot;&gt;Release&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="06c0431051b594fb99ab03870fd7e8251b995997" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Right&quot;&gt;&lt;code id=&quot;Right.v&quot;&gt;Right&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Right&quot;&gt;&lt;code id=&quot;Right.v&quot;&gt;Right&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2bc13f3a3f558e67936274b79305e4dc6242a960" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.RootDir&quot;&gt;&lt;code id=&quot;RootDir.v&quot;&gt;RootDir&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.RootDir&quot;&gt;&lt;code id=&quot;RootDir.v&quot;&gt;RootDir&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d5a6c2f3840abf373975c58db866fd05566f07fa" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.SeqCst&quot;&gt;&lt;code id=&quot;SeqCst.v&quot;&gt;SeqCst&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.SeqCst&quot;&gt;&lt;code id=&quot;SeqCst.v&quot;&gt;SeqCst&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="700fbd54368779d7c9e308dc4255e5f268c517b1" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.SiteLocal&quot;&gt;&lt;code id=&quot;SiteLocal.v&quot;&gt;SiteLocal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.SiteLocal&quot;&gt;&lt;code id=&quot;SiteLocal.v&quot;&gt;SiteLocal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="42457a7c802e96aa7ca550c99c3489f984533ece" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Some&quot;&gt;&lt;code id=&quot;Some.v&quot;&gt;Some(T)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Some&quot;&gt;&lt;code id=&quot;Some.v&quot;&gt;Some(T)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ba0ec412b4f5daa35203a6a7d1344b09c477fe1a" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Start&quot;&gt;&lt;code id=&quot;Start.v&quot;&gt;Start(&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Start&quot;&gt;&lt;code id=&quot;Start.v&quot;&gt;Start(&lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="119bce8494f5d1c83df82c443bac86537d0fe2c9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Subnormal&quot;&gt;&lt;code id=&quot;Subnormal.v&quot;&gt;Subnormal&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Subnormal&quot;&gt;&lt;code id=&quot;Subnormal.v&quot;&gt;Subnormal&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5d2078249f3a354ac09a4548a73efd3c5aa98f30" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Timeout&quot;&gt;&lt;code id=&quot;Timeout.v&quot;&gt;Timeout&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Timeout&quot;&gt;&lt;code id=&quot;Timeout.v&quot;&gt;Timeout&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b7657da1c54904b1a94f601ce854c30560cfe56f" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.UNC&quot;&gt;&lt;code id=&quot;UNC.v&quot;&gt;UNC(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;,&amp;nbsp;&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.UNC&quot;&gt; &lt;code id=&quot;UNC.v&quot;&gt;UNC(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;,&amp;nbsp;&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7251262f6418487ba30792246a9f626d6a25f83c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Unbounded&quot;&gt;&lt;code id=&quot;Unbounded.v&quot;&gt;Unbounded&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Unbounded&quot;&gt;&lt;code id=&quot;Unbounded.v&quot;&gt;Unbounded&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6504115f74e762170d71f0c01803aa1433e0ce47" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Underflow&quot;&gt;&lt;code id=&quot;Underflow.v&quot;&gt;Underflow&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Underflow&quot;&gt;&lt;code id=&quot;Underflow.v&quot;&gt;Underflow&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="238e882f1739488ba7a030da1c404786df9579f9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.UnexpectedEof&quot;&gt;&lt;code id=&quot;UnexpectedEof.v&quot;&gt;UnexpectedEof&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.UnexpectedEof&quot;&gt;&lt;code id=&quot;UnexpectedEof.v&quot;&gt;UnexpectedEof&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a8dd251a1207d4e11e3d10d61c6d014b2646ff37" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.V4&quot;&gt;&lt;code id=&quot;V4.v&quot;&gt;V4(&lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.V4&quot;&gt;&lt;code id=&quot;V4.v&quot;&gt;V4(&lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="900d145487fbb075cf35b7f31871559fc4e06aea" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.V4&quot;&gt;&lt;code id=&quot;V4.v&quot;&gt;V4(&lt;a href=&quot;struct.socketaddrv4&quot;&gt;SocketAddrV4&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.V4&quot;&gt;&lt;code id=&quot;V4.v&quot;&gt;V4(&lt;a href=&quot;struct.socketaddrv4&quot;&gt;SocketAddrV4&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ccd5990162f9019755ca0861aec17eeb838635c5" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.V6&quot;&gt;&lt;code id=&quot;V6.v&quot;&gt;V6(&lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.V6&quot;&gt;&lt;code id=&quot;V6.v&quot;&gt;V6(&lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="df27b63255e5ca4dd10ee3931d89a214cb7a79e8" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.V6&quot;&gt;&lt;code id=&quot;V6.v&quot;&gt;V6(&lt;a href=&quot;struct.socketaddrv6&quot;&gt;SocketAddrV6&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.V6&quot;&gt;&lt;code id=&quot;V6.v&quot;&gt;V6(&lt;a href=&quot;struct.socketaddrv6&quot;&gt;SocketAddrV6&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b1ea069ef9327f5c3a1a861557ea04c82575ae3c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Vacant&quot;&gt;&lt;code id=&quot;Vacant.v&quot;&gt;Vacant(&lt;a href=&quot;struct.rawvacantentrymut&quot;&gt;RawVacantEntryMut&lt;/a&gt;&amp;lt;'a, K, V, S&amp;gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Vacant&quot;&gt; &lt;code id=&quot;Vacant.v&quot;&gt;Vacant(&lt;a href=&quot;struct.rawvacantentrymut&quot;&gt;RawVacantEntryMut&lt;/a&gt;&amp;lt;'a, K, V, S&amp;gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="a3f52e8e92525a9484f9ea21a413660d15607c54" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Vacant&quot;&gt;&lt;code id=&quot;Vacant.v&quot;&gt;Vacant(&lt;a href=&quot;struct.vacantentry&quot;&gt;VacantEntry&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Vacant&quot;&gt; &lt;code id=&quot;Vacant.v&quot;&gt;Vacant(&lt;a href=&quot;struct.vacantentry&quot;&gt;VacantEntry&lt;/a&gt;&amp;lt;'a, K, V&amp;gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cc590a03de1082f370b8b404e093e91ac5cb0306" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Verbatim&quot;&gt;&lt;code id=&quot;Verbatim.v&quot;&gt;Verbatim(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Verbatim&quot;&gt; &lt;code id=&quot;Verbatim.v&quot;&gt;Verbatim(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5aa296add133e61d06a6d4259d1fb0881eb7bd39" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.VerbatimDisk&quot;&gt;&lt;code id=&quot;VerbatimDisk.v&quot;&gt;VerbatimDisk(&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.VerbatimDisk&quot;&gt;&lt;code id=&quot;VerbatimDisk.v&quot;&gt;VerbatimDisk(&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f6b929546a75faa42e8181de8ca57bcfbd173f85" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.VerbatimUNC&quot;&gt;&lt;code id=&quot;VerbatimUNC.v&quot;&gt;VerbatimUNC(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;,&amp;nbsp;&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.VerbatimUNC&quot;&gt; &lt;code id=&quot;VerbatimUNC.v&quot;&gt;VerbatimUNC(&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;,&amp;nbsp;&amp;amp;'a &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;)&lt;/code&gt; &lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9cd9ad739de8cce934db346fc40fc958c8b3429e" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.WouldBlock&quot;&gt;&lt;code id=&quot;WouldBlock.v&quot;&gt;WouldBlock&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.WouldBlock&quot;&gt;&lt;code id=&quot;WouldBlock.v&quot;&gt;WouldBlock&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="31c97026aa6d07f6414185d909730c36779144a9" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Write&quot;&gt;&lt;code id=&quot;Write.v&quot;&gt;Write&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Write&quot;&gt;&lt;code id=&quot;Write.v&quot;&gt;Write&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="61e6c90d5de31882b090799d674e61ef0d0f389c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.WriteZero&quot;&gt;&lt;code id=&quot;WriteZero.v&quot;&gt;WriteZero&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.WriteZero&quot;&gt;&lt;code id=&quot;WriteZero.v&quot;&gt;WriteZero&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="dc8ede49b45bb296751c2a5d3ace189c5a80e69c" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Yielded&quot;&gt;&lt;code id=&quot;Yielded.v&quot;&gt;Yielded(Y)&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Yielded&quot;&gt;&lt;code id=&quot;Yielded.v&quot;&gt;Yielded(Y)&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6b8f56e3c79b5975e1be195dd3734989bee366c7" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;variant.Zero&quot;&gt;&lt;code id=&quot;Zero.v&quot;&gt;Zero&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;variant.Zero&quot;&gt;&lt;code id=&quot;Zero.v&quot;&gt;Zero&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8d30ecbd2f33931b54af81e7b1473f6ce8c0ba0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/issues/10184&quot;&gt;NOTE: currently this will cause Undefined Behavior if the rounded value cannot be represented by the target integer type&lt;/a&gt;&lt;/strong&gt;. This includes Inf and NaN. This is a bug and will be fixed.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/issues/10184&quot;&gt;ПРИМЕЧАНИЕ: в настоящее время это приведет к неопределенному поведению, если округленное значение не может быть представлено целевым целочисленным типом&lt;/a&gt;&lt;/strong&gt; . Сюда входят Inf и NaN. Это ошибка, и она будет исправлена.</target>
        </trans-unit>
        <trans-unit id="92971d62fe3186475f026398e7a0174099738633" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/issues/15536&quot;&gt;NOTE: currently this will cause Undefined Behavior if the value is finite but larger or smaller than the largest or smallest finite value representable by f32&lt;/a&gt;&lt;/strong&gt;. This is a bug and will be fixed.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/issues/15536&quot;&gt;ПРИМЕЧАНИЕ: в настоящее время это вызовет Undefined Behavior, если значение конечно, но больше или меньше, чем наибольшее или наименьшее конечное значение, представленное f32&lt;/a&gt;&lt;/strong&gt; . Это ошибка, и она будет исправлена.</target>
        </trans-unit>
        <trans-unit id="1afbb08e18a2a8950ebdff5b3534ae0f7e3fd83f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Note&lt;/em&gt;&lt;/strong&gt;: The &lt;code&gt;rustc&lt;/code&gt; compiler automatically inlines functions based on internal heuristics. Incorrectly inlining functions can make the program slower, so this attribute should be used with care.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Примечание&lt;/em&gt;&lt;/strong&gt; .Компилятор &lt;code&gt;rustc&lt;/code&gt; автоматически встраивает функции на основе внутренней эвристики. Неправильное встраивание функций может замедлить работу программы, поэтому этот атрибут следует использовать с осторожностью.</target>
        </trans-unit>
        <trans-unit id="52af196e2df7d6d1d70d4b20971e00ada5feef77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; Dereferencing an unaligned pointer is &lt;a href=&quot;behavior-considered-undefined&quot;&gt;undefined behavior&lt;/a&gt; and it is possible to &lt;a href=&quot;https://github.com/rust-lang/rust/issues/27060&quot;&gt;safely create unaligned pointers to &lt;code&gt;packed&lt;/code&gt; fields&lt;/a&gt;. Like all ways to create undefined behavior in safe Rust, this is a bug.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Предупреждение:&lt;/em&gt;&lt;/strong&gt; разыменование невыровненного указателя является&lt;a href=&quot;behavior-considered-undefined&quot;&gt; неопределенным поведением,&lt;/a&gt; и можно&lt;a href=&quot;https://github.com/rust-lang/rust/issues/27060&quot;&gt; безопасно создавать невыровненные указатели на &lt;code&gt;packed&lt;/code&gt; поля&lt;/a&gt; . Как и все способы создания неопределенного поведения в безопасном Rust, это ошибка.</target>
        </trans-unit>
        <trans-unit id="641eae7d16c8e6d62bab0c62010b11532ce2de80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; For &lt;a href=&quot;../types/trait-object&quot;&gt;trait objects&lt;/a&gt;, if there is an inherent method of the same name as a trait method, it will give a compiler error when trying to call the method in a method call expression. Instead, you can call the method using &lt;a href=&quot;call-expr#disambiguating-function-calls&quot;&gt;disambiguating function call syntax&lt;/a&gt;, in which case it calls the trait method, not the inherent method. There is no way to call the inherent method. Just don't define inherent methods on trait objects with the same name a trait method and you'll be fine.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Предупреждение:&lt;/em&gt;&lt;/strong&gt; для&lt;a href=&quot;../types/trait-object&quot;&gt; объектов-признаков&lt;/a&gt; , если существует собственный метод с тем же именем, что и метод признака, он выдаст ошибку компилятора при попытке вызвать метод в выражении вызова метода. Вместо этого вы можете вызвать метод, используя&lt;a href=&quot;call-expr#disambiguating-function-calls&quot;&gt; устраняющий неоднозначность синтаксис вызова функции&lt;/a&gt; , и в этом случае он вызывает метод черты, а не собственный метод. Невозможно вызвать собственный метод. Просто не определяйте неотъемлемые методы для объектов признаков с тем же именем, что и метод признака, и все будет в порядке.</target>
        </trans-unit>
        <trans-unit id="14f5badea1be2736539096eaf684db8c5d26b01b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; The following list is not exhaustive. There is no formal model of Rust's semantics for what is and is not allowed in unsafe code, so there may be more behavior considered unsafe. The following list is just what we know for sure is undefined behavior. Please read the &lt;a href=&quot;https://doc.rust-lang.org/nomicon/index.html&quot;&gt;Rustonomicon&lt;/a&gt; before writing unsafe code.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Предупреждение:&lt;/em&gt;&lt;/strong&gt; следующий список не является исчерпывающим. Не существует формальной модели семантики Rust для определения того, что разрешено и что запрещено в небезопасном коде, поэтому может быть больше поведения, считающегося небезопасным. Следующий список - это то, что мы точно знаем, это неопределенное поведение. Пожалуйста, прочтите&lt;a href=&quot;https://doc.rust-lang.org/nomicon/index.html&quot;&gt; Rustonomicon,&lt;/a&gt; прежде чем писать небезопасный код.</target>
        </trans-unit>
        <trans-unit id="0029a09af0cc0f5afc1611697c9ad1ed7b7d0cfc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; With two trait object types, even when the complete set of traits is the same, if the base traits differ, the type is different. For example, &lt;code&gt;dyn Send + Sync&lt;/code&gt; is a different type from &lt;code&gt;dyn Sync + Send&lt;/code&gt;. See &lt;a href=&quot;https://github.com/rust-lang/rust/issues/33140&quot;&gt;issue 33140&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Предупреждение:&lt;/em&gt;&lt;/strong&gt; с двумя типами объектов признаков, даже если полный набор признаков одинаков, если базовые признаки различаются, тип будет другим. Например, &lt;code&gt;dyn Send + Sync&lt;/code&gt; отличается от &lt;code&gt;dyn Sync + Send&lt;/code&gt; . См.&lt;a href=&quot;https://github.com/rust-lang/rust/issues/33140&quot;&gt; Проблему 33140&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ee107fe206809602998471109ca3cf88bae2bbb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;sup&gt;Lexer 2015&lt;/sup&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;sup&gt;Лексер 2015&lt;/sup&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="086e314e305cc39ba4d4b327b89e5d7a0d8c6f03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;sup&gt;Lexer 2018+&lt;/sup&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;sup&gt;Lexer 2018+&lt;/sup&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="32563aa7feb766e8d7e65307f8bc48e47003b702" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;sup&gt;Lexer:&lt;/sup&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;sup&gt;Lexer:&lt;/sup&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a3ac7aad80402b534d708e407025f17f7772a4ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;sup&gt;Lexer&lt;/sup&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;sup&gt;Lexer&lt;/sup&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="13ea811ecc594e94181b24eb80a75c60e5e29672" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;sup&gt;Syntax:&lt;/sup&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;sup&gt;Syntax:&lt;/sup&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4284bd4d709ac711e8c06bbdaf51939ae42316ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;sup&gt;Syntax&lt;/sup&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;sup&gt;Syntax&lt;/sup&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="04d38a540329625df538c94f4f56761b0074d0fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Character size&lt;/strong&gt; - C strings may use &lt;code&gt;char&lt;/code&gt; or &lt;code&gt;wchar_t&lt;/code&gt;-sized characters; please &lt;strong&gt;note&lt;/strong&gt; that C's &lt;code&gt;char&lt;/code&gt; is different from Rust's. The C standard leaves the actual sizes of those types open to interpretation, but defines different APIs for strings made up of each character type. Rust strings are always UTF-8, so different Unicode characters will be encoded in a variable number of bytes each. The Rust type &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; represents a '&lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt;Unicode scalar value&lt;/a&gt;', which is similar to, but not the same as, a '&lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;Unicode code point&lt;/a&gt;'.</source>
          <target state="translated">&lt;strong&gt;Размер символа&lt;/strong&gt; - строки C могут использовать &lt;strong&gt;символы размера &lt;/strong&gt; &lt;code&gt;char&lt;/code&gt; или &lt;code&gt;wchar_t&lt;/code&gt; ; обратите &lt;strong&gt;внимание,&lt;/strong&gt; что &lt;code&gt;char&lt;/code&gt; C отличается от символа Rust. Стандарт C оставляет фактические размеры этих типов открытыми для интерпретации, но определяет разные API для строк, состоящих из каждого типа символов. Строки Rust всегда имеют кодировку UTF-8, поэтому разные символы Unicode будут закодированы в разное количество байтов каждый. Тип &lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; в&lt;/a&gt; Rust представляет собой &amp;laquo; &lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt;скалярное значение Unicode&lt;/a&gt; &amp;raquo;, которое похоже на &amp;laquo; &lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;кодовую точку Unicode&amp;raquo;&lt;/a&gt; , но не то же самое .</target>
        </trans-unit>
        <trans-unit id="0ce042add186ebd327aa00b3f56f494c53302773" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Character size&lt;/strong&gt; - C strings may use &lt;code&gt;char&lt;/code&gt; or &lt;code&gt;wchar_t&lt;/code&gt;-sized characters; please &lt;strong&gt;note&lt;/strong&gt; that C's &lt;code&gt;char&lt;/code&gt; is different from Rust's. The C standard leaves the actual sizes of those types open to interpretation, but defines different APIs for strings made up of each character type. Rust strings are always UTF-8, so different Unicode characters will be encoded in a variable number of bytes each. The Rust type &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.char.html&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; represents a '&lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt;Unicode scalar value&lt;/a&gt;', which is similar to, but not the same as, a '&lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;Unicode code point&lt;/a&gt;'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700eaca40cee125f38cc4d75b02d62979fde8825" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Crates:&lt;/strong&gt; A tree of modules that produces a library or executable</source>
          <target state="translated">&lt;strong&gt;Ящики:&lt;/strong&gt; дерево модулей, из которого создается библиотека или исполняемый файл.</target>
        </trans-unit>
        <trans-unit id="e782bb6068e1aacf17c4b0b3ec1d9875e47c4925" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Disclaimer:&lt;/strong&gt; These system calls might change over time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8b3462b6d6c541b754f0aec381f7e706c421ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: In the 2015 Edition, the crate root contains a variety of different items, including external crates, default crates such as &lt;code&gt;std&lt;/code&gt; and &lt;code&gt;core&lt;/code&gt;, and items in the top level of the crate (including &lt;code&gt;use&lt;/code&gt; imports).</source>
          <target state="translated">&lt;strong&gt;Различия между редакциями&lt;/strong&gt; : в редакции 2015 года корень ящика содержит множество различных элементов, включая внешние ящики, ящики по умолчанию, такие как &lt;code&gt;std&lt;/code&gt; и &lt;code&gt;core&lt;/code&gt; , а также элементы на верхнем уровне ящика (включая &lt;code&gt;use&lt;/code&gt; импорта).</target>
        </trans-unit>
        <trans-unit id="e088bfe5ad018353c64bdbb01968dcde42ba3d14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: In the 2015 edition, &lt;code&gt;use&lt;/code&gt; paths also allow accessing items in the crate root. Using the example above, the following &lt;code&gt;use&lt;/code&gt; paths work in 2015 but not 2018:</source>
          <target state="translated">&lt;strong&gt;Различия между версиями&lt;/strong&gt; : в версии 2015 года пути &lt;code&gt;use&lt;/code&gt; также позволяют получить доступ к элементам в корне ящика. Используя приведенный выше пример, следующие пути &lt;code&gt;use&lt;/code&gt; работают в 2015 году, но не в 2018 году:</target>
        </trans-unit>
        <trans-unit id="627f712f9b93a0a851f59c926530c05272107ff4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: In the 2015 edition, crates in the extern prelude cannot be referenced via &lt;a href=&quot;use-declarations&quot;&gt;use declarations&lt;/a&gt;, so it is generally standard practice to include &lt;code&gt;extern crate&lt;/code&gt; declarations to bring them into scope.</source>
          <target state="translated">&lt;strong&gt;Различия между редакциями&lt;/strong&gt; : в редакции 2015 года на ящики в прелюдии extern нельзя ссылаться с помощью &lt;a href=&quot;use-declarations&quot;&gt;объявлений использования&lt;/a&gt; , поэтому обычно стандартной практикой является включение объявлений &lt;code&gt;extern crate&lt;/code&gt; чтобы включить их в область видимости.</target>
        </trans-unit>
        <trans-unit id="f5085a0b269138950b893252f1966657953ef4b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: In the 2015 edition, if the first bound of the trait object is a path that starts with &lt;code&gt;::&lt;/code&gt;, then the &lt;code&gt;dyn&lt;/code&gt; will be treated as a part of the path. The first path can be put in parenthesis to get around this. As such, if you want a trait object with the trait &lt;code&gt;::your_module::Trait&lt;/code&gt;, you should write it as &lt;code&gt;dyn (::your_module::Trait)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Различия в редакциях&lt;/strong&gt; : в редакции 2015 года, если первая граница объекта признака - это путь, начинающийся с &lt;code&gt;::&lt;/code&gt; , то &lt;code&gt;dyn&lt;/code&gt; будет рассматриваться как часть пути. Чтобы обойти это, первый путь можно заключить в скобки. Таким образом, если вам нужен объект-признак с trait &lt;code&gt;::your_module::Trait&lt;/code&gt; , вы должны записать его как &lt;code&gt;dyn (::your_module::Trait)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d876e32afa65f2d220b1dd922c7a25c124ae5c8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: In the 2015 edition, it is possible to declare trait methods with anonymous parameters (e.g. &lt;code&gt;fn foo(u8)&lt;/code&gt;). This is deprecated and an error as of the 2018 edition. All parameters must have an argument name.</source>
          <target state="translated">&lt;strong&gt;Различия в редакции&lt;/strong&gt; : в редакции 2015 года можно объявлять методы признаков с анонимными параметрами (например, &lt;code&gt;fn foo(u8)&lt;/code&gt; ). Это устарело и является ошибкой в ​​версии 2018. Все параметры должны иметь имя аргумента.</target>
        </trans-unit>
        <trans-unit id="d8a4eb3a8ecd26bd2a8200c1aa407e7c962a47c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: In the 2015 edition, this syntax is valid that is disallowed as of the 2018 edition.</source>
          <target state="translated">&lt;strong&gt;Различия между редакциями&lt;/strong&gt; : в редакции 2015 года действует этот синтаксис, который запрещен в редакции 2018 года.</target>
        </trans-unit>
        <trans-unit id="e6c48e95dbd2c5b344112038b2d6d28be512c6e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition Differences&lt;/strong&gt;: Starting with the 2018 edition, paths for &lt;code&gt;pub(in path)&lt;/code&gt; must start with &lt;code&gt;crate&lt;/code&gt;, &lt;code&gt;self&lt;/code&gt;, or &lt;code&gt;super&lt;/code&gt;. The 2015 edition may also use paths starting with &lt;code&gt;::&lt;/code&gt; or modules from the crate root.</source>
          <target state="translated">&lt;strong&gt;Различия между версиями&lt;/strong&gt; : начиная с версии 2018, пути для &lt;code&gt;pub(in path)&lt;/code&gt; должны начинаться с &lt;code&gt;crate&lt;/code&gt; , &lt;code&gt;self&lt;/code&gt; или &lt;code&gt;super&lt;/code&gt; . В версии 2015 также могут использоваться пути, начинающиеся с &lt;code&gt;::&lt;/code&gt; или модулей из корня ящика.</target>
        </trans-unit>
        <trans-unit id="62a6b70d43483dfe4d5b7b6c6b58326793ee331d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition differences&lt;/strong&gt;: Async blocks are only available beginning with Rust 2018.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffeac211f4d5959ca339c3909c25a46b1449c9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition differences&lt;/strong&gt;: Async functions are only available beginning with Rust 2018.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbba24256158782afff4e1bf3667267a636ed2ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edition differences&lt;/strong&gt;: Await expressions are only available beginning with Rust 2018.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd803d8196215afbdb722ca42ff6863ebfdce05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Encodings&lt;/strong&gt; - Rust strings are UTF-8, but C strings may use other encodings. If you are using a string from C, you should check its encoding explicitly, rather than just assuming that it is UTF-8 like you can do in Rust.</source>
          <target state="translated">&lt;strong&gt;Кодировки&lt;/strong&gt; - строки Rust имеют кодировку UTF-8, но строки C могут использовать другие кодировки. Если вы используете строку из C, вам следует явно проверить ее кодировку, а не просто предполагать, что это UTF-8, как вы можете это сделать в Rust.</target>
        </trans-unit>
        <trans-unit id="c4744b4de56ac84ab4967b9e79393a7382d93137" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt;: If the function returns a &lt;code&gt;Result&lt;/code&gt;, describing the kinds of errors that might occur and what conditions might cause those errors to be returned can be helpful to callers so they can write code to handle the different kinds of errors in different ways.</source>
          <target state="translated">&lt;strong&gt;Ошибки&lt;/strong&gt; : если функция возвращает &lt;code&gt;Result&lt;/code&gt; , описание типов ошибок, которые могут произойти, и условий, которые могут привести к возврату этих ошибок, может быть полезным для вызывающих, чтобы они могли написать код для обработки различных типов ошибок разными способами.</target>
        </trans-unit>
        <trans-unit id="ab2c858e00d5352d65014ede49ecfd4f78f2629f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From C to Rust:&lt;/strong&gt;&lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt; represents a borrowed C string; it is what you would use to wrap a raw &lt;code&gt;*const &lt;/code&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt; that you got from a C function. A &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt; is guaranteed to be a nul-terminated array of bytes. Once you have a &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt;, you can convert it to a Rust &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; if it's valid UTF-8, or lossily convert it by adding replacement characters.</source>
          <target state="translated">&lt;strong&gt;От C до Rust: &lt;/strong&gt;&lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; &lt;/a&gt; представляет собой заимствованную строку C; это то, что вы использовали бы для обертывания необработанного &lt;code&gt;*const &lt;/code&gt; &lt;a href=&quot;../primitive.u8&quot;&gt; &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt; , полученного от функции C. &lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; &lt;/a&gt; гарантированно будет NUL завершающим массив байтов. Если у вас есть &lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; &lt;/a&gt; , вы можете преобразовать его в Rust &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; если он действителен UTF-8, или преобразовать его с потерями, добавив заменяющие символы.</target>
        </trans-unit>
        <trans-unit id="be0edd96752d258e24714cab9620512785d60bc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From C to Rust:&lt;/strong&gt;&lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt; represents a borrowed C string; it is what you would use to wrap a raw &lt;code&gt;*const &lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.u8.html&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt; that you got from a C function. A &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt; is guaranteed to be a nul-terminated array of bytes. Once you have a &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt;, you can convert it to a Rust &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; if it's valid UTF-8, or lossily convert it by adding replacement characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a880c7c09fd0c1f69a3098a3095ef95bac0a546" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From Rust to C:&lt;/strong&gt;&lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; represents an owned, C-friendly string: it is nul-terminated, and has no internal nul characters. Rust code can create a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; out of a normal string (provided that the string doesn't have nul characters in the middle), and then use a variety of methods to obtain a raw &lt;code&gt;*mut &lt;/code&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt; that can then be passed as an argument to functions which use the C conventions for strings.</source>
          <target state="translated">&lt;strong&gt;От Rust к C: &lt;/strong&gt;&lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; представляет собой принадлежащую C-дружественную строку: она заканчивается нулем и не имеет внутренних нулевых символов. Код Rust может создать &lt;a href=&quot;struct.cstring&quot;&gt; &lt;code&gt;CString&lt;/code&gt; &lt;/a&gt; из обычной строки (при условии, что строка не имеет нулевых символов посередине), а затем использовать различные методы для получения необработанного &lt;code&gt;*mut &lt;/code&gt; &lt;a href=&quot;../primitive.u8&quot;&gt; &lt;code&gt;u8&lt;/code&gt; ,&lt;/a&gt; который затем может быть передан в качестве аргумента в функции, которые используют соглашения C для строк.</target>
        </trans-unit>
        <trans-unit id="aae173511f045be6a9f0dfcffd69891dd82a8b0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From Rust to C:&lt;/strong&gt;&lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; represents an owned, C-friendly string: it is nul-terminated, and has no internal nul characters. Rust code can create a &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; out of a normal string (provided that the string doesn't have nul characters in the middle), and then use a variety of methods to obtain a raw &lt;code&gt;*mut &lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.u8.html&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt; that can then be passed as an argument to functions which use the C conventions for strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2238adb64a05e56adbe151507af6c19abcbbbc4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From a Rust string&lt;/strong&gt;: &lt;code&gt;OsString&lt;/code&gt; implements &lt;a href=&quot;../convert/trait.from&quot;&gt;&lt;code&gt;From&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;, so you can use &lt;code&gt;my_string.from&lt;/code&gt; to create an &lt;code&gt;OsString&lt;/code&gt; from a normal Rust string.</source>
          <target state="translated">&lt;strong&gt;Из строки Rust&lt;/strong&gt; : &lt;code&gt;OsString&lt;/code&gt; реализует &lt;a href=&quot;../convert/trait.from&quot;&gt; &lt;code&gt;From&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; , поэтому вы можете использовать &lt;code&gt;my_string.from&lt;/code&gt; для создания &lt;code&gt;OsString&lt;/code&gt; из обычной строки Rust.</target>
        </trans-unit>
        <trans-unit id="a856fdf688afa04d2bd84181c6260aaef0048cb5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From slices:&lt;/strong&gt; Just like you can start with an empty Rust &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and then &lt;a href=&quot;../string/struct.string#method.push_str&quot;&gt;&lt;code&gt;String::push_str&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt; sub-string slices into it, you can create an empty &lt;code&gt;OsString&lt;/code&gt; with the &lt;a href=&quot;struct.osstring#method.new&quot;&gt;&lt;code&gt;OsString::new&lt;/code&gt;&lt;/a&gt; method and then push string slices into it with the &lt;a href=&quot;struct.osstring#method.push&quot;&gt;&lt;code&gt;OsString::push&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adfbc9f4c9b7bf87cce69244480b633a8de2c39f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From slices:&lt;/strong&gt; Just like you can start with an empty Rust &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and then &lt;a href=&quot;../string/struct.string#method.push_str&quot;&gt;&lt;code&gt;push_str&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt; sub-string slices into it, you can create an empty &lt;code&gt;OsString&lt;/code&gt; with the &lt;a href=&quot;#method.new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; method and then push string slices into it with the &lt;a href=&quot;#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;strong&gt;Из фрагментов: так&lt;/strong&gt; же, как вы можете начать с пустой &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; Rust, а затем &lt;a href=&quot;../string/struct.string#method.push_str&quot;&gt; &lt;code&gt;push_str&lt;/code&gt; &lt;/a&gt; в нее фрагменты подстроки push_str &lt;code&gt;&amp;amp;str&lt;/code&gt; , вы можете создать пустую &lt;code&gt;OsString&lt;/code&gt; с помощью &lt;a href=&quot;#method.new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; метода, а затем вставить в нее фрагменты строки с &lt;a href=&quot;#method.push&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt; метода push .</target>
        </trans-unit>
        <trans-unit id="5663223157e2b3d6031e4a48c107b41038aa63b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important.&lt;/strong&gt; At least at present, you should avoid using &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; types for functions that are defined in C but invoked from Rust. In those cases, you should directly mirror the C types as closely as possible. Using types like &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; where the C definition is just using &lt;code&gt;T*&lt;/code&gt; can lead to undefined behavior, as described in &lt;a href=&quot;https://github.com/rust-lang/unsafe-code-guidelines/issues/198&quot;&gt;rust-lang/unsafe-code-guidelines#198&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629ec911ccd79d718629d3b5e11521368319be97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Internal nul characters&lt;/strong&gt; - When C strings have a nul terminator character, this usually means that they cannot have nul characters in the middle &amp;mdash; a nul character would essentially truncate the string. Rust strings &lt;em&gt;can&lt;/em&gt; have nul characters in the middle, because nul does not have to mark the end of the string in Rust.</source>
          <target state="translated">&lt;strong&gt;Внутренние нулевые символы&lt;/strong&gt; - когда строки C имеют нулевой символ-ограничитель, это обычно означает, что они не могут иметь нулевые символы в середине - нулевой символ по существу усекает строку. Строки Rust &lt;em&gt;могут&lt;/em&gt; содержать символы null в середине, потому что nul не обязательно обозначает конец строки в Rust.</target>
        </trans-unit>
        <trans-unit id="b41d1a37bb22ed7e91444167c781b032f81cc870" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Modules&lt;/strong&gt; and &lt;strong&gt;use:&lt;/strong&gt; Let you control the organization, scope, and privacy of paths</source>
          <target state="translated">&lt;strong&gt;Модули&lt;/strong&gt; и &lt;strong&gt;использование:&lt;/strong&gt; позволяют вам контролировать организацию, объем и конфиденциальность путей</target>
        </trans-unit>
        <trans-unit id="41c40dd8ed6820329fca0f856e36989c1fdbd2b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NB.&lt;/strong&gt; The never type was expected to be stabilized in 1.41, but due to some last minute regressions detected the stabilization was temporarily reverted. The &lt;code&gt;!&lt;/code&gt; type can only appear in function return types presently. See &lt;a href=&quot;https://github.com/rust-lang/rust/issues/35121&quot;&gt;the tracking issue&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060d89d923956472cc05e7319b76fa9d50a7e876" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE: The third invariant is currently unenforced due to historical oversight and significant reliance on the behaviour. It is currently undecided what to do about this going forward. Macros that do not respect the behaviour may become invalid in a future edition of Rust. See the &lt;a href=&quot;https://github.com/rust-lang/rust/issues/56575&quot;&gt;tracking issue&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ: Третий инвариант в настоящее время не применяется из-за исторического надзора и значительной зависимости от поведения. В настоящее время неясно, что делать с этим в будущем. Макросы, которые не соблюдают такое поведение, могут стать недействительными в будущих выпусках Rust. См. &lt;a href=&quot;https://github.com/rust-lang/rust/issues/56575&quot;&gt;Проблему отслеживания&lt;/a&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="379a60c8e2b4b827557b233553a6bc6c82683fa1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: If a parent of the given path doesn't exist, this function will return an error. To create a directory and all its missing parents at the same time, use the &lt;a href=&quot;fn.create_dir_all&quot;&gt;&lt;code&gt;create_dir_all&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; . Если родительский элемент данного пути не существует, эта функция вернет ошибку. Чтобы создать каталог и все его отсутствующие родители одновременно, используйте функцию &lt;a href=&quot;fn.create_dir_all&quot;&gt; &lt;code&gt;create_dir_all&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c177380835dd615160771cec4b0171b325482499" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No matter what, Safe Rust can't cause Undefined Behavior&lt;/strong&gt;. This is referred to as &lt;a href=&quot;https://rust-lang.github.io/unsafe-code-guidelines/glossary.html#soundness-of-code--of-a-library&quot;&gt;soundness&lt;/a&gt;: a well-typed program actually has the desired properties. The &lt;a href=&quot;https://doc.rust-lang.org/nomicon/safe-unsafe-meaning.html&quot;&gt;Nomicon&lt;/a&gt; has a more detailed explanation on the subject.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6558cd07ee1a59a066bae7f1a7d1d4e7129c19ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: This trait must not fail&lt;/strong&gt;. If the conversion can fail, use &lt;a href=&quot;trait.tryfrom&quot;&gt;&lt;code&gt;TryFrom&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание: эта черта не должна потерпеть неудачу&lt;/strong&gt; . Если преобразование не &lt;a href=&quot;trait.tryfrom&quot;&gt; &lt;code&gt;TryFrom&lt;/code&gt; &lt;/a&gt; , используйте TryFrom .</target>
        </trans-unit>
        <trans-unit id="fc7fd5e949a51b13efc359ef4faae3bf584089ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: This trait must not fail&lt;/strong&gt;. If the conversion can fail, use &lt;a href=&quot;trait.tryinto&quot;&gt;&lt;code&gt;TryInto&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание: эта черта не должна потерпеть неудачу&lt;/strong&gt; . Если преобразование не &lt;a href=&quot;trait.tryinto&quot;&gt; &lt;code&gt;TryInto&lt;/code&gt; &lt;/a&gt; , используйте TryInto .</target>
        </trans-unit>
        <trans-unit id="a5b6ef596678a6ec7ac86f37d73d853ca889a37a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: This trait must not fail&lt;/strong&gt;. If the conversion can fail, use a dedicated method which returns an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание: эта черта не должна потерпеть неудачу&lt;/strong&gt; . Если преобразование может завершиться ошибкой, используйте специальный метод, который возвращает &lt;a href=&quot;../option/enum.option&quot;&gt; &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../result/enum.result&quot;&gt; &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f7d81ecf2a6b96e00a858ce77d080e3c485f5c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you need to borrow a string that was allocated by foreign code, use &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt;. If you need to take ownership of a string that was allocated by foreign code, you will need to make your own provisions for freeing it appropriately, likely with the foreign code's API to do that.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Если вам нужно заимствовать строку, выделенную внешним кодом, используйте &lt;a href=&quot;struct.cstr&quot;&gt; &lt;code&gt;CStr&lt;/code&gt; &lt;/a&gt; . Если вам нужно стать владельцем строки, которая была выделена внешним кодом, вам нужно будет сделать свои собственные условия для ее соответствующего освобождения, вероятно, с помощью API внешнего кода для этого.</target>
        </trans-unit>
        <trans-unit id="64f82543ebfb5e0c22f3304371c4e50429156fcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The future type that rustc generates is roughly equivalent to an enum with one variant per &lt;code&gt;await&lt;/code&gt; point, where each variant stores the data needed to resume from its corresponding point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2eeefa40f9901be73a381ca76c97ef76a1ea8ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This function is only available on targets where &lt;code&gt;i16&lt;/code&gt; has an alignment of 2 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2293fd49da6801b825298bc259cec03257c7fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This function is only available on targets where &lt;code&gt;i32&lt;/code&gt; has an alignment of 4 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b262d56cf8e8f408dcc17fe9b8801b4eb3fadab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This function is only available on targets where &lt;code&gt;i64&lt;/code&gt; has an alignment of 8 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b9eed4ac2d21cb27e6a0debb93f9f3a3bcc5a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This function is only available on targets where &lt;code&gt;isize&lt;/code&gt; has an alignment of 8 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44eefe3185a3db0f5cea7158f26fe463c75dc726" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This function is only available on targets where &lt;code&gt;u16&lt;/code&gt; has an alignment of 2 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1fea0129a87e0a989b444fe1258f62a320490b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This function is only available on targets where &lt;code&gt;u32&lt;/code&gt; has an alignment of 4 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e50b005c31c5d32ebfdba7f184b17a96b48b58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This function is only available on targets where &lt;code&gt;u64&lt;/code&gt; has an alignment of 8 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc61ff9f0824102bc626b9c7cdffa39c424b522" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This function is only available on targets where &lt;code&gt;usize&lt;/code&gt; has an alignment of 8 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7305f68e95514e24a7c95d0883b00ea54e7a5611" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This method is only available on platforms that support atomic operations on &lt;code&gt;u8&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f9beca619923587f1e53345a612ee54183accda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This method is only available on platforms that support atomic operations on pointers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4637566695ac5a54cd62243b48c42f9fc2ba5a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This syntax only adds another restriction to the visibility of an item. It does not guarantee that the item is visible within all parts of the specified scope. To access an item, all of its parent items up to the current scope must still be visible as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133699edea54cc02f638b728f6d305bf0c4eb4aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This type is only available on platforms that support atomic loads and stores of &lt;a href=&quot;../../primitive.i16&quot;&gt;&lt;code&gt;i16&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d47c135cd7e9598aabb084d4e238fb2da1f926" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This type is only available on platforms that support atomic loads and stores of &lt;a href=&quot;../../primitive.i32&quot;&gt;&lt;code&gt;i32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12df48c2a5ede4cad5f196c278170c76aa69b27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This type is only available on platforms that support atomic loads and stores of &lt;a href=&quot;../../primitive.i64&quot;&gt;&lt;code&gt;i64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770d30f50039965c0a80bc18afb0f57006c8ecf7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This type is only available on platforms that support atomic loads and stores of &lt;a href=&quot;../../primitive.i8&quot;&gt;&lt;code&gt;i8&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3770fb7d89c845d66075484dac6af6613879c5c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This type is only available on platforms that support atomic loads and stores of &lt;a href=&quot;../../primitive.isize&quot;&gt;&lt;code&gt;isize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb007ca7675d599d0fd1022828e893745c373c65" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This type is only available on platforms that support atomic loads and stores of &lt;a href=&quot;../../primitive.u16&quot;&gt;&lt;code&gt;u16&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf286238fb78dad77f34b185f05fcd2ccdeabb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This type is only available on platforms that support atomic loads and stores of &lt;a href=&quot;../../primitive.u32&quot;&gt;&lt;code&gt;u32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3460e7cb91ab667e7a2edc5f99bef2b41f79b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This type is only available on platforms that support atomic loads and stores of &lt;a href=&quot;../../primitive.u64&quot;&gt;&lt;code&gt;u64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0118a9443b5848b0cf822fd3a311a3f6ce113f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This type is only available on platforms that support atomic loads and stores of &lt;a href=&quot;../../primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de09eea9ef2bf2d098a984258c71927e3c4b2b70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This type is only available on platforms that support atomic loads and stores of &lt;a href=&quot;../../primitive.usize&quot;&gt;&lt;code&gt;usize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc278c534e3be01a1f5e2970b2fd676ed81d535" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Uninitialized memory is also implicitly invalid for any type that has a restricted set of valid values. In other words, the only cases in which reading uninitialized memory is permitted are inside &lt;code&gt;union&lt;/code&gt;s and in &quot;padding&quot; (the gaps between the fields/elements of a type).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb5d63cdf94e5456c6918112042bd1091e5e9f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;a href=&quot;variables&quot;&gt;variables&lt;/a&gt;, function parameters, &lt;a href=&quot;items/constant-items&quot;&gt;const&lt;/a&gt; items, and &lt;a href=&quot;items/static-items&quot;&gt;static&lt;/a&gt; items must be &lt;code&gt;Sized&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d46ac6d8774740d98a4009a231d2213aeed2a7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;rustc&lt;/code&gt; achieves this with the unstable &lt;code&gt;rustc_layout_scalar_valid_range_*&lt;/code&gt; attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50c739d9eb5da5613037181f561652a032953a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Additional crates that ship with &lt;code&gt;rustc&lt;/code&gt;, such as &lt;a href=&quot;https://doc.rust-lang.org/alloc/index.html&quot;&gt;&lt;code&gt;alloc&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://doc.rust-lang.org/test/index.html&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt;, are not automatically included with the &lt;code&gt;--extern&lt;/code&gt; flag when using Cargo. They must be brought into scope with an &lt;code&gt;extern crate&lt;/code&gt; declaration, even in the 2018 edition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf68398fddb94f0a1abd51db31ce0b9347bd8495" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Additional crates that ship with &lt;code&gt;rustc&lt;/code&gt;, such as &lt;a href=&quot;https://doc.rust-lang.org/proc_macro/index.html&quot;&gt;&lt;code&gt;proc_macro&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://doc.rust-lang.org/alloc/index.html&quot;&gt;&lt;code&gt;alloc&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://doc.rust-lang.org/test/index.html&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt;, are not automatically included with the &lt;code&gt;--extern&lt;/code&gt; flag when using Cargo. They must be brought into scope with an &lt;code&gt;extern crate&lt;/code&gt; declaration, even in the 2018 edition.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; : Дополнительные ящики , которые поставляются с &lt;code&gt;rustc&lt;/code&gt; , такие как &lt;a href=&quot;https://doc.rust-lang.org/proc_macro/index.html&quot;&gt; &lt;code&gt;proc_macro&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://doc.rust-lang.org/alloc/index.html&quot;&gt; &lt;code&gt;alloc&lt;/code&gt; &lt;/a&gt; , и &lt;a href=&quot;https://doc.rust-lang.org/test/index.html&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt; , не включаются автоматически с &lt;code&gt;--extern&lt;/code&gt; флагом при использовании Cargo. Они должны быть включены в область действия с объявлением &lt;code&gt;extern crate&lt;/code&gt; даже в версии 2018 года.</target>
        </trans-unit>
        <trans-unit id="d2b504e0a31dcf2bae64d03c73c728e13b4132f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Configuration options with the key &lt;code&gt;feature&lt;/code&gt; are a convention used by &lt;a href=&quot;https://doc.rust-lang.org/cargo/reference/features.html&quot;&gt;Cargo&lt;/a&gt; for specifying compile-time options and optional dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8381d4f5be828c7771e48194e3784bf6556e9d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: For &lt;code&gt;rustc&lt;/code&gt;, arbitrary-set configuration options are set using the &lt;a href=&quot;https://doc.rust-lang.org/rustc/command-line-arguments.html#--cfg-configure-the-compilation-environment&quot;&gt;&lt;code&gt;--cfg&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e534aae954895e78357179a1ac94a40dd8cf86b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: For &lt;code&gt;rustc&lt;/code&gt;, arbitrary-set configuration options are set using the &lt;a href=&quot;https://doc.rust-lang.org/rustc/command-line-arguments.html#a--cfg-configure-the-compilation-environment&quot;&gt;&lt;code&gt;--cfg&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; : для &lt;code&gt;rustc&lt;/code&gt; произвольные параметры конфигурации устанавливаются с &lt;a href=&quot;https://doc.rust-lang.org/rustc/command-line-arguments.html#a--cfg-configure-the-compilation-environment&quot;&gt; &lt;code&gt;--cfg&lt;/code&gt; &lt;/a&gt; флага --cfg .</target>
        </trans-unit>
        <trans-unit id="c424a34ea4d877226958104553992541e3787ae9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: In the past, the Rust community used the terms &quot;Unambiguous Function Call Syntax&quot;, &quot;Universal Function Call Syntax&quot;, or &quot;UFCS&quot;, in documentation, issues, RFCs, and other community writings. However, the term lacks descriptive power and potentially confuses the issue at hand. We mention it here for searchability's sake.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; : в прошлом сообщество Rust использовало термины &amp;laquo;синтаксис однозначного вызова функций&amp;raquo;, &amp;laquo;синтаксис универсального вызова функций&amp;raquo; или &amp;laquo;UFCS&amp;raquo; в документации, выпусках, RFC и других документах сообщества. Однако этому термину не хватает описательной силы, и он может запутать насущную проблему. Мы упоминаем это здесь для удобства поиска.</target>
        </trans-unit>
        <trans-unit id="7e4168c7dfa2ff3fb21bdd3b2ee7e059ab5726bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Lifetimes can be, and usually are, elided with this shorthand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccc13cc797f7b85b663c8c0720dcbb028e2999f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Many pieces of Rust code may assume that pointers, &lt;code&gt;usize&lt;/code&gt;, and &lt;code&gt;isize&lt;/code&gt; are either 32-bit or 64-bit. As a consequence, 16-bit pointer support is limited and may require explicit care and acknowledgment from a library to support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee6a6f44b42148913ce05336e8333f03b878a8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: On platforms that do not support receiving spin-loop hints this function does not do anything at all.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . На платформах, которые не поддерживают получение подсказок циклического вращения, эта функция вообще ничего не делает.</target>
        </trans-unit>
        <trans-unit id="3cd7dc42d46fc1a7eaf8316e86e18b4771b7a37c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Previous to &lt;code&gt;rustc&lt;/code&gt; 1.30, using &lt;code&gt;mod.rs&lt;/code&gt; files was the way to load a module with nested children. It is encouraged to use the new naming convention as it is more consistent, and avoids having many files named &lt;code&gt;mod.rs&lt;/code&gt; within a project.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . До &lt;code&gt;rustc&lt;/code&gt; 1.30 использование файлов &lt;code&gt;mod.rs&lt;/code&gt; было способом загрузки модуля с вложенными дочерними элементами . Рекомендуется использовать новое соглашение об именах, поскольку оно более согласовано и позволяет избежать использования большого количества файлов с именем &lt;code&gt;mod.rs&lt;/code&gt; в проекте.</target>
        </trans-unit>
        <trans-unit id="09dbeb2a0b5b6ab350517ca73457c241b60699f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;cfg_attr&lt;/code&gt; can expand to another &lt;code&gt;cfg_attr&lt;/code&gt;. For example, &lt;code&gt;#[cfg_attr(linux, cfg_attr(feature = &quot;multithreaded&quot;, some_other_attribute))&lt;/code&gt; is valid. This example would be equivalent to &lt;code&gt;#[cfg_attr(all(linux, feature =&quot;multithreaded&quot;), some_other_attribute)]&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; : &lt;code&gt;cfg_attr&lt;/code&gt; может расширяться до другого &lt;code&gt;cfg_attr&lt;/code&gt; . Например, &lt;code&gt;#[cfg_attr(linux, cfg_attr(feature = &quot;multithreaded&quot;, some_other_attribute))&lt;/code&gt; является допустимым. Этот пример будет эквивалентен &lt;code&gt;#[cfg_attr(all(linux, feature =&quot;multithreaded&quot;), some_other_attribute)]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48afce94d3f617db585b69f838ac8fa2fe7c7c45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;cfg_attr&lt;/code&gt; can expand to another &lt;code&gt;cfg_attr&lt;/code&gt;. For example, &lt;code&gt;#[cfg_attr(target_os = &quot;linux&quot;, cfg_attr(feature = &quot;multithreaded&quot;, some_other_attribute))]&lt;/code&gt; is valid. This example would be equivalent to &lt;code&gt;#[cfg_attr(all(target_os = &quot;linux&quot;, feature =&quot;multithreaded&quot;), some_other_attribute)]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542e5e434f17a5e7fe96f177447ca260c03e5782" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;rustc&lt;/code&gt; test harness supports the &lt;code&gt;--include-ignored&lt;/code&gt; flag to force ignored tests to be run.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; : &lt;code&gt;rustc&lt;/code&gt; тест Жгут поддерживает &lt;code&gt;--include-ignored&lt;/code&gt; флаг , чтобы заставить игнорируемые тесты , которые необходимо выполнить.</target>
        </trans-unit>
        <trans-unit id="ee8746d1970619c1573d4cba9ddf4d37981ddfcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The LLVM backend of the &lt;code&gt;rustc&lt;/code&gt; implementation aborts the process by executing an illegal instruction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6a9b1648330a6c400057a929b0e006d7b0e3f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The exact rules for temporary lifetime extension are subject to change. This is describing the current behavior only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9663ac595985a9b26dbb960d0c43b0ba63112b12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The tuple index may include an &lt;code&gt;INTEGER_SUFFIX&lt;/code&gt;, but this is not intended to be valid, and may be removed in a future version. See &lt;a href=&quot;https://github.com/rust-lang/rust/issues/60210&quot;&gt;https://github.com/rust-lang/rust/issues/60210&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e578eea7529dc499f5ab70e8ee02f1a3a04f7e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function returns an array of length 2, 4 or 8 bytes depending on the target pointer size.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Эта функция возвращает массив длиной 2, 4 или 8 байтов в зависимости от размера целевого указателя.</target>
        </trans-unit>
        <trans-unit id="204f556d6eb284d02edf2bf12e7415dff429dcbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function takes an array of length 2, 4 or 8 bytes depending on the target pointer size.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Эта функция принимает массив длиной 2, 4 или 8 байтов в зависимости от размера целевого указателя.</target>
        </trans-unit>
        <trans-unit id="205669dd54e34ac0f225ea4e8c1e039e92861b84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This is an example note.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Это пример заметки.</target>
        </trans-unit>
        <trans-unit id="4f8175ab0b6ced026c78c226ce62e4e0326a00cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is currently implemented as a 0-cost cast, but it is planned to alter its definition in the future to perform the length calculation whenever this method is called.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Этот метод в настоящее время реализован как приведение с нулевой стоимостью, но в будущем планируется изменить его определение, чтобы выполнять расчет длины при каждом вызове этого метода.</target>
        </trans-unit>
        <trans-unit id="9364ca407d4e4789b372b4d12ec8ebcdd47debe7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is currently implemented as a constant-time cast, but it is planned to alter its definition in the future to perform the length calculation whenever this method is called.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Этот метод в настоящее время реализован как приведение к постоянному времени, но в будущем планируется изменить его определение, чтобы выполнять вычисление длины при каждом вызове этого метода.</target>
        </trans-unit>
        <trans-unit id="9acff81794f805a2a107dfa5d332d79517391aa9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is currently implemented to check for validity after a constant-time cast, but it is planned to alter its definition in the future to perform the length calculation in addition to the UTF-8 check whenever this method is called.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Этот метод в настоящее время реализован для проверки действительности после приведения в постоянное время, но в будущем планируется изменить его определение, чтобы выполнять вычисление длины в дополнение к проверке UTF-8 при каждом вызове этого метода.</target>
        </trans-unit>
        <trans-unit id="77e80de2eb59d874ef66f952f67864f1b6680268" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is only available on platforms that support atomic operations on &lt;a href=&quot;../../primitive.i16&quot;&gt;&lt;code&gt;i16&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416612bbf1909b1aaf73c8e8594ced2ad9b5958a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is only available on platforms that support atomic operations on &lt;a href=&quot;../../primitive.i32&quot;&gt;&lt;code&gt;i32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798babd1633ffc3445fb72738f51aaf665f2e799" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is only available on platforms that support atomic operations on &lt;a href=&quot;../../primitive.i64&quot;&gt;&lt;code&gt;i64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969f814fd42a6f3586c98e8e6d74c5e1cf0d998f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is only available on platforms that support atomic operations on &lt;a href=&quot;../../primitive.i8&quot;&gt;&lt;code&gt;i8&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a8e7d995f2b7f517cfd0675f44c74f193e4d3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is only available on platforms that support atomic operations on &lt;a href=&quot;../../primitive.isize&quot;&gt;&lt;code&gt;isize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7cf4f75cf7c1494a07e470c8288c8e67f0a8a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is only available on platforms that support atomic operations on &lt;a href=&quot;../../primitive.u16&quot;&gt;&lt;code&gt;u16&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902c1326c59de40d4ee4bf24e303fa8f00886b0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is only available on platforms that support atomic operations on &lt;a href=&quot;../../primitive.u32&quot;&gt;&lt;code&gt;u32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49fa7c747b4b2f8fc4c2e1fee0ddd570ecece9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is only available on platforms that support atomic operations on &lt;a href=&quot;../../primitive.u64&quot;&gt;&lt;code&gt;u64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60105950473e3de294db7b21f197086831cb667" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is only available on platforms that support atomic operations on &lt;a href=&quot;../../primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be6463d1fafa0db1e322e03e3852c3a451379a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method is only available on platforms that support atomic operations on &lt;a href=&quot;../../primitive.usize&quot;&gt;&lt;code&gt;usize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c5be5853f961e5512f727adc94106859254411" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This operation is intended to be a 0-cost cast but it is currently implemented with an up-front calculation of the length of the string. This is not guaranteed to always be the case.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Эта операция предназначена для преобразования с нулевой стоимостью, но в настоящее время она реализована с предварительным вычислением длины строки. Не гарантируется, что так будет всегда.</target>
        </trans-unit>
        <trans-unit id="669d4b633ce688c467334ac7653c165183f2e3ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This section is incomplete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543aaedbc9a3d7322ce93678b22b0281abf794f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This type is only available on platforms that support atomic loads and stores of &lt;code&gt;u8&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245a6aeba0c030e92193a51c1b871f48d851f54f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This type is only available on platforms that support atomic loads and stores of pointers. Its size depends on the target pointer's size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5df3103e6447e1ad2ce9490f42afb19650917b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Undefined behavior affects the entire program. For example, calling a function in C that exhibits undefined behavior of C means your entire program contains undefined behaviour that can also affect the Rust code. And vice versa, undefined behavior in Rust can cause adverse affects on code executed by any FFI calls to other languages.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Неопределенное поведение влияет на всю программу. Например, вызов функции в C, которая демонстрирует неопределенное поведение C, означает, что вся ваша программа содержит неопределенное поведение, которое также может повлиять на код Rust. И наоборот, неопределенное поведение в Rust может отрицательно повлиять на код, выполняемый любыми вызовами FFI на другие языки.</target>
        </trans-unit>
        <trans-unit id="9b1e7bb136e3f88a33c4a3167dcad6a39cd6165d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Unlike field access expressions, tuple index expressions can be the function operand of a &lt;a href=&quot;call-expr&quot;&gt;call expression&lt;/a&gt; as it cannot be confused with a method call since method names cannot be numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf566863d0e6c1f93fa47ff736f9ade81dd38c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When using Cargo, Procedural macro crates are defined with the &lt;code&gt;proc-macro&lt;/code&gt; key in your manifest:</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . При использовании Cargo ящики процедурных макросов определяются с помощью ключа &lt;code&gt;proc-macro&lt;/code&gt; в вашем манифесте:</target>
        </trans-unit>
        <trans-unit id="a7f8ef7c18d1ebc911a4b8802c9c294409605f53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Whitespace around the &lt;code&gt;=&lt;/code&gt; is ignored. &lt;code&gt;foo=&quot;bar&quot;&lt;/code&gt; and &lt;code&gt;foo = &quot;bar&quot;&lt;/code&gt; are equivalent configuration options.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Пробелы вокруг &lt;code&gt;=&lt;/code&gt; игнорируются. &lt;code&gt;foo=&quot;bar&quot;&lt;/code&gt; и &lt;code&gt;foo = &quot;bar&quot;&lt;/code&gt; - эквивалентные параметры конфигурации.</target>
        </trans-unit>
        <trans-unit id="c47f0cd1f3859cc5bbc515bae176883c35a2e5e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: that the outer &lt;code&gt;match&lt;/code&gt; is used to ensure that any &lt;a href=&quot;../expressions#temporaries&quot;&gt;temporary values&lt;/a&gt; in &lt;code&gt;iter_expr&lt;/code&gt; don't get dropped before the loop is finished. &lt;code&gt;next&lt;/code&gt; is declared before being assigned because it results in types being inferred correctly more often.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0b8f99436f4b7d93b7e3e4bd936fecc9cacde1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: that the outer &lt;code&gt;match&lt;/code&gt; is used to ensure that any &lt;a href=&quot;../expressions#temporary-lifetimes&quot;&gt;temporary values&lt;/a&gt; in &lt;code&gt;iter_expr&lt;/code&gt; don't get dropped before the loop is finished. &lt;code&gt;next&lt;/code&gt; is declared before being assigned because it results in types being inferred correctly more often.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; : внешнее &lt;code&gt;match&lt;/code&gt; используется, чтобы гарантировать, что любые &lt;a href=&quot;../expressions#temporary-lifetimes&quot;&gt;временные значения&lt;/a&gt; в &lt;code&gt;iter_expr&lt;/code&gt; не будут отброшены до завершения цикла. &lt;code&gt;next&lt;/code&gt; объявляется перед назначением, поскольку это приводит к более частому правильному выводу типов.</target>
        </trans-unit>
        <trans-unit id="3d08b1d0d9771f64d914289f8a909594611ec769" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: this list is more restrictive than what you can write in regular constants</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; : этот список более строгий, чем то, что вы можете написать в обычных константах.</target>
        </trans-unit>
        <trans-unit id="ff87edb614dc63eb552a33d527babfe470e595e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: this module is unstable and is designed in &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/2504-fix-error.md&quot;&gt;RFC 2504&lt;/a&gt;, and you can learn more about its status in the &lt;a href=&quot;https://github.com/rust-lang/rust/issues/53487&quot;&gt;tracking issue&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69af187844f3307c7ac46ebb6a50af4199d0748" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Notes&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="b0d06bb798430870d22a876657b39e78b6fbe0c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Nul terminators and implicit string lengths&lt;/strong&gt; - Often, C strings are nul-terminated, i.e., they have a &lt;code&gt;\0&lt;/code&gt; character at the end. The length of a string buffer is not stored, but has to be calculated; to compute the length of a string, C code must manually call a function like &lt;code&gt;strlen()&lt;/code&gt; for &lt;code&gt;char&lt;/code&gt;-based strings, or &lt;code&gt;wcslen()&lt;/code&gt; for &lt;code&gt;wchar_t&lt;/code&gt;-based ones. Those functions return the number of characters in the string excluding the nul terminator, so the buffer length is really &lt;code&gt;len+1&lt;/code&gt; characters. Rust strings don't have a nul terminator; their length is always stored and does not need to be calculated. While in Rust accessing a string's length is a &lt;code&gt;O(1)&lt;/code&gt; operation (because the length is stored); in C it is an &lt;code&gt;O(length)&lt;/code&gt; operation because the length needs to be computed by scanning the string for the nul terminator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484956955d43e1da5356d63148d3bf3ffefed245" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Nul terminators and implicit string lengths&lt;/strong&gt; - Often, C strings are nul-terminated, i.e., they have a &lt;code&gt;\0&lt;/code&gt; character at the end. The length of a string buffer is not stored, but has to be calculated; to compute the length of a string, C code must manually call a function like &lt;code&gt;strlen()&lt;/code&gt; for &lt;code&gt;char&lt;/code&gt;-based strings, or &lt;code&gt;wcslen()&lt;/code&gt; for &lt;code&gt;wchar_t&lt;/code&gt;-based ones. Those functions return the number of characters in the string excluding the nul terminator, so the buffer length is really &lt;code&gt;len+1&lt;/code&gt; characters. Rust strings don't have a nul terminator; their length is always stored and does not need to be calculated. While in Rust accessing a string's length is a O(1) operation (because the length is stored); in C it is an O(length) operation because the length needs to be computed by scanning the string for the nul terminator.</source>
          <target state="translated">&lt;strong&gt;Нулевые терминаторы и неявная длина строки&lt;/strong&gt; - Часто строки C заканчиваются нулем, т. Е. Имеют в конце символ &lt;code&gt;\0&lt;/code&gt; . Длина строкового буфера не сохраняется, но должна быть вычислена; чтобы вычислить длину строки, код C должен вручную вызвать такую ​​функцию, как &lt;code&gt;strlen()&lt;/code&gt; для строк на основе &lt;code&gt;char&lt;/code&gt; или &lt;code&gt;wcslen()&lt;/code&gt; для строк на основе &lt;code&gt;wchar_t&lt;/code&gt; . Эти функции возвращают количество символов в строке, исключая терминатор nul, поэтому длина буфера действительно равна &lt;code&gt;len+1&lt;/code&gt; .персонажи. Струны Rust не имеют нулевого терминатора; их длина всегда сохраняется и не требует вычисления. В то время как в Rust доступ к длине строки является операцией O (1) (поскольку длина сохраняется); в C это операция O (длина), потому что длина должна быть вычислена путем сканирования строки в поисках нулевого ограничителя.</target>
        </trans-unit>
        <trans-unit id="b3a55015f9b574b249377781d35ad1256b26e09a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Packages:&lt;/strong&gt; A Cargo feature that lets you build, test, and share crates</source>
          <target state="translated">&lt;strong&gt;Пакеты:&lt;/strong&gt; функция Cargo, которая позволяет создавать, тестировать и совместно использовать ящики.</target>
        </trans-unit>
        <trans-unit id="b9614e48c420558746aa5a195f1ca3514d9bdb89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Panics&lt;/strong&gt;: The scenarios in which the function being documented could panic. Callers of the function who don&amp;rsquo;t want their programs to panic should make sure they don&amp;rsquo;t call the function in these situations.</source>
          <target state="translated">&lt;strong&gt;Паника&lt;/strong&gt; : сценарии, в которых документируемая функция может вызвать панику. Вызывающие функции, которые не хотят, чтобы их программы паниковали, должны убедиться, что они не вызывают функцию в таких ситуациях.</target>
        </trans-unit>
        <trans-unit id="48ddec251d4b93c950c826aa556ff50e924f3f09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Paths:&lt;/strong&gt; A way of naming an item, such as a struct, function, or module</source>
          <target state="translated">&lt;strong&gt;Пути:&lt;/strong&gt; способ наименования элемента, такого как структура, функция или модуль.</target>
        </trans-unit>
        <trans-unit id="481513e92d2c79e9922e6fdaeaecbe26904d2dbb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Safety&lt;/strong&gt;: If the function is &lt;code&gt;unsafe&lt;/code&gt; to call (we discuss unsafety in Chapter 19), there should be a section explaining why the function is unsafe and covering the invariants that the function expects callers to uphold.</source>
          <target state="translated">&lt;strong&gt;Безопасность&lt;/strong&gt; : если функция &lt;code&gt;unsafe&lt;/code&gt; для вызова (мы обсуждаем небезопасность в главе 19), должен быть раздел, объясняющий, почему функция небезопасна, и инварианты, которые функция ожидает от вызывающих лиц.</target>
        </trans-unit>
        <trans-unit id="f938faca9bb27bfed4287077e548ce31cbf39365" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stability note:&lt;/strong&gt; This impl does not yet exist, but we are &quot;reserving space&quot; to add it in the future. See &lt;a href=&quot;https://github.com/rust-lang/rust/issues/64715&quot;&gt;rust-lang/rust#64715&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e43e997b28aeec3b9c71554f3cb60497761adcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Supertraits&lt;/strong&gt; are traits that are required to be implemented for a type to implement a specific trait. Furthermore, anywhere a &lt;a href=&quot;generics&quot;&gt;generic&lt;/a&gt; or &lt;a href=&quot;../types/trait-object&quot;&gt;trait object&lt;/a&gt; is bounded by a trait, it has access to the associated items of its supertraits.</source>
          <target state="translated">&lt;strong&gt;Суперпричины&lt;/strong&gt; - это черты, которые необходимо реализовать, чтобы тип мог реализовать определенную черту. Более того, везде, где &lt;a href=&quot;generics&quot;&gt;универсальный &lt;/a&gt;&lt;a href=&quot;../types/trait-object&quot;&gt;объект&lt;/a&gt; или объект-признак ограничен признаком, он имеет доступ к связанным элементам его суперпризнаний.</target>
        </trans-unit>
        <trans-unit id="b38548e4d26b2038d4463b0d5471fd35986ae8ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This function is deprecated.&lt;/strong&gt; Use &lt;a href=&quot;union.maybeuninit&quot;&gt;&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3ae627337dcbcd948c51fd96893635d151265e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This functon is deprecated.&lt;/strong&gt; Use &lt;a href=&quot;union.maybeuninit&quot;&gt;&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;Эта функция устарела. &lt;/strong&gt;&lt;a href=&quot;union.maybeuninit&quot;&gt; &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; используйте MaybeUninit &amp;lt;T&amp;gt; .</target>
        </trans-unit>
        <trans-unit id="90d5331accb6d1f759b6d533c2ffbb7485074384" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is soft-deprecated.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Этот метод считается устаревшим.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c2492dfd60adc66b908569e7ad4f918b77633047" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type coercions&lt;/strong&gt; are implicit operations that change the type of a value. They happen automatically at specific locations and are highly restricted in what types actually coerce.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd5055ffa46d984c313532603ca78647862a3d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unix&lt;/strong&gt;: On Unix-like platforms, it is unlikely that all 32 bits of &lt;code&gt;exit&lt;/code&gt; will be visible to a parent process inspecting the exit code. On most Unix-like platforms, only the eight least-significant bits are considered.</source>
          <target state="translated">&lt;strong&gt;Unix&lt;/strong&gt; : на Unix-подобных платформах маловероятно, что все 32 бита &lt;code&gt;exit&lt;/code&gt; будут видны родительскому процессу, проверяющему код выхода. На большинстве Unix-подобных платформ учитываются только восемь младших битов.</target>
        </trans-unit>
        <trans-unit id="4c1aa9b3c8e196e8c2b0242b80db4f7600ac8956" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Version &amp;amp; Edition Differences&lt;/strong&gt;: Prior to Rust 1.30, &lt;code&gt;$crate&lt;/code&gt; and &lt;code&gt;local_inner_macros&lt;/code&gt; (below) were unsupported. They were added alongside path-based imports of macros (described above), to ensure that helper macros did not need to be manually imported by users of a macro-exporting crate. Crates written for earlier versions of Rust that use helper macros need to be modified to use &lt;code&gt;$crate&lt;/code&gt; or &lt;code&gt;local_inner_macros&lt;/code&gt; to work well with path-based imports.</source>
          <target state="translated">&lt;strong&gt;Различия между &lt;/strong&gt; &lt;code&gt;local_inner_macros&lt;/code&gt; &lt;strong&gt;и редакциями&lt;/strong&gt; : до Rust 1.30 &lt;code&gt;$crate&lt;/code&gt; и local_inner_macros (ниже) не поддерживались. Они были добавлены вместе с импортом макросов на основе пути (описанным выше), чтобы гарантировать, что вспомогательные макросы не нужно было вручную импортировать пользователями ящика для экспорта макросов. Ящики, написанные для более ранних версий Rust, в которых используются вспомогательные макросы, необходимо изменить, чтобы использовать &lt;code&gt;$crate&lt;/code&gt; или &lt;code&gt;local_inner_macros&lt;/code&gt; , чтобы они хорошо работали с импортом на основе пути.</target>
        </trans-unit>
        <trans-unit id="a61fe7dcc9b944b7aa4bb3863418ae332c93ffba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;WARNING&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70d92d3e972f8d8fddf85474fbc20df429ca9e9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: While various forms of this were discussed in &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/1937&quot;&gt;RFC #1937&lt;/a&gt;, it was ultimately cut from that RFC, and thus this type is more subject to change even than the usual unstable item churn.</source>
          <target state="translated">&lt;strong&gt;Предупреждение&lt;/strong&gt; : хотя различные формы этого обсуждались в &lt;a href=&quot;https://github.com/rust-lang/rfcs/pull/1937&quot;&gt;RFC # 1937&lt;/a&gt; , в конечном итоге он был исключен из этого RFC, и, таким образом, этот тип более подвержен изменениям даже, чем обычный нестабильный отток элементов.</target>
        </trans-unit>
        <trans-unit id="430cf372e21694405a7f29b4ea7aae36bbc30335" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;1&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;1&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0a5afaa9ee5bac968c87333877722aa1495b952b" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;2&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;2&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="488963209bc6867c0591ac82a1cb9c1a6a118fd7" translate="yes" xml:space="preserve">
          <source>A &quot;meta item&quot; is the syntax used for the &lt;em&gt;Attr&lt;/em&gt; rule by most &lt;a href=&quot;#built-in-attributes-index&quot;&gt;built-in attributes&lt;/a&gt;. It has the following grammar:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ab7f7217b5214e279ea052fb2ed3cfbd58c8f2" translate="yes" xml:space="preserve">
          <source>A &quot;meta item&quot; is the syntax used for the &lt;em&gt;Attr&lt;/em&gt; rule by most &lt;a href=&quot;attributes#built-in-attributes-index&quot;&gt;built-in attributes&lt;/a&gt; and the &lt;a href=&quot;macros-by-example&quot;&gt;&lt;code&gt;meta&lt;/code&gt; macro fragment specifier&lt;/a&gt;. It has the following grammar:</source>
          <target state="translated">&amp;laquo;Метаэлемент&amp;raquo; - это синтаксис, используемый для правила &lt;em&gt;Attr&lt;/em&gt; большинством &lt;a href=&quot;attributes#built-in-attributes-index&quot;&gt;встроенных атрибутов&lt;/a&gt; и &lt;a href=&quot;macros-by-example&quot;&gt;спецификатором &lt;/a&gt; &lt;code&gt;meta&lt;/code&gt; макроса . Он имеет следующую грамматику:</target>
        </trans-unit>
        <trans-unit id="22d3a6ec1e16d0b77c16e420bbe8e26c33c2811f" translate="yes" xml:space="preserve">
          <source>A &quot;stack allocated string&quot;:</source>
          <target state="translated">&quot;Строка,выделенная для стека&quot;:</target>
        </trans-unit>
        <trans-unit id="b64a876ef415d016ec9dc92ffaf76e9ab89ca04f" translate="yes" xml:space="preserve">
          <source>A 'radix' here is sometimes also called a 'base'. A radix of two indicates a binary number, a radix of ten, decimal, and a radix of sixteen, hexadecimal, to give some common values. Arbitrary radices are supported.</source>
          <target state="translated">Радикс здесь иногда также называют &quot;базой&quot;.Радиксом два называется двоичное число,радиксом десять,десятичный,и радиксом шестнадцать,шестнадцати,шестнадцатиричный,чтобы дать некоторые общие значения.Поддерживаются произвольные радиусы.</target>
        </trans-unit>
        <trans-unit id="41c53bc2a64d3e62babdedd9c3047a7e08995ee3" translate="yes" xml:space="preserve">
          <source>A (half-open) range bounded inclusively below and exclusively above (&lt;code&gt;start..end&lt;/code&gt;).</source>
          <target state="translated">Диапазон (полуоткрытый), ограниченный включительно снизу и исключительно сверху ( &lt;code&gt;start..end&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e85a39e82a0e6ccf8c895d65c91fa1d7ce99d7cb" translate="yes" xml:space="preserve">
          <source>A 32-bit floating point type (specifically, the &quot;binary32&quot; type defined in IEEE 754-2008).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10239381d11a9cda1bbf8cfa43daeb6653a356ab" translate="yes" xml:space="preserve">
          <source>A 64-bit floating point type (specifically, the &quot;binary64&quot; type defined in IEEE 754-2008).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a791c9e3c1b8c3cb3ad7090a3f0956b3498d4ea" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#infinite-loops&quot;&gt;&lt;code&gt;loop&lt;/code&gt; expression&lt;/a&gt; denotes an infinite loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c403143d347d88d290407287e086a1c24df257de" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#iterator-loops&quot;&gt;&lt;code&gt;for&lt;/code&gt; expression&lt;/a&gt; extracts values from an iterator, looping until the iterator is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3523931588ba19ab3285934f4c9625ad5b0ff3e8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#predicate-loops&quot;&gt;&lt;code&gt;while&lt;/code&gt; expression&lt;/a&gt; loops until a predicate is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43257c2bbdee41f14d8f6aab49394bf581fd3e4e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#predicate-pattern-loops&quot;&gt;&lt;code&gt;while let&lt;/code&gt; expression&lt;/a&gt; tests a pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1847a494c164bc5812c67ca50bfe2768f6e254d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../expressions/closure-expr&quot;&gt;closure expression&lt;/a&gt; produces a closure value with a unique, anonymous type that cannot be written out. A closure type is approximately equivalent to a struct which contains the captured variables. For instance, the following closure:</source>
          <target state="translated">&lt;a href=&quot;../expressions/closure-expr&quot;&gt;Выражение закрытия&lt;/a&gt; производит значение закрытия с уникальным, анонимным типом , который не может быть выписан. Тип закрытия примерно эквивалентен структуре, содержащей захваченные переменные. Например, следующее закрытие:</target>
        </trans-unit>
        <trans-unit id="3cfb72d2748a10ee8855d86ad887d39ff3f43dfe" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../paths&quot;&gt;path&lt;/a&gt; used as an expression context denotes either a local variable or an item. Path expressions that resolve to local or static variables are &lt;a href=&quot;../expressions#place-expressions-and-value-expressions&quot;&gt;place expressions&lt;/a&gt;, other paths are &lt;a href=&quot;../expressions#place-expressions-and-value-expressions&quot;&gt;value expressions&lt;/a&gt;. Using a &lt;a href=&quot;../items/static-items#mutable-statics&quot;&gt;&lt;code&gt;static mut&lt;/code&gt;&lt;/a&gt; variable requires an &lt;a href=&quot;block-expr#unsafe-blocks&quot;&gt;&lt;code&gt;unsafe&lt;/code&gt; block&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../paths&quot;&gt;Путь&lt;/a&gt; используется как выражение контекста означает либо локальный переменный или элемент. Выражения пути, которые разрешаются в локальные или статические переменные, являются &lt;a href=&quot;../expressions#place-expressions-and-value-expressions&quot;&gt;выражениями места&lt;/a&gt; , другие пути - &lt;a href=&quot;../expressions#place-expressions-and-value-expressions&quot;&gt;выражениями значений&lt;/a&gt; . Использование &lt;a href=&quot;../items/static-items#mutable-statics&quot;&gt; &lt;code&gt;static mut&lt;/code&gt; &lt;/a&gt; переменной mut требует &lt;a href=&quot;block-expr#unsafe-blocks&quot;&gt; &lt;code&gt;unsafe&lt;/code&gt; блока&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8c135626ccc454eee440ccf3a13f0ec15be919ba" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; is a &lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt;Unicode Scalar Value&lt;/a&gt;, which means that it is a &lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;Code Point&lt;/a&gt;, but only ones within a certain range. &lt;code&gt;MAX&lt;/code&gt; is the highest valid code point that's a valid &lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt;Unicode Scalar Value&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; является &lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt;Unicode значения скаляра&lt;/a&gt; , что означает , что это &lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;точка коды&lt;/a&gt; , а только те , в пределах определенного диапазона. &lt;code&gt;MAX&lt;/code&gt; - это наивысшая допустимая кодовая точка, которая является допустимым &lt;a href=&quot;http://www.unicode.org/glossary/#unicode_scalar_value&quot;&gt;скалярным значением Unicode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc3502c112d8c240016de6db9fd46c1abe533f18" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; without structural pinning could &lt;code&gt;impl&amp;lt;T&amp;gt; Unpin for Vec&amp;lt;T&amp;gt;&lt;/code&gt;, because the contents are never pinned and the &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; itself is fine with being moved as well. At that point pinning just has no effect on the vector at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd0f4f45a9992b5e83d00a801ad1d124dd353bf" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;enum.searchstep#variant.Match&quot;&gt;&lt;code&gt;Match&lt;/code&gt;&lt;/a&gt; result needs to contain the whole matched pattern, however &lt;a href=&quot;enum.searchstep#variant.Reject&quot;&gt;&lt;code&gt;Reject&lt;/code&gt;&lt;/a&gt; results may be split up into arbitrary many adjacent fragments. Both ranges may have zero length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817aefb1123a860203996fe1bc087199cf9a9301" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;fn.null&quot;&gt;null&lt;/a&gt; pointer is &lt;em&gt;never&lt;/em&gt; valid, not even for accesses of &lt;a href=&quot;https://doc.rust-lang.org/nomicon/exotic-sizes.html#zero-sized-types-zsts&quot;&gt;size zero&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;fn.null&quot;&gt;Нулевой&lt;/a&gt; указатель &lt;em&gt;никогда не&lt;/em&gt; действует, даже не для доступов &lt;a href=&quot;https://doc.rust-lang.org/nomicon/exotic-sizes.html#zero-sized-types-zsts&quot;&gt;нулевого размера&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="64470c49d997c71e612fbbb1108517461ba5028e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;items/associated-items#methods&quot;&gt;method&lt;/a&gt; defined in an &lt;a href=&quot;items/implementations#inherent-implementations&quot;&gt;inherent implementation&lt;/a&gt;, not in a trait implementation.</source>
          <target state="translated">&lt;a href=&quot;items/associated-items#methods&quot;&gt;Метод&lt;/a&gt; , определенный в &lt;a href=&quot;items/implementations#inherent-implementations&quot;&gt;присущей реализации&lt;/a&gt; , а не в реализации признака.</target>
        </trans-unit>
        <trans-unit id="2929c70726dc937049a9f5950f13c4723ad1c193" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;loop-expr#infinite-loops&quot;&gt;&lt;code&gt;loop&lt;/code&gt; expression&lt;/a&gt; denotes an infinite loop.</source>
          <target state="translated">&lt;a href=&quot;loop-expr#infinite-loops&quot;&gt; &lt;code&gt;loop&lt;/code&gt; выражение&lt;/a&gt; обозначает бесконечную петлю.</target>
        </trans-unit>
        <trans-unit id="e86e93a58bbbbc71c44b9b885a659ff826ce9490" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;loop-expr#iterator-loops&quot;&gt;&lt;code&gt;for&lt;/code&gt; expression&lt;/a&gt; extracts values from an iterator, looping until the iterator is empty.</source>
          <target state="translated">&lt;a href=&quot;loop-expr#iterator-loops&quot;&gt; &lt;code&gt;for&lt;/code&gt; выражения&lt;/a&gt; экстрактов значения из итератора, перекручивание , пока итератор не пуст.</target>
        </trans-unit>
        <trans-unit id="78d2df8a50ce969bca66a5211eeeb6570b3f1784" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;loop-expr#predicate-loops&quot;&gt;&lt;code&gt;while&lt;/code&gt; expression&lt;/a&gt; loops until a predicate is false.</source>
          <target state="translated">&lt;a href=&quot;loop-expr#predicate-loops&quot;&gt; &lt;code&gt;while&lt;/code&gt; экспрессии&lt;/a&gt; петель до тех пор , пока предикат является ложным.</target>
        </trans-unit>
        <trans-unit id="506fd8c66fe2c3330ab3ababc69a27680d58db08" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;loop-expr#predicate-pattern-loops&quot;&gt;&lt;code&gt;while let&lt;/code&gt; expression&lt;/a&gt; tests a pattern.</source>
          <target state="translated">Некоторое &lt;a href=&quot;loop-expr#predicate-pattern-loops&quot;&gt; &lt;code&gt;while let&lt;/code&gt; expression&lt;/a&gt; проверяет шаблон.</target>
        </trans-unit>
        <trans-unit id="33cacd9cafdfaf3ef4cf01b5b7dfb994c4cd9727" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;patterns#struct-patterns&quot;&gt;struct&lt;/a&gt;, &lt;a href=&quot;patterns#tuple-patterns&quot;&gt;tuple&lt;/a&gt;, &lt;a href=&quot;patterns#tuple-struct-patterns&quot;&gt;tuple struct&lt;/a&gt;, or &lt;a href=&quot;patterns#slice-patterns&quot;&gt;slice&lt;/a&gt; pattern where at least one of the direct subpatterns is a extending pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1f2559cf32a60aeffbe295d8dcc8b7d2d1bc74" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;struct.path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; might contain non-Unicode data. This &lt;code&gt;struct&lt;/code&gt; implements the &lt;a href=&quot;../fmt/trait.display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt; trait in a way that mitigates that. It is created by the &lt;a href=&quot;struct.path#method.display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;struct.path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;struct.path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; может содержать данные , не Unicode. Эта &lt;code&gt;struct&lt;/code&gt; реализует свойство &lt;a href=&quot;../fmt/trait.display&quot;&gt; &lt;code&gt;Display&lt;/code&gt; &lt;/a&gt; таким образом, чтобы это смягчить. Он создается методом &lt;a href=&quot;struct.path#method.display&quot;&gt; &lt;code&gt;display&lt;/code&gt; &lt;/a&gt; на &lt;a href=&quot;struct.path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8ad6cb9fb2de3ff94c9692c27c57c7195ec6d6cb" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt;&lt;/a&gt; ensures that the pointee of any pointer type &lt;code&gt;P&lt;/code&gt; has a stable location in memory, meaning it cannot be moved elsewhere and its memory cannot be deallocated until it gets dropped. We say that the pointee is &quot;pinned&quot;.</source>
          <target state="translated">&lt;a href=&quot;struct.pin&quot;&gt; &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; &lt;/a&gt; гарантирует , что pointee любого типа указателя &lt;code&gt;P&lt;/code&gt; имеет стабильное место в памяти, то есть он не может быть перемещен в другом месте , и его память не может быть высвобождена , пока он не потеряется. Мы говорим, что пуансон &amp;laquo;приколот&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="a15e8cc8aa6158fcb3389cfdaf6e7e84bacae80c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;struct.sender&quot;&gt;&lt;code&gt;Sender&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;struct.syncsender&quot;&gt;&lt;code&gt;SyncSender&lt;/code&gt;&lt;/a&gt; is used to send data to a &lt;a href=&quot;struct.receiver&quot;&gt;&lt;code&gt;Receiver&lt;/code&gt;&lt;/a&gt;. Both senders are clone-able (multi-producer) such that many threads can send simultaneously to one receiver (single-consumer).</source>
          <target state="translated">&lt;a href=&quot;struct.sender&quot;&gt; &lt;code&gt;Sender&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;struct.syncsender&quot;&gt; &lt;code&gt;SyncSender&lt;/code&gt; &lt;/a&gt; используется для передачи данных в &lt;a href=&quot;struct.receiver&quot;&gt; &lt;code&gt;Receiver&lt;/code&gt; &lt;/a&gt; . Оба отправителя могут быть клонированы (несколько производителей), так что многие потоки могут отправлять одновременно одному получателю (один-потребитель).</target>
        </trans-unit>
        <trans-unit id="e878b6c48911644ea2ee908e204d14d9ba8414f3" translate="yes" xml:space="preserve">
          <source>A &lt;code id=&quot;a-worker-struct-responsible-for-sending-code-from-the-threadpool-to-a-thread&quot;&gt;Worker&lt;/code&gt; Struct Responsible for Sending Code from the &lt;code&gt;ThreadPool&lt;/code&gt; to a Thread</source>
          <target state="translated">&lt;code id=&quot;a-worker-struct-responsible-for-sending-code-from-the-threadpool-to-a-thread&quot;&gt;Worker&lt;/code&gt; Struct , ответственный за отправку кода из &lt;code&gt;ThreadPool&lt;/code&gt; на тему</target>
        </trans-unit>
        <trans-unit id="f340f8a1c0de4fb7863ae5c6dacd93b470ac42d8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;!&lt;/code&gt; (all values are invalid for this type).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1329292e0705741bc6efb49bebc4980736dafb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#![feature]&lt;/code&gt; attribute was declared for a feature that is stable in the current edition, but not in all editions.</source>
          <target state="translated">&lt;code&gt;#![feature]&lt;/code&gt; атрибут был объявлен для функции , которая является стабильной в текущем издании, но не во всех изданиях.</target>
        </trans-unit>
        <trans-unit id="aaa8a708af81269c0b5576d02729333db199fa1d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#![feature]&lt;/code&gt; attribute was declared multiple times.</source>
          <target state="translated">&lt;code&gt;#![feature]&lt;/code&gt; атрибут был объявлен несколько раз.</target>
        </trans-unit>
        <trans-unit id="871ef5c0f72000286445ffa6aeaeb13201eef94a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#[lang = &quot;..&quot;]&lt;/code&gt; attribute was placed on the wrong item type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a617fa960129a71a59055ffc0553333e4d1938" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#[marker]&lt;/code&gt; trait contained an associated item.</source>
          <target state="translated">Характеристика &lt;code&gt;#[marker]&lt;/code&gt; содержит связанный элемент.</target>
        </trans-unit>
        <trans-unit id="9dfceb8cd31c1c51915cc559ef8cce0d369c7062" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#[repr(..)]&lt;/code&gt; attribute was placed on an unsupported item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9d6b916ce0da508f854e05a1feec7e0befaef9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#[repr(inttype)]&lt;/code&gt; must be provided on an &lt;code&gt;enum&lt;/code&gt; if it has a non-unit variant with a discriminant, or where there are both unit variants with discriminants and non-unit variants. This restriction ensures that there is a well-defined way to extract a variant's discriminant from a value; for instance:</source>
          <target state="translated">&lt;code&gt;#[repr(inttype)]&lt;/code&gt; должен быть предусмотрен на &lt;code&gt;enum&lt;/code&gt; , если он имеет не единичный вариант с дискриминантом, или там , где оба блока варианты с дискриминантами и не-блок вариантов. Это ограничение гарантирует, что существует четко определенный способ извлечения дискриминанта варианта из значения; например:</target>
        </trans-unit>
        <trans-unit id="b12f48dd90abc9841d426a5fab9c2ec4ff61214a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#[simd]&lt;/code&gt; attribute was applied to an empty tuple struct.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
