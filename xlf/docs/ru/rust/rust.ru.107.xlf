<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="cf1afade198e332fd9d6aa7668a3bb32f2401d0b" translate="yes" xml:space="preserve">
          <source>Wrapping::clone</source>
          <target state="translated">Wrapping::clone</target>
        </trans-unit>
        <trans-unit id="54ff9aff38c7f4f514610503b3e487387eb07e58" translate="yes" xml:space="preserve">
          <source>Wrapping::clone_from</source>
          <target state="translated">Wrapping::clone_from</target>
        </trans-unit>
        <trans-unit id="f68c352e73999ff6e48da1e988a3a084b81becdc" translate="yes" xml:space="preserve">
          <source>Wrapping::clone_into</source>
          <target state="translated">Wrapping::clone_into</target>
        </trans-unit>
        <trans-unit id="32813d8440ead76b1def56d4e5d7fd137f1714b5" translate="yes" xml:space="preserve">
          <source>Wrapping::cmp</source>
          <target state="translated">Wrapping::cmp</target>
        </trans-unit>
        <trans-unit id="4fecc3db0f0b1e9deb5da5a1f039d7c88813a6bc" translate="yes" xml:space="preserve">
          <source>Wrapping::count_ones</source>
          <target state="translated">Wrapping::count_ones</target>
        </trans-unit>
        <trans-unit id="0707d6a5c3931efbf437f387bfdbb1a8025b4865" translate="yes" xml:space="preserve">
          <source>Wrapping::count_zeros</source>
          <target state="translated">Wrapping::count_zeros</target>
        </trans-unit>
        <trans-unit id="a236a50222c3eb097eb11ec3a8bd688ac72247f5" translate="yes" xml:space="preserve">
          <source>Wrapping::default</source>
          <target state="translated">Wrapping::default</target>
        </trans-unit>
        <trans-unit id="7606cc1196464916bcf7fa22b931dbc498ed2d35" translate="yes" xml:space="preserve">
          <source>Wrapping::div</source>
          <target state="translated">Wrapping::div</target>
        </trans-unit>
        <trans-unit id="b2ae04a0a7ac3514cff2c427720f641e1e13a105" translate="yes" xml:space="preserve">
          <source>Wrapping::div_assign</source>
          <target state="translated">Wrapping::div_assign</target>
        </trans-unit>
        <trans-unit id="818aac7baf3ade93847ccd4565c9412270bfd765" translate="yes" xml:space="preserve">
          <source>Wrapping::eq</source>
          <target state="translated">Wrapping::eq</target>
        </trans-unit>
        <trans-unit id="edf1a00ab01443e1c22b37d5320b28146f8fae8f" translate="yes" xml:space="preserve">
          <source>Wrapping::fmt</source>
          <target state="translated">Wrapping::fmt</target>
        </trans-unit>
        <trans-unit id="da29af44683c629d1953591b5af876af1284f165" translate="yes" xml:space="preserve">
          <source>Wrapping::from</source>
          <target state="translated">Wrapping::from</target>
        </trans-unit>
        <trans-unit id="bb4414a5497b8f006614444c61fdfbf7e351c1e1" translate="yes" xml:space="preserve">
          <source>Wrapping::from_be</source>
          <target state="translated">Wrapping::from_be</target>
        </trans-unit>
        <trans-unit id="8327aab74dc84b766db6b768bb5f0b4fbae51d60" translate="yes" xml:space="preserve">
          <source>Wrapping::from_le</source>
          <target state="translated">Wrapping::from_le</target>
        </trans-unit>
        <trans-unit id="2e5b33409882b1e267e6cfbfc31a1f3c8c97affd" translate="yes" xml:space="preserve">
          <source>Wrapping::ge</source>
          <target state="translated">Wrapping::ge</target>
        </trans-unit>
        <trans-unit id="763baba99ef1af7752d4c399fd9e4f56ca95cae4" translate="yes" xml:space="preserve">
          <source>Wrapping::gt</source>
          <target state="translated">Wrapping::gt</target>
        </trans-unit>
        <trans-unit id="7f52b5e60bdf5a8b75a6f1bee019e4223125b7ea" translate="yes" xml:space="preserve">
          <source>Wrapping::hash</source>
          <target state="translated">Wrapping::hash</target>
        </trans-unit>
        <trans-unit id="439b5d8bd3660d315ca5a58573799ca1f8b650bd" translate="yes" xml:space="preserve">
          <source>Wrapping::hash_slice</source>
          <target state="translated">Wrapping::hash_slice</target>
        </trans-unit>
        <trans-unit id="e6b9c5af34e5d2c6b6aa7479d3ac5762be077d3b" translate="yes" xml:space="preserve">
          <source>Wrapping::into</source>
          <target state="translated">Wrapping::into</target>
        </trans-unit>
        <trans-unit id="8f7f5f2dd4156c437b4278d979eb99568352829c" translate="yes" xml:space="preserve">
          <source>Wrapping::is_negative</source>
          <target state="translated">Wrapping::is_negative</target>
        </trans-unit>
        <trans-unit id="981b618861d8b57a9acf7fd2996a6466724aea1b" translate="yes" xml:space="preserve">
          <source>Wrapping::is_positive</source>
          <target state="translated">Wrapping::is_positive</target>
        </trans-unit>
        <trans-unit id="3e0d9c814180240ed5988fdbca65c34038e05ba2" translate="yes" xml:space="preserve">
          <source>Wrapping::is_power_of_two</source>
          <target state="translated">Wrapping::is_power_of_two</target>
        </trans-unit>
        <trans-unit id="7eee9ab399dbfec97ad14d12d84dd02ef4c06ce3" translate="yes" xml:space="preserve">
          <source>Wrapping::le</source>
          <target state="translated">Wrapping::le</target>
        </trans-unit>
        <trans-unit id="e5ed947e23bd18f2e1dec6dc53205a1c2b9565b1" translate="yes" xml:space="preserve">
          <source>Wrapping::leading_zeros</source>
          <target state="translated">Wrapping::leading_zeros</target>
        </trans-unit>
        <trans-unit id="863ef48643c8bc709efcb07670e6f74b1ce8d7db" translate="yes" xml:space="preserve">
          <source>Wrapping::lt</source>
          <target state="translated">Wrapping::lt</target>
        </trans-unit>
        <trans-unit id="f8c4ed77b17c6dd866e77c6844acb16e3570ccb0" translate="yes" xml:space="preserve">
          <source>Wrapping::max</source>
          <target state="translated">Wrapping::max</target>
        </trans-unit>
        <trans-unit id="b8977c5e6f634623ea3525b2d454af899f6eb091" translate="yes" xml:space="preserve">
          <source>Wrapping::max_value</source>
          <target state="translated">Wrapping::max_value</target>
        </trans-unit>
        <trans-unit id="0450be54fef79761132d1aef7686c837c2fb7d59" translate="yes" xml:space="preserve">
          <source>Wrapping::min</source>
          <target state="translated">Wrapping::min</target>
        </trans-unit>
        <trans-unit id="8e1254c79d384f9bb2963a56f9a7834418921b24" translate="yes" xml:space="preserve">
          <source>Wrapping::min_value</source>
          <target state="translated">Wrapping::min_value</target>
        </trans-unit>
        <trans-unit id="3dbf2ab4711da3ee943c8515466f305c3d067dd6" translate="yes" xml:space="preserve">
          <source>Wrapping::mul</source>
          <target state="translated">Wrapping::mul</target>
        </trans-unit>
        <trans-unit id="193429091dcbc7d316a04f0dc154b88272a65f08" translate="yes" xml:space="preserve">
          <source>Wrapping::mul_assign</source>
          <target state="translated">Wrapping::mul_assign</target>
        </trans-unit>
        <trans-unit id="0210502668266ded14b09843d193035a2b624a28" translate="yes" xml:space="preserve">
          <source>Wrapping::ne</source>
          <target state="translated">Wrapping::ne</target>
        </trans-unit>
        <trans-unit id="d08218c355fb4c595823228061d8f6285a384c7e" translate="yes" xml:space="preserve">
          <source>Wrapping::neg</source>
          <target state="translated">Wrapping::neg</target>
        </trans-unit>
        <trans-unit id="b68d44f8dc9b7bccaa5f89c2580778d3f5c481ca" translate="yes" xml:space="preserve">
          <source>Wrapping::next_power_of_two</source>
          <target state="translated">Wrapping::next_power_of_two</target>
        </trans-unit>
        <trans-unit id="dc08d2689104cf14575e073facb8aec83dc9a31a" translate="yes" xml:space="preserve">
          <source>Wrapping::not</source>
          <target state="translated">Wrapping::not</target>
        </trans-unit>
        <trans-unit id="e5d2695179201fbe97915617ae577e6a74b5df38" translate="yes" xml:space="preserve">
          <source>Wrapping::partial_cmp</source>
          <target state="translated">Wrapping::partial_cmp</target>
        </trans-unit>
        <trans-unit id="7fdaf45498033a636d7d91789f724fabd68edb8d" translate="yes" xml:space="preserve">
          <source>Wrapping::pow</source>
          <target state="translated">Wrapping::pow</target>
        </trans-unit>
        <trans-unit id="df24d6f31eef97d8356983a2855db9da91e53388" translate="yes" xml:space="preserve">
          <source>Wrapping::product</source>
          <target state="translated">Wrapping::product</target>
        </trans-unit>
        <trans-unit id="a8d7bbb8b06894e60316bfa8896f3a9ac47a6d64" translate="yes" xml:space="preserve">
          <source>Wrapping::rem</source>
          <target state="translated">Wrapping::rem</target>
        </trans-unit>
        <trans-unit id="da3a26e48c553a9ebd7ad42e38d4c13f4cbb4bde" translate="yes" xml:space="preserve">
          <source>Wrapping::rem_assign</source>
          <target state="translated">Wrapping::rem_assign</target>
        </trans-unit>
        <trans-unit id="307c0e40471bf0ca34f880f97766b03909622b22" translate="yes" xml:space="preserve">
          <source>Wrapping::reverse_bits</source>
          <target state="translated">Wrapping::reverse_bits</target>
        </trans-unit>
        <trans-unit id="133f98b61cd2fc743ea3ab9ab7d24b004d38769b" translate="yes" xml:space="preserve">
          <source>Wrapping::rotate_left</source>
          <target state="translated">Wrapping::rotate_left</target>
        </trans-unit>
        <trans-unit id="3ce34aaff81a8cb1b00504a6d7ba0307a0954a44" translate="yes" xml:space="preserve">
          <source>Wrapping::rotate_right</source>
          <target state="translated">Wrapping::rotate_right</target>
        </trans-unit>
        <trans-unit id="6fea873396e78fa80dc5b81a4b24f5731984d1b4" translate="yes" xml:space="preserve">
          <source>Wrapping::shl</source>
          <target state="translated">Wrapping::shl</target>
        </trans-unit>
        <trans-unit id="9edfd053f58c6dc953850af5f23fe9791136e673" translate="yes" xml:space="preserve">
          <source>Wrapping::shl_assign</source>
          <target state="translated">Wrapping::shl_assign</target>
        </trans-unit>
        <trans-unit id="727c36c7aba1df8a46aafc2245377be316466083" translate="yes" xml:space="preserve">
          <source>Wrapping::shr</source>
          <target state="translated">Wrapping::shr</target>
        </trans-unit>
        <trans-unit id="a459ea5ad750d76affd0bb2928733c2196d44926" translate="yes" xml:space="preserve">
          <source>Wrapping::shr_assign</source>
          <target state="translated">Wrapping::shr_assign</target>
        </trans-unit>
        <trans-unit id="f5b4f5594c248eaa052551544a5613e890f44805" translate="yes" xml:space="preserve">
          <source>Wrapping::signum</source>
          <target state="translated">Wrapping::signum</target>
        </trans-unit>
        <trans-unit id="5421f7a3c097f4803cab58bff1cb7ebfbe6a61cd" translate="yes" xml:space="preserve">
          <source>Wrapping::sub</source>
          <target state="translated">Wrapping::sub</target>
        </trans-unit>
        <trans-unit id="fe50fe98bf767916368abf1c925e7ac3e037c08c" translate="yes" xml:space="preserve">
          <source>Wrapping::sub_assign</source>
          <target state="translated">Wrapping::sub_assign</target>
        </trans-unit>
        <trans-unit id="f72d77e1d30187c514a849ed36c97ad216978037" translate="yes" xml:space="preserve">
          <source>Wrapping::sum</source>
          <target state="translated">Wrapping::sum</target>
        </trans-unit>
        <trans-unit id="3886fc89ccb5cf7ab1ce69c7013954aa90ca533e" translate="yes" xml:space="preserve">
          <source>Wrapping::swap_bytes</source>
          <target state="translated">Wrapping::swap_bytes</target>
        </trans-unit>
        <trans-unit id="bd4ae9e508fe128f587726b34b639594de73a5f6" translate="yes" xml:space="preserve">
          <source>Wrapping::to_be</source>
          <target state="translated">Wrapping::to_be</target>
        </trans-unit>
        <trans-unit id="7885b2e75fcb436776b4e307af4f9e623074994c" translate="yes" xml:space="preserve">
          <source>Wrapping::to_le</source>
          <target state="translated">Wrapping::to_le</target>
        </trans-unit>
        <trans-unit id="28db626412c7da571e95eec9a8ad5fa799e67614" translate="yes" xml:space="preserve">
          <source>Wrapping::to_owned</source>
          <target state="translated">Wrapping::to_owned</target>
        </trans-unit>
        <trans-unit id="73aa20bad1867d0ff4c2d24f0721a5a8eef6a4d8" translate="yes" xml:space="preserve">
          <source>Wrapping::to_string</source>
          <target state="translated">Wrapping::to_string</target>
        </trans-unit>
        <trans-unit id="04d5020a03ae412567480d9d468c0ac47bbeb27e" translate="yes" xml:space="preserve">
          <source>Wrapping::trailing_zeros</source>
          <target state="translated">Wrapping::trailing_zeros</target>
        </trans-unit>
        <trans-unit id="346c87924a2dddfb76d03753bd7557d01a46d89f" translate="yes" xml:space="preserve">
          <source>Wrapping::try_from</source>
          <target state="translated">Wrapping::try_from</target>
        </trans-unit>
        <trans-unit id="d6a7a2b803d2c4bf9add1e2055e52b0b8af45d11" translate="yes" xml:space="preserve">
          <source>Wrapping::try_into</source>
          <target state="translated">Wrapping::try_into</target>
        </trans-unit>
        <trans-unit id="527e0a06e98efe05731d34b8495de7a9c0796355" translate="yes" xml:space="preserve">
          <source>Wrapping::type_id</source>
          <target state="translated">Wrapping::type_id</target>
        </trans-unit>
        <trans-unit id="d8fe6dbee08984aea95f13fc56e0174b6cc4af39" translate="yes" xml:space="preserve">
          <source>Wraps a borrowed reference to a value in a &lt;code&gt;RefCell&lt;/code&gt; box. A wrapper type for an immutably borrowed value from a &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Оборачивает заимствованную ссылку на значение в поле &lt;code&gt;RefCell&lt;/code&gt; . Тип оболочки для неизменяемого значения, заимствованного из &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14edef43e7df9f66193cba2f15582361d72b01a1" translate="yes" xml:space="preserve">
          <source>Wraps a raw C string with a safe C string wrapper.</source>
          <target state="translated">Обертывает сырую C-строку безопасной C-строкой.</target>
        </trans-unit>
        <trans-unit id="cc416cf90ebff133d69706f1e45c9ea10f251fd4" translate="yes" xml:space="preserve">
          <source>Wraps a writer and buffers its output.</source>
          <target state="translated">Упаковывает писателя и буферизует его выход.</target>
        </trans-unit>
        <trans-unit id="8835b45a5ce8372fc5b7a9379d43ba01d8c84d89" translate="yes" xml:space="preserve">
          <source>Wraps a writer and buffers output to it, flushing whenever a newline (&lt;code&gt;0x0a&lt;/code&gt;, &lt;code&gt;'\n'&lt;/code&gt;) is detected.</source>
          <target state="translated">Оборачивает писатель и буферизует вывод в него, &lt;code&gt;0x0a&lt;/code&gt; при обнаружении новой строки ( 0x0a , &lt;code&gt;'\n'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4a48932789d199bbed709777e2d743ca2bafdc6c" translate="yes" xml:space="preserve">
          <source>Write</source>
          <target state="translated">Write</target>
        </trans-unit>
        <trans-unit id="422b221e3621326874b9013f07f6893cefb36793" translate="yes" xml:space="preserve">
          <source>Write a buffer into this writer, returning how many bytes were written.</source>
          <target state="translated">Запишите буфер в этот пишущий инструмент,возвращая,сколько байт было записано.</target>
        </trans-unit>
        <trans-unit id="ae542cbc15e88f2bf807f8d29fc312d51c4f9344" translate="yes" xml:space="preserve">
          <source>Write a buffer into this writer, returning how many bytes were written. &lt;a href=&quot;../../../io/trait.write#tymethod.write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Запишите буфер в этот писатель, вернув, сколько байтов было записано. &lt;a href=&quot;../../../io/trait.write#tymethod.write&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e588991feee7d28024ae797d8cc74c94c42f1fc" translate="yes" xml:space="preserve">
          <source>Write a buffer into this writer, returning how many bytes were written. &lt;a href=&quot;../io/trait.write#tymethod.write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Запишите буфер в этот писатель, вернув, сколько байтов было записано. &lt;a href=&quot;../io/trait.write#tymethod.write&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad7b7826de9694bab5fc487da2a9381a00705795" translate="yes" xml:space="preserve">
          <source>Write a buffer into this writer, returning how many bytes were written. &lt;a href=&quot;io/trait.write#tymethod.write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Запишите буфер в этот писатель, вернув, сколько байтов было записано. &lt;a href=&quot;io/trait.write#tymethod.write&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42d55a3c5a475b3858d14de608fc86cc1e27fad6" translate="yes" xml:space="preserve">
          <source>Write a buffer into this writer, returning how many bytes were written. &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Запишите буфер в этот писатель, вернув, сколько байтов было записано. &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52f289e0fc842fa4a0a0c757a23aec01849b63cc" translate="yes" xml:space="preserve">
          <source>Write a slice as the entire contents of a file.</source>
          <target state="translated">Запишите кусочек как все содержимое файла.</target>
        </trans-unit>
        <trans-unit id="fd14b03d8c7f6b0eec5d8071e36c0b064da74395" translate="yes" xml:space="preserve">
          <source>Write a test that fails and run it to make sure it fails for the reason you expect.</source>
          <target state="translated">Напишите тест,который провалился,и запустите его,чтобы убедиться,что он провалился по той причине,которую вы ожидаете.</target>
        </trans-unit>
        <trans-unit id="4792f2eef0440e6afee1219df6ba659746474535" translate="yes" xml:space="preserve">
          <source>Write an Ipv6Addr, conforming to the canonical style described by &lt;a href=&quot;https://tools.ietf.org/html/rfc5952&quot;&gt;RFC 5952&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbf60c6c756d06c22970e5f8f55fad03ee1e678" translate="yes" xml:space="preserve">
          <source>Write an usize value to a byte buffer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a183b868e8fdfdd4779773f0a41b1402c75eb8" translate="yes" xml:space="preserve">
          <source>Write and run a &amp;ldquo;Hello, world!&amp;rdquo; program using &lt;code&gt;rustc&lt;/code&gt; directly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78bcd0015d2edce502b72162bafb8ff8f006ae23" translate="yes" xml:space="preserve">
          <source>Write and run a Hello, world! program using &lt;code&gt;rustc&lt;/code&gt; directly</source>
          <target state="translated">Напишите и запустите Hello, world! программа с использованием &lt;code&gt;rustc&lt;/code&gt; напрямую</target>
        </trans-unit>
        <trans-unit id="ffab6af2de782f874c56ecf608ce2d84de7c2b88" translate="yes" xml:space="preserve">
          <source>Write formatted data into a buffer, with a newline appended.</source>
          <target state="translated">Запись отформатированных данных в буфер с добавлением новой строки.</target>
        </trans-unit>
        <trans-unit id="fcbfbac0d9c49bc3cad2d435296a9ffe56032aaa" translate="yes" xml:space="preserve">
          <source>Write is implemented for &lt;code&gt;&amp;amp;mut [u8]&lt;/code&gt; by copying into the slice, overwriting its data.</source>
          <target state="translated">Запись реализована для &lt;code&gt;&amp;amp;mut [u8]&lt;/code&gt; путем копирования в слайс и перезаписи его данных.</target>
        </trans-unit>
        <trans-unit id="565edb809a298ba756dfab19911a1af435d39eef" translate="yes" xml:space="preserve">
          <source>Write is implemented for &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt; by appending to the vector. The vector will grow as needed.</source>
          <target state="translated">Запись реализована для &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt; путем добавления к вектору. Вектор будет расти по мере необходимости.</target>
        </trans-unit>
        <trans-unit id="ba9c763eec2480149fd9cd47639418928770f449" translate="yes" xml:space="preserve">
          <source>Write or modify just enough code to make the new test pass.</source>
          <target state="translated">Напишите или модифицируйте достаточно кода,чтобы новый тест прошел.</target>
        </trans-unit>
        <trans-unit id="25725f1f38f240f2a77af039a57e73d792f138b4" translate="yes" xml:space="preserve">
          <source>Write::by_ref</source>
          <target state="translated">Write::by_ref</target>
        </trans-unit>
        <trans-unit id="b18d29c2778fcf294a1af5583a58fde2428d05bc" translate="yes" xml:space="preserve">
          <source>Write::flush</source>
          <target state="translated">Write::flush</target>
        </trans-unit>
        <trans-unit id="2ad8047081c1571209c8de21b5d8ef496c875bcb" translate="yes" xml:space="preserve">
          <source>Write::write</source>
          <target state="translated">Write::write</target>
        </trans-unit>
        <trans-unit id="7f21bb462deedb47e98867332781d5a55ac1f33c" translate="yes" xml:space="preserve">
          <source>Write::write_all</source>
          <target state="translated">Write::write_all</target>
        </trans-unit>
        <trans-unit id="59885a3e77b05a624ab69e3e736291d1ac54574b" translate="yes" xml:space="preserve">
          <source>Write::write_char</source>
          <target state="translated">Write::write_char</target>
        </trans-unit>
        <trans-unit id="869124fb10adcbc1f8e39c2d520b04d4a2bb69e1" translate="yes" xml:space="preserve">
          <source>Write::write_fmt</source>
          <target state="translated">Write::write_fmt</target>
        </trans-unit>
        <trans-unit id="3bed1d79d195792e3683c2bc152331ab7dd62609" translate="yes" xml:space="preserve">
          <source>Write::write_str</source>
          <target state="translated">Write::write_str</target>
        </trans-unit>
        <trans-unit id="141b04d7eaaf0c8ba6b520a1addb5de1176dd5e6" translate="yes" xml:space="preserve">
          <source>Write::write_vectored</source>
          <target state="translated">Write::write_vectored</target>
        </trans-unit>
        <trans-unit id="791cf1c7de23e0f236576b53f40de7030db55060" translate="yes" xml:space="preserve">
          <source>Writers are defined by two required methods, &lt;a href=&quot;#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tymethod.flush&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Писатели определяются двумя обязательными методами, &lt;a href=&quot;#tymethod.write&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#tymethod.flush&quot;&gt; &lt;code&gt;flush&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="066642e038ad8d099b61091156c44bbd264c7655" translate="yes" xml:space="preserve">
          <source>Writers are defined by two required methods, &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.write#tymethod.flush&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d019e37d31448a1c36b68f61dbbcb935ed4575" translate="yes" xml:space="preserve">
          <source>Writers are intended to be composable with one another. Many implementors throughout &lt;a href=&quot;index&quot;&gt;&lt;code&gt;std::io&lt;/code&gt;&lt;/a&gt; take and provide types which implement the &lt;code&gt;Write&lt;/code&gt; trait.</source>
          <target state="translated">Писатели предназначены для совмещения друг с другом. Многие разработчики &lt;a href=&quot;index&quot;&gt; &lt;code&gt;std::io&lt;/code&gt; &lt;/a&gt; берут и предоставляют типы, реализующие черту &lt;code&gt;Write&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a718c79c131f76156d3a6b0d5a5556c990d2570b" translate="yes" xml:space="preserve">
          <source>Writes a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; into this writer, returning whether the write succeeded.</source>
          <target state="translated">Записывает в этот писатель &lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; , возвращая, была ли запись успешна.</target>
        </trans-unit>
        <trans-unit id="dcbe05c646a15714bf69547e05d3cd91b7425533" translate="yes" xml:space="preserve">
          <source>Writes a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; into this writer, returning whether the write succeeded. &lt;a href=&quot;../fmt/trait.write#method.write_char&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645bfe779599abf2ba4f8f6c08447416d5474b43" translate="yes" xml:space="preserve">
          <source>Writes a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; into this writer, returning whether the write succeeded. &lt;a href=&quot;trait.write#method.write_char&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4305f6b237e9832ff95454c9f34aa579f1dc813" translate="yes" xml:space="preserve">
          <source>Writes a &lt;a href=&quot;primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; into this writer, returning whether the write succeeded. &lt;a href=&quot;fmt/trait.write#method.write_char&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9272508b2e41aaf20afc1194eb5b0b6d2dfdc6c9" translate="yes" xml:space="preserve">
          <source>Writes a [&lt;code&gt;char&lt;/code&gt;] into this writer, returning whether the write succeeded. &lt;a href=&quot;../fmt/trait.write#method.write_char&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Записывает [ &lt;code&gt;char&lt;/code&gt; ] в этот модуль записи, возвращая, была ли запись успешной. &lt;a href=&quot;../fmt/trait.write#method.write_char&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="344bd2db5bc9ba178016d1881285c5afaddc4598" translate="yes" xml:space="preserve">
          <source>Writes a [&lt;code&gt;char&lt;/code&gt;] into this writer, returning whether the write succeeded. &lt;a href=&quot;fmt/trait.write#method.write_char&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Записывает [ &lt;code&gt;char&lt;/code&gt; ] в этот модуль записи, возвращая, была ли запись успешной. &lt;a href=&quot;fmt/trait.write#method.write_char&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d63a032a19b4234e192d3e267b268acd649fd1b" translate="yes" xml:space="preserve">
          <source>Writes a [&lt;code&gt;char&lt;/code&gt;] into this writer, returning whether the write succeeded. &lt;a href=&quot;trait.write#method.write_char&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Записывает [ &lt;code&gt;char&lt;/code&gt; ] в этот модуль записи, возвращая, была ли запись успешной. &lt;a href=&quot;trait.write#method.write_char&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="95220c41379acdd46bdc780a7a0f1e80e449feff" translate="yes" xml:space="preserve">
          <source>Writes a formatted string into this writer, returning any error encountered.</source>
          <target state="translated">Записывает отформатированную строку в этот пишущий инструмент,возвращая обнаруженную ошибку.</target>
        </trans-unit>
        <trans-unit id="ecd98e7e5a4ec62ace4f960c01001be172e4925a" translate="yes" xml:space="preserve">
          <source>Writes a formatted string into this writer, returning any error encountered. &lt;a href=&quot;../../../io/trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Записывает отформатированную строку в этот модуль записи, возвращая любую обнаруженную ошибку. &lt;a href=&quot;../../../io/trait.write#method.write_fmt&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5543389626d86c8e31553df92af2bde941d2a65" translate="yes" xml:space="preserve">
          <source>Writes a formatted string into this writer, returning any error encountered. &lt;a href=&quot;../io/trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Записывает отформатированную строку в этот модуль записи, возвращая любую обнаруженную ошибку. &lt;a href=&quot;../io/trait.write#method.write_fmt&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de5e6f1aafa20fef122dbeed5a71a42b9aa2cae7" translate="yes" xml:space="preserve">
          <source>Writes a formatted string into this writer, returning any error encountered. &lt;a href=&quot;io/trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Записывает отформатированную строку в этот модуль записи, возвращая любую обнаруженную ошибку. &lt;a href=&quot;io/trait.write#method.write_fmt&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c76861292606f0bb18321f85e96258836dd2770e" translate="yes" xml:space="preserve">
          <source>Writes a formatted string into this writer, returning any error encountered. &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Записывает отформатированную строку в этот модуль записи, возвращая любую обнаруженную ошибку. &lt;a href=&quot;trait.write#method.write_fmt&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ba303c199b9fe4bf1985b876faca69be2aaf9cf" translate="yes" xml:space="preserve">
          <source>Writes a number of bytes starting from a given offset.</source>
          <target state="translated">Записывает количество байтов,начиная с заданного смещения.</target>
        </trans-unit>
        <trans-unit id="934343889f7324a6e5af2ff1400d9536dbb167e4" translate="yes" xml:space="preserve">
          <source>Writes a number of bytes starting from a given offset. &lt;a href=&quot;../os/unix/fs/trait.fileext#tymethod.write_at&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Записывает количество байтов, начиная с заданного смещения. &lt;a href=&quot;../os/unix/fs/trait.fileext#tymethod.write_at&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45af1e55309b26785973c6185f7a9e763b1c820c" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;i128&lt;/code&gt; into this hasher.</source>
          <target state="translated">Пишет один &lt;code&gt;i128&lt;/code&gt; в этом Hasher.</target>
        </trans-unit>
        <trans-unit id="6bdae3ffbfb54cc26470f2ec7abd8a54cb058931" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;i16&lt;/code&gt; into this hasher.</source>
          <target state="translated">Записывает один &lt;code&gt;i16&lt;/code&gt; в этот хешер.</target>
        </trans-unit>
        <trans-unit id="1e459398c36e231b3d36e4260518d1366491f1f6" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;i32&lt;/code&gt; into this hasher.</source>
          <target state="translated">Записывает один &lt;code&gt;i32&lt;/code&gt; в этот хешер.</target>
        </trans-unit>
        <trans-unit id="e6d8da557fcf2c2f0d524d8144d83e2c8862ca13" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;i64&lt;/code&gt; into this hasher.</source>
          <target state="translated">Записывает один &lt;code&gt;i64&lt;/code&gt; в этот хешер.</target>
        </trans-unit>
        <trans-unit id="53db12ba27efb40f7499916f3539839440705b87" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;i8&lt;/code&gt; into this hasher.</source>
          <target state="translated">Записывает один &lt;code&gt;i8&lt;/code&gt; в этот хешер.</target>
        </trans-unit>
        <trans-unit id="330e06c59d6bdbee17d36d76f63e12553c4d97da" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;isize&lt;/code&gt; into this hasher.</source>
          <target state="translated">Записывает единственный &lt;code&gt;isize&lt;/code&gt; в этот хешер.</target>
        </trans-unit>
        <trans-unit id="45e49a31d6e7c2d2a651050c305491ca7804f21e" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;u128&lt;/code&gt; into this hasher.</source>
          <target state="translated">Записывает один &lt;code&gt;u128&lt;/code&gt; в этот хешер.</target>
        </trans-unit>
        <trans-unit id="aa85ed84476923b1cc5d6b7dfba41874a5d706a0" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;u16&lt;/code&gt; into this hasher.</source>
          <target state="translated">Записывает один &lt;code&gt;u16&lt;/code&gt; в этот хешер.</target>
        </trans-unit>
        <trans-unit id="d68ef120a557f4627660db1da5fdfbcac01eb533" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;u32&lt;/code&gt; into this hasher.</source>
          <target state="translated">Записывает единственный &lt;code&gt;u32&lt;/code&gt; в этот хешер.</target>
        </trans-unit>
        <trans-unit id="a14997eaf51c4e7602b5505b9d66837490a2a9fe" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;u64&lt;/code&gt; into this hasher.</source>
          <target state="translated">Записывает один &lt;code&gt;u64&lt;/code&gt; в этот хешер.</target>
        </trans-unit>
        <trans-unit id="40743e36f9b775608cfba8e00eb78b804913d33f" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;u8&lt;/code&gt; into this hasher.</source>
          <target state="translated">Записывает единственный &lt;code&gt;u8&lt;/code&gt; в этот хешер.</target>
        </trans-unit>
        <trans-unit id="d83f8161e61d59972914ffd1989afe5538474dbc" translate="yes" xml:space="preserve">
          <source>Writes a single &lt;code&gt;usize&lt;/code&gt; into this hasher.</source>
          <target state="translated">Записывает в этот хешер одно &lt;code&gt;usize&lt;/code&gt; usize.</target>
        </trans-unit>
        <trans-unit id="75c98aad5800d7465070b778412dd48f81ecbabf" translate="yes" xml:space="preserve">
          <source>Writes a slice of bytes into this writer, returning whether the write succeeded.</source>
          <target state="translated">Пишет кусочек байта в этот писатель,возвращаясь,удалось ли написать.</target>
        </trans-unit>
        <trans-unit id="589037d6e27cf4636e5142d1239dc9ad31b05dda" translate="yes" xml:space="preserve">
          <source>Writes a slice of bytes into this writer, returning whether the write succeeded. &lt;a href=&quot;../fmt/trait.write#tymethod.write_str&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Записывает часть байтов в этот модуль записи, возвращая, была ли запись успешна. &lt;a href=&quot;../fmt/trait.write#tymethod.write_str&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6fddaf179154fa846c54d2edd52d74504db1eece" translate="yes" xml:space="preserve">
          <source>Writes a slice of bytes into this writer, returning whether the write succeeded. &lt;a href=&quot;fmt/trait.write#tymethod.write_str&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Записывает часть байтов в этот модуль записи, возвращая, была ли запись успешна. &lt;a href=&quot;fmt/trait.write#tymethod.write_str&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8235073da555c5bd3bf719f2ab4a2cc258a3445a" translate="yes" xml:space="preserve">
          <source>Writes a slice of bytes into this writer, returning whether the write succeeded. &lt;a href=&quot;trait.write#tymethod.write_str&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Записывает часть байтов в этот модуль записи, возвращая, была ли запись успешна. &lt;a href=&quot;trait.write#tymethod.write_str&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="660e25a3eb306b3311d28442f6e6208ae58a5791" translate="yes" xml:space="preserve">
          <source>Writes a string slice into this writer, returning whether the write succeeded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b1b14666b506662fd683fe6bca2d5d9e8bcd1f" translate="yes" xml:space="preserve">
          <source>Writes a string slice into this writer, returning whether the write succeeded. &lt;a href=&quot;../fmt/trait.write#tymethod.write_str&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a15db8ef2c352ca0cb66f490148cb6670e5f327" translate="yes" xml:space="preserve">
          <source>Writes a string slice into this writer, returning whether the write succeeded. &lt;a href=&quot;fmt/trait.write#tymethod.write_str&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe30ae81a283cdbac3d9b2f4e474cbc6a9a2dcd" translate="yes" xml:space="preserve">
          <source>Writes a string slice into this writer, returning whether the write succeeded. &lt;a href=&quot;trait.write#tymethod.write_str&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e50e6072cf8d9643cbbf27cb278e15b00644e8" translate="yes" xml:space="preserve">
          <source>Writes formatted data into a buffer.</source>
          <target state="translated">Записывает отформатированные данные в буфер.</target>
        </trans-unit>
        <trans-unit id="b133e539f22c56a49e3bc9bfe584753136fdfcd5" translate="yes" xml:space="preserve">
          <source>Writes some data into this &lt;code&gt;Hasher&lt;/code&gt;.</source>
          <target state="translated">Записывает некоторые данные в этот &lt;code&gt;Hasher&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d56d2da40c1790d440e6f30eedb76e01abcaec37" translate="yes" xml:space="preserve">
          <source>Writes some data into this &lt;code&gt;Hasher&lt;/code&gt;. &lt;a href=&quot;../../hash/trait.hasher#tymethod.write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Записывает некоторые данные в этот &lt;code&gt;Hasher&lt;/code&gt; . &lt;a href=&quot;../../hash/trait.hasher#tymethod.write&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="664b4eecc8d27414cb11c8ab606f3786a94fd297" translate="yes" xml:space="preserve">
          <source>Writes some data into this &lt;code&gt;Hasher&lt;/code&gt;. &lt;a href=&quot;../hash/trait.hasher#tymethod.write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Записывает некоторые данные в этот &lt;code&gt;Hasher&lt;/code&gt; . &lt;a href=&quot;../hash/trait.hasher#tymethod.write&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ca27f9b6840a29f38a33b35b6a75dbc6f57703f" translate="yes" xml:space="preserve">
          <source>Writes some data into this &lt;code&gt;Hasher&lt;/code&gt;. &lt;a href=&quot;hash/trait.hasher#tymethod.write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Записывает некоторые данные в этот &lt;code&gt;Hasher&lt;/code&gt; . &lt;a href=&quot;hash/trait.hasher#tymethod.write&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b8a4f8c89b109d74c610b85abf9468d80196ad2" translate="yes" xml:space="preserve">
          <source>Writes some data into this &lt;code&gt;Hasher&lt;/code&gt;. &lt;a href=&quot;trait.hasher#tymethod.write&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Записывает некоторые данные в этот &lt;code&gt;Hasher&lt;/code&gt; . &lt;a href=&quot;trait.hasher#tymethod.write&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a2b61198cabc344eec293cea3eb21151c358cad" translate="yes" xml:space="preserve">
          <source>Writes some data to the underlying buffer contained within this formatter.</source>
          <target state="translated">Записывает некоторые данные в буфер,находящийся внутри этого формирователя.</target>
        </trans-unit>
        <trans-unit id="b05105a6d198b6efd15010fe5b3a83555f844ec8" translate="yes" xml:space="preserve">
          <source>Writes some formatted information into this instance.</source>
          <target state="translated">Записывает в этот экземпляр некоторую форматированную информацию.</target>
        </trans-unit>
        <trans-unit id="73e796ac178d17656628057ad4de2c3715ecb31f" translate="yes" xml:space="preserve">
          <source>Writes to &lt;code&gt;Copy&lt;/code&gt; union fields do not require reads for running destructors, so these writes don't have to be placed in &lt;code&gt;unsafe&lt;/code&gt; blocks</source>
          <target state="translated">Записи для &lt;code&gt;Copy&lt;/code&gt; полей объединения не требуют чтения для запуска деструкторов, поэтому эти записи не нужно помещать в &lt;code&gt;unsafe&lt;/code&gt; блоки</target>
        </trans-unit>
        <trans-unit id="7a04ade11270a59b7a8d9a38b3f59d450099f209" translate="yes" xml:space="preserve">
          <source>Writing Automated Tests</source>
          <target state="translated">Написание автоматических тестов</target>
        </trans-unit>
        <trans-unit id="8d9de7655ad92afdb381750f5cb6b0b9d4630db5" translate="yes" xml:space="preserve">
          <source>Writing Code to Pass the Test</source>
          <target state="translated">Пишущий код для прохождения теста</target>
        </trans-unit>
        <trans-unit id="c7ec99d9ff26178393f163143686d9bc7fb6a3d1" translate="yes" xml:space="preserve">
          <source>Writing Error Messages to Standard Error Instead of Standard Output</source>
          <target state="translated">Запись сообщений об ошибках в стандартный вывод вместо стандартного вывода</target>
        </trans-unit>
        <trans-unit id="b4a721e4aa8c7261bfa68a1535b4fe4e84e2f28e" translate="yes" xml:space="preserve">
          <source>Writing a Failing Test</source>
          <target state="translated">Написание теста на неудачу</target>
        </trans-unit>
        <trans-unit id="83ca9b1b9c2e5fb239421cfb23f5c54c22d603eb" translate="yes" xml:space="preserve">
          <source>Writing a Failing Test for the Case-Insensitive &lt;code id=&quot;writing-a-failing-test-for-the-case-insensitive-search-function&quot;&gt;search&lt;/code&gt; Function</source>
          <target state="translated">Написание неудачного теста для функции &lt;code id=&quot;writing-a-failing-test-for-the-case-insensitive-search-function&quot;&gt;search&lt;/code&gt; учета регистра</target>
        </trans-unit>
        <trans-unit id="993bd3ebaf1e78a4791f69f6f8988c0b5b0d3ae3" translate="yes" xml:space="preserve">
          <source>Writing a Response</source>
          <target state="translated">Написание ответа</target>
        </trans-unit>
        <trans-unit id="97d3ede6e5b435ad6b9a77ec03a83113afdfb3a5" translate="yes" xml:space="preserve">
          <source>Writing a program that prints &lt;code&gt;Hello, world!&lt;/code&gt;</source>
          <target state="translated">Написание программы, которая печатает &lt;code&gt;Hello, world!&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="785a0c70580d26564b61ec7b2da0b61477b68b43" translate="yes" xml:space="preserve">
          <source>Writing an array&amp;rsquo;s type this way looks similar to an alternative syntax for initializing an array: if you want to create an array that contains the same value for each element, you can specify the initial value, followed by a semicolon, and then the length of the array in square brackets, as shown here:</source>
          <target state="translated">Такой способ записи типа массива похож на альтернативный синтаксис для инициализации массива: если вы хотите создать массив, содержащий одно и то же значение для каждого элемента, вы можете указать начальное значение, за которым следует точка с запятой, а затем длина массив в квадратных скобках, как показано здесь:</target>
        </trans-unit>
        <trans-unit id="f560bd46db71699beed1dbcf4f543ef55a25efce" translate="yes" xml:space="preserve">
          <source>Writing and Running a Rust Program</source>
          <target state="translated">Написание и запуск программы по борьбе с ржавчиной</target>
        </trans-unit>
        <trans-unit id="6c156da0c5e2570a035c5e8bd4f021c50ffb20da" translate="yes" xml:space="preserve">
          <source>Writing both kinds of tests is important to ensure that the pieces of your library are doing what you expect them to, separately and together.</source>
          <target state="translated">Написание обоих видов тестов важно для того,чтобы части вашей библиотеки делали то,что вы ожидаете от них,по отдельности и вместе.</target>
        </trans-unit>
        <trans-unit id="796c30002159ff15a3a7e4eeec8cf17afe766c5f" translate="yes" xml:space="preserve">
          <source>Writing tests (&lt;a href=&quot;ch11-00-testing&quot;&gt;Chapter 11&lt;/a&gt;)</source>
          <target state="translated">Написание тестов ( &lt;a href=&quot;ch11-00-testing&quot;&gt;Глава 11&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="450f15de86c3b61b38fb7579e1f10bd319432ea8" translate="yes" xml:space="preserve">
          <source>Writing tests so they return a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; enables you to use the question mark operator in the body of tests, which can be a convenient way to write tests that should fail if any operation within them returns an &lt;code&gt;Err&lt;/code&gt; variant.</source>
          <target state="translated">Написание тестов таким образом, чтобы они возвращали &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; позволяет использовать оператор вопросительного знака в теле тестов, что может быть удобным способом написания тестов, которые должны завершиться ошибкой, если какая-либо операция в них вернет вариант &lt;code&gt;Err&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07bc23942d416a7fef04bbcf5fc194f37c766951" translate="yes" xml:space="preserve">
          <source>Writing this lengthy type in function signatures and as type annotations all over the code can be tiresome and error prone. Imagine having a project full of code like that in Listing 19-24.</source>
          <target state="translated">Написание этого длинного типа в сигнатурах функций и в виде типовых аннотаций по всему коду может быть утомительным и предрасположенным к ошибкам.Представьте себе проект,полный такого кода в Листинге 19-24.</target>
        </trans-unit>
        <trans-unit id="07e47a0416a28679b7085ffdf5344062b5fcdd36" translate="yes" xml:space="preserve">
          <source>Yanking a version prevents new projects from starting to depend on that version while allowing all existing projects that depend on it to continue to download and depend on that version. Essentially, a yank means that all projects with a &lt;em&gt;Cargo.lock&lt;/em&gt; will not break, and any future &lt;em&gt;Cargo.lock&lt;/em&gt; files generated will not use the yanked version.</source>
          <target state="translated">Сохранение версии предотвращает зависимость новых проектов от этой версии, в то же время позволяя всем существующим проектам, которые зависят от нее, продолжать загрузку и зависеть от этой версии. По сути, восстановление означает, что все проекты с &lt;em&gt;Cargo.lock&lt;/em&gt; не будут &lt;em&gt;сломаны&lt;/em&gt; , и любые будущие файлы &lt;em&gt;Cargo.lock&lt;/em&gt; не будут использовать восстановленную версию.</target>
        </trans-unit>
        <trans-unit id="f8e5799899abe435ee29b5e571cca4a4951b4912" translate="yes" xml:space="preserve">
          <source>Yields a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; slice if the &lt;code&gt;CStr&lt;/code&gt; contains valid UTF-8.</source>
          <target state="translated">Выдает фрагмент &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; если &lt;code&gt;CStr&lt;/code&gt; содержит допустимый UTF-8.</target>
        </trans-unit>
        <trans-unit id="3c7c3595b258ab56decf488e64eb0d24960bf485" translate="yes" xml:space="preserve">
          <source>Yields a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; slice if the &lt;code&gt;OsStr&lt;/code&gt; is valid Unicode.</source>
          <target state="translated">Возвращающее &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; кусочек , если &lt;code&gt;OsStr&lt;/code&gt; действительна Unicode.</target>
        </trans-unit>
        <trans-unit id="195279f44b198c67c27101e6d1db95ba38fd584e" translate="yes" xml:space="preserve">
          <source>Yields a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; slice if the &lt;code&gt;Path&lt;/code&gt; is valid unicode.</source>
          <target state="translated">Выдает фрагмент &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; если &lt;code&gt;Path&lt;/code&gt; является допустимым Unicode.</target>
        </trans-unit>
        <trans-unit id="758c4d0f690a6c543ad0cd5b04420b3087ad8f1b" translate="yes" xml:space="preserve">
          <source>Yields a &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; slice if the &lt;code&gt;CStr&lt;/code&gt; contains valid UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86217a19209be5bc5617ae5f4db30f4c9578c5e5" translate="yes" xml:space="preserve">
          <source>Yields a &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; slice if the &lt;code&gt;OsStr&lt;/code&gt; is valid Unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c0b7dbdf4f40a5f0fc3157e3dd92701d432da4" translate="yes" xml:space="preserve">
          <source>Yields a &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; slice if the &lt;code&gt;Path&lt;/code&gt; is valid unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413679a903a004b3c5c40da67ab627b0db5926d2" translate="yes" xml:space="preserve">
          <source>Yields a &lt;code&gt;Result&amp;lt;bool, ParseBoolError&amp;gt;&lt;/code&gt;, because &lt;code&gt;s&lt;/code&gt; may or may not actually be parseable.</source>
          <target state="translated">Выдает &lt;code&gt;Result&amp;lt;bool, ParseBoolError&amp;gt;&lt;/code&gt; , потому что &lt;code&gt;s&lt;/code&gt; может быть, а может и не быть анализируемым.</target>
        </trans-unit>
        <trans-unit id="e9230c9fc9c21a74b44c14778be86dfe99887de8" translate="yes" xml:space="preserve">
          <source>Yields the underlying &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; slice.</source>
          <target state="translated">&lt;a href=&quot;../ffi/struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; базовый срез OsStr .</target>
        </trans-unit>
        <trans-unit id="0c744c88f234909706712417b746da8f001876e3" translate="yes" xml:space="preserve">
          <source>Yields the underlying byte vector of this &lt;a href=&quot;../../../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Выдает базовый байтовый вектор этой &lt;a href=&quot;../../../ffi/struct.osstring&quot;&gt; &lt;code&gt;OsString&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="45e614c97fadbe28622649b26e90d5c12092a4a5" translate="yes" xml:space="preserve">
          <source>Yields the underlying byte vector of this &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../os/unix/ffi/trait.osstringext#tymethod.into_vec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827f632b1eb13c813d90204287d7a305ab25fbc3" translate="yes" xml:space="preserve">
          <source>Yields the underlying byte vector of this [&lt;code&gt;OsString&lt;/code&gt;]. &lt;a href=&quot;../os/unix/ffi/trait.osstringext#tymethod.into_vec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Выдает базовый байтовый вектор этого [ &lt;code&gt;OsString&lt;/code&gt; ]. &lt;a href=&quot;../os/unix/ffi/trait.osstringext#tymethod.into_vec&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65ae03a65393d6ce8a756fcd3bce6d5e0e587d92" translate="yes" xml:space="preserve">
          <source>You also don&amp;rsquo;t have to worry about problems resulting from accidentally cleaning up values still in use: the ownership system that makes sure references are always valid also ensures that &lt;code&gt;drop&lt;/code&gt; gets called only once when the value is no longer being used.</source>
          <target state="translated">Вам также не нужно беспокоиться о проблемах, возникающих в результате случайной очистки значений, которые все еще используются: система владения, которая гарантирует, что ссылки всегда действительны, также гарантирует, что &lt;code&gt;drop&lt;/code&gt; вызывается только один раз, когда значение больше не используется.</target>
        </trans-unit>
        <trans-unit id="ec9b139e5d307ab87a8084c13822b6acd8da7805" translate="yes" xml:space="preserve">
          <source>You are &lt;em&gt;absolutely&lt;/em&gt; certain you &lt;em&gt;really&lt;/em&gt;, &lt;em&gt;truly&lt;/em&gt;, want a doubly linked list.</source>
          <target state="translated">Вы &lt;em&gt;абсолютно&lt;/em&gt; уверены , что вы на &lt;em&gt;самом деле&lt;/em&gt; , &lt;em&gt;действительно&lt;/em&gt; , хотите дважды связанный список.</target>
        </trans-unit>
        <trans-unit id="7df51c21931f3ba8153011ff31ac3df483e2b6f2" translate="yes" xml:space="preserve">
          <source>You are trying to use an identifier that is either undefined or not a struct. Erroneous code example:</source>
          <target state="translated">Вы пытаетесь использовать идентификатор,который либо не определен,либо не является структурой.Пример ошибочного кода:</target>
        </trans-unit>
        <trans-unit id="72a4cd7a33eb16fdb9f37ef196e2dcb7606d5372" translate="yes" xml:space="preserve">
          <source>You attempted to use multiple types as bounds for a closure or trait object. Rust does not currently support this. A simple example that causes this error:</source>
          <target state="translated">Вы пытались использовать несколько типов в качестве границ для объекта закрытия или черты.В настоящее время ржавчина не поддерживает это.Простой пример,который вызывает эту ошибку:</target>
        </trans-unit>
        <trans-unit id="1f01714756be32bd3190176ff6c1f442b832a1d6" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;struct.vec#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; values onto the end of a vector (which will grow the vector as needed):</source>
          <target state="translated">Вы можете &lt;a href=&quot;struct.vec#method.push&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt; значения в конец вектора (который будет увеличивать вектор по мере необходимости):</target>
        </trans-unit>
        <trans-unit id="0d2a0e1493249f355c1cfdfc3bac39d75c54ff72" translate="yes" xml:space="preserve">
          <source>You can also add a custom message to be printed with the failure message as optional arguments to the &lt;code&gt;assert!&lt;/code&gt;, &lt;code&gt;assert_eq!&lt;/code&gt;, and &lt;code&gt;assert_ne!&lt;/code&gt; macros. Any arguments specified after the one required argument to &lt;code&gt;assert!&lt;/code&gt; or the two required arguments to &lt;code&gt;assert_eq!&lt;/code&gt; and &lt;code&gt;assert_ne!&lt;/code&gt; are passed along to the &lt;code&gt;format!&lt;/code&gt; macro (discussed in Chapter 8 in the &lt;a href=&quot;ch08-02-strings#concatenation-with-the--operator-or-the-format-macro&quot;&gt;&amp;ldquo;Concatenation with the &lt;code&gt;+&lt;/code&gt; Operator or the &lt;code&gt;format!&lt;/code&gt; Macro&amp;rdquo;&lt;/a&gt; section), so you can pass a format string that contains &lt;code&gt;{}&lt;/code&gt; placeholders and values to go in those placeholders. Custom messages are useful to document what an assertion means; when a test fails, you&amp;rsquo;ll have a better idea of what the problem is with the code.</source>
          <target state="translated">Вы также можете добавить настраиваемое сообщение, которое будет напечатано с сообщением об ошибке в качестве дополнительных аргументов в &lt;code&gt;assert!&lt;/code&gt; , &lt;code&gt;assert_eq!&lt;/code&gt; , и &lt;code&gt;assert_ne!&lt;/code&gt; макросы. Любые аргументы, указанные после одного обязательного аргумента для &lt;code&gt;assert!&lt;/code&gt; или два обязательных аргумента &lt;code&gt;assert_eq!&lt;/code&gt; и &lt;code&gt;assert_ne!&lt;/code&gt; передаются в &lt;code&gt;format!&lt;/code&gt; макрос (обсуждается в главе 8 в разделе &lt;a href=&quot;ch08-02-strings#concatenation-with-the--operator-or-the-format-macro&quot;&gt;&amp;laquo;Объединение с оператором &lt;code&gt;+&lt;/code&gt; или &lt;code&gt;format!&lt;/code&gt; &lt;/a&gt; макросом формата! &amp;raquo; ), поэтому вы можете передать строку формата, содержащую &lt;code&gt;{}&lt;/code&gt; заполнители и значения, которые нужно вставить в эти заполнители. Пользовательские сообщения полезны для документирования того, что означает утверждение; когда тест не проходит, вы лучше понимаете, в чем проблема с кодом.</target>
        </trans-unit>
        <trans-unit id="59d30fe12340d329f73be7515fd4175c752f146f" translate="yes" xml:space="preserve">
          <source>You can also bring an item into scope with &lt;code&gt;use&lt;/code&gt; and a relative path. Listing 7-12 shows how to specify a relative path to get the same behavior as in Listing 7-11.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6933a535082bef416b84d186746e29a92d0ca26" translate="yes" xml:space="preserve">
          <source>You can also combine these implementations to let the &lt;code&gt;==&lt;/code&gt; operator work with two different types:</source>
          <target state="translated">Вы также можете комбинировать эти реализации, чтобы оператор &lt;code&gt;==&lt;/code&gt; работал с двумя разными типами:</target>
        </trans-unit>
        <trans-unit id="99c9da3c8943fcee498c0ed8b484f227e63545a2" translate="yes" xml:space="preserve">
          <source>You can also define structs that don&amp;rsquo;t have any fields! These are called &lt;em&gt;unit-like structs&lt;/em&gt; because they behave similarly to &lt;code&gt;()&lt;/code&gt;, the unit type. Unit-like structs can be useful in situations in which you need to implement a trait on some type but don&amp;rsquo;t have any data that you want to store in the type itself. We&amp;rsquo;ll discuss traits in Chapter 10.</source>
          <target state="translated">Вы также можете определять структуры, у которых нет полей! Они называются &lt;em&gt;модульными структурами,&lt;/em&gt; поскольку ведут себя аналогично &lt;code&gt;()&lt;/code&gt; , типу unit. Единичные структуры могут быть полезны в ситуациях, когда вам нужно реализовать трейт для некоторого типа, но у вас нет данных, которые вы хотите сохранить в самом типе. Мы обсудим черты характера в главе 10.</target>
        </trans-unit>
        <trans-unit id="85102a822bf46f84c9e28f5552de9b8522a4dbde" translate="yes" xml:space="preserve">
          <source>You can also define structs that look similar to tuples, called &lt;em&gt;tuple structs&lt;/em&gt;. Tuple structs have the added meaning the struct name provides but don&amp;rsquo;t have names associated with their fields; rather, they just have the types of the fields. Tuple structs are useful when you want to give the whole tuple a name and make the tuple be a different type from other tuples, and naming each field as in a regular struct would be verbose or redundant.</source>
          <target state="translated">Вы также можете определять структуры, похожие на кортежи, называемые &lt;em&gt;структурами кортежей&lt;/em&gt; . Структуры кортежей имеют дополнительное значение, которое предоставляет имя структуры, но не имеют имен, связанных с их полями; скорее, у них просто есть типы полей. Структуры кортежей полезны, когда вы хотите дать всему кортежу имя и сделать кортеж другим типом, чем другие кортежи, а наименование каждого поля, как в обычной структуре, будет подробным или избыточным.</target>
        </trans-unit>
        <trans-unit id="478834b4ebadfb970a4e8408c36d21f8f75d5297" translate="yes" xml:space="preserve">
          <source>You can also define your own wrapper around &lt;code&gt;System&lt;/code&gt; if you'd like, such as keeping track of the number of all bytes allocated:</source>
          <target state="translated">Вы также можете определить свою собственную оболочку вокруг &lt;code&gt;System&lt;/code&gt; , если хотите, например, для отслеживания количества всех выделенных байтов:</target>
        </trans-unit>
        <trans-unit id="f2ec90a0a184fc0a34f0ffbecbdb3577a9642216" translate="yes" xml:space="preserve">
          <source>You can also drop both values to take a slice of the entire string. So these are equal:</source>
          <target state="translated">Вы также можете сбросить оба значения,чтобы взять кусочек всей строки.Так что они равны:</target>
        </trans-unit>
        <trans-unit id="07fd7e0ceaeb6effa3bef1f17d2c79141e988f86" translate="yes" xml:space="preserve">
          <source>You can also have this error while using a cell type:</source>
          <target state="translated">Эту ошибку можно допустить и при использовании типа ячейки:</target>
        </trans-unit>
        <trans-unit id="2abcc436137e02d2d460f9bb29cc2de726a9488d" translate="yes" xml:space="preserve">
          <source>You can also implement &lt;code&gt;Copy&lt;/code&gt; and &lt;code&gt;Clone&lt;/code&gt; manually:</source>
          <target state="translated">Вы также можете реализовать &lt;code&gt;Copy&lt;/code&gt; и &lt;code&gt;Clone&lt;/code&gt; вручную:</target>
        </trans-unit>
        <trans-unit id="77d0a855671805dfc5fdffb0de5601ad968fb03d" translate="yes" xml:space="preserve">
          <source>You can also omit the parameter name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0eb8e7e0853f72a4740501ba25eded7eda4cc9" translate="yes" xml:space="preserve">
          <source>You can also rewrite this in terms of &lt;a href=&quot;#method.flat_map&quot;&gt;&lt;code&gt;flat_map()&lt;/code&gt;&lt;/a&gt;, which is preferable in this case since it conveys intent more clearly:</source>
          <target state="translated">Вы также можете переписать это в терминах &lt;a href=&quot;#method.flat_map&quot;&gt; &lt;code&gt;flat_map()&lt;/code&gt; &lt;/a&gt; , что в данном случае предпочтительнее, так как оно более четко передает намерение:</target>
        </trans-unit>
        <trans-unit id="31c83cc061e340443a0779b3d7127df9d6c7ce68" translate="yes" xml:space="preserve">
          <source>You can also rewrite this in terms of &lt;a href=&quot;trait.iterator#method.flat_map&quot;&gt;&lt;code&gt;flat_map()&lt;/code&gt;&lt;/a&gt;, which is preferable in this case since it conveys intent more clearly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15da995ef7945b8770639a97784385a172b200d0" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;dbg!()&lt;/code&gt; without a value to just print the file and line whenever it's reached.</source>
          <target state="translated">Вы также можете использовать &lt;code&gt;dbg!()&lt;/code&gt; Без значения, чтобы просто распечатать файл и строку при их достижении.</target>
        </trans-unit>
        <trans-unit id="9efcd998a1aef5d563a086721600c461fc2c254c" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;cargo fix&lt;/code&gt; command to transition your code between different Rust editions. Editions are covered in Appendix E.</source>
          <target state="translated">Вы также можете использовать команду &lt;code&gt;cargo fix&lt;/code&gt; для перехода вашего кода между различными редакциями Rust. Редакции описаны в Приложении E.</target>
        </trans-unit>
        <trans-unit id="9e76ec17ba63844ca8928afd80bf3131846fedf2" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;em&gt;or&lt;/em&gt; operator &lt;code&gt;|&lt;/code&gt; in a match guard to specify multiple patterns; the match guard condition will apply to all the patterns. Listing 18-28 shows the precedence of combining a match guard with a pattern that uses &lt;code&gt;|&lt;/code&gt;. The important part of this example is that the &lt;code&gt;if y&lt;/code&gt; match guard applies to &lt;code&gt;4&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;em&gt;and&lt;/em&gt;&lt;code&gt;6&lt;/code&gt;, even though it might look like &lt;code&gt;if y&lt;/code&gt; only applies to &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">Вы также можете использовать оператор &lt;em&gt;или &lt;/em&gt; &lt;code&gt;|&lt;/code&gt; в защитнике совпадений для указания нескольких шаблонов; условие защиты совпадения будет применяться ко всем шаблонам. Перечисление 18-28 показывает приоритет комбинирования защиты совпадения с шаблоном, который использует &lt;code&gt;|&lt;/code&gt; . Важной частью этого примера является то , что &lt;code&gt;if y&lt;/code&gt; караул матч относится к &lt;code&gt;4&lt;/code&gt; , &lt;code&gt;5&lt;/code&gt; , &lt;em&gt;и &lt;/em&gt; &lt;code&gt;6&lt;/code&gt; , хотя это может выглядеть , &lt;code&gt;if y&lt;/code&gt; относится только к &lt;code&gt;6&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="109e7f6c3d07299c54983d31980eeb18d57c214f" translate="yes" xml:space="preserve">
          <source>You can also use the array reference's &lt;a href=&quot;iter/trait.intoiterator&quot;&gt;&lt;code&gt;IntoIterator&lt;/code&gt;&lt;/a&gt; implementation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ecf9c07343c46c1d60f065ded4b4f2eb0ea645" translate="yes" xml:space="preserve">
          <source>You can also work with partially initialized arrays, which could be found in low-level datastructures.</source>
          <target state="translated">Вы также можете работать с частично инициализированными массивами,которые можно найти в низкоуровневых структурах данных.</target>
        </trans-unit>
        <trans-unit id="b6c603fa73cf57e512f35e947ee6f15111e430a7" translate="yes" xml:space="preserve">
          <source>You can append a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; to a &lt;code&gt;String&lt;/code&gt; with the &lt;a href=&quot;#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; method, and append a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; with the &lt;a href=&quot;#method.push_str&quot;&gt;&lt;code&gt;push_str&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">Вы можете добавить &lt;a href=&quot;../primitive.char&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; к &lt;code&gt;String&lt;/code&gt; с &lt;a href=&quot;#method.push&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt; метода push и добавить &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;&amp;amp;str&lt;/code&gt; &lt;/a&gt; с &lt;a href=&quot;#method.push_str&quot;&gt; &lt;code&gt;push_str&lt;/code&gt; &lt;/a&gt; метода push_str :</target>
        </trans-unit>
        <trans-unit id="59ee6d5b203d9d5c9909fd86ebe91daa1ede20d7" translate="yes" xml:space="preserve">
          <source>You can append a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; to a &lt;code&gt;String&lt;/code&gt; with the &lt;a href=&quot;struct.string#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; method, and append a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; with the &lt;a href=&quot;struct.string#method.push_str&quot;&gt;&lt;code&gt;push_str&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d11f2c97c83c2645f12b9ebc6ac85c5458f4e32" translate="yes" xml:space="preserve">
          <source>You can build a free-standing crate by adding &lt;code&gt;#![no_std]&lt;/code&gt; to the crate attributes:</source>
          <target state="translated">Вы можете построить отдельно стоящий ящик, добавив &lt;code&gt;#![no_std]&lt;/code&gt; к атрибутам ящика:</target>
        </trans-unit>
        <trans-unit id="b809a385993bf02c8d1206070cc3301b18c3b78c" translate="yes" xml:space="preserve">
          <source>You can contribute to this book by opening an issue or sending a pull request to &lt;a href=&quot;https://github.com/rust-lang-nursery/reference/&quot;&gt;the Rust Reference repository&lt;/a&gt;. If this book does not answer your question, and you think its answer is in scope of it, please do not hesitate to file an issue or ask about it in the &lt;code&gt;#docs&lt;/code&gt; channels on &lt;a href=&quot;https://discord.gg/rust-lang&quot;&gt;Discord&lt;/a&gt;. Knowing what people use this book for the most helps direct our attention to making those sections the best that they can be.</source>
          <target state="translated">Вы можете внести свой вклад в эту книгу, открыв вопрос или отправив запрос &lt;a href=&quot;https://github.com/rust-lang-nursery/reference/&quot;&gt;на перенос в репозиторий Rust Reference&lt;/a&gt; . Если эта книга не отвечает на ваш вопрос, и вы думаете, что ответ входит в его рамки, не стесняйтесь &lt;code&gt;#docs&lt;/code&gt; о проблеме или спрашивать о ней в каналах #docs на &lt;a href=&quot;https://discord.gg/rust-lang&quot;&gt;Discord&lt;/a&gt; . Знание того, для чего люди используют эту книгу чаще всего, помогает направить наше внимание на то, чтобы сделать эти разделы как можно лучше.</target>
        </trans-unit>
        <trans-unit id="b47151976fa0c19d6bbd8b86018adedad5599a36" translate="yes" xml:space="preserve">
          <source>You can contribute to this book by opening an issue or sending a pull request to &lt;a href=&quot;https://github.com/rust-lang/reference/&quot;&gt;the Rust Reference repository&lt;/a&gt;. If this book does not answer your question, and you think its answer is in scope of it, please do not hesitate to file an issue or ask about it in the &lt;code&gt;#docs&lt;/code&gt; channels on &lt;a href=&quot;https://discord.gg/rust-lang&quot;&gt;Discord&lt;/a&gt;. Knowing what people use this book for the most helps direct our attention to making those sections the best that they can be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45652675628aa0520caadf107ccf92529cef48c4" translate="yes" xml:space="preserve">
          <source>You can create &lt;code&gt;Path&lt;/code&gt;s from &lt;code&gt;String&lt;/code&gt;s, or even other &lt;code&gt;Path&lt;/code&gt;s:</source>
          <target state="translated">Вы можете создать &lt;code&gt;Path&lt;/code&gt; s из &lt;code&gt;String&lt;/code&gt; s или даже другого &lt;code&gt;Path&lt;/code&gt; s:</target>
        </trans-unit>
        <trans-unit id="d7926aaf53927823e4081b71fa3d55e1e7d5547f" translate="yes" xml:space="preserve">
          <source>You can create a &lt;code&gt;String&lt;/code&gt; from &lt;a href=&quot;../primitive.str&quot;&gt;a literal string&lt;/a&gt; with &lt;a href=&quot;../convert/trait.from#tymethod.from&quot;&gt;&lt;code&gt;String::from&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab7261ff093b68aeb80217fb17838c264ba793f" translate="yes" xml:space="preserve">
          <source>You can create a &lt;code&gt;String&lt;/code&gt; from a literal string with &lt;a href=&quot;#method.from&quot;&gt;&lt;code&gt;String::from&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Вы можете создать &lt;code&gt;String&lt;/code&gt; из буквальной строки с помощью &lt;a href=&quot;#method.from&quot;&gt; &lt;code&gt;String::from&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="9e907952e713a332ea657810a208121675e84c04" translate="yes" xml:space="preserve">
          <source>You can create a new &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; from an existing one by concatenating with &lt;code&gt;+&lt;/code&gt;:</source>
          <target state="translated">Вы можете создать новую &lt;a href=&quot;struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; из существующей, объединив ее с &lt;code&gt;+&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2cc5912ade8e0031b95579911c3cbaa63e5424d5" translate="yes" xml:space="preserve">
          <source>You can create an empty hash map with &lt;code&gt;new&lt;/code&gt; and add elements with &lt;code&gt;insert&lt;/code&gt;. In Listing 8-20, we&amp;rsquo;re keeping track of the scores of two teams whose names are Blue and Yellow. The Blue team starts with 10 points, and the Yellow team starts with 50.</source>
          <target state="translated">Вы можете создать пустую хеш-карту с &lt;code&gt;new&lt;/code&gt; и добавить элементы с помощью &lt;code&gt;insert&lt;/code&gt; . В листинге 8-20 мы отслеживаем результаты двух команд с синими и желтыми названиями. Синяя команда начинает с 10 очков, а желтая команда начинает с 50.</target>
        </trans-unit>
        <trans-unit id="0d3270ed21cd27a14044769666f4247cb1a76136" translate="yes" xml:space="preserve">
          <source>You can customize the error message by passing a string as the second parameter:</source>
          <target state="translated">Вы можете настроить сообщение об ошибке,передав строку в качестве второго параметра:</target>
        </trans-unit>
        <trans-unit id="f50b50da715d70f8535907a48cb0e96ef9c58565" translate="yes" xml:space="preserve">
          <source>You can derive &lt;code&gt;Copy&lt;/code&gt; on any type whose parts all implement &lt;code&gt;Copy&lt;/code&gt;. You can only apply the &lt;code&gt;Copy&lt;/code&gt; trait to types that also implement &lt;code&gt;Clone&lt;/code&gt;, because a type that implements &lt;code&gt;Copy&lt;/code&gt; has a trivial implementation of &lt;code&gt;Clone&lt;/code&gt; that performs the same task as &lt;code&gt;Copy&lt;/code&gt;.</source>
          <target state="translated">Вы можете получить &lt;code&gt;Copy&lt;/code&gt; для любого типа, все части которого реализуют &lt;code&gt;Copy&lt;/code&gt; . Свойство &lt;code&gt;Copy&lt;/code&gt; можно применять только к типам, которые также реализуют &lt;code&gt;Clone&lt;/code&gt; , потому что тип, реализующий &lt;code&gt;Copy&lt;/code&gt; , имеет тривиальную реализацию &lt;code&gt;Clone&lt;/code&gt; , которая выполняет ту же задачу, что и &lt;code&gt;Copy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83e158e3d2e5e26c76384dd26a124614ad844a55" translate="yes" xml:space="preserve">
          <source>You can derive &lt;code&gt;Hash&lt;/code&gt; with &lt;code&gt;#[derive(Hash)]&lt;/code&gt; if all fields implement &lt;code&gt;Hash&lt;/code&gt;. The resulting hash will be the combination of the values from calling &lt;a href=&quot;#tymethod.hash&quot;&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/a&gt; on each field.</source>
          <target state="translated">Вы можете получить &lt;code&gt;Hash&lt;/code&gt; с помощью &lt;code&gt;#[derive(Hash)]&lt;/code&gt; если все поля реализуют &lt;code&gt;Hash&lt;/code&gt; . Результирующий хэш будет представлять собой комбинацию значений из вызывающего &lt;a href=&quot;#tymethod.hash&quot;&gt; &lt;code&gt;hash&lt;/code&gt; &lt;/a&gt; для каждого поля.</target>
        </trans-unit>
        <trans-unit id="35be33ced6f0cfe471c698377e1d225ec13de67d" translate="yes" xml:space="preserve">
          <source>You can derive &lt;code&gt;Hash&lt;/code&gt; with &lt;code&gt;#[derive(Hash)]&lt;/code&gt; if all fields implement &lt;code&gt;Hash&lt;/code&gt;. The resulting hash will be the combination of the values from calling &lt;a href=&quot;trait.hash#tymethod.hash&quot;&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/a&gt; on each field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f5ee2dba48ae74f01f68800a38cc65446beed5" translate="yes" xml:space="preserve">
          <source>You can disambiguate a single-element tuple from a value in parentheses with a comma:</source>
          <target state="translated">Одноэлементный кортеж можно разделить на кортеж из значения в круглых скобках запятой:</target>
        </trans-unit>
        <trans-unit id="858139efb135decf30543ab94bffe38f904b8030" translate="yes" xml:space="preserve">
          <source>You can even implement the &lt;code&gt;trait&lt;/code&gt; on the returned &lt;code&gt;enum&lt;/code&gt; so the callers &lt;em&gt;don't&lt;/em&gt; have to match on the returned value to invoke the associated items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835ac5995b1f731428fb2c278267c23aa6ba7d51" translate="yes" xml:space="preserve">
          <source>You can explicitly create a &lt;a href=&quot;struct.vec&quot;&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;struct.vec#method.new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Вы можете явно создать &lt;a href=&quot;struct.vec&quot;&gt; &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; с помощью &lt;a href=&quot;struct.vec#method.new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="460f3695c8c0bbab00464940a8f28d49f754cce3" translate="yes" xml:space="preserve">
          <source>You can explicitly create a &lt;a href=&quot;struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;struct.vec#method.new&quot;&gt;&lt;code&gt;Vec::new&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513e665187e52659901e2d139a691e98738bef9a" translate="yes" xml:space="preserve">
          <source>You can find more information about &lt;code&gt;derive&lt;/code&gt; in the &lt;a href=&quot;book/appendix-03-derivable-traits&quot;&gt;Rust Book&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6b12bc4089e8eb8b5751f247a7b9589c2fe1f2" translate="yes" xml:space="preserve">
          <source>You can find more information about borrowing in the rust-book: http://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html</source>
          <target state="translated">Более подробную информацию о заимствовании можно найти в ржавчине:http://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html.</target>
        </trans-unit>
        <trans-unit id="beb47d198b944a0ce4280dc360af7ef8ab346311" translate="yes" xml:space="preserve">
          <source>You can find more information about it in the &lt;a href=&quot;https://doc.rust-lang.org/unstable-book/language-features/ffi-pure.html&quot;&gt;unstable Rust Book&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2e5c62e0b55ad5028e27c25a79c338ab8a55a6" translate="yes" xml:space="preserve">
          <source>You can fix this error by finishing using the borrow before the next use of the value:</source>
          <target state="translated">Вы можете исправить эту ошибку,закончив использование заимствования до следующего использования стоимости:</target>
        </trans-unit>
        <trans-unit id="d8dd34acfc3bee0c9d744f723edecbf71221b97f" translate="yes" xml:space="preserve">
          <source>You can get more information about it in the &lt;a href=&quot;https://doc.rust-lang.org/nightly/unstable-book/language-features/ffi-const.html&quot;&gt;unstable Rust Book&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aedd4a29ecef931e15839bd3008e9ac572d334a" translate="yes" xml:space="preserve">
          <source>You can have multiple conditions by combining &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; in an &lt;code&gt;else if&lt;/code&gt; expression. For example:</source>
          <target state="translated">Вы можете создать несколько условий, объединив &lt;code&gt;if&lt;/code&gt; и &lt;code&gt;else&lt;/code&gt; в выражении &lt;code&gt;else if&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="b3c9603849c73d33443ee6a87ea7d3f7ea9f8eb7" translate="yes" xml:space="preserve">
          <source>You can implement &lt;code&gt;derive&lt;/code&gt; for your own traits through &lt;a href=&quot;../procedural-macros#derive-macros&quot;&gt;procedural macros&lt;/a&gt;.</source>
          <target state="translated">Вы можете реализовать &lt;code&gt;derive&lt;/code&gt; для своих черт с помощью &lt;a href=&quot;../procedural-macros#derive-macros&quot;&gt;процедурных макросов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="87090e61475fabac741ebc244ff59fd41b674b51" translate="yes" xml:space="preserve">
          <source>You can instead use a single name for the argument:</source>
          <target state="translated">Вместо этого вы можете использовать одно имя для аргумента:</target>
        </trans-unit>
        <trans-unit id="b4e59a25eef48510bd25baeb9f2b6823ad86530a" translate="yes" xml:space="preserve">
          <source>You can look at these with the &lt;a href=&quot;#method.as_ptr&quot;&gt;&lt;code&gt;as_ptr&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#method.len&quot;&gt;&lt;code&gt;len&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#method.capacity&quot;&gt;&lt;code&gt;capacity&lt;/code&gt;&lt;/a&gt; methods:</source>
          <target state="translated">Вы можете посмотреть на них с помощью &lt;a href=&quot;#method.as_ptr&quot;&gt; &lt;code&gt;as_ptr&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#method.len&quot;&gt; &lt;code&gt;len&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#method.capacity&quot;&gt; &lt;code&gt;capacity&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="93493631ee602e503ac1e5a81f1088e2a4d7a4c8" translate="yes" xml:space="preserve">
          <source>You can look at these with the &lt;a href=&quot;../primitive.str#method.as_ptr&quot;&gt;&lt;code&gt;as_ptr&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.string#method.len&quot;&gt;&lt;code&gt;len&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;struct.string#method.capacity&quot;&gt;&lt;code&gt;capacity&lt;/code&gt;&lt;/a&gt; methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae6e1835d66f2c10d701af8aff316c93ab9ceb1" translate="yes" xml:space="preserve">
          <source>You can move elements out of an array with a &lt;a href=&quot;../reference/patterns#slice-patterns&quot;&gt;slice pattern&lt;/a&gt;. If you want one element, see &lt;a href=&quot;mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f474815df87597604ccec4f0ca97d0a759dc6f35" translate="yes" xml:space="preserve">
          <source>You can move elements out of an array with a slice pattern. If you want one element, see &lt;a href=&quot;mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы можете перемещать элементы из массива с помощью шаблона среза. Если вам нужен один элемент, см. &lt;a href=&quot;mem/fn.replace&quot;&gt; &lt;code&gt;mem::replace&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5486362126d64ce78e34e75e353c7473a5182e9a" translate="yes" xml:space="preserve">
          <source>You can only define an inherent implementation for a type in the same crate where the type was defined. For example, an &lt;code&gt;impl&lt;/code&gt; block as above is not allowed since &lt;code&gt;Vec&lt;/code&gt; is defined in the standard library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c186f63e5510473d9dc9b0dc2a5406c5f9eb96" translate="yes" xml:space="preserve">
          <source>You can only define an inherent implementation for a type in the same crate where the type was defined. For example, an &lt;code&gt;impl&lt;/code&gt; block as below is not allowed since &lt;code&gt;Vec&lt;/code&gt; is defined in the standard library:</source>
          <target state="translated">Вы можете определить внутреннюю реализацию для типа только в том же ящике, где был определен тип. Например, блок &lt;code&gt;impl&lt;/code&gt; , как показано ниже, не разрешен, поскольку &lt;code&gt;Vec&lt;/code&gt; определен в стандартной библиотеке:</target>
        </trans-unit>
        <trans-unit id="b467f8c108bab6da931f53e1d1208fd735b37f94" translate="yes" xml:space="preserve">
          <source>You can only implement &lt;code&gt;Copy&lt;/code&gt; for a struct or an enum. Both of the previous examples will fail, because neither &lt;code&gt;[u8; 256]&lt;/code&gt; nor &lt;code&gt;&amp;amp;'static mut Bar&lt;/code&gt; (mutable reference to &lt;code&gt;Bar&lt;/code&gt;) is a struct or enum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c813be92d22e2d7b242da8356e7fcb13fc363191" translate="yes" xml:space="preserve">
          <source>You can only implement &lt;code&gt;Copy&lt;/code&gt; for a struct or enum. Both of the following examples will fail, because neither &lt;code&gt;[u8; 256]&lt;/code&gt; nor &lt;code&gt;&amp;amp;'static mut Bar&lt;/code&gt; (mutable reference to &lt;code&gt;Bar&lt;/code&gt;) is a struct or enum:</source>
          <target state="translated">Вы можете реализовать &lt;code&gt;Copy&lt;/code&gt; только для структуры или перечисления. Оба следующих примера завершатся ошибкой, потому что ни один &lt;code&gt;[u8; 256]&lt;/code&gt; или &lt;code&gt;&amp;amp;'static mut Bar&lt;/code&gt; (изменяемая ссылка на &lt;code&gt;Bar&lt;/code&gt; ) не является структурой или перечислением:</target>
        </trans-unit>
        <trans-unit id="21f8b607f72c57127cd998f4d58d658ea39f8468" translate="yes" xml:space="preserve">
          <source>You can only make &lt;em&gt;object-safe&lt;/em&gt; traits into trait objects. Some complex rules govern all the properties that make a trait object safe, but in practice, only two rules are relevant. A trait is object safe if all the methods defined in the trait have the following properties:</source>
          <target state="translated">Вы можете превращать &lt;em&gt;объектно-безопасные&lt;/em&gt; черты в свойства-объекты. Некоторые сложные правила управляют всеми свойствами, которые делают объект-признак безопасным, но на практике важны только два правила. Признак является объектно-безопасным, если все методы, определенные в нем, имеют следующие свойства:</target>
        </trans-unit>
        <trans-unit id="d710b72f224f5678a735cd21bec78fffa991073c" translate="yes" xml:space="preserve">
          <source>You can override any default setting by adding a different value for it in &lt;em&gt;Cargo.toml&lt;/em&gt;. For example, if we want to use optimization level 1 in the development profile, we can add these two lines to our project&amp;rsquo;s &lt;em&gt;Cargo.toml&lt;/em&gt; file:</source>
          <target state="translated">Вы можете изменить любую настройку по умолчанию, добавив для нее другое значение в &lt;em&gt;Cargo.toml&lt;/em&gt; . Например, если мы хотим использовать уровень оптимизации 1 в профиле разработки, мы можем добавить эти две строки в файл &lt;em&gt;Cargo.toml&lt;/em&gt; нашего проекта :</target>
        </trans-unit>
        <trans-unit id="1a0d0b5c07f4a3701b975bfae52379a7cc4a0a95" translate="yes" xml:space="preserve">
          <source>You can read more about cell types in the API documentation:</source>
          <target state="translated">Подробнее о типах ячеек можно прочитать в документации по API:</target>
        </trans-unit>
        <trans-unit id="49f14d85beebdc2ce97fddebb0687041307b1cc2" translate="yes" xml:space="preserve">
          <source>You can read more about trait objects in the &lt;a href=&quot;reference/types#trait-objects&quot;&gt;Trait Objects&lt;/a&gt; section of the Reference.</source>
          <target state="translated">Вы можете прочитать больше об объектах признаков в разделе &amp;laquo; &lt;a href=&quot;reference/types#trait-objects&quot;&gt;Объекты признаков&lt;/a&gt; &amp;raquo; справочника.</target>
        </trans-unit>
        <trans-unit id="9712625e55ae109f55059c67a65fb7d3fbaccdbb" translate="yes" xml:space="preserve">
          <source>You can read more in the API documentation for &lt;a href=&quot;std/cell/index&quot;&gt;Cell&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d319729d74877014e187c2ba127457ae956cdc" translate="yes" xml:space="preserve">
          <source>You can run the example one of two ways:</source>
          <target state="translated">Вы можете запустить пример одним из двух способов:</target>
        </trans-unit>
        <trans-unit id="63366b6e44f5163c78736c2914a78fd15427bd3a" translate="yes" xml:space="preserve">
          <source>You can see all of the &lt;em&gt;toolchains&lt;/em&gt; (releases of Rust and associated components) you have installed with &lt;code&gt;rustup&lt;/code&gt; as well. Here&amp;rsquo;s an example on one of your authors&amp;rsquo; Windows computer:</source>
          <target state="translated">Вы также можете увидеть все &lt;em&gt;наборы инструментов&lt;/em&gt; (выпуски Rust и связанных компонентов), которые вы установили с помощью &lt;code&gt;rustup&lt;/code&gt; . Вот пример на компьютере с Windows одного из ваших авторов:</target>
        </trans-unit>
        <trans-unit id="9ad8bdb0d1d5a61388700f692f73fc4d634ea4d8" translate="yes" xml:space="preserve">
          <source>You can see how primitive our server is: real libraries would handle the recognition of multiple requests in a much less verbose way!</source>
          <target state="translated">Вы видите,насколько примитивен наш сервер:настоящие библиотеки справились бы с распознаванием множества запросов гораздо менее многословно!</target>
        </trans-unit>
        <trans-unit id="ef181677ddc6f3265ea6a87f49632fa9f1210138" translate="yes" xml:space="preserve">
          <source>You can see that &lt;code&gt;if let&lt;/code&gt; can also introduce shadowed variables in the same way that &lt;code&gt;match&lt;/code&gt; arms can: the line &lt;code&gt;if let Ok(age) = age&lt;/code&gt; introduces a new shadowed &lt;code&gt;age&lt;/code&gt; variable that contains the value inside the &lt;code&gt;Ok&lt;/code&gt; variant. This means we need to place the &lt;code&gt;if age &amp;gt; 30&lt;/code&gt; condition within that block: we can&amp;rsquo;t combine these two conditions into &lt;code&gt;if let Ok(age) = age &amp;amp;&amp;amp; age &amp;gt; 30&lt;/code&gt;. The shadowed &lt;code&gt;age&lt;/code&gt; we want to compare to 30 isn&amp;rsquo;t valid until the new scope starts with the curly bracket.</source>
          <target state="translated">Вы можете видеть, что &lt;code&gt;if let&lt;/code&gt; может также вводить теневые переменные так же, как и &lt;code&gt;match&lt;/code&gt; arm: строка &lt;code&gt;if let Ok(age) = age&lt;/code&gt; вводит новую теневую переменную &lt;code&gt;age&lt;/code&gt; которая содержит значение внутри варианта &lt;code&gt;Ok&lt;/code&gt; . Это означает, что нам нужно поместить в этот блок условие &lt;code&gt;if age &amp;gt; 30&lt;/code&gt; : мы не можем объединить эти два условия в &lt;code&gt;if let Ok(age) = age &amp;amp;&amp;amp; age &amp;gt; 30&lt;/code&gt; . Затененный &lt;code&gt;age&lt;/code&gt; мы хотим сравнить с 30, недействителен до тех пор, пока новая область не начинается с фигурной скобки.</target>
        </trans-unit>
        <trans-unit id="6dac8a60a46917dc69183323e9ca6b9442311d9e" translate="yes" xml:space="preserve">
          <source>You can see that the second rule doesn&amp;rsquo;t apply because there is more than one input lifetime. The third rule doesn&amp;rsquo;t apply either, because &lt;code&gt;longest&lt;/code&gt; is a function rather than a method, so none of the parameters are &lt;code&gt;self&lt;/code&gt;. After working through all three rules, we still haven&amp;rsquo;t figured out what the return type&amp;rsquo;s lifetime is. This is why we got an error trying to compile the code in Listing 10-21: the compiler worked through the lifetime elision rules but still couldn&amp;rsquo;t figure out all the lifetimes of the references in the signature.</source>
          <target state="translated">Вы можете видеть, что второе правило не применяется, потому что существует более одного времени жизни ввода. Третье правило также не применяется, потому что &lt;code&gt;longest&lt;/code&gt; - это функция, а не метод, поэтому ни один из параметров не является &lt;code&gt;self&lt;/code&gt; . После проработки всех трех правил мы так и не выяснили, каков срок жизни возвращаемого типа. Вот почему мы получили ошибку при попытке скомпилировать код из Листинга 10-21: компилятор отработал правила исключения времени жизни, но все равно не смог определить все времена жизни ссылок в подписи.</target>
        </trans-unit>
        <trans-unit id="0e4d508ac715cc3acbfdf122afbf7b9a03cd0107" translate="yes" xml:space="preserve">
          <source>You can think of &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; as being a bit like &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; but without any of the run-time tracking and without any of the safety checks.</source>
          <target state="translated">Вы можете думать о &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; как о чем-то вроде &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; но без какого-либо отслеживания времени выполнения и без каких-либо проверок безопасности.</target>
        </trans-unit>
        <trans-unit id="1f606e05dadc0999f11ab48116c48743386a6126" translate="yes" xml:space="preserve">
          <source>You can think of &lt;code&gt;flat_map(f)&lt;/code&gt; as the semantic equivalent of &lt;a href=&quot;#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;ping, and then &lt;a href=&quot;#method.flatten&quot;&gt;&lt;code&gt;flatten&lt;/code&gt;&lt;/a&gt;ing as in &lt;code&gt;map(f).flatten()&lt;/code&gt;.</source>
          <target state="translated">Вы можете думать о &lt;code&gt;flat_map(f)&lt;/code&gt; как о семантическом эквиваленте &lt;a href=&quot;#method.map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt; ping, а затем о &lt;a href=&quot;#method.flatten&quot;&gt; &lt;code&gt;flatten&lt;/code&gt; &lt;/a&gt; как о &lt;code&gt;map(f).flatten()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a9642a3aa6b0d4f644c74448c6eb12a20876d4a" translate="yes" xml:space="preserve">
          <source>You can think of &lt;code&gt;flat_map(f)&lt;/code&gt; as the semantic equivalent of &lt;a href=&quot;trait.iterator#method.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;ping, and then &lt;a href=&quot;trait.iterator#method.flatten&quot;&gt;&lt;code&gt;flatten&lt;/code&gt;&lt;/a&gt;ing as in &lt;code&gt;map(f).flatten()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b8c98aafd60cb333f24479704313af8e17f2d7" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;struct.pathbuf#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; to build up a &lt;code&gt;PathBuf&lt;/code&gt; from components:</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;struct.pathbuf#method.push&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt; для создания &lt;code&gt;PathBuf&lt;/code&gt; из компонентов:</target>
        </trans-unit>
        <trans-unit id="79c504057bc14c1c72ecffa07908c9acfa0c3808" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; to implement &quot;out-pointers&quot;: instead of returning data from a function, pass it a pointer to some (uninitialized) memory to put the result into. This can be useful when it is important for the caller to control how the memory the result is stored in gets allocated, and you want to avoid unnecessary moves.</source>
          <target state="translated">Вы можете использовать &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; для реализации &amp;laquo; выходных указателей&amp;raquo;: вместо того, чтобы возвращать данные из функции, передайте ей указатель на некоторую (неинициализированную) память, в которую можно поместить результат. Это может быть полезно, когда для вызывающей стороны важно контролировать, как выделяется память, в которой сохраняется результат, и вы хотите избежать ненужных перемещений.</target>
        </trans-unit>
        <trans-unit id="f06b12f9f33805451b03aa1619046a91b1f0fea9" translate="yes" xml:space="preserve">
          <source>You can use a &lt;a href=&quot;../reference/patterns#slice-patterns&quot;&gt;slice pattern&lt;/a&gt; to move elements out of an array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ef701adf9c3ff21ed219e1e0f0ea149a4acfce" translate="yes" xml:space="preserve">
          <source>You can use a &lt;code&gt;repr&lt;/code&gt; attribute to tell the compiler how you want a struct or enum to be laid out in memory.</source>
          <target state="translated">Вы можете использовать атрибут &lt;code&gt;repr&lt;/code&gt; , чтобы сообщить компилятору, как вы хотите, чтобы структура или перечисление располагались в памяти.</target>
        </trans-unit>
        <trans-unit id="1b34b5e340a342b7c6e66a1c66e9ad2f86e01083" translate="yes" xml:space="preserve">
          <source>You can use a slice pattern to move elements out of an array:</source>
          <target state="translated">Для перемещения элементов из массива можно использовать срезной шаблон:</target>
        </trans-unit>
        <trans-unit id="8525d6891c1f3e5f989dbf3ba87c59b3e77658c4" translate="yes" xml:space="preserve">
          <source>You can use aliases in order to fix this error. Example:</source>
          <target state="translated">Вы можете использовать псевдонимы для исправления этой ошибки.Пример:</target>
        </trans-unit>
        <trans-unit id="fc67eb4f6c079f25d4b841983f28617d8c247116" translate="yes" xml:space="preserve">
          <source>You can use code specified in a &lt;code&gt;Drop&lt;/code&gt; trait implementation in many ways to make cleanup convenient and safe: for instance, you could use it to create your own memory allocator! With the &lt;code&gt;Drop&lt;/code&gt; trait and Rust&amp;rsquo;s ownership system, you don&amp;rsquo;t have to remember to clean up because Rust does it automatically.</source>
          <target state="translated">Вы можете использовать код, указанный в реализации трейта &lt;code&gt;Drop&lt;/code&gt; , разными способами, чтобы сделать очистку удобной и безопасной: например, вы можете использовать его для создания своего собственного распределителя памяти! Благодаря &lt;code&gt;Drop&lt;/code&gt; и системе владения Rust вам не нужно помнить об очистке, потому что Rust делает это автоматически.</target>
        </trans-unit>
        <trans-unit id="4f312fe97d3268cd00fae0b76a4dae32c526dd97" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;#method.as_os_str&quot;&gt;&lt;code&gt;as_os_str&lt;/code&gt;&lt;/a&gt; method to get an &lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; from an &lt;code&gt;OsString&lt;/code&gt;; this is effectively a borrowed reference to the whole string.</source>
          <target state="translated">Вы можете использовать метод &lt;a href=&quot;#method.as_os_str&quot;&gt; &lt;code&gt;as_os_str&lt;/code&gt; ,&lt;/a&gt; чтобы получить &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;a href=&quot;struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; из &lt;code&gt;OsString&lt;/code&gt; ; это фактически заимствованная ссылка на всю строку.</target>
        </trans-unit>
        <trans-unit id="1323a49e0cb97eec61d0dde3434ccf676cf86d24" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;fmt/struct.arguments&quot;&gt;&lt;code&gt;fmt::Arguments&lt;/code&gt;&lt;/a&gt; value that &lt;code&gt;format_args!&lt;/code&gt; returns in &lt;code&gt;Debug&lt;/code&gt; and &lt;code&gt;Display&lt;/code&gt; contexts as seen below. The example also shows that &lt;code&gt;Debug&lt;/code&gt; and &lt;code&gt;Display&lt;/code&gt; format to the same thing: the interpolated format string in &lt;code&gt;format_args!&lt;/code&gt;.</source>
          <target state="translated">Вы можете использовать значение &lt;a href=&quot;fmt/struct.arguments&quot;&gt; &lt;code&gt;fmt::Arguments&lt;/code&gt; &lt;/a&gt; которое &lt;code&gt;format_args!&lt;/code&gt; возвращается в контекстах &lt;code&gt;Debug&lt;/code&gt; и &lt;code&gt;Display&lt;/code&gt; , как показано ниже. В примере также показано, что формат &lt;code&gt;Debug&lt;/code&gt; и &lt;code&gt;Display&lt;/code&gt; одно и то же: строка интерполированного формата в &lt;code&gt;format_args!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa54acb48af4602e2f37053a7c14e129065a9bd7" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;struct.osstring#method.as_os_str&quot;&gt;&lt;code&gt;OsString::as_os_str&lt;/code&gt;&lt;/a&gt; method to get an &lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; from an &lt;code&gt;OsString&lt;/code&gt;; this is effectively a borrowed reference to the whole string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f9328d191cf1a4e8041c2b20ff6e3d44a4dd7e" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;Arguments&amp;lt;'a&amp;gt;&lt;/code&gt; that &lt;a href=&quot;../macro.format_args&quot;&gt;&lt;code&gt;format_args!&lt;/code&gt;&lt;/a&gt; returns in &lt;code&gt;Debug&lt;/code&gt; and &lt;code&gt;Display&lt;/code&gt; contexts as seen below. The example also shows that &lt;code&gt;Debug&lt;/code&gt; and &lt;code&gt;Display&lt;/code&gt; format to the same thing: the interpolated format string in &lt;code&gt;format_args!&lt;/code&gt;.</source>
          <target state="translated">Вы можете использовать &lt;code&gt;Arguments&amp;lt;'a&amp;gt;&lt;/code&gt; что &lt;a href=&quot;../macro.format_args&quot;&gt; &lt;code&gt;format_args!&lt;/code&gt; &lt;/a&gt;возвращается в контекстах &lt;code&gt;Debug&lt;/code&gt; и &lt;code&gt;Display&lt;/code&gt; , как показано ниже. В примере также показано, что формат &lt;code&gt;Debug&lt;/code&gt; и &lt;code&gt;Display&lt;/code&gt; одно и то же: строка интерполированного формата в &lt;code&gt;format_args!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0d2c3ab842592962de40df3105ee889292b2624" translate="yes" xml:space="preserve">
          <source>You can write integer literals in any of the forms shown in Table 3-2. Note that all number literals except the byte literal allow a type suffix, such as &lt;code&gt;57u8&lt;/code&gt;, and &lt;code&gt;_&lt;/code&gt; as a visual separator, such as &lt;code&gt;1_000&lt;/code&gt;.</source>
          <target state="translated">Вы можете записывать целочисленные литералы в любой из форм, показанных в таблице 3-2. Обратите внимание, что все &lt;code&gt;57u8&lt;/code&gt; литералы, кроме байтового, допускают суффикс типа, например 57u8 , и &lt;code&gt;_&lt;/code&gt; в качестве визуального разделителя, например &lt;code&gt;1_000&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e3a6a5d5ad9495618c32d7df9601c8b0c36186e" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t use the &lt;code&gt;#[should_panic]&lt;/code&gt; annotation on tests that use &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;. Instead, you should return an &lt;code&gt;Err&lt;/code&gt; value directly when the test should fail.</source>
          <target state="translated">Вы не можете использовать аннотацию &lt;code&gt;#[should_panic]&lt;/code&gt; в тестах, которые используют &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt; . Вместо этого вы должны вернуть значение &lt;code&gt;Err&lt;/code&gt; напрямую, когда тест должен завершиться неудачно.</target>
        </trans-unit>
        <trans-unit id="68b6d283a51fc88197c307fe06aa87e325990277" translate="yes" xml:space="preserve">
          <source>You can't import a type or module when the name of the item being imported is the same as another type or submodule defined in the module.</source>
          <target state="translated">Импорт типа или модуля невозможен,если имя импортируемого элемента совпадает с именем другого типа или подмодуля,определенного в модуле.</target>
        </trans-unit>
        <trans-unit id="f50f1788e3104b1887e0fe5929d8e14061698fab" translate="yes" xml:space="preserve">
          <source>You can't import a value whose name is the same as another value defined in the module.</source>
          <target state="translated">Нельзя импортировать значение,имя которого совпадает с другим значением,определенным в модуле.</target>
        </trans-unit>
        <trans-unit id="9a643c6311bbc95c59da6d6b04e51680a574a830" translate="yes" xml:space="preserve">
          <source>You can't use type or const parameters on foreign items. Example of erroneous code:</source>
          <target state="translated">Нельзя использовать параметры типа или константы на посторонних объектах.Пример ошибочного кода:</target>
        </trans-unit>
        <trans-unit id="eeb5e1b278da97fda2cc8bf3325f0cdbbec2f73d" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;Drop::drop&lt;/code&gt; yourself</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe58ca7fd87be4f97f1122198ed215b1d16ba8fe" translate="yes" xml:space="preserve">
          <source>You cannot define a struct (or enum) &lt;code&gt;Foo&lt;/code&gt; that requires an instance of &lt;code&gt;Foo&lt;/code&gt; in order to make a new &lt;code&gt;Foo&lt;/code&gt; value. This is because there would be no way a first instance of &lt;code&gt;Foo&lt;/code&gt; could be made to initialize another instance!</source>
          <target state="translated">Вы не можете определить структуру (или перечисление) &lt;code&gt;Foo&lt;/code&gt; ,для которой требуется экземпляр &lt;code&gt;Foo&lt;/code&gt; для создания нового значения &lt;code&gt;Foo&lt;/code&gt; . Это потому, что не было бы возможности создать первый экземпляр &lt;code&gt;Foo&lt;/code&gt; для инициализации другого экземпляра!</target>
        </trans-unit>
        <trans-unit id="1777ac4e29f5cc4458b21aa65a1d164c32783aad" translate="yes" xml:space="preserve">
          <source>You cannot implement both &lt;a href=&quot;../marker/trait.copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;Drop&lt;/code&gt; on the same type. Types that are &lt;code&gt;Copy&lt;/code&gt; get implicitly duplicated by the compiler, making it very hard to predict when, and how often destructors will be executed. As such, these types cannot have destructors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d56e44b75bd82612a5c898ab88640b149ae542f" translate="yes" xml:space="preserve">
          <source>You cannot import the current module into itself, please remove this import or verify you didn't misspell it.</source>
          <target state="translated">Вы не можете импортировать текущий модуль в себя,пожалуйста,удалите этот импорт или проверьте,что вы не написали его неправильно.</target>
        </trans-unit>
        <trans-unit id="9637aa7070b2e9b906188f375ead424b0ed1d4bf" translate="yes" xml:space="preserve">
          <source>You cannot use &lt;code&gt;.assume_init_mut()&lt;/code&gt; to initialize a value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4886cf84f3f70749a96d8b14082b6bb665ea1eb" translate="yes" xml:space="preserve">
          <source>You cannot use &lt;code&gt;packed&lt;/code&gt; and &lt;code&gt;align&lt;/code&gt; hints on a same type. If you want to pack a type to a given size, you should provide a size to packed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e29ffbaea7cbfa903117ea4f8c302e21bcc69bf" translate="yes" xml:space="preserve">
          <source>You cannot use conflicting &lt;code&gt;packed&lt;/code&gt; hints on a same type. If you want to pack a type to a given size, you should provide a size to packed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e46b0f9b1886a75845894deaafd475e2954540" translate="yes" xml:space="preserve">
          <source>You cannot use type or const parameters on foreign items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8026aeec168d950d49b1d853d7fb5eccbde596" translate="yes" xml:space="preserve">
          <source>You choose inheritance for two main reasons. One is for reuse of code: you can implement particular behavior for one type, and inheritance enables you to reuse that implementation for a different type. You can share Rust code using default trait method implementations instead, which you saw in Listing 10-14 when we added a default implementation of the &lt;code&gt;summarize&lt;/code&gt; method on the &lt;code&gt;Summary&lt;/code&gt; trait. Any type implementing the &lt;code&gt;Summary&lt;/code&gt; trait would have the &lt;code&gt;summarize&lt;/code&gt; method available on it without any further code. This is similar to a parent class having an implementation of a method and an inheriting child class also having the implementation of the method. We can also override the default implementation of the &lt;code&gt;summarize&lt;/code&gt; method when we implement the &lt;code&gt;Summary&lt;/code&gt; trait, which is similar to a child class overriding the implementation of a method inherited from a parent class.</source>
          <target state="translated">Вы выбираете наследование по двум основным причинам. Один - для повторного использования кода: вы можете реализовать определенное поведение для одного типа, а наследование позволяет повторно использовать эту реализацию для другого типа. Вместо этого вы можете поделиться кодом Rust, используя реализации метода трейтов по умолчанию, которые вы видели в листинге 10-14, когда мы добавляли реализацию метода &lt;code&gt;summarize&lt;/code&gt; по умолчанию в трейт &lt;code&gt;Summary&lt;/code&gt; . Любой тип, реализующий трейт &lt;code&gt;Summary&lt;/code&gt; , будет иметь доступный метод &lt;code&gt;summarize&lt;/code&gt; без какого-либо дополнительного кода. Это похоже на родительский класс, имеющий реализацию метода, а наследующий дочерний класс также имеет реализацию метода. Мы также можем переопределить реализацию по умолчанию &lt;code&gt;summarize&lt;/code&gt; когда мы реализуем черту &lt;code&gt;Summary&lt;/code&gt; , которая похожа на дочерний класс, переопределяющий реализацию метода, унаследованного от родительского класса.</target>
        </trans-unit>
        <trans-unit id="6eab2426d653eb63791cf922c9fd68c2cf3cc300" translate="yes" xml:space="preserve">
          <source>You could use the &lt;code&gt;while&lt;/code&gt; construct to loop over the elements of a collection, such as an array. For example, let&amp;rsquo;s look at Listing 3-4.</source>
          <target state="translated">Вы можете использовать &lt;code&gt;while&lt;/code&gt; конструкцию для цикла по элементам коллекции, такие как массив. Например, давайте посмотрим на листинг 3-4.</target>
        </trans-unit>
        <trans-unit id="86305ea7dfbd655b97c9fe7b48a6cfa736ccdc12" translate="yes" xml:space="preserve">
          <source>You declare constants using the &lt;code&gt;const&lt;/code&gt; keyword instead of the &lt;code&gt;let&lt;/code&gt; keyword, and the type of the value &lt;em&gt;must&lt;/em&gt; be annotated. We&amp;rsquo;re about to cover types and type annotations in the next section, &lt;a href=&quot;ch03-02-data-types#data-types&quot;&gt;&amp;ldquo;Data Types,&amp;rdquo;&lt;/a&gt; so don&amp;rsquo;t worry about the details right now. Just know that you must always annotate the type.</source>
          <target state="translated">Вы объявляете константы, используя ключевое слово &lt;code&gt;const&lt;/code&gt; вместо ключевого слова &lt;code&gt;let&lt;/code&gt; , а тип значения &lt;em&gt;должен&lt;/em&gt; быть аннотирован. Мы собираемся рассмотреть типы и аннотации типов в следующем разделе &lt;a href=&quot;ch03-02-data-types#data-types&quot;&gt;&amp;laquo;Типы данных&amp;raquo;,&lt;/a&gt; поэтому не беспокойтесь о деталях прямо сейчас. Просто знайте, что вы всегда должны аннотировать тип.</target>
        </trans-unit>
        <trans-unit id="d26c982256875ef965abb7ff2a9ae7d6d8262fa1" translate="yes" xml:space="preserve">
          <source>You declared a pattern as an argument in a foreign function declaration. Erroneous code example:</source>
          <target state="translated">Вы объявили образец в качестве аргумента в декларации о внешней функции.Пример ошибочного кода:</target>
        </trans-unit>
        <trans-unit id="3042e33d1a35dfe59f3b5a52b534fe5ccd3ab130" translate="yes" xml:space="preserve">
          <source>You declared an unknown intrinsic function. Erroneous code example:</source>
          <target state="translated">Вы объявили неизвестную внутреннюю функцию.Пример ошибочного кода:</target>
        </trans-unit>
        <trans-unit id="209c4b82ebb79e610fb7da013287d442d9de7ccc" translate="yes" xml:space="preserve">
          <source>You declared two fields of a struct with the same name. Erroneous code example:</source>
          <target state="translated">Вы объявили два поля одноименной структуры.Пример ошибочного кода:</target>
        </trans-unit>
        <trans-unit id="5681291083d07044a63476be05813904d873a94e" translate="yes" xml:space="preserve">
          <source>You gave an invalid number of type parameters to an intrinsic function. Erroneous code example:</source>
          <target state="translated">Вы дали недействительное количество параметров типа intrinsic-функции.Пример ошибочного кода:</target>
        </trans-unit>
        <trans-unit id="73e529ed83de9dd32d08048f27abd6e18e54d03b" translate="yes" xml:space="preserve">
          <source>You gave an unnecessary type or const parameter in a type alias. Erroneous code example:</source>
          <target state="translated">Вы дали ненужный тип или параметр const в псевдониме типа.Пример ошибочного кода:</target>
        </trans-unit>
        <trans-unit id="ef290be095bc0ac42be01bd488ced06e1f432faa" translate="yes" xml:space="preserve">
          <source>You gave too few lifetime arguments. Example:</source>
          <target state="translated">Ты слишком мало спорил на всю жизнь.Пример:</target>
        </trans-unit>
        <trans-unit id="3a992fb3e33f43f550919aa8e7cbe12bdd71799a" translate="yes" xml:space="preserve">
          <source>You gave too many lifetime arguments. Erroneous code example:</source>
          <target state="translated">Ты слишком много спорил на протяжении всей жизни.Ошибочный пример кода:</target>
        </trans-unit>
        <trans-unit id="803a897636a53ddcd87076d162300ffab0d90307" translate="yes" xml:space="preserve">
          <source>You have to provide the same number of arguments as expected by the &lt;code&gt;Fn&lt;/code&gt;-based type. So to fix the previous example, we need to remove the &lt;code&gt;y&lt;/code&gt; argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8cdc3f699d29b35f63008d1337b75507d28ea4" translate="yes" xml:space="preserve">
          <source>You have two solutions:</source>
          <target state="translated">У тебя есть два решения:</target>
        </trans-unit>
        <trans-unit id="9dce30760c2f61bac673b91333250ea52ecff835" translate="yes" xml:space="preserve">
          <source>You implemented a trait, overriding one or more of its associated types but did not reimplement its default methods.</source>
          <target state="translated">Вы реализовали признак,переопределив один или несколько связанных с ним типов,но не переопределили методы по умолчанию.</target>
        </trans-unit>
        <trans-unit id="ca3b4cf5422aeae2f92f99806820d8c1b575cccd" translate="yes" xml:space="preserve">
          <source>You just want a set.</source>
          <target state="translated">Ты просто хочешь набор.</target>
        </trans-unit>
        <trans-unit id="693a8bb9813bf36c49860217c46ff78a91bebee4" translate="yes" xml:space="preserve">
          <source>You just want to remember which keys you've seen.</source>
          <target state="translated">Ты просто хочешь вспомнить,какие ключи ты видел.</target>
        </trans-unit>
        <trans-unit id="6267968ef88afc721ff532c17b0b60cff2c548da" translate="yes" xml:space="preserve">
          <source>You made it! That was a sizable chapter: you learned about variables, scalar and compound data types, functions, comments, &lt;code&gt;if&lt;/code&gt; expressions, and loops! If you want to practice with the concepts discussed in this chapter, try building programs to do the following:</source>
          <target state="translated">Ты сделал это! Это была большая глава: вы узнали о переменных, скалярных и составных типах данных, функциях, комментариях, выражениях &lt;code&gt;if&lt;/code&gt; и циклах! Если вы хотите попрактиковаться в концепциях, обсуждаемых в этой главе, попробуйте создавать программы, выполняющие следующие действия:</target>
        </trans-unit>
        <trans-unit id="a810a482c6e2364071a3fb83cc7555c0141460f5" translate="yes" xml:space="preserve">
          <source>You may also &lt;code&gt;impl Unpin for Struct&lt;/code&gt;&lt;em&gt;even if&lt;/em&gt; the type of &lt;code&gt;field&lt;/code&gt; is not &lt;a href=&quot;../marker/trait.unpin&quot;&gt;&lt;code&gt;Unpin&lt;/code&gt;&lt;/a&gt;. What that type thinks about pinning is not relevant when no &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&amp;amp;mut Field&amp;gt;&lt;/code&gt; is ever created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0326a4d7280cc9445cf9fc933301360c8002c40d" translate="yes" xml:space="preserve">
          <source>You may also &lt;code&gt;impl Unpin for Struct&lt;/code&gt;&lt;em&gt;even if&lt;/em&gt; the type of &lt;code&gt;field&lt;/code&gt; is not &lt;code&gt;Unpin&lt;/code&gt;. What that type thinks about pinning is not relevant when no &lt;code&gt;Pin&amp;lt;&amp;amp;mut Field&amp;gt;&lt;/code&gt; is ever created.</source>
          <target state="translated">Вы также можете использовать &lt;code&gt;impl Unpin for Struct&lt;/code&gt; &lt;em&gt;даже если&lt;/em&gt; тип &lt;code&gt;field&lt;/code&gt; не &lt;code&gt;Unpin&lt;/code&gt; . То, что этот тип думает о закреплении, не имеет значения, если никогда не создается &lt;code&gt;Pin&amp;lt;&amp;amp;mut Field&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82783799f040a1f0f2e1bb96aee818324cd7928d" translate="yes" xml:space="preserve">
          <source>You may also find it useful to use &lt;a href=&quot;trait.partialord#tymethod.partial_cmp&quot;&gt;&lt;code&gt;partial_cmp&lt;/code&gt;&lt;/a&gt; on your type's fields. Here is an example of &lt;code&gt;Person&lt;/code&gt; types who have a floating-point &lt;code&gt;height&lt;/code&gt; field that is the only field to be used for sorting:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d25bc5acf2f68b706c37dcc13c39607795d6a9f" translate="yes" xml:space="preserve">
          <source>You may also find it useful to use &lt;code&gt;partial_cmp()&lt;/code&gt; on your type's fields. Here is an example of &lt;code&gt;Person&lt;/code&gt; types who have a floating-point &lt;code&gt;height&lt;/code&gt; field that is the only field to be used for sorting:</source>
          <target state="translated">Вы также можете найти полезным использовать &lt;code&gt;partial_cmp()&lt;/code&gt; в полях вашего типа. Вот пример типов &lt;code&gt;Person&lt;/code&gt; ,у которых есть поле &lt;code&gt;height&lt;/code&gt; с плавающей точкой, которое является единственным полем, используемым для сортировки:</target>
        </trans-unit>
        <trans-unit id="cb2b627de2d8f77ac852c488f122afb35b75e986" translate="yes" xml:space="preserve">
          <source>You may see different version numbers (but they will all be compatible with the code, thanks to SemVer!), and the lines may be in a different order.</source>
          <target state="translated">Вы можете видеть разные номера версий (но все они будут совместимы с кодом,благодаря SemVer!),а строки могут быть в другом порядке.</target>
        </trans-unit>
        <trans-unit id="47e1847886b9455bc7d7587982097dfaef75fc27" translate="yes" xml:space="preserve">
          <source>You may see different version numbers (but they will all be compatible with the code, thanks to SemVer!), different lines (depending on the operating system), and the lines may be in a different order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aea23757c2d4ea05f9bc0b624b6a983479b8d23" translate="yes" xml:space="preserve">
          <source>You may want to use &lt;a href=&quot;struct.builder#method.spawn&quot;&gt;&lt;code&gt;spawn&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;fn.spawn&quot;&gt;&lt;code&gt;thread::spawn&lt;/code&gt;&lt;/a&gt;, when you want to recover from a failure to launch a thread, indeed the free function will panic where the &lt;code&gt;Builder&lt;/code&gt; method will return a &lt;a href=&quot;../io/type.result&quot;&gt;&lt;code&gt;io::Result&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;struct.builder#method.spawn&quot;&gt; &lt;code&gt;spawn&lt;/code&gt; &lt;/a&gt; вместо &lt;a href=&quot;fn.spawn&quot;&gt; &lt;code&gt;thread::spawn&lt;/code&gt; &lt;/a&gt; , когда хотите восстановиться после сбоя запуска потока, действительно, бесплатная функция запаникует, когда метод &lt;code&gt;Builder&lt;/code&gt; вернет &lt;a href=&quot;../io/type.result&quot;&gt; &lt;code&gt;io::Result&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e857d3e6ddaa2784fb36ba6a569dbc89bbcf9c2c" translate="yes" xml:space="preserve">
          <source>You might also simply assert success:</source>
          <target state="translated">Ты также можешь просто утверждать успех:</target>
        </trans-unit>
        <trans-unit id="8a5b03ac5680c5c24b01fe4d462d228134c39012" translate="yes" xml:space="preserve">
          <source>You might be interested in visiting the &lt;a href=&quot;https://rust-lang.github.io/async-book/07_workarounds/06_async_in_traits.html&quot;&gt;async book&lt;/a&gt; for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411fd9c69aaa84add9fa6a1d184d14bbf20a0535" translate="yes" xml:space="preserve">
          <source>You might be wondering whether there is a runtime cost when you&amp;rsquo;re using generic type parameters. The good news is that Rust implements generics in such a way that your code doesn&amp;rsquo;t run any slower using generic types than it would with concrete types.</source>
          <target state="translated">Вам может быть интересно, есть ли затраты времени выполнения при использовании параметров универсального типа. Хорошая новость заключается в том, что Rust реализует универсальные типы таким образом, что ваш код не работает медленнее при использовании универсальных типов, чем при использовании конкретных типов.</target>
        </trans-unit>
        <trans-unit id="3ebcb4010913957f86a0d23be72d6863ae7ba24e" translate="yes" xml:space="preserve">
          <source>You might change it to:</source>
          <target state="translated">Ты можешь изменить его:</target>
        </trans-unit>
        <trans-unit id="196ac9c5351705e1e9d296402ef15022404587af" translate="yes" xml:space="preserve">
          <source>You might have noticed that &lt;code&gt;counter&lt;/code&gt; is immutable but we could get a mutable reference to the value inside it; this means &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; provides interior mutability, as the &lt;code&gt;Cell&lt;/code&gt; family does. In the same way we used &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; in Chapter 15 to allow us to mutate contents inside an &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;, we use &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; to mutate contents inside an &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Вы могли заметить, что &lt;code&gt;counter&lt;/code&gt; неизменяем, но мы можем получить изменяемую ссылку на значение внутри него; это означает, что &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; обеспечивает внутреннюю изменчивость, как и семейство &lt;code&gt;Cell&lt;/code&gt; . Точно так же, как мы использовали &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; в главе 15, чтобы позволить нам изменять содержимое внутри &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; , мы используем &lt;code&gt;Mutex&amp;lt;T&amp;gt;&lt;/code&gt; для изменения содержимого внутри &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81ed339c6506ce76f125fbadee32187bafce0758" translate="yes" xml:space="preserve">
          <source>You might have noticed that we&amp;rsquo;re calling &lt;code&gt;unwrap&lt;/code&gt; to cause the &lt;code&gt;hello_macro_derive&lt;/code&gt; function to panic if the call to the &lt;code&gt;syn::parse&lt;/code&gt; function fails here. It&amp;rsquo;s necessary for our procedural macro to panic on errors because &lt;code&gt;proc_macro_derive&lt;/code&gt; functions must return &lt;code&gt;TokenStream&lt;/code&gt; rather than &lt;code&gt;Result&lt;/code&gt; to conform to the procedural macro API. We&amp;rsquo;ve simplified this example by using &lt;code&gt;unwrap&lt;/code&gt;; in production code, you should provide more specific error messages about what went wrong by using &lt;code&gt;panic!&lt;/code&gt; or &lt;code&gt;expect&lt;/code&gt;.</source>
          <target state="translated">Возможно, вы заметили, что мы вызываем &lt;code&gt;unwrap&lt;/code&gt; , чтобы вызвать &lt;code&gt;hello_macro_derive&lt;/code&gt; функции hello_macro_derive, если вызов функции &lt;code&gt;syn::parse&lt;/code&gt; завершится ошибкой. Для нашего процедурного макроса необходимо паниковать при ошибках, потому &lt;code&gt;proc_macro_derive&lt;/code&gt; функции proc_macro_derive должны возвращать &lt;code&gt;TokenStream&lt;/code&gt; , а не &lt;code&gt;Result&lt;/code&gt; , чтобы соответствовать API процедурного макроса. Мы упростили этот пример, используя &lt;code&gt;unwrap&lt;/code&gt; ; в производственном коде вы должны предоставить более конкретные сообщения об ошибках о том, что пошло не так, используя &lt;code&gt;panic!&lt;/code&gt; или &lt;code&gt;expect&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4c72451ecb185d797de897da475849b8f847ffa" translate="yes" xml:space="preserve">
          <source>You might instead, if you don't want to handle the error, simply assert success with &lt;a href=&quot;enum.result#method.expect&quot;&gt;&lt;code&gt;expect&lt;/code&gt;&lt;/a&gt;. This will panic if the write fails, providing a marginally useful message indicating why:</source>
          <target state="translated">Вместо этого вы можете, если не хотите обрабатывать ошибку, просто подтвердить успех с помощью &lt;a href=&quot;enum.result#method.expect&quot;&gt; &lt;code&gt;expect&lt;/code&gt; &lt;/a&gt; . Это вызовет панику, если запись не удастся, предоставив мало полезное сообщение, указывающее, почему:</target>
        </trans-unit>
        <trans-unit id="6589cc6edb23f47a96ff9516937ce21a834273d2" translate="yes" xml:space="preserve">
          <source>You might see a different ordering of workers and messages printed. We can see how this code works from the messages: workers 0 and 3 got the first two requests, and then on the third request, the server stopped accepting connections. When the &lt;code&gt;ThreadPool&lt;/code&gt; goes out of scope at the end of &lt;code&gt;main&lt;/code&gt;, its &lt;code&gt;Drop&lt;/code&gt; implementation kicks in, and the pool tells all workers to terminate. The workers each print a message when they see the terminate message, and then the thread pool calls &lt;code&gt;join&lt;/code&gt; to shut down each worker thread.</source>
          <target state="translated">Вы можете увидеть другой порядок напечатанных рабочих процессов и сообщений. Мы можем увидеть, как работает этот код, из сообщений: рабочие 0 и 3 получили первые два запроса, а затем по третьему запросу сервер перестал принимать соединения. Когда &lt;code&gt;ThreadPool&lt;/code&gt; выходит из области видимости в конце &lt;code&gt;main&lt;/code&gt; , &lt;code&gt;Drop&lt;/code&gt; его реализация Drop , и пул сообщает всем рабочим о завершении работы. Каждый воркер печатает сообщение, когда видит сообщение о завершении, а затем пул потоков вызывает &lt;code&gt;join&lt;/code&gt; для завершения каждого рабочего потока.</target>
        </trans-unit>
        <trans-unit id="c72b034ac7dca22dec808c9cf485588e7fbd8ad5" translate="yes" xml:space="preserve">
          <source>You might see suggestions to use the &lt;code&gt;'static&lt;/code&gt; lifetime in error messages. But before specifying &lt;code&gt;'static&lt;/code&gt; as the lifetime for a reference, think about whether the reference you have actually lives the entire lifetime of your program or not. You might consider whether you want it to live that long, even if it could. Most of the time, the problem results from attempting to create a dangling reference or a mismatch of the available lifetimes. In such cases, the solution is fixing those problems, not specifying the &lt;code&gt;'static&lt;/code&gt; lifetime.</source>
          <target state="translated">Вы можете увидеть предложения использовать &lt;code&gt;'static&lt;/code&gt; время жизни в сообщениях об ошибках. Но прежде чем указывать &lt;code&gt;'static&lt;/code&gt; качестве времени жизни для ссылки, подумайте, действительно ли ссылка живет в течение всего времени жизни вашей программы или нет. Вы можете подумать, хотите ли вы, чтобы он прожил так долго, даже если бы мог. В большинстве случаев проблема возникает из-за попытки создать висящую ссылку или несоответствие доступных времен жизни. В таких случаях решение заключается в устранении этих проблем, а не в указании &lt;code&gt;'static&lt;/code&gt; жизни&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="63505ed6c9546f58e904a69b503f70f3b2975d65" translate="yes" xml:space="preserve">
          <source>You might see the values in another order; it depends on your system. This is what makes concurrency interesting as well as difficult. If you experiment with &lt;code&gt;thread::sleep&lt;/code&gt;, giving it various values in the different threads, each run will be more nondeterministic and create different output each time.</source>
          <target state="translated">Вы можете увидеть значения в другом порядке; это зависит от вашей системы. Это то, что делает параллелизм интересным и трудным. Если вы поэкспериментируете с &lt;code&gt;thread::sleep&lt;/code&gt; , задав ему разные значения в разных потоках, каждый запуск будет более недетерминированным и каждый раз будет создавать разные выходные данные.</target>
        </trans-unit>
        <trans-unit id="6a1d43c5cc821b3a1e73ff53937e14c370178589" translate="yes" xml:space="preserve">
          <source>You might then wonder why all primitive types aren&amp;rsquo;t atomic and why standard library types aren&amp;rsquo;t implemented to use &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; by default. The reason is that thread safety comes with a performance penalty that you only want to pay when you really need to. If you&amp;rsquo;re just performing operations on values within a single thread, your code can run faster if it doesn&amp;rsquo;t have to enforce the guarantees atomics provide.</source>
          <target state="translated">Тогда вы можете задаться вопросом, почему все примитивные типы не являются атомарными и почему стандартные библиотечные типы не реализованы для использования &lt;code&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; по умолчанию. Причина в том, что потокобезопасность приводит к снижению производительности, которую вы хотите платить только тогда, когда вам действительно нужно. Если вы просто выполняете операции со значениями в одном потоке, ваш код может работать быстрее, если ему не нужно обеспечивать гарантии, предоставляемые атомами.</target>
        </trans-unit>
        <trans-unit id="cd9251bb8badf33b5b3088f99faa91186c094eff" translate="yes" xml:space="preserve">
          <source>You must attempt to acquire the lock before using the data.</source>
          <target state="translated">Перед использованием данных необходимо попытаться получить блокировку.</target>
        </trans-unit>
        <trans-unit id="9536b11b39bc18d7e4dff7bde20e1ea4be153f1d" translate="yes" xml:space="preserve">
          <source>You must enforce Rust's aliasing rules, since the returned lifetime &lt;code&gt;'a&lt;/code&gt; is arbitrarily chosen and does not necessarily reflect the actual lifetime of the data. In particular, for the duration of this lifetime, the memory the pointer points to must not get accessed (read or written) through any other pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb4a5765e077612811d9e34d1cfae28164c42a6" translate="yes" xml:space="preserve">
          <source>You must enforce Rust's aliasing rules, since the returned lifetime &lt;code&gt;'a&lt;/code&gt; is arbitrarily chosen and does not necessarily reflect the actual lifetime of the data. In particular, for the duration of this lifetime, the memory the pointer points to must not get mutated (except inside &lt;code&gt;UnsafeCell&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777aaa3e727415bd3f558d75eed0071d689a2e50" translate="yes" xml:space="preserve">
          <source>You must make sure that you uphold the &lt;a href=&quot;#drop-guarantee&quot;&gt;&lt;code&gt;Drop&lt;/code&gt; guarantee&lt;/a&gt;: once your struct is pinned, the memory that contains the content is not overwritten or deallocated without calling the content's destructors. This can be tricky, as witnessed by &lt;a href=&quot;../collections/struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;: the destructor of &lt;a href=&quot;../collections/struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; can fail to call &lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; on all elements if one of the destructors panics. This violates the &lt;a href=&quot;../ops/trait.drop#tymethod.drop&quot;&gt;&lt;code&gt;Drop&lt;/code&gt;&lt;/a&gt; guarantee, because it can lead to elements being deallocated without their destructor being called. (&lt;a href=&quot;../collections/struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; has no pinning projections, so this does not cause unsoundness.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512b5098c179561bd4c62ac9351616ebcf00f290" translate="yes" xml:space="preserve">
          <source>You must make sure that you uphold the &lt;a href=&quot;#drop-guarantee&quot;&gt;&lt;code&gt;Drop&lt;/code&gt; guarantee&lt;/a&gt;: once your struct is pinned, the memory that contains the content is not overwritten or deallocated without calling the content's destructors. This can be tricky, as witnessed by &lt;a href=&quot;../collections/struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;: the destructor of &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; can fail to call &lt;code&gt;drop&lt;/code&gt; on all elements if one of the destructors panics. This violates the &lt;code&gt;Drop&lt;/code&gt; guarantee, because it can lead to elements being deallocated without their destructor being called. (&lt;code&gt;VecDeque&lt;/code&gt; has no pinning projections, so this does not cause unsoundness.)</source>
          <target state="translated">Вы должны убедиться, что соблюдаете &lt;a href=&quot;#drop-guarantee&quot;&gt;гарантию &lt;/a&gt; &lt;code&gt;Drop&lt;/code&gt; : после закрепления вашей структуры память, содержащая содержимое, не перезаписывается или не освобождается без вызова деструкторов содержимого. Это может быть сложно, о чем свидетельствует &lt;a href=&quot;../collections/struct.vecdeque&quot;&gt; &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; : деструктор &lt;code&gt;VecDeque&amp;lt;T&amp;gt;&lt;/code&gt; может не вызвать &lt;code&gt;drop&lt;/code&gt; для всех элементов, если один из деструкторов выйдет из строя . Это нарушает гарантию &lt;code&gt;Drop&lt;/code&gt; , поскольку может привести к освобождению элементов без вызова их деструктора. ( &lt;code&gt;VecDeque&lt;/code&gt; не имеет выступов закрепления, поэтому это не вызывает несостоятельности.)</target>
        </trans-unit>
        <trans-unit id="2f7ce1f0dba3e2341308e56325b73cd3bb2dd447" translate="yes" xml:space="preserve">
          <source>You must not offer any other operations that could lead to data being moved out of the structural fields when your type is pinned. For example, if the struct contains an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; and there is a &lt;code&gt;take&lt;/code&gt;-like operation with type &lt;code&gt;fn(Pin&amp;lt;&amp;amp;mut Struct&amp;lt;T&amp;gt;&amp;gt;) -&amp;gt; Option&amp;lt;T&amp;gt;&lt;/code&gt;, that operation can be used to move a &lt;code&gt;T&lt;/code&gt; out of a pinned &lt;code&gt;Struct&amp;lt;T&amp;gt;&lt;/code&gt; -- which means pinning cannot be structural for the field holding this data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b9021b2601965141c3fb4dd09ebe81c52813f0" translate="yes" xml:space="preserve">
          <source>You must not offer any other operations that could lead to data being moved out of the structural fields when your type is pinned. For example, if the struct contains an &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; and there is a &lt;code&gt;take&lt;/code&gt;-like operation with type &lt;code&gt;fn(Pin&amp;lt;&amp;amp;mut Struct&amp;lt;T&amp;gt;&amp;gt;) -&amp;gt; Option&amp;lt;T&amp;gt;&lt;/code&gt;, that operation can be used to move a &lt;code&gt;T&lt;/code&gt; out of a pinned &lt;code&gt;Struct&amp;lt;T&amp;gt;&lt;/code&gt; -- which means pinning cannot be structural for the field holding this data.</source>
          <target state="translated">Вы не должны предлагать никаких других операций, которые могут привести к перемещению данных из структурных полей при закреплении вашего типа. Например, если структура содержит &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; и есть &lt;code&gt;take&lt;/code&gt; -как операции с типом &lt;code&gt;fn(Pin&amp;lt;&amp;amp;mut Struct&amp;lt;T&amp;gt;&amp;gt;) -&amp;gt; Option&amp;lt;T&amp;gt;&lt;/code&gt; , эта операция может быть использована для перемещения &lt;code&gt;T&lt;/code&gt; аута закрепленного &lt;code&gt;Struct&amp;lt;T&amp;gt;&lt;/code&gt; - это означает, что закрепление не может быть структурным для поля, содержащего эти данные.</target>
        </trans-unit>
        <trans-unit id="6dadab06cf1444a4d999bc3a5b975465ba195e33" translate="yes" xml:space="preserve">
          <source>You need to end your multi-line comment with &lt;code&gt;*/&lt;/code&gt; in order to fix this error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9816c05280b47604bf0f356ee6ab631c5316635" translate="yes" xml:space="preserve">
          <source>You need to have a place expression to be able to assign it something. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ca2833ca5cb486a7ab87759a170f3e035adbd8" translate="yes" xml:space="preserve">
          <source>You need to link your code to the relevant crate in order to be able to use it (through Cargo or the &lt;code&gt;-L&lt;/code&gt; option of rustc example). Plugins are crates as well, and you link to them the same way.</source>
          <target state="translated">Вам необходимо привязать свой код к соответствующему ящику, чтобы иметь возможность его использовать (с помощью Cargo или опции &lt;code&gt;-L&lt;/code&gt; в примере rustc). Плагины - это тоже ящики, и вы так же связываете их.</target>
        </trans-unit>
        <trans-unit id="32770b9133b89cb0277fb3b811c7f33131f07d54" translate="yes" xml:space="preserve">
          <source>You should get different random numbers, and they should all be numbers between 1 and 100. Great job!</source>
          <target state="translated">Вы должны получить различные случайные числа,и все они должны быть числами от 1 до 100.Отличная работа!</target>
        </trans-unit>
        <trans-unit id="d37e014e5424795905e10b35dcbbfc90645d1a41" translate="yes" xml:space="preserve">
          <source>You should see the version number, commit hash, and commit date for the latest stable version that has been released in the following format:</source>
          <target state="translated">Вы должны увидеть номер версии,хэш-коммит и дату коммита последней стабильной версии,которая была выпущена в следующем формате:</target>
        </trans-unit>
        <trans-unit id="b4bb15c4affeb1fb21e02b095c6505cc399a1de5" translate="yes" xml:space="preserve">
          <source>You should use ranges to create string slices with caution, because doing so can crash your program.</source>
          <target state="translated">Вы должны использовать диапазоны для создания фрагментов строки с осторожностью,потому что это может привести к аварийному завершению работы программы.</target>
        </trans-unit>
        <trans-unit id="b5609a431bf66e21ded639dc22d4df284c0c4dab" translate="yes" xml:space="preserve">
          <source>You tried to declare an undefined atomic operation function. Erroneous code example:</source>
          <target state="translated">Вы пытались объявить неопределенную атомарную операционную функцию.Пример ошибочного кода:</target>
        </trans-unit>
        <trans-unit id="a1a863fa4182157ddb7efdff7bcd79894dd1b976" translate="yes" xml:space="preserve">
          <source>You tried to implement methods for a primitive type. Erroneous code example:</source>
          <target state="translated">Вы пытались реализовать методы для примитивного типа.Пример ошибочного кода:</target>
        </trans-unit>
        <trans-unit id="0ca57adb3473c7fcda2a5e14cb2150affeb0b7a3" translate="yes" xml:space="preserve">
          <source>You tried to move out of a value which was borrowed. Erroneous code example:</source>
          <target state="translated">Ты пытался уйти от стоимости,которая была заимствована.Ошибочный пример кода:</target>
        </trans-unit>
        <trans-unit id="34c451e33c02fd03cc102eae1553830118a784d7" translate="yes" xml:space="preserve">
          <source>You tried to provide a generic argument to a type which doesn't need it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545469411a7c667814f3bf5bfe5fb3b2d297e5f6" translate="yes" xml:space="preserve">
          <source>You tried to provide a generic argument to a type which doesn't need it. Erroneous code example:</source>
          <target state="translated">Вы пытались предоставить общий аргумент тому типу,которому он не нужен.Пример ошибочного кода:</target>
        </trans-unit>
        <trans-unit id="be2b15dc95b36de3c1d45fb8ddd11ee16b58649b" translate="yes" xml:space="preserve">
          <source>You tried to provide a lifetime to a type which doesn't need it. See &lt;code&gt;E0109&lt;/code&gt; for more details.</source>
          <target state="translated">Вы пытались предоставить время жизни типу, которому это не нужно. См. &lt;code&gt;E0109&lt;/code&gt; для получения более подробной информации.</target>
        </trans-unit>
        <trans-unit id="f4db46c9e8574444f4cfb7fb9e13a0963a31d1d6" translate="yes" xml:space="preserve">
          <source>You tried to supply a type which doesn't implement some trait in a location which expected that trait. This error typically occurs when working with &lt;code&gt;Fn&lt;/code&gt;-based types. Erroneous code example:</source>
          <target state="translated">Вы пытались предоставить тип, который не реализует какую-либо черту в месте, которое ожидало этой черты. Эта ошибка обычно возникает при работе с типами на основе &lt;code&gt;Fn&lt;/code&gt; . Пример ошибочного кода:</target>
        </trans-unit>
        <trans-unit id="167ff7eae934b858061a1902e9bb0a5c62d24c8b" translate="yes" xml:space="preserve">
          <source>You tried to supply an &lt;code&gt;Fn&lt;/code&gt;-based type with an incorrect number of arguments than what was expected.</source>
          <target state="translated">Вы попытались предоставить тип на основе &lt;code&gt;Fn&lt;/code&gt; с неправильным числом аргументов, чем ожидалось.</target>
        </trans-unit>
        <trans-unit id="577351d3cfda8d5b8fdd302806929cd6488e01b9" translate="yes" xml:space="preserve">
          <source>You tried to use a type which doesn't implement some trait in a place which expected that trait.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2c504f4812cc79039153f6b534ac2268b376e6" translate="yes" xml:space="preserve">
          <source>You tried to use a type which doesn't implement some trait in a place which expected that trait. Erroneous code example:</source>
          <target state="translated">Вы пытались использовать тип,который не реализует какой-то признак в месте,которое ожидало этого признака.Пример ошибочного кода:</target>
        </trans-unit>
        <trans-unit id="3f043de1a04d3f47b2f2141898a6c05a985c90bb" translate="yes" xml:space="preserve">
          <source>You tried to use something which is not a trait in a trait position, such as a bound or &lt;code&gt;impl&lt;/code&gt;.</source>
          <target state="translated">Вы пытались использовать что-то, что не является чертой в позиции черты, например связанное или &lt;code&gt;impl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d85882a605a6091380f8447ea32da5124e667bea" translate="yes" xml:space="preserve">
          <source>You tried to use structure-literal syntax to create an item that is not a structure or enum variant.</source>
          <target state="translated">Вы пытались использовать структурно-литературный синтаксис для создания элемента,который не является структурным или перечислительным вариантом.</target>
        </trans-unit>
        <trans-unit id="d89d5d887992fa0196687f3b68c2169705af8e87" translate="yes" xml:space="preserve">
          <source>You used a function or type which doesn't fit the requirements for where it was used. Erroneous code examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e502b3f73ed8c4a8f16c59c5846cc713beaa9053" translate="yes" xml:space="preserve">
          <source>You used an associated type which isn't defined in the trait. Erroneous code example:</source>
          <target state="translated">Вы использовали ассоциированный тип,который не определен в трейтере.Пример ошибочного кода:</target>
        </trans-unit>
        <trans-unit id="cc4a84a36c41c857e979b18f2b8cf40f18b606c2" translate="yes" xml:space="preserve">
          <source>You want a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;struct.vecdeque&quot;&gt;&lt;code&gt;VecDeque&lt;/code&gt;&lt;/a&gt; of unknown size, and can't tolerate amortization.</source>
          <target state="translated">Вам нужен &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;struct.vecdeque&quot;&gt; &lt;code&gt;VecDeque&lt;/code&gt; &lt;/a&gt; неизвестного размера, и вы не можете терпеть амортизацию.</target>
        </trans-unit>
        <trans-unit id="429529cc1a810b0eca46cf5ff23873f2a58721a5" translate="yes" xml:space="preserve">
          <source>You want a &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt; that supports efficient insertion at both ends of the sequence.</source>
          <target state="translated">Вам нужен &lt;a href=&quot;../vec/struct.vec&quot;&gt; &lt;code&gt;Vec&lt;/code&gt; ,&lt;/a&gt; который поддерживает эффективную вставку на обоих концах последовательности.</target>
        </trans-unit>
        <trans-unit id="0559695de775dc2d4a42d0b0be239e947bd98040" translate="yes" xml:space="preserve">
          <source>You want a cache.</source>
          <target state="translated">Тебе нужен кэш.</target>
        </trans-unit>
        <trans-unit id="4a04ed0c490076b3c6bc236a8e45412e01a832c7" translate="yes" xml:space="preserve">
          <source>You want a double-ended queue (deque).</source>
          <target state="translated">Ты хочешь двухстороннюю очередь (deque).</target>
        </trans-unit>
        <trans-unit id="6c125f0662558b8441e0f2b2e1f000892e47cfb2" translate="yes" xml:space="preserve">
          <source>You want a heap-allocated array.</source>
          <target state="translated">Тебе нужен распределенный по куче массив.</target>
        </trans-unit>
        <trans-unit id="5e482e7b2ba17ce10eaf983926bd2df92a665b96" translate="yes" xml:space="preserve">
          <source>You want a map sorted by its keys.</source>
          <target state="translated">Вы хотите,чтобы карта была отсортирована по клавишам.</target>
        </trans-unit>
        <trans-unit id="a6811d3f626f38310b872083f59839dc40adf45e" translate="yes" xml:space="preserve">
          <source>You want a map, with no extra functionality.</source>
          <target state="translated">Вам нужна карта,без дополнительной функциональности.</target>
        </trans-unit>
        <trans-unit id="47ec6c6f37e5a611470a4fe3872921e071b9d35e" translate="yes" xml:space="preserve">
          <source>You want a priority queue.</source>
          <target state="translated">Ты хочешь очередь приоритетов.</target>
        </trans-unit>
        <trans-unit id="45ec6881dc09115683e907ee13147bb4ef94268c" translate="yes" xml:space="preserve">
          <source>You want a queue.</source>
          <target state="translated">Тебе нужна очередь.</target>
        </trans-unit>
        <trans-unit id="a4274817a1179fcc4e8d32e916255f4d9bea0fcd" translate="yes" xml:space="preserve">
          <source>You want a resizable array.</source>
          <target state="translated">Вам нужен массив с возможностью изменения размера.</target>
        </trans-unit>
        <trans-unit id="dc1b84dd373c41e460b6526462c5a95d9b63833c" translate="yes" xml:space="preserve">
          <source>You want a sequence of elements in a particular order, and will only be appending to (or near) the end.</source>
          <target state="translated">Вам нужна последовательность элементов в определенном порядке,и она будет добавляться только к концу (или около него).</target>
        </trans-unit>
        <trans-unit id="bfb46b766e59892d73fe8fb98696f88c0161713a" translate="yes" xml:space="preserve">
          <source>You want a stack.</source>
          <target state="translated">Тебе нужна стопка.</target>
        </trans-unit>
        <trans-unit id="4604e0073570a83f9a282ed8ddc03f579ab9add5" translate="yes" xml:space="preserve">
          <source>You want to associate arbitrary keys with an arbitrary value.</source>
          <target state="translated">Вы хотите ассоциировать произвольные ключи с произвольным значением.</target>
        </trans-unit>
        <trans-unit id="a717b25180554fee11a8c7238a98a1d986eedfd5" translate="yes" xml:space="preserve">
          <source>You want to be able to get a range of entries on-demand.</source>
          <target state="translated">Вы хотите иметь возможность получить ряд записей по требованию.</target>
        </trans-unit>
        <trans-unit id="82a8ad51acfbf7b362c324e437f11dc082c1b2c8" translate="yes" xml:space="preserve">
          <source>You want to collect items up to be processed or sent elsewhere later, and don't care about any properties of the actual values being stored.</source>
          <target state="translated">Вы хотите собирать предметы,которые позже будут обработаны или отправлены в другое место,и не заботитесь о свойствах фактических значений,которые хранятся.</target>
        </trans-unit>
        <trans-unit id="e005bf2f6d086fd7281c06db750033422726610a" translate="yes" xml:space="preserve">
          <source>You want to efficiently split and append lists.</source>
          <target state="translated">Ты хочешь эффективно разбивать и добавлять списки.</target>
        </trans-unit>
        <trans-unit id="c933cf0de25d7f17fc06ec50b65243cd4df88876" translate="yes" xml:space="preserve">
          <source>You want to find the largest or smallest key that is smaller or larger than something.</source>
          <target state="translated">Вы хотите найти самый большой или самый маленький ключ,который меньше или больше,чем что-то.</target>
        </trans-unit>
        <trans-unit id="9ab9d7dd47bb44bfa96e786004ea1b3d0d4c594f" translate="yes" xml:space="preserve">
          <source>You want to store a bunch of elements, but only ever want to process the &quot;biggest&quot; or &quot;most important&quot; one at any given time.</source>
          <target state="translated">Вы хотите хранить кучу элементов,но только когда-нибудь хотите обработать &quot;самый большой&quot; или &quot;самый важный&quot; в любой момент времени.</target>
        </trans-unit>
        <trans-unit id="dff73ddb22e432742f1a3b9903d65c3639aaaa40" translate="yes" xml:space="preserve">
          <source>You would match it using:</source>
          <target state="translated">Ты бы подошла,если бы использовала его:</target>
        </trans-unit>
        <trans-unit id="365595fe25d7676cd843b0c763d0879641943db0" translate="yes" xml:space="preserve">
          <source>You would write an array&amp;rsquo;s type by using square brackets, and within the brackets include the type of each element, a semicolon, and then the number of elements in the array, like so:</source>
          <target state="translated">Вы должны написать тип массива, используя квадратные скобки, а в скобках указать тип каждого элемента, точку с запятой, а затем количество элементов в массиве, например:</target>
        </trans-unit>
        <trans-unit id="8d66487c6c772cf6ed866bab62bec74334fe25fc" translate="yes" xml:space="preserve">
          <source>You wouldn&amp;rsquo;t want a real-world web server to shut down after serving only two requests. This code just demonstrates that the graceful shutdown and cleanup is in working order.</source>
          <target state="translated">Вы бы не хотели, чтобы реальный веб-сервер отключался после обслуживания всего двух запросов. Этот код просто демонстрирует, что корректное завершение работы и очистка находятся в рабочем состоянии.</target>
        </trans-unit>
        <trans-unit id="2a9e5344e2be4f99cb398b95cb15f43df043c859" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll find two kinds of chapters in this book: concept chapters and project chapters. In concept chapters, you&amp;rsquo;ll learn about an aspect of Rust. In project chapters, we&amp;rsquo;ll build small programs together, applying what you&amp;rsquo;ve learned so far. Chapters 2, 12, and 20 are project chapters; the rest are concept chapters.</source>
          <target state="translated">В этой книге вы найдете два типа глав: концептуальные и проектные. В концептуальных главах вы узнаете об аспектах Rust. В главах проекта мы будем вместе создавать небольшие программы, применяя то, что вы уже узнали. Главы 2, 12 и 20 - это главы проекта; остальное - концептуальные главы.</target>
        </trans-unit>
        <trans-unit id="85a254ac5bdd3810bbd358a2de0033d8c5d546e1" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll get an error like this because Rust prevents you from using the invalidated reference:</source>
          <target state="translated">Вы получите такую ​​ошибку, потому что Rust не позволяет вам использовать недействительную ссылку:</target>
        </trans-unit>
        <trans-unit id="6d86880ac82c1881e7a9405d7bd16d7b1f80d76e" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll see different type annotations for other data types.</source>
          <target state="translated">Вы увидите аннотации разных типов для других типов данных.</target>
        </trans-unit>
        <trans-unit id="584a58976748836676009747cbbda6f121e6c815" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll start by making a directory to store your Rust code. It doesn&amp;rsquo;t matter to Rust where your code lives, but for the exercises and projects in this book, we suggest making a &lt;em&gt;projects&lt;/em&gt; directory in your home directory and keeping all your projects there.</source>
          <target state="translated">Вы начнете с создания каталога для хранения кода Rust. Для Rust не имеет значения, где находится ваш код, но для упражнений и проектов в этой книге мы предлагаем создать каталог &lt;em&gt;проектов&lt;/em&gt; в вашем домашнем каталоге и хранить там все свои проекты.</target>
        </trans-unit>
        <trans-unit id="6d4e9cdb26a23e07482cc51bd995fb62c80c08b3" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll use default type parameters in two main ways:</source>
          <target state="translated">Вы будете использовать параметры типа по умолчанию двумя основными способами:</target>
        </trans-unit>
        <trans-unit id="76e7b1024235c93bba49e72df5b2007bd3c01f30" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re already off to a great start on your Rust journey! In this chapter, you&amp;rsquo;ve learned how to:</source>
          <target state="translated">Вы уже отлично начали свое путешествие по Rust! В этой главе вы узнали, как:</target>
        </trans-unit>
        <trans-unit id="465d6c615ec587094237e6d1868d10e3e6d6c845" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve just run a newly created program, so let&amp;rsquo;s examine each step in the process.</source>
          <target state="translated">Вы только что запустили только что созданную программу, поэтому давайте рассмотрим каждый шаг в этом процессе.</target>
        </trans-unit>
        <trans-unit id="2c5f73edb8ee5f2e28f1893521e8701a830fccb7" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve learned that every reference has a lifetime and that you need to specify lifetime parameters for functions or structs that use references. However, in Chapter 4 we had a function in Listing 4-9, which is shown again in Listing 10-26, that compiled without lifetime annotations.</source>
          <target state="translated">Вы узнали, что у каждой ссылки есть время жизни и что вам нужно указать параметры времени жизни для функций или структур, которые используют ссылки. Однако в главе 4 у нас была функция из листинга 4-9, которая снова показана в листинге 10-26, которая скомпилирована без аннотаций времени жизни.</target>
        </trans-unit>
        <trans-unit id="44ba14f7fab35608e1f076ddf40f88f87fe95906" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve seen that it&amp;rsquo;s sometimes useful to ignore values in a pattern, such as in the last arm of a &lt;code&gt;match&lt;/code&gt;, to get a catchall that doesn&amp;rsquo;t actually do anything but does account for all remaining possible values. There are a few ways to ignore entire values or parts of values in a pattern: using the &lt;code&gt;_&lt;/code&gt; pattern (which you&amp;rsquo;ve seen), using the &lt;code&gt;_&lt;/code&gt; pattern within another pattern, using a name that starts with an underscore, or using &lt;code&gt;..&lt;/code&gt; to ignore remaining parts of a value. Let&amp;rsquo;s explore how and why to use each of these patterns.</source>
          <target state="translated">Вы видели, что иногда полезно игнорировать значения в шаблоне, например, в последней ветви &lt;code&gt;match&lt;/code&gt; , чтобы получить сводку, которая на самом деле ничего не делает, но учитывает все оставшиеся возможные значения. Есть несколько способов игнорировать целые значения или части значений в шаблоне: использовать шаблон &lt;code&gt;_&lt;/code&gt; (который вы видели), использовать шаблон &lt;code&gt;_&lt;/code&gt; в другом шаблоне, использовать имя, которое начинается с подчеркивания, или использовать &lt;code&gt;..&lt;/code&gt; чтобы игнорировать оставшиеся части значения. Давайте разберемся, как и зачем использовать каждый из этих шаблонов.</target>
        </trans-unit>
        <trans-unit id="b667051ae799a2fd628bbf6b2a672ad08ac88e85" translate="yes" xml:space="preserve">
          <source>You're interested in what the smallest or largest key-value pair is.</source>
          <target state="translated">Вас интересует,какая самая маленькая или самая большая пара ключей.</target>
        </trans-unit>
        <trans-unit id="9d546e29fcb9280e6885e53aaa2d82bf73b29bc9" translate="yes" xml:space="preserve">
          <source>You're trying to write an inherent implementation for something which isn't a struct nor an enum. Erroneous code example:</source>
          <target state="translated">Ты пытаешься написать неотъемлемую реализацию для чего-то,что не является ни структурой,ни перечислением.Ошибочный пример кода:</target>
        </trans-unit>
        <trans-unit id="da3aed35105ef32e1e695100a00108ae53f9a846" translate="yes" xml:space="preserve">
          <source>Your &lt;em&gt;add&lt;/em&gt; directory should now have these directories and files:</source>
          <target state="translated">В вашем каталоге &lt;em&gt;добавления&lt;/em&gt; теперь должны быть следующие каталоги и файлы:</target>
        </trans-unit>
        <trans-unit id="e58e4525e175f4af13b0845bead6769f97587a2e" translate="yes" xml:space="preserve">
          <source>Your Rust programs can now express concepts in your domain using structs and enums. Creating custom types to use in your API ensures type safety: the compiler will make certain your functions get only values of the type each function expects.</source>
          <target state="translated">Ваши программы Rust теперь могут выражать концепции в вашей области,используя структуры и перечисления.Создание пользовательских типов для использования в Вашем API обеспечивает безопасность типов:компилятор сделает так,чтобы Ваши функции получали только значения того типа,который ожидает каждая функция.</target>
        </trans-unit>
        <trans-unit id="735c2494d942625911bc7d8957e7d9ab2a88f33c" translate="yes" xml:space="preserve">
          <source>Your code after this point needs to rely on not being in this bad state.</source>
          <target state="translated">Ваш код после этого пункта должен полагаться на то,что он не находится в таком плохом состоянии.</target>
        </trans-unit>
        <trans-unit id="1db1a9fd383f11b588c51cc526365c428c751169" translate="yes" xml:space="preserve">
          <source>Your crate will need a unique name. While you&amp;rsquo;re working on a crate locally, you can name a crate whatever you&amp;rsquo;d like. However, crate names on &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; are allocated on a first-come, first-served basis. Once a crate name is taken, no one else can publish a crate with that name. Before attempting to publish a crate, search for the name you want to use on the site. If the name has been used by another crate, you will need to find another name and edit the &lt;code&gt;name&lt;/code&gt; field in the &lt;em&gt;Cargo.toml&lt;/em&gt; file under the &lt;code&gt;[package]&lt;/code&gt; section to use the new name for publishing, like so:</source>
          <target state="translated">Вашему ящику потребуется уникальное имя. Пока вы работаете над ящиком на месте, вы можете назвать ящик как угодно. Однако имена ящиков на &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; выделяются в порядке очереди . После того, как ящик получил имя, никто другой не сможет опубликовать ящик с таким именем. Прежде чем пытаться опубликовать ящик, найдите имя, которое хотите использовать на сайте. Если имя использовалось другим ящиком, вам нужно будет найти другое имя и отредактировать поле &lt;code&gt;name&lt;/code&gt; в файле &lt;em&gt;Cargo.toml в&lt;/em&gt; разделе &lt;code&gt;[package]&lt;/code&gt; , чтобы использовать новое имя для публикации, например:</target>
        </trans-unit>
        <trans-unit id="a348b9c3e6214e498622aa794c35adc160939e25" translate="yes" xml:space="preserve">
          <source>Your method's lifetime parameters do not match the trait declaration. Erroneous code example:</source>
          <target state="translated">Параметры времени жизни вашего метода не совпадают с объявлением признака.Пример ошибочного кода:</target>
        </trans-unit>
        <trans-unit id="44335ff3d78e212a8ef5be5ae6db1f0effecb38b" translate="yes" xml:space="preserve">
          <source>Your type will be passed as &lt;code&gt;self&lt;/code&gt; by-reference, and then the function should emit output into the &lt;code&gt;f.buf&lt;/code&gt; stream. It is up to each format trait implementation to correctly adhere to the requested formatting parameters. The values of these parameters will be listed in the fields of the &lt;a href=&quot;struct.formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; struct. In order to help with this, the &lt;a href=&quot;struct.formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; struct also provides some helper methods.</source>
          <target state="translated">Ваш тип будет передан как &lt;code&gt;self&lt;/code&gt; по себе, а затем функция должна &lt;code&gt;f.buf&lt;/code&gt; вывод в поток f.buf . Правильное соблюдение запрошенных параметров форматирования зависит от реализации каждой характеристики формата. Значения этих параметров будут перечислены в полях &lt;a href=&quot;struct.formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt; структуры. Чтобы помочь с этим, структура &lt;a href=&quot;struct.formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt; также предоставляет некоторые вспомогательные методы.</target>
        </trans-unit>
        <trans-unit id="3071115273bb14d2e07d6d6e35d490b903df989f" translate="yes" xml:space="preserve">
          <source>Yup, our error message is being printed to standard output. It&amp;rsquo;s much more useful for error messages like this to be printed to standard error so only data from a successful run ends up in the file. We&amp;rsquo;ll change that.</source>
          <target state="translated">Да, наше сообщение об ошибке выводится на стандартный вывод. Гораздо полезнее выводить подобные сообщения об ошибках в стандартную ошибку, чтобы в файл попадали только данные успешного запуска. Мы это изменим.</target>
        </trans-unit>
        <trans-unit id="97c00e76abaf44294d943d621bee4b664ccb6c50" translate="yes" xml:space="preserve">
          <source>Zero, one, or more attributes may be listed. Multiple attributes will each be expanded into separate attributes. For example:</source>
          <target state="translated">Может быть указан ноль,один или несколько атрибутов.Несколько атрибутов будут разбиты на отдельные атрибуты.Например:</target>
        </trans-unit>
        <trans-unit id="a3af9795f2295c7a8a6215bac54db107af616db4" translate="yes" xml:space="preserve">
          <source>Zero-sized type used to mark things that &quot;act like&quot; they own a &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">Нулевой размера типа используется для обозначения того , что &amp;laquo;действуют как&amp;raquo; они владеют &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f59177702b9970bd3419e3823969cd151c4053d7" translate="yes" xml:space="preserve">
          <source>Zero-variant Enums</source>
          <target state="translated">Перечни с нулевым вариантом</target>
        </trans-unit>
        <trans-unit id="85e772a6ec0561731f1829c317238141d891d53c" translate="yes" xml:space="preserve">
          <source>Zero-variant enums are equivalent to the &lt;a href=&quot;../types/never&quot;&gt;never type&lt;/a&gt;, but they cannot be coerced into other types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec742c8cd57ac5fee0ad76b17e91c6d76608cb3" translate="yes" xml:space="preserve">
          <source>Zip</source>
          <target state="translated">Zip</target>
        </trans-unit>
        <trans-unit id="7a310c844b5c3ca26bc69255cc0d75ae441b6843" translate="yes" xml:space="preserve">
          <source>Zip::all</source>
          <target state="translated">Zip::all</target>
        </trans-unit>
        <trans-unit id="03d4fc61138a969d2621250df6e71fdffd360059" translate="yes" xml:space="preserve">
          <source>Zip::any</source>
          <target state="translated">Zip::any</target>
        </trans-unit>
        <trans-unit id="6233ce444c406651f5225b3064ff848bae50a22e" translate="yes" xml:space="preserve">
          <source>Zip::borrow</source>
          <target state="translated">Zip::borrow</target>
        </trans-unit>
        <trans-unit id="5267cb651cf3e20907a2a97739f253d7e23ee43f" translate="yes" xml:space="preserve">
          <source>Zip::borrow_mut</source>
          <target state="translated">Zip::borrow_mut</target>
        </trans-unit>
        <trans-unit id="3c43a8142c7d99659a3badd9ef24a3361bab0578" translate="yes" xml:space="preserve">
          <source>Zip::by_ref</source>
          <target state="translated">Zip::by_ref</target>
        </trans-unit>
        <trans-unit id="3e003a22202c186d42da477c6b942e753530005e" translate="yes" xml:space="preserve">
          <source>Zip::chain</source>
          <target state="translated">Zip::chain</target>
        </trans-unit>
        <trans-unit id="7ff754927e7888b256d3739ffbc3dd0fc118871e" translate="yes" xml:space="preserve">
          <source>Zip::clone</source>
          <target state="translated">Zip::clone</target>
        </trans-unit>
        <trans-unit id="a1aeada24d11405b1e77185059074c3497d6513b" translate="yes" xml:space="preserve">
          <source>Zip::clone_from</source>
          <target state="translated">Zip::clone_from</target>
        </trans-unit>
        <trans-unit id="d21c41cfb41d5708171f6488c6d62db3fd4c16c2" translate="yes" xml:space="preserve">
          <source>Zip::clone_into</source>
          <target state="translated">Zip::clone_into</target>
        </trans-unit>
        <trans-unit id="032ee6c7a243fd8cbf95c96efa43d8b132bf2194" translate="yes" xml:space="preserve">
          <source>Zip::cloned</source>
          <target state="translated">Zip::cloned</target>
        </trans-unit>
        <trans-unit id="ffb5124a6ef89ad1b1c0482746735596f403d24a" translate="yes" xml:space="preserve">
          <source>Zip::cmp</source>
          <target state="translated">Zip::cmp</target>
        </trans-unit>
        <trans-unit id="46447ea53c47753f71cf66ca58114d53d2fdb01f" translate="yes" xml:space="preserve">
          <source>Zip::collect</source>
          <target state="translated">Zip::collect</target>
        </trans-unit>
        <trans-unit id="17533b8852fe9b8d306d8f769bc30fd306712eba" translate="yes" xml:space="preserve">
          <source>Zip::copied</source>
          <target state="translated">Zip::copied</target>
        </trans-unit>
        <trans-unit id="9af214749e1a55301d4c2f9e7260245ed45aa562" translate="yes" xml:space="preserve">
          <source>Zip::count</source>
          <target state="translated">Zip::count</target>
        </trans-unit>
        <trans-unit id="6fd7c8047a87acfb4e3792b0030e43359014cc60" translate="yes" xml:space="preserve">
          <source>Zip::cycle</source>
          <target state="translated">Zip::cycle</target>
        </trans-unit>
        <trans-unit id="d1258c7ea1aad373afa11621588a6578490222c2" translate="yes" xml:space="preserve">
          <source>Zip::enumerate</source>
          <target state="translated">Zip::enumerate</target>
        </trans-unit>
        <trans-unit id="c6d190bd6761869fb18c6ddbbd7de7af24d5db4e" translate="yes" xml:space="preserve">
          <source>Zip::eq</source>
          <target state="translated">Zip::eq</target>
        </trans-unit>
        <trans-unit id="327368bacc7d7e5a427321524fbdbc8daabf7148" translate="yes" xml:space="preserve">
          <source>Zip::filter</source>
          <target state="translated">Zip::filter</target>
        </trans-unit>
        <trans-unit id="729ebbffc443285ea1b3b9a987f5475fb2587a55" translate="yes" xml:space="preserve">
          <source>Zip::filter_map</source>
          <target state="translated">Zip::filter_map</target>
        </trans-unit>
        <trans-unit id="8f60540f721598c427a30a82645c6643aad047a3" translate="yes" xml:space="preserve">
          <source>Zip::find</source>
          <target state="translated">Zip::find</target>
        </trans-unit>
        <trans-unit id="71776cd66360ee041f56a382c9e4e7842ab8b31a" translate="yes" xml:space="preserve">
          <source>Zip::find_map</source>
          <target state="translated">Zip::find_map</target>
        </trans-unit>
        <trans-unit id="2c4b877f5f8ec6c5bf5ef8f3e39422d40a6c73be" translate="yes" xml:space="preserve">
          <source>Zip::flat_map</source>
          <target state="translated">Zip::flat_map</target>
        </trans-unit>
        <trans-unit id="724aa05ed30929683e2a861e9cf764114e9f32a4" translate="yes" xml:space="preserve">
          <source>Zip::flatten</source>
          <target state="translated">Zip::flatten</target>
        </trans-unit>
        <trans-unit id="ddcbc7de04e3187c6c1a68b0261f6bd417687b7b" translate="yes" xml:space="preserve">
          <source>Zip::fmt</source>
          <target state="translated">Zip::fmt</target>
        </trans-unit>
        <trans-unit id="f3cb6b923a3ea63c1e7ec36ab7aefa0b495552be" translate="yes" xml:space="preserve">
          <source>Zip::fold</source>
          <target state="translated">Zip::fold</target>
        </trans-unit>
        <trans-unit id="06d865697c853a97aca4285f4298e09c0a84f49e" translate="yes" xml:space="preserve">
          <source>Zip::for_each</source>
          <target state="translated">Zip::for_each</target>
        </trans-unit>
        <trans-unit id="e2cc1438498d2e497108bff98246c9ce2c4d822c" translate="yes" xml:space="preserve">
          <source>Zip::from</source>
          <target state="translated">Zip::from</target>
        </trans-unit>
        <trans-unit id="a70010555f26c82b35f35251e2fb688f0c632b5b" translate="yes" xml:space="preserve">
          <source>Zip::fuse</source>
          <target state="translated">Zip::fuse</target>
        </trans-unit>
        <trans-unit id="28bf12281d77c358a66d465298c5224b33de3343" translate="yes" xml:space="preserve">
          <source>Zip::ge</source>
          <target state="translated">Zip::ge</target>
        </trans-unit>
        <trans-unit id="630a9c9f133302648e103bbf4a010b6519ffa142" translate="yes" xml:space="preserve">
          <source>Zip::gt</source>
          <target state="translated">Zip::gt</target>
        </trans-unit>
        <trans-unit id="520400921d5297bb5c3bf46815fbc204b53894ee" translate="yes" xml:space="preserve">
          <source>Zip::inspect</source>
          <target state="translated">Zip::inspect</target>
        </trans-unit>
        <trans-unit id="82ac77946061ee097722e74f6c3974cc505dbf60" translate="yes" xml:space="preserve">
          <source>Zip::into</source>
          <target state="translated">Zip::into</target>
        </trans-unit>
        <trans-unit id="e57ecec344c31227348ec93c5f315cb21b47782f" translate="yes" xml:space="preserve">
          <source>Zip::into_iter</source>
          <target state="translated">Zip::into_iter</target>
        </trans-unit>
        <trans-unit id="8a782dd7d441daa7e415a484864b33d6fd835b39" translate="yes" xml:space="preserve">
          <source>Zip::is_empty</source>
          <target state="translated">Zip::is_empty</target>
        </trans-unit>
        <trans-unit id="971ae32344047fd5cad30c43a400ff992b97688e" translate="yes" xml:space="preserve">
          <source>Zip::is_sorted</source>
          <target state="translated">Zip::is_sorted</target>
        </trans-unit>
        <trans-unit id="36c92e0d3e7db271544d5bc8318ab5a162555e05" translate="yes" xml:space="preserve">
          <source>Zip::is_sorted_by</source>
          <target state="translated">Zip::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="7cfbc2ce82c6ed8875581847fe7898e98419dc7e" translate="yes" xml:space="preserve">
          <source>Zip::is_sorted_by_key</source>
          <target state="translated">Zip::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="bd67b991b006257a47be5522d9eeeebbcbdaf6fb" translate="yes" xml:space="preserve">
          <source>Zip::last</source>
          <target state="translated">Zip::last</target>
        </trans-unit>
        <trans-unit id="0eb7a74dbf60cabe9d6121b317b82dc0e49f47a4" translate="yes" xml:space="preserve">
          <source>Zip::le</source>
          <target state="translated">Zip::le</target>
        </trans-unit>
        <trans-unit id="1bd5ebc9431f770ea4ec4adea5ac3691a2e738cb" translate="yes" xml:space="preserve">
          <source>Zip::len</source>
          <target state="translated">Zip::len</target>
        </trans-unit>
        <trans-unit id="ee4d8494dc795467ef171b4b15538e42d02acd0c" translate="yes" xml:space="preserve">
          <source>Zip::lt</source>
          <target state="translated">Zip::lt</target>
        </trans-unit>
        <trans-unit id="935aa09d6e9b55b2d4ff210d39fc4c92e0932f51" translate="yes" xml:space="preserve">
          <source>Zip::map</source>
          <target state="translated">Zip::map</target>
        </trans-unit>
        <trans-unit id="4fc75a4fa0f693d3acebf430d51b902d6c128ef2" translate="yes" xml:space="preserve">
          <source>Zip::max</source>
          <target state="translated">Zip::max</target>
        </trans-unit>
        <trans-unit id="c631714d0ce7c489952dc9fc8d8e740a111bb9c7" translate="yes" xml:space="preserve">
          <source>Zip::max_by</source>
          <target state="translated">Zip::max_by</target>
        </trans-unit>
        <trans-unit id="0cb8b3df5c45388af7860a4f5cf26948a0bebd9f" translate="yes" xml:space="preserve">
          <source>Zip::max_by_key</source>
          <target state="translated">Zip::max_by_key</target>
        </trans-unit>
        <trans-unit id="7d6c6bc0b21a01d03786ff5a1a731f10ea0689e8" translate="yes" xml:space="preserve">
          <source>Zip::min</source>
          <target state="translated">Zip::min</target>
        </trans-unit>
        <trans-unit id="6f989cc13b0d72dfdada2cddafd23e122ba5419d" translate="yes" xml:space="preserve">
          <source>Zip::min_by</source>
          <target state="translated">Zip::min_by</target>
        </trans-unit>
        <trans-unit id="b3663dbe8a0662d62121115fa16311b00c4a9bbd" translate="yes" xml:space="preserve">
          <source>Zip::min_by_key</source>
          <target state="translated">Zip::min_by_key</target>
        </trans-unit>
        <trans-unit id="fff0a9e69cf0bdfe7fe10bbf6b363a95680a776f" translate="yes" xml:space="preserve">
          <source>Zip::ne</source>
          <target state="translated">Zip::ne</target>
        </trans-unit>
        <trans-unit id="b269708a2aafc91b31410e2aba4dcd563aff8abc" translate="yes" xml:space="preserve">
          <source>Zip::next</source>
          <target state="translated">Zip::next</target>
        </trans-unit>
        <trans-unit id="2dde4011d8eef118f9217a1cd646ccde3938c623" translate="yes" xml:space="preserve">
          <source>Zip::next_back</source>
          <target state="translated">Zip::next_back</target>
        </trans-unit>
        <trans-unit id="24442987a3f5df43d0461b66d983f1d4539d6a35" translate="yes" xml:space="preserve">
          <source>Zip::nth</source>
          <target state="translated">Zip::nth</target>
        </trans-unit>
        <trans-unit id="73aed9553dc8bb9cb23116c6657df0c66b562c98" translate="yes" xml:space="preserve">
          <source>Zip::nth_back</source>
          <target state="translated">Zip::nth_back</target>
        </trans-unit>
        <trans-unit id="f36245983fcc56a347a3bcb16591f090a529d80a" translate="yes" xml:space="preserve">
          <source>Zip::partial_cmp</source>
          <target state="translated">Zip::partial_cmp</target>
        </trans-unit>
        <trans-unit id="3ff556bb92ce21bb4f3ecff1a108f511a6035e0c" translate="yes" xml:space="preserve">
          <source>Zip::partition</source>
          <target state="translated">Zip::partition</target>
        </trans-unit>
        <trans-unit id="5bbd1ffcf3f52be9f20e67acf83cbec105fd89ca" translate="yes" xml:space="preserve">
          <source>Zip::peekable</source>
          <target state="translated">Zip::peekable</target>
        </trans-unit>
        <trans-unit id="95e2078fc3b9c4d957e34a824dc71785f132581f" translate="yes" xml:space="preserve">
          <source>Zip::position</source>
          <target state="translated">Zip::position</target>
        </trans-unit>
        <trans-unit id="7776d865a2b5dbee0629b9862610ea76ee78c525" translate="yes" xml:space="preserve">
          <source>Zip::product</source>
          <target state="translated">Zip::product</target>
        </trans-unit>
        <trans-unit id="b84a8972a030071381e753b4cae6807b09c22f7b" translate="yes" xml:space="preserve">
          <source>Zip::rev</source>
          <target state="translated">Zip::rev</target>
        </trans-unit>
        <trans-unit id="12e4a21f426826504c4afdcc98e55129f4acb97f" translate="yes" xml:space="preserve">
          <source>Zip::rfind</source>
          <target state="translated">Zip::rfind</target>
        </trans-unit>
        <trans-unit id="ae3ab773aa757f6d9052c0f919096672dc662d6a" translate="yes" xml:space="preserve">
          <source>Zip::rfold</source>
          <target state="translated">Zip::rfold</target>
        </trans-unit>
        <trans-unit id="229c97b569e06e032067298b2b9af3f4a8af914e" translate="yes" xml:space="preserve">
          <source>Zip::rposition</source>
          <target state="translated">Zip::rposition</target>
        </trans-unit>
        <trans-unit id="2c8c80468455642a4cf50cec4547978f0374e91f" translate="yes" xml:space="preserve">
          <source>Zip::scan</source>
          <target state="translated">Zip::scan</target>
        </trans-unit>
        <trans-unit id="c4e5e28de27f6ab610c979c784555d09f21a03c7" translate="yes" xml:space="preserve">
          <source>Zip::size_hint</source>
          <target state="translated">Zip::size_hint</target>
        </trans-unit>
        <trans-unit id="b61a7224e1a66ba0310da7f69834dada51d74c5e" translate="yes" xml:space="preserve">
          <source>Zip::skip</source>
          <target state="translated">Zip::skip</target>
        </trans-unit>
        <trans-unit id="6d7cee3ee52479d0c8dc612398197cc356613e14" translate="yes" xml:space="preserve">
          <source>Zip::skip_while</source>
          <target state="translated">Zip::skip_while</target>
        </trans-unit>
        <trans-unit id="6adc47e61c3b41dbda18b7af6dc9221c156688c0" translate="yes" xml:space="preserve">
          <source>Zip::step_by</source>
          <target state="translated">Zip::step_by</target>
        </trans-unit>
        <trans-unit id="f3f124cf4df9c292e48c357bc0791e9ce898c9da" translate="yes" xml:space="preserve">
          <source>Zip::sum</source>
          <target state="translated">Zip::sum</target>
        </trans-unit>
        <trans-unit id="f175b1e810f4d1819f5c88a2accd0396d41bc264" translate="yes" xml:space="preserve">
          <source>Zip::take</source>
          <target state="translated">Zip::take</target>
        </trans-unit>
        <trans-unit id="6bec4ffb892feee169a8e6273f7a6996d7e89238" translate="yes" xml:space="preserve">
          <source>Zip::take_while</source>
          <target state="translated">Zip::take_while</target>
        </trans-unit>
        <trans-unit id="4ea52f182d1900dfbf8091ff783deb8f667d41df" translate="yes" xml:space="preserve">
          <source>Zip::to_owned</source>
          <target state="translated">Zip::to_owned</target>
        </trans-unit>
        <trans-unit id="9933331d7f68de7c2c03f29dae0bf094cb9138d5" translate="yes" xml:space="preserve">
          <source>Zip::try_fold</source>
          <target state="translated">Zip::try_fold</target>
        </trans-unit>
        <trans-unit id="f235a4d9ec8e42f4d51bd96af592c13850f64dc6" translate="yes" xml:space="preserve">
          <source>Zip::try_for_each</source>
          <target state="translated">Zip::try_for_each</target>
        </trans-unit>
        <trans-unit id="7decbd26334531bcda455c16074134e8d73a6700" translate="yes" xml:space="preserve">
          <source>Zip::try_from</source>
          <target state="translated">Zip::try_from</target>
        </trans-unit>
        <trans-unit id="c5141248eb9fe16e09f783e1f020e222a79b8e48" translate="yes" xml:space="preserve">
          <source>Zip::try_into</source>
          <target state="translated">Zip::try_into</target>
        </trans-unit>
        <trans-unit id="d18612b55ec96bf2dfc75a2645b54d52c771d532" translate="yes" xml:space="preserve">
          <source>Zip::try_rfold</source>
          <target state="translated">Zip::try_rfold</target>
        </trans-unit>
        <trans-unit id="11955da5a60532770e3df7376518b35df5e367e1" translate="yes" xml:space="preserve">
          <source>Zip::type_id</source>
          <target state="translated">Zip::type_id</target>
        </trans-unit>
        <trans-unit id="aaa9d97a6e46bd8d81c87c6151407deae1158605" translate="yes" xml:space="preserve">
          <source>Zip::unzip</source>
          <target state="translated">Zip::unzip</target>
        </trans-unit>
        <trans-unit id="53d5d49f7575f97ebc48e3c3987fe4691c11c51e" translate="yes" xml:space="preserve">
          <source>Zip::zip</source>
          <target state="translated">Zip::zip</target>
        </trans-unit>
        <trans-unit id="41f114846a1d6821e24b35f0e7f37d2dafcff78e" translate="yes" xml:space="preserve">
          <source>Zips &lt;code&gt;self&lt;/code&gt; and another &lt;code&gt;Option&lt;/code&gt; with function &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790e3bef364ceba27adfb8f85bf2916869aecba0" translate="yes" xml:space="preserve">
          <source>Zips &lt;code&gt;self&lt;/code&gt; with another &lt;code&gt;Option&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dadfbfb45cf2eb517d02044647fd90c3b66fdbb" translate="yes" xml:space="preserve">
          <source>[ - ]</source>
          <target state="translated">[-]</target>
        </trans-unit>
        <trans-unit id="cdcd5c9a3a475f2298b5ee3f4258f8207ba10879" translate="yes" xml:space="preserve">
          <source>[ ]</source>
          <target state="translated">[]</target>
        </trans-unit>
        <trans-unit id="321ed645be3a2ec568d21329accfe40f79d438c4" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;Box&amp;lt;U&amp;gt;&lt;/code&gt;]</source>
          <target state="translated">[&lt;code&gt;Box&amp;lt;U&amp;gt;&lt;/code&gt;]</target>
        </trans-unit>
        <trans-unit id="6c087345d1421bb3092531be87dbc44e9f72787d" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;Eq&lt;/code&gt;] and [&lt;code&gt;PartialEq&lt;/code&gt;] are traits that allow you to define total and partial equality between values, respectively. Implementing them overloads the &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; operators.</source>
          <target state="translated">[ &lt;code&gt;Eq&lt;/code&gt; ] и [ &lt;code&gt;PartialEq&lt;/code&gt; ] - это признаки, которые позволяют вам определять полное и частичное равенство между значениями соответственно. Их реализация перегружает операторы &lt;code&gt;==&lt;/code&gt; и &lt;code&gt;!=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87dc01ea83dc45f7312a127b799a93104629d350" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;Ord&lt;/code&gt;] and [&lt;code&gt;PartialOrd&lt;/code&gt;] are traits that allow you to define total and partial orderings between values, respectively. Implementing them overloads the &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;gt;=&lt;/code&gt; operators.</source>
          <target state="translated">[ &lt;code&gt;Ord&lt;/code&gt; ] и [ &lt;code&gt;PartialOrd&lt;/code&gt; ] - это черты, которые позволяют определять полное и частичное упорядочение значений соответственно. Их реализация приводит к перегрузке операторов &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;gt;=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59c6d34ccc21d3aed85e642e6bb9ec09027bb697" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;Ordering&lt;/code&gt;][cmp::Ordering] is an enum returned by the main functions of [&lt;code&gt;Ord&lt;/code&gt;] and [&lt;code&gt;PartialOrd&lt;/code&gt;], and describes an ordering.</source>
          <target state="translated">[ &lt;code&gt;Ordering&lt;/code&gt; ] [cmp :: Ordering] - это перечисление, возвращаемое основными функциями [ &lt;code&gt;Ord&lt;/code&gt; ] и [ &lt;code&gt;PartialOrd&lt;/code&gt; ], и описывает порядок.</target>
        </trans-unit>
        <trans-unit id="c0258c5c3ce0feb2e34b84e23d6638fcefb6dd15" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;Reverse&lt;/code&gt;][cmp::Reverse] is a struct that allows you to easily reverse an ordering.</source>
          <target state="translated">[ &lt;code&gt;Reverse&lt;/code&gt; ] [cmp :: Reverse] - это структура, которая позволяет вам легко менять порядок следования.</target>
        </trans-unit>
        <trans-unit id="7d42a174cd00b8f538a7dbad8cfaf776a3047cf8" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;Some(t)&lt;/code&gt;] if &lt;code&gt;predicate&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; (where &lt;code&gt;t&lt;/code&gt; is the wrapped value), and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840612b717277518665b3fd424e0a5f393324bd8" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;a&lt;/code&gt;-&lt;code&gt;z&lt;/code&gt;&lt;code&gt;A&lt;/code&gt;-&lt;code&gt;Z&lt;/code&gt;] [&lt;code&gt;a&lt;/code&gt;-&lt;code&gt;z&lt;/code&gt;&lt;code&gt;A&lt;/code&gt;-&lt;code&gt;Z&lt;/code&gt;&lt;code&gt;0&lt;/code&gt;-&lt;code&gt;9&lt;/code&gt;&lt;code&gt;_&lt;/code&gt;]&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">[ &lt;code&gt;a&lt;/code&gt; - &lt;code&gt;z&lt;/code&gt; &lt;code&gt;A&lt;/code&gt; - &lt;code&gt;Z&lt;/code&gt; ] [ &lt;code&gt;a&lt;/code&gt; - &lt;code&gt;z&lt;/code&gt; &lt;code&gt;A&lt;/code&gt; - &lt;code&gt;Z&lt;/code&gt; &lt;code&gt;0&lt;/code&gt; - &lt;code&gt;9&lt;/code&gt; &lt;code&gt;_&lt;/code&gt; ] &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="5316fd26c1e27555ff577c62757ff0bc7be48b78" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;a&lt;/code&gt;-&lt;code&gt;z&lt;/code&gt;]</source>
          <target state="translated">[&lt;code&gt;a&lt;/code&gt;-&lt;code&gt;z&lt;/code&gt;]</target>
        </trans-unit>
        <trans-unit id="5797cdf0352e4f4b04a71322ef5c8a9f3ec2ee7d" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;b&lt;/code&gt;&lt;code&gt;B&lt;/code&gt;]</source>
          <target state="translated">[&lt;code&gt;b&lt;/code&gt;&lt;code&gt;B&lt;/code&gt;]</target>
        </trans-unit>
        <trans-unit id="667d358a8d4f23753abd06a643d1602bc2a2b481" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;max&lt;/code&gt;][cmp::max] and [&lt;code&gt;min&lt;/code&gt;][cmp::min] are functions that build off of [&lt;code&gt;Ord&lt;/code&gt;] and allow you to find the maximum or minimum of two values.</source>
          <target state="translated">[ &lt;code&gt;max&lt;/code&gt; ] [cmp :: max] и [ &lt;code&gt;min&lt;/code&gt; ] [cmp :: min] - это функции, которые основаны на [ &lt;code&gt;Ord&lt;/code&gt; ] и позволяют вам найти максимальное или минимальное из двух значений.</target>
        </trans-unit>
        <trans-unit id="c08f412c9f61e3104ccc4738ee41836696068078" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;num::NonZero*&lt;/code&gt;]</source>
          <target state="translated">[&lt;code&gt;num::NonZero*&lt;/code&gt;]</target>
        </trans-unit>
        <trans-unit id="5e38cd838cc931a5a9cc66b239d581fe5231ada8" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;ptr::NonNull&amp;lt;U&amp;gt;&lt;/code&gt;]</source>
          <target state="translated">[&lt;code&gt;ptr::NonNull&amp;lt;U&amp;gt;&lt;/code&gt;]</target>
        </trans-unit>
        <trans-unit id="798cde61360d58687a5da27eadb8538f4cc5b282" translate="yes" xml:space="preserve">
          <source>\n, \r, \t, \0</source>
          <target state="translated">\ п, \ г, \ т, \ 0</target>
        </trans-unit>
        <trans-unit id="fc9847dcc99e708ce77a85aa95896c79139e7dfe" translate="yes" xml:space="preserve">
          <source>\x</source>
          <target state="translated">\x</target>
        </trans-unit>
        <trans-unit id="6d36ccdf08a0dfb8964c565282439249549908d2" translate="yes" xml:space="preserve">
          <source>__wasi_clock_time_get (Monotonic Clock)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0554d748d7c0e25a52e162e2e3e659f8bcc815fd" translate="yes" xml:space="preserve">
          <source>__wasi_clock_time_get (Realtime Clock)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf0173b29d9268ef222576f6f78fb410d2d405c" translate="yes" xml:space="preserve">
          <source>`.</source>
          <target state="translated">`.</target>
        </trans-unit>
        <trans-unit id="a1cee21d6e0f739834cc58a3e28c4fd3ad87bed5" translate="yes" xml:space="preserve">
          <source>a - The index of the first element</source>
          <target state="translated">a-Индекс первого элемента</target>
        </trans-unit>
        <trans-unit id="7f2b91bd2db922c99eb8ba7424056a1695b01196" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;../../book/ch17-02-trait-objects&quot;&gt;trait object&lt;/a&gt;, then the vtable part of the pointer must point to a valid vtable for the type &lt;code&gt;T&lt;/code&gt; acquired by an unsizing coersion, and the size of the &lt;em&gt;entire value&lt;/em&gt; (dynamic tail length + statically sized prefix) must fit in &lt;code&gt;isize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de66432c2f46eefe18428079e7f995efd458cbb" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;../primitive.slice&quot;&gt;slice&lt;/a&gt;, then the length of the slice tail must be an intialized integer, and the size of the &lt;em&gt;entire value&lt;/em&gt; (dynamic tail length + statically sized prefix) must fit in &lt;code&gt;isize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a916bcb4b51c724a0692ff713eb19178505c66" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;repr(C)&lt;/code&gt; union of &lt;code&gt;repr(C)&lt;/code&gt; structs for the fields of each variant that had them (&quot;the payload&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e6d7fbea58b50d777fdaf953fb79ab65523bac" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;repr(C)&lt;/code&gt; version of the enum with all fields removed (&quot;the tag&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647c3306f39af3d4126ae8189f90519307be8919" translate="yes" xml:space="preserve">
          <source>a &lt;em&gt;virtual method table&lt;/em&gt;, often just called a &lt;em&gt;vtable&lt;/em&gt;, which contains, for each method of &lt;code&gt;SomeTrait&lt;/code&gt; and its &lt;a href=&quot;../items/traits#supertraits&quot;&gt;supertraits&lt;/a&gt; that &lt;code&gt;T&lt;/code&gt; implements, a pointer to &lt;code&gt;T&lt;/code&gt;'s implementation (i.e. a function pointer).</source>
          <target state="translated">&lt;em&gt;виртуальный метод таблицы&lt;/em&gt; , часто просто называют &lt;em&gt;виртуальные таблицы&lt;/em&gt; , которая содержит, для каждого метода &lt;code&gt;SomeTrait&lt;/code&gt; и его &lt;a href=&quot;../items/traits#supertraits&quot;&gt;supertraits&lt;/a&gt; что &lt;code&gt;T&lt;/code&gt; инвентарь, указатель на &lt;code&gt;T&lt;/code&gt; реализации &amp;laquo;ы (т.е. указатель на функцию).</target>
        </trans-unit>
        <trans-unit id="ed9cf402e42cb4b61cf6aa833c64fa3ed260a2d6" translate="yes" xml:space="preserve">
          <source>a lower-bound on &lt;code&gt;use_max&lt;/code&gt; can be safely approximated by a call to &lt;code&gt;usable_size&lt;/code&gt;.</source>
          <target state="translated">нижнюю границу &lt;code&gt;use_max&lt;/code&gt; можно безопасно аппроксимировать вызовом &lt;code&gt;usable_size&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf56d6a6edc4dd79be4c7f8bddf8f05c5e95f2d7" translate="yes" xml:space="preserve">
          <source>a pointer to an instance of a type &lt;code&gt;T&lt;/code&gt; that implements &lt;code&gt;SomeTrait&lt;/code&gt;</source>
          <target state="translated">указатель на экземпляр типа &lt;code&gt;T&lt;/code&gt; , который реализует &lt;code&gt;SomeTrait&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4f6406e4862ad4999a818508e77e80d03f4f0c6" translate="yes" xml:space="preserve">
          <source>a single field with non-zero size, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f331cb1a95831c42b2c4faeff2983aef85e26a" translate="yes" xml:space="preserve">
          <source>a to b repetitions of x</source>
          <target state="translated">a до b повторения x</target>
        </trans-unit>
        <trans-unit id="1c51b05b70b3433dc55847cb345257c6b1f51a6b" translate="yes" xml:space="preserve">
          <source>a.b.c.d becomes ::a.b.c.d</source>
          <target state="translated">a.b.c.d.становится ::a.b.c.d.</target>
        </trans-unit>
        <trans-unit id="47b2782b7a9f65de5ea3233ec8694e06dc0fda08" translate="yes" xml:space="preserve">
          <source>a.b.c.d becomes ::ffff:a.b.c.d</source>
          <target state="translated">a.b.c.d.становится::ffff:a.b.c.d.</target>
        </trans-unit>
        <trans-unit id="07523927973c128520eb9b8598bda2ce98a37579" translate="yes" xml:space="preserve">
          <source>aarch64</source>
          <target state="translated">aarch64</target>
        </trans-unit>
        <trans-unit id="b61646f016483b318b49a910668a966b6ce09ede" translate="yes" xml:space="preserve">
          <source>abort</source>
          <target state="translated">abort</target>
        </trans-unit>
        <trans-unit id="782fd1504901e4fed3c082d147dd6f71e84d5e1a" translate="yes" xml:space="preserve">
          <source>abs_sub</source>
          <target state="translated">abs_sub</target>
        </trans-unit>
        <trans-unit id="5e942a2261672f81ad3519b878a9265eb44fdeba" translate="yes" xml:space="preserve">
          <source>acc</source>
          <target state="translated">acc</target>
        </trans-unit>
        <trans-unit id="9c8b74630568535e88482861294374d8249be802" translate="yes" xml:space="preserve">
          <source>add_assign</source>
          <target state="translated">add_assign</target>
        </trans-unit>
        <trans-unit id="16f4abebb856c512808647f8e82243a474a2f91d" translate="yes" xml:space="preserve">
          <source>add_one</source>
          <target state="translated">add_one</target>
        </trans-unit>
        <trans-unit id="755764ecd42eaa6a0fc8ddfe961aafb684f488d9" translate="yes" xml:space="preserve">
          <source>add_usize</source>
          <target state="translated">add_usize</target>
        </trans-unit>
        <trans-unit id="8d385b76f77849563dbd2cda6d05681c26b5b43d" translate="yes" xml:space="preserve">
          <source>add_with_overflow</source>
          <target state="translated">add_with_overflow</target>
        </trans-unit>
        <trans-unit id="5a463572d1b981e2a77872b15e955c3eb7d1b4c7" translate="yes" xml:space="preserve">
          <source>addresses reserved for future protocols (see &lt;a href=&quot;#method.is_ietf_protocol_assignment&quot;&gt;&lt;code&gt;is_ietf_protocol_assignment()&lt;/code&gt;&lt;/a&gt;, except &lt;code&gt;192.0.0.9/32&lt;/code&gt; and &lt;code&gt;192.0.0.10/32&lt;/code&gt; which are globally routable</source>
          <target state="translated">адреса, зарезервированные для будущих протоколов (см. &lt;a href=&quot;#method.is_ietf_protocol_assignment&quot;&gt; &lt;code&gt;is_ietf_protocol_assignment()&lt;/code&gt; &lt;/a&gt; , за исключением &lt;code&gt;192.0.0.9/32&lt;/code&gt; и &lt;code&gt;192.0.0.10/32&lt;/code&gt; , которые являются глобально маршрутизируемыми</target>
        </trans-unit>
        <trans-unit id="409b3d4e0a5f478be98fd2f3069d6de0e16b6390" translate="yes" xml:space="preserve">
          <source>addresses reserved for future protocols (see &lt;a href=&quot;struct.ipv4addr#method.is_ietf_protocol_assignment&quot;&gt;&lt;code&gt;Ipv4Addr::is_ietf_protocol_assignment()&lt;/code&gt;&lt;/a&gt;, except &lt;code&gt;192.0.0.9/32&lt;/code&gt; and &lt;code&gt;192.0.0.10/32&lt;/code&gt; which are globally routable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9660633f2412a0146298b33abcc1cf1dcd28b534" translate="yes" xml:space="preserve">
          <source>addresses reserved for future use (see &lt;a href=&quot;#method.is_reserved&quot;&gt;&lt;code&gt;is_reserved()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">адреса зарезервированы для будущего использования (см. &lt;a href=&quot;#method.is_reserved&quot;&gt; &lt;code&gt;is_reserved()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47085a143113716590769d77131a16fd3f81c539" translate="yes" xml:space="preserve">
          <source>addresses reserved for future use (see &lt;a href=&quot;struct.ipv4addr#method.is_reserved&quot;&gt;&lt;code&gt;Ipv4Addr::is_reserved()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="953671a24573e569fdbbac82548a708002db4d25" translate="yes" xml:space="preserve">
          <source>addresses reserved for networking devices benchmarking (see &lt;a href=&quot;#method.is_benchmarking&quot;&gt;&lt;code&gt;is_benchmarking&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">адреса, зарезервированные для тестирования сетевых устройств (см. &lt;a href=&quot;#method.is_benchmarking&quot;&gt; &lt;code&gt;is_benchmarking&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="8bcc220fff20ccae78f173639be374ce3ac69f9b" translate="yes" xml:space="preserve">
          <source>addresses reserved for networking devices benchmarking (see &lt;a href=&quot;struct.ipv4addr#method.is_benchmarking&quot;&gt;&lt;code&gt;Ipv4Addr::is_benchmarking()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5693c5e18a441f4318ebbf81dedded945498666" translate="yes" xml:space="preserve">
          <source>addresses used for documentation (see &lt;a href=&quot;#method.is_documentation&quot;&gt;&lt;code&gt;is_documentation()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">адреса, используемые для документации (см. &lt;a href=&quot;#method.is_documentation&quot;&gt; &lt;code&gt;is_documentation()&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="7e41ad4d3c2911070f3b9fd97f5c1769961b1bb0" translate="yes" xml:space="preserve">
          <source>addresses used for documentation (see &lt;a href=&quot;struct.ipv4addr#method.is_documentation&quot;&gt;&lt;code&gt;Ipv4Addr::is_documentation()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dcb342000bb87b3fc28a7b5282adcb207b55ae6" translate="yes" xml:space="preserve">
          <source>align_of</source>
          <target state="translated">align_of</target>
        </trans-unit>
        <trans-unit id="4a91d73389d47986a22fee1f008325c2fa351989" translate="yes" xml:space="preserve">
          <source>align_of_val</source>
          <target state="translated">align_of_val</target>
        </trans-unit>
        <trans-unit id="48a6f93cb24e6643f518cc5dcd2342af8ddb6f65" translate="yes" xml:space="preserve">
          <source>align_offset</source>
          <target state="translated">align_offset</target>
        </trans-unit>
        <trans-unit id="8fd9650b13d1ce9bee4a58170bb608a95b2071dc" translate="yes" xml:space="preserve">
          <source>align_to</source>
          <target state="translated">align_to</target>
        </trans-unit>
        <trans-unit id="fe9b130c16dddfa6ab27f685be9693f1dc39c95e" translate="yes" xml:space="preserve">
          <source>align_to_mut</source>
          <target state="translated">align_to_mut</target>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="translated">all</target>
        </trans-unit>
        <trans-unit id="8188b14a369cc678029ffe3cd259baf48dbf1fcf" translate="yes" xml:space="preserve">
          <source>all of the parameters being passed to the trait (if there are any) are also foreign.</source>
          <target state="translated">Все параметры,передаваемые в трейт (если таковые имеются),также являются посторонними.</target>
        </trans-unit>
        <trans-unit id="acaab3b723a4d70b19f7b4e34895a97f703f7ab8" translate="yes" xml:space="preserve">
          <source>alloc</source>
          <target state="translated">alloc</target>
        </trans-unit>
        <trans-unit id="3713d3e4247c1756e011831d31e7fb3ce237ec16" translate="yes" xml:space="preserve">
          <source>alloc::Alloc</source>
          <target state="translated">alloc::Alloc</target>
        </trans-unit>
        <trans-unit id="8d87eec0a803461d44fe8f6cc6db8702bbaa76c6" translate="yes" xml:space="preserve">
          <source>alloc::AllocErr</source>
          <target state="translated">alloc::AllocErr</target>
        </trans-unit>
        <trans-unit id="e3d958132185dea4c5a058934b74c1c13c3ec5a1" translate="yes" xml:space="preserve">
          <source>alloc::AllocError</source>
          <target state="translated">alloc::AllocError</target>
        </trans-unit>
        <trans-unit id="b96a879e87b2e14dd50130bfd1606262665851df" translate="yes" xml:space="preserve">
          <source>alloc::AllocRef</source>
          <target state="translated">alloc::AllocRef</target>
        </trans-unit>
        <trans-unit id="4cce4392d71abbffbbdc08a7792b3cceda750be6" translate="yes" xml:space="preserve">
          <source>alloc::CannotReallocInPlace</source>
          <target state="translated">alloc::CannotReallocInPlace</target>
        </trans-unit>
        <trans-unit id="04ee81a211afeff3b00e1961369036f4df16f1fa" translate="yes" xml:space="preserve">
          <source>alloc::Excess</source>
          <target state="translated">alloc::Excess</target>
        </trans-unit>
        <trans-unit id="72e441992369146b5c630c320b71ae7644725fb6" translate="yes" xml:space="preserve">
          <source>alloc::Global</source>
          <target state="translated">alloc::Global</target>
        </trans-unit>
        <trans-unit id="2da52f8d041f4b6b6d7a5b78c2fe8b0b115d9adf" translate="yes" xml:space="preserve">
          <source>alloc::GlobalAlloc</source>
          <target state="translated">alloc::GlobalAlloc</target>
        </trans-unit>
        <trans-unit id="81ea5ce016a204638e49fe774145862d34f7f7b3" translate="yes" xml:space="preserve">
          <source>alloc::Layout</source>
          <target state="translated">alloc::Layout</target>
        </trans-unit>
        <trans-unit id="f9d53658fdbb711766951d7de7bb887d5a628901" translate="yes" xml:space="preserve">
          <source>alloc::LayoutErr</source>
          <target state="translated">alloc::LayoutErr</target>
        </trans-unit>
        <trans-unit id="9691e5f9c2fc33f4bf70bb1a4b99f5d5ba5256be" translate="yes" xml:space="preserve">
          <source>alloc::System</source>
          <target state="translated">alloc::System</target>
        </trans-unit>
        <trans-unit id="ebacf0d42a5ef2f044e83d33a2012a0e9e3eb6fa" translate="yes" xml:space="preserve">
          <source>alloc::alloc</source>
          <target state="translated">alloc::alloc</target>
        </trans-unit>
        <trans-unit id="fe17f70a9e00f141a863343a38d8f3374fea879b" translate="yes" xml:space="preserve">
          <source>alloc::alloc_zeroed</source>
          <target state="translated">alloc::alloc_zeroed</target>
        </trans-unit>
        <trans-unit id="5ee897a217667f07dd12b0fd9f87ec180eb24201" translate="yes" xml:space="preserve">
          <source>alloc::dealloc</source>
          <target state="translated">alloc::dealloc</target>
        </trans-unit>
        <trans-unit id="53acb68d436478455357d483a3c6669e6275729b" translate="yes" xml:space="preserve">
          <source>alloc::handle_alloc_error</source>
          <target state="translated">alloc::handle_alloc_error</target>
        </trans-unit>
        <trans-unit id="52dccb1813c0a4bca67362ff318dae25873cbe68" translate="yes" xml:space="preserve">
          <source>alloc::realloc</source>
          <target state="translated">alloc::realloc</target>
        </trans-unit>
        <trans-unit id="09693d6a818612835d2dd30b1e3aacf597b5a024" translate="yes" xml:space="preserve">
          <source>alloc::set_alloc_error_hook</source>
          <target state="translated">alloc::set_alloc_error_hook</target>
        </trans-unit>
        <trans-unit id="6238019fc16e586c11cd68e7caef6f0063729da5" translate="yes" xml:space="preserve">
          <source>alloc::take_alloc_error_hook</source>
          <target state="translated">alloc::take_alloc_error_hook</target>
        </trans-unit>
        <trans-unit id="83c53ed88121cf9d87a33fa7d50a508abfd10904" translate="yes" xml:space="preserve">
          <source>alloc_zeroed</source>
          <target state="translated">alloc_zeroed</target>
        </trans-unit>
        <trans-unit id="6656018ac96d0295d887ff2893ba9af66ae16af2" translate="yes" xml:space="preserve">
          <source>always</source>
          <target state="translated">always</target>
        </trans-unit>
        <trans-unit id="5ee4a4c259250300b0576308807a828c510a1edc" translate="yes" xml:space="preserve">
          <source>an (unstable) &lt;a href=&quot;https://doc.rust-lang.org/unstable-book/language-features/extern-types.html&quot;&gt;extern type&lt;/a&gt;, then this function is always safe to call, but may panic or otherwise return the wrong value, as the extern type's layout is not known. This is the same behavior as &lt;a href=&quot;struct.layout#method.for_value&quot;&gt;&lt;code&gt;Layout::for_value&lt;/code&gt;&lt;/a&gt; on a reference to an extern type tail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981163b46efc6d8075aa470b37bda62ed3a3fefc" translate="yes" xml:space="preserve">
          <source>and could then be used to compare a &lt;code&gt;&amp;amp;'a T&lt;/code&gt; with any lifetime to an &lt;code&gt;i32&lt;/code&gt;.</source>
          <target state="translated">и затем может быть использован для сравнения a &lt;code&gt;&amp;amp;'a T&lt;/code&gt; с любым временем жизни &lt;code&gt;i32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="750052fe8a8bd846ac8928c5e6db02c6adcc76b1" translate="yes" xml:space="preserve">
          <source>and now when you call &lt;code&gt;.is_null()&lt;/code&gt; on a raw pointer to &lt;code&gt;Foo&lt;/code&gt;, there's ambiguity.</source>
          <target state="translated">и теперь, когда вы вызываете &lt;code&gt;.is_null()&lt;/code&gt; для необработанного указателя на &lt;code&gt;Foo&lt;/code&gt; , возникает двусмысленность.</target>
        </trans-unit>
        <trans-unit id="83e43f9b49b3ffcd306011c0c115dce47d2c5f24" translate="yes" xml:space="preserve">
          <source>and on numeric bindings without an identified concrete type:</source>
          <target state="translated">и на числовых связках без определенного типа бетона:</target>
        </trans-unit>
        <trans-unit id="5c508147b589249a6b3b7c430ecd3d94b45db749" translate="yes" xml:space="preserve">
          <source>and where &lt;code&gt;T&lt;/code&gt; can obtained from &lt;code&gt;U&lt;/code&gt; by &lt;a href=&quot;type-coercions#unsized-coercions&quot;&gt;unsized coercion&lt;/a&gt;.</source>
          <target state="translated">и где &lt;code&gt;T&lt;/code&gt; может быть получено из &lt;code&gt;U&lt;/code&gt; с &lt;a href=&quot;type-coercions#unsized-coercions&quot;&gt;помощью принуждения без размера&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a162b6af865ce3b6a44b6c4f3fb8314a951a0dba" translate="yes" xml:space="preserve">
          <source>and where &lt;code&gt;U&lt;/code&gt; can be obtained from &lt;code&gt;T&lt;/code&gt; by &lt;a href=&quot;#unsized-coercions&quot;&gt;unsized coercion&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4bbe5b7a4c1eb55652965aee885dd59bd2ee7f4" translate="yes" xml:space="preserve">
          <source>android</source>
          <target state="translated">android</target>
        </trans-unit>
        <trans-unit id="862f53b167b146a23f5518e5145f6a6245bb02b6" translate="yes" xml:space="preserve">
          <source>antisymmetry: if &lt;code&gt;a &amp;lt; b&lt;/code&gt; then &lt;code&gt;!(a &amp;gt; b)&lt;/code&gt;, as well as &lt;code&gt;a &amp;gt; b&lt;/code&gt; implying &lt;code&gt;!(a &amp;lt; b)&lt;/code&gt;; and</source>
          <target state="translated">антисимметрия: если &lt;code&gt;a &amp;lt; b&lt;/code&gt; то &lt;code&gt;!(a &amp;gt; b)&lt;/code&gt; , а также &lt;code&gt;a &amp;gt; b&lt;/code&gt; подразумевая &lt;code&gt;!(a &amp;lt; b)&lt;/code&gt; ; и</target>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="translated">any</target>
        </trans-unit>
        <trans-unit id="763d77ccdd4209ee4abc2cd736a3e6b4f2ff3956" translate="yes" xml:space="preserve">
          <source>any char in slice is contained in string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b697abfd844a82eac6e96011ff819ea9961398de" translate="yes" xml:space="preserve">
          <source>any number of fields with size 0 and alignment 1 (e.g. &lt;a href=&quot;special-types-and-traits#phantomdatat&quot;&gt;&lt;code&gt;PhantomData&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcaadfb6866dc10bfd8f8a29b0f4461b0ed50edb" translate="yes" xml:space="preserve">
          <source>any::Any</source>
          <target state="translated">any::Any</target>
        </trans-unit>
        <trans-unit id="e62666f13dea1258f065ef147656435c17f6f877" translate="yes" xml:space="preserve">
          <source>any::TypeId</source>
          <target state="translated">any::TypeId</target>
        </trans-unit>
        <trans-unit id="9efefba80a8eb62a66c83d6be942a59714f9d5fe" translate="yes" xml:space="preserve">
          <source>any::type_name</source>
          <target state="translated">any::type_name</target>
        </trans-unit>
        <trans-unit id="a937ef30499a0cf5ebf0a8cbfebfb286f975aebb" translate="yes" xml:space="preserve">
          <source>any::type_name_of_val</source>
          <target state="translated">any::type_name_of_val</target>
        </trans-unit>
        <trans-unit id="db43bff34c78044870bc6b1ae2aa16902bb1bb8a" translate="yes" xml:space="preserve">
          <source>append</source>
          <target state="translated">append</target>
        </trans-unit>
        <trans-unit id="5a36f117812e69f1a5ab7e32a43b6e3db24618b2" translate="yes" xml:space="preserve">
          <source>arch</source>
          <target state="translated">arch</target>
        </trans-unit>
        <trans-unit id="6869438e303080030907368fe4c6f5f0725e38c3" translate="yes" xml:space="preserve">
          <source>are currently twice the size of the size of &lt;code&gt;usize&lt;/code&gt; and have the same alignment.</source>
          <target state="translated">в настоящее время в два раза больше размера &lt;code&gt;usize&lt;/code&gt; и имеют такое же выравнивание.</target>
        </trans-unit>
        <trans-unit id="34b7b49d8b2d0d7a2ec6f158126a2d20e7c98feb" translate="yes" xml:space="preserve">
          <source>are sized but have twice the size of pointers to sized types</source>
          <target state="translated">имеют размер,но имеют в два раза больший размер указателей на размерные типы.</target>
        </trans-unit>
        <trans-unit id="3030e728f154bf51419109efb93b6b8aeec9a976" translate="yes" xml:space="preserve">
          <source>args</source>
          <target state="translated">args</target>
        </trans-unit>
        <trans-unit id="48778bb6c00326b7e6a0d1662f8a94bbc37c9546" translate="yes" xml:space="preserve">
          <source>args_os</source>
          <target state="translated">args_os</target>
        </trans-unit>
        <trans-unit id="045d233d93fbbdefab87c28c0ad65f24ce0f1c7d" translate="yes" xml:space="preserve">
          <source>arith_offset</source>
          <target state="translated">arith_offset</target>
        </trans-unit>
        <trans-unit id="ed945d6b996ff45657c9dc7772143a932c322b66" translate="yes" xml:space="preserve">
          <source>arm</source>
          <target state="translated">arm</target>
        </trans-unit>
        <trans-unit id="19edc1210777ba4d45049c29280d9cc5e1064c25" translate="yes" xml:space="preserve">
          <source>array</source>
          <target state="translated">array</target>
        </trans-unit>
        <trans-unit id="e5ce86c664fd0b87557de3c6117a6d06a224c624" translate="yes" xml:space="preserve">
          <source>array::FixedSizeArray</source>
          <target state="translated">array::FixedSizeArray</target>
        </trans-unit>
        <trans-unit id="bdbfcd958a14c005afa6977c6a738cfad21fc9c2" translate="yes" xml:space="preserve">
          <source>array::IntoIter</source>
          <target state="translated">array::IntoIter</target>
        </trans-unit>
        <trans-unit id="1f643f3f224ce56cf13979ca408c876ab93bb124" translate="yes" xml:space="preserve">
          <source>array::TryFromSliceError</source>
          <target state="translated">array::TryFromSliceError</target>
        </trans-unit>
        <trans-unit id="337e4dae5b9141253751d91127b4ec5b92f43785" translate="yes" xml:space="preserve">
          <source>array::from_mut</source>
          <target state="translated">array::from_mut</target>
        </trans-unit>
        <trans-unit id="fb341a0a5656281f758a3c46a45419f5d2cdad54" translate="yes" xml:space="preserve">
          <source>array::from_ref</source>
          <target state="translated">array::from_ref</target>
        </trans-unit>
        <trans-unit id="df211ccdd94a63e0bcb9e6ae427a249484a49d60" translate="yes" xml:space="preserve">
          <source>as</source>
          <target state="translated">as</target>
        </trans-unit>
        <trans-unit id="badc4a91c98d928559c19cee96643cd42e973bcf" translate="yes" xml:space="preserve">
          <source>as the last field, this makes the struct itself a</source>
          <target state="translated">как последнее поле,это делает саму структуру</target>
        </trans-unit>
        <trans-unit id="c798375d2a33b0ae1748ea9e4ac742d81db73080" translate="yes" xml:space="preserve">
          <source>as_bytes</source>
          <target state="translated">as_bytes</target>
        </trans-unit>
        <trans-unit id="1f533defd46c67e831964c1e616953a28424b7f5" translate="yes" xml:space="preserve">
          <source>as_bytes_mut</source>
          <target state="translated">as_bytes_mut</target>
        </trans-unit>
        <trans-unit id="52da7662237f69daa7d7a65b736976bff9628709" translate="yes" xml:space="preserve">
          <source>as_mut</source>
          <target state="translated">as_mut</target>
        </trans-unit>
        <trans-unit id="d10eacb9b05c486f78af4f450aa7999a755d7f47" translate="yes" xml:space="preserve">
          <source>as_mut_ptr</source>
          <target state="translated">as_mut_ptr</target>
        </trans-unit>
        <trans-unit id="1424c5f52b2a89c2260a4530461f91fd04cf8846" translate="yes" xml:space="preserve">
          <source>as_ptr</source>
          <target state="translated">as_ptr</target>
        </trans-unit>
        <trans-unit id="7dc5622cc05f24a7d3db4a0f7d0923ecf2e16317" translate="yes" xml:space="preserve">
          <source>as_ref</source>
          <target state="translated">as_ref</target>
        </trans-unit>
        <trans-unit id="51c066b36ea8b32076964c766f8a0324ca4eb4b9" translate="yes" xml:space="preserve">
          <source>ascii</source>
          <target state="translated">ascii</target>
        </trans-unit>
        <trans-unit id="8ff1681a25b20c801bab8d73419337ee027db723" translate="yes" xml:space="preserve">
          <source>ascii::AsciiExt</source>
          <target state="translated">ascii::AsciiExt</target>
        </trans-unit>
        <trans-unit id="631e6859a5283c4e1135cc6f0054124d31b03481" translate="yes" xml:space="preserve">
          <source>ascii::EscapeDefault</source>
          <target state="translated">ascii::EscapeDefault</target>
        </trans-unit>
        <trans-unit id="e39cf84b9e88706e01aef55a1ee0fd10c8c53f5c" translate="yes" xml:space="preserve">
          <source>ascii::escape_default</source>
          <target state="translated">ascii::escape_default</target>
        </trans-unit>
        <trans-unit id="2445be8241aabd34b47e21a9f3208c3878495b50" translate="yes" xml:space="preserve">
          <source>asm</source>
          <target state="translated">asm</target>
        </trans-unit>
        <trans-unit id="64b5daad5073849378993ba34e058d7008293097" translate="yes" xml:space="preserve">
          <source>assert</source>
          <target state="translated">assert</target>
        </trans-unit>
        <trans-unit id="3840580c19afa4bd03926d19f4f003660cb2b1b8" translate="yes" xml:space="preserve">
          <source>assert_eq</source>
          <target state="translated">assert_eq</target>
        </trans-unit>
        <trans-unit id="a328184c40212d1416d200e858e5d60641623ea2" translate="yes" xml:space="preserve">
          <source>assert_ne</source>
          <target state="translated">assert_ne</target>
        </trans-unit>
        <trans-unit id="95886eb5950d0e3e0f1cf8b99cae0bcda0b8b6bd" translate="yes" xml:space="preserve">
          <source>assignment expressions</source>
          <target state="translated">выражения назначений</target>
        </trans-unit>
        <trans-unit id="241954bcee907f91569ccd514a342043fd26e596" translate="yes" xml:space="preserve">
          <source>assignment operator expressions</source>
          <target state="translated">выражения оператора распределения</target>
        </trans-unit>
        <trans-unit id="dc4d2630d28bd6a59b5c16b34c34459847319470" translate="yes" xml:space="preserve">
          <source>associated const</source>
          <target state="translated">ассоциированный констебль</target>
        </trans-unit>
        <trans-unit id="0cbaf578cca42685324c8949ca6d772281db3705" translate="yes" xml:space="preserve">
          <source>associated constants</source>
          <target state="translated">связанные константы</target>
        </trans-unit>
        <trans-unit id="661e458eab49bd0ad82cd227b289bfba18305cab" translate="yes" xml:space="preserve">
          <source>assume</source>
          <target state="translated">assume</target>
        </trans-unit>
        <trans-unit id="fa1755b94391fc7198ecefba153d000ea7c83808" translate="yes" xml:space="preserve">
          <source>asymmetry: if &lt;code&gt;a &amp;lt; b&lt;/code&gt; then &lt;code&gt;!(a &amp;gt; b)&lt;/code&gt;, as well as &lt;code&gt;a &amp;gt; b&lt;/code&gt; implying &lt;code&gt;!(a &amp;lt; b)&lt;/code&gt;; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e04b33fdd186ab6bd2deace04ea6b551b9bd4a" translate="yes" xml:space="preserve">
          <source>async</source>
          <target state="translated">async</target>
        </trans-unit>
        <trans-unit id="4e91475d3fae49d1a8a60862b1dbc2d921e7d999" translate="yes" xml:space="preserve">
          <source>atomic</source>
          <target state="translated">atomic</target>
        </trans-unit>
        <trans-unit id="1034a8bcf2ad5bdd2850f2610b72cc5d8b5cacd0" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_BOOL_INIT</source>
          <target state="translated">atomic::ATOMIC_BOOL_INIT</target>
        </trans-unit>
        <trans-unit id="cb36c03949d5460f110653c4b99850e82c82d39e" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_I16_INIT</source>
          <target state="translated">atomic::ATOMIC_I16_INIT</target>
        </trans-unit>
        <trans-unit id="24de024fd396c57aa3f8d28976612731bf63ab57" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_I32_INIT</source>
          <target state="translated">atomic::ATOMIC_I32_INIT</target>
        </trans-unit>
        <trans-unit id="353641497ac3b792f0bd7c4ad7ae5317898a5f70" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_I64_INIT</source>
          <target state="translated">atomic::ATOMIC_I64_INIT</target>
        </trans-unit>
        <trans-unit id="5a761269fad3a89dc33d8f755274af9d09eff49e" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_I8_INIT</source>
          <target state="translated">atomic::ATOMIC_I8_INIT</target>
        </trans-unit>
        <trans-unit id="d03ea86ea8623584b9728ef4029482119760f5c6" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_ISIZE_INIT</source>
          <target state="translated">atomic::ATOMIC_ISIZE_INIT</target>
        </trans-unit>
        <trans-unit id="92332432ba0fbc47a06b86969d84ba4db7cafb48" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_U16_INIT</source>
          <target state="translated">atomic::ATOMIC_U16_INIT</target>
        </trans-unit>
        <trans-unit id="6c1385da3b8d9212f7c6f7026e370b634ed8ef6b" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_U32_INIT</source>
          <target state="translated">atomic::ATOMIC_U32_INIT</target>
        </trans-unit>
        <trans-unit id="8e01c88191c644638f1a52cdbfb0143307818d5c" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_U64_INIT</source>
          <target state="translated">atomic::ATOMIC_U64_INIT</target>
        </trans-unit>
        <trans-unit id="05a5c9ec17d69ac5645d8480a8ba56a3b9f60c10" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_U8_INIT</source>
          <target state="translated">atomic::ATOMIC_U8_INIT</target>
        </trans-unit>
        <trans-unit id="ba762c5512ab8a24b14de314147f8bffe57c970f" translate="yes" xml:space="preserve">
          <source>atomic::ATOMIC_USIZE_INIT</source>
          <target state="translated">atomic::ATOMIC_USIZE_INIT</target>
        </trans-unit>
        <trans-unit id="05de1793602602f47c254dc6cdb8167dc5edc7a0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool</source>
          <target state="translated">atomic::AtomicBool</target>
        </trans-unit>
        <trans-unit id="9e447c2ab00cf39b9b1d6620d6a9fed3ea808a70" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::borrow</source>
          <target state="translated">atomic::AtomicBool::borrow</target>
        </trans-unit>
        <trans-unit id="c68ee51e8f6beb9fa67b654fcfe7ef87f8d61549" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::borrow_mut</source>
          <target state="translated">atomic::AtomicBool::borrow_mut</target>
        </trans-unit>
        <trans-unit id="bc7ece4795eca86a32c44d9b7a6d1ee964ec8b04" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::compare_and_swap</source>
          <target state="translated">atomic::AtomicBool::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="01227e5752be472ddee52522cd84b709c04bba82" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::compare_exchange</source>
          <target state="translated">atomic::AtomicBool::compare_exchange</target>
        </trans-unit>
        <trans-unit id="c51061da01ac56bfc7ef042518593dd67a5c3034" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicBool::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="9576bb081dd4bbf07787542167ea0ab69723c39b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::default</source>
          <target state="translated">atomic::AtomicBool::default</target>
        </trans-unit>
        <trans-unit id="e224b6c248d56b984f9726a5beb37a693cd1c26f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::fetch_and</source>
          <target state="translated">atomic::AtomicBool::fetch_and</target>
        </trans-unit>
        <trans-unit id="e2669df7c8a6850212a769803528a130a2b8a7c5" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::fetch_nand</source>
          <target state="translated">atomic::AtomicBool::fetch_nand</target>
        </trans-unit>
        <trans-unit id="fa0c8f48069ecf23ccd8592d95597742aa301c67" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::fetch_or</source>
          <target state="translated">atomic::AtomicBool::fetch_or</target>
        </trans-unit>
        <trans-unit id="cb1fc72f7695672c3590d6f3ac06d9ed3870d6d9" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::fetch_xor</source>
          <target state="translated">atomic::AtomicBool::fetch_xor</target>
        </trans-unit>
        <trans-unit id="8aac84ec1b2dc679800d4128137ddefa4df78ba7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::fmt</source>
          <target state="translated">atomic::AtomicBool::fmt</target>
        </trans-unit>
        <trans-unit id="8c34405c7774e5da67ee635b1e41c55c72ca251f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::from</source>
          <target state="translated">atomic::AtomicBool::from</target>
        </trans-unit>
        <trans-unit id="4f92b1b994bacbe7ba2c5bea8ef9d22028a4db02" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::get_mut</source>
          <target state="translated">atomic::AtomicBool::get_mut</target>
        </trans-unit>
        <trans-unit id="8e53a1ed715929c5c080f09402205e9d95990bd7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::into</source>
          <target state="translated">atomic::AtomicBool::into</target>
        </trans-unit>
        <trans-unit id="2749989a620ef7214d755b45f3251ac035fb4a9c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::into_inner</source>
          <target state="translated">atomic::AtomicBool::into_inner</target>
        </trans-unit>
        <trans-unit id="2efae13f5b2a0971201d319863a78cda80b7a900" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::load</source>
          <target state="translated">atomic::AtomicBool::load</target>
        </trans-unit>
        <trans-unit id="f68fd070f0f1344260dab31e9b4695338a5ba485" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::new</source>
          <target state="translated">atomic::AtomicBool::new</target>
        </trans-unit>
        <trans-unit id="1f86f68a036b612d378be870c0d9606e953e7c48" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::store</source>
          <target state="translated">atomic::AtomicBool::store</target>
        </trans-unit>
        <trans-unit id="979bcef2cc797d278750e287864a6718aa6ce759" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::swap</source>
          <target state="translated">atomic::AtomicBool::swap</target>
        </trans-unit>
        <trans-unit id="de75d37b23563f424dafec4869f7fecf9fb72e77" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::try_from</source>
          <target state="translated">atomic::AtomicBool::try_from</target>
        </trans-unit>
        <trans-unit id="8a7b63ebd2971777046807fd53d5b5991226d2b1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::try_into</source>
          <target state="translated">atomic::AtomicBool::try_into</target>
        </trans-unit>
        <trans-unit id="35b06bd23a929d5665b1b36f5dad39ad3c49d572" translate="yes" xml:space="preserve">
          <source>atomic::AtomicBool::type_id</source>
          <target state="translated">atomic::AtomicBool::type_id</target>
        </trans-unit>
        <trans-unit id="4763c7b929cba0a74bfe999658220d6a7af2729a" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16</source>
          <target state="translated">atomic::AtomicI16</target>
        </trans-unit>
        <trans-unit id="4a3407a0c208408f64fffcd651dc9e68f2678628" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::borrow</source>
          <target state="translated">atomic::AtomicI16::borrow</target>
        </trans-unit>
        <trans-unit id="7037eb7a323ec4161bf529efcb7b357a6c93f480" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::borrow_mut</source>
          <target state="translated">atomic::AtomicI16::borrow_mut</target>
        </trans-unit>
        <trans-unit id="48609070164ed4bbb83c2b159b883c68021a672f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::compare_and_swap</source>
          <target state="translated">atomic::AtomicI16::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="1fe2f96c308ef6f3b40a75646de550a13724a1f5" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::compare_exchange</source>
          <target state="translated">atomic::AtomicI16::compare_exchange</target>
        </trans-unit>
        <trans-unit id="2aa21457fb1c32f17e7367b91c794fde64f446df" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicI16::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="799632b0a2380281a16a7e6c7ba965cbe7a8dedc" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::default</source>
          <target state="translated">atomic::AtomicI16::default</target>
        </trans-unit>
        <trans-unit id="608c3938543496558fee6ae098033e7192fee777" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_add</source>
          <target state="translated">atomic::AtomicI16::fetch_add</target>
        </trans-unit>
        <trans-unit id="1accec5a63bb7e8931ef4aee6c4b1939e9e5c033" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_and</source>
          <target state="translated">atomic::AtomicI16::fetch_and</target>
        </trans-unit>
        <trans-unit id="68f7561959c96363577e1f69cf706e170b15b971" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_max</source>
          <target state="translated">atomic::AtomicI16::fetch_max</target>
        </trans-unit>
        <trans-unit id="7f6c831b7b705a65008f977164d29ea3da8c4f16" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_min</source>
          <target state="translated">atomic::AtomicI16::fetch_min</target>
        </trans-unit>
        <trans-unit id="1e319a1551d9113cfd4c8d2e7c520bd5aab85b42" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_nand</source>
          <target state="translated">atomic::AtomicI16::fetch_nand</target>
        </trans-unit>
        <trans-unit id="ac0486175db2c33d1793a4f2e5dfe7178abf81f1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_or</source>
          <target state="translated">atomic::AtomicI16::fetch_or</target>
        </trans-unit>
        <trans-unit id="065e2dcf4f6a4454eb6580ea06fa21e93009d938" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_sub</source>
          <target state="translated">atomic::AtomicI16::fetch_sub</target>
        </trans-unit>
        <trans-unit id="22fc903a12f2b17023b59c6aa62820d840711234" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_update</source>
          <target state="translated">atomic::AtomicI16::fetch_update</target>
        </trans-unit>
        <trans-unit id="36b880de08802099718d328a53bc9c940c762ff2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fetch_xor</source>
          <target state="translated">atomic::AtomicI16::fetch_xor</target>
        </trans-unit>
        <trans-unit id="b0461e75adc05e5b3f478464649401bf20bd0785" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::fmt</source>
          <target state="translated">atomic::AtomicI16::fmt</target>
        </trans-unit>
        <trans-unit id="5c68ce5e4f3872b3f6a8db280ce1f397536427b4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::from</source>
          <target state="translated">atomic::AtomicI16::from</target>
        </trans-unit>
        <trans-unit id="85d5f213c65716baa177acfed9bba6e56bc8c092" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::get_mut</source>
          <target state="translated">atomic::AtomicI16::get_mut</target>
        </trans-unit>
        <trans-unit id="5af35cdcca6e2d7eeeb0268da8d15d3ca383798a" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::into</source>
          <target state="translated">atomic::AtomicI16::into</target>
        </trans-unit>
        <trans-unit id="fd0c45f1d5385723f287e79d69083b5d78513417" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::into_inner</source>
          <target state="translated">atomic::AtomicI16::into_inner</target>
        </trans-unit>
        <trans-unit id="2a86d1845f08b1f6f9de8dab854ffd5944f281db" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::load</source>
          <target state="translated">atomic::AtomicI16::load</target>
        </trans-unit>
        <trans-unit id="a355bbe62c010a6b5ecb8cb2c7a093277b18bc4e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::new</source>
          <target state="translated">atomic::AtomicI16::new</target>
        </trans-unit>
        <trans-unit id="d00cb68b66360ce9a43e35aafe48e8ff0c2f663f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::store</source>
          <target state="translated">atomic::AtomicI16::store</target>
        </trans-unit>
        <trans-unit id="7c19cdcb8dc8c74fcc8fd3f29b46dd2c72892dda" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::swap</source>
          <target state="translated">atomic::AtomicI16::swap</target>
        </trans-unit>
        <trans-unit id="d846a4119052ce671cc1eec70756733f3c9a0b8b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::try_from</source>
          <target state="translated">atomic::AtomicI16::try_from</target>
        </trans-unit>
        <trans-unit id="f92121d1f6656512ce1c0dc89ca64a6879c2fe79" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::try_into</source>
          <target state="translated">atomic::AtomicI16::try_into</target>
        </trans-unit>
        <trans-unit id="678752fc5452c5dcb3a958ac911922fc70f1cfa1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI16::type_id</source>
          <target state="translated">atomic::AtomicI16::type_id</target>
        </trans-unit>
        <trans-unit id="25c12562a118afb89821c1149f447cbcfef85c8f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32</source>
          <target state="translated">atomic::AtomicI32</target>
        </trans-unit>
        <trans-unit id="5899c06a26c90c55944ef5323b41290afa412ede" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::borrow</source>
          <target state="translated">atomic::AtomicI32::borrow</target>
        </trans-unit>
        <trans-unit id="0966d39a9c446ced0fe44115476f4ff4766599c3" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::borrow_mut</source>
          <target state="translated">atomic::AtomicI32::borrow_mut</target>
        </trans-unit>
        <trans-unit id="13a18501ad3adf521679e888018a5454713003ce" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::compare_and_swap</source>
          <target state="translated">atomic::AtomicI32::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="ec2581f11e6f837c0e960b7825f4b082143ca0d5" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::compare_exchange</source>
          <target state="translated">atomic::AtomicI32::compare_exchange</target>
        </trans-unit>
        <trans-unit id="b36699c484284aff49f6b79fce15c99a8712bc67" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicI32::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="0cb8e46219c011f6ac55b79b5e3a3fa078b60d86" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::default</source>
          <target state="translated">atomic::AtomicI32::default</target>
        </trans-unit>
        <trans-unit id="afd4d186e6b557c1730e240a41b7f1268291a4aa" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_add</source>
          <target state="translated">atomic::AtomicI32::fetch_add</target>
        </trans-unit>
        <trans-unit id="fa601edbd25fd48775781f20f100f8f784b0802e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_and</source>
          <target state="translated">atomic::AtomicI32::fetch_and</target>
        </trans-unit>
        <trans-unit id="bc614c60229af7ecebfb79759565bf3422894c8e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_max</source>
          <target state="translated">atomic::AtomicI32::fetch_max</target>
        </trans-unit>
        <trans-unit id="64024a3f252b44a17ccb8e7c483dd5892e2dd7ec" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_min</source>
          <target state="translated">atomic::AtomicI32::fetch_min</target>
        </trans-unit>
        <trans-unit id="fa15286576c1b5b72e3632d0d8bd8be0df4a41ab" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_nand</source>
          <target state="translated">atomic::AtomicI32::fetch_nand</target>
        </trans-unit>
        <trans-unit id="c3f4e128406fee001d99a1a8910a8ae89882d264" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_or</source>
          <target state="translated">atomic::AtomicI32::fetch_or</target>
        </trans-unit>
        <trans-unit id="c25081618fbe7a3e8d18e0af84198d64a6823d90" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_sub</source>
          <target state="translated">atomic::AtomicI32::fetch_sub</target>
        </trans-unit>
        <trans-unit id="89e3a35480f5f86d305834c916dd65fb914f7794" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_update</source>
          <target state="translated">atomic::AtomicI32::fetch_update</target>
        </trans-unit>
        <trans-unit id="bddbf7266f3bf5687069b3417d75588451464303" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fetch_xor</source>
          <target state="translated">atomic::AtomicI32::fetch_xor</target>
        </trans-unit>
        <trans-unit id="9e02c9847065cfd83e89e0ef1cc2655351ab9653" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::fmt</source>
          <target state="translated">atomic::AtomicI32::fmt</target>
        </trans-unit>
        <trans-unit id="df6c50a25963dfc88ceefcd2fce2828c8f503a9d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::from</source>
          <target state="translated">atomic::AtomicI32::from</target>
        </trans-unit>
        <trans-unit id="e446b6cb394d3ef682fdf149c58edb16e1c74405" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::get_mut</source>
          <target state="translated">atomic::AtomicI32::get_mut</target>
        </trans-unit>
        <trans-unit id="5342af1fe3a9cffc7fd36eff6c10bda4ed49cc55" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::into</source>
          <target state="translated">atomic::AtomicI32::into</target>
        </trans-unit>
        <trans-unit id="53bc6a9c61b4afc9fac8c47be255368bc8b7b921" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::into_inner</source>
          <target state="translated">atomic::AtomicI32::into_inner</target>
        </trans-unit>
        <trans-unit id="9e6443bc2098fc93d0dde78516f3baf7576d6779" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::load</source>
          <target state="translated">atomic::AtomicI32::load</target>
        </trans-unit>
        <trans-unit id="460308e80acd1311b8d3ce763be27e96352d5ff8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::new</source>
          <target state="translated">atomic::AtomicI32::new</target>
        </trans-unit>
        <trans-unit id="9173dbe5bc01be1b350ff1c2d67b6fe79ce8e2ed" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::store</source>
          <target state="translated">atomic::AtomicI32::store</target>
        </trans-unit>
        <trans-unit id="7baf7fa91d75cf1673c09d46956094386b38d4b9" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::swap</source>
          <target state="translated">atomic::AtomicI32::swap</target>
        </trans-unit>
        <trans-unit id="72886f817c275edd2b618836089bf7b2281241ea" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::try_from</source>
          <target state="translated">atomic::AtomicI32::try_from</target>
        </trans-unit>
        <trans-unit id="bd81c103b837f318ad018fbd088f2d0800c992cf" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::try_into</source>
          <target state="translated">atomic::AtomicI32::try_into</target>
        </trans-unit>
        <trans-unit id="1bfb15ee005dfd6a4aaf4b6239de0de2eb94f618" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI32::type_id</source>
          <target state="translated">atomic::AtomicI32::type_id</target>
        </trans-unit>
        <trans-unit id="4658c9137c64df71237409c2c82f3f80f256ea9f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64</source>
          <target state="translated">atomic::AtomicI64</target>
        </trans-unit>
        <trans-unit id="53cb25ac594629dd0b57f658fcb961f354882ede" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::borrow</source>
          <target state="translated">atomic::AtomicI64::borrow</target>
        </trans-unit>
        <trans-unit id="f3191a16fe03e553dfaa29b6cd62f203acacf84a" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::borrow_mut</source>
          <target state="translated">atomic::AtomicI64::borrow_mut</target>
        </trans-unit>
        <trans-unit id="fb3a72e8b9c3dc5229590d7187bbcfaf6e279570" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::compare_and_swap</source>
          <target state="translated">atomic::AtomicI64::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="f64bbb7220344e1488b1372d516e0658dd8b9d80" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::compare_exchange</source>
          <target state="translated">atomic::AtomicI64::compare_exchange</target>
        </trans-unit>
        <trans-unit id="70a6fd8fa523244e0ddacae1678954fd98414732" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicI64::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="1626a76df410c0434b1acf1260ff369fdeb27dd6" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::default</source>
          <target state="translated">atomic::AtomicI64::default</target>
        </trans-unit>
        <trans-unit id="bf317f1c5437db6d11d6b2f8091487f98921632b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_add</source>
          <target state="translated">atomic::AtomicI64::fetch_add</target>
        </trans-unit>
        <trans-unit id="bb415709063b27abb49ee436a390a7fd20ee569c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_and</source>
          <target state="translated">atomic::AtomicI64::fetch_and</target>
        </trans-unit>
        <trans-unit id="a32efec4906cc6a9b404650721d58939a1d7dc7b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_max</source>
          <target state="translated">atomic::AtomicI64::fetch_max</target>
        </trans-unit>
        <trans-unit id="a3ecc0c203a0c7ed8230ab4686b7d22b35a773f3" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_min</source>
          <target state="translated">atomic::AtomicI64::fetch_min</target>
        </trans-unit>
        <trans-unit id="021d477c83bd95c07a03e3d9686a861d8f2f6fc3" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_nand</source>
          <target state="translated">atomic::AtomicI64::fetch_nand</target>
        </trans-unit>
        <trans-unit id="2a9d4a8d3bd274c31d21399a4f7b4a37ff8e6e8f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_or</source>
          <target state="translated">atomic::AtomicI64::fetch_or</target>
        </trans-unit>
        <trans-unit id="2922d5f38306e02c9ab39174e14d0e1ed3706be2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_sub</source>
          <target state="translated">atomic::AtomicI64::fetch_sub</target>
        </trans-unit>
        <trans-unit id="e2b594a7064368f7bc7037c4eb89741a6503a8a6" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_update</source>
          <target state="translated">atomic::AtomicI64::fetch_update</target>
        </trans-unit>
        <trans-unit id="09f908d0dcb109a257c650a0f1639a4d211cb86d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fetch_xor</source>
          <target state="translated">atomic::AtomicI64::fetch_xor</target>
        </trans-unit>
        <trans-unit id="8d70028e6173a491bd38b0cbd066bfd416a9c6c8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::fmt</source>
          <target state="translated">atomic::AtomicI64::fmt</target>
        </trans-unit>
        <trans-unit id="d2a525c38f4b819c856c4da1c85863d9df5ce17d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::from</source>
          <target state="translated">atomic::AtomicI64::from</target>
        </trans-unit>
        <trans-unit id="c5ab7a5455d77b324da2665a43c9c5dfcae8b693" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::get_mut</source>
          <target state="translated">atomic::AtomicI64::get_mut</target>
        </trans-unit>
        <trans-unit id="7b23e4478a8b0229d75220946ffe26ec3f5305a0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::into</source>
          <target state="translated">atomic::AtomicI64::into</target>
        </trans-unit>
        <trans-unit id="9a7d511910e7c6da7cf99af9154e139ed48d61bd" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::into_inner</source>
          <target state="translated">atomic::AtomicI64::into_inner</target>
        </trans-unit>
        <trans-unit id="380b0517f9fbd72aea00634fc1c0aa148e65e79b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::load</source>
          <target state="translated">atomic::AtomicI64::load</target>
        </trans-unit>
        <trans-unit id="c5edd208d19895bd88b8a21af51e2091af80969f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::new</source>
          <target state="translated">atomic::AtomicI64::new</target>
        </trans-unit>
        <trans-unit id="7667bf835c6c6d4d84faf5cfd9aa1fc4321d4a75" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::store</source>
          <target state="translated">atomic::AtomicI64::store</target>
        </trans-unit>
        <trans-unit id="fece5af0fd8c79b5c66f9d33c1cad15909803b49" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::swap</source>
          <target state="translated">atomic::AtomicI64::swap</target>
        </trans-unit>
        <trans-unit id="592113f7e67fdb170ac5350d72c565a5df32f97b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::try_from</source>
          <target state="translated">atomic::AtomicI64::try_from</target>
        </trans-unit>
        <trans-unit id="f1f67adfce7ebc9bdfffea192a83bac9b0da8836" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::try_into</source>
          <target state="translated">atomic::AtomicI64::try_into</target>
        </trans-unit>
        <trans-unit id="d02fefa9b5dddcae5a446add46900a74cc9cfa0c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI64::type_id</source>
          <target state="translated">atomic::AtomicI64::type_id</target>
        </trans-unit>
        <trans-unit id="17577aff5189c847532030470e98a297e268a8a4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8</source>
          <target state="translated">atomic::AtomicI8</target>
        </trans-unit>
        <trans-unit id="291a36b862275d6a3fcb7aa1c2a03435567ce5e4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::borrow</source>
          <target state="translated">atomic::AtomicI8::borrow</target>
        </trans-unit>
        <trans-unit id="fa3d4b8caeaa1c5d4645e4134862b1de3cd5d8e1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::borrow_mut</source>
          <target state="translated">atomic::AtomicI8::borrow_mut</target>
        </trans-unit>
        <trans-unit id="4a73c1b80e2d66316009eccbc375c82eb94c15d3" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::compare_and_swap</source>
          <target state="translated">atomic::AtomicI8::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="f27ce33aaadced0c74f23e43576981e9bb80f428" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::compare_exchange</source>
          <target state="translated">atomic::AtomicI8::compare_exchange</target>
        </trans-unit>
        <trans-unit id="a1111a9ad31be46a4ec2448191dba1cd8e8302b8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicI8::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="385fd670ccda01368b84be32c5edd5fa14fe0aed" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::default</source>
          <target state="translated">atomic::AtomicI8::default</target>
        </trans-unit>
        <trans-unit id="a56503da5fb407ffdbaacb272679ea4f711284d2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_add</source>
          <target state="translated">atomic::AtomicI8::fetch_add</target>
        </trans-unit>
        <trans-unit id="54e0d7d5df084eff47d270846b00a3544a0c3d1b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_and</source>
          <target state="translated">atomic::AtomicI8::fetch_and</target>
        </trans-unit>
        <trans-unit id="1a9ee3da7b6e91f402617c0e1411aa623933681e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_max</source>
          <target state="translated">atomic::AtomicI8::fetch_max</target>
        </trans-unit>
        <trans-unit id="240eb67aaab8795e70f159b3ba007840ab9acd7b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_min</source>
          <target state="translated">atomic::AtomicI8::fetch_min</target>
        </trans-unit>
        <trans-unit id="b6340fda6d30f88a99da5616b0ce6c80d8efa1bd" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_nand</source>
          <target state="translated">atomic::AtomicI8::fetch_nand</target>
        </trans-unit>
        <trans-unit id="673f0afe2eb4df2cefeb17918fef4f8c3543ed66" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_or</source>
          <target state="translated">atomic::AtomicI8::fetch_or</target>
        </trans-unit>
        <trans-unit id="a3d50c60f36eea518c58fb980d20f30650813fc6" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_sub</source>
          <target state="translated">atomic::AtomicI8::fetch_sub</target>
        </trans-unit>
        <trans-unit id="c4403b7778fc7040eb2075081873b3e997227837" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_update</source>
          <target state="translated">atomic::AtomicI8::fetch_update</target>
        </trans-unit>
        <trans-unit id="ddc8a90b9080f5825064e468f5a5623d389a3080" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fetch_xor</source>
          <target state="translated">atomic::AtomicI8::fetch_xor</target>
        </trans-unit>
        <trans-unit id="f197bb76fcb1371ee491f486df2a69df3a984bd0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::fmt</source>
          <target state="translated">atomic::AtomicI8::fmt</target>
        </trans-unit>
        <trans-unit id="5b5689ffc805240b6b054886dfa88a6a2f1b2e44" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::from</source>
          <target state="translated">atomic::AtomicI8::from</target>
        </trans-unit>
        <trans-unit id="637212c767e002698b6d1077e332796190019f83" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::get_mut</source>
          <target state="translated">atomic::AtomicI8::get_mut</target>
        </trans-unit>
        <trans-unit id="1f49ff8f6d891a2817d52c406e0a63f6457bf9da" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::into</source>
          <target state="translated">atomic::AtomicI8::into</target>
        </trans-unit>
        <trans-unit id="de9fe5c75d045664ef2b70d646c3622d2abd3dd9" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::into_inner</source>
          <target state="translated">atomic::AtomicI8::into_inner</target>
        </trans-unit>
        <trans-unit id="85a8f16b9c13d90146705e863b95304c7b396b44" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::load</source>
          <target state="translated">atomic::AtomicI8::load</target>
        </trans-unit>
        <trans-unit id="c61caab41602c693ef1233c9dfb3e4264da9bcbd" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::new</source>
          <target state="translated">atomic::AtomicI8::new</target>
        </trans-unit>
        <trans-unit id="69fb793bdcdf5d4a113b5eb2f377cd95a5425f47" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::store</source>
          <target state="translated">atomic::AtomicI8::store</target>
        </trans-unit>
        <trans-unit id="e718bcc3cf78b6180303cdba1952f40aa73a78e0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::swap</source>
          <target state="translated">atomic::AtomicI8::swap</target>
        </trans-unit>
        <trans-unit id="861585dbeb7587c43d91f923e5ea5f81d9b01bb5" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::try_from</source>
          <target state="translated">atomic::AtomicI8::try_from</target>
        </trans-unit>
        <trans-unit id="ec6b2c1f0e497b05fd1dda3c94b64badbfedff38" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::try_into</source>
          <target state="translated">atomic::AtomicI8::try_into</target>
        </trans-unit>
        <trans-unit id="4ccea09c54fa7e235de836c6adc902cdbaa72a62" translate="yes" xml:space="preserve">
          <source>atomic::AtomicI8::type_id</source>
          <target state="translated">atomic::AtomicI8::type_id</target>
        </trans-unit>
        <trans-unit id="bef11aed7b966a22dd0007945fff322aa0bfaeee" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize</source>
          <target state="translated">atomic::AtomicIsize</target>
        </trans-unit>
        <trans-unit id="54362f382261d7c1ccbcff1042ffd4c2ab47b3f0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::borrow</source>
          <target state="translated">atomic::AtomicIsize::borrow</target>
        </trans-unit>
        <trans-unit id="b8eeee1a6a0b27c83006c5323afccf4f5cc4296b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::borrow_mut</source>
          <target state="translated">atomic::AtomicIsize::borrow_mut</target>
        </trans-unit>
        <trans-unit id="860a8fa7987b24c124e817e5e9c5bc53cd4f1b51" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::compare_and_swap</source>
          <target state="translated">atomic::AtomicIsize::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="d8ddd0bb097ba68565eaa521c4435e06c5836b77" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::compare_exchange</source>
          <target state="translated">atomic::AtomicIsize::compare_exchange</target>
        </trans-unit>
        <trans-unit id="11462e1063e8ec917bcaf625a2a685eb6867e936" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicIsize::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="fb4dcb6189679a882dcb5af37d698632c09ee34d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::default</source>
          <target state="translated">atomic::AtomicIsize::default</target>
        </trans-unit>
        <trans-unit id="36acbea7608269e507f89904aee4eab857a73815" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_add</source>
          <target state="translated">atomic::AtomicIsize::fetch_add</target>
        </trans-unit>
        <trans-unit id="53cea8a84e891cdd8fac3b13b8f267a1a3267068" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_and</source>
          <target state="translated">atomic::AtomicIsize::fetch_and</target>
        </trans-unit>
        <trans-unit id="f40ee191fc8f9035709e33e4c8994d19801e6c03" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_max</source>
          <target state="translated">atomic::AtomicIsize::fetch_max</target>
        </trans-unit>
        <trans-unit id="ec28eac891bbe9b9cb1a93426cf981dba1d2b7a4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_min</source>
          <target state="translated">atomic::AtomicIsize::fetch_min</target>
        </trans-unit>
        <trans-unit id="d2c06deae406cf8d6788b3298755b5bf58942d61" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_nand</source>
          <target state="translated">atomic::AtomicIsize::fetch_nand</target>
        </trans-unit>
        <trans-unit id="be4282326da0d3952ba53d457a077ca56259827b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_or</source>
          <target state="translated">atomic::AtomicIsize::fetch_or</target>
        </trans-unit>
        <trans-unit id="d10d494157b1500633d33fe7cd7a8876ebf3850e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_sub</source>
          <target state="translated">atomic::AtomicIsize::fetch_sub</target>
        </trans-unit>
        <trans-unit id="dd30ef098d0b3aeaa27d2c469327853fe0a8b495" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_update</source>
          <target state="translated">atomic::AtomicIsize::fetch_update</target>
        </trans-unit>
        <trans-unit id="365d55c3894156f5b3bb1f5c68fd1b8c1dd71d30" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fetch_xor</source>
          <target state="translated">atomic::AtomicIsize::fetch_xor</target>
        </trans-unit>
        <trans-unit id="90785850751942b1854862cf61f3fabd9b8f95ad" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::fmt</source>
          <target state="translated">atomic::AtomicIsize::fmt</target>
        </trans-unit>
        <trans-unit id="0c195e3dc08f6b0f48e0edd97391ccec6c4ae345" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::from</source>
          <target state="translated">atomic::AtomicIsize::from</target>
        </trans-unit>
        <trans-unit id="cef7ec90446c5e27dda6c36747015381178e62a2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::get_mut</source>
          <target state="translated">atomic::AtomicIsize::get_mut</target>
        </trans-unit>
        <trans-unit id="d1a77ddb303e9ecaf6f571ddcacff3327098c635" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::into</source>
          <target state="translated">atomic::AtomicIsize::into</target>
        </trans-unit>
        <trans-unit id="2f4209d22c7c9b9e685629b4d20af77def91d7a2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::into_inner</source>
          <target state="translated">atomic::AtomicIsize::into_inner</target>
        </trans-unit>
        <trans-unit id="929808027e2a00345f1fae855cc387bbbca41e16" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::load</source>
          <target state="translated">atomic::AtomicIsize::load</target>
        </trans-unit>
        <trans-unit id="d2463de923e167b9c3bd299a749c9810ab0c506d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::new</source>
          <target state="translated">atomic::AtomicIsize::new</target>
        </trans-unit>
        <trans-unit id="887e06213848ca8fefff82251c27d6968b165677" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::store</source>
          <target state="translated">atomic::AtomicIsize::store</target>
        </trans-unit>
        <trans-unit id="a6b84e8aafa304d221a92f9d3fad7481b107d7ad" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::swap</source>
          <target state="translated">atomic::AtomicIsize::swap</target>
        </trans-unit>
        <trans-unit id="051ce1bbf8c84e3508bf6cf26fc776345949d682" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::try_from</source>
          <target state="translated">atomic::AtomicIsize::try_from</target>
        </trans-unit>
        <trans-unit id="8137192e5ce3dfcca13f075de55facc367d6ebe8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::try_into</source>
          <target state="translated">atomic::AtomicIsize::try_into</target>
        </trans-unit>
        <trans-unit id="e3005290bf2064df8df962c46d0a13a88fe8774f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicIsize::type_id</source>
          <target state="translated">atomic::AtomicIsize::type_id</target>
        </trans-unit>
        <trans-unit id="2a9a75a6153941215c450acaf58a09f098116cd8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr</source>
          <target state="translated">atomic::AtomicPtr</target>
        </trans-unit>
        <trans-unit id="5aa3aa81e10ce2d842b3fa40a197f9d21688a64a" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::borrow</source>
          <target state="translated">atomic::AtomicPtr::borrow</target>
        </trans-unit>
        <trans-unit id="a83d827fd54d17d30ac9a3174fd74cba0738394e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::borrow_mut</source>
          <target state="translated">atomic::AtomicPtr::borrow_mut</target>
        </trans-unit>
        <trans-unit id="80da036e02670f34e9680bdd25c9c54785c8b061" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::compare_and_swap</source>
          <target state="translated">atomic::AtomicPtr::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="62e835425c0b87e707dd159c4c10562023310e25" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::compare_exchange</source>
          <target state="translated">atomic::AtomicPtr::compare_exchange</target>
        </trans-unit>
        <trans-unit id="b7be432813963fe0b473fee8c9339859bdbe2842" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicPtr::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="0fa71e5038cd370853c4f8119bdf482da650b042" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::default</source>
          <target state="translated">atomic::AtomicPtr::default</target>
        </trans-unit>
        <trans-unit id="ffc228bfb08868cad1a08f47c5a9b0237dbb31c6" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::fmt</source>
          <target state="translated">atomic::AtomicPtr::fmt</target>
        </trans-unit>
        <trans-unit id="d7e9d7fe6a8bb3b9c070bdbabff51fd2781444f4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::from</source>
          <target state="translated">atomic::AtomicPtr::from</target>
        </trans-unit>
        <trans-unit id="dad7516541121490eb576091d4eea8ac81d68f07" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::get_mut</source>
          <target state="translated">atomic::AtomicPtr::get_mut</target>
        </trans-unit>
        <trans-unit id="ab6f341aa5b1f4767a60644a4bca4c81139656a0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::into</source>
          <target state="translated">atomic::AtomicPtr::into</target>
        </trans-unit>
        <trans-unit id="98b799efeac00ea6d7818681fe8ef1c7b76e0e43" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::into_inner</source>
          <target state="translated">atomic::AtomicPtr::into_inner</target>
        </trans-unit>
        <trans-unit id="6e9e1de12d18acc68e2f008f920720c8280c3424" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::load</source>
          <target state="translated">atomic::AtomicPtr::load</target>
        </trans-unit>
        <trans-unit id="af3f9b813e60ae0f382113b94eea57fb3ed36c93" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::new</source>
          <target state="translated">atomic::AtomicPtr::new</target>
        </trans-unit>
        <trans-unit id="c6656237558effa918de93e5e1b58e92a1a7f379" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::store</source>
          <target state="translated">atomic::AtomicPtr::store</target>
        </trans-unit>
        <trans-unit id="fbc40494d18a4a721d1c5cbcf18b18a666074bb4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::swap</source>
          <target state="translated">atomic::AtomicPtr::swap</target>
        </trans-unit>
        <trans-unit id="fd48a81195ab8fbfa66d4aa1922277b80d68325d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::try_from</source>
          <target state="translated">atomic::AtomicPtr::try_from</target>
        </trans-unit>
        <trans-unit id="258641d73168abce1b7e9c6217e0c9e5224763d6" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::try_into</source>
          <target state="translated">atomic::AtomicPtr::try_into</target>
        </trans-unit>
        <trans-unit id="f2fae53848ec424c2135c3a162d5b657f81cfe50" translate="yes" xml:space="preserve">
          <source>atomic::AtomicPtr::type_id</source>
          <target state="translated">atomic::AtomicPtr::type_id</target>
        </trans-unit>
        <trans-unit id="3cdcc7623e7b5690a62ebb43ba495a5ed1387b2c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16</source>
          <target state="translated">atomic::AtomicU16</target>
        </trans-unit>
        <trans-unit id="ff7ea3a88030ea6489fe81a7d63ca0e287587100" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::borrow</source>
          <target state="translated">atomic::AtomicU16::borrow</target>
        </trans-unit>
        <trans-unit id="702ca9342dcc881d94e04132d2e23dbef64762e0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::borrow_mut</source>
          <target state="translated">atomic::AtomicU16::borrow_mut</target>
        </trans-unit>
        <trans-unit id="2fca06da3f4314cd096979fdd0c0b0fd40ed06f0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::compare_and_swap</source>
          <target state="translated">atomic::AtomicU16::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="b802008587496f04e855a25af0de31a793371e27" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::compare_exchange</source>
          <target state="translated">atomic::AtomicU16::compare_exchange</target>
        </trans-unit>
        <trans-unit id="2f4a0350caaf1722e5f99074e30c6f60758517af" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicU16::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="2e9f7d4fe81c7fd052a36b2ed466ddd4109fad41" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::default</source>
          <target state="translated">atomic::AtomicU16::default</target>
        </trans-unit>
        <trans-unit id="b40bccbe91e528811ca7247c128684c26216c97c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fetch_add</source>
          <target state="translated">atomic::AtomicU16::fetch_add</target>
        </trans-unit>
        <trans-unit id="e26b73ee7d49b5dede158ddb870c11d1f7610e0b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fetch_and</source>
          <target state="translated">atomic::AtomicU16::fetch_and</target>
        </trans-unit>
        <trans-unit id="4a4bad432c66969c17f5c443d1611e8914a201f7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fetch_max</source>
          <target state="translated">atomic::AtomicU16::fetch_max</target>
        </trans-unit>
        <trans-unit id="6b01fba96b33020621611ba1f47be2fd6750e42c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fetch_min</source>
          <target state="translated">atomic::AtomicU16::fetch_min</target>
        </trans-unit>
        <trans-unit id="043c98304e5ef5ef06179cfbcc9815406c5959be" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fetch_nand</source>
          <target state="translated">atomic::AtomicU16::fetch_nand</target>
        </trans-unit>
        <trans-unit id="513e3d64c7f26e34cd8599e31787dae3334e4768" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fetch_or</source>
          <target state="translated">atomic::AtomicU16::fetch_or</target>
        </trans-unit>
        <trans-unit id="7cf4e0a84b8fc22069f70078586d440bc74c807a" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fetch_sub</source>
          <target state="translated">atomic::AtomicU16::fetch_sub</target>
        </trans-unit>
        <trans-unit id="016454dc69529db298632912ee25b227b5f5a4ce" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fetch_update</source>
          <target state="translated">atomic::AtomicU16::fetch_update</target>
        </trans-unit>
        <trans-unit id="dbd57d11132eee796e12fde6bc43d1e705ce366c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fetch_xor</source>
          <target state="translated">atomic::AtomicU16::fetch_xor</target>
        </trans-unit>
        <trans-unit id="1a6d19fe08b16b23571a9b3869da5d8cd19d5abe" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::fmt</source>
          <target state="translated">atomic::AtomicU16::fmt</target>
        </trans-unit>
        <trans-unit id="d9431e64cf81e915a9d6c30e9a0543b301462ffd" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::from</source>
          <target state="translated">atomic::AtomicU16::from</target>
        </trans-unit>
        <trans-unit id="b69205195e8a1c04b8c8b22cb960a7d74129d751" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::get_mut</source>
          <target state="translated">atomic::AtomicU16::get_mut</target>
        </trans-unit>
        <trans-unit id="73a556f4a1b14afd202b846c7a97fabbe16c1da8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::into</source>
          <target state="translated">atomic::AtomicU16::into</target>
        </trans-unit>
        <trans-unit id="185238487ac48196ea602044ece70e711b053354" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::into_inner</source>
          <target state="translated">atomic::AtomicU16::into_inner</target>
        </trans-unit>
        <trans-unit id="bab56519f729db57bdea5cacceb0e94e2e023d40" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::load</source>
          <target state="translated">atomic::AtomicU16::load</target>
        </trans-unit>
        <trans-unit id="2aeee448e97216271c72574765e1f5680a1eeb62" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::new</source>
          <target state="translated">atomic::AtomicU16::new</target>
        </trans-unit>
        <trans-unit id="0cb282bff100889f677902e914dde2ba4e3811a1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::store</source>
          <target state="translated">atomic::AtomicU16::store</target>
        </trans-unit>
        <trans-unit id="1c945ac78d8aef0cc859cca9a3b0bec368c2ef2c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::swap</source>
          <target state="translated">atomic::AtomicU16::swap</target>
        </trans-unit>
        <trans-unit id="f5020cb4cd84c5e4a07eb51f69578a5b5971349f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::try_from</source>
          <target state="translated">atomic::AtomicU16::try_from</target>
        </trans-unit>
        <trans-unit id="398c14b46bd757f2f982a911780edf55aac464c5" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::try_into</source>
          <target state="translated">atomic::AtomicU16::try_into</target>
        </trans-unit>
        <trans-unit id="c12de8dc546cfdbc9464c1363b1b8482df8dbe6c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU16::type_id</source>
          <target state="translated">atomic::AtomicU16::type_id</target>
        </trans-unit>
        <trans-unit id="8f6edab293a07d17ac6b8d4a88c54e49494c05be" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32</source>
          <target state="translated">atomic::AtomicU32</target>
        </trans-unit>
        <trans-unit id="8d7dfd309de1316fb040ee367575d8563fb4f9be" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::borrow</source>
          <target state="translated">atomic::AtomicU32::borrow</target>
        </trans-unit>
        <trans-unit id="6fcea9bdd4cd7a50ffbd784398fcdb14cec75655" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::borrow_mut</source>
          <target state="translated">atomic::AtomicU32::borrow_mut</target>
        </trans-unit>
        <trans-unit id="c3d27bb136acad8e598a78b8127dc97d52773a22" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::compare_and_swap</source>
          <target state="translated">atomic::AtomicU32::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="c591e4892f4970db925391bfe875da2e2c615477" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::compare_exchange</source>
          <target state="translated">atomic::AtomicU32::compare_exchange</target>
        </trans-unit>
        <trans-unit id="4a15170fb74d73ac273bf3f108a3b8764666aef6" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicU32::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="087321a1db64242bc0d1809d0f30b5ca03b48b32" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::default</source>
          <target state="translated">atomic::AtomicU32::default</target>
        </trans-unit>
        <trans-unit id="0a19da7afca3a721b565789a41ee6af5c18d77d7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fetch_add</source>
          <target state="translated">atomic::AtomicU32::fetch_add</target>
        </trans-unit>
        <trans-unit id="9deb13ff4812f87cc613a7f257f82aea97208e96" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fetch_and</source>
          <target state="translated">atomic::AtomicU32::fetch_and</target>
        </trans-unit>
        <trans-unit id="ca4ad8920a745d58ae7cbdb7cea6ffa7c066a73f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fetch_max</source>
          <target state="translated">atomic::AtomicU32::fetch_max</target>
        </trans-unit>
        <trans-unit id="1b6a628119a0a5439057fd757b41e93f111d7e51" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fetch_min</source>
          <target state="translated">atomic::AtomicU32::fetch_min</target>
        </trans-unit>
        <trans-unit id="a91e9b4df93ee69bf002534445f738fe611bdef1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fetch_nand</source>
          <target state="translated">atomic::AtomicU32::fetch_nand</target>
        </trans-unit>
        <trans-unit id="fff8d2e035cb8c1c25cea1652c532a542baecfed" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fetch_or</source>
          <target state="translated">atomic::AtomicU32::fetch_or</target>
        </trans-unit>
        <trans-unit id="4ab336b0c85995c2cc297c5ce3612a43208094a2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fetch_sub</source>
          <target state="translated">atomic::AtomicU32::fetch_sub</target>
        </trans-unit>
        <trans-unit id="a6aa4450c3f4bcd2edaf95f866301afddaf25fb1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fetch_update</source>
          <target state="translated">atomic::AtomicU32::fetch_update</target>
        </trans-unit>
        <trans-unit id="176dc2373a3adc8d1af28f2ec5c14bc3e5fe2bf7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fetch_xor</source>
          <target state="translated">atomic::AtomicU32::fetch_xor</target>
        </trans-unit>
        <trans-unit id="2a3ca65f9762c112a430a692de01e146a4367958" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::fmt</source>
          <target state="translated">atomic::AtomicU32::fmt</target>
        </trans-unit>
        <trans-unit id="5856b96200b16c6cd2d9596b87c10af15a698cc9" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::from</source>
          <target state="translated">atomic::AtomicU32::from</target>
        </trans-unit>
        <trans-unit id="7ac0f363f677b89e4ecd94dd098fbdc227f69820" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::get_mut</source>
          <target state="translated">atomic::AtomicU32::get_mut</target>
        </trans-unit>
        <trans-unit id="fe2acba243061f2235e133aa0f3a9870abb1fda7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::into</source>
          <target state="translated">atomic::AtomicU32::into</target>
        </trans-unit>
        <trans-unit id="dfa21bc2dbe5e4205700aaf7773d2a55cccec558" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::into_inner</source>
          <target state="translated">atomic::AtomicU32::into_inner</target>
        </trans-unit>
        <trans-unit id="f6e4bf59aa1af64e74c25cab2659eeef2679d28b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::load</source>
          <target state="translated">atomic::AtomicU32::load</target>
        </trans-unit>
        <trans-unit id="239c621c5a0505f70f5dea0d4521c896c7a237f6" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::new</source>
          <target state="translated">atomic::AtomicU32::new</target>
        </trans-unit>
        <trans-unit id="e53a5e2392972bd2c132c9564379936723fe01bc" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::store</source>
          <target state="translated">atomic::AtomicU32::store</target>
        </trans-unit>
        <trans-unit id="e2566ebb765615b20ca2a9ac6a000a81a0760dfd" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::swap</source>
          <target state="translated">atomic::AtomicU32::swap</target>
        </trans-unit>
        <trans-unit id="79a41f5caa13ddf1af23625b1a7bf55b964eb9df" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::try_from</source>
          <target state="translated">atomic::AtomicU32::try_from</target>
        </trans-unit>
        <trans-unit id="9769d893c6a06c650faf5ed797bb4a9828fdc798" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::try_into</source>
          <target state="translated">atomic::AtomicU32::try_into</target>
        </trans-unit>
        <trans-unit id="5e64a69534489f8a63f9ebfbb8c4c5875e040922" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU32::type_id</source>
          <target state="translated">atomic::AtomicU32::type_id</target>
        </trans-unit>
        <trans-unit id="9d2cf1a89c19cce7cc9db71009d1bd9069aeaf8d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64</source>
          <target state="translated">atomic::AtomicU64</target>
        </trans-unit>
        <trans-unit id="72eae5220b3ac735609c323f44eb37b6c548e033" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::borrow</source>
          <target state="translated">atomic::AtomicU64::borrow</target>
        </trans-unit>
        <trans-unit id="1a93fa820442834281497e38ac999e9eac6555ff" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::borrow_mut</source>
          <target state="translated">atomic::AtomicU64::borrow_mut</target>
        </trans-unit>
        <trans-unit id="6f3b59216277b0326b3fab9d5bde44e59367d7f2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::compare_and_swap</source>
          <target state="translated">atomic::AtomicU64::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="76eb91bcda998a343b952224456d621a0b82fcac" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::compare_exchange</source>
          <target state="translated">atomic::AtomicU64::compare_exchange</target>
        </trans-unit>
        <trans-unit id="beff75b6bcf6a7d4dc376ec26314608a197e7077" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicU64::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="3c553cf0947cc1a32f080421b03e3de028d77940" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::default</source>
          <target state="translated">atomic::AtomicU64::default</target>
        </trans-unit>
        <trans-unit id="a2ad4c124013ec4de32d9261b1e758a379e02138" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fetch_add</source>
          <target state="translated">atomic::AtomicU64::fetch_add</target>
        </trans-unit>
        <trans-unit id="4975e3ecc03b022ba580840b3b8b01a955d986a2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fetch_and</source>
          <target state="translated">atomic::AtomicU64::fetch_and</target>
        </trans-unit>
        <trans-unit id="a037d3d0beb30ace425d7cc2056701eb8f3e0265" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fetch_max</source>
          <target state="translated">atomic::AtomicU64::fetch_max</target>
        </trans-unit>
        <trans-unit id="2ddfdc29b40f82a9337ca686ddeacc167909f183" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fetch_min</source>
          <target state="translated">atomic::AtomicU64::fetch_min</target>
        </trans-unit>
        <trans-unit id="e12a93bcc4f67c3fff69662b38acad45fd2d026c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fetch_nand</source>
          <target state="translated">atomic::AtomicU64::fetch_nand</target>
        </trans-unit>
        <trans-unit id="86a54416ad14fda87d5c4c3799cb0cfb6f3451b7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fetch_or</source>
          <target state="translated">atomic::AtomicU64::fetch_or</target>
        </trans-unit>
        <trans-unit id="818cd2428f09996ad85121d65724667761c74d44" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fetch_sub</source>
          <target state="translated">atomic::AtomicU64::fetch_sub</target>
        </trans-unit>
        <trans-unit id="c05394773b9cc79b6c0e09005545fe4a6efbe926" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fetch_update</source>
          <target state="translated">atomic::AtomicU64::fetch_update</target>
        </trans-unit>
        <trans-unit id="817a8416773ce87ff614b903f969ff87105987bf" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fetch_xor</source>
          <target state="translated">atomic::AtomicU64::fetch_xor</target>
        </trans-unit>
        <trans-unit id="eca28fd2ef97c8f07d37b95d792148ba0c83d393" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::fmt</source>
          <target state="translated">atomic::AtomicU64::fmt</target>
        </trans-unit>
        <trans-unit id="86694f944d679e86f90c72aa71b1071305be83c8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::from</source>
          <target state="translated">atomic::AtomicU64::from</target>
        </trans-unit>
        <trans-unit id="be7cd9e355ba80d54b0fe5cf52f688e02a652c49" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::get_mut</source>
          <target state="translated">atomic::AtomicU64::get_mut</target>
        </trans-unit>
        <trans-unit id="fe429c99f9903fdeef9ee29ff484171e2730ab2d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::into</source>
          <target state="translated">atomic::AtomicU64::into</target>
        </trans-unit>
        <trans-unit id="e416dd86be1ea850e52636fe34266cf17b8b6bc8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::into_inner</source>
          <target state="translated">atomic::AtomicU64::into_inner</target>
        </trans-unit>
        <trans-unit id="5bb554088f76afae52df701c8d2e676a7e933717" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::load</source>
          <target state="translated">atomic::AtomicU64::load</target>
        </trans-unit>
        <trans-unit id="e3b3265a44da7a79099f01690e19959a1ec8da90" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::new</source>
          <target state="translated">atomic::AtomicU64::new</target>
        </trans-unit>
        <trans-unit id="fa79fe4fe86323edbd32443011f94b4e5274f649" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::store</source>
          <target state="translated">atomic::AtomicU64::store</target>
        </trans-unit>
        <trans-unit id="d30471b64decb3975d6f85f328d78ea744f2ea0b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::swap</source>
          <target state="translated">atomic::AtomicU64::swap</target>
        </trans-unit>
        <trans-unit id="c75e8a2e6d0fe6a8c93df1790503843caa1ed51f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::try_from</source>
          <target state="translated">atomic::AtomicU64::try_from</target>
        </trans-unit>
        <trans-unit id="cd7bee7e6270ae7d2fd7060fceae1c489e4a751b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::try_into</source>
          <target state="translated">atomic::AtomicU64::try_into</target>
        </trans-unit>
        <trans-unit id="5d0ab87e9effce42f7b9d37ae1227590a5b12ca7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU64::type_id</source>
          <target state="translated">atomic::AtomicU64::type_id</target>
        </trans-unit>
        <trans-unit id="5d40f6ccf9299fd16064d0ff6152f660ae3136ea" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8</source>
          <target state="translated">atomic::AtomicU8</target>
        </trans-unit>
        <trans-unit id="6dbc2cac2799df6d4947b0c7102b5a3e182992a2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::borrow</source>
          <target state="translated">atomic::AtomicU8::borrow</target>
        </trans-unit>
        <trans-unit id="ee3f001355d14aee168dba13c3c63463a7b073e4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::borrow_mut</source>
          <target state="translated">atomic::AtomicU8::borrow_mut</target>
        </trans-unit>
        <trans-unit id="fec3f88e879e88486868f2a9054879acc9463b0c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::compare_and_swap</source>
          <target state="translated">atomic::AtomicU8::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="03147febbd30c81f8ae97aeba4995fc17c03354e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::compare_exchange</source>
          <target state="translated">atomic::AtomicU8::compare_exchange</target>
        </trans-unit>
        <trans-unit id="e8ccb6e509081e88678a4773e794e63ed14fff6e" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicU8::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="5496d41182a501016ddb0b07b09be0e6e7aa66c1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::default</source>
          <target state="translated">atomic::AtomicU8::default</target>
        </trans-unit>
        <trans-unit id="7be4b964228c9cd0d9ce19c0446dcb49aea6df51" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fetch_add</source>
          <target state="translated">atomic::AtomicU8::fetch_add</target>
        </trans-unit>
        <trans-unit id="5dfaa31115b4a3d820141932b73c2c61e13d590b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fetch_and</source>
          <target state="translated">atomic::AtomicU8::fetch_and</target>
        </trans-unit>
        <trans-unit id="304d23631f2e9506b1274e558d1173f6641ca5b3" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fetch_max</source>
          <target state="translated">atomic::AtomicU8::fetch_max</target>
        </trans-unit>
        <trans-unit id="59423d1bb5ca10dcfe7d240cffb49746a8429fa2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fetch_min</source>
          <target state="translated">atomic::AtomicU8::fetch_min</target>
        </trans-unit>
        <trans-unit id="f760bb971dc13394582b5ec4c919df42d18091d9" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fetch_nand</source>
          <target state="translated">atomic::AtomicU8::fetch_nand</target>
        </trans-unit>
        <trans-unit id="0fae34465ccc69d9fc3ad1d27603dd7b8db66ecc" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fetch_or</source>
          <target state="translated">atomic::AtomicU8::fetch_or</target>
        </trans-unit>
        <trans-unit id="ca961f2d2f30958f2f3ed49a8e779ca585ee3f83" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fetch_sub</source>
          <target state="translated">atomic::AtomicU8::fetch_sub</target>
        </trans-unit>
        <trans-unit id="35d670b389be1ed20f93372f376785867facf8fb" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fetch_update</source>
          <target state="translated">atomic::AtomicU8::fetch_update</target>
        </trans-unit>
        <trans-unit id="805b8e36c08876d01b931f3b7ee90e1b3b0b2547" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fetch_xor</source>
          <target state="translated">atomic::AtomicU8::fetch_xor</target>
        </trans-unit>
        <trans-unit id="d88449876f57e9a1371b01ddc21c0b3832ebbf0a" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::fmt</source>
          <target state="translated">atomic::AtomicU8::fmt</target>
        </trans-unit>
        <trans-unit id="361d769ab8ba0ef7b23db073af90d19d8a5728e7" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::from</source>
          <target state="translated">atomic::AtomicU8::from</target>
        </trans-unit>
        <trans-unit id="68a60d6829e9c0152c8da8475a2e03f0e3db0d4c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::get_mut</source>
          <target state="translated">atomic::AtomicU8::get_mut</target>
        </trans-unit>
        <trans-unit id="8c38a953aea794b334b542297121d77e151f7070" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::into</source>
          <target state="translated">atomic::AtomicU8::into</target>
        </trans-unit>
        <trans-unit id="57fdb84bff8d0cb637fc5f4a9febfd315e17b4e0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::into_inner</source>
          <target state="translated">atomic::AtomicU8::into_inner</target>
        </trans-unit>
        <trans-unit id="57da82b7a5cefb581fe0b9ea2d2915abe7d5d0e0" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::load</source>
          <target state="translated">atomic::AtomicU8::load</target>
        </trans-unit>
        <trans-unit id="7e669fe868ea3b1c92b2f95b173b43a1fb8be436" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::new</source>
          <target state="translated">atomic::AtomicU8::new</target>
        </trans-unit>
        <trans-unit id="e5ca14f88b63a8c01486f318491e39d751275df4" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::store</source>
          <target state="translated">atomic::AtomicU8::store</target>
        </trans-unit>
        <trans-unit id="4a0b64f4f24cf58f6df88e1485b39e48e313fd98" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::swap</source>
          <target state="translated">atomic::AtomicU8::swap</target>
        </trans-unit>
        <trans-unit id="9fa928cf823302212377fda33224f4c3bbc9dd9a" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::try_from</source>
          <target state="translated">atomic::AtomicU8::try_from</target>
        </trans-unit>
        <trans-unit id="2c61e535c9397447498c9f27b3b1e91644da8867" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::try_into</source>
          <target state="translated">atomic::AtomicU8::try_into</target>
        </trans-unit>
        <trans-unit id="e044b19ffa41a9bcafa2f418954c4407df4fef92" translate="yes" xml:space="preserve">
          <source>atomic::AtomicU8::type_id</source>
          <target state="translated">atomic::AtomicU8::type_id</target>
        </trans-unit>
        <trans-unit id="1daa8d1c55b2032b413908abdca343762333657c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize</source>
          <target state="translated">atomic::AtomicUsize</target>
        </trans-unit>
        <trans-unit id="f33ab1206bde22b278650924b8cb55ffe7c4fb78" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::borrow</source>
          <target state="translated">atomic::AtomicUsize::borrow</target>
        </trans-unit>
        <trans-unit id="0531359f62881dfc3ef420568af83afb91c81895" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::borrow_mut</source>
          <target state="translated">atomic::AtomicUsize::borrow_mut</target>
        </trans-unit>
        <trans-unit id="e54022fb1fd404c908a003f0d76c3d6af092fd4c" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::compare_and_swap</source>
          <target state="translated">atomic::AtomicUsize::compare_and_swap</target>
        </trans-unit>
        <trans-unit id="41b9f7d2b3dfb9590c79a9745967af775975a8d1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::compare_exchange</source>
          <target state="translated">atomic::AtomicUsize::compare_exchange</target>
        </trans-unit>
        <trans-unit id="59d98e083e6b82dfacbcd4ff5df92a8fbd6c8627" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::compare_exchange_weak</source>
          <target state="translated">atomic::AtomicUsize::compare_exchange_weak</target>
        </trans-unit>
        <trans-unit id="d43da8cf79fbb779a04765d6320d8deecefc4b77" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::default</source>
          <target state="translated">atomic::AtomicUsize::default</target>
        </trans-unit>
        <trans-unit id="04480ac2516a2b7832eddcfcb8f5606269229981" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fetch_add</source>
          <target state="translated">atomic::AtomicUsize::fetch_add</target>
        </trans-unit>
        <trans-unit id="667570f287ee3f651772c35a7bea299b3481eafc" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fetch_and</source>
          <target state="translated">atomic::AtomicUsize::fetch_and</target>
        </trans-unit>
        <trans-unit id="c6bca0c03de55c3d9f988478fc4f8c77340adcf2" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fetch_max</source>
          <target state="translated">atomic::AtomicUsize::fetch_max</target>
        </trans-unit>
        <trans-unit id="967f1c964cf4fde81c01e339a7a1ef12347210a5" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fetch_min</source>
          <target state="translated">atomic::AtomicUsize::fetch_min</target>
        </trans-unit>
        <trans-unit id="2768f607502c873ca5e94d5db26b10fd3a2285ae" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fetch_nand</source>
          <target state="translated">atomic::AtomicUsize::fetch_nand</target>
        </trans-unit>
        <trans-unit id="d36e2b2a73c7324d3898dcf22be5212249944af1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fetch_or</source>
          <target state="translated">atomic::AtomicUsize::fetch_or</target>
        </trans-unit>
        <trans-unit id="4adb9ffb04834324519c7ffe73a3f308e5c26c54" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fetch_sub</source>
          <target state="translated">atomic::AtomicUsize::fetch_sub</target>
        </trans-unit>
        <trans-unit id="8ff8a5d7e589a0d97684e9e6c007af31738d7567" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fetch_update</source>
          <target state="translated">atomic::AtomicUsize::fetch_update</target>
        </trans-unit>
        <trans-unit id="c17d52396f1c6640fe0a7f2bc3153537a8ba1c9f" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fetch_xor</source>
          <target state="translated">atomic::AtomicUsize::fetch_xor</target>
        </trans-unit>
        <trans-unit id="14433555505ca19ac37c60cafae6de9f2f2bdbc9" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::fmt</source>
          <target state="translated">atomic::AtomicUsize::fmt</target>
        </trans-unit>
        <trans-unit id="31f1b295512f9d263f44316e1e28c8e491166737" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::from</source>
          <target state="translated">atomic::AtomicUsize::from</target>
        </trans-unit>
        <trans-unit id="53385f066d2afa6ddb1e3bb9973aa6ec534fc654" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::get_mut</source>
          <target state="translated">atomic::AtomicUsize::get_mut</target>
        </trans-unit>
        <trans-unit id="c2ca12a68ed0f3983291188960058f79944c5f2d" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::into</source>
          <target state="translated">atomic::AtomicUsize::into</target>
        </trans-unit>
        <trans-unit id="b2daf39a5a7d751fa6f8e7040ba142687711a2cb" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::into_inner</source>
          <target state="translated">atomic::AtomicUsize::into_inner</target>
        </trans-unit>
        <trans-unit id="7a1860bdd056a1bb70688fbd6abcca45f6d7d956" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::load</source>
          <target state="translated">atomic::AtomicUsize::load</target>
        </trans-unit>
        <trans-unit id="338a0dab7e8cf9ef69e5bfec0887ce88ce1ac392" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::new</source>
          <target state="translated">atomic::AtomicUsize::new</target>
        </trans-unit>
        <trans-unit id="0f2396f6f249e9e4aeb128c31ea72cd91f1877e8" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::store</source>
          <target state="translated">atomic::AtomicUsize::store</target>
        </trans-unit>
        <trans-unit id="991c2b320985f72445ea0f4c7ba013293414bd80" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::swap</source>
          <target state="translated">atomic::AtomicUsize::swap</target>
        </trans-unit>
        <trans-unit id="156dae1354048a68b4363bd21ec8d28a9921e33b" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::try_from</source>
          <target state="translated">atomic::AtomicUsize::try_from</target>
        </trans-unit>
        <trans-unit id="527a62bcc12943fee88c2679f1acad150bd5c9a1" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::try_into</source>
          <target state="translated">atomic::AtomicUsize::try_into</target>
        </trans-unit>
        <trans-unit id="c942b7ded5369e49044da8a9d1a6c208fd10bfad" translate="yes" xml:space="preserve">
          <source>atomic::AtomicUsize::type_id</source>
          <target state="translated">atomic::AtomicUsize::type_id</target>
        </trans-unit>
        <trans-unit id="904fcd4b8e80293b0f5e85ba6713964cc9d11958" translate="yes" xml:space="preserve">
          <source>atomic::Ordering</source>
          <target state="translated">atomic::Ordering</target>
        </trans-unit>
        <trans-unit id="0e4a11093d8999815522a5d01b0d1aee7af894a2" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::borrow</source>
          <target state="translated">atomic::Ordering::borrow</target>
        </trans-unit>
        <trans-unit id="1beba095263dd04d378a6ce1650712df66e028d4" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::borrow_mut</source>
          <target state="translated">atomic::Ordering::borrow_mut</target>
        </trans-unit>
        <trans-unit id="fd77355e7425585a2480ef5657dd0040be4f3696" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::clone</source>
          <target state="translated">atomic::Ordering::clone</target>
        </trans-unit>
        <trans-unit id="d63b4ce4774f8dbc6d543f7fddbdfd97ec353ea3" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::clone_from</source>
          <target state="translated">atomic::Ordering::clone_from</target>
        </trans-unit>
        <trans-unit id="10496ef6cccc69292a0d88ea8da4861b013393ca" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::clone_into</source>
          <target state="translated">atomic::Ordering::clone_into</target>
        </trans-unit>
        <trans-unit id="c93ec2f78b5b58f387b54694608ab23a006460f5" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::eq</source>
          <target state="translated">atomic::Ordering::eq</target>
        </trans-unit>
        <trans-unit id="09ed18df39fc9406311fd8dd5cfd6abb14eb7aea" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::fmt</source>
          <target state="translated">atomic::Ordering::fmt</target>
        </trans-unit>
        <trans-unit id="ccc7c5df51ee01d9631a7f3df176e8cb299fb2af" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::from</source>
          <target state="translated">atomic::Ordering::from</target>
        </trans-unit>
        <trans-unit id="14183d2e32a81b242fe2931ffc9395712f03c653" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::hash</source>
          <target state="translated">atomic::Ordering::hash</target>
        </trans-unit>
        <trans-unit id="f6dd832e879acf566c3c446113138ddb145a0c3a" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::hash_slice</source>
          <target state="translated">atomic::Ordering::hash_slice</target>
        </trans-unit>
        <trans-unit id="c0e6cd3791c580f00cc7c83cb1ef8e8851959916" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::into</source>
          <target state="translated">atomic::Ordering::into</target>
        </trans-unit>
        <trans-unit id="3f9febf11bd55f69b8e7dfd52956908289f8eab7" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::ne</source>
          <target state="translated">atomic::Ordering::ne</target>
        </trans-unit>
        <trans-unit id="1df22980b92f507a0b8b8ccdf0e200e6dcea6e1f" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::to_owned</source>
          <target state="translated">atomic::Ordering::to_owned</target>
        </trans-unit>
        <trans-unit id="bf54c6b21212a676bd3f6e6d58aaefee5d1ada06" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::try_from</source>
          <target state="translated">atomic::Ordering::try_from</target>
        </trans-unit>
        <trans-unit id="387264ddc559d6f1cfae386e4490f62da6a8d157" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::try_into</source>
          <target state="translated">atomic::Ordering::try_into</target>
        </trans-unit>
        <trans-unit id="a82e00d09cd8e2314e3886295fadacbbe0cc1f93" translate="yes" xml:space="preserve">
          <source>atomic::Ordering::type_id</source>
          <target state="translated">atomic::Ordering::type_id</target>
        </trans-unit>
        <trans-unit id="f15a800c13bf39da1ded2ef7d05eab3e16191a32" translate="yes" xml:space="preserve">
          <source>atomic::compiler_fence</source>
          <target state="translated">atomic::compiler_fence</target>
        </trans-unit>
        <trans-unit id="5362fb5a82eee5f373531a73af3118040a896bf7" translate="yes" xml:space="preserve">
          <source>atomic::fence</source>
          <target state="translated">atomic::fence</target>
        </trans-unit>
        <trans-unit id="16ca37b2e4d8b1fa89fb48823d7898fe906d8d72" translate="yes" xml:space="preserve">
          <source>atomic::spin_loop_hint</source>
          <target state="translated">atomic::spin_loop_hint</target>
        </trans-unit>
        <trans-unit id="fb0864221341188b6abc1424f99c82827af2687a" translate="yes" xml:space="preserve">
          <source>atomic_and</source>
          <target state="translated">atomic_and</target>
        </trans-unit>
        <trans-unit id="b6b59f9802fa9016432a6669364ff980541cf0bd" translate="yes" xml:space="preserve">
          <source>atomic_and_acq</source>
          <target state="translated">atomic_and_acq</target>
        </trans-unit>
        <trans-unit id="c6a1e21d7a3cf43462718560eaa304fd633e7400" translate="yes" xml:space="preserve">
          <source>atomic_and_acqrel</source>
          <target state="translated">atomic_and_acqrel</target>
        </trans-unit>
        <trans-unit id="af9695a63b61b26ec485bd1623d4fd83ca8deba5" translate="yes" xml:space="preserve">
          <source>atomic_and_rel</source>
          <target state="translated">atomic_and_rel</target>
        </trans-unit>
        <trans-unit id="2b8a8e623c0361a665baa2c42436b95c26dcad95" translate="yes" xml:space="preserve">
          <source>atomic_and_relaxed</source>
          <target state="translated">atomic_and_relaxed</target>
        </trans-unit>
        <trans-unit id="1ed4bdd7b5ca570d154e2d32bc22fd4bb29c5669" translate="yes" xml:space="preserve">
          <source>atomic_cxchg</source>
          <target state="translated">atomic_cxchg</target>
        </trans-unit>
        <trans-unit id="235355e6c17a77239c05f54e75ff0a71e9553343" translate="yes" xml:space="preserve">
          <source>atomic_cxchg_acq</source>
          <target state="translated">atomic_cxchg_acq</target>
        </trans-unit>
        <trans-unit id="ce5acd456659d4515b22bf0f46ed6156570c0e63" translate="yes" xml:space="preserve">
          <source>atomic_cxchg_acq_failrelaxed</source>
          <target state="translated">atomic_cxchg_acq_failrelaxed</target>
        </trans-unit>
        <trans-unit id="c67e8cc7ec8dcded9ff63c8d4aeab2c04928c223" translate="yes" xml:space="preserve">
          <source>atomic_cxchg_acqrel</source>
          <target state="translated">atomic_cxchg_acqrel</target>
        </trans-unit>
        <trans-unit id="7b08310ba6fb98ca47cc6c1b1aab3075c43b0c13" translate="yes" xml:space="preserve">
          <source>atomic_cxchg_acqrel_failrelaxed</source>
          <target state="translated">atomic_cxchg_acqrel_failrelaxed</target>
        </trans-unit>
        <trans-unit id="70c9166481d7bb6fad7d1e9c4dfd1e16580905a4" translate="yes" xml:space="preserve">
          <source>atomic_cxchg_failacq</source>
          <target state="translated">atomic_cxchg_failacq</target>
        </trans-unit>
        <trans-unit id="3ae798fc5419377183e96ddc905398360ef840cc" translate="yes" xml:space="preserve">
          <source>atomic_cxchg_failrelaxed</source>
          <target state="translated">atomic_cxchg_failrelaxed</target>
        </trans-unit>
        <trans-unit id="341abb937e5c424dbcf691e92ca68b1e43aa7d78" translate="yes" xml:space="preserve">
          <source>atomic_cxchg_rel</source>
          <target state="translated">atomic_cxchg_rel</target>
        </trans-unit>
        <trans-unit id="ba4f4822c733d2bb310d6c4f0881ea5d005ddb51" translate="yes" xml:space="preserve">
          <source>atomic_cxchg_relaxed</source>
          <target state="translated">atomic_cxchg_relaxed</target>
        </trans-unit>
        <trans-unit id="cfffe3c3314cb13ec6ce32e8450952b2d1efbba1" translate="yes" xml:space="preserve">
          <source>atomic_cxchgweak</source>
          <target state="translated">atomic_cxchgweak</target>
        </trans-unit>
        <trans-unit id="87d7ae38cc338bf703fbc89069ce209b3ba3c3b8" translate="yes" xml:space="preserve">
          <source>atomic_cxchgweak_acq</source>
          <target state="translated">atomic_cxchgweak_acq</target>
        </trans-unit>
        <trans-unit id="1da9808fbffff7af4c936271e6db40add843f62c" translate="yes" xml:space="preserve">
          <source>atomic_cxchgweak_acq_failrelaxed</source>
          <target state="translated">atomic_cxchgweak_acq_failrelaxed</target>
        </trans-unit>
        <trans-unit id="bc2e5e476e83d7d632f3284726c0d5f743739a82" translate="yes" xml:space="preserve">
          <source>atomic_cxchgweak_acqrel</source>
          <target state="translated">atomic_cxchgweak_acqrel</target>
        </trans-unit>
        <trans-unit id="0a0de302e207b68bdb1f7da1b2132bfcb0c36f29" translate="yes" xml:space="preserve">
          <source>atomic_cxchgweak_acqrel_failrelaxed</source>
          <target state="translated">atomic_cxchgweak_acqrel_failrelaxed</target>
        </trans-unit>
        <trans-unit id="62a3d2398c6add28a6259ee65e1c5fbb570eb048" translate="yes" xml:space="preserve">
          <source>atomic_cxchgweak_failacq</source>
          <target state="translated">atomic_cxchgweak_failacq</target>
        </trans-unit>
        <trans-unit id="5b17c7214368662bde75c27d9a85113733824a77" translate="yes" xml:space="preserve">
          <source>atomic_cxchgweak_failrelaxed</source>
          <target state="translated">atomic_cxchgweak_failrelaxed</target>
        </trans-unit>
        <trans-unit id="59267eacdc57d647ba05e6967122499b49ffd979" translate="yes" xml:space="preserve">
          <source>atomic_cxchgweak_rel</source>
          <target state="translated">atomic_cxchgweak_rel</target>
        </trans-unit>
        <trans-unit id="ea7c17a6c5258fd112633b88af30604baf7aa959" translate="yes" xml:space="preserve">
          <source>atomic_cxchgweak_relaxed</source>
          <target state="translated">atomic_cxchgweak_relaxed</target>
        </trans-unit>
        <trans-unit id="4d3aa1b2817af8041171525bb27a1f06373bddef" translate="yes" xml:space="preserve">
          <source>atomic_fence</source>
          <target state="translated">atomic_fence</target>
        </trans-unit>
        <trans-unit id="ed72bc1c4457350eccbc94839e2aa02d78466d42" translate="yes" xml:space="preserve">
          <source>atomic_fence_acq</source>
          <target state="translated">atomic_fence_acq</target>
        </trans-unit>
        <trans-unit id="05a487f52440cd721785325c8ea8d3719f346586" translate="yes" xml:space="preserve">
          <source>atomic_fence_acqrel</source>
          <target state="translated">atomic_fence_acqrel</target>
        </trans-unit>
        <trans-unit id="e02037d1ccf972891d5bda4773814a7382dfa7f6" translate="yes" xml:space="preserve">
          <source>atomic_fence_rel</source>
          <target state="translated">atomic_fence_rel</target>
        </trans-unit>
        <trans-unit id="5d00b641af0c653272c9cef17ac1ae430973ba7f" translate="yes" xml:space="preserve">
          <source>atomic_load</source>
          <target state="translated">atomic_load</target>
        </trans-unit>
        <trans-unit id="de5e960b5658eb2bb6e6ff60c494e974efac4b60" translate="yes" xml:space="preserve">
          <source>atomic_load_acq</source>
          <target state="translated">atomic_load_acq</target>
        </trans-unit>
        <trans-unit id="838d4001efe7a2dd46bd37177e170e34ece86972" translate="yes" xml:space="preserve">
          <source>atomic_load_relaxed</source>
          <target state="translated">atomic_load_relaxed</target>
        </trans-unit>
        <trans-unit id="3f2e298179495408aa833cfef78f0b99ab14da41" translate="yes" xml:space="preserve">
          <source>atomic_load_unordered</source>
          <target state="translated">atomic_load_unordered</target>
        </trans-unit>
        <trans-unit id="27de36c8f9b1bffff70d5b5d10a480c9bd5512fd" translate="yes" xml:space="preserve">
          <source>atomic_max</source>
          <target state="translated">atomic_max</target>
        </trans-unit>
        <trans-unit id="776763c1088c86d876676afb6a9021b437585628" translate="yes" xml:space="preserve">
          <source>atomic_max_acq</source>
          <target state="translated">atomic_max_acq</target>
        </trans-unit>
        <trans-unit id="3131af96ced1e4b1afc81847c06c89165cab76d5" translate="yes" xml:space="preserve">
          <source>atomic_max_acqrel</source>
          <target state="translated">atomic_max_acqrel</target>
        </trans-unit>
        <trans-unit id="5b16556927f857dc8ad34f79bafed6d66a817ae8" translate="yes" xml:space="preserve">
          <source>atomic_max_rel</source>
          <target state="translated">atomic_max_rel</target>
        </trans-unit>
        <trans-unit id="5400939863fe26bec5feb684dc34ae0339290646" translate="yes" xml:space="preserve">
          <source>atomic_max_relaxed</source>
          <target state="translated">atomic_max_relaxed</target>
        </trans-unit>
        <trans-unit id="7ceeed640aa00b95910547bc34045c504ef343a4" translate="yes" xml:space="preserve">
          <source>atomic_min</source>
          <target state="translated">atomic_min</target>
        </trans-unit>
        <trans-unit id="a09a2c0316b6cf74fa64c2439e19988151cdfc25" translate="yes" xml:space="preserve">
          <source>atomic_min_acq</source>
          <target state="translated">atomic_min_acq</target>
        </trans-unit>
        <trans-unit id="2fd6dff204a4f95b65193dacbdc978d53f1cb4ea" translate="yes" xml:space="preserve">
          <source>atomic_min_acqrel</source>
          <target state="translated">atomic_min_acqrel</target>
        </trans-unit>
        <trans-unit id="28473edc22f144c81f6f90e08f7fedb6037160bf" translate="yes" xml:space="preserve">
          <source>atomic_min_rel</source>
          <target state="translated">atomic_min_rel</target>
        </trans-unit>
        <trans-unit id="9ada7549606d18c9510525e73f6a03dacbffd6fd" translate="yes" xml:space="preserve">
          <source>atomic_min_relaxed</source>
          <target state="translated">atomic_min_relaxed</target>
        </trans-unit>
        <trans-unit id="c70ec6af43304803896d184469c252ab06ede22a" translate="yes" xml:space="preserve">
          <source>atomic_nand</source>
          <target state="translated">atomic_nand</target>
        </trans-unit>
        <trans-unit id="c974021c2cb7b6e25d44a9fcdccd15b3a807bf5f" translate="yes" xml:space="preserve">
          <source>atomic_nand_acq</source>
          <target state="translated">atomic_nand_acq</target>
        </trans-unit>
        <trans-unit id="ecb5e71e650664cda6e2489188c373904979b833" translate="yes" xml:space="preserve">
          <source>atomic_nand_acqrel</source>
          <target state="translated">atomic_nand_acqrel</target>
        </trans-unit>
        <trans-unit id="1406c4861567dd79167a7d5ddb5f0cc7450d5ee6" translate="yes" xml:space="preserve">
          <source>atomic_nand_rel</source>
          <target state="translated">atomic_nand_rel</target>
        </trans-unit>
        <trans-unit id="4d84499b671267480940694990db873cd4db6d67" translate="yes" xml:space="preserve">
          <source>atomic_nand_relaxed</source>
          <target state="translated">atomic_nand_relaxed</target>
        </trans-unit>
        <trans-unit id="9bbc44bf1d5e6bbba1c93413762a4747b941414b" translate="yes" xml:space="preserve">
          <source>atomic_or</source>
          <target state="translated">atomic_or</target>
        </trans-unit>
        <trans-unit id="7660279ee3db2121712b9bbf0d29813ada24c92a" translate="yes" xml:space="preserve">
          <source>atomic_or_acq</source>
          <target state="translated">atomic_or_acq</target>
        </trans-unit>
        <trans-unit id="5b5e42402d8ddaaff34578d45ff3ac78dfe2f03b" translate="yes" xml:space="preserve">
          <source>atomic_or_acqrel</source>
          <target state="translated">atomic_or_acqrel</target>
        </trans-unit>
        <trans-unit id="35c6d9999e025d97eeb1a58b65030e3f9c1d40cf" translate="yes" xml:space="preserve">
          <source>atomic_or_rel</source>
          <target state="translated">atomic_or_rel</target>
        </trans-unit>
        <trans-unit id="79a0f0ed8cbea585283b9bca322bce28b8146d13" translate="yes" xml:space="preserve">
          <source>atomic_or_relaxed</source>
          <target state="translated">atomic_or_relaxed</target>
        </trans-unit>
        <trans-unit id="78181b1e616ee227455249d718c364ea893a0565" translate="yes" xml:space="preserve">
          <source>atomic_singlethreadfence</source>
          <target state="translated">atomic_singlethreadfence</target>
        </trans-unit>
        <trans-unit id="87ccef509153b2c7cf2bcaec14ef3e970a6b8c61" translate="yes" xml:space="preserve">
          <source>atomic_singlethreadfence_acq</source>
          <target state="translated">atomic_singlethreadfence_acq</target>
        </trans-unit>
        <trans-unit id="39d057b02fa93bf82665f2f149584293cd5a4122" translate="yes" xml:space="preserve">
          <source>atomic_singlethreadfence_acqrel</source>
          <target state="translated">atomic_singlethreadfence_acqrel</target>
        </trans-unit>
        <trans-unit id="5fdc346ca47d82d04e3c64eefe6ba137818c6220" translate="yes" xml:space="preserve">
          <source>atomic_singlethreadfence_rel</source>
          <target state="translated">atomic_singlethreadfence_rel</target>
        </trans-unit>
        <trans-unit id="63c04c28b359fc9a0ca4534387e1f83968d8da32" translate="yes" xml:space="preserve">
          <source>atomic_store</source>
          <target state="translated">atomic_store</target>
        </trans-unit>
        <trans-unit id="27c86077fd4da1560f40136b258f928041d40a5f" translate="yes" xml:space="preserve">
          <source>atomic_store_rel</source>
          <target state="translated">atomic_store_rel</target>
        </trans-unit>
        <trans-unit id="c7764f18e1137ae7fb96284123e365d46d4f9bda" translate="yes" xml:space="preserve">
          <source>atomic_store_relaxed</source>
          <target state="translated">atomic_store_relaxed</target>
        </trans-unit>
        <trans-unit id="f41e186535e1f2ebbcda33c966898b245c64f018" translate="yes" xml:space="preserve">
          <source>atomic_store_unordered</source>
          <target state="translated">atomic_store_unordered</target>
        </trans-unit>
        <trans-unit id="f1ced68f117cf1ea333b931b45d9470a9616c41d" translate="yes" xml:space="preserve">
          <source>atomic_umax</source>
          <target state="translated">atomic_umax</target>
        </trans-unit>
        <trans-unit id="3a54c336ba7ab8976ff2aed8a57df05f179dd25f" translate="yes" xml:space="preserve">
          <source>atomic_umax_acq</source>
          <target state="translated">atomic_umax_acq</target>
        </trans-unit>
        <trans-unit id="9894844f615226283ed149ecac41adf9eb07e9c9" translate="yes" xml:space="preserve">
          <source>atomic_umax_acqrel</source>
          <target state="translated">atomic_umax_acqrel</target>
        </trans-unit>
        <trans-unit id="f45d429c13fa30031d0ecb1414fd02b0d1f6cf7c" translate="yes" xml:space="preserve">
          <source>atomic_umax_rel</source>
          <target state="translated">atomic_umax_rel</target>
        </trans-unit>
        <trans-unit id="75347128e86e7f78b8f666ef203fa8815562772e" translate="yes" xml:space="preserve">
          <source>atomic_umax_relaxed</source>
          <target state="translated">atomic_umax_relaxed</target>
        </trans-unit>
        <trans-unit id="8d472fe3b7c5a50d8f306956c47f74c0ada17389" translate="yes" xml:space="preserve">
          <source>atomic_umin</source>
          <target state="translated">atomic_umin</target>
        </trans-unit>
        <trans-unit id="303c2c703a7c2d77403388792c246cd299de6d28" translate="yes" xml:space="preserve">
          <source>atomic_umin_acq</source>
          <target state="translated">atomic_umin_acq</target>
        </trans-unit>
        <trans-unit id="c33d75f3bc6a3bfb02c3cd5754fe52b7b62121aa" translate="yes" xml:space="preserve">
          <source>atomic_umin_acqrel</source>
          <target state="translated">atomic_umin_acqrel</target>
        </trans-unit>
        <trans-unit id="0b52d55258efd4844745a82a52ef326d48bc4a19" translate="yes" xml:space="preserve">
          <source>atomic_umin_rel</source>
          <target state="translated">atomic_umin_rel</target>
        </trans-unit>
        <trans-unit id="40ca7a9e53239b5cea98faa05d56f43a973276d8" translate="yes" xml:space="preserve">
          <source>atomic_umin_relaxed</source>
          <target state="translated">atomic_umin_relaxed</target>
        </trans-unit>
        <trans-unit id="010c9e61b592e4aa96470cfed6810e483e91f397" translate="yes" xml:space="preserve">
          <source>atomic_xadd</source>
          <target state="translated">atomic_xadd</target>
        </trans-unit>
        <trans-unit id="b0a1162cfdb44e9015ba5f85e8607b0f340f3d35" translate="yes" xml:space="preserve">
          <source>atomic_xadd_acq</source>
          <target state="translated">atomic_xadd_acq</target>
        </trans-unit>
        <trans-unit id="d1ea5817e38c64c4d11b52f6d844a1e6526e4d70" translate="yes" xml:space="preserve">
          <source>atomic_xadd_acqrel</source>
          <target state="translated">atomic_xadd_acqrel</target>
        </trans-unit>
        <trans-unit id="f6a050a5eddc7190bcb02af73697eb27fe0da3b0" translate="yes" xml:space="preserve">
          <source>atomic_xadd_rel</source>
          <target state="translated">atomic_xadd_rel</target>
        </trans-unit>
        <trans-unit id="c3ecb275f808acbebba3cd75baf34ae1dff59610" translate="yes" xml:space="preserve">
          <source>atomic_xadd_relaxed</source>
          <target state="translated">atomic_xadd_relaxed</target>
        </trans-unit>
        <trans-unit id="85b2d7be037de3637eb80e9a13e99f013b831273" translate="yes" xml:space="preserve">
          <source>atomic_xchg</source>
          <target state="translated">atomic_xchg</target>
        </trans-unit>
        <trans-unit id="985da70057a2dd1776035394330de49f871fb0f6" translate="yes" xml:space="preserve">
          <source>atomic_xchg_acq</source>
          <target state="translated">atomic_xchg_acq</target>
        </trans-unit>
        <trans-unit id="52872ac23249ab02424df668b760616c9a66bf02" translate="yes" xml:space="preserve">
          <source>atomic_xchg_acqrel</source>
          <target state="translated">atomic_xchg_acqrel</target>
        </trans-unit>
        <trans-unit id="60d0a04cf6d8a1b601a5ffe7cffaa62d2380979f" translate="yes" xml:space="preserve">
          <source>atomic_xchg_rel</source>
          <target state="translated">atomic_xchg_rel</target>
        </trans-unit>
        <trans-unit id="0a9385153c61616343f84443f11e511b7f61943f" translate="yes" xml:space="preserve">
          <source>atomic_xchg_relaxed</source>
          <target state="translated">atomic_xchg_relaxed</target>
        </trans-unit>
        <trans-unit id="c504a3f42840e8856ab318cf4c98659d6fe00ca5" translate="yes" xml:space="preserve">
          <source>atomic_xor</source>
          <target state="translated">atomic_xor</target>
        </trans-unit>
        <trans-unit id="bb0db5dc6ead09667e004c9b52ee2cc678ba5003" translate="yes" xml:space="preserve">
          <source>atomic_xor_acq</source>
          <target state="translated">atomic_xor_acq</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
