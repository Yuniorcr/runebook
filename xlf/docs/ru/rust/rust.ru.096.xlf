<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="dece50724e4edf124dc2617f3c698042f7181b34" translate="yes" xml:space="preserve">
          <source>Returns a reference to the set's &lt;a href=&quot;../hash/trait.buildhasher&quot;&gt;&lt;code&gt;BuildHasher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Возвращает ссылку на &lt;a href=&quot;../hash/trait.buildhasher&quot;&gt; &lt;code&gt;BuildHasher&lt;/code&gt; набора&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35f18036de2695fa62066f314f3681a49bb59149" translate="yes" xml:space="preserve">
          <source>Returns a reference to the value corresponding to the key.</source>
          <target state="translated">Возвращает ссылку на значение,соответствующее клавише.</target>
        </trans-unit>
        <trans-unit id="61ce17752c7d89458074688adb31e8f74eea4ca8" translate="yes" xml:space="preserve">
          <source>Returns a reference to the value corresponding to the supplied key.</source>
          <target state="translated">Возвращает ссылку на значение,соответствующее входящему в комплект ключу.</target>
        </trans-unit>
        <trans-unit id="5f72652ea860b963f2ac002edd5a1205a675f449" translate="yes" xml:space="preserve">
          <source>Returns a reference to the value in the set, if any, that is equal to the given value.</source>
          <target state="translated">Возвращает ссылку на значение в наборе,если таковое имеется,которое равно заданному значению.</target>
        </trans-unit>
        <trans-unit id="7c578e07f9bf3c83ffc16fccef976404201e7244" translate="yes" xml:space="preserve">
          <source>Returns a reference to this entry's key.</source>
          <target state="translated">Возвращает ссылку на ключ этой записи.</target>
        </trans-unit>
        <trans-unit id="c0947f6d765b9790cfb2e1d70ab824963d68c638" translate="yes" xml:space="preserve">
          <source>Returns a shared reference to a slice of possibly uninitialized values. In contrast to &lt;a href=&quot;struct.nonnull#method.as_ref&quot;&gt;&lt;code&gt;as_ref&lt;/code&gt;&lt;/a&gt;, this does not require that the value has to be initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f8947e6907deb5ba3ddeed727c01f296e91a1f" translate="yes" xml:space="preserve">
          <source>Returns a shared reference to the output at this location, if in bounds.</source>
          <target state="translated">Возвращает общую ссылку на вывод в этом месте,если он находится в границах.</target>
        </trans-unit>
        <trans-unit id="93de4bcc1ba6b0ca2ed3fc7f14a57e1b6d3f7ce4" translate="yes" xml:space="preserve">
          <source>Returns a shared reference to the output at this location, if in bounds. &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает общую ссылку на вывод в этом месте, если в пределах. &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2d58db014fd693eae7717a18cea68cbc530762d" translate="yes" xml:space="preserve">
          <source>Returns a shared reference to the output at this location, if in bounds. &lt;a href=&quot;slice/trait.sliceindex#tymethod.get&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает общую ссылку на вывод в этом месте, если в пределах. &lt;a href=&quot;slice/trait.sliceindex#tymethod.get&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2cdbc5391bd7854eb309889aea6e6bb1f8ef8b6b" translate="yes" xml:space="preserve">
          <source>Returns a shared reference to the output at this location, panicking if out of bounds.</source>
          <target state="translated">Возвращает общую ссылку на выход в этом месте,паникуя при выходе за пределы.</target>
        </trans-unit>
        <trans-unit id="b17f6c6526e6e103f60d4b7c3bbd1e256600b42d" translate="yes" xml:space="preserve">
          <source>Returns a shared reference to the output at this location, panicking if out of bounds. &lt;a href=&quot;../slice/trait.sliceindex#tymethod.index&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает общую ссылку на вывод в этом месте, вызывая панику, если выходит за пределы. &lt;a href=&quot;../slice/trait.sliceindex#tymethod.index&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0a43be16a2bbc0e6ee1f56f3290c4ae6b1ebe15" translate="yes" xml:space="preserve">
          <source>Returns a shared reference to the output at this location, panicking if out of bounds. &lt;a href=&quot;slice/trait.sliceindex#tymethod.index&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает общую ссылку на вывод в этом месте, вызывая панику, если выходит за пределы. &lt;a href=&quot;slice/trait.sliceindex#tymethod.index&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be57635058209257653fd31f941c44abc414ea8b" translate="yes" xml:space="preserve">
          <source>Returns a shared reference to the output at this location, without performing any bounds checking.</source>
          <target state="translated">Возвращает общую ссылку на вывод в этом месте,без проверки границ.</target>
        </trans-unit>
        <trans-unit id="31a933bf8e55a23bb410928a4c16a2ac4cc4a584" translate="yes" xml:space="preserve">
          <source>Returns a shared reference to the output at this location, without performing any bounds checking. &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает общую ссылку на вывод в этом месте без проверки границ. &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="952d31c695546ae534a4e079717cacb6568932d2" translate="yes" xml:space="preserve">
          <source>Returns a shared reference to the output at this location, without performing any bounds checking. &lt;a href=&quot;slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает общую ссылку на вывод в этом месте без проверки границ. &lt;a href=&quot;slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1929f22fdf60b74aec3b9a745194a6996ae7c947" translate="yes" xml:space="preserve">
          <source>Returns a shared reference to the output at this location, without performing any bounds checking. Calling this method with an out-of-bounds index or a dangling &lt;code&gt;slice&lt;/code&gt; pointer is &lt;em&gt;&lt;a href=&quot;../../reference/behavior-considered-undefined&quot;&gt;undefined behavior&lt;/a&gt;&lt;/em&gt; even if the resulting reference is not used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ea288d4187d1393a8a3e6f602f3a3b3ba81437" translate="yes" xml:space="preserve">
          <source>Returns a shared reference to the output at this location, without performing any bounds checking. Calling this method with an out-of-bounds index or a dangling &lt;code&gt;slice&lt;/code&gt; pointer is &lt;em&gt;&lt;a href=&quot;../../reference/behavior-considered-undefined&quot;&gt;undefined behavior&lt;/a&gt;&lt;/em&gt; even if the resulting reference is not used. &lt;a href=&quot;../slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1814b31cca173ca894c9bd5668c14d62de58629" translate="yes" xml:space="preserve">
          <source>Returns a shared reference to the output at this location, without performing any bounds checking. Calling this method with an out-of-bounds index or a dangling &lt;code&gt;slice&lt;/code&gt; pointer is &lt;em&gt;&lt;a href=&quot;../reference/behavior-considered-undefined&quot;&gt;undefined behavior&lt;/a&gt;&lt;/em&gt; even if the resulting reference is not used. &lt;a href=&quot;slice/trait.sliceindex#tymethod.get_unchecked&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3597dbaf5ac85807e0958c18e68b68f05af1065f" translate="yes" xml:space="preserve">
          <source>Returns a shared reference to the value. If the value may be uninitialized, &lt;a href=&quot;struct.nonnull#method.as_uninit_ref&quot;&gt;&lt;code&gt;as_uninit_ref&lt;/code&gt;&lt;/a&gt; must be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81eff47718a7b0b97e212050214de1bb14c33e3a" translate="yes" xml:space="preserve">
          <source>Returns a shared references to the value. In contrast to &lt;a href=&quot;struct.nonnull#method.as_ref&quot;&gt;&lt;code&gt;as_ref&lt;/code&gt;&lt;/a&gt;, this does not require that the value has to be initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7666f9cdccf4d6760060654acc3ef8923e9036c6" translate="yes" xml:space="preserve">
          <source>Returns a slice containing the entire array. Equivalent to &lt;code&gt;&amp;amp;s[..]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1061e06f13d4042d1f8e7c939aa58825c6384a1" translate="yes" xml:space="preserve">
          <source>Returns a slice of &lt;a href=&quot;../primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt;s bytes that were attempted to convert to a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44eb1ef68a8662042cced0939b9d659bcc6c8d5f" translate="yes" xml:space="preserve">
          <source>Returns a slice of &lt;a href=&quot;../u8/index&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt;s bytes that were attempted to convert to a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">Возвращает часть байтов &lt;a href=&quot;../u8/index&quot;&gt; &lt;code&gt;u8&lt;/code&gt; &lt;/a&gt; s, которые пытались преобразовать в &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22b503d4b448c023e27d27c6187f255405bb064c" translate="yes" xml:space="preserve">
          <source>Returns a slice of the given string from the byte range [0, &lt;code&gt;end&lt;/code&gt;]. Equivalent to &lt;code&gt;&amp;amp;self [0 .. end + 1]&lt;/code&gt;, except if &lt;code&gt;end&lt;/code&gt; has the maximum value for &lt;code&gt;usize&lt;/code&gt;.</source>
          <target state="translated">Возвращает фрагмент данной строки из диапазона байтов [0, &lt;code&gt;end&lt;/code&gt; ]. Эквивалентно &lt;code&gt;&amp;amp;self [0 .. end + 1]&lt;/code&gt; , за исключением &lt;code&gt;usize&lt;/code&gt; , когда &lt;code&gt;end&lt;/code&gt; имеет максимальное значение для usize .</target>
        </trans-unit>
        <trans-unit id="af278f686afc7ff8b129683d6e7605bfecc35ee7" translate="yes" xml:space="preserve">
          <source>Returns a slice of the given string from the byte range [&lt;code&gt;0&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;). Equivalent to &lt;code&gt;&amp;amp;self[0 .. end]&lt;/code&gt; or &lt;code&gt;&amp;amp;mut self[0 .. end]&lt;/code&gt;.</source>
          <target state="translated">Возвращает фрагмент данной строки из диапазона байтов [ &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;end&lt;/code&gt; ). Эквивалентно &lt;code&gt;&amp;amp;self[0 .. end]&lt;/code&gt; или &lt;code&gt;&amp;amp;mut self[0 .. end]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07c7eb83cfb5fd997a3651ec5d8d16328aec6e3a" translate="yes" xml:space="preserve">
          <source>Returns a slice of the given string from the byte range [&lt;code&gt;begin&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;).</source>
          <target state="translated">Возвращает фрагмент данной строки из диапазона байтов [ &lt;code&gt;begin&lt;/code&gt; , &lt;code&gt;end&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="31f31221de37ed8461f757f045764361b7832af0" translate="yes" xml:space="preserve">
          <source>Returns a slice of the given string from the byte range [&lt;code&gt;begin&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;]. Equivalent to &lt;code&gt;&amp;amp;self [begin .. end + 1]&lt;/code&gt; or &lt;code&gt;&amp;amp;mut self[begin .. end + 1]&lt;/code&gt;, except if &lt;code&gt;end&lt;/code&gt; has the maximum value for &lt;code&gt;usize&lt;/code&gt;.</source>
          <target state="translated">Возвращает фрагмент данной строки из диапазона байтов [ &lt;code&gt;begin&lt;/code&gt; , &lt;code&gt;end&lt;/code&gt; ]. Эквивалентно &lt;code&gt;&amp;amp;self [begin .. end + 1]&lt;/code&gt; или &lt;code&gt;&amp;amp;mut self[begin .. end + 1]&lt;/code&gt; , за исключением случаев, когда &lt;code&gt;end&lt;/code&gt; имеет максимальное значение для &lt;code&gt;usize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0d81695d83412eacb487b5611c8b489fac79069" translate="yes" xml:space="preserve">
          <source>Returns a slice of the given string from the byte range [&lt;code&gt;begin&lt;/code&gt;, &lt;code&gt;len&lt;/code&gt;). Equivalent to &lt;code&gt;&amp;amp;self[begin .. len]&lt;/code&gt; or &lt;code&gt;&amp;amp;mut self[begin .. len]&lt;/code&gt;.</source>
          <target state="translated">Возвращает фрагмент данной строки из диапазона байтов [ &lt;code&gt;begin&lt;/code&gt; , &lt;code&gt;len&lt;/code&gt; ). Эквивалентно &lt;code&gt;&amp;amp;self[begin .. len]&lt;/code&gt; или &lt;code&gt;&amp;amp;mut self[begin .. len]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7bfcd7e6e6e7269b410064eb558a671e81852da8" translate="yes" xml:space="preserve">
          <source>Returns a slice of the whole string, i.e., returns &lt;code&gt;&amp;amp;self&lt;/code&gt; or &lt;code&gt;&amp;amp;mut self&lt;/code&gt;. Equivalent to &lt;code&gt;&amp;amp;self[0 .. len]&lt;/code&gt; or &lt;code&gt;&amp;amp;mut self[0 .. len]&lt;/code&gt;. Unlike other indexing operations, this can never panic.</source>
          <target state="translated">Возвращает часть всей строки, т. Е. Возвращает &lt;code&gt;&amp;amp;self&lt;/code&gt; или &lt;code&gt;&amp;amp;mut self&lt;/code&gt; . Эквивалентно &lt;code&gt;&amp;amp;self[0 .. len]&lt;/code&gt; или &lt;code&gt;&amp;amp;mut self[0 .. len]&lt;/code&gt; . В отличие от других операций индексации, здесь никогда не может возникнуть паника.</target>
        </trans-unit>
        <trans-unit id="0979f65b32f846ee33c6b8c126c9b12e4da36fa4" translate="yes" xml:space="preserve">
          <source>Returns a stack backtrace, if available, of where this error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f44a3b7b40ecdc28640d0daab4931c66241f2c" translate="yes" xml:space="preserve">
          <source>Returns a stack backtrace, if available, of where this error occurred. &lt;a href=&quot;../../error/trait.error#method.backtrace&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669f425b1ecbacf4cff8822e802cb44a3f97ea73" translate="yes" xml:space="preserve">
          <source>Returns a stack backtrace, if available, of where this error occurred. &lt;a href=&quot;../error/trait.error#method.backtrace&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c760e21ad7192f037c966d9ab64db5e3d6d008" translate="yes" xml:space="preserve">
          <source>Returns a stack backtrace, if available, of where this error occurred. &lt;a href=&quot;error/trait.error#method.backtrace&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420f6a9dff3ee8ecbacbf515b2e6673997025db0" translate="yes" xml:space="preserve">
          <source>Returns a string slice with all prefixes and suffixes that match a pattern repeatedly removed.</source>
          <target state="translated">Возвращает фрагмент строки со всеми префиксами и суффиксами,совпадающими с повторно удаленным шаблоном.</target>
        </trans-unit>
        <trans-unit id="980014da9d4afd3b18342acfd55958191adaf2b6" translate="yes" xml:space="preserve">
          <source>Returns a string slice with all prefixes that match a pattern repeatedly removed.</source>
          <target state="translated">Возвращает фрагмент строки со всеми повторно удаленными префиксами,совпадающими с шаблоном.</target>
        </trans-unit>
        <trans-unit id="039283810864d134ce4240f7b063192594a0f8e2" translate="yes" xml:space="preserve">
          <source>Returns a string slice with all suffixes that match a pattern repeatedly removed.</source>
          <target state="translated">Возвращает фрагмент строки со всеми суффиксами,совпадающими с повторно удаленным шаблоном.</target>
        </trans-unit>
        <trans-unit id="cc1ead3f82b6b4bba0690405bf42afb173cd680e" translate="yes" xml:space="preserve">
          <source>Returns a string slice with leading and trailing whitespace removed.</source>
          <target state="translated">Возвращает фрагмент строки с удаленными пробелами.</target>
        </trans-unit>
        <trans-unit id="d1d969e763b01659c9e0f2562957f41da16fc7b6" translate="yes" xml:space="preserve">
          <source>Returns a string slice with leading whitespace removed.</source>
          <target state="translated">Возвращает фрагмент строки с удалением лидирующего пробела.</target>
        </trans-unit>
        <trans-unit id="1942b734f18161dd297a5ab015faecb2072c5505" translate="yes" xml:space="preserve">
          <source>Returns a string slice with the prefix removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a462a0c325c1434c882107eef31908d1a6594fd2" translate="yes" xml:space="preserve">
          <source>Returns a string slice with the suffix removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb7534b612921bc5d37d2f12f238030785a865e" translate="yes" xml:space="preserve">
          <source>Returns a string slice with trailing whitespace removed.</source>
          <target state="translated">Возвращает фрагмент строки с удаленным пробелом.</target>
        </trans-unit>
        <trans-unit id="81b77bc3c84910e623a4fb65fd48ff2de71e8929" translate="yes" xml:space="preserve">
          <source>Returns a subslice of &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">Возвращает часть &lt;code&gt;str&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="261587a8aa248597385535f659d3b09dfd94d2f6" translate="yes" xml:space="preserve">
          <source>Returns a subslice with the prefix removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66fced37fb02263885bd4f20a034d7100381ecd4" translate="yes" xml:space="preserve">
          <source>Returns a subslice with the suffix removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ba97174531bb8cac8118239d545f0fa92eb915" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the absolute version of self along with a boolean indicating whether an overflow happened. If self is the minimum value (e.g., i128::MIN for values of type i128), then the minimum value will be returned again and true will be returned for an overflow happening.</source>
          <target state="translated">Возвращает кортеж абсолютной версии себя вместе с булеаном,указывающим,произошло ли переполнение.Если &quot;Я&quot; является минимальным значением (например,i128::MIN для значений типа i128),то при переполнении будет возвращено минимальное значение,а при переполнении будет возвращено значение true.</target>
        </trans-unit>
        <trans-unit id="0ef9cbecc90eb518fba672cfa286fa5ec8049834" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the absolute version of self along with a boolean indicating whether an overflow happened. If self is the minimum value (e.g., i16::MIN for values of type i16), then the minimum value will be returned again and true will be returned for an overflow happening.</source>
          <target state="translated">Возвращает кортеж абсолютной версии себя вместе с булеаном,указывающим,произошло ли переполнение.Если &quot;Я&quot; является минимальным значением (например,i16::MIN для значений типа i16),то при переполнении будет возвращено минимальное значение,а при переполнении будет возвращено значение true.</target>
        </trans-unit>
        <trans-unit id="84d1311a9c888a5575a8078554f7603080dd57b4" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the absolute version of self along with a boolean indicating whether an overflow happened. If self is the minimum value (e.g., i32::MIN for values of type i32), then the minimum value will be returned again and true will be returned for an overflow happening.</source>
          <target state="translated">Возвращает кортеж абсолютной версии себя вместе с булеаном,указывающим,произошло ли переполнение.Если &quot;Я&quot; является минимальным значением (например,i32::MIN для значений типа i32),то при переполнении будет возвращено минимальное значение,а при переполнении будет возвращено значение true.</target>
        </trans-unit>
        <trans-unit id="9f8f663d62e3a30335436813920eab27efddd5e6" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the absolute version of self along with a boolean indicating whether an overflow happened. If self is the minimum value (e.g., i64::MIN for values of type i64), then the minimum value will be returned again and true will be returned for an overflow happening.</source>
          <target state="translated">Возвращает кортеж абсолютной версии себя вместе с булеаном,указывающим,произошло ли переполнение.Если &quot;Я&quot; является минимальным значением (например,i64::MIN для значений типа i64),то при переполнении будет возвращено минимальное значение,а при переполнении-true.</target>
        </trans-unit>
        <trans-unit id="cf12ec09c781ab91cbe2240ac983cd6f0d70ccf6" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the absolute version of self along with a boolean indicating whether an overflow happened. If self is the minimum value (e.g., i8::MIN for values of type i8), then the minimum value will be returned again and true will be returned for an overflow happening.</source>
          <target state="translated">Возвращает кортеж абсолютной версии себя вместе с булеаном,указывающим,произошло ли переполнение.Если &quot;Я&quot; является минимальным значением (например,i8::MIN для значений типа i8),то при переполнении будет возвращено минимальное значение,а при переполнении будет возвращено значение true.</target>
        </trans-unit>
        <trans-unit id="4efaa7991b24f33d5e7edb255f8b412a6c7b5702" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the absolute version of self along with a boolean indicating whether an overflow happened. If self is the minimum value (e.g., isize::MIN for values of type isize), then the minimum value will be returned again and true will be returned for an overflow happening.</source>
          <target state="translated">Возвращает кортеж абсолютной версии себя вместе с булеаном,указывающим,произошло ли переполнение.Если &quot;Я&quot; является минимальным значением (например,isize::MIN для значений типа isize),то при переполнении будет возвращено минимальное значение,а при переполнении-true.</target>
        </trans-unit>
        <trans-unit id="59dd8c0fe803db35341730186a21c6d214329da5" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the addition along with a boolean indicating whether an arithmetic overflow would occur. If an overflow would have occurred then the wrapped value is returned.</source>
          <target state="translated">Возвращает кортеж сложения вместе с булевым ключом,указывающим на то,произойдет ли арифметическое переполнение.Если переполнение произошло,возвращается оберточное значение.</target>
        </trans-unit>
        <trans-unit id="0dbdce270e8e66fbf9cbfbabb278d01e32767580" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the divisor along with a boolean indicating whether an arithmetic overflow would occur. If an overflow would occur then &lt;code&gt;self&lt;/code&gt; is returned.</source>
          <target state="translated">Возвращает кортеж делителя вместе с логическим значением, указывающим, произойдет ли арифметическое переполнение. Если произойдет переполнение, возвращается &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11369bd897293356fd3694eb30c3e83f08b71fec" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the divisor along with a boolean indicating whether an arithmetic overflow would occur. If an overflow would occur then self is returned.</source>
          <target state="translated">Возвращает кортеж делителя вместе с булеаном,указывающим,произойдет ли арифметическое переполнение.Если переполнение произойдет,то возвращается самопереполнение.</target>
        </trans-unit>
        <trans-unit id="9f38e524ba004fb88941d625080bfd7308d8a499" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the divisor along with a boolean indicating whether an arithmetic overflow would occur. Note that for unsigned integers overflow never occurs, so the second value is always &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Возвращает кортеж делителя вместе с логическим значением, указывающим, произойдет ли арифметическое переполнение. Обратите внимание, что для целых чисел без знака переполнение никогда не происходит, поэтому второе значение всегда &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4443a61fa2f5b87aa7612b2a75ef9a94af14250e" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the divisor along with a boolean indicating whether an arithmetic overflow would occur. Note that for unsigned integers overflow never occurs, so the second value is always &lt;code&gt;false&lt;/code&gt;. Since, for the positive integers, all common definitions of division are equal, this is exactly equal to &lt;code&gt;self.overflowing_div(rhs)&lt;/code&gt;.</source>
          <target state="translated">Возвращает кортеж делителя вместе с логическим значением, указывающим, произойдет ли арифметическое переполнение. Обратите внимание, что для целых чисел без знака переполнение никогда не происходит, поэтому второе значение всегда &lt;code&gt;false&lt;/code&gt; . Поскольку для положительных целых чисел все общие определения деления равны, это в точности равно &lt;code&gt;self.overflowing_div(rhs)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d69e4a45ede04767d2977d6c5918b80d31a181f6" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the exponentiation along with a bool indicating whether an overflow happened.</source>
          <target state="translated">Возвращает кортеж выражения вместе с шерстью,указывающей на то,произошло ли переполнение.</target>
        </trans-unit>
        <trans-unit id="3f1629640656c78a241e905f371994eb3b55ceb5" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the modulo after dividing along with a boolean indicating whether an arithmetic overflow would occur. Note that for unsigned integers overflow never occurs, so the second value is always &lt;code&gt;false&lt;/code&gt;. Since, for the positive integers, all common definitions of division are equal, this operation is exactly equal to &lt;code&gt;self.overflowing_rem(rhs)&lt;/code&gt;.</source>
          <target state="translated">Возвращает кортеж по модулю после деления вместе с логическим значением, указывающим, произойдет ли арифметическое переполнение. Обратите внимание, что для целых чисел без знака переполнение никогда не происходит, поэтому второе значение всегда &lt;code&gt;false&lt;/code&gt; . Поскольку для положительных целых чисел все общие определения деления равны, эта операция в точности равна &lt;code&gt;self.overflowing_rem(rhs)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07d68ce27cc0ba3f9cbca341bb35a80695f8883c" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the multiplication along with a boolean indicating whether an arithmetic overflow would occur. If an overflow would have occurred then the wrapped value is returned.</source>
          <target state="translated">Возвращает кортеж умножения вместе с булевым ключом,указывающим,произойдет ли арифметическое переполнение.Если переполнение произошло,возвращается оберточное значение.</target>
        </trans-unit>
        <trans-unit id="dfb49fad89a04f5d4b53a938f48f61b854b18b22" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the negated version of self along with a boolean indicating whether an overflow happened. If &lt;code&gt;self&lt;/code&gt; is the minimum value (e.g., &lt;code&gt;i32::MIN&lt;/code&gt; for values of type &lt;code&gt;i32&lt;/code&gt;), then the minimum value will be returned again and &lt;code&gt;true&lt;/code&gt; will be returned for an overflow happening.</source>
          <target state="translated">Возвращает кортеж отрицательной версии self вместе с логическим значением, указывающим, произошло ли переполнение. Если &lt;code&gt;self&lt;/code&gt; является минимальным значением (например, &lt;code&gt;i32::MIN&lt;/code&gt; для значений типа &lt;code&gt;i32&lt;/code&gt; ), то минимальное значение будет возвращено снова, а значение &lt;code&gt;true&lt;/code&gt; будет возвращено в случае переполнения.</target>
        </trans-unit>
        <trans-unit id="4271befed43aeb1566e1f272c8d5a777da002f50" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the remainder after dividing along with a boolean indicating whether an arithmetic overflow would occur. If an overflow would occur then 0 is returned.</source>
          <target state="translated">Возвращает кортеж остатка после деления вместе с булеаном,указывающим на то,произойдет ли арифметическое переполнение.Если переполнение произойдет,возвращается 0.</target>
        </trans-unit>
        <trans-unit id="e2ef6c1d8bdb0df886d96bd0c22fc18d2c13384e" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the remainder after dividing along with a boolean indicating whether an arithmetic overflow would occur. Note that for unsigned integers overflow never occurs, so the second value is always &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Возвращает кортеж остатка после деления вместе с логическим значением, указывающим, произойдет ли арифметическое переполнение. Обратите внимание, что для целых чисел без знака переполнение никогда не происходит, поэтому второе значение всегда &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec8512fc04052542110f31bbf8113f0f2b90abc6" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the shifted version of self along with a boolean indicating whether the shift value was larger than or equal to the number of bits. If the shift value is too large, then value is masked (N-1) where N is the number of bits, and this value is then used to perform the shift.</source>
          <target state="translated">Возвращает кортеж смещенной версии себя вместе с булетом,указывающим,было ли значение сдвига больше или равно количеству бит.Если значение сдвига слишком велико,то значение маскируется (N-1),где N-количество бит,и это значение затем используется для выполнения сдвига.</target>
        </trans-unit>
        <trans-unit id="61bafd485f38be94c529599dbfa7cd24fe7df9bd" translate="yes" xml:space="preserve">
          <source>Returns a tuple of the subtraction along with a boolean indicating whether an arithmetic overflow would occur. If an overflow would have occurred then the wrapped value is returned.</source>
          <target state="translated">Возвращает кортеж вычитания вместе с булеаном,указывающим,произойдет ли арифметическое переполнение.Если переполнение произошло,возвращается оберточное значение.</target>
        </trans-unit>
        <trans-unit id="1e098023a3f3e6af430967c7dbeb65377161403c" translate="yes" xml:space="preserve">
          <source>Returns a unchecked subslice of &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">Возвращает непроверенный фрагмент &lt;code&gt;str&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef9f98f27b42563c97543634a12b64f33bfa5f70" translate="yes" xml:space="preserve">
          <source>Returns a unique reference to a slice of possibly uninitialized values. In contrast to &lt;a href=&quot;struct.nonnull#method.as_mut&quot;&gt;&lt;code&gt;as_mut&lt;/code&gt;&lt;/a&gt;, this does not require that the value has to be initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d2894c754150771b954429502fc876ab6dbda5" translate="yes" xml:space="preserve">
          <source>Returns a unique reference to the value. If the value may be uninitialized, &lt;a href=&quot;struct.nonnull#method.as_uninit_mut&quot;&gt;&lt;code&gt;as_uninit_mut&lt;/code&gt;&lt;/a&gt; must be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244ff0f82f8cfa9b95cdaeda37793decaca5e8bc" translate="yes" xml:space="preserve">
          <source>Returns a unique references to the value. In contrast to &lt;a href=&quot;struct.nonnull#method.as_mut&quot;&gt;&lt;code&gt;as_mut&lt;/code&gt;&lt;/a&gt;, this does not require that the value has to be initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4ac75b84447b2f55ac681a676dd755e28bd00b" translate="yes" xml:space="preserve">
          <source>Returns a value uniquely identifying the enum variant in &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">Возвращает значение, однозначно определяющее вариант перечисления в &lt;code&gt;v&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c107b29522a1553ef1280940263f855fa2f03a03" translate="yes" xml:space="preserve">
          <source>Returns a vector containing a copy of this slice where each byte is mapped to its ASCII lower case equivalent.</source>
          <target state="translated">Возвращает вектор,содержащий копию этого среза,где каждый байт отображается в его ASCII нижнем регистре эквивалента.</target>
        </trans-unit>
        <trans-unit id="ef4db92803f24a059e393cfe72fa73915c20bc66" translate="yes" xml:space="preserve">
          <source>Returns a vector containing a copy of this slice where each byte is mapped to its ASCII upper case equivalent.</source>
          <target state="translated">Возвращает вектор,содержащий копию этого среза,где каждый байт отображается в его ASCII верхнем регистре эквивалента.</target>
        </trans-unit>
        <trans-unit id="6dfb8615f54dd5d6f62139c95565431e0074052d" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;../result/enum.result#method.err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; if the current working directory value is invalid. Possible cases:</source>
          <target state="translated">Возвращает &lt;a href=&quot;../result/enum.result#method.err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; если текущее значение рабочего каталога недействительно. Возможные случаи:</target>
        </trans-unit>
        <trans-unit id="7a20d94971d324a1b84c0dc864e0c59f6ca57a5c" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;../result/enum.result#method.err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; if the operation fails.</source>
          <target state="translated">Возвращает &lt;a href=&quot;../result/enum.result#method.err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; ,&lt;/a&gt; если операция не удалась.</target>
        </trans-unit>
        <trans-unit id="e8b89311b1cb0b82e46e94d5aae1b3d5cebf9e72" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; (containing an error message) if one of the input &lt;a href=&quot;../path/struct.path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt;s contains an invalid character for constructing the &lt;code&gt;PATH&lt;/code&gt; variable (a double quote on Windows or a colon on Unix).</source>
          <target state="translated">Возвращает &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; &lt;/a&gt; (содержащий сообщение об ошибке), если один из входных &lt;a href=&quot;../path/struct.path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt; s содержит недопустимый символ для создания переменной &lt;code&gt;PATH&lt;/code&gt; (двойные кавычки в Windows или двоеточие в Unix).</target>
        </trans-unit>
        <trans-unit id="373e110866df99d3e187444ecd21b5ff6c618a92" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;earlier&lt;/code&gt; is later than &lt;code&gt;self&lt;/code&gt;, and the error contains how far from &lt;code&gt;self&lt;/code&gt; the time is.</source>
          <target state="translated">Возвращает &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; ,&lt;/a&gt; если &lt;code&gt;earlier&lt;/code&gt; - позже, чем &lt;code&gt;self&lt;/code&gt; , и ошибка содержит, насколько далеко от &lt;code&gt;self&lt;/code&gt; время.</target>
        </trans-unit>
        <trans-unit id="c48ce798f9242e3f2a8d0a2b9b44b86a41bc8c1d" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;self&lt;/code&gt; is later than the current system time, and the error contains how far from the current system time &lt;code&gt;self&lt;/code&gt; is.</source>
          <target state="translated">Возвращает &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt; &lt;code&gt;Err&lt;/code&gt; ,&lt;/a&gt; если &lt;code&gt;self&lt;/code&gt; позже текущего системного времени, а ошибка показывает, насколько далеко от текущего системного времени &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db6244889b6d941e0aca1580e76eb90b3a43477c" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; if the current working directory value is invalid. Possible cases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e47bb1dd675ed22c0629fc863673c6a62ddc399" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;../result/enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; if the operation fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95cff74ddc6172c2cd4568d37eeab9bccff1eb2e" translate="yes" xml:space="preserve">
          <source>Returns an RAII guard which will drop the write access of this rwlock when dropped.</source>
          <target state="translated">Возвращает RAII-защиту,которая при сбросе бросит доступ на запись этого rwlock.</target>
        </trans-unit>
        <trans-unit id="a9fdf27da6fadefd62b88fe8053ecd5a00c20e54" translate="yes" xml:space="preserve">
          <source>Returns an RAII guard which will release this thread's shared access once it is dropped.</source>
          <target state="translated">Возвращает RAII-защиту,которая освобождает разделяемый доступ этого потока после его сброса.</target>
        </trans-unit>
        <trans-unit id="4cbed6d494890da6258955257b9369051b09afc5" translate="yes" xml:space="preserve">
          <source>Returns an array of the same size as &lt;code&gt;self&lt;/code&gt;, with function &lt;code&gt;f&lt;/code&gt; applied to each element in order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020b9d5af51eba569bbc925d44bb0e3160010596" translate="yes" xml:space="preserve">
          <source>Returns an error if the combination of &lt;code&gt;self.size()&lt;/code&gt; and the given &lt;code&gt;align&lt;/code&gt; violates the conditions listed in &lt;a href=&quot;#method.from_size_align&quot;&gt;&lt;code&gt;Layout::from_size_align&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Возвращает ошибку, если комбинация &lt;code&gt;self.size()&lt;/code&gt; и заданного &lt;code&gt;align&lt;/code&gt; нарушает условия, перечисленные в &lt;a href=&quot;#method.from_size_align&quot;&gt; &lt;code&gt;Layout::from_size_align&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c5726a0e97de0cd04a6c00e08001ffb2b5f9460f" translate="yes" xml:space="preserve">
          <source>Returns an error if the combination of &lt;code&gt;self.size()&lt;/code&gt; and the given &lt;code&gt;align&lt;/code&gt; violates the conditions listed in &lt;a href=&quot;struct.layout#method.from_size_align&quot;&gt;&lt;code&gt;Layout::from_size_align&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7f977594f52ab07d1c45aaaac59c1ef1dc4e91" translate="yes" xml:space="preserve">
          <source>Returns an error representing the last OS error which occurred.</source>
          <target state="translated">Возвращает ошибку,представляющую собой последнюю возникшую ошибку операционной системы.</target>
        </trans-unit>
        <trans-unit id="f30c8b2834052b15e371ca8747c6001f2881df67" translate="yes" xml:space="preserve">
          <source>Returns an instant corresponding to &quot;now&quot;.</source>
          <target state="translated">Возвращает мгновение,соответствующее &quot;сейчас&quot;.</target>
        </trans-unit>
        <trans-unit id="9a053a3e1585aba7b1599c869217795cc01c0fb8" translate="yes" xml:space="preserve">
          <source>Returns an iterator of (variable, value) pairs of OS strings, for all the environment variables of the current process.</source>
          <target state="translated">Возвращает итератор (переменная,значение)пар строк ОС,для всех переменных окружения текущего процесса.</target>
        </trans-unit>
        <trans-unit id="e25e8078177c606576e0898539ea6d8e24127e28" translate="yes" xml:space="preserve">
          <source>Returns an iterator of (variable, value) pairs of strings, for all the environment variables of the current process.</source>
          <target state="translated">Возвращает итератор (переменная,значение)пар строк,для всех переменных окружения текущего процесса.</target>
        </trans-unit>
        <trans-unit id="247057ebddf83eff4b3b20eaaaf4114bf54858a4" translate="yes" xml:space="preserve">
          <source>Returns an iterator of &lt;code&gt;u16&lt;/code&gt; over the string encoded as UTF-16.</source>
          <target state="translated">Возвращает итератор &lt;code&gt;u16&lt;/code&gt; по строке, закодированной как UTF-16.</target>
        </trans-unit>
        <trans-unit id="076c9237ca205ebf9119e817f061ca9b503c18ea" translate="yes" xml:space="preserve">
          <source>Returns an iterator of the arguments that will be passed to the program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88562ae3f0505654487001a1363d48f7b2ddfc59" translate="yes" xml:space="preserve">
          <source>Returns an iterator of the environment variables that will be set when the process is spawned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae3ac3a3e2b7882fc60946a5a9736614bdf2126" translate="yes" xml:space="preserve">
          <source>Returns an iterator over &lt;code&gt;N&lt;/code&gt; elements of the slice at a time, starting at the beginning of the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6baf9442a871815e7290ee28048b1b256eed3d45" translate="yes" xml:space="preserve">
          <source>Returns an iterator over &lt;code&gt;chunk_size&lt;/code&gt; elements of the slice at a time, starting at the beginning of the slice.</source>
          <target state="translated">Возвращает итератор по элементам &lt;code&gt;chunk_size&lt;/code&gt; среза за раз, начиная с начала среза.</target>
        </trans-unit>
        <trans-unit id="ac210033f6163b4c59dcdeb70da06a7418e5d178" translate="yes" xml:space="preserve">
          <source>Returns an iterator over &lt;code&gt;chunk_size&lt;/code&gt; elements of the slice at a time, starting at the end of the slice.</source>
          <target state="translated">Возвращает итератор по элементам &lt;code&gt;chunk_size&lt;/code&gt; среза за раз, начиная с конца среза.</target>
        </trans-unit>
        <trans-unit id="7ac4217c749b69ae32a92850bccf52d96dd6e9d4" translate="yes" xml:space="preserve">
          <source>Returns an iterator over all contiguous windows of length &lt;code&gt;size&lt;/code&gt;. The windows overlap. If the slice is shorter than &lt;code&gt;size&lt;/code&gt;, the iterator returns no values.</source>
          <target state="translated">Возвращает итератор всех смежных окон длины &lt;code&gt;size&lt;/code&gt; . Окна перекрывают друг друга. Если срез короче &lt;code&gt;size&lt;/code&gt; , итератор не возвращает значений.</target>
        </trans-unit>
        <trans-unit id="50936352caab926e0bc77a354c5746a9c12cd9a2" translate="yes" xml:space="preserve">
          <source>Returns an iterator over incoming connections.</source>
          <target state="translated">Возвращает итератор по входящим соединениям.</target>
        </trans-unit>
        <trans-unit id="8ad9d6dcb8cdb0c514350a3f4db1fc6b8b636457" translate="yes" xml:space="preserve">
          <source>Returns an iterator over mutable subslices separated by elements that match &lt;code&gt;pred&lt;/code&gt;, starting at the end of the slice and working backwards. The matched element is not contained in the subslices.</source>
          <target state="translated">Возвращает итератор по изменяемым фрагментам, разделенным элементами, соответствующими &lt;code&gt;pred&lt;/code&gt; , начиная с конца фрагмента и работая в обратном направлении. Соответствующий элемент не содержится в фрагментах.</target>
        </trans-unit>
        <trans-unit id="1b04f9b4bc48e2e13a19ac46d2bea3ceee9a24dd" translate="yes" xml:space="preserve">
          <source>Returns an iterator over mutable subslices separated by elements that match &lt;code&gt;pred&lt;/code&gt;. The matched element is contained in the previous subslice as a terminator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b62aa387d52046d7046c34073b111aaa365aef" translate="yes" xml:space="preserve">
          <source>Returns an iterator over mutable subslices separated by elements that match &lt;code&gt;pred&lt;/code&gt;. The matched element is not contained in the subslices.</source>
          <target state="translated">Возвращает итератор по изменяемым фрагментам, разделенным элементами, соответствующими &lt;code&gt;pred&lt;/code&gt; . Соответствующий элемент не содержится в фрагментах.</target>
        </trans-unit>
        <trans-unit id="be0f12b0453a7a4054688e85c7cdfdca6739f312" translate="yes" xml:space="preserve">
          <source>Returns an iterator over overlapping windows of &lt;code&gt;N&lt;/code&gt; elements of a slice, starting at the beginning of the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7c693d847fbdd0dd2ca896c6a7d0b3f135cd1d" translate="yes" xml:space="preserve">
          <source>Returns an iterator over subslices separated by elements that match &lt;code&gt;pred&lt;/code&gt; limited to returning at most &lt;code&gt;n&lt;/code&gt; items. This starts at the end of the slice and works backwards. The matched element is not contained in the subslices.</source>
          <target state="translated">Возвращает итератор по фрагментам, разделенным элементами, соответствующими &lt;code&gt;pred&lt;/code&gt; , ограниченному возвратом не более &lt;code&gt;n&lt;/code&gt; элементов. Это начинается в конце среза и работает в обратном направлении. Соответствующий элемент не содержится в фрагментах.</target>
        </trans-unit>
        <trans-unit id="edd2514dccd050b0e5905bad3b6880fc3c3e2181" translate="yes" xml:space="preserve">
          <source>Returns an iterator over subslices separated by elements that match &lt;code&gt;pred&lt;/code&gt;, limited to returning at most &lt;code&gt;n&lt;/code&gt; items. The matched element is not contained in the subslices.</source>
          <target state="translated">Возвращает итератор по фрагментам, разделенным элементами, соответствующими &lt;code&gt;pred&lt;/code&gt; , с ограничением возврата не более &lt;code&gt;n&lt;/code&gt; элементов. Соответствующий элемент не содержится в фрагментах.</target>
        </trans-unit>
        <trans-unit id="1c8e0ec3ed8829e9047f36bd7165d37f5c165878" translate="yes" xml:space="preserve">
          <source>Returns an iterator over subslices separated by elements that match &lt;code&gt;pred&lt;/code&gt;, starting at the end of the slice and working backwards. The matched element is not contained in the subslices.</source>
          <target state="translated">Возвращает итератор для фрагментов, разделенных элементами, соответствующими &lt;code&gt;pred&lt;/code&gt; , начиная с конца фрагмента и работая в обратном направлении. Соответствующий элемент не содержится в фрагментах.</target>
        </trans-unit>
        <trans-unit id="bf63cad57ee4b19c96dbec9eadcc2cb161ae6306" translate="yes" xml:space="preserve">
          <source>Returns an iterator over subslices separated by elements that match &lt;code&gt;pred&lt;/code&gt;. The matched element is contained in the end of the previous subslice as a terminator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9db06e85eb6701d38e24ffb439a633ca798f41" translate="yes" xml:space="preserve">
          <source>Returns an iterator over subslices separated by elements that match &lt;code&gt;pred&lt;/code&gt;. The matched element is not contained in the subslices.</source>
          <target state="translated">Возвращает итератор по фрагментам, разделенным элементами, соответствующими &lt;code&gt;pred&lt;/code&gt; . Соответствующий элемент не содержится в фрагментах.</target>
        </trans-unit>
        <trans-unit id="d36486f406b473dc33d73a361e75f9cf3ab86b74" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the &lt;a href=&quot;../char/index&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s of a string slice, and their positions.</source>
          <target state="translated">Возвращает итератор по &lt;a href=&quot;../char/index&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; строкового среза и их позициям.</target>
        </trans-unit>
        <trans-unit id="9417890c966e0f0d0962e56d89d6248d17d37c0a" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the &lt;a href=&quot;../char/index&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s of a string slice.</source>
          <target state="translated">Возвращает итератор по &lt;a href=&quot;../char/index&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; строкового фрагмента.</target>
        </trans-unit>
        <trans-unit id="c0acdf4759cbfb6938592c6efd7e3af3c00b7af5" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s of a string slice, and their positions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2ad19ae83c5c8b371c8694c6082567e9e16f83" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s of a string slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ba409d8d6beebcaed217942f5177e69f432f70" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the &lt;a href=&quot;char/index&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s of a string slice, and their positions.</source>
          <target state="translated">Возвращает итератор по &lt;a href=&quot;char/index&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; строкового среза и их позициям.</target>
        </trans-unit>
        <trans-unit id="e33a8663319a18871e1867fafe98fea20d5aa109" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the &lt;a href=&quot;char/index&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s of a string slice.</source>
          <target state="translated">Возвращает итератор по &lt;a href=&quot;char/index&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; строкового фрагмента.</target>
        </trans-unit>
        <trans-unit id="b61a9fbc81e7f01ab80310b01e4aad6bf181877b" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the &lt;a href=&quot;primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s of a string slice, and their positions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e002cfdf9acee733b82da3da78f0bba0a013e71" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the &lt;a href=&quot;primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s of a string slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849a31488aba7f5571da35aafa813b5d464a0b58" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the connections being received on this listener.</source>
          <target state="translated">Возвращает итератор по полученным соединениям на этом слушателе.</target>
        </trans-unit>
        <trans-unit id="0349508461448572b1c1e2d50b60e5ba731e0289" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the contents of this reader split on the byte &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">Возвращает итератор по содержимому этого считывателя, разбитому на &lt;code&gt;byte&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e38dda8485223be700e220f20b0e95ffbc3ad8a" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the contents of this reader split on the byte &lt;code&gt;byte&lt;/code&gt;. &lt;a href=&quot;../io/trait.bufread#method.split&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает итератор по содержимому этого считывателя, разбитому на &lt;code&gt;byte&lt;/code&gt; . &lt;a href=&quot;../io/trait.bufread#method.split&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7c4192429b08bf6a76358519daf550cddf4ab24" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the contents of this reader split on the byte &lt;code&gt;byte&lt;/code&gt;. &lt;a href=&quot;io/trait.bufread#method.split&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает итератор по содержимому этого считывателя, разбитому на &lt;code&gt;byte&lt;/code&gt; . &lt;a href=&quot;io/trait.bufread#method.split&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7ba64409f531017f4a4ebefa4d07889cd000806" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the contents of this reader split on the byte &lt;code&gt;byte&lt;/code&gt;. &lt;a href=&quot;trait.bufread#method.split&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает итератор по содержимому этого считывателя, разбитому на &lt;code&gt;byte&lt;/code&gt; . &lt;a href=&quot;trait.bufread#method.split&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51728d0377e272ebc8c62acfa0b5cac3abf85569" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the entries within a directory.</source>
          <target state="translated">Возвращает итератор над записями в каталоге.</target>
        </trans-unit>
        <trans-unit id="12edc355bedc629fafba24dd5ad6f106b176e219" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the lines of this reader.</source>
          <target state="translated">Возвращает итератор по строкам этого считывателя.</target>
        </trans-unit>
        <trans-unit id="ab1d113856c89784544136051152bf6de2ab0f58" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the lines of this reader. &lt;a href=&quot;../io/trait.bufread#method.lines&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает итератор по строкам этого читателя. &lt;a href=&quot;../io/trait.bufread#method.lines&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28e779f957004a07fc5727e66ea59d26035e24ec" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the lines of this reader. &lt;a href=&quot;io/trait.bufread#method.lines&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает итератор по строкам этого читателя. &lt;a href=&quot;io/trait.bufread#method.lines&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4a602e126972a8e33b32be77e78c36c7d5c8c9b" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the lines of this reader. &lt;a href=&quot;trait.bufread#method.lines&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает итератор по строкам этого читателя. &lt;a href=&quot;trait.bufread#method.lines&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e5606a6b503376f209804e842371e1c682db76c" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the paths contained in &lt;code&gt;unparsed&lt;/code&gt;. The iterator element type is &lt;a href=&quot;../path/struct.pathbuf&quot;&gt;&lt;code&gt;PathBuf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Возвращает итератор по путям, содержащимся в &lt;code&gt;unparsed&lt;/code&gt; . Тип элемента итератора - &lt;a href=&quot;../path/struct.pathbuf&quot;&gt; &lt;code&gt;PathBuf&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6f95e738add79175ea891f02e0687a5cecd4cbfd" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the possibly contained value.</source>
          <target state="translated">Возвращает итератор над возможно содержащимся значением.</target>
        </trans-unit>
        <trans-unit id="18fccd3e050b3a0e06e03388f3ce8e23794d5d4d" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the slice.</source>
          <target state="translated">Возвращает итератор над куском.</target>
        </trans-unit>
        <trans-unit id="1594802bd5aaaf3676535a73c39aff6ba20a6b7d" translate="yes" xml:space="preserve">
          <source>Returns an iterator starting with the &lt;a href=&quot;trait.error#method.source&quot;&gt;&lt;code&gt;source&lt;/code&gt;&lt;/a&gt; of this error and continuing with recursively calling &lt;a href=&quot;trait.error#method.source&quot;&gt;&lt;code&gt;source&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Возвращает итератор, начиная с &lt;a href=&quot;trait.error#method.source&quot;&gt; &lt;code&gt;source&lt;/code&gt; &lt;/a&gt; этой ошибки и продолжая рекурсивно вызывающим &lt;a href=&quot;trait.error#method.source&quot;&gt; &lt;code&gt;source&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6d23d264fba3071629543adafba65440597f6db4" translate="yes" xml:space="preserve">
          <source>Returns an iterator starting with the current error and continuing with recursively calling &lt;a href=&quot;trait.error#method.source&quot;&gt;&lt;code&gt;Error::source&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb94e28e9e088e132328a74404acfbcfac0c432" translate="yes" xml:space="preserve">
          <source>Returns an iterator starting with the current error and continuing with recursively calling &lt;a href=&quot;trait.error#method.source&quot;&gt;&lt;code&gt;source&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Возвращает итератор, начиная с текущей ошибки и продолжая рекурсивно вызывать &lt;a href=&quot;trait.error#method.source&quot;&gt; &lt;code&gt;source&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4851e64bc4d8838473b54e2328eb8aa858fd3146" translate="yes" xml:space="preserve">
          <source>Returns an iterator that allows modifying each value.</source>
          <target state="translated">Возвращает итератор,позволяющий изменять каждое значение.</target>
        </trans-unit>
        <trans-unit id="6165b1f89d15e2d87e8a02f8998b8b57ba33a883" translate="yes" xml:space="preserve">
          <source>Returns an iterator that produces an escaped version of a &lt;code&gt;u8&lt;/code&gt;.</source>
          <target state="translated">Возвращает итератор, который создает экранированную версию &lt;code&gt;u8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66c3ffdb499d48e13a2444141e615b0baee436da" translate="yes" xml:space="preserve">
          <source>Returns an iterator that will attempt to yield all pending values. It will return &lt;code&gt;None&lt;/code&gt; if there are no more pending values or if the channel has hung up. The iterator will never &lt;a href=&quot;../../macro.panic&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt; or block the user by waiting for values.</source>
          <target state="translated">Возвращает итератор, который попытается получить все ожидающие значения. Он вернет &lt;code&gt;None&lt;/code&gt; , если больше нет ожидающих значений или если канал завис. Итератор никогда не &lt;a href=&quot;../../macro.panic&quot;&gt; &lt;code&gt;panic!&lt;/code&gt; &lt;/a&gt;или заблокируйте пользователя, дождавшись значений.</target>
        </trans-unit>
        <trans-unit id="4682d4884fb770f6b1fa9e75aa39e6906a463b2b" translate="yes" xml:space="preserve">
          <source>Returns an iterator that will block waiting for messages, but never &lt;a href=&quot;../../macro.panic&quot;&gt;&lt;code&gt;panic!&lt;/code&gt;&lt;/a&gt;. It will return &lt;a href=&quot;../../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; when the channel has hung up.</source>
          <target state="translated">Возвращает итератор, который блокирует ожидание сообщений, но не &lt;a href=&quot;../../macro.panic&quot;&gt; &lt;code&gt;panic!&lt;/code&gt; &lt;/a&gt;. Он вернет &lt;a href=&quot;../../option/enum.option#variant.None&quot;&gt; &lt;code&gt;None&lt;/code&gt; ,&lt;/a&gt; когда канал повесит трубку.</target>
        </trans-unit>
        <trans-unit id="4280940f4f0f0e6f02d9ac45aa9ce82f3f2e20ef" translate="yes" xml:space="preserve">
          <source>Returns an iterator that yields the hexadecimal Unicode escape of a character as &lt;code&gt;char&lt;/code&gt;s.</source>
          <target state="translated">Возвращает итератор, который выдает шестнадцатеричный escape-код символа Unicode в виде &lt;code&gt;char&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="813348b78567444ee77ef012f8655d23137e6a0d" translate="yes" xml:space="preserve">
          <source>Returns an iterator that yields the hexadecimal Unicode escape of a character, as &lt;code&gt;char&lt;/code&gt;s.</source>
          <target state="translated">Возвращает итератор, который выдает шестнадцатеричный escape-код символа Unicode в виде &lt;code&gt;char&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d03c7b9a6762181b8873677546e063a9dfbfc9ee" translate="yes" xml:space="preserve">
          <source>Returns an iterator that yields the literal escape code of a character as &lt;code&gt;char&lt;/code&gt;s.</source>
          <target state="translated">Возвращает итератор, который выдает буквальный escape-код символа как &lt;code&gt;char&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="e6e91fa4ab13bbbd7a3c244ee7bd90a4ad8e16fe" translate="yes" xml:space="preserve">
          <source>Returns an iterator that yields the lowercase equivalent of a &lt;code&gt;char&lt;/code&gt; as one or more &lt;code&gt;char&lt;/code&gt;s.</source>
          <target state="translated">Возвращает итератор, который выдает строчный эквивалент &lt;code&gt;char&lt;/code&gt; как один или несколько &lt;code&gt;char&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4a91949ae7ce7914d7bef77b5dc7e9be6aeeb6e" translate="yes" xml:space="preserve">
          <source>Returns an iterator that yields the lowercase equivalent of a &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">Возвращает итератор, который возвращает строчный эквивалент &lt;code&gt;char&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c9ab7b38309797dbd3e2849852f4bee2ac6ca87" translate="yes" xml:space="preserve">
          <source>Returns an iterator that yields the lowercase mapping of this &lt;code&gt;char&lt;/code&gt; as one or more &lt;code&gt;char&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0934e984e141606e695d246d51b20e445de4cfec" translate="yes" xml:space="preserve">
          <source>Returns an iterator that yields the uppercase equivalent of a &lt;code&gt;char&lt;/code&gt; as one or more &lt;code&gt;char&lt;/code&gt;s.</source>
          <target state="translated">Возвращает итератор, который возвращает эквивалент &lt;code&gt;char&lt;/code&gt; в верхнем регистре в виде одного или нескольких &lt;code&gt;char&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="254ac0632014dd7578231a6fca1ad17edbb45a82" translate="yes" xml:space="preserve">
          <source>Returns an iterator that yields the uppercase equivalent of a &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">Возвращает итератор, который возвращает заглавный эквивалент &lt;code&gt;char&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="381f690c48540c97f6b4c0ba5a2096f7a487f1ea" translate="yes" xml:space="preserve">
          <source>Returns an iterator that yields the uppercase mapping of this &lt;code&gt;char&lt;/code&gt; as one or more &lt;code&gt;char&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdfb9de890a6db4f8ddbb9964e35270ea2d75e61" translate="yes" xml:space="preserve">
          <source>Returns an iterator visiting all values in the underlying vector, in arbitrary order.</source>
          <target state="translated">Возвращает итератор,посещающий все значения в базовом векторе,в произвольном порядке.</target>
        </trans-unit>
        <trans-unit id="3b7ca17c419d4e04d77b7eac6cec09617cd9d6a5" translate="yes" xml:space="preserve">
          <source>Returns an iterator which retrieves elements in heap order. The retrieved elements are removed from the original heap. The remaining elements will be removed on drop in heap order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4186db81fc3d1acabe867aa31f89cd9b264b5e" translate="yes" xml:space="preserve">
          <source>Returns an iterator which retrieves elements in heap order. This method consumes the original heap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1115d595b6d23b56167cf6ed9d08d3f39bda01c1" translate="yes" xml:space="preserve">
          <source>Returns an object that implements &lt;a href=&quot;../fmt/trait.display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt; for safely printing paths that may contain non-Unicode data.</source>
          <target state="translated">Возвращает объект, реализующий &lt;a href=&quot;../fmt/trait.display&quot;&gt; &lt;code&gt;Display&lt;/code&gt; &lt;/a&gt; для безопасной печати путей, которые могут содержать данные не в Юникоде.</target>
        </trans-unit>
        <trans-unit id="c05520652bcee974384f475439aa3d0116360833" translate="yes" xml:space="preserve">
          <source>Returns an ordering between self and other values. Unlike the standard partial comparison between floating point numbers, this comparison always produces an ordering in accordance to the totalOrder predicate as defined in IEEE 754 (2008 revision) floating point standard. The values are ordered in following order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3b225d9f4292fd796295fe364d278588606fa1" translate="yes" xml:space="preserve">
          <source>Returns an unchecked subslice of &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8424328b2c0ea6b4bc96e4902f3d72b26167a93f" translate="yes" xml:space="preserve">
          <source>Returns an unsafe mutable pointer to the slice's buffer.</source>
          <target state="translated">Возвращает небезопасный мутирующий указатель на буфер среза.</target>
        </trans-unit>
        <trans-unit id="9639d436527ca6fd0746cddd4d6afa65ce8dff2e" translate="yes" xml:space="preserve">
          <source>Returns an unsafe mutable pointer to the vector's buffer.</source>
          <target state="translated">Возвращает небезопасный мутирующий указатель на буфер вектора.</target>
        </trans-unit>
        <trans-unit id="ab37d192cc7814f6bce29dc83adbf8d5a76ea284" translate="yes" xml:space="preserve">
          <source>Returns bounds on the guaranteed usable size of a successful allocation created with the specified &lt;code&gt;layout&lt;/code&gt;.</source>
          <target state="translated">Возвращает границы гарантированного полезного размера успешного выделения, созданного с помощью указанного &lt;code&gt;layout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="beb648e26f5067f6d4a371930482229935c56ce5" translate="yes" xml:space="preserve">
          <source>Returns bounds on the guaranteed usable size of a successful allocation created with the specified &lt;code&gt;layout&lt;/code&gt;. &lt;a href=&quot;trait.alloc#method.usable_size&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает границы гарантированного полезного размера успешного выделения, созданного с помощью указанного &lt;code&gt;layout&lt;/code&gt; . &lt;a href=&quot;trait.alloc#method.usable_size&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09339fcc5c1cf441a03eada0ea568712800819cd" translate="yes" xml:space="preserve">
          <source>Returns information about the location from which the panic originated, if available.</source>
          <target state="translated">Возвращает информацию о месте,откуда возникла паника,если она доступна.</target>
        </trans-unit>
        <trans-unit id="cdb816999f218ce7e546de3af95b92d8a7c599a6" translate="yes" xml:space="preserve">
          <source>Returns null if the new layout does not meet the size and alignment constraints of the allocator, or if reallocation otherwise fails.</source>
          <target state="translated">Возвращает ноль,если новая компоновка не соответствует ограничениям по размеру и выравниванию аллокатора,или если перераспределение иначе не удается.</target>
        </trans-unit>
        <trans-unit id="2fb446ab4111a8f49d1f02f0c424fe689d95c3ae" translate="yes" xml:space="preserve">
          <source>Returns some mutable reference to the boxed value if it is of type &lt;code&gt;T&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if it isn't.</source>
          <target state="translated">Возвращает некоторую изменяемую ссылку на упакованное значение, если оно имеет тип &lt;code&gt;T&lt;/code&gt; , или &lt;code&gt;None&lt;/code&gt; , если это не так.</target>
        </trans-unit>
        <trans-unit id="13e96eae6e903cdcb6d1b5462654d27e42a505d0" translate="yes" xml:space="preserve">
          <source>Returns some reference to the boxed value if it is of type &lt;code&gt;T&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if it isn't.</source>
          <target state="translated">Возвращает некоторую ссылку на упакованное значение, если оно имеет тип &lt;code&gt;T&lt;/code&gt; , или &lt;code&gt;None&lt;/code&gt; , если это не так.</target>
        </trans-unit>
        <trans-unit id="d5ef247ee4a2dc767900e749e063bf9f2e8e9def" translate="yes" xml:space="preserve">
          <source>Returns the &quot;default value&quot; for a type.</source>
          <target state="translated">Возвращает &quot;значение по умолчанию&quot; для типа.</target>
        </trans-unit>
        <trans-unit id="219eb79f30a54a3aa6ac9fe06335a59bb87e81c1" translate="yes" xml:space="preserve">
          <source>Returns the &quot;default value&quot; for a type. &lt;a href=&quot;../../default/trait.default#tymethod.default&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает &amp;laquo;значение по умолчанию&amp;raquo; для типа. &lt;a href=&quot;../../default/trait.default#tymethod.default&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a36938a5ee181764693fc7c15fc4863dc2fe541" translate="yes" xml:space="preserve">
          <source>Returns the &quot;default value&quot; for a type. &lt;a href=&quot;../default/trait.default#tymethod.default&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает &amp;laquo;значение по умолчанию&amp;raquo; для типа. &lt;a href=&quot;../default/trait.default#tymethod.default&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="26ea23d4c7cb1f4d9bf3bac525a510cd3277dd46" translate="yes" xml:space="preserve">
          <source>Returns the &quot;default value&quot; for a type. &lt;a href=&quot;default/trait.default#tymethod.default&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает &amp;laquo;значение по умолчанию&amp;raquo; для типа. &lt;a href=&quot;default/trait.default#tymethod.default&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc955bb6b9a2c0f29df1c361d5188b4d96d42d51" translate="yes" xml:space="preserve">
          <source>Returns the &quot;preferred&quot; block size for efficient filesystem I/O.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a224f49d34a31d2e0d198382b6b031be6f7e34" translate="yes" xml:space="preserve">
          <source>Returns the &quot;preferred&quot; block size for efficient filesystem I/O. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_blksize&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b71f2077d2e85b8377bd061f49e611107b2597b" translate="yes" xml:space="preserve">
          <source>Returns the &quot;preferred&quot; blocksize for efficient filesystem I/O.</source>
          <target state="translated">Возвращает &quot;предпочтительный&quot; размер блока для эффективного ввода/вывода файловой системы.</target>
        </trans-unit>
        <trans-unit id="0c29305496c3dae0c61b65649a23b58121844936" translate="yes" xml:space="preserve">
          <source>Returns the &quot;preferred&quot; blocksize for efficient filesystem I/O. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_blksize&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает &quot;предпочтительный&quot; размер блока для эффективного ввода-вывода файловой системы. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_blksize&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1df42ce2eaccc57d53888b46f1690ad5d3d54928" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://en.wikipedia.org/wiki/Application_binary_interface&quot;&gt;ABI&lt;/a&gt;-required minimum alignment of a type.</source>
          <target state="translated">Возвращает минимальное выравнивание типа, необходимое для &lt;a href=&quot;https://en.wikipedia.org/wiki/Application_binary_interface&quot;&gt;ABI&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="614107b05a25408c530f63c119c74cd92f18d680" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://en.wikipedia.org/wiki/Application_binary_interface&quot;&gt;ABI&lt;/a&gt;-required minimum alignment of the type of the value that &lt;code&gt;val&lt;/code&gt; points to.</source>
          <target state="translated">Возвращает требуемое &lt;a href=&quot;https://en.wikipedia.org/wiki/Application_binary_interface&quot;&gt;ABI&lt;/a&gt; минимальное выравнивание типа значения, на которое указывает &lt;code&gt;val&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dbcbffb6d76c00bc89b9e6b9b51beb3583180780" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Path&lt;/code&gt; without its final component, if there is one.</source>
          <target state="translated">Возвращает &lt;code&gt;Path&lt;/code&gt; без его последнего компонента, если он есть.</target>
        </trans-unit>
        <trans-unit id="95be32511f736db34a1c00ce5065db4c3d900739" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;TypeId&lt;/code&gt; of the type this generic function has been instantiated with.</source>
          <target state="translated">Возвращает &lt;code&gt;TypeId&lt;/code&gt; типа, с которым была создана эта универсальная функция.</target>
        </trans-unit>
        <trans-unit id="3673c8de07862b13c8a63169ef2c2ea3946e62ce" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;n&lt;/code&gt;th element from the end of the iterator.</source>
          <target state="translated">Возвращает &lt;code&gt;n&lt;/code&gt; - й элемент с конца итератора.</target>
        </trans-unit>
        <trans-unit id="0fb8da54ddca5d7e4dd77a2f17080dab3d0da011" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;n&lt;/code&gt;th element from the end of the iterator. &lt;a href=&quot;../../iter/trait.doubleendediterator#method.nth_back&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает &lt;code&gt;n&lt;/code&gt; - й элемент с конца итератора. &lt;a href=&quot;../../iter/trait.doubleendediterator#method.nth_back&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d100ce5589542ca940be1976bd5873a4f885c2a" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;n&lt;/code&gt;th element from the end of the iterator. &lt;a href=&quot;../iter/trait.doubleendediterator#method.nth_back&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает &lt;code&gt;n&lt;/code&gt; - й элемент с конца итератора. &lt;a href=&quot;../iter/trait.doubleendediterator#method.nth_back&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38ef14d37b67e942e2153f5c9d696c3418ebb368" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;n&lt;/code&gt;th element from the end of the iterator. &lt;a href=&quot;iter/trait.doubleendediterator#method.nth_back&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает &lt;code&gt;n&lt;/code&gt; - й элемент с конца итератора. &lt;a href=&quot;iter/trait.doubleendediterator#method.nth_back&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="58ca0a7a5ea51c978b54d16bf5bd591fb190a5fe" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;n&lt;/code&gt;th element from the end of the iterator. &lt;a href=&quot;trait.doubleendediterator#method.nth_back&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает &lt;code&gt;n&lt;/code&gt; - й элемент с конца итератора. &lt;a href=&quot;trait.doubleendediterator#method.nth_back&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14e269878aad58bfba0f8a6b9a5d62a272706507" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;n&lt;/code&gt;th element of the iterator.</source>
          <target state="translated">Возвращает &lt;code&gt;n&lt;/code&gt; - й элемент итератора.</target>
        </trans-unit>
        <trans-unit id="b9033512050d13ee4fd6379769391e49de67e8a0" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;n&lt;/code&gt;th element of the iterator. &lt;a href=&quot;../../../iter/trait.iterator#method.nth&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает &lt;code&gt;n&lt;/code&gt; - й элемент итератора. &lt;a href=&quot;../../../iter/trait.iterator#method.nth&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="18689ac1d66567743c12371477712deb272ddff6" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;n&lt;/code&gt;th element of the iterator. &lt;a href=&quot;../../iter/trait.iterator#method.nth&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает &lt;code&gt;n&lt;/code&gt; - й элемент итератора. &lt;a href=&quot;../../iter/trait.iterator#method.nth&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77dd18914e5d697fcef45b39830d0a4287533017" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;n&lt;/code&gt;th element of the iterator. &lt;a href=&quot;../iter/trait.iterator#method.nth&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает &lt;code&gt;n&lt;/code&gt; - й элемент итератора. &lt;a href=&quot;../iter/trait.iterator#method.nth&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f21157c3f7a41ca454f82ba07d4877e4e38fc48" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;n&lt;/code&gt;th element of the iterator. &lt;a href=&quot;iter/trait.iterator#method.nth&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает &lt;code&gt;n&lt;/code&gt; - й элемент итератора. &lt;a href=&quot;iter/trait.iterator#method.nth&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e55a448e57797917ffc9942478894a44fc7c5bea" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;n&lt;/code&gt;th element of the iterator. &lt;a href=&quot;trait.iterator#method.nth&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает &lt;code&gt;n&lt;/code&gt; - й элемент итератора. &lt;a href=&quot;trait.iterator#method.nth&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="460ca8fe4283e5e27aa6b84168d1789b45971471" translate="yes" xml:space="preserve">
          <source>Returns the ID of the device containing the file.</source>
          <target state="translated">Возвращает идентификатор устройства,содержащего файл.</target>
        </trans-unit>
        <trans-unit id="390b0b5c091fdc42b36c6c1a6468dfd2992db22c" translate="yes" xml:space="preserve">
          <source>Returns the ID of the device containing the file. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.dev&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает идентификатор устройства, на котором находится файл. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.dev&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a836ea954851ab388f8e87a14fae0a9de53bc224" translate="yes" xml:space="preserve">
          <source>Returns the IP address associated with this socket address.</source>
          <target state="translated">Возвращает IP-адрес,связанный с этим адресом сокета.</target>
        </trans-unit>
        <trans-unit id="4cd21405eac57719d505795085caf6e1f1cbb2ff" translate="yes" xml:space="preserve">
          <source>Returns the OS error that this error represents (if any).</source>
          <target state="translated">Возвращает ошибку операционной системы,которую эта ошибка представляет (если таковая имеется).</target>
        </trans-unit>
        <trans-unit id="00c287196a9bc77774ec1ee000e67c43c9ddee81" translate="yes" xml:space="preserve">
          <source>Returns the OS-assigned process identifier associated with this child.</source>
          <target state="translated">Возвращает идентификатор процесса,назначенный операционной системой и связанный с этим дочерним процессом.</target>
        </trans-unit>
        <trans-unit id="af01d0b295d0e18424cfa1df98f194156ee4be60" translate="yes" xml:space="preserve">
          <source>Returns the OS-assigned process identifier associated with this process's parent.</source>
          <target state="translated">Возвращает идентификатор процесса,назначенного операционной системой и связанного с родителем этого процесса.</target>
        </trans-unit>
        <trans-unit id="d2642c21b17ad0bbc68b66a3f6af93dcd035e754" translate="yes" xml:space="preserve">
          <source>Returns the OS-assigned process identifier associated with this process.</source>
          <target state="translated">Возвращает идентификатор процесса,связанного с этим процессом.</target>
        </trans-unit>
        <trans-unit id="7f153b8459edfc5a0116cdf6d7bab65fb3039366" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of an &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="translated">Возвращает абсолютное значение &lt;code&gt;f32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95dfcf5e56a7c2e226404c8515fc2a003c87d1b1" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of an &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">Возвращает абсолютное значение &lt;code&gt;f64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b47d10077be98d2837baa6f429539b4ba07be79" translate="yes" xml:space="preserve">
          <source>Returns the address of this socket's peer.</source>
          <target state="translated">Возвращает адрес пэра этого сокета.</target>
        </trans-unit>
        <trans-unit id="1096db2ef0d57868e6fc5de2530c28afaab9c5c4" translate="yes" xml:space="preserve">
          <source>Returns the address of this socket.</source>
          <target state="translated">Возвращает адрес этого разъема.</target>
        </trans-unit>
        <trans-unit id="f68892931676b291794ef02d77f7452d92d980e3" translate="yes" xml:space="preserve">
          <source>Returns the address's multicast scope if the address is multicast.</source>
          <target state="translated">Возвращает многоадресный scope адреса,если адрес многоадресный.</target>
        </trans-unit>
        <trans-unit id="571a27f18f24855498fe4bc29f0edc5098eb7508" translate="yes" xml:space="preserve">
          <source>Returns the amount of padding we must insert after &lt;code&gt;self&lt;/code&gt; to ensure that the following address will satisfy &lt;code&gt;align&lt;/code&gt; (measured in bytes).</source>
          <target state="translated">Возвращает величину заполнения, которую мы должны вставить после &lt;code&gt;self&lt;/code&gt; , чтобы гарантировать, что следующий адрес будет соответствовать параметру &lt;code&gt;align&lt;/code&gt; (измеряется в байтах).</target>
        </trans-unit>
        <trans-unit id="83f57dc9849811be04d028f0498d59905edc2d8c" translate="yes" xml:space="preserve">
          <source>Returns the amount of time elapsed from an earlier point in time.</source>
          <target state="translated">Возвращает количество времени,прошедшего с более ранней точки.</target>
        </trans-unit>
        <trans-unit id="661f516e7ce38ed44d8bed6493a9d9f2fa25da91" translate="yes" xml:space="preserve">
          <source>Returns the amount of time elapsed from another instant to this one, or None if that instant is earlier than this one.</source>
          <target state="translated">Возвращает количество времени,прошедшего с другого момента,на этот момент,или Нет,если этот момент раньше этого.</target>
        </trans-unit>
        <trans-unit id="ea5b1537a461194a8a8070b9f16e33cf940fbf4b" translate="yes" xml:space="preserve">
          <source>Returns the amount of time elapsed from another instant to this one, or None if that instant is later than this one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6648173167bfd6e04de078f1133974688e8e73d5" translate="yes" xml:space="preserve">
          <source>Returns the amount of time elapsed from another instant to this one, or zero duration if that instant is earlier than this one.</source>
          <target state="translated">Возвращает количество времени,прошедшего с другого момента до этого момента,или нулевую продолжительность,если этот момент раньше этого.</target>
        </trans-unit>
        <trans-unit id="ebbde0901130c337b5daccbbe55bba4893561a1a" translate="yes" xml:space="preserve">
          <source>Returns the amount of time elapsed from another instant to this one, or zero duration if that instant is later than this one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481ac3655a5f50eefcf07bd434a47b2156a2b005" translate="yes" xml:space="preserve">
          <source>Returns the amount of time elapsed from another instant to this one.</source>
          <target state="translated">Возвращает количество времени,прошедшего с другого момента до этого.</target>
        </trans-unit>
        <trans-unit id="a5e6b1a067c8544d3444c8c0c62e8c7492579150" translate="yes" xml:space="preserve">
          <source>Returns the amount of time elapsed since this instant was created.</source>
          <target state="translated">Возвращает количество времени,прошедшего с момента создания этого момента.</target>
        </trans-unit>
        <trans-unit id="4c335823604c40ba9a05d70db0422f547fa50030" translate="yes" xml:space="preserve">
          <source>Returns the amount of time elapsed since this system time was created.</source>
          <target state="translated">Возвращает время,прошедшее с момента создания этой системы.</target>
        </trans-unit>
        <trans-unit id="9c7b60f00593f18e99c03513fef76bfdb8651c3a" translate="yes" xml:space="preserve">
          <source>Returns the arguments that this program was started with (normally passed via the command line).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddd2de90acb530a0cd14a32cb480accd0e13dad" translate="yes" xml:space="preserve">
          <source>Returns the arguments which this program was started with (normally passed via the command line).</source>
          <target state="translated">Возвращает аргументы,с которыми эта программа была запущена (обычно передаваемые через командную строку).</target>
        </trans-unit>
        <trans-unit id="db2a0c893c8bdbce488ae7385c9b4f666ffeb5df" translate="yes" xml:space="preserve">
          <source>Returns the bare file name of this directory entry without any other leading path component.</source>
          <target state="translated">Возвращает пустое имя файла этой записи директории без любого другого ведущего компонента пути.</target>
        </trans-unit>
        <trans-unit id="3999977e878d4aa0df89e8853564ae3d1f1c567f" translate="yes" xml:space="preserve">
          <source>Returns the base 10 logarithm of an &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="translated">Возвращает десятичный логарифм числа &lt;code&gt;f32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df12b968d4a5f671f7a70567b9e9ead6d13963a5" translate="yes" xml:space="preserve">
          <source>Returns the base 10 logarithm of an &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">Возвращает десятичный логарифм числа &lt;code&gt;f64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1db5ea5edb2aaee417a72427aba39448ccf01d9" translate="yes" xml:space="preserve">
          <source>Returns the base 10 logarithm of the number.</source>
          <target state="translated">Возвращает базовый логарифм 10.</target>
        </trans-unit>
        <trans-unit id="6151fcf3f9961fbd57add2141f31d87f2d6ce8ee" translate="yes" xml:space="preserve">
          <source>Returns the base 2 logarithm of an &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="translated">Возвращает логарифм по основанию 2 числа &lt;code&gt;f32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c3d2718f63f9ae2596878aaf828552f161b630a" translate="yes" xml:space="preserve">
          <source>Returns the base 2 logarithm of an &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">Возвращает логарифм по основанию 2 числа &lt;code&gt;f64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71d28db9d18df1e09f50774b6e91e66160fb9960" translate="yes" xml:space="preserve">
          <source>Returns the base 2 logarithm of the number.</source>
          <target state="translated">Возвращает базовый 2 логарифм числа.</target>
        </trans-unit>
        <trans-unit id="f7c1584217383858ca96b2bfee2d773c2a8de3d7" translate="yes" xml:space="preserve">
          <source>Returns the block size for filesystem I/O.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240a0cf3374a2fba84e36a7cd86f62cc346d0b41" translate="yes" xml:space="preserve">
          <source>Returns the block size for filesystem I/O. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.blksize&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5839565fa033887cf64e24322a4b97f0c1be77" translate="yes" xml:space="preserve">
          <source>Returns the blocksize for filesystem I/O.</source>
          <target state="translated">Возвращает размер блока для ввода/вывода файловой системы.</target>
        </trans-unit>
        <trans-unit id="0a707b00168a099a156be97cf00c9be0bc23f3e8" translate="yes" xml:space="preserve">
          <source>Returns the blocksize for filesystem I/O. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.blksize&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает размер блока для ввода-вывода файловой системы. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.blksize&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4e14676896dc292fcb2906c4529e0d9b8ddb708" translate="yes" xml:space="preserve">
          <source>Returns the bounds on the remaining length of the iterator.</source>
          <target state="translated">Возвращает границы оставшейся длины итератора.</target>
        </trans-unit>
        <trans-unit id="d2a3690a9a9438438e3196a0f625ac7a1a2c741c" translate="yes" xml:space="preserve">
          <source>Returns the bounds on the remaining length of the iterator. &lt;a href=&quot;../../../iter/trait.iterator#method.size_hint&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает границы оставшейся длины итератора. &lt;a href=&quot;../../../iter/trait.iterator#method.size_hint&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8891999a029776a6e5e86fccbe09d33ed70b4be9" translate="yes" xml:space="preserve">
          <source>Returns the bounds on the remaining length of the iterator. &lt;a href=&quot;../../iter/trait.iterator#method.size_hint&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает границы оставшейся длины итератора. &lt;a href=&quot;../../iter/trait.iterator#method.size_hint&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1229a7eaa643cf7a2a40fae1eb4dcdc17b538bfa" translate="yes" xml:space="preserve">
          <source>Returns the bounds on the remaining length of the iterator. &lt;a href=&quot;../iter/trait.iterator#method.size_hint&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает границы оставшейся длины итератора. &lt;a href=&quot;../iter/trait.iterator#method.size_hint&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="85cfd8e260500745daa31eee7d23e3e22d4b7d22" translate="yes" xml:space="preserve">
          <source>Returns the bounds on the remaining length of the iterator. &lt;a href=&quot;iter/trait.iterator#method.size_hint&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает границы оставшейся длины итератора. &lt;a href=&quot;iter/trait.iterator#method.size_hint&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3f770f0e889ff8f81994451fc65d944f57657d5" translate="yes" xml:space="preserve">
          <source>Returns the bounds on the remaining length of the iterator. &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает границы оставшейся длины итератора. &lt;a href=&quot;trait.iterator#method.size_hint&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4e2be8472a8a9457bd5d5e78f8221e9bef80138" translate="yes" xml:space="preserve">
          <source>Returns the buffered writer instance which generated the error.</source>
          <target state="translated">Возвращает буферизованный экземпляр writeer,который сгенерировал ошибку.</target>
        </trans-unit>
        <trans-unit id="a9e06b89d312a13a698accce9ab692b3154b3aee" translate="yes" xml:space="preserve">
          <source>Returns the byte index for the first character of the rightmost match of the pattern in this string slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5a4ca96fd13952f46f410156017da97dafd2ff" translate="yes" xml:space="preserve">
          <source>Returns the byte index of the first character of this string slice that matches the pattern.</source>
          <target state="translated">Возвращает индекс байта первого символа этого среза строки,совпадающего с шаблоном.</target>
        </trans-unit>
        <trans-unit id="02b84b401fc0589b3df759db66246dbfed302080" translate="yes" xml:space="preserve">
          <source>Returns the byte index of the last character of this string slice that matches the pattern.</source>
          <target state="translated">Возвращает индекс байта последнего символа этого среза строки,совпадающего с шаблоном.</target>
        </trans-unit>
        <trans-unit id="3152ec978afaed4f94ff8a3c0c87e246ebf77786" translate="yes" xml:space="preserve">
          <source>Returns the bytes that were attempted to convert to a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">Возвращает байты, которые пытались преобразовать в &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d28550fb4c351327cf7364182abd1608f112396c" translate="yes" xml:space="preserve">
          <source>Returns the canonical, absolute form of a path with all intermediate components normalized and symbolic links resolved.</source>
          <target state="translated">Возвращает каноническую,абсолютную форму пути со всеми промежуточными компонентами нормализованными и символическими связями разрешенными.</target>
        </trans-unit>
        <trans-unit id="b22f913bd6b9484a1f42e1902c6c01f377894183" translate="yes" xml:space="preserve">
          <source>Returns the canonical, absolute form of the path with all intermediate components normalized and symbolic links resolved.</source>
          <target state="translated">Возвращает каноническую,абсолютную форму пути со всеми промежуточными компонентами нормализованными и символическими связями разрешенными.</target>
        </trans-unit>
        <trans-unit id="e9ab6128abe535c42ef1eeb3f662fdd9ea0274b3" translate="yes" xml:space="preserve">
          <source>Returns the capacity this &lt;code&gt;OsString&lt;/code&gt; can hold without reallocating.</source>
          <target state="translated">Возвращает емкость, которую &lt;code&gt;OsString&lt;/code&gt; может удерживать без перераспределения.</target>
        </trans-unit>
        <trans-unit id="d967275614b5f84a38f46f57abee9525f99c53e0" translate="yes" xml:space="preserve">
          <source>Returns the column from which the panic originated.</source>
          <target state="translated">Возвращает колонку,из которой возникла паника.</target>
        </trans-unit>
        <trans-unit id="15a54fdcea23bc3207c0820544f58b05251853f2" translate="yes" xml:space="preserve">
          <source>Returns the contained &lt;a href=&quot;enum.option#variant.Some&quot;&gt;&lt;code&gt;Some&lt;/code&gt;&lt;/a&gt; value or a default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f55a258801e09e8855a2e49b7f314eeea3c5c0" translate="yes" xml:space="preserve">
          <source>Returns the contained &lt;a href=&quot;enum.option#variant.Some&quot;&gt;&lt;code&gt;Some&lt;/code&gt;&lt;/a&gt; value or a provided default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c70929838869ba6753c741e2fae771ce02a01f" translate="yes" xml:space="preserve">
          <source>Returns the contained &lt;a href=&quot;enum.option#variant.Some&quot;&gt;&lt;code&gt;Some&lt;/code&gt;&lt;/a&gt; value or computes it from a closure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89e8b695fae613ce3f3aff08b41d6f7db5c060a" translate="yes" xml:space="preserve">
          <source>Returns the contained &lt;a href=&quot;enum.option#variant.Some&quot;&gt;&lt;code&gt;Some&lt;/code&gt;&lt;/a&gt; value, consuming the &lt;code&gt;self&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3623b1354b4df0775e774ded0153095c27a36b6c" translate="yes" xml:space="preserve">
          <source>Returns the contained &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; value, consuming the &lt;code&gt;self&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d6548ed9286025a9ddf59bce14c4eca7ad8203" translate="yes" xml:space="preserve">
          <source>Returns the contained &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; value or a default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4e0c85ed3449ae717cac97c7edd7bd13a5252d" translate="yes" xml:space="preserve">
          <source>Returns the contained &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; value or a provided default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79aab72d6ce60ac70b1927592b9e210cae775c74" translate="yes" xml:space="preserve">
          <source>Returns the contained &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; value or computes it from a closure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70edb5dd3948fc277210f0ef7acb0105b034649c" translate="yes" xml:space="preserve">
          <source>Returns the contained &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; value, but never panics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39c151183f347a1bcafac05f20de48e8149381e" translate="yes" xml:space="preserve">
          <source>Returns the contained &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt; value, consuming the &lt;code&gt;self&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b065deea9e2ccfc3e580aca6f6c5988a80c071" translate="yes" xml:space="preserve">
          <source>Returns the contained value or a default</source>
          <target state="translated">Возвращает содержащееся значение или значение по умолчанию</target>
        </trans-unit>
        <trans-unit id="93f961829488fd9c219fce4ac6ca7541e9dadd92" translate="yes" xml:space="preserve">
          <source>Returns the contained value or a default.</source>
          <target state="translated">Возвращает содержащееся значение или значение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="67ad33ae23070362998c7baca57e9a9f374d5f1c" translate="yes" xml:space="preserve">
          <source>Returns the contained value or computes it from a closure.</source>
          <target state="translated">Возвращает содержащееся в нем значение или вычисляет его из закрытия.</target>
        </trans-unit>
        <trans-unit id="8ad8e32a54b07c26a39be9ab7bd26314d57e3768" translate="yes" xml:space="preserve">
          <source>Returns the contained value, if the &lt;code&gt;Arc&lt;/code&gt; has exactly one strong reference.</source>
          <target state="translated">Возвращает содержащееся значение, если у &lt;code&gt;Arc&lt;/code&gt; есть ровно одна сильная ссылка.</target>
        </trans-unit>
        <trans-unit id="293a13a062c053cd7511db6be9751e6c3c51d924" translate="yes" xml:space="preserve">
          <source>Returns the contained value, if the &lt;code&gt;Rc&lt;/code&gt; has exactly one strong reference.</source>
          <target state="translated">Возвращает содержащееся значение, если &lt;code&gt;Rc&lt;/code&gt; имеет ровно одну сильную ссылку.</target>
        </trans-unit>
        <trans-unit id="61717e1212e78080790cfa608d226ba09775fff4" translate="yes" xml:space="preserve">
          <source>Returns the contents of the internal buffer, filling it with more data from the inner reader if it is empty.</source>
          <target state="translated">Возвращает содержимое внутреннего буфера,заполняя его большим количеством данных из внутреннего считывателя,если он пуст.</target>
        </trans-unit>
        <trans-unit id="62a8f07433d90548504485b3f2bd761a7d3e7f35" translate="yes" xml:space="preserve">
          <source>Returns the contents of the internal buffer, filling it with more data from the inner reader if it is empty. &lt;a href=&quot;../io/trait.bufread#tymethod.fill_buf&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает содержимое внутреннего буфера, заполняя его дополнительными данными из внутреннего считывателя, если он пуст. &lt;a href=&quot;../io/trait.bufread#tymethod.fill_buf&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bffb5d5e3bef8e89831b85ce20b9dbe7bef0b262" translate="yes" xml:space="preserve">
          <source>Returns the contents of the internal buffer, filling it with more data from the inner reader if it is empty. &lt;a href=&quot;io/trait.bufread#tymethod.fill_buf&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает содержимое внутреннего буфера, заполняя его дополнительными данными из внутреннего считывателя, если он пуст. &lt;a href=&quot;io/trait.bufread#tymethod.fill_buf&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b56cc621e993a837e4a3d3762bf2b8e4393543fc" translate="yes" xml:space="preserve">
          <source>Returns the contents of the internal buffer, filling it with more data from the inner reader if it is empty. &lt;a href=&quot;trait.bufread#tymethod.fill_buf&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает содержимое внутреннего буфера, заполняя его дополнительными данными из внутреннего считывателя, если он пуст. &lt;a href=&quot;trait.bufread#tymethod.fill_buf&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f885e71cdbfbcea491b671f027f8bb7b577a086f" translate="yes" xml:space="preserve">
          <source>Returns the contents of this &lt;code&gt;CString&lt;/code&gt; as a slice of bytes.</source>
          <target state="translated">Возвращает содержимое этого &lt;code&gt;CString&lt;/code&gt; как часть байтов.</target>
        </trans-unit>
        <trans-unit id="3d26a0158e604a34cfc901250ba325c7db826bd5" translate="yes" xml:space="preserve">
          <source>Returns the contents of this address if it is a &lt;code&gt;pathname&lt;/code&gt; address.</source>
          <target state="translated">Возвращает содержимое этого адреса, если это адрес &lt;code&gt;pathname&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28fc865a2862de98a872098b58fe7c7f86082f67" translate="yes" xml:space="preserve">
          <source>Returns the corresponding &lt;a href=&quot;enum.errorkind&quot;&gt;&lt;code&gt;ErrorKind&lt;/code&gt;&lt;/a&gt; for this error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03b5dda5aedfc46816e9b36b141e565db65ce6c" translate="yes" xml:space="preserve">
          <source>Returns the corresponding &lt;code&gt;ErrorKind&lt;/code&gt; for this error.</source>
          <target state="translated">Возвращает соответствующий &lt;code&gt;ErrorKind&lt;/code&gt; для этой ошибки.</target>
        </trans-unit>
        <trans-unit id="0290d0663939a4a469aef359cdde538eed028a13" translate="yes" xml:space="preserve">
          <source>Returns the cosine of an &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="translated">Возвращает косинус числа &lt;code&gt;f32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a14a6e9cbec9670ac4b4ccae6c476cf435f754d9" translate="yes" xml:space="preserve">
          <source>Returns the cosine of an &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">Возвращает косинус числа &lt;code&gt;f64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6085cc922831cf44bc01ee1fda8b427a3535d5f" translate="yes" xml:space="preserve">
          <source>Returns the creation time listed in this metadata.</source>
          <target state="translated">Возвращает время создания,указанное в этих метаданных.</target>
        </trans-unit>
        <trans-unit id="084ce23da0d611b52ee355c6c2e6eab564e8d293" translate="yes" xml:space="preserve">
          <source>Returns the cubic root of a number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997023fe32fbfc90fbf5d802c09ec861905c3cbd" translate="yes" xml:space="preserve">
          <source>Returns the current position of this cursor.</source>
          <target state="translated">Возвращает текущую позицию этого курсора.</target>
        </trans-unit>
        <trans-unit id="39488e0dd8d1a6a459ff877c39a362351edd5507" translate="yes" xml:space="preserve">
          <source>Returns the current seek position from the start of the stream.</source>
          <target state="translated">Возвращает текущую позицию поиска с начала потока.</target>
        </trans-unit>
        <trans-unit id="35a7977795b1c187ff460d7619e6740e7eab4a31" translate="yes" xml:space="preserve">
          <source>Returns the current seek position from the start of the stream. &lt;a href=&quot;../io/trait.seek#method.stream_position&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает текущую позицию поиска от начала потока. &lt;a href=&quot;../io/trait.seek#method.stream_position&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a57476cd33067734277138c4a7c3301e250e6c2" translate="yes" xml:space="preserve">
          <source>Returns the current seek position from the start of the stream. &lt;a href=&quot;io/trait.seek#method.stream_position&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает текущую позицию поиска от начала потока. &lt;a href=&quot;io/trait.seek#method.stream_position&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba7239a7b3b1a78bcc00446cc6158fc282e3b433" translate="yes" xml:space="preserve">
          <source>Returns the current seek position from the start of the stream. &lt;a href=&quot;trait.seek#method.stream_position&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает текущую позицию поиска от начала потока. &lt;a href=&quot;trait.seek#method.stream_position&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6ddab0dded93136752be9b842101b1d6ba6ef77" translate="yes" xml:space="preserve">
          <source>Returns the current working directory as a &lt;a href=&quot;../path/struct.pathbuf&quot;&gt;&lt;code&gt;PathBuf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Возвращает текущий рабочий каталог как &lt;a href=&quot;../path/struct.pathbuf&quot;&gt; &lt;code&gt;PathBuf&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="74804b705faa501c028edeb8453a757ad2f8932d" translate="yes" xml:space="preserve">
          <source>Returns the default value of &lt;code&gt;()&lt;/code&gt;</source>
          <target state="translated">Возвращает значение по умолчанию для &lt;code&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5722a2e73eb46920ce6f3053e0e53b893eaff195" translate="yes" xml:space="preserve">
          <source>Returns the default value of &lt;code&gt;0.0&lt;/code&gt;</source>
          <target state="translated">Возвращает значение по умолчанию &lt;code&gt;0.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab62f83932e8f488bbfc7d7430c307c63931ad3a" translate="yes" xml:space="preserve">
          <source>Returns the default value of &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">Возвращает значение по умолчанию &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64f6f0364caff5aaf72ec04bdaab6f6b9b41494f" translate="yes" xml:space="preserve">
          <source>Returns the default value of &lt;code&gt;\x00&lt;/code&gt;</source>
          <target state="translated">Возвращает значение по умолчанию &lt;code&gt;\x00&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="28b7bcae2b6814bbd77abceec8d6747ba4de557b" translate="yes" xml:space="preserve">
          <source>Returns the default value of &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">Возвращает значение по умолчанию &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c69ba2a59bc2c58f7569f9f294f9ca9c73dea195" translate="yes" xml:space="preserve">
          <source>Returns the device ID of this file (if it is a special one).</source>
          <target state="translated">Возвращает идентификатор устройства этого файла (если он специальный).</target>
        </trans-unit>
        <trans-unit id="f3b0d9ec42b53df755966f88296c9569ef0a5c50" translate="yes" xml:space="preserve">
          <source>Returns the device ID of this file (if it is a special one). &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.rdev&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает идентификатор устройства этого файла (если он особенный). &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.rdev&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="181f80a2944af3f709e8a5acb7280ec496506acd" translate="yes" xml:space="preserve">
          <source>Returns the device ID on which this file resides.</source>
          <target state="translated">Возвращает идентификатор устройства,на котором находится этот файл.</target>
        </trans-unit>
        <trans-unit id="b98ab569fab62e7bf6f2b06c0a56e45794878166" translate="yes" xml:space="preserve">
          <source>Returns the device ID on which this file resides. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_dev&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает идентификатор устройства, на котором находится этот файл. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_dev&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2631a317e4b16bd101a2adbfbc04fa29b56c076a" translate="yes" xml:space="preserve">
          <source>Returns the device ID that this file represents. Only relevant for special file.</source>
          <target state="translated">Возвращает идентификатор устройства,который представляет этот файл.Имеет значение только для специального файла.</target>
        </trans-unit>
        <trans-unit id="0a33c1cec7f8f0efea3df218ed7eedf1c0eee109" translate="yes" xml:space="preserve">
          <source>Returns the device ID that this file represents. Only relevant for special file. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_rdev&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает идентификатор устройства, который представляет этот файл. Актуально только для специального файла. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_rdev&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e71fcc7d553990b9c89d36828565d2b0078328c0" translate="yes" xml:space="preserve">
          <source>Returns the difference between the clock time when this system time was created, and the current clock time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d24e33a3a33bd79f939093cab0c11b18014a34" translate="yes" xml:space="preserve">
          <source>Returns the difference of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; as a new &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Возвращает разницу между &lt;code&gt;self&lt;/code&gt; и &lt;code&gt;rhs&lt;/code&gt; как новый &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b212cfed5a4fd26409beb817968c4efa9bf8ad6" translate="yes" xml:space="preserve">
          <source>Returns the difference of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; as a new &lt;code&gt;HashSet&amp;lt;T, S&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Возвращает разницу между &lt;code&gt;self&lt;/code&gt; и &lt;code&gt;rhs&lt;/code&gt; как новый &lt;code&gt;HashSet&amp;lt;T, S&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83d19ce03568322fde7a0c72ea57be816c0d6480" translate="yes" xml:space="preserve">
          <source>Returns the eight 16-bit segments that make up this address.</source>
          <target state="translated">Возвращает восемь 16-битных сегментов,составляющих этот адрес.</target>
        </trans-unit>
        <trans-unit id="7745d26921de367760bb15cf644b3f30226872f4" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the maximum value from the specified function.</source>
          <target state="translated">Возвращает элемент,дающий максимальное значение из указанной функции.</target>
        </trans-unit>
        <trans-unit id="bb5381765a00a3d0ce3096269a3ba471a59a41f1" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the maximum value from the specified function. &lt;a href=&quot;../../../iter/trait.iterator#method.max_by_key&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает максимальное значение из указанной функции. &lt;a href=&quot;../../../iter/trait.iterator#method.max_by_key&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50163f43ee0e83a5976c23424822af3ffc3e92ee" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the maximum value from the specified function. &lt;a href=&quot;../../iter/trait.iterator#method.max_by_key&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает максимальное значение из указанной функции. &lt;a href=&quot;../../iter/trait.iterator#method.max_by_key&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82c531284da35ffcb3cfd25a321e3624a7fb85d1" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the maximum value from the specified function. &lt;a href=&quot;../iter/trait.iterator#method.max_by_key&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает максимальное значение из указанной функции. &lt;a href=&quot;../iter/trait.iterator#method.max_by_key&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c4eb2b8585ef4b9491f95a16f72ae832b96ef1d" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the maximum value from the specified function. &lt;a href=&quot;iter/trait.iterator#method.max_by_key&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает максимальное значение из указанной функции. &lt;a href=&quot;iter/trait.iterator#method.max_by_key&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f75f1849f6ee013d414fbfd16341df18e9596e05" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the maximum value from the specified function. &lt;a href=&quot;trait.iterator#method.max_by_key&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает максимальное значение из указанной функции. &lt;a href=&quot;trait.iterator#method.max_by_key&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3e0642512129975c59c5b67eafdcfa17585e45c" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the maximum value with respect to the specified comparison function.</source>
          <target state="translated">Возвращает элемент,который дает максимальное значение относительно указанной функции сравнения.</target>
        </trans-unit>
        <trans-unit id="6942069630752434b69fa518af7af4b843040c02" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the maximum value with respect to the specified comparison function. &lt;a href=&quot;../../../iter/trait.iterator#method.max_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает максимальное значение по отношению к указанной функции сравнения. &lt;a href=&quot;../../../iter/trait.iterator#method.max_by&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39d42b9245417e2e45664c1c452af8c2dcad7575" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the maximum value with respect to the specified comparison function. &lt;a href=&quot;../../iter/trait.iterator#method.max_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает максимальное значение по отношению к указанной функции сравнения. &lt;a href=&quot;../../iter/trait.iterator#method.max_by&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6cf2f94c83e1a777636c1b8f13f98fbfbb359792" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the maximum value with respect to the specified comparison function. &lt;a href=&quot;../iter/trait.iterator#method.max_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает максимальное значение по отношению к указанной функции сравнения. &lt;a href=&quot;../iter/trait.iterator#method.max_by&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="462a8b6200c132c1659a6c5483922c1765c25183" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the maximum value with respect to the specified comparison function. &lt;a href=&quot;iter/trait.iterator#method.max_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает максимальное значение по отношению к указанной функции сравнения. &lt;a href=&quot;iter/trait.iterator#method.max_by&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2309005f0fef3ccdfc8ea8129d2a5047595bf152" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the maximum value with respect to the specified comparison function. &lt;a href=&quot;trait.iterator#method.max_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает максимальное значение по отношению к указанной функции сравнения. &lt;a href=&quot;trait.iterator#method.max_by&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41d83b5d88e22e38a9dbe39585dfa0b7f240246d" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the minimum value from the specified function.</source>
          <target state="translated">Возвращает элемент,дающий минимальное значение из указанной функции.</target>
        </trans-unit>
        <trans-unit id="0443cbe148f4f0ed1cfe84b5c27315d8e03b5854" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the minimum value from the specified function. &lt;a href=&quot;../../../iter/trait.iterator#method.min_by_key&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает минимальное значение из указанной функции. &lt;a href=&quot;../../../iter/trait.iterator#method.min_by_key&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1443a6dce791dde1d9c5b46639ac6741d15d9f98" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the minimum value from the specified function. &lt;a href=&quot;../../iter/trait.iterator#method.min_by_key&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает минимальное значение из указанной функции. &lt;a href=&quot;../../iter/trait.iterator#method.min_by_key&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="053f1091cc4eb8e27c85d8e13b6f1e8608ba77bd" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the minimum value from the specified function. &lt;a href=&quot;../iter/trait.iterator#method.min_by_key&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает минимальное значение из указанной функции. &lt;a href=&quot;../iter/trait.iterator#method.min_by_key&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d0fae82fca1af93f383d20d37602f56e408a86a" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the minimum value from the specified function. &lt;a href=&quot;iter/trait.iterator#method.min_by_key&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает минимальное значение из указанной функции. &lt;a href=&quot;iter/trait.iterator#method.min_by_key&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9038e7ba8c46a00e367d3da9d09547296b444fdd" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the minimum value from the specified function. &lt;a href=&quot;trait.iterator#method.min_by_key&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает минимальное значение из указанной функции. &lt;a href=&quot;trait.iterator#method.min_by_key&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7bbb81860f75085b883db3a6921a708a002d3b8d" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the minimum value with respect to the specified comparison function.</source>
          <target state="translated">Возвращает элемент,который дает минимальное значение относительно указанной функции сравнения.</target>
        </trans-unit>
        <trans-unit id="320318de598a123e57f84cb3c025f97baa6e0ab7" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the minimum value with respect to the specified comparison function. &lt;a href=&quot;../../../iter/trait.iterator#method.min_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает минимальное значение по отношению к указанной функции сравнения. &lt;a href=&quot;../../../iter/trait.iterator#method.min_by&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da5ce4a73e39e1032840752e4915959b46d0fde5" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the minimum value with respect to the specified comparison function. &lt;a href=&quot;../../iter/trait.iterator#method.min_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает минимальное значение по отношению к указанной функции сравнения. &lt;a href=&quot;../../iter/trait.iterator#method.min_by&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6424f2c5a1c6d95fadd173fa9aa97613bd314826" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the minimum value with respect to the specified comparison function. &lt;a href=&quot;../iter/trait.iterator#method.min_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает минимальное значение по отношению к указанной функции сравнения. &lt;a href=&quot;../iter/trait.iterator#method.min_by&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="953a6bb221b5c86e51fd26a772d8fff3e7727473" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the minimum value with respect to the specified comparison function. &lt;a href=&quot;iter/trait.iterator#method.min_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает минимальное значение по отношению к указанной функции сравнения. &lt;a href=&quot;iter/trait.iterator#method.min_by&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a475ae2f4ab13dedea41258d28190b0454ac6f63" translate="yes" xml:space="preserve">
          <source>Returns the element that gives the minimum value with respect to the specified comparison function. &lt;a href=&quot;trait.iterator#method.min_by&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает элемент, который дает минимальное значение по отношению к указанной функции сравнения. &lt;a href=&quot;trait.iterator#method.min_by&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4eec695ac77816e8f920ba066e16824a3607a343" translate="yes" xml:space="preserve">
          <source>Returns the end value as a &lt;code&gt;Bound&lt;/code&gt;.</source>
          <target state="translated">Возвращает конечное значение как &lt;code&gt;Bound&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b4333bce3947fcbaadfabbfd651c4c43e347ae8" translate="yes" xml:space="preserve">
          <source>Returns the error which caused the call to &lt;a href=&quot;struct.bufwriter#method.into_inner&quot;&gt;&lt;code&gt;BufWriter::into_inner()&lt;/code&gt;&lt;/a&gt; to fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9930d7737e0e2c08ecaaff5d4a74e1cd7210948e" translate="yes" xml:space="preserve">
          <source>Returns the error which caused the call to &lt;code&gt;into_inner()&lt;/code&gt; to fail.</source>
          <target state="translated">Возвращает ошибку, которая привела к &lt;code&gt;into_inner()&lt;/code&gt; вызова into_inner () .</target>
        </trans-unit>
        <trans-unit id="f9d8e85ef34ebf5088d10366b034b3fff3297d03" translate="yes" xml:space="preserve">
          <source>Returns the exact length of the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb022eb139d6da0c86a4c0a88440bfa66ab499d" translate="yes" xml:space="preserve">
          <source>Returns the exact length of the iterator. &lt;a href=&quot;../../iter/trait.exactsizeiterator#method.len&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2261c216ed4bce171da1f8702941faa654f02b" translate="yes" xml:space="preserve">
          <source>Returns the exact length of the iterator. &lt;a href=&quot;../iter/trait.exactsizeiterator#method.len&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537356a268fb5f824034c12f05bb64f93221075a" translate="yes" xml:space="preserve">
          <source>Returns the exact length of the iterator. &lt;a href=&quot;iter/trait.exactsizeiterator#method.len&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="158867de75e65092e06f8e09c644a429790fc3fc" translate="yes" xml:space="preserve">
          <source>Returns the exact length of the iterator. &lt;a href=&quot;trait.exactsizeiterator#method.len&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5962202649ec673f7ee6fdf337862f68a375c939" translate="yes" xml:space="preserve">
          <source>Returns the exact number of times the iterator will iterate.</source>
          <target state="translated">Возвращает точное количество повторений итератора.</target>
        </trans-unit>
        <trans-unit id="f033612b812dcb115ee88f27537d36043163b376" translate="yes" xml:space="preserve">
          <source>Returns the exact number of times the iterator will iterate. &lt;a href=&quot;../../iter/trait.exactsizeiterator#method.len&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает точное количество повторений итератора. &lt;a href=&quot;../../iter/trait.exactsizeiterator#method.len&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16c5ccfc9ac661fe921b2a21b9103ff312f84598" translate="yes" xml:space="preserve">
          <source>Returns the exact number of times the iterator will iterate. &lt;a href=&quot;../iter/trait.exactsizeiterator#method.len&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает точное количество повторений итератора. &lt;a href=&quot;../iter/trait.exactsizeiterator#method.len&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="02fb630e12001e45abb9046cd431397c5a161393" translate="yes" xml:space="preserve">
          <source>Returns the exact number of times the iterator will iterate. &lt;a href=&quot;iter/trait.exactsizeiterator#method.len&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает точное количество повторений итератора. &lt;a href=&quot;iter/trait.exactsizeiterator#method.len&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e6bc996c28438070b2c4d7500cec4888863af5a" translate="yes" xml:space="preserve">
          <source>Returns the exact number of times the iterator will iterate. &lt;a href=&quot;trait.exactsizeiterator#method.len&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает точное количество повторений итератора. &lt;a href=&quot;trait.exactsizeiterator#method.len&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eaee2eeccb629c630e5905f0b3ce242f0e70e55f" translate="yes" xml:space="preserve">
          <source>Returns the exit code of the process, if any.</source>
          <target state="translated">Возвращает код завершения процесса,если таковой имеется.</target>
        </trans-unit>
        <trans-unit id="c46549fd4519eac200d7025db93e7bb82ec51c56" translate="yes" xml:space="preserve">
          <source>Returns the exponential of an &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="translated">Возвращает экспоненту &lt;code&gt;f32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3da97caa1fafcb8a130fff71bf53e2faf622790" translate="yes" xml:space="preserve">
          <source>Returns the exponential of an &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">Возвращает экспоненту &lt;code&gt;f64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20054b5c455db28478d1a0abc7636b79620b24c9" translate="yes" xml:space="preserve">
          <source>Returns the file type and mode.</source>
          <target state="translated">Возвращает тип и режим файла.</target>
        </trans-unit>
        <trans-unit id="29173c277e0a8fc5747faccd34be42ea6c198ad4" translate="yes" xml:space="preserve">
          <source>Returns the file type and mode. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_mode&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает тип файла и режим. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_mode&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c7ca6382527376d2edcd8da3d859ce37e7911a9" translate="yes" xml:space="preserve">
          <source>Returns the file type for the file that this entry points at.</source>
          <target state="translated">Возвращает тип файла для файла,на который указывает эта запись.</target>
        </trans-unit>
        <trans-unit id="a1534c8640f4fe800de9cb7dae21a242a9864c27" translate="yes" xml:space="preserve">
          <source>Returns the file type for this metadata.</source>
          <target state="translated">Возвращает тип файла для этих метаданных.</target>
        </trans-unit>
        <trans-unit id="9e847b6bb3f5504d2cf5374472d3451d7e9bd580" translate="yes" xml:space="preserve">
          <source>Returns the final component of the &lt;code&gt;Path&lt;/code&gt;, if there is one.</source>
          <target state="translated">Возвращает последний компонент &lt;code&gt;Path&lt;/code&gt; , если он есть.</target>
        </trans-unit>
        <trans-unit id="f986133e42ae70418cc420c3e41e12a1f3fe07ef" translate="yes" xml:space="preserve">
          <source>Returns the first and all the rest of the elements of the slice, or &lt;code&gt;None&lt;/code&gt; if it is empty.</source>
          <target state="translated">Возвращает первый и все остальные элементы среза или &lt;code&gt;None&lt;/code&gt; , если он пуст.</target>
        </trans-unit>
        <trans-unit id="6df3b2311101bc474f1cbb40155b6f5441324bdd" translate="yes" xml:space="preserve">
          <source>Returns the first argument if the comparison determines them to be equal.</source>
          <target state="translated">Возвращает первый аргумент,если сравнение определяет их как равные.</target>
        </trans-unit>
        <trans-unit id="437b18f8639cc9b926df56af39e4604c50f764f9" translate="yes" xml:space="preserve">
          <source>Returns the first element of the slice, or &lt;code&gt;None&lt;/code&gt; if it is empty.</source>
          <target state="translated">Возвращает первый элемент среза или &lt;code&gt;None&lt;/code&gt; , если он пуст.</target>
        </trans-unit>
        <trans-unit id="0b3e99069b488a7f51f60669058e47a93b76b677" translate="yes" xml:space="preserve">
          <source>Returns the first entry in the map for in-place manipulation. The key of this entry is the minimum key in the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74530f1b5938d1658bbab73d4adb5f515bf97643" translate="yes" xml:space="preserve">
          <source>Returns the first key-value pair in the map. The key in this pair is the minimum key in the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d47ad3e742059ef698b5878928948b880b76e9" translate="yes" xml:space="preserve">
          <source>Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.</source>
          <target state="translated">Возвращает категорию числа с плавающей точкой.Если будет проверено только одно свойство,то,как правило,быстрее использовать вместо него конкретный предикат.</target>
        </trans-unit>
        <trans-unit id="49e202e605b7bd28c9cd4b32f5e972ed286ed689" translate="yes" xml:space="preserve">
          <source>Returns the flow information associated with this address.</source>
          <target state="translated">Возвращает информацию о потоке,связанном с этим адресом.</target>
        </trans-unit>
        <trans-unit id="ebc964882a27c9907c13d4408b850f0c053463ad" translate="yes" xml:space="preserve">
          <source>Returns the four eight-bit integers that make up this address.</source>
          <target state="translated">Возвращает четыре восьмиразрядных целых числа,составляющих этот адрес.</target>
        </trans-unit>
        <trans-unit id="23a2c0dcfd31b6c2e9c9888d0121bf38980344c7" translate="yes" xml:space="preserve">
          <source>Returns the fractional part of a number.</source>
          <target state="translated">Возвращает дробную часть числа.</target>
        </trans-unit>
        <trans-unit id="c9ae259a22b2843e1409b67296fea665b489b3c0" translate="yes" xml:space="preserve">
          <source>Returns the fractional part of this &lt;code&gt;Duration&lt;/code&gt;, in nanoseconds.</source>
          <target state="translated">Возвращает дробную часть этой &lt;code&gt;Duration&lt;/code&gt; в наносекундах.</target>
        </trans-unit>
        <trans-unit id="bef624893ef149ad78a29ca49323a67983fcf807" translate="yes" xml:space="preserve">
          <source>Returns the fractional part of this &lt;code&gt;Duration&lt;/code&gt;, in whole microseconds.</source>
          <target state="translated">Возвращает дробную часть этой &lt;code&gt;Duration&lt;/code&gt; в целых микросекундах.</target>
        </trans-unit>
        <trans-unit id="429fb28498e19cb96e485fa379316b5cdb475039" translate="yes" xml:space="preserve">
          <source>Returns the fractional part of this &lt;code&gt;Duration&lt;/code&gt;, in whole milliseconds.</source>
          <target state="translated">Возвращает дробную часть этой &lt;code&gt;Duration&lt;/code&gt; в целых миллисекундах.</target>
        </trans-unit>
        <trans-unit id="4fe276fd03e779f2448dc9c5743f17bdbd043791" translate="yes" xml:space="preserve">
          <source>Returns the full filesystem path of the current running executable.</source>
          <target state="translated">Возвращает полный путь к файловой системе текущего исполняемого файла.</target>
        </trans-unit>
        <trans-unit id="d7d90dec7d9868f5e5e1932b8128e5811ca21180" translate="yes" xml:space="preserve">
          <source>Returns the full path to the file that this entry represents.</source>
          <target state="translated">Возвращает полный путь к файлу,который представляет эта запись.</target>
        </trans-unit>
        <trans-unit id="71eba06405f179b611cd49f0368d873651d1e32d" translate="yes" xml:space="preserve">
          <source>Returns the greatest item in the binary heap, or &lt;code&gt;None&lt;/code&gt; if it is empty.</source>
          <target state="translated">Возвращает наибольший элемент в двоичной куче или &lt;code&gt;None&lt;/code&gt; , если он пуст.</target>
        </trans-unit>
        <trans-unit id="045b7e93299e7237bee97de9a0dbf3ddda51f3c5" translate="yes" xml:space="preserve">
          <source>Returns the group ID of the file owner.</source>
          <target state="translated">Возвращает идентификатор группы владельца файла.</target>
        </trans-unit>
        <trans-unit id="4a557d49ccda95ec6e0b99ed25a0ee4823c94f97" translate="yes" xml:space="preserve">
          <source>Returns the group ID of the file owner. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_gid&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает идентификатор группы владельца файла. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_gid&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2c114378ffcffa33547a268c64967ffa367a1de" translate="yes" xml:space="preserve">
          <source>Returns the group ID of the owner of this file.</source>
          <target state="translated">Возвращает идентификатор группы владельца этого файла.</target>
        </trans-unit>
        <trans-unit id="cb37218b7673220aef8159e0e33e6e616d1ec2d3" translate="yes" xml:space="preserve">
          <source>Returns the group ID of the owner of this file. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.gid&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает идентификатор группы владельца этого файла. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.gid&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc1701d228422894681a4f69e8a12241974ea7ee" translate="yes" xml:space="preserve">
          <source>Returns the hash value for the values written so far.</source>
          <target state="translated">Возвращает хэш-значение для значений,записанных до сих пор.</target>
        </trans-unit>
        <trans-unit id="1074a0bc0454984fa22f8f545cef825d19b02694" translate="yes" xml:space="preserve">
          <source>Returns the hash value for the values written so far. &lt;a href=&quot;../../hash/trait.hasher#tymethod.finish&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает хеш-значение для уже записанных значений. &lt;a href=&quot;../../hash/trait.hasher#tymethod.finish&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e7dae3c3c526bc02d0f5433fee81441a9191f70" translate="yes" xml:space="preserve">
          <source>Returns the hash value for the values written so far. &lt;a href=&quot;../hash/trait.hasher#tymethod.finish&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает хеш-значение для уже записанных значений. &lt;a href=&quot;../hash/trait.hasher#tymethod.finish&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8bb75a36c996ce5b24d080509086ed2a565c1634" translate="yes" xml:space="preserve">
          <source>Returns the hash value for the values written so far. &lt;a href=&quot;hash/trait.hasher#tymethod.finish&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает хеш-значение для уже записанных значений. &lt;a href=&quot;hash/trait.hasher#tymethod.finish&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="891e6e5d9637f6e0543be915bdd8db7a0eb16e60" translate="yes" xml:space="preserve">
          <source>Returns the hash value for the values written so far. &lt;a href=&quot;trait.hasher#tymethod.finish&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает хеш-значение для уже записанных значений. &lt;a href=&quot;trait.hasher#tymethod.finish&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75c0b203793b8b7484a5f62aa01cd8599798558c" translate="yes" xml:space="preserve">
          <source>Returns the index in the given string up to which valid UTF-8 was verified.</source>
          <target state="translated">Возвращает индекс в данной строке,до которого верифицирован UTF-8.</target>
        </trans-unit>
        <trans-unit id="fa1ff971c586fc730f98793935b6144319f4808c" translate="yes" xml:space="preserve">
          <source>Returns the index of the partition point according to the given predicate (the index of the first element of the second partition).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d717e336600fb2761f002896412c5a624281f80" translate="yes" xml:space="preserve">
          <source>Returns the inner pointer to this C string.</source>
          <target state="translated">Возвращает внутренний указатель на эту строку C.</target>
        </trans-unit>
        <trans-unit id="b784d9da31090d15aa9f5a33e60503c49931dee0" translate="yes" xml:space="preserve">
          <source>Returns the inner value, if the &lt;code&gt;Arc&lt;/code&gt; has exactly one strong reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f509e24ecece50330c3bd7ac415fcdf7a6b5a997" translate="yes" xml:space="preserve">
          <source>Returns the inner value, if the &lt;code&gt;Rc&lt;/code&gt; has exactly one strong reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8d72748348ad00715db12f5684b27b98cb0442" translate="yes" xml:space="preserve">
          <source>Returns the inode number.</source>
          <target state="translated">Возвращает номер входа.</target>
        </trans-unit>
        <trans-unit id="d2ba37e26258afa6e8cd7aa434389d5c1d115e02" translate="yes" xml:space="preserve">
          <source>Returns the inode number. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_ino&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает номер inode. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_ino&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a71311f22ec6788f34a10389ef2a3f732a47c264" translate="yes" xml:space="preserve">
          <source>Returns the inode number. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.ino&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает номер inode. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.ino&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b08a689f37adf08d820155dd21fe59b2c115d985" translate="yes" xml:space="preserve">
          <source>Returns the integer part of a number.</source>
          <target state="translated">Возвращает целую часть числа.</target>
        </trans-unit>
        <trans-unit id="ca9424867c58d209b837105a4ec6eb48b25b0236" translate="yes" xml:space="preserve">
          <source>Returns the integer part of an &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="translated">Возвращает целую часть &lt;code&gt;f32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4162d7ee466feb25cbea3134d78b69877eb6af9d" translate="yes" xml:space="preserve">
          <source>Returns the integer part of an &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">Возвращает целую часть &lt;code&gt;f64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a27800e3a9a14d645a518f397df1f0296b050f8" translate="yes" xml:space="preserve">
          <source>Returns the intersection of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; as a new &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Возвращает пересечение &lt;code&gt;self&lt;/code&gt; и &lt;code&gt;rhs&lt;/code&gt; как новый &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae38197230c1ca8d7ed05ba875d9f766bc5916a3" translate="yes" xml:space="preserve">
          <source>Returns the intersection of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; as a new &lt;code&gt;HashSet&amp;lt;T, S&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Возвращает пересечение &lt;code&gt;self&lt;/code&gt; и &lt;code&gt;rhs&lt;/code&gt; как новый &lt;code&gt;HashSet&amp;lt;T, S&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f591b6d3dce26e4e5d951568101e01b047f0c4d6" translate="yes" xml:space="preserve">
          <source>Returns the key-value pair corresponding to the supplied key.</source>
          <target state="translated">Возвращает пару &quot;ключ-значение&quot;,соответствующую входящему в комплект ключу.</target>
        </trans-unit>
        <trans-unit id="0f241c8b9c22095b4caa4196cdf8d6baf6f075e3" translate="yes" xml:space="preserve">
          <source>Returns the largest integer less than or equal to a number.</source>
          <target state="translated">Возвращает наибольшее целое число,меньшее или равное числу.</target>
        </trans-unit>
        <trans-unit id="3905281a5c2304e35d4706f9df6f06d9b6c21621" translate="yes" xml:space="preserve">
          <source>Returns the largest integer less than or equal to an &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="translated">Возвращает наибольшее целое число, меньшее или равное &lt;code&gt;f32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58468e60f3c653924ae6b45c987a06a90c0fc64d" translate="yes" xml:space="preserve">
          <source>Returns the largest integer less than or equal to an &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">Возвращает наибольшее целое число, меньшее или равное &lt;code&gt;f64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25554e99150223030893966c6cc41386280e3d36" translate="yes" xml:space="preserve">
          <source>Returns the largest value that can be represented by this integer type.</source>
          <target state="translated">Возвращает наибольшее значение,которое может быть представлено этим целочисленным типом.</target>
        </trans-unit>
        <trans-unit id="0bef1b8ab72414262be32c625754b59f61edb577" translate="yes" xml:space="preserve">
          <source>Returns the last access time of the file, in nanoseconds since &lt;a href=&quot;#tymethod.atime&quot;&gt;&lt;code&gt;atime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Возвращает время последнего доступа к файлу, в наносекунд с момента &lt;a href=&quot;#tymethod.atime&quot;&gt; &lt;code&gt;atime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fe53d0ce6581a799fd9d7d619aff8a495115546d" translate="yes" xml:space="preserve">
          <source>Returns the last access time of the file, in nanoseconds since &lt;a href=&quot;#tymethod.st_atime&quot;&gt;&lt;code&gt;st_atime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Возвращает время последнего доступа к файлу в наносекундах с момента &lt;a href=&quot;#tymethod.st_atime&quot;&gt; &lt;code&gt;st_atime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="73eda5b60e08be7e100d8681c7cbf1eb2eb360d1" translate="yes" xml:space="preserve">
          <source>Returns the last access time of the file, in nanoseconds since &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_atime&quot;&gt;&lt;code&gt;st_atime&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_atime_nsec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f319c5d1287f14eda4fd2bed89fbada163b589" translate="yes" xml:space="preserve">
          <source>Returns the last access time of the file, in nanoseconds since &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.atime&quot;&gt;&lt;code&gt;atime&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.atime_nsec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd07c2b53c400adc569f5664fe3d7c004966501" translate="yes" xml:space="preserve">
          <source>Returns the last access time of the file, in nanoseconds since &lt;a href=&quot;trait.metadataext#tymethod.atime&quot;&gt;&lt;code&gt;atime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="019f38f66a7253a180beacdbf1b3adaf12f22d1d" translate="yes" xml:space="preserve">
          <source>Returns the last access time of the file, in nanoseconds since &lt;a href=&quot;trait.metadataext#tymethod.st_atime&quot;&gt;&lt;code&gt;st_atime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126c5e2645067d74de261356df1c0ca59bb916ca" translate="yes" xml:space="preserve">
          <source>Returns the last access time of the file, in nanoseconds since [&lt;code&gt;atime&lt;/code&gt;]. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.atime_nsec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает время последнего доступа к файлу в наносекундах с [ &lt;code&gt;atime&lt;/code&gt; ]. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.atime_nsec&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f99b0d5ca8429f1fc89d18b6df2974236e019252" translate="yes" xml:space="preserve">
          <source>Returns the last access time of the file, in nanoseconds since [&lt;code&gt;st_atime&lt;/code&gt;]. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_atime_nsec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает время последнего доступа к файлу в наносекундах с [ &lt;code&gt;st_atime&lt;/code&gt; ]. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_atime_nsec&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc00d6fc33d00a791780097af4452b2ea413ef76" translate="yes" xml:space="preserve">
          <source>Returns the last access time of the file, in seconds since Unix Epoch.</source>
          <target state="translated">Возвращает последнее время доступа к файлу,в секундах с эпохи Unix.</target>
        </trans-unit>
        <trans-unit id="5dac7cdb7c4c3eb84d94b6cb55c0b864850f06b1" translate="yes" xml:space="preserve">
          <source>Returns the last access time of the file, in seconds since Unix Epoch. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_atime&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает время последнего доступа к файлу в секундах с момента Unix Epoch. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_atime&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb45cce5245c0281778ccc23f057ed2218a32288" translate="yes" xml:space="preserve">
          <source>Returns the last access time of the file, in seconds since Unix Epoch. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.atime&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает время последнего доступа к файлу в секундах с момента Unix Epoch. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.atime&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c268f1dd33e61836bff10ee9c3dd2908a1617fac" translate="yes" xml:space="preserve">
          <source>Returns the last access time of this metadata.</source>
          <target state="translated">Возвращает время последнего доступа к этим метаданным.</target>
        </trans-unit>
        <trans-unit id="429d7b4cdcf9eb4b7652bca97f6ee66d4a73f574" translate="yes" xml:space="preserve">
          <source>Returns the last and all the rest of the elements of the slice, or &lt;code&gt;None&lt;/code&gt; if it is empty.</source>
          <target state="translated">Возвращает последний и все остальные элементы среза или &lt;code&gt;None&lt;/code&gt; , если он пуст.</target>
        </trans-unit>
        <trans-unit id="9f374a694761f83970c8b898112ca6744a644713" translate="yes" xml:space="preserve">
          <source>Returns the last element of the slice, or &lt;code&gt;None&lt;/code&gt; if it is empty.</source>
          <target state="translated">Возвращает последний элемент среза или &lt;code&gt;None&lt;/code&gt; , если он пуст.</target>
        </trans-unit>
        <trans-unit id="5f57ae38a720939527bfddebf1f8bb089a52d737" translate="yes" xml:space="preserve">
          <source>Returns the last entry in the map for in-place manipulation. The key of this entry is the maximum key in the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29992e35b286e8e2fc2845c6d800039d86309da3" translate="yes" xml:space="preserve">
          <source>Returns the last key-value pair in the map. The key in this pair is the maximum key in the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e83cf50f9f20b4e01791f0c4d1472f628fa234" translate="yes" xml:space="preserve">
          <source>Returns the last modification time listed in this metadata.</source>
          <target state="translated">Возвращает время последней модификации,указанное в этих метаданных.</target>
        </trans-unit>
        <trans-unit id="b3444fc5884888c4149406ecabaf1ef2ee33450b" translate="yes" xml:space="preserve">
          <source>Returns the last modification time of the file, in nanoseconds since &lt;a href=&quot;#tymethod.mtime&quot;&gt;&lt;code&gt;mtime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Возвращает время последней модификации файла в наносекундах с момента &lt;a href=&quot;#tymethod.mtime&quot;&gt; &lt;code&gt;mtime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e060d444a8564a17f555e558ace75cc5cd5d2643" translate="yes" xml:space="preserve">
          <source>Returns the last modification time of the file, in nanoseconds since &lt;a href=&quot;#tymethod.st_mtime&quot;&gt;&lt;code&gt;st_mtime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Возвращает время последней модификации файла в наносекундах с момента &lt;a href=&quot;#tymethod.st_mtime&quot;&gt; &lt;code&gt;st_mtime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="20e9acca0a22f7d3e5550e4125b0911f44d51f67" translate="yes" xml:space="preserve">
          <source>Returns the last modification time of the file, in nanoseconds since &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_mtime&quot;&gt;&lt;code&gt;st_mtime&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_mtime_nsec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092018db95b8c650c86aa7709203df8159fb4244" translate="yes" xml:space="preserve">
          <source>Returns the last modification time of the file, in nanoseconds since &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.mtime&quot;&gt;&lt;code&gt;mtime&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.mtime_nsec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8576dfc2ca4942ca770cd0e32d4f66b1da52ae" translate="yes" xml:space="preserve">
          <source>Returns the last modification time of the file, in nanoseconds since &lt;a href=&quot;trait.metadataext#tymethod.mtime&quot;&gt;&lt;code&gt;mtime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de92934b5231894c5c4fa85564215381b1179bf" translate="yes" xml:space="preserve">
          <source>Returns the last modification time of the file, in nanoseconds since &lt;a href=&quot;trait.metadataext#tymethod.st_mtime&quot;&gt;&lt;code&gt;st_mtime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b091b94d117baa719c72b97a49c167ab605b9dfe" translate="yes" xml:space="preserve">
          <source>Returns the last modification time of the file, in nanoseconds since [&lt;code&gt;mtime&lt;/code&gt;]. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.mtime_nsec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает время последней модификации файла в наносекундах с [ &lt;code&gt;mtime&lt;/code&gt; ]. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.mtime_nsec&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e5b592106d2c023ba4785eba5178823e1c980ef" translate="yes" xml:space="preserve">
          <source>Returns the last modification time of the file, in nanoseconds since [&lt;code&gt;st_mtime&lt;/code&gt;]. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_mtime_nsec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает время последней модификации файла в наносекундах с [ &lt;code&gt;st_mtime&lt;/code&gt; ]. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_mtime_nsec&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc8c7fac340274a6084a4e051cbfe4396730a8c5" translate="yes" xml:space="preserve">
          <source>Returns the last modification time of the file, in seconds since Unix Epoch.</source>
          <target state="translated">Возвращает время последней модификации файла,в секундах от эпохи Unix.</target>
        </trans-unit>
        <trans-unit id="2fe56bd33e7e0772a902d69c107c402cce5ad5b7" translate="yes" xml:space="preserve">
          <source>Returns the last modification time of the file, in seconds since Unix Epoch. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_mtime&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает время последней модификации файла в секундах с момента появления Unix Epoch. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_mtime&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44a75fafadbb2629c831f6f75c39838bf00b601b" translate="yes" xml:space="preserve">
          <source>Returns the last modification time of the file, in seconds since Unix Epoch. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.mtime&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает время последней модификации файла в секундах с момента появления Unix Epoch. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.mtime&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1372c8863cf9cb3a180a94cd4db833598d425e7e" translate="yes" xml:space="preserve">
          <source>Returns the last status change time of the file, in nanoseconds since &lt;a href=&quot;#tymethod.ctime&quot;&gt;&lt;code&gt;ctime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Возвращает время последнего изменения статуса файла в наносекундах с момента &lt;a href=&quot;#tymethod.ctime&quot;&gt; &lt;code&gt;ctime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="76869f2d7d1d679722a686863fde8180a44ee1f3" translate="yes" xml:space="preserve">
          <source>Returns the last status change time of the file, in nanoseconds since &lt;a href=&quot;#tymethod.st_ctime&quot;&gt;&lt;code&gt;st_ctime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Возвращает время последнего изменения статуса файла в наносекундах с момента &lt;a href=&quot;#tymethod.st_ctime&quot;&gt; &lt;code&gt;st_ctime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9474ea59bcf20e1ce71a573d1205fbc2507593b1" translate="yes" xml:space="preserve">
          <source>Returns the last status change time of the file, in nanoseconds since &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_ctime&quot;&gt;&lt;code&gt;st_ctime&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_ctime_nsec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750574dfb11b2c8f23426829e7c5a6bf6fd7b3d2" translate="yes" xml:space="preserve">
          <source>Returns the last status change time of the file, in nanoseconds since &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.ctime&quot;&gt;&lt;code&gt;ctime&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.ctime_nsec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90d94e0c4c344d3c9434c93a7f8c301b656e10c" translate="yes" xml:space="preserve">
          <source>Returns the last status change time of the file, in nanoseconds since &lt;a href=&quot;trait.metadataext#tymethod.ctime&quot;&gt;&lt;code&gt;ctime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a286484c1ca204bfbf797dc7fbe17dceb44fd791" translate="yes" xml:space="preserve">
          <source>Returns the last status change time of the file, in nanoseconds since &lt;a href=&quot;trait.metadataext#tymethod.st_ctime&quot;&gt;&lt;code&gt;st_ctime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57bcb38dad77fdd499a13fefde02fa0fa7784902" translate="yes" xml:space="preserve">
          <source>Returns the last status change time of the file, in nanoseconds since [&lt;code&gt;ctime&lt;/code&gt;]. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.ctime_nsec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает время последнего изменения статуса файла в наносекундах с [ &lt;code&gt;ctime&lt;/code&gt; ]. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.ctime_nsec&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38211dd62e14ec33ec3e4596407a9d4393423172" translate="yes" xml:space="preserve">
          <source>Returns the last status change time of the file, in nanoseconds since [&lt;code&gt;st_ctime&lt;/code&gt;]. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_ctime_nsec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает время последнего изменения статуса файла в наносекундах с [ &lt;code&gt;st_ctime&lt;/code&gt; ]. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_ctime_nsec&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00ffec13fd3490355665d7c7f61413e58cba13e2" translate="yes" xml:space="preserve">
          <source>Returns the last status change time of the file, in seconds since Unix Epoch.</source>
          <target state="translated">Возвращает время последнего изменения статуса файла,в секундах с эпохи Unix.</target>
        </trans-unit>
        <trans-unit id="963e3a7bee6fc1221e9e031fc0406c8bfe9c5c81" translate="yes" xml:space="preserve">
          <source>Returns the last status change time of the file, in seconds since Unix Epoch. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_ctime&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает время последнего изменения статуса файла в секундах с момента появления Unix Epoch. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_ctime&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c6aa771a5359a820e246f0834b0187ff59562cc" translate="yes" xml:space="preserve">
          <source>Returns the last status change time of the file, in seconds since Unix Epoch. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.ctime&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает время последнего изменения статуса файла в секундах с момента появления Unix Epoch. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.ctime&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="520e1369a3755aa0a1447abf256749b096f14815" translate="yes" xml:space="preserve">
          <source>Returns the length of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">Возвращает длину &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c30f16bbcbb944348ccb41dc99138faf1df12c9" translate="yes" xml:space="preserve">
          <source>Returns the length of a non-null raw slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a81ea088dfb28cd7b0e7259a380e2b8f279569" translate="yes" xml:space="preserve">
          <source>Returns the length of a raw slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b766728b43f92f96c53be68bd6aa3bc18704fa8" translate="yes" xml:space="preserve">
          <source>Returns the length of the &lt;code&gt;LinkedList&lt;/code&gt;.</source>
          <target state="translated">Возвращает длину &lt;code&gt;LinkedList&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5788b1a53289e0e37aae8baadc110091ba5ce966" translate="yes" xml:space="preserve">
          <source>Returns the length of the binary heap.</source>
          <target state="translated">Возвращает длину двоичной кучи.</target>
        </trans-unit>
        <trans-unit id="31b2f87e85d573faa9db9993fefaf0dcf7dd5d9c" translate="yes" xml:space="preserve">
          <source>Returns the length of this &lt;code&gt;OsStr&lt;/code&gt;.</source>
          <target state="translated">Возвращает длину этого &lt;code&gt;OsStr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fcff822dfed2e93a8caeff9931edb93305c3e7f7" translate="yes" xml:space="preserve">
          <source>Returns the length of this &lt;code&gt;String&lt;/code&gt;, in bytes, not &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;s or graphemes. In other words, it may not be what a human considers the length of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1a3ee91a2ad73ea92e9bcfe3a438fd902e5a98" translate="yes" xml:space="preserve">
          <source>Returns the length of this &lt;code&gt;String&lt;/code&gt;, in bytes.</source>
          <target state="translated">Возвращает длину этой &lt;code&gt;String&lt;/code&gt; в байтах.</target>
        </trans-unit>
        <trans-unit id="795fed791a9e8a31900da01797052f66e0a6a4fa" translate="yes" xml:space="preserve">
          <source>Returns the length of this stream (in bytes).</source>
          <target state="translated">Возвращает длину этого потока (в байтах).</target>
        </trans-unit>
        <trans-unit id="dd26ded6c352bda77f7a3083b091a4db9ce330e3" translate="yes" xml:space="preserve">
          <source>Returns the length of this stream (in bytes). &lt;a href=&quot;../io/trait.seek#method.stream_len&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает длину этого потока (в байтах). &lt;a href=&quot;../io/trait.seek#method.stream_len&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3093bd7216ddc6503c04245839bb9066034a9c12" translate="yes" xml:space="preserve">
          <source>Returns the length of this stream (in bytes). &lt;a href=&quot;io/trait.seek#method.stream_len&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает длину этого потока (в байтах). &lt;a href=&quot;io/trait.seek#method.stream_len&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="73cd7d7e328372f3f88cd0d3c8536595de82b2a6" translate="yes" xml:space="preserve">
          <source>Returns the length of this stream (in bytes). &lt;a href=&quot;trait.seek#method.stream_len&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает длину этого потока (в байтах). &lt;a href=&quot;trait.seek#method.stream_len&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e22395aa1b3ef8348ba981d896ef437bd6045935" translate="yes" xml:space="preserve">
          <source>Returns the line number from which the panic originated.</source>
          <target state="translated">Возвращает номер строки,с которой возникла паника.</target>
        </trans-unit>
        <trans-unit id="dbdf91714d79ece726f4db7ba9256f266be6b45c" translate="yes" xml:space="preserve">
          <source>Returns the local socket address of this listener.</source>
          <target state="translated">Возвращает адрес локального сокета этого слушателя.</target>
        </trans-unit>
        <trans-unit id="55697a7e6e463058024c2512d8554f0f3212443d" translate="yes" xml:space="preserve">
          <source>Returns the logarithm of the number with respect to an arbitrary base.</source>
          <target state="translated">Возвращает логарифм числа относительно произвольного основания.</target>
        </trans-unit>
        <trans-unit id="4b628909503d6cf3eeeeb0549626a7bf17505461" translate="yes" xml:space="preserve">
          <source>Returns the lower bound of the range (inclusive).</source>
          <target state="translated">Возвращает нижнюю границу диапазона (включительно).</target>
        </trans-unit>
        <trans-unit id="272641259261755267f1cba14521e8322a467656" translate="yes" xml:space="preserve">
          <source>Returns the lowercase equivalent of this string slice, as a new &lt;a href=&quot;string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Возвращает строчный эквивалент этого фрагмента строки как новую &lt;a href=&quot;string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0a465e9c28cd028d5e1df8477b3548ec6f461fca" translate="yes" xml:space="preserve">
          <source>Returns the lowercase equivalent of this string slice, as a new &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e039685c308ed74e0730672f176d0db99cb9020e" translate="yes" xml:space="preserve">
          <source>Returns the maximum element of an iterator.</source>
          <target state="translated">Возвращает максимальный элемент итератора.</target>
        </trans-unit>
        <trans-unit id="2135561cb6b2b9c756db5a4559f01d27eda7e19e" translate="yes" xml:space="preserve">
          <source>Returns the maximum element of an iterator. &lt;a href=&quot;../../../iter/trait.iterator#method.max&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает максимальный элемент итератора. &lt;a href=&quot;../../../iter/trait.iterator#method.max&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3359996d97c36b7ac95ba00680611de0c76fe2f8" translate="yes" xml:space="preserve">
          <source>Returns the maximum element of an iterator. &lt;a href=&quot;../../iter/trait.iterator#method.max&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает максимальный элемент итератора. &lt;a href=&quot;../../iter/trait.iterator#method.max&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50186ac96fa893850730c9ee56859eb47b531105" translate="yes" xml:space="preserve">
          <source>Returns the maximum element of an iterator. &lt;a href=&quot;../iter/trait.iterator#method.max&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает максимальный элемент итератора. &lt;a href=&quot;../iter/trait.iterator#method.max&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3019abfd5e8950da5748e3ac7432cfdd9a4d8305" translate="yes" xml:space="preserve">
          <source>Returns the maximum element of an iterator. &lt;a href=&quot;iter/trait.iterator#method.max&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает максимальный элемент итератора. &lt;a href=&quot;iter/trait.iterator#method.max&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3c9ee65dcb7d1e0ac427c46da554f19b9be65e0" translate="yes" xml:space="preserve">
          <source>Returns the maximum element of an iterator. &lt;a href=&quot;trait.iterator#method.max&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает максимальный элемент итератора. &lt;a href=&quot;trait.iterator#method.max&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8fd61b1f3c3b7358c36d58923a9f04dacedfdfc5" translate="yes" xml:space="preserve">
          <source>Returns the maximum of the two numbers.</source>
          <target state="translated">Возвращает максимум два числа.</target>
        </trans-unit>
        <trans-unit id="30c3b32049dbb64746fe6d73975b99a2dc6c4f66" translate="yes" xml:space="preserve">
          <source>Returns the maximum of two &lt;code&gt;f32&lt;/code&gt; values.</source>
          <target state="translated">Возвращает максимум два значения &lt;code&gt;f32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="247cc627a7ac900b32b26fb9b8c6d5ad9385c7f8" translate="yes" xml:space="preserve">
          <source>Returns the maximum of two &lt;code&gt;f64&lt;/code&gt; values.</source>
          <target state="translated">Возвращает максимум два значения &lt;code&gt;f64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4962568c93c1a037a9696e5bca9fbffeabf92088" translate="yes" xml:space="preserve">
          <source>Returns the maximum of two values with respect to the specified comparison function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3de35e96efd02a2755cead497840bb3d6839e3e" translate="yes" xml:space="preserve">
          <source>Returns the metadata for the file that this entry points at.</source>
          <target state="translated">Возвращает метаданные для файла,на который указывает эта запись.</target>
        </trans-unit>
        <trans-unit id="f17d644b364550b8b9020fb92c8806c2c9812b48" translate="yes" xml:space="preserve">
          <source>Returns the minimum element of an iterator.</source>
          <target state="translated">Возвращает минимальный элемент итератора.</target>
        </trans-unit>
        <trans-unit id="205b01799fe0e02bada45f6baef02bf547a4717c" translate="yes" xml:space="preserve">
          <source>Returns the minimum element of an iterator. &lt;a href=&quot;../../../iter/trait.iterator#method.min&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает минимальный элемент итератора. &lt;a href=&quot;../../../iter/trait.iterator#method.min&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fcf6d8f76d948c4e400182f514005c8a0d110c32" translate="yes" xml:space="preserve">
          <source>Returns the minimum element of an iterator. &lt;a href=&quot;../../iter/trait.iterator#method.min&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает минимальный элемент итератора. &lt;a href=&quot;../../iter/trait.iterator#method.min&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e2d130f2bfef7b60c573f849d6ecfa0c2f2f976" translate="yes" xml:space="preserve">
          <source>Returns the minimum element of an iterator. &lt;a href=&quot;../iter/trait.iterator#method.min&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает минимальный элемент итератора. &lt;a href=&quot;../iter/trait.iterator#method.min&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="901b9764f12d444a30a37a9ade0622026900fa66" translate="yes" xml:space="preserve">
          <source>Returns the minimum element of an iterator. &lt;a href=&quot;iter/trait.iterator#method.min&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает минимальный элемент итератора. &lt;a href=&quot;iter/trait.iterator#method.min&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3700b3a95f0c02c2283ada4be60a59f814923832" translate="yes" xml:space="preserve">
          <source>Returns the minimum element of an iterator. &lt;a href=&quot;trait.iterator#method.min&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает минимальный элемент итератора. &lt;a href=&quot;trait.iterator#method.min&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ca84abbb5e5ae81280f44971ed9a2a687c192be8" translate="yes" xml:space="preserve">
          <source>Returns the minimum of the two numbers.</source>
          <target state="translated">Возвращает минимум два числа.</target>
        </trans-unit>
        <trans-unit id="ecda6fabdc2696641b0ec126986b008c51cc454e" translate="yes" xml:space="preserve">
          <source>Returns the minimum of two &lt;code&gt;f32&lt;/code&gt; values.</source>
          <target state="translated">Возвращает минимум два значения &lt;code&gt;f32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52c45a95830729cd310f3809848b0e7067a0096d" translate="yes" xml:space="preserve">
          <source>Returns the minimum of two &lt;code&gt;f64&lt;/code&gt; values.</source>
          <target state="translated">Возвращает минимум два значения &lt;code&gt;f64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42b2132694a69312ad1525e463be14b3fe5ae0f5" translate="yes" xml:space="preserve">
          <source>Returns the minimum of two values with respect to the specified comparison function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6615edb5165359b08e1212e95589fae45987d7" translate="yes" xml:space="preserve">
          <source>Returns the name of a type as a string slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a828256461022107db16350b7504b0d9239c081a" translate="yes" xml:space="preserve">
          <source>Returns the name of the source file from which the panic originated.</source>
          <target state="translated">Возвращает имя исходного файла,из которого возникла паника.</target>
        </trans-unit>
        <trans-unit id="3f4e19eee28692cda80dc81ade04047c7c8a9f55" translate="yes" xml:space="preserve">
          <source>Returns the name of the type of the pointed-to value as a string slice. This is the same as &lt;code&gt;type_name::&amp;lt;T&amp;gt;()&lt;/code&gt;, but can be used where the type of a variable is not easily available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83333fccf6ef75f54e0218546c7f725da1ebface" translate="yes" xml:space="preserve">
          <source>Returns the natural logarithm of an &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="translated">Возвращает натуральный логарифм &lt;code&gt;f32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5ab689a5bae1343ba9a9f3bfb72e68ef394c018" translate="yes" xml:space="preserve">
          <source>Returns the natural logarithm of an &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">Возвращает натуральный логарифм &lt;code&gt;f64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd24a7328e5a280a50328c4d1161c9e543f887b5" translate="yes" xml:space="preserve">
          <source>Returns the natural logarithm of the number.</source>
          <target state="translated">Возвращает естественный логарифм числа.</target>
        </trans-unit>
        <trans-unit id="7237905abd66fd12dcfc26285a6307a450f5654f" translate="yes" xml:space="preserve">
          <source>Returns the nearest integer to a number. Round half-way cases away from &lt;code&gt;0.0&lt;/code&gt;.</source>
          <target state="translated">Возвращает ближайшее к числу целое число. Округлите промежуточные корпуса от &lt;code&gt;0.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb642cb9e0d9834abf0326cb195f07477b421233" translate="yes" xml:space="preserve">
          <source>Returns the nearest integer to an &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="translated">Возвращает ближайшее целое число к &lt;code&gt;f32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c2a297f62690660d2c8c66bf770c97c7d792116" translate="yes" xml:space="preserve">
          <source>Returns the nearest integer to an &lt;code&gt;f32&lt;/code&gt;. May raise an inexact floating-point exception if the argument is not an integer.</source>
          <target state="translated">Возвращает ближайшее целое число к &lt;code&gt;f32&lt;/code&gt; . Может вызвать неточное исключение с плавающей запятой, если аргумент не является целым числом.</target>
        </trans-unit>
        <trans-unit id="21886742e30f552ab55260a40c0dfc411b212b95" translate="yes" xml:space="preserve">
          <source>Returns the nearest integer to an &lt;code&gt;f32&lt;/code&gt;. Rounds half-way cases away from zero.</source>
          <target state="translated">Возвращает ближайшее целое число к &lt;code&gt;f32&lt;/code&gt; . Округляет среднее число случаев от нуля.</target>
        </trans-unit>
        <trans-unit id="64d2e0d5f5f9bf1f5571360f810d07d13da9fc4c" translate="yes" xml:space="preserve">
          <source>Returns the nearest integer to an &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">Возвращает ближайшее целое число к &lt;code&gt;f64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4ac32407096b500363b8636a1dc0b5f0a8b79dc" translate="yes" xml:space="preserve">
          <source>Returns the nearest integer to an &lt;code&gt;f64&lt;/code&gt;. May raise an inexact floating-point exception if the argument is not an integer.</source>
          <target state="translated">Возвращает ближайшее целое число к &lt;code&gt;f64&lt;/code&gt; . Может вызвать неточное исключение с плавающей запятой, если аргумент не является целым числом.</target>
        </trans-unit>
        <trans-unit id="fc52ce4b4d190d8db6e2e9afd8bd2d3a54c597c7" translate="yes" xml:space="preserve">
          <source>Returns the nearest integer to an &lt;code&gt;f64&lt;/code&gt;. Rounds half-way cases away from zero.</source>
          <target state="translated">Возвращает ближайшее целое число к &lt;code&gt;f64&lt;/code&gt; . Округляет среднее число случаев от нуля.</target>
        </trans-unit>
        <trans-unit id="e4f5b3c77ebb2efbd715912995a73410c47b8d5b" translate="yes" xml:space="preserve">
          <source>Returns the number of 16-bit code units this &lt;code&gt;char&lt;/code&gt; would need if encoded in UTF-16.</source>
          <target state="translated">Возвращает количество 16-битных кодовых единиц, которые потребуются этому &lt;code&gt;char&lt;/code&gt; , если он закодирован в UTF-16.</target>
        </trans-unit>
        <trans-unit id="6281e8c8df622284747d80c8ac8f829737dc6435" translate="yes" xml:space="preserve">
          <source>Returns the number of &lt;em&gt;successor&lt;/em&gt; steps required to get from &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720495806ad0e14053a539d5ed16665ef8c1b45b" translate="yes" xml:space="preserve">
          <source>Returns the number of &lt;em&gt;successor&lt;/em&gt; steps required to get from &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;end&lt;/code&gt;. &lt;a href=&quot;iter/trait.step#tymethod.steps_between&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a7f3574ab5097dd0265c4a9d8549969beb7906" translate="yes" xml:space="preserve">
          <source>Returns the number of &lt;em&gt;whole&lt;/em&gt; seconds contained by this &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">Возвращает количество &lt;em&gt;полных&lt;/em&gt; секунд, содержащихся в этой &lt;code&gt;Duration&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96930962b8edcd03a1fa8561a83c6fec41c9989a" translate="yes" xml:space="preserve">
          <source>Returns the number of bits set in an integer type &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">Возвращает количество битов, установленных в целочисленном типе &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28c529d34cbb9a98aaac0741ad1eeebbae42b8dc" translate="yes" xml:space="preserve">
          <source>Returns the number of blocks allocated to the file, 512-byte units.</source>
          <target state="translated">Возвращает количество блоков,выделенных для файла,512-байтных единиц.</target>
        </trans-unit>
        <trans-unit id="eddff80318319ea022b5496c8822b394111ee355" translate="yes" xml:space="preserve">
          <source>Returns the number of blocks allocated to the file, 512-byte units. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_blocks&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает количество блоков, выделенных для файла, по 512 байт. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_blocks&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e890b8da5e9f5ed3855b2c0ebaf360294627c90" translate="yes" xml:space="preserve">
          <source>Returns the number of blocks allocated to the file, in 512-byte units.</source>
          <target state="translated">Возвращает количество блоков,выделенных файлу,в 512-байтных единицах.</target>
        </trans-unit>
        <trans-unit id="855d42c182e54c20593bc45e8be3be8b7d7f8735" translate="yes" xml:space="preserve">
          <source>Returns the number of blocks allocated to the file, in 512-byte units. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.blocks&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает количество блоков, выделенных файлу, в единицах по 512 байт. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.blocks&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6434b6944d2238b15a52d8a3e969badaeca1acd5" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes read.</source>
          <target state="translated">Возвращает количество прочитанных байтов.</target>
        </trans-unit>
        <trans-unit id="ee242ec486fc4bd3b3ac4fa373d2caf18fa97a52" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes that can be read before this instance will return EOF.</source>
          <target state="translated">Возвращает количество байт,которое может быть прочитано до того,как этот экземпляр вернет EOF.</target>
        </trans-unit>
        <trans-unit id="03258f40d4ec53e1df9bba9496419fe9c8eacad5" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes the internal buffer can hold at once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc667e25a161ffe5f865ed1e184f902a17a34a4b" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes the internal buffer can hold without flushing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34295ce135f3d1c1247d249b273d39da97aa1a1b" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes this &lt;code&gt;char&lt;/code&gt; would need if encoded in UTF-8.</source>
          <target state="translated">Возвращает количество байтов, которое потребуется этому &lt;code&gt;char&lt;/code&gt; , если он закодирован в UTF-8.</target>
        </trans-unit>
        <trans-unit id="1851900c6b83fd96b21463287e58ed074d952fb8" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes written.</source>
          <target state="translated">Возвращает количество записанных байтов.</target>
        </trans-unit>
        <trans-unit id="b10d409e1330d3f9dc58defe912aa849299ede80" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in the &lt;code&gt;VecDeque&lt;/code&gt;.</source>
          <target state="translated">Возвращает количество элементов в &lt;code&gt;VecDeque&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24c3b1fe85f698a84f93ffe3c38ed093349a4fbc" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in the map.</source>
          <target state="translated">Возвращает количество элементов на карте.</target>
        </trans-unit>
        <trans-unit id="1cbf3b2f459f250f2c2d9e23c7b2faf808ddc568" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in the set.</source>
          <target state="translated">Возвращает количество элементов в наборе.</target>
        </trans-unit>
        <trans-unit id="c012fe0604da402f4dc1758c756c9188e1bbdc5c" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in the slice.</source>
          <target state="translated">Возвращает количество элементов на срезе.</target>
        </trans-unit>
        <trans-unit id="8e3bc830d0ddf8fdc5d4aec673164e97e3d68f19" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in the vector, also referred to as its 'length'.</source>
          <target state="translated">Возвращает количество элементов в векторе,также называемых его &quot;длиной&quot;.</target>
        </trans-unit>
        <trans-unit id="c545b209598e28721cdaf0bee4a0d709a4638984" translate="yes" xml:space="preserve">
          <source>Returns the number of elements the &lt;code&gt;VecDeque&lt;/code&gt; can hold without reallocating.</source>
          <target state="translated">Возвращает количество элементов, которое &lt;code&gt;VecDeque&lt;/code&gt; может содержать без перераспределения.</target>
        </trans-unit>
        <trans-unit id="8cdab4b15f25c7eb0c9ed75a8262458f6c286463" translate="yes" xml:space="preserve">
          <source>Returns the number of elements the binary heap can hold without reallocating.</source>
          <target state="translated">Возвращает количество элементов,которые может удерживать двоичная куча без перераспределения.</target>
        </trans-unit>
        <trans-unit id="1becc1d39ab8dbc391f6aad03e1c15b64ad56109" translate="yes" xml:space="preserve">
          <source>Returns the number of elements the map can hold without reallocating.</source>
          <target state="translated">Возвращает количество элементов,которые карта может держать без перераспределения.</target>
        </trans-unit>
        <trans-unit id="2e970bbfaa04c221f60030aec585bd8dddfe9864" translate="yes" xml:space="preserve">
          <source>Returns the number of elements the set can hold without reallocating.</source>
          <target state="translated">Возвращает количество элементов,которые набор может удерживать без перераспределения.</target>
        </trans-unit>
        <trans-unit id="32e1df76d723addf95da715139184ea2ec30efc5" translate="yes" xml:space="preserve">
          <source>Returns the number of elements the vector can hold without reallocating.</source>
          <target state="translated">Возвращает количество элементов,которое вектор может удерживать без перераспределения.</target>
        </trans-unit>
        <trans-unit id="7df2aa4d3dc9f6d3ff4c9009c185489b61395196" translate="yes" xml:space="preserve">
          <source>Returns the number of hard links pointing to this file.</source>
          <target state="translated">Возвращает количество жестких ссылок,указывающих на этот файл.</target>
        </trans-unit>
        <trans-unit id="4c9a095340d4ec401e05ccf76c5ebdfb6820d552" translate="yes" xml:space="preserve">
          <source>Returns the number of hard links pointing to this file. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.nlink&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает количество жестких ссылок, указывающих на этот файл. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.nlink&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ad0b9dafd2155adc5c331e542d5a8a2c3c9b01a" translate="yes" xml:space="preserve">
          <source>Returns the number of hard links to file.</source>
          <target state="translated">Возвращает количество жестких ссылок на файл.</target>
        </trans-unit>
        <trans-unit id="d78e77a67dbf1414bcf10daa7d2a7ed9f95eb421" translate="yes" xml:space="preserve">
          <source>Returns the number of hard links to file. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_nlink&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает количество жестких ссылок на файл. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_nlink&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94b420c8d458f142295c871d40b6fad08bd72b03" translate="yes" xml:space="preserve">
          <source>Returns the number of leading ones in the binary representation of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92db6deee30912ade983794ce70aad03edb0b0f" translate="yes" xml:space="preserve">
          <source>Returns the number of leading unset bits (zeroes) in an integer type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">Возвращает число ведущих неустановленные битов (нулей) в качестве целого типа &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dae5a5045ddc829a1383c4ac50a88d9dcf10d66d" translate="yes" xml:space="preserve">
          <source>Returns the number of leading zeros in the binary representation of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">Возвращает количество ведущих нулей в двоичном представлении &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d832cefaae934438ce2d4ef386004669cb52ba4b" translate="yes" xml:space="preserve">
          <source>Returns the number of ones in the binary representation of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">Возвращает количество единиц в двоичном представлении &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97655611ca81b408277e39f6a5decfef237a405a" translate="yes" xml:space="preserve">
          <source>Returns the number of seconds contained by this &lt;code&gt;Duration&lt;/code&gt; as &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="translated">Возвращает количество секунд, содержащихся в этой &lt;code&gt;Duration&lt;/code&gt; как &lt;code&gt;f32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b5e2120974f53ae492dacc5bfc48941d7abe632" translate="yes" xml:space="preserve">
          <source>Returns the number of seconds contained by this &lt;code&gt;Duration&lt;/code&gt; as &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">Возвращает количество секунд, содержащихся в этой &lt;code&gt;Duration&lt;/code&gt; как &lt;code&gt;f64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63a46f40f8ef8cc408902bd6c925cd90edfaa7b7" translate="yes" xml:space="preserve">
          <source>Returns the number of steps between two step objects. The count is inclusive of &lt;code&gt;start&lt;/code&gt; and exclusive of &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="translated">Возвращает количество шагов между двумя объектами step. Счетчик включает &lt;code&gt;start&lt;/code&gt; и &lt;code&gt;end&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="427639049bb9cfb4a7d577a0181f28d0bf88bae0" translate="yes" xml:space="preserve">
          <source>Returns the number of steps between two step objects. The count is inclusive of &lt;code&gt;start&lt;/code&gt; and exclusive of &lt;code&gt;end&lt;/code&gt;. &lt;a href=&quot;iter/trait.step#tymethod.steps_between&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает количество шагов между двумя объектами step. Счетчик включает &lt;code&gt;start&lt;/code&gt; и &lt;code&gt;end&lt;/code&gt; . &lt;a href=&quot;iter/trait.step#tymethod.steps_between&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3903587ab9df7f73d17b443d8e643044dd070f41" translate="yes" xml:space="preserve">
          <source>Returns the number of trailing ones in the binary representation of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6671fd92a76e925fab2823d109d27a8de831276a" translate="yes" xml:space="preserve">
          <source>Returns the number of trailing unset bits (zeroes) in an integer type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">Возвращает количество бит задней неустановленные (нули) в целом числе типа &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eab9f3d5e6f6155d60647266e42f2a504f019bbe" translate="yes" xml:space="preserve">
          <source>Returns the number of trailing zeros in the binary representation of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">Возвращает количество завершающих нулей в двоичном представлении &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29aa7f303b62d8d46db345a5c69b269a2bd376d4" translate="yes" xml:space="preserve">
          <source>Returns the number of variants in the enum type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28178561c062cbbb07342994184104c8af4e2d5" translate="yes" xml:space="preserve">
          <source>Returns the number of variants of the type &lt;code&gt;T&lt;/code&gt; cast to a &lt;code&gt;usize&lt;/code&gt;; if &lt;code&gt;T&lt;/code&gt; has no variants, returns 0. Uninhabited variants will be counted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd348e230a91a18bbcc6c0bb5c3e441a0cca4cf3" translate="yes" xml:space="preserve">
          <source>Returns the number of zeros in the binary representation of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">Возвращает количество нулей в двоичном представлении &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45352dec964cff88c866e11d68ce5116072729fc" translate="yes" xml:space="preserve">
          <source>Returns the option if it contains a value, otherwise calls &lt;code&gt;f&lt;/code&gt; and returns the result.</source>
          <target state="translated">Возвращает параметр, если он содержит значение, в противном случае вызывает &lt;code&gt;f&lt;/code&gt; и возвращает результат.</target>
        </trans-unit>
        <trans-unit id="bf06fc2805b54388d8ded252fa41db96d725052b" translate="yes" xml:space="preserve">
          <source>Returns the option if it contains a value, otherwise returns &lt;code&gt;optb&lt;/code&gt;.</source>
          <target state="translated">Возвращает параметр, если он содержит значение, в противном случае возвращает &lt;code&gt;optb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1316e8e7b8a477f38d0ee7bfc3da417f22443f6" translate="yes" xml:space="preserve">
          <source>Returns the parsed prefix data.</source>
          <target state="translated">Возвращает обработанные данные префикса.</target>
        </trans-unit>
        <trans-unit id="b117b7285a3c2821075991e8b1033779e34a0299" translate="yes" xml:space="preserve">
          <source>Returns the path of a temporary directory.</source>
          <target state="translated">Возвращает путь к временному каталогу.</target>
        </trans-unit>
        <trans-unit id="f563d04b456eaf4db8367341d7334d73bc450a66" translate="yes" xml:space="preserve">
          <source>Returns the path of the current user's home directory if known.</source>
          <target state="translated">Возвращает путь к домашней директории текущего пользователя,если он известен.</target>
        </trans-unit>
        <trans-unit id="77153ca4078bcb66c4d4032735b644ce465f0ba7" translate="yes" xml:space="preserve">
          <source>Returns the path to the program that was given to &lt;a href=&quot;struct.command#method.new&quot;&gt;&lt;code&gt;Command::new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3f5fb3a7dd65253c6914c653f8edf30e8c49a8" translate="yes" xml:space="preserve">
          <source>Returns the payload associated with the panic.</source>
          <target state="translated">Возвращает груз,связанный с паникой.</target>
        </trans-unit>
        <trans-unit id="fca8b37c782fe927223a8e8018197d19aeba86d6" translate="yes" xml:space="preserve">
          <source>Returns the permissions of the file this metadata is for.</source>
          <target state="translated">Возвращает права доступа к файлу,для которого предназначены эти метаданные.</target>
        </trans-unit>
        <trans-unit id="2720e85bef6b0dbe798fe6e2d3c68a82211bb1c4" translate="yes" xml:space="preserve">
          <source>Returns the port number associated with this socket address.</source>
          <target state="translated">Возвращает номер порта,связанный с этим адресом сокета.</target>
        </trans-unit>
        <trans-unit id="9f005ac121d3b3785fafcb15a6d606f9d600acb9" translate="yes" xml:space="preserve">
          <source>Returns the position of the nul byte in the slice that caused &lt;a href=&quot;struct.cstring#method.new&quot;&gt;&lt;code&gt;CString::new&lt;/code&gt;&lt;/a&gt; to fail.</source>
          <target state="translated">Возвращает позицию нулевого байта в срезе, вызвавшего сбой &lt;a href=&quot;struct.cstring#method.new&quot;&gt; &lt;code&gt;CString::new&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e153e3cdb60ebf2bb17cc783e5a6250ad233aa99" translate="yes" xml:space="preserve">
          <source>Returns the positive duration which represents how far forward the second system time was from the first.</source>
          <target state="translated">Возвращает положительную продолжительность,которая показывает,насколько далеко вперед было второе системное время от первого.</target>
        </trans-unit>
        <trans-unit id="1201f05ed3305d32cba2b7425d656cbb7cd2fe1f" translate="yes" xml:space="preserve">
          <source>Returns the previous value.</source>
          <target state="translated">Возвращает предыдущее значение.</target>
        </trans-unit>
        <trans-unit id="c186f4f82806ac77dac17f3f7d7d9eccefbb2c57" translate="yes" xml:space="preserve">
          <source>Returns the raw &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; slice for this prefix.</source>
          <target state="translated">Возвращает необработанный фрагмент &lt;a href=&quot;../ffi/struct.osstr&quot;&gt; &lt;code&gt;OsStr&lt;/code&gt; &lt;/a&gt; для этого префикса.</target>
        </trans-unit>
        <trans-unit id="b78e6c162194bf676f86c06904e67bb4f8e7600f" translate="yes" xml:space="preserve">
          <source>Returns the raw pointer to the underlying data, the length of the string (in bytes), and the allocated capacity of the data (in bytes). These are the same arguments in the same order as the arguments to &lt;a href=&quot;struct.string#method.from_raw_parts&quot;&gt;&lt;code&gt;from_raw_parts&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429e163c7cf1f3e8308132df2a867e58aa484cb4" translate="yes" xml:space="preserve">
          <source>Returns the raw pointer to the underlying data, the length of the vector (in elements), and the allocated capacity of the data (in elements). These are the same arguments in the same order as the arguments to &lt;a href=&quot;struct.vec#method.from_raw_parts&quot;&gt;&lt;code&gt;from_raw_parts&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88640dffcf207b874bdca27192e40ad25f550caf" translate="yes" xml:space="preserve">
          <source>Returns the read timeout of this socket.</source>
          <target state="translated">Возвращает тайм-аут считывания этого гнезда.</target>
        </trans-unit>
        <trans-unit id="5ea8cd21e899dde4ef3730be8e94fce1fe13c572" translate="yes" xml:space="preserve">
          <source>Returns the remainder of an unchecked division, resulting in undefined behavior where y = 0 or x = &lt;code&gt;T::MIN&lt;/code&gt; and y = -1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ef261a1b92a9a4b088c4c70c49986d741571ac" translate="yes" xml:space="preserve">
          <source>Returns the remainder of an unchecked division, resulting in undefined behavior where y = 0 or x = &lt;code&gt;T::min_value()&lt;/code&gt; and y = -1</source>
          <target state="translated">Возвращает остаток от непроверенного деления, что приводит к неопределенному поведению, когда y = 0 или x = &lt;code&gt;T::min_value()&lt;/code&gt; и y = -1</target>
        </trans-unit>
        <trans-unit id="dc5f23684b71c80bcea64e7b07dfcd58a70e8023" translate="yes" xml:space="preserve">
          <source>Returns the remainder of the original slice that is not going to be returned by the iterator. The returned slice has at most &lt;code&gt;chunk_size-1&lt;/code&gt; elements.</source>
          <target state="translated">Возвращает остаток от исходного среза, который не будет возвращен итератором. &lt;code&gt;chunk_size-1&lt;/code&gt; фрагмент содержит не более элементов chunk_size-1 .</target>
        </trans-unit>
        <trans-unit id="fd0dfb5ec6eaddd847ec72cc05e6d88b1bed5b75" translate="yes" xml:space="preserve">
          <source>Returns the remaining (sub)string of this iterator as a slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a157d0e715a8c9d1c559dc1fad65fa0f8ba1d9" translate="yes" xml:space="preserve">
          <source>Returns the remaining items of this iterator as a mutable slice.</source>
          <target state="translated">Возвращает остальные элементы этого итератора в виде мутирующего кусочка.</target>
        </trans-unit>
        <trans-unit id="027545cdbb69dd8feabe3057b3d85880ce87cfaf" translate="yes" xml:space="preserve">
          <source>Returns the remaining items of this iterator as a slice.</source>
          <target state="translated">Возвращает остальные элементы этого итератора в виде кусочка.</target>
        </trans-unit>
        <trans-unit id="5ab3aa67dfc786bc08d01fb6227be4aea4004418" translate="yes" xml:space="preserve">
          <source>Returns the remaining spare capacity of the vector as a slice of &lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abbc1df3f511a61b305b46fcb9fdb889f766936b" translate="yes" xml:space="preserve">
          <source>Returns the result of an unchecked addition, resulting in undefined behavior when &lt;code&gt;x + y &amp;gt; T::MAX&lt;/code&gt; or &lt;code&gt;x + y &amp;lt; T::MIN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70fc3f0c75305aeeca36c3927e9f1404a9e09390" translate="yes" xml:space="preserve">
          <source>Returns the result of an unchecked addition, resulting in undefined behavior when &lt;code&gt;x + y &amp;gt; T::max_value()&lt;/code&gt; or &lt;code&gt;x + y &amp;lt; T::min_value()&lt;/code&gt;.</source>
          <target state="translated">Возвращает результат непроверенного сложения, приводящего к неопределенному поведению, когда &lt;code&gt;x + y &amp;gt; T::max_value()&lt;/code&gt; или &lt;code&gt;x + y &amp;lt; T::min_value()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5737e2a90e952931b3da37731b673f06fdd1624" translate="yes" xml:space="preserve">
          <source>Returns the result of an unchecked multiplication, resulting in undefined behavior when &lt;code&gt;x * y &amp;gt; T::MAX&lt;/code&gt; or &lt;code&gt;x * y &amp;lt; T::MIN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9745bee6c80d896cf8f39d7600119e7d9e0b6e6" translate="yes" xml:space="preserve">
          <source>Returns the result of an unchecked multiplication, resulting in undefined behavior when &lt;code&gt;x * y &amp;gt; T::max_value()&lt;/code&gt; or &lt;code&gt;x * y &amp;lt; T::min_value()&lt;/code&gt;.</source>
          <target state="translated">Возвращает результат непроверенного умножения, приводящего к неопределенному поведению, когда &lt;code&gt;x * y &amp;gt; T::max_value()&lt;/code&gt; или &lt;code&gt;x * y &amp;lt; T::min_value()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de414e90ec1393c95c07a4e47e5e93f614417b18" translate="yes" xml:space="preserve">
          <source>Returns the result of an unchecked substraction, resulting in undefined behavior when &lt;code&gt;x - y &amp;gt; T::max_value()&lt;/code&gt; or &lt;code&gt;x - y &amp;lt; T::min_value()&lt;/code&gt;.</source>
          <target state="translated">Возвращает результат непроверенной вычитания, что приводит к неопределенному поведению, когда &lt;code&gt;x - y &amp;gt; T::max_value()&lt;/code&gt; или &lt;code&gt;x - y &amp;lt; T::min_value()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="64c4926926f86f33410ade9b87a59fa898e299fa" translate="yes" xml:space="preserve">
          <source>Returns the result of an unchecked subtraction, resulting in undefined behavior when &lt;code&gt;x - y &amp;gt; T::MAX&lt;/code&gt; or &lt;code&gt;x - y &amp;lt; T::MIN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae3db5fb2b9f920328b0a1c07245a941fda453a" translate="yes" xml:space="preserve">
          <source>Returns the rights applied to this file.</source>
          <target state="translated">Возвращает права,примененные к этому файлу.</target>
        </trans-unit>
        <trans-unit id="fa0c068d11859365b18192e20c77088112832e94" translate="yes" xml:space="preserve">
          <source>Returns the rights applied to this file. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.mode&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает права, примененные к этому файлу. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.mode&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee530c291660835f1f45ef41a5ab581ece61ca13" translate="yes" xml:space="preserve">
          <source>Returns the scope ID associated with this address.</source>
          <target state="translated">Возвращает идентификатор области видимости,связанной с этим адресом.</target>
        </trans-unit>
        <trans-unit id="678c9b03c50c34623a2e47a9879f160e0a560b4f" translate="yes" xml:space="preserve">
          <source>Returns the second argument if the comparison determines them to be equal.</source>
          <target state="translated">Возвращает второй аргумент,если сравнение определяет их как равные.</target>
        </trans-unit>
        <trans-unit id="ff680bbab3415d4c9f332372b7218874374e1ad6" translate="yes" xml:space="preserve">
          <source>Returns the sine of an &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="translated">Возвращает синус &lt;code&gt;f32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="488db317dfe78ab272e32db4af358f727947f930" translate="yes" xml:space="preserve">
          <source>Returns the sine of an &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">Возвращает синус &lt;code&gt;f64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="893ab8c9895f0365c4b58fcc52206bd9e9ee20c1" translate="yes" xml:space="preserve">
          <source>Returns the sixteen eight-bit integers the IPv6 address consists of.</source>
          <target state="translated">Возвращает шестнадцать восьмиразрядных целых чисел,из которых состоит IPv6-адрес.</target>
        </trans-unit>
        <trans-unit id="7ad6de0505e79afe733be59c25c78e77748c9ec6" translate="yes" xml:space="preserve">
          <source>Returns the size of a type in bytes.</source>
          <target state="translated">Возвращает размер типа в байтах.</target>
        </trans-unit>
        <trans-unit id="4ab55a093c4d747f70a70ca22d5f574fecd8954f" translate="yes" xml:space="preserve">
          <source>Returns the size of the file (if it is a regular file or a symbolic link) in bytes.</source>
          <target state="translated">Возвращает размер файла (если это обычный файл или символическая ссылка)в байтах.</target>
        </trans-unit>
        <trans-unit id="ab6857e7ad65f594a548e2232b4c32d4c45dc30a" translate="yes" xml:space="preserve">
          <source>Returns the size of the file (if it is a regular file or a symbolic link) in bytes. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_size&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает размер файла (если это обычный файл или символическая ссылка) в байтах. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_size&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="596ea0232a4d065a64fde2f486071c2a597a139d" translate="yes" xml:space="preserve">
          <source>Returns the size of the file, in bytes, this metadata is for.</source>
          <target state="translated">Возвращает размер файла,в байтах,для которого эти метаданные предназначены.</target>
        </trans-unit>
        <trans-unit id="e3c2387c476eb088dd4a2b997b29073bc3408f87" translate="yes" xml:space="preserve">
          <source>Returns the size of the pointed-to value in bytes.</source>
          <target state="translated">Возвращает размер указанного значения в байтах.</target>
        </trans-unit>
        <trans-unit id="32bf033f7107839197600c893b817513a6c17e0d" translate="yes" xml:space="preserve">
          <source>Returns the smallest integer greater than or equal to a number.</source>
          <target state="translated">Возвращает наименьшее целое число,большее или равное числу.</target>
        </trans-unit>
        <trans-unit id="b59a3f2aa87e88bf5431631e4df52338b23c8902" translate="yes" xml:space="preserve">
          <source>Returns the smallest integer greater than or equal to an &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="translated">Возвращает наименьшее целое число, большее или равное &lt;code&gt;f32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28bd143b890a1dd19b9c42465e4a4e0673681aeb" translate="yes" xml:space="preserve">
          <source>Returns the smallest integer greater than or equal to an &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">Возвращает наименьшее целое число, большее или равное &lt;code&gt;f64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7e460cb206a1385113e4f9b7160a6a8e71b5cd3" translate="yes" xml:space="preserve">
          <source>Returns the smallest power of two greater than or equal to &lt;code&gt;n&lt;/code&gt;. If the next power of two is greater than the type's maximum value, &lt;code&gt;None&lt;/code&gt; is returned, otherwise the power of two is wrapped in &lt;code&gt;Some&lt;/code&gt;.</source>
          <target state="translated">Возвращает наименьшую степень двойки, большую или равную &lt;code&gt;n&lt;/code&gt; . Если следующая степень двойки больше, чем максимальное значение типа, возвращается &lt;code&gt;None&lt;/code&gt; , в противном случае степень двойки переносится в &lt;code&gt;Some&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c18590c98b090fd7b97738ceeb4be855663893a" translate="yes" xml:space="preserve">
          <source>Returns the smallest power of two greater than or equal to &lt;code&gt;n&lt;/code&gt;. If the next power of two is greater than the type's maximum value, the return value is wrapped to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Возвращает наименьшую степень двойки, большую или равную &lt;code&gt;n&lt;/code&gt; . Если следующая степень двойки больше, чем максимальное значение типа, возвращаемое значение сбрасывается до &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4cd3eec23838310ec32b907db88edb3cc932a796" translate="yes" xml:space="preserve">
          <source>Returns the smallest power of two greater than or equal to &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">Возвращает наименьшее значение двойки, большее или равное &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7ad453b16957fdb2bb77c37c31544afecd12301" translate="yes" xml:space="preserve">
          <source>Returns the smallest value that can be represented by this integer type.</source>
          <target state="translated">Возвращает наименьшее значение,которое может быть представлено этим целочисленным типом.</target>
        </trans-unit>
        <trans-unit id="290cdc5140b6389d4b43579e0a84d62136cf1260" translate="yes" xml:space="preserve">
          <source>Returns the socket address of the local half of this TCP connection.</source>
          <target state="translated">Возвращает адрес сокета локальной половины этого TCP-соединения.</target>
        </trans-unit>
        <trans-unit id="8c7f1ae8ae82d29fa352423e4b438aa08dc9cba8" translate="yes" xml:space="preserve">
          <source>Returns the socket address of the local half of this connection.</source>
          <target state="translated">Возвращает адрес сокета локальной половины этого соединения.</target>
        </trans-unit>
        <trans-unit id="006b46ce56639d41f45e56bf9edb9ba2eea62e08" translate="yes" xml:space="preserve">
          <source>Returns the socket address of the remote half of this connection.</source>
          <target state="translated">Возвращает адрес гнезда удаленной половины этого соединения.</target>
        </trans-unit>
        <trans-unit id="3356af1c420785b78b73f03cb8b8639ef4169753" translate="yes" xml:space="preserve">
          <source>Returns the socket address of the remote peer of this TCP connection.</source>
          <target state="translated">Возвращает адрес сокета удаленного пэра этого TCP-соединения.</target>
        </trans-unit>
        <trans-unit id="be0156fe45dd769b5dac60a507d422d80dac537b" translate="yes" xml:space="preserve">
          <source>Returns the socket address of the remote peer this socket was connected to.</source>
          <target state="translated">Возвращает адрес сокета удаленного пэра,к которому этот сокет был подключен.</target>
        </trans-unit>
        <trans-unit id="95355a6d70618c715f149c9a5ebd25a9a16c9ce9" translate="yes" xml:space="preserve">
          <source>Returns the socket address that this socket was created from.</source>
          <target state="translated">Возвращает адрес сокета,с которого этот сокет был создан.</target>
        </trans-unit>
        <trans-unit id="91ccde3304769ed5877c00e052aec5a0535d7ea9" translate="yes" xml:space="preserve">
          <source>Returns the source location of the caller of this function. If that function's caller is annotated then its call location will be returned, and so on up the stack to the first call within a non-tracked function body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91af5a12b9cefb8820321cc141efdd296d7610c" translate="yes" xml:space="preserve">
          <source>Returns the square root of a number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460cfbdbb3f494bb341f4d449e902bb3420d8045" translate="yes" xml:space="preserve">
          <source>Returns the square root of an &lt;code&gt;f32&lt;/code&gt;</source>
          <target state="translated">Возвращает квадратный корень из &lt;code&gt;f32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd0e705be2c1897c62ebbdeff195d246b2dda06d" translate="yes" xml:space="preserve">
          <source>Returns the square root of an &lt;code&gt;f64&lt;/code&gt;</source>
          <target state="translated">Возвращает квадратный корень из &lt;code&gt;f64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a1843677592374dc17851134c3d54d3f7223126" translate="yes" xml:space="preserve">
          <source>Returns the start value as a &lt;code&gt;Bound&lt;/code&gt;.</source>
          <target state="translated">Возвращает начальное значение в виде &lt;code&gt;Bound&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6b86a33bd5aa1ecdb4f8e9a240ff20d86b527ec" translate="yes" xml:space="preserve">
          <source>Returns the symmetric difference of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; as a new &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Возвращает симметричную разницу между &lt;code&gt;self&lt;/code&gt; и &lt;code&gt;rhs&lt;/code&gt; как новый &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc1aaf74dc56c8a619e913235e8c7aa762c9a44d" translate="yes" xml:space="preserve">
          <source>Returns the symmetric difference of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; as a new &lt;code&gt;HashSet&amp;lt;T, S&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Возвращает симметричную разницу между &lt;code&gt;self&lt;/code&gt; и &lt;code&gt;rhs&lt;/code&gt; как новый &lt;code&gt;HashSet&amp;lt;T, S&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21d51347b12d3977a2076de884aca1ad5ba99d04" translate="yes" xml:space="preserve">
          <source>Returns the system time corresponding to &quot;now&quot;.</source>
          <target state="translated">Возвращает системное время,соответствующее &quot;сейчас&quot;.</target>
        </trans-unit>
        <trans-unit id="afe3d9242e2d934af6d07a4b1dac82abbdabeb6a" translate="yes" xml:space="preserve">
          <source>Returns the total number of nanoseconds contained by this &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">Возвращает общее количество наносекунд, содержащихся в этой &lt;code&gt;Duration&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b247e92aea7b5cee1ffa599a624b89bcad6f6857" translate="yes" xml:space="preserve">
          <source>Returns the total number of whole microseconds contained by this &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">Возвращает общее количество полных микросекунд, содержащихся в этой &lt;code&gt;Duration&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b345394e3cbbefe1c77de3c579ece46340bb34f8" translate="yes" xml:space="preserve">
          <source>Returns the total number of whole milliseconds contained by this &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">Возвращает общее количество целых миллисекунд, содержащихся в этой &lt;code&gt;Duration&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed5f25a2b2709329320e75ee032e7a629d1410c5" translate="yes" xml:space="preserve">
          <source>Returns the total size of this file in bytes.</source>
          <target state="translated">Возвращает общий размер этого файла в байтах.</target>
        </trans-unit>
        <trans-unit id="8622948abb4c3129687690dd304247bb6571bcc2" translate="yes" xml:space="preserve">
          <source>Returns the total size of this file in bytes. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.size&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает общий размер этого файла в байтах. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.size&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4040f71366469bc690c4ccd7ecefc49d3e076068" translate="yes" xml:space="preserve">
          <source>Returns the two raw pointers spanning the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea66515e0299f048802d6c53a06e60586e915e7" translate="yes" xml:space="preserve">
          <source>Returns the two unsafe mutable pointers spanning the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c25cff868d33e26c28d926991fe9caa5cb98d81" translate="yes" xml:space="preserve">
          <source>Returns the underlying &lt;code&gt;d_ino&lt;/code&gt; field in the contained &lt;code&gt;dirent&lt;/code&gt; structure.</source>
          <target state="translated">Возвращает базовое поле &lt;code&gt;d_ino&lt;/code&gt; в содержащейся структуре &lt;code&gt;dirent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b89f96114e1ef82606c3f4d6bfbaaa27228d7362" translate="yes" xml:space="preserve">
          <source>Returns the underlying &lt;code&gt;d_ino&lt;/code&gt; field in the contained &lt;code&gt;dirent&lt;/code&gt; structure. &lt;a href=&quot;../os/unix/fs/trait.direntryext#tymethod.ino&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает базовое поле &lt;code&gt;d_ino&lt;/code&gt; в содержащейся структуре &lt;code&gt;dirent&lt;/code&gt; . &lt;a href=&quot;../os/unix/fs/trait.direntryext#tymethod.ino&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="71b833977f125414585afe78c2a30e982ea7a3c2" translate="yes" xml:space="preserve">
          <source>Returns the underlying raw &lt;code&gt;st_mode&lt;/code&gt; bits that contain the standard Unix permissions for this file.</source>
          <target state="translated">Возвращает базовые необработанные биты &lt;code&gt;st_mode&lt;/code&gt; , которые содержат стандартные разрешения Unix для этого файла.</target>
        </trans-unit>
        <trans-unit id="e0e96412d993c2edb28c5bf3ea18e69b86632385" translate="yes" xml:space="preserve">
          <source>Returns the underlying raw &lt;code&gt;st_mode&lt;/code&gt; bits that contain the standard Unix permissions for this file. &lt;a href=&quot;../os/unix/fs/trait.permissionsext#tymethod.mode&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает базовые необработанные биты &lt;code&gt;st_mode&lt;/code&gt; , которые содержат стандартные разрешения Unix для этого файла. &lt;a href=&quot;../os/unix/fs/trait.permissionsext#tymethod.mode&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0e272c3d22ad5b5acb84c6c9e56981705ea1a81" translate="yes" xml:space="preserve">
          <source>Returns the union of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; as a new &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Возвращает объединение &lt;code&gt;self&lt;/code&gt; и &lt;code&gt;rhs&lt;/code&gt; как новый &lt;code&gt;BTreeSet&amp;lt;T&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="334d0670ad0fa6aca1264ca018365740fad472eb" translate="yes" xml:space="preserve">
          <source>Returns the union of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; as a new &lt;code&gt;HashSet&amp;lt;T, S&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Возвращает объединение &lt;code&gt;self&lt;/code&gt; и &lt;code&gt;rhs&lt;/code&gt; как новый &lt;code&gt;HashSet&amp;lt;T, S&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d905f4d6997cd1a5fd676b9c358c17f6454381c4" translate="yes" xml:space="preserve">
          <source>Returns the unpaired surrogate which caused this error.</source>
          <target state="translated">Возвращает неупакованный суррогат,который вызвал эту ошибку.</target>
        </trans-unit>
        <trans-unit id="d89ba898545e92c59008e3e9e9e9e2ca5c4c79b6" translate="yes" xml:space="preserve">
          <source>Returns the upper bound of the range (inclusive).</source>
          <target state="translated">Возвращает верхнюю границу диапазона (включительно).</target>
        </trans-unit>
        <trans-unit id="99d0f8c4096bad66de3f1182c097eca425647b98" translate="yes" xml:space="preserve">
          <source>Returns the uppercase equivalent of this string slice, as a new &lt;a href=&quot;string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Возвращает эквивалент этого строкового фрагмента в верхнем регистре как новую &lt;a href=&quot;string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="101c75b29fcce7c17fe86967d0f82bfb6bee7742" translate="yes" xml:space="preserve">
          <source>Returns the uppercase equivalent of this string slice, as a new &lt;a href=&quot;struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489a80d3875efc73c9834c732a48c5d439a2a33b" translate="yes" xml:space="preserve">
          <source>Returns the user ID of the file owner.</source>
          <target state="translated">Возвращает идентификатор пользователя владельца файла.</target>
        </trans-unit>
        <trans-unit id="a2fd3d78d551c5bf85a307804e004ebbb3d4322f" translate="yes" xml:space="preserve">
          <source>Returns the user ID of the file owner. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_uid&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает идентификатор пользователя владельца файла. &lt;a href=&quot;../os/linux/fs/trait.metadataext#tymethod.st_uid&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="abc0b77fc35d749ebc9192e80bcc0edc4e827a6a" translate="yes" xml:space="preserve">
          <source>Returns the user ID of the owner of this file.</source>
          <target state="translated">Возвращает идентификатор пользователя владельца этого файла.</target>
        </trans-unit>
        <trans-unit id="a7f382c8ce378856de3a313aabb11958470a144d" translate="yes" xml:space="preserve">
          <source>Returns the user ID of the owner of this file. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.uid&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает идентификатор пользователя владельца этого файла. &lt;a href=&quot;../os/unix/fs/trait.metadataext#tymethod.uid&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="938f665fa2f6e8ca3e23318a1ecb7d846f60d130" translate="yes" xml:space="preserve">
          <source>Returns the value as a primitive type.</source>
          <target state="translated">Возвращает значение как примитивный тип.</target>
        </trans-unit>
        <trans-unit id="d96c8a0ebc9847b35c0e2a2a28868ecaf96fbf28" translate="yes" xml:space="preserve">
          <source>Returns the value of the 'HOME' environment variable if it is set (including to an empty string).</source>
          <target state="translated">Возвращает значение переменной окружения 'HOME',если она установлена (в том числе и в пустую строку).</target>
        </trans-unit>
        <trans-unit id="40325bf8bdeef6e2f82bd584359925e59eeee6af" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;SO_ERROR&lt;/code&gt; option.</source>
          <target state="translated">Возвращает значение параметра &lt;code&gt;SO_ERROR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a764c124837649c50395d3b1b211f5a4c46e3f3b" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;TMPDIR&lt;/code&gt; environment variable if it is set, otherwise for non-Android it returns &lt;code&gt;/tmp&lt;/code&gt;. If Android, since there is no global temporary folder (it is usually allocated per-app), it returns &lt;code&gt;/data/local/tmp&lt;/code&gt;.</source>
          <target state="translated">Возвращает значение &lt;code&gt;TMPDIR&lt;/code&gt; среды TMPDIR, если она установлена, в противном случае для не-Android возвращается &lt;code&gt;/tmp&lt;/code&gt; . Если в Android нет глобальной временной папки (обычно она выделяется для каждого приложения), он возвращает &lt;code&gt;/data/local/tmp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5adecd48691250a49a6bd206b4e6fcc12d6525bb" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;dwFileAttributes&lt;/code&gt; field of this metadata.</source>
          <target state="translated">Возвращает значение поля &lt;code&gt;dwFileAttributes&lt;/code&gt; этих метаданных.</target>
        </trans-unit>
        <trans-unit id="eb6bb8145f27615c9229db90c0fe499b900ef0ea" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;dwFileAttributes&lt;/code&gt; field of this metadata. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.file_attributes&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает значение поля &lt;code&gt;dwFileAttributes&lt;/code&gt; этих метаданных. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.file_attributes&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92c89ad0443d60c2d2d860a665d8f99956fad746" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;dwVolumeSerialNumber&lt;/code&gt; field of this metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc2dcbb3b4c800dce7f5527955c1d938dd6f017b" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;dwVolumeSerialNumber&lt;/code&gt; field of this metadata. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.volume_serial_number&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f909ba283b06a81bab19947ad469aad37c5efd" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;ftCreationTime&lt;/code&gt; field of this metadata.</source>
          <target state="translated">Возвращает значение поля &lt;code&gt;ftCreationTime&lt;/code&gt; этих метаданных.</target>
        </trans-unit>
        <trans-unit id="4f356ec43deb2e4831bb93733877a52e387ecf9d" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;ftCreationTime&lt;/code&gt; field of this metadata. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.creation_time&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает значение поля &lt;code&gt;ftCreationTime&lt;/code&gt; этих метаданных. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.creation_time&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56a140ac2b221e638070ae238ebc2bdf5c096e84" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;ftLastAccessTime&lt;/code&gt; field of this metadata.</source>
          <target state="translated">Возвращает значение поля &lt;code&gt;ftLastAccessTime&lt;/code&gt; этих метаданных.</target>
        </trans-unit>
        <trans-unit id="dcadee8deeeed464b969afc782db57ebcafd4549" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;ftLastAccessTime&lt;/code&gt; field of this metadata. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.last_access_time&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает значение поля &lt;code&gt;ftLastAccessTime&lt;/code&gt; этих метаданных. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.last_access_time&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1622e337a803cf23bc08cec15d271a505df66512" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;ftLastWriteTime&lt;/code&gt; field of this metadata.</source>
          <target state="translated">Возвращает значение поля &lt;code&gt;ftLastWriteTime&lt;/code&gt; этих метаданных.</target>
        </trans-unit>
        <trans-unit id="5ebe4f26442072092bdd9babe655a0f41b85b722" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;ftLastWriteTime&lt;/code&gt; field of this metadata. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.last_write_time&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает значение поля &lt;code&gt;ftLastWriteTime&lt;/code&gt; этих метаданных. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.last_write_time&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86848c8c28c9c755c8dca8d6501fd14db86b7db5" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;nFileIndex{Low,High}&lt;/code&gt; fields of this metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00c41e7ccae89f6778864a834d489d285339736" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;nFileIndex{Low,High}&lt;/code&gt; fields of this metadata. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.file_index&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5649276827c26014c5e106c3e981ac3641c878b8" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;nFileSize{High,Low}&lt;/code&gt; fields of this metadata.</source>
          <target state="translated">Возвращает значение &lt;code&gt;nFileSize{High,Low}&lt;/code&gt; этих метаданных.</target>
        </trans-unit>
        <trans-unit id="0fd27516b70428468d6098230117b2dc0a8b22af" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;nFileSize{High,Low}&lt;/code&gt; fields of this metadata. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.file_size&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Возвращает значение &lt;code&gt;nFileSize{High,Low}&lt;/code&gt; этих метаданных. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.file_size&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dffd4114a3206536e7e9263202c4210aa1b2b397" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;nNumberOfLinks&lt;/code&gt; field of this metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb52e882245afc361d616ab9c767b7235abaa798" translate="yes" xml:space="preserve">
          <source>Returns the value of the &lt;code&gt;nNumberOfLinks&lt;/code&gt; field of this metadata. &lt;a href=&quot;../os/windows/fs/trait.metadataext#tymethod.number_of_links&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828c16ee28a67cc49cb771d93b72e813c86e66af" translate="yes" xml:space="preserve">
          <source>Returns the value of the discriminant for the variant in 'v', cast to a &lt;code&gt;u64&lt;/code&gt;; if &lt;code&gt;T&lt;/code&gt; has no discriminant, returns 0.</source>
          <target state="translated">Возвращает значение дискриминанта для варианта в 'v', приведенного к &lt;code&gt;u64&lt;/code&gt; ; если &lt;code&gt;T&lt;/code&gt; не имеет дискриминанта, возвращает 0.</target>
        </trans-unit>
        <trans-unit id="6d250788706415d21292031499161c1e7e5e50ae" translate="yes" xml:space="preserve">
          <source>Returns the value of type &lt;code&gt;T&lt;/code&gt; represented by the all-zero byte-pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce4c05888323014bf6fe3b384ec95b46c0f3d51" translate="yes" xml:space="preserve">
          <source>Returns the value of, in order, the &lt;code&gt;TMP&lt;/code&gt;, &lt;code&gt;TEMP&lt;/code&gt;, &lt;code&gt;USERPROFILE&lt;/code&gt; environment variable if any are set and not the empty string. Otherwise, &lt;code&gt;temp_dir&lt;/code&gt; returns the path of the Windows directory. This behavior is identical to that of &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-gettemppatha&quot;&gt;&lt;code&gt;GetTempPath&lt;/code&gt;&lt;/a&gt;, which this function uses internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a219748648d60dfa73d595fe4f723347de2ea15" translate="yes" xml:space="preserve">
          <source>Returns the value of, in order, the &lt;code&gt;TMP&lt;/code&gt;, &lt;code&gt;TEMP&lt;/code&gt;, &lt;code&gt;USERPROFILE&lt;/code&gt; environment variable if any are set and not the empty string. Otherwise, &lt;code&gt;temp_dir&lt;/code&gt; returns the path of the Windows directory. This behavior is identical to that of &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa364992(v=vs.85).aspx&quot;&gt;&lt;code&gt;GetTempPath&lt;/code&gt;&lt;/a&gt;, which this function uses internally.</source>
          <target state="translated">Возвращает по порядку значение переменной среды &lt;code&gt;TMP&lt;/code&gt; , &lt;code&gt;TEMP&lt;/code&gt; , &lt;code&gt;USERPROFILE&lt;/code&gt; , если таковая установлена, а не пустая строка. В противном случае &lt;code&gt;temp_dir&lt;/code&gt; возвращает путь к каталогу Windows. Это поведение идентично поведению &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa364992(v=vs.85).aspx&quot;&gt; &lt;code&gt;GetTempPath&lt;/code&gt; &lt;/a&gt; , которое эта функция использует для внутренних целей.</target>
        </trans-unit>
        <trans-unit id="9572733b23def3bda923317c53e2462509fdef4f" translate="yes" xml:space="preserve">
          <source>Returns the value that would be obtained by taking the &lt;em&gt;predecessor&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt;&lt;code&gt;count&lt;/code&gt; times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403367a2c73e6abb177e2cafc577b6dc88e29ebe" translate="yes" xml:space="preserve">
          <source>Returns the value that would be obtained by taking the &lt;em&gt;predecessor&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt;&lt;code&gt;count&lt;/code&gt; times. &lt;a href=&quot;iter/trait.step#method.backward&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df4381fa032c7f3be63e70b1bb68a16ea9a6c33" translate="yes" xml:space="preserve">
          <source>Returns the value that would be obtained by taking the &lt;em&gt;predecessor&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt;&lt;code&gt;count&lt;/code&gt; times. &lt;a href=&quot;iter/trait.step#method.backward_unchecked&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9466d5ae5f2ed727012926d1a526795f93812c" translate="yes" xml:space="preserve">
          <source>Returns the value that would be obtained by taking the &lt;em&gt;successor&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt;&lt;code&gt;count&lt;/code&gt; times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a2e27926b3ea97136c2cbeae2a696f26714a4c" translate="yes" xml:space="preserve">
          <source>Returns the value that would be obtained by taking the &lt;em&gt;successor&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt;&lt;code&gt;count&lt;/code&gt; times. &lt;a href=&quot;iter/trait.step#method.forward&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943537b7ccdeae46a9e14e22e0be87747384997b" translate="yes" xml:space="preserve">
          <source>Returns the value that would be obtained by taking the &lt;em&gt;successor&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt;&lt;code&gt;count&lt;/code&gt; times. &lt;a href=&quot;iter/trait.step#method.forward_unchecked&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180c7bc8bee0b2996a708179ca2a1339202ef346" translate="yes" xml:space="preserve">
          <source>Returns the value that would be obtained by taking the &lt;em&gt;successor&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt;&lt;code&gt;count&lt;/code&gt; times. &lt;a href=&quot;iter/trait.step#tymethod.backward_checked&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee676444ff6fb19214e9757a17a060a2fb301a6" translate="yes" xml:space="preserve">
          <source>Returns the value that would be obtained by taking the &lt;em&gt;successor&lt;/em&gt; of &lt;code&gt;self&lt;/code&gt;&lt;code&gt;count&lt;/code&gt; times. &lt;a href=&quot;iter/trait.step#tymethod.forward_checked&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1bd9a4882eef9e73cc693287c83649ea87c4eb" translate="yes" xml:space="preserve">
          <source>Returns the working directory for the child process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67b8ba6d2c094a98d9d77b92a4224f63a9b3a0a" translate="yes" xml:space="preserve">
          <source>Returns the write timeout of this socket.</source>
          <target state="translated">Возвращает тайм-аут записи этого разъема.</target>
        </trans-unit>
        <trans-unit id="8caec21be10402429ae482b8b4f054e8779889c5" translate="yes" xml:space="preserve">
          <source>Returns this &lt;code&gt;String&lt;/code&gt;'s capacity, in bytes.</source>
          <target state="translated">Возвращает емкость этой &lt;code&gt;String&lt;/code&gt; в байтах.</target>
        </trans-unit>
        <trans-unit id="308a7c84947e79b1e736191bfde42d8448c456e8" translate="yes" xml:space="preserve">
          <source>Returns true if the data is borrowed, i.e. if &lt;code&gt;to_mut&lt;/code&gt; would require additional work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e745d96228426bb4c41181e369568fe5b8ee672" translate="yes" xml:space="preserve">
          <source>Returns true if the data is owned, i.e. if &lt;code&gt;to_mut&lt;/code&gt; would be a no-op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eebdc50ab4275c0509d65d8f6e232f5ca9d4782" translate="yes" xml:space="preserve">
          <source>Returns true if this &lt;code&gt;Duration&lt;/code&gt; spans no time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c916f27ab0290429e470d20dd116e3f85dc9cc" translate="yes" xml:space="preserve">
          <source>Returns two &lt;code&gt;UnixDatagrams&lt;/code&gt;s which are connected to each other.</source>
          <target state="translated">Возвращает две соединенные друг с другом &lt;code&gt;UnixDatagrams&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1997def92c07aa40771a479b14582d7c9199601a" translate="yes" xml:space="preserve">
          <source>Returns two &lt;code&gt;UnixStream&lt;/code&gt;s which are connected to each other.</source>
          <target state="translated">Возвращает два &lt;code&gt;UnixStream&lt;/code&gt; , которые связаны друг с другом.</target>
        </trans-unit>
        <trans-unit id="58b5908caa858b790207e758925108c2f9bb59b2" translate="yes" xml:space="preserve">
          <source>Returns two slices. The first contains no consecutive repeated elements. The second contains all the duplicates in no specified order.</source>
          <target state="translated">Возвращает два кусочка.Первый не содержит последовательных повторяющихся элементов.Второй содержит все дубликаты в произвольном порядке.</target>
        </trans-unit>
        <trans-unit id="a705988224286fd86b2b12e8e04c9bf23cfd2249" translate="yes" xml:space="preserve">
          <source>Returns whether the given expression matches any of the given patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b01afed4877df00cb2e26656f68975f1855f4a" translate="yes" xml:space="preserve">
          <source>Returns whether two pointers are guaranteed to be equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e478b8166bf08569ea56ce3a1298383c77bc647" translate="yes" xml:space="preserve">
          <source>Returns whether two pointers are guaranteed to be unequal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7c2bb1bfe446ed32e1ab9672cc673aa173f1ca" translate="yes" xml:space="preserve">
          <source>Rev</source>
          <target state="translated">Rev</target>
        </trans-unit>
        <trans-unit id="1b23bbd2e4082fee5f5c745e3cbf4bdcf5bca02f" translate="yes" xml:space="preserve">
          <source>Rev::all</source>
          <target state="translated">Rev::all</target>
        </trans-unit>
        <trans-unit id="ea75cddccbdebb8689380f055fe25d5c97e641e8" translate="yes" xml:space="preserve">
          <source>Rev::any</source>
          <target state="translated">Rev::any</target>
        </trans-unit>
        <trans-unit id="8cc8e88e690bc6681b64607317f27b5ce469bacf" translate="yes" xml:space="preserve">
          <source>Rev::borrow</source>
          <target state="translated">Rev::borrow</target>
        </trans-unit>
        <trans-unit id="e2c9f6498ab8be3ec1160607f061244988a68069" translate="yes" xml:space="preserve">
          <source>Rev::borrow_mut</source>
          <target state="translated">Rev::borrow_mut</target>
        </trans-unit>
        <trans-unit id="73dedb69b68b627e1da0fa0ad68f89639ea0dc58" translate="yes" xml:space="preserve">
          <source>Rev::by_ref</source>
          <target state="translated">Rev::by_ref</target>
        </trans-unit>
        <trans-unit id="6de60f5aa1ad60301b61eeb377b5ccf5c544536c" translate="yes" xml:space="preserve">
          <source>Rev::chain</source>
          <target state="translated">Rev::chain</target>
        </trans-unit>
        <trans-unit id="e4d458e0e8c6b2df185803f6fa9e267ace7c591d" translate="yes" xml:space="preserve">
          <source>Rev::clone</source>
          <target state="translated">Rev::clone</target>
        </trans-unit>
        <trans-unit id="8404df5a18edcc0d8879c9cf2b77a33bf8b7dcef" translate="yes" xml:space="preserve">
          <source>Rev::clone_from</source>
          <target state="translated">Rev::clone_from</target>
        </trans-unit>
        <trans-unit id="1e0d93f9be1c00147e833a50c4a743cb53a3ee55" translate="yes" xml:space="preserve">
          <source>Rev::clone_into</source>
          <target state="translated">Rev::clone_into</target>
        </trans-unit>
        <trans-unit id="7b0e62b62cf92f3958926fdad9beac39623add70" translate="yes" xml:space="preserve">
          <source>Rev::cloned</source>
          <target state="translated">Rev::cloned</target>
        </trans-unit>
        <trans-unit id="4587b57f8345a4a3e332998677d7623ed93892bf" translate="yes" xml:space="preserve">
          <source>Rev::cmp</source>
          <target state="translated">Rev::cmp</target>
        </trans-unit>
        <trans-unit id="6c408188f25a62347600f9f6f7efc47d107ffba5" translate="yes" xml:space="preserve">
          <source>Rev::collect</source>
          <target state="translated">Rev::collect</target>
        </trans-unit>
        <trans-unit id="0a4354f5e33fdf26d7b5b515676d4cb202a571e7" translate="yes" xml:space="preserve">
          <source>Rev::copied</source>
          <target state="translated">Rev::copied</target>
        </trans-unit>
        <trans-unit id="fa1132674a1131c0a0397182fa3fd35714b88c64" translate="yes" xml:space="preserve">
          <source>Rev::count</source>
          <target state="translated">Rev::count</target>
        </trans-unit>
        <trans-unit id="e7f33ff3b18fb0f96be20642157a1c5b94d511be" translate="yes" xml:space="preserve">
          <source>Rev::cycle</source>
          <target state="translated">Rev::cycle</target>
        </trans-unit>
        <trans-unit id="7d9d010b059a96e262ac8e5a6cdaab5542ee4687" translate="yes" xml:space="preserve">
          <source>Rev::enumerate</source>
          <target state="translated">Rev::enumerate</target>
        </trans-unit>
        <trans-unit id="bf2b839bd26ba50d8e6e5fedcd66fb40e0954dbb" translate="yes" xml:space="preserve">
          <source>Rev::eq</source>
          <target state="translated">Rev::eq</target>
        </trans-unit>
        <trans-unit id="e7db1b47702a233fc622c97b15e840fcf2355811" translate="yes" xml:space="preserve">
          <source>Rev::filter</source>
          <target state="translated">Rev::filter</target>
        </trans-unit>
        <trans-unit id="c0636967a7dd6c6b5fee9571848c89e0e6b37fa4" translate="yes" xml:space="preserve">
          <source>Rev::filter_map</source>
          <target state="translated">Rev::filter_map</target>
        </trans-unit>
        <trans-unit id="7e246913ec9f2d6ac5302634f16110029ac885b8" translate="yes" xml:space="preserve">
          <source>Rev::find</source>
          <target state="translated">Rev::find</target>
        </trans-unit>
        <trans-unit id="0190e76cc1988765fc2380f700844d31a354a7bb" translate="yes" xml:space="preserve">
          <source>Rev::find_map</source>
          <target state="translated">Rev::find_map</target>
        </trans-unit>
        <trans-unit id="9ec5179cd3ca49c74bb4e760048b7220f38d9284" translate="yes" xml:space="preserve">
          <source>Rev::flat_map</source>
          <target state="translated">Rev::flat_map</target>
        </trans-unit>
        <trans-unit id="225d34652551554f3a89a77e062a7a155988bda8" translate="yes" xml:space="preserve">
          <source>Rev::flatten</source>
          <target state="translated">Rev::flatten</target>
        </trans-unit>
        <trans-unit id="62575efece92a283feda80baa61c2a97054001e2" translate="yes" xml:space="preserve">
          <source>Rev::fmt</source>
          <target state="translated">Rev::fmt</target>
        </trans-unit>
        <trans-unit id="7d95ad31053fb338311f4d08c6d297a8a283a2b6" translate="yes" xml:space="preserve">
          <source>Rev::fold</source>
          <target state="translated">Rev::fold</target>
        </trans-unit>
        <trans-unit id="1593c69705065114910fc862fec9b3464e7a1e61" translate="yes" xml:space="preserve">
          <source>Rev::for_each</source>
          <target state="translated">Rev::for_each</target>
        </trans-unit>
        <trans-unit id="a39bffcf3500f02b5b324ace604d5f73f4508502" translate="yes" xml:space="preserve">
          <source>Rev::from</source>
          <target state="translated">Rev::from</target>
        </trans-unit>
        <trans-unit id="cbd60e5ba280b4f4324145a1adda2da6a971136b" translate="yes" xml:space="preserve">
          <source>Rev::fuse</source>
          <target state="translated">Rev::fuse</target>
        </trans-unit>
        <trans-unit id="873cbd9880d26c0cdf87aa55ef6d401f65c26c7f" translate="yes" xml:space="preserve">
          <source>Rev::ge</source>
          <target state="translated">Rev::ge</target>
        </trans-unit>
        <trans-unit id="25fe417873e9bf8d09530ff11b2a90f30504e382" translate="yes" xml:space="preserve">
          <source>Rev::gt</source>
          <target state="translated">Rev::gt</target>
        </trans-unit>
        <trans-unit id="f92c8c41775902f0d18700f58581689338de0da4" translate="yes" xml:space="preserve">
          <source>Rev::inspect</source>
          <target state="translated">Rev::inspect</target>
        </trans-unit>
        <trans-unit id="de43a1487bfa1f9ce9ac44d597b981808c53d44e" translate="yes" xml:space="preserve">
          <source>Rev::into</source>
          <target state="translated">Rev::into</target>
        </trans-unit>
        <trans-unit id="41b12c6f490ca67e5c059f82cd7f389f81691d0d" translate="yes" xml:space="preserve">
          <source>Rev::into_iter</source>
          <target state="translated">Rev::into_iter</target>
        </trans-unit>
        <trans-unit id="78dc9bcc5c42dbf0e33ca10baa365d630a987c3b" translate="yes" xml:space="preserve">
          <source>Rev::is_empty</source>
          <target state="translated">Rev::is_empty</target>
        </trans-unit>
        <trans-unit id="ee1895eadacc62b4170b5e3c9dc596b78a2e596b" translate="yes" xml:space="preserve">
          <source>Rev::is_sorted</source>
          <target state="translated">Rev::is_sorted</target>
        </trans-unit>
        <trans-unit id="0b14e8596fb406e0e5a02fb4edae19c0c0f50bf8" translate="yes" xml:space="preserve">
          <source>Rev::is_sorted_by</source>
          <target state="translated">Rev::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="a0339aa17e6fee4a535dfa746c5ebffcbbc064ff" translate="yes" xml:space="preserve">
          <source>Rev::is_sorted_by_key</source>
          <target state="translated">Rev::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="69271a231d2a43f1ce9b3323a711616c3ae5178e" translate="yes" xml:space="preserve">
          <source>Rev::last</source>
          <target state="translated">Rev::last</target>
        </trans-unit>
        <trans-unit id="62a279d095cd31928b407efcc98deec091e8388e" translate="yes" xml:space="preserve">
          <source>Rev::le</source>
          <target state="translated">Rev::le</target>
        </trans-unit>
        <trans-unit id="9d8b8b5216a3192ea158a98424a34191c93833cd" translate="yes" xml:space="preserve">
          <source>Rev::len</source>
          <target state="translated">Rev::len</target>
        </trans-unit>
        <trans-unit id="8e9ac96d4de2466ecd316c1f91603ec27b26f6dc" translate="yes" xml:space="preserve">
          <source>Rev::lt</source>
          <target state="translated">Rev::lt</target>
        </trans-unit>
        <trans-unit id="a309ff1b530a86315f29996f8e5e95f42d96df65" translate="yes" xml:space="preserve">
          <source>Rev::map</source>
          <target state="translated">Rev::map</target>
        </trans-unit>
        <trans-unit id="13fc0b5b7e4061cfabc93fd97e77df45f8bf14de" translate="yes" xml:space="preserve">
          <source>Rev::max</source>
          <target state="translated">Rev::max</target>
        </trans-unit>
        <trans-unit id="f2a8f41d4959a1a4b0b54bf592703f38eda6e0cc" translate="yes" xml:space="preserve">
          <source>Rev::max_by</source>
          <target state="translated">Rev::max_by</target>
        </trans-unit>
        <trans-unit id="3a57fc722077bd36001915718274271fa4c84941" translate="yes" xml:space="preserve">
          <source>Rev::max_by_key</source>
          <target state="translated">Rev::max_by_key</target>
        </trans-unit>
        <trans-unit id="ae572218c9ac7eef60e456cb22b794f75d7e0ca3" translate="yes" xml:space="preserve">
          <source>Rev::min</source>
          <target state="translated">Rev::min</target>
        </trans-unit>
        <trans-unit id="717b07a4d2d09558b9eeb735fd03732d28942baf" translate="yes" xml:space="preserve">
          <source>Rev::min_by</source>
          <target state="translated">Rev::min_by</target>
        </trans-unit>
        <trans-unit id="b635b9d188dc18da9a1c7e703b8e4a520ac3c126" translate="yes" xml:space="preserve">
          <source>Rev::min_by_key</source>
          <target state="translated">Rev::min_by_key</target>
        </trans-unit>
        <trans-unit id="09141d32e008f2b05aadaf1044ecf1a4840592ce" translate="yes" xml:space="preserve">
          <source>Rev::ne</source>
          <target state="translated">Rev::ne</target>
        </trans-unit>
        <trans-unit id="9c639ae7e696436752695f9128ab7443996d43be" translate="yes" xml:space="preserve">
          <source>Rev::next</source>
          <target state="translated">Rev::next</target>
        </trans-unit>
        <trans-unit id="68086698a40e9aec1c5dec320ad4b73283d254df" translate="yes" xml:space="preserve">
          <source>Rev::next_back</source>
          <target state="translated">Rev::next_back</target>
        </trans-unit>
        <trans-unit id="05d6eba031162aff3541fcb21f99e39a85d56d67" translate="yes" xml:space="preserve">
          <source>Rev::nth</source>
          <target state="translated">Rev::nth</target>
        </trans-unit>
        <trans-unit id="a81bfd09b0b8a63e11fb54e6a20098189b515425" translate="yes" xml:space="preserve">
          <source>Rev::nth_back</source>
          <target state="translated">Rev::nth_back</target>
        </trans-unit>
        <trans-unit id="49153ede378f17d37a9c87e1ca317129d8b017a1" translate="yes" xml:space="preserve">
          <source>Rev::partial_cmp</source>
          <target state="translated">Rev::partial_cmp</target>
        </trans-unit>
        <trans-unit id="170d9a09a9560f1dd862ddfcb40722d73ffda2fb" translate="yes" xml:space="preserve">
          <source>Rev::partition</source>
          <target state="translated">Rev::partition</target>
        </trans-unit>
        <trans-unit id="c5affa24edae4f7086a827c7943e67c9ad19eca7" translate="yes" xml:space="preserve">
          <source>Rev::peekable</source>
          <target state="translated">Rev::peekable</target>
        </trans-unit>
        <trans-unit id="746df81e7e44e4774446265edbe5fdc1b8168630" translate="yes" xml:space="preserve">
          <source>Rev::position</source>
          <target state="translated">Rev::position</target>
        </trans-unit>
        <trans-unit id="06891f0cbd66b42213b0a521d231f478938da958" translate="yes" xml:space="preserve">
          <source>Rev::product</source>
          <target state="translated">Rev::product</target>
        </trans-unit>
        <trans-unit id="61b3079d136894c7e064b5b52e1d2ad981672e74" translate="yes" xml:space="preserve">
          <source>Rev::rev</source>
          <target state="translated">Rev::rev</target>
        </trans-unit>
        <trans-unit id="606dc7c354c4c3f0a918e0dd90f032f63a4d96ea" translate="yes" xml:space="preserve">
          <source>Rev::rfind</source>
          <target state="translated">Rev::rfind</target>
        </trans-unit>
        <trans-unit id="d93e6da3d5fa06554cb27eecda1ab00a2639f4ca" translate="yes" xml:space="preserve">
          <source>Rev::rfold</source>
          <target state="translated">Rev::rfold</target>
        </trans-unit>
        <trans-unit id="69887a513371a72a506e9e2b72d6574e1a006ab7" translate="yes" xml:space="preserve">
          <source>Rev::rposition</source>
          <target state="translated">Rev::rposition</target>
        </trans-unit>
        <trans-unit id="2ac558d4958028cac5d050c97576307d3b0c7e90" translate="yes" xml:space="preserve">
          <source>Rev::scan</source>
          <target state="translated">Rev::scan</target>
        </trans-unit>
        <trans-unit id="32bf46d57176ec58a7308c23938fc7a8a6065450" translate="yes" xml:space="preserve">
          <source>Rev::size_hint</source>
          <target state="translated">Rev::size_hint</target>
        </trans-unit>
        <trans-unit id="745daae6d469e14032d310fcbbe039b267f61011" translate="yes" xml:space="preserve">
          <source>Rev::skip</source>
          <target state="translated">Rev::skip</target>
        </trans-unit>
        <trans-unit id="dc68a43da7c6b96a30d49d1450c76f344182303e" translate="yes" xml:space="preserve">
          <source>Rev::skip_while</source>
          <target state="translated">Rev::skip_while</target>
        </trans-unit>
        <trans-unit id="054143a0994b6cd5dd1b483213f5a6c9b1c0b2d1" translate="yes" xml:space="preserve">
          <source>Rev::step_by</source>
          <target state="translated">Rev::step_by</target>
        </trans-unit>
        <trans-unit id="d9663cdc74ad7a47d90d5d997ca949efed24b49c" translate="yes" xml:space="preserve">
          <source>Rev::sum</source>
          <target state="translated">Rev::sum</target>
        </trans-unit>
        <trans-unit id="544a9b94c47ffe3adf4fb88e67c57140817601d9" translate="yes" xml:space="preserve">
          <source>Rev::take</source>
          <target state="translated">Rev::take</target>
        </trans-unit>
        <trans-unit id="7ef936397559c6de4b345f55afcfa6da8c20a28c" translate="yes" xml:space="preserve">
          <source>Rev::take_while</source>
          <target state="translated">Rev::take_while</target>
        </trans-unit>
        <trans-unit id="db658a06bd7f55c9638ea4ee61d0f929584e7346" translate="yes" xml:space="preserve">
          <source>Rev::to_owned</source>
          <target state="translated">Rev::to_owned</target>
        </trans-unit>
        <trans-unit id="4a55fa5472997f719fcb65ca32e38a9494c590c7" translate="yes" xml:space="preserve">
          <source>Rev::try_fold</source>
          <target state="translated">Rev::try_fold</target>
        </trans-unit>
        <trans-unit id="cd736368392119bec6e68191bd957a8b923eac5e" translate="yes" xml:space="preserve">
          <source>Rev::try_for_each</source>
          <target state="translated">Rev::try_for_each</target>
        </trans-unit>
        <trans-unit id="dbeb577d71ccd2a54b3e5a954ded27049870aadb" translate="yes" xml:space="preserve">
          <source>Rev::try_from</source>
          <target state="translated">Rev::try_from</target>
        </trans-unit>
        <trans-unit id="966fc760987fd15f6fba61c00189cc38fffafabd" translate="yes" xml:space="preserve">
          <source>Rev::try_into</source>
          <target state="translated">Rev::try_into</target>
        </trans-unit>
        <trans-unit id="e03bbf2925edcd0e55fbf87c143dcf7214a33801" translate="yes" xml:space="preserve">
          <source>Rev::try_rfold</source>
          <target state="translated">Rev::try_rfold</target>
        </trans-unit>
        <trans-unit id="4866aacf5f321e53501fb39991d7e92a23530109" translate="yes" xml:space="preserve">
          <source>Rev::type_id</source>
          <target state="translated">Rev::type_id</target>
        </trans-unit>
        <trans-unit id="d40b36de24f921fb9d83203737a9d9313e304ed4" translate="yes" xml:space="preserve">
          <source>Rev::unzip</source>
          <target state="translated">Rev::unzip</target>
        </trans-unit>
        <trans-unit id="d26061185131ee794acff98f8cdee42eb789c3a8" translate="yes" xml:space="preserve">
          <source>Rev::zip</source>
          <target state="translated">Rev::zip</target>
        </trans-unit>
        <trans-unit id="57f9933768794f845d000833d367d5698393211d" translate="yes" xml:space="preserve">
          <source>Reverse</source>
          <target state="translated">Reverse</target>
        </trans-unit>
        <trans-unit id="855b7acdf3d35ac4f2adcc88572889dbbd152c8d" translate="yes" xml:space="preserve">
          <source>Reverse::borrow</source>
          <target state="translated">Reverse::borrow</target>
        </trans-unit>
        <trans-unit id="b2b7d426909b05c0abe69fafc7ad9a3373457083" translate="yes" xml:space="preserve">
          <source>Reverse::borrow_mut</source>
          <target state="translated">Reverse::borrow_mut</target>
        </trans-unit>
        <trans-unit id="ae49fc0d147862750a761b423bb48bdac7aea4ed" translate="yes" xml:space="preserve">
          <source>Reverse::clamp</source>
          <target state="translated">Reverse::clamp</target>
        </trans-unit>
        <trans-unit id="e018a9a3e3f5e4a17f25be205ffa5619450a465e" translate="yes" xml:space="preserve">
          <source>Reverse::clone</source>
          <target state="translated">Reverse::clone</target>
        </trans-unit>
        <trans-unit id="1acbb09e0fd503239dfba6d9885e42b30ce68ef2" translate="yes" xml:space="preserve">
          <source>Reverse::clone_from</source>
          <target state="translated">Reverse::clone_from</target>
        </trans-unit>
        <trans-unit id="6fae25f3227a651fa4dab3d82eae4c6d090bf5f7" translate="yes" xml:space="preserve">
          <source>Reverse::clone_into</source>
          <target state="translated">Reverse::clone_into</target>
        </trans-unit>
        <trans-unit id="3576dde77728ccb6dac97f18c9329186fcd25b47" translate="yes" xml:space="preserve">
          <source>Reverse::cmp</source>
          <target state="translated">Reverse::cmp</target>
        </trans-unit>
        <trans-unit id="87d225b7af09dcef297be52eee959d2c55588a88" translate="yes" xml:space="preserve">
          <source>Reverse::default</source>
          <target state="translated">Reverse::default</target>
        </trans-unit>
        <trans-unit id="a524d78b7983211c5e0bd0dfb57a20e67c068d6b" translate="yes" xml:space="preserve">
          <source>Reverse::eq</source>
          <target state="translated">Reverse::eq</target>
        </trans-unit>
        <trans-unit id="27d1dc581d53e247cf1e2bafb5f52a5822dffafb" translate="yes" xml:space="preserve">
          <source>Reverse::fmt</source>
          <target state="translated">Reverse::fmt</target>
        </trans-unit>
        <trans-unit id="ec878d46af0f49ce6792c30cd0b6e1b7235b1958" translate="yes" xml:space="preserve">
          <source>Reverse::from</source>
          <target state="translated">Reverse::from</target>
        </trans-unit>
        <trans-unit id="7c6d0cd9a450b5ac7a9861f8ecd935be369486df" translate="yes" xml:space="preserve">
          <source>Reverse::ge</source>
          <target state="translated">Reverse::ge</target>
        </trans-unit>
        <trans-unit id="ce7cdbde47d875eaad55efb2ef9ffe90f4a03ed4" translate="yes" xml:space="preserve">
          <source>Reverse::gt</source>
          <target state="translated">Reverse::gt</target>
        </trans-unit>
        <trans-unit id="ff3888b2d1d36cd518958cda6a06bbafd40ca557" translate="yes" xml:space="preserve">
          <source>Reverse::hash</source>
          <target state="translated">Reverse::hash</target>
        </trans-unit>
        <trans-unit id="0132646776d34a7463118179e279a28498b7466b" translate="yes" xml:space="preserve">
          <source>Reverse::hash_slice</source>
          <target state="translated">Reverse::hash_slice</target>
        </trans-unit>
        <trans-unit id="e9e019daf91ab04cdc269196e09f2db10403fa64" translate="yes" xml:space="preserve">
          <source>Reverse::into</source>
          <target state="translated">Reverse::into</target>
        </trans-unit>
        <trans-unit id="d9b1e02561cb84eb59fa254f199d5e53c05c8368" translate="yes" xml:space="preserve">
          <source>Reverse::le</source>
          <target state="translated">Reverse::le</target>
        </trans-unit>
        <trans-unit id="4d9a8bfcbe29163526e5bc5a1ad6df0efaa28d68" translate="yes" xml:space="preserve">
          <source>Reverse::lt</source>
          <target state="translated">Reverse::lt</target>
        </trans-unit>
        <trans-unit id="fce2114bbd923c0c4b66d5fbd541e6a46db8b2b1" translate="yes" xml:space="preserve">
          <source>Reverse::max</source>
          <target state="translated">Reverse::max</target>
        </trans-unit>
        <trans-unit id="744f7afa0a87464baa627359381d12071537458e" translate="yes" xml:space="preserve">
          <source>Reverse::min</source>
          <target state="translated">Reverse::min</target>
        </trans-unit>
        <trans-unit id="2947ceb046e4341b0a7b1b01d461498d6d47d77c" translate="yes" xml:space="preserve">
          <source>Reverse::ne</source>
          <target state="translated">Reverse::ne</target>
        </trans-unit>
        <trans-unit id="1a0af82a6b449d1fc4be8050ad565202d480b99c" translate="yes" xml:space="preserve">
          <source>Reverse::partial_cmp</source>
          <target state="translated">Reverse::partial_cmp</target>
        </trans-unit>
        <trans-unit id="dfc38fb2b46e97d4339fe9223ac9e35b911966f9" translate="yes" xml:space="preserve">
          <source>Reverse::to_owned</source>
          <target state="translated">Reverse::to_owned</target>
        </trans-unit>
        <trans-unit id="6b9dbc8067fbcb99860916ed4280269ddf4b0187" translate="yes" xml:space="preserve">
          <source>Reverse::try_from</source>
          <target state="translated">Reverse::try_from</target>
        </trans-unit>
        <trans-unit id="4198456beaa5540ba8be310ee2d5cc7d8f48ea67" translate="yes" xml:space="preserve">
          <source>Reverse::try_into</source>
          <target state="translated">Reverse::try_into</target>
        </trans-unit>
        <trans-unit id="6860559d5fa051e4b834b6077771242282766826" translate="yes" xml:space="preserve">
          <source>Reverse::type_id</source>
          <target state="translated">Reverse::type_id</target>
        </trans-unit>
        <trans-unit id="de938e717e63356d75f69d3afd8292bf2f96a32f" translate="yes" xml:space="preserve">
          <source>ReverseSearcher</source>
          <target state="translated">ReverseSearcher</target>
        </trans-unit>
        <trans-unit id="8d7236df59f914f9071c6e16648b2ef0addf66a1" translate="yes" xml:space="preserve">
          <source>Reverses an iterator's direction.</source>
          <target state="translated">Реверсирует направление итератора.</target>
        </trans-unit>
        <trans-unit id="eb8aead23318719eb265935da0734b397d74d732" translate="yes" xml:space="preserve">
          <source>Reverses an iterator's direction. &lt;a href=&quot;../../../iter/trait.iterator#method.rev&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Меняет направление итератора на противоположное. &lt;a href=&quot;../../../iter/trait.iterator#method.rev&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da5c53b657810a4cbe93c7e2f2fa480619340afb" translate="yes" xml:space="preserve">
          <source>Reverses an iterator's direction. &lt;a href=&quot;../../iter/trait.iterator#method.rev&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Меняет направление итератора на противоположное. &lt;a href=&quot;../../iter/trait.iterator#method.rev&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a52ff52ba0845d9c1a9b2c750fd96d9a3a6a3c27" translate="yes" xml:space="preserve">
          <source>Reverses an iterator's direction. &lt;a href=&quot;../iter/trait.iterator#method.rev&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Меняет направление итератора на противоположное. &lt;a href=&quot;../iter/trait.iterator#method.rev&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9284c1c2c9fd85ba7767c59c99017b534d9eee9" translate="yes" xml:space="preserve">
          <source>Reverses an iterator's direction. &lt;a href=&quot;iter/trait.iterator#method.rev&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Меняет направление итератора на противоположное. &lt;a href=&quot;iter/trait.iterator#method.rev&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="729ff069e224b910aab08299c613befadec11121" translate="yes" xml:space="preserve">
          <source>Reverses an iterator's direction. &lt;a href=&quot;trait.iterator#method.rev&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">Меняет направление итератора на противоположное. &lt;a href=&quot;trait.iterator#method.rev&quot;&gt;Читать далее&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42ebe1d1b22b768e5e0a52d253bd9764dab488b1" translate="yes" xml:space="preserve">
          <source>Reverses the &lt;code&gt;Ordering&lt;/code&gt;.</source>
          <target state="translated">Изменяет &lt;code&gt;Ordering&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2bd561cb07cd33c0a2ed2162929bc80a36033f08" translate="yes" xml:space="preserve">
          <source>Reverses the bit pattern of the integer.</source>
          <target state="translated">Обращает вспять битовый паттерн целого числа.</target>
        </trans-unit>
        <trans-unit id="c045f20a6ee66e7b7d06320153c9befa95e70b3f" translate="yes" xml:space="preserve">
          <source>Reverses the bits in an integer type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">Реверсируют биты в целом числе типа &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79e3db360b190aa279792f3cec009bf516b1404c" translate="yes" xml:space="preserve">
          <source>Reverses the byte order of the integer.</source>
          <target state="translated">Отменяет порядок байт целого числа.</target>
        </trans-unit>
        <trans-unit id="64b09f1db72cf0ec7ade643d2317db8963d83387" translate="yes" xml:space="preserve">
          <source>Reverses the bytes in an integer type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">Реверсирует байты в качестве целого типа &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb94381be35515f566147dc309094fe9e5f3b42c" translate="yes" xml:space="preserve">
          <source>Reverses the order of elements in the slice, in place.</source>
          <target state="translated">Изменяет порядок элементов в ломтике,на месте.</target>
        </trans-unit>
        <trans-unit id="043399b4f9587dfd6e880bb527cf9885c51d0675" translate="yes" xml:space="preserve">
          <source>Rewrite the expression without functional record update syntax:</source>
          <target state="translated">Переписать выражение без обновления синтаксиса функциональной записи:</target>
        </trans-unit>
        <trans-unit id="5c8afd877c560b80edb72541a6eaea0dba68d13a" translate="yes" xml:space="preserve">
          <source>Right Shift**</source>
          <target state="translated">Правая смена**</target>
        </trans-unit>
        <trans-unit id="9ef3e151188d7e4dfc0cdde88b74ac2276235a35" translate="yes" xml:space="preserve">
          <source>Right now, our web server will return the HTML in the file no matter what the client requested. Let&amp;rsquo;s add functionality to check that the browser is requesting &lt;em&gt;/&lt;/em&gt; before returning the HTML file and return an error if the browser requests anything else. For this we need to modify &lt;code&gt;handle_connection&lt;/code&gt;, as shown in Listing 20-6. This new code checks the content of the request received against what we know a request for &lt;em&gt;/&lt;/em&gt; looks like and adds &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; blocks to treat requests differently.</source>
          <target state="translated">Прямо сейчас наш веб-сервер вернет HTML-код в файле независимо от того, что запросил клиент. Давайте добавим функциональность для проверки того, что браузер запрашивает &lt;em&gt;/&lt;/em&gt; перед возвратом файла HTML, и возвращать ошибку, если браузер запрашивает что-либо еще. Для этого нам нужно изменить &lt;code&gt;handle_connection&lt;/code&gt; , как показано в листинге 20-6. Этот новый код проверяет содержимое полученного запроса на соответствие тому, как мы знаем, что запрос &lt;em&gt;/&lt;/em&gt; выглядит как, и добавляет блоки &lt;code&gt;if&lt;/code&gt; и &lt;code&gt;else&lt;/code&gt; , чтобы обрабатывать запросы по-разному.</target>
        </trans-unit>
        <trans-unit id="18ab96a1810297bde0b9141142db3dfb5bb9d2bc" translate="yes" xml:space="preserve">
          <source>Right now, the program generated by &lt;code&gt;cargo new&lt;/code&gt; cannot process arguments we give it. Some existing libraries on &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; can help with writing a program that accepts command line arguments, but because you&amp;rsquo;re just learning this concept, let&amp;rsquo;s implement this capability ourselves.</source>
          <target state="translated">Прямо сейчас программа, сгенерированная &lt;code&gt;cargo new&lt;/code&gt; не может обрабатывать аргументы, которые мы ей приводим. Некоторые существующие библиотеки на &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io&lt;/a&gt; могут помочь в написании программы, которая принимает аргументы командной строки, но поскольку вы только изучаете эту концепцию, давайте сами реализуем эту возможность.</target>
        </trans-unit>
        <trans-unit id="7b9dbd2a05c55e3ec29e51c514e9c4050f82aedb" translate="yes" xml:space="preserve">
          <source>Right now, the server will process each request in turn, meaning it won&amp;rsquo;t process a second connection until the first is finished processing. If the server received more and more requests, this serial execution would be less and less optimal. If the server receives a request that takes a long time to process, subsequent requests will have to wait until the long request is finished, even if the new requests can be processed quickly. We&amp;rsquo;ll need to fix this, but first, we&amp;rsquo;ll look at the problem in action.</source>
          <target state="translated">Прямо сейчас сервер будет обрабатывать каждый запрос по очереди, то есть он не будет обрабатывать второе соединение, пока первое не завершит обработку. Если бы сервер получал все больше и больше запросов, это последовательное выполнение было бы все менее и менее оптимальным. Если сервер получает запрос, обработка которого занимает много времени, последующие запросы должны будут дождаться завершения длительного запроса, даже если новые запросы могут быть обработаны быстро. Нам нужно будет это исправить, но сначала мы рассмотрим проблему в действии.</target>
        </trans-unit>
        <trans-unit id="c480af39db009c0318ae7e74d0323b0c502a0fd5" translate="yes" xml:space="preserve">
          <source>Right-exclusive range literal</source>
          <target state="translated">Правильно-эксклюзивный ассортимент буквально</target>
        </trans-unit>
        <trans-unit id="59325f597d1c37aeeec754c26100e96a2e30be66" translate="yes" xml:space="preserve">
          <source>Right-inclusive range literal</source>
          <target state="translated">Буквальный ассортимент &quot;включено по правилу</target>
        </trans-unit>
        <trans-unit id="9b48ae49c811eaa74c51d9a2c4444bab2f4e6c28" translate="yes" xml:space="preserve">
          <source>Right-shift</source>
          <target state="translated">Right-shift</target>
        </trans-unit>
        <trans-unit id="f367c94b8369cb645d39410fa6aec58a35c66b87" translate="yes" xml:space="preserve">
          <source>Right-shift and assignment</source>
          <target state="translated">Правая смена и назначение</target>
        </trans-unit>
        <trans-unit id="87ab4fb697063b10dcdc96979db348b5d934b10e" translate="yes" xml:space="preserve">
          <source>Rotate a subslice:</source>
          <target state="translated">Поверните подсказку:</target>
        </trans-unit>
        <trans-unit id="e2e2300fcc3d5d8ec414a7eaacdbbcb51bb451c4" translate="yes" xml:space="preserve">
          <source>Rotates &lt;code&gt;len() - k&lt;/code&gt; places to the left.</source>
          <target state="translated">Поворачивает &lt;code&gt;len() - k&lt;/code&gt; мест влево.</target>
        </trans-unit>
        <trans-unit id="ce3f746edcfb3b9e0b1137f1b27b633f9dbc1e06" translate="yes" xml:space="preserve">
          <source>Rotates &lt;code&gt;len() - mid&lt;/code&gt; places to the right.</source>
          <target state="translated">Поворачивает &lt;code&gt;len() - mid&lt;/code&gt; вправо.</target>
        </trans-unit>
        <trans-unit id="96b03b8904b0a15cce1085562454a38f8c416656" translate="yes" xml:space="preserve">
          <source>Rotates item &lt;code&gt;mid&lt;/code&gt; into the first position.</source>
          <target state="translated">Поворачивает элемент &lt;code&gt;mid&lt;/code&gt; в первую позицию.</target>
        </trans-unit>
        <trans-unit id="435514cee1befe7c5f78629addaceeb41d851af0" translate="yes" xml:space="preserve">
          <source>Rotates the double-ended queue &lt;code&gt;k&lt;/code&gt; places to the right.</source>
          <target state="translated">Поворачивает двустороннюю очередь на &lt;code&gt;k&lt;/code&gt; мест вправо.</target>
        </trans-unit>
        <trans-unit id="f6e0de855ccd5f7c0b8c806d3b9f3e85016db057" translate="yes" xml:space="preserve">
          <source>Rotates the double-ended queue &lt;code&gt;mid&lt;/code&gt; places to the left.</source>
          <target state="translated">Поворачивает двустороннюю очередь &lt;code&gt;mid&lt;/code&gt; влево.</target>
        </trans-unit>
        <trans-unit id="a3eb1eddf6dbbb2384431fa9dbaf6f2680d9416d" translate="yes" xml:space="preserve">
          <source>Rotates the first item into position &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="translated">Поворачивает первый элемент в позицию &lt;code&gt;k&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ed009359b30c6f889c504f86a394c588c0f7b7a" translate="yes" xml:space="preserve">
          <source>Rotates the slice in-place such that the first &lt;code&gt;mid&lt;/code&gt; elements of the slice move to the end while the last &lt;code&gt;self.len() - mid&lt;/code&gt; elements move to the front. After calling &lt;code&gt;rotate_left&lt;/code&gt;, the element previously at index &lt;code&gt;mid&lt;/code&gt; will become the first element in the slice.</source>
          <target state="translated">Поворачивает срез на месте таким образом, что первые &lt;code&gt;mid&lt;/code&gt; элементы среза перемещаются в конец, а последние &lt;code&gt;self.len() - mid&lt;/code&gt; перемещаются вперед. После вызова &lt;code&gt;rotate_left&lt;/code&gt; элемент, ранее находившийся в &lt;code&gt;mid&lt;/code&gt; индекса , станет первым элементом в срезе.</target>
        </trans-unit>
        <trans-unit id="04b7ac171ea5b32f47f9900517a2fadf3a9c0d83" translate="yes" xml:space="preserve">
          <source>Rotates the slice in-place such that the first &lt;code&gt;self.len() - k&lt;/code&gt; elements of the slice move to the end while the last &lt;code&gt;k&lt;/code&gt; elements move to the front. After calling &lt;code&gt;rotate_right&lt;/code&gt;, the element previously at index &lt;code&gt;self.len() - k&lt;/code&gt; will become the first element in the slice.</source>
          <target state="translated">Поворачивает срез на месте таким образом, что первые &lt;code&gt;self.len() - k&lt;/code&gt; среза перемещаются в конец, а последние &lt;code&gt;k&lt;/code&gt; элементов перемещаются вперед. После вызова &lt;code&gt;rotate_right&lt;/code&gt; элемент, который раньше &lt;code&gt;self.len() - k&lt;/code&gt; индекс self.len () - k , станет первым элементом в срезе.</target>
        </trans-unit>
        <trans-unit id="5c601ca5828939fb30e1667600554d785890002f" translate="yes" xml:space="preserve">
          <source>Rotating a subslice:</source>
          <target state="translated">Вращающаяся подсветка:</target>
        </trans-unit>
        <trans-unit id="4e37bfdd52117be2c062494638d3e5c44c84094a" translate="yes" xml:space="preserve">
          <source>Round up the current size to the nearest multiple of the next field's &lt;a href=&quot;fn.align_of&quot;&gt;alignment&lt;/a&gt;.</source>
          <target state="translated">Округлите текущий размер до ближайшего кратного значения &lt;a href=&quot;fn.align_of&quot;&gt;выравнивания&lt;/a&gt; следующего поля .</target>
        </trans-unit>
        <trans-unit id="50e5426091a53777b8711a517e2b93745535294e" translate="yes" xml:space="preserve">
          <source>Rounds toward zero and converts to any primitive integer type, assuming that the value is finite and fits in that type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58cf18a9ecd627eed5f1c04bd8628968731bb80a" translate="yes" xml:space="preserve">
          <source>Ruby: &lt;strike&gt;block syntax&lt;/strike&gt;</source>
          <target state="translated">Ruby: &lt;strike&gt;блочный синтаксис&lt;/strike&gt;</target>
        </trans-unit>
        <trans-unit id="ecf5f644a238902f7f393f69b82ea575cf5c3b7f" translate="yes" xml:space="preserve">
          <source>Ruby: closure syntax, &lt;strike&gt;block syntax&lt;/strike&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b36b4e006f637aa6590232050c05151c7ad67ec" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;cargo publish&lt;/code&gt; command again. It should succeed now:</source>
          <target state="translated">Снова запустите команду &lt;code&gt;cargo publish&lt;/code&gt; . Теперь должно получиться:</target>
        </trans-unit>
        <trans-unit id="923b0697706f694d4ca0d13f16f9a1afd423c9a4" translate="yes" xml:space="preserve">
          <source>Run the code with this change. Drat! We still get an error:</source>
          <target state="translated">Запустите код с этим изменением.Драт! Мы все еще получаем ошибку:</target>
        </trans-unit>
        <trans-unit id="3f16915758c73edf89a7ea497581557bcdd0d1f8" translate="yes" xml:space="preserve">
          <source>Run the code you want to test.</source>
          <target state="translated">Запустите код,который хотите проверить.</target>
        </trans-unit>
        <trans-unit id="e196a338a67e0d1bafa6837b0b8c2270766eed56" translate="yes" xml:space="preserve">
          <source>Run the program again, and look at the output:</source>
          <target state="translated">Запустите программу еще раз и посмотрите на результат:</target>
        </trans-unit>
        <trans-unit id="fab2784a99af076ad38bcd6561c56938260806b6" translate="yes" xml:space="preserve">
          <source>Run the tests again using &lt;code&gt;cargo test&lt;/code&gt;. The output should look like Listing 11-4, which shows that our &lt;code&gt;exploration&lt;/code&gt; test passed and &lt;code&gt;another&lt;/code&gt; failed.</source>
          <target state="translated">Снова запустите тесты, используя &lt;code&gt;cargo test&lt;/code&gt; . Результат должен выглядеть, как в листинге 11-4, который показывает, что наш тест &lt;code&gt;exploration&lt;/code&gt; прошел успешно, а &lt;code&gt;another&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0d45a5d41408cca9fc6eeaa7d959b93e0fc34a3" translate="yes" xml:space="preserve">
          <source>Run the tests again:</source>
          <target state="translated">Проведите тесты еще раз:</target>
        </trans-unit>
        <trans-unit id="513c6246dbce19675f37c27f2bbb4ac8a4d4b4e2" translate="yes" xml:space="preserve">
          <source>Run this code now and request &lt;em&gt;127.0.0.1:7878&lt;/em&gt;; you should get the HTML in &lt;em&gt;hello.html&lt;/em&gt;. If you make any other request, such as &lt;em&gt;127.0.0.1:7878/something-else&lt;/em&gt;, you&amp;rsquo;ll get a connection error like those you saw when running the code in Listing 20-1 and Listing 20-2.</source>
          <target state="translated">Запустите этот код сейчас и запросите &lt;em&gt;127.0.0.1:7878&lt;/em&gt; ; вы должны получить HTML в &lt;em&gt;hello.html&lt;/em&gt; . Если вы сделаете любой другой запрос, например &lt;em&gt;127.0.0.1:7878/something-else&lt;/em&gt; , вы получите ошибку соединения, подобную той, которую вы видели при запуске кода из Листинга 20-1 и Листинга 20-2.</target>
        </trans-unit>
        <trans-unit id="e35c6b16535d8da5f5670a5eab95ccaf77d4012a" translate="yes" xml:space="preserve">
          <source>Run this code with &lt;code&gt;cargo run&lt;/code&gt; and load &lt;em&gt;127.0.0.1:7878&lt;/em&gt; in your browser; you should see your HTML rendered!</source>
          <target state="translated">Запустите этот код с &lt;code&gt;cargo run&lt;/code&gt; и загрузите &lt;em&gt;127.0.0.1:7878&lt;/em&gt; в свой браузер; вы должны увидеть свой HTML-код!</target>
        </trans-unit>
        <trans-unit id="23437fed19097bdfdfbe0b8267f38604c310de83" translate="yes" xml:space="preserve">
          <source>Run this test with the &lt;code&gt;Cacher&lt;/code&gt; implementation in Listing 13-9 and Listing 13-10, and the test will fail on the &lt;code&gt;assert_eq!&lt;/code&gt; with this message:</source>
          <target state="translated">Запустите этот тест с реализацией &lt;code&gt;Cacher&lt;/code&gt; в листингах 13-9 и 13-10, и тест завершится ошибкой на &lt;code&gt;assert_eq!&lt;/code&gt; с этим сообщением:</target>
        </trans-unit>
        <trans-unit id="d3d8bf74c1c629197f4536b35815a9f7a259419d" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;cargo clippy&lt;/code&gt; on this project results in this error:</source>
          <target state="translated">Запуск &lt;code&gt;cargo clippy&lt;/code&gt; в этом проекте приводит к следующей ошибке:</target>
        </trans-unit>
        <trans-unit id="f395b53628f20c5c4b3bbd548137966e23fc9dab" translate="yes" xml:space="preserve">
          <source>Running Code on Cleanup with the &lt;code id=&quot;running-code-on-cleanup-with-the-drop-trait&quot;&gt;Drop&lt;/code&gt; Trait</source>
          <target state="translated">Запуск кода при очистке с трейтом &lt;code id=&quot;running-code-on-cleanup-with-the-drop-trait&quot;&gt;Drop&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="564030da0f34d36e19aa75d7720530ab88c94b03" translate="yes" xml:space="preserve">
          <source>Running Single Tests</source>
          <target state="translated">Бегущие одиночные тесты</target>
        </trans-unit>
        <trans-unit id="e69e378bddb35dc41b1601835b2e69f3cbc1a82e" translate="yes" xml:space="preserve">
          <source>Running Tests in Parallel or Consecutively</source>
          <target state="translated">Выполняемые тесты параллельно или последовательно</target>
        </trans-unit>
        <trans-unit id="1e1d8cbafc2cddc28df09bc7a99cf83551dd23e4" translate="yes" xml:space="preserve">
          <source>Running a Subset of Tests by Name</source>
          <target state="translated">Запуск подмножества тестов по имени</target>
        </trans-unit>
        <trans-unit id="103fa497687d08956605ccfefaf1c40f881c8239" translate="yes" xml:space="preserve">
          <source>Running the code in Listing 8-25 will print &lt;code&gt;{&quot;Yellow&quot;: 50, &quot;Blue&quot;: 10}&lt;/code&gt;. The first call to &lt;code&gt;entry&lt;/code&gt; will insert the key for the Yellow team with the value 50 because the Yellow team doesn&amp;rsquo;t have a value already. The second call to &lt;code&gt;entry&lt;/code&gt; will not change the hash map because the Blue team already has the value 10.</source>
          <target state="translated">Выполнение кода из Листинга 8-25 выведет &lt;code&gt;{&quot;Yellow&quot;: 50, &quot;Blue&quot;: 10}&lt;/code&gt; . При первом вызове &lt;code&gt;entry&lt;/code&gt; будет вставлен ключ для желтой команды со значением 50, потому что желтая команда еще не имеет значения. Второй вызов &lt;code&gt;entry&lt;/code&gt; не изменит хэш-карту, потому что синяя команда уже имеет значение 10.</target>
        </trans-unit>
        <trans-unit id="1c9add0452877e9f24dc2bf7d578c6ed2f3e1d8b" translate="yes" xml:space="preserve">
          <source>Running the tests now produces the following:</source>
          <target state="translated">Проводя тесты,вы получаете следующее:</target>
        </trans-unit>
        <trans-unit id="f25b19c8b9c8cd64ad4a2e8f5f7c3c28f70fa2a3" translate="yes" xml:space="preserve">
          <source>Running this code prints the following:</source>
          <target state="translated">Запустив этот код,вы получите следующие данные:</target>
        </trans-unit>
        <trans-unit id="1e3c357826826fa11f1cba26866e53be103107ea" translate="yes" xml:space="preserve">
          <source>Running this code using &lt;code&gt;cargo run&lt;/code&gt; produces the following result:</source>
          <target state="translated">Запуск этого кода с использованием &lt;code&gt;cargo run&lt;/code&gt; дает следующий результат:</target>
        </trans-unit>
        <trans-unit id="c569a779f618ce9a2967d5affac56fe27ca64ca3" translate="yes" xml:space="preserve">
          <source>Running this code will print &lt;code&gt;*waving arms furiously*&lt;/code&gt;, showing that Rust called the &lt;code&gt;fly&lt;/code&gt; method implemented on &lt;code&gt;Human&lt;/code&gt; directly.</source>
          <target state="translated">Запуск этого кода выведет &lt;code&gt;*waving arms furiously*&lt;/code&gt; , показывая, что Rust вызвал метод &lt;code&gt;fly&lt;/code&gt; , реализованный непосредственно в &lt;code&gt;Human&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="050611088b4215f09f3ddc0798cae6177d1f772f" translate="yes" xml:space="preserve">
          <source>Running this code will print &lt;code&gt;The value of x is: 6&lt;/code&gt;. But if we place a semicolon at the end of the line containing &lt;code&gt;x + 1&lt;/code&gt;, changing it from an expression to a statement, we&amp;rsquo;ll get an error.</source>
          <target state="translated">При запуске этого кода будет напечатано &lt;code&gt;The value of x is: 6&lt;/code&gt; . Но если мы поставим точку с запятой в конце строки, содержащей &lt;code&gt;x + 1&lt;/code&gt; , изменив ее с выражения на оператор, мы получим ошибку.</target>
        </trans-unit>
        <trans-unit id="0cf90b9dd90262dc86c7e18ab1cd2e79c2411dea" translate="yes" xml:space="preserve">
          <source>Running this code will print &lt;code&gt;number was something other than zero&lt;/code&gt;.</source>
          <target state="translated">Запуск этого кода выведет &lt;code&gt;number was something other than zero&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3da00eed1960155f07dbe554383fc0ea4f0b115" translate="yes" xml:space="preserve">
          <source>Running this code will print the following:</source>
          <target state="translated">Запустив этот код,вы распечатаете следующее:</target>
        </trans-unit>
        <trans-unit id="e4fcdd04ec6ff3e0b0277e41acfba1bf839f5a18" translate="yes" xml:space="preserve">
          <source>Running this command reformats all the Rust code in the current crate. This should only change the code style, not the code semantics. For more information on &lt;code&gt;rustfmt&lt;/code&gt;, see &lt;a href=&quot;https://github.com/rust-lang/rustfmt&quot;&gt;its documentation&lt;/a&gt;.</source>
          <target state="translated">Выполнение этой команды переформатирует весь код Rust в текущем ящике. Это должно изменить только стиль кода, но не семантику кода. Для получения дополнительной информации о &lt;code&gt;rustfmt&lt;/code&gt; см. &lt;a href=&quot;https://github.com/rust-lang/rustfmt&quot;&gt;Его документацию&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7d1170a5c907c3d621f9e3318eb8f67085d5957f" translate="yes" xml:space="preserve">
          <source>Running this test produces the following:</source>
          <target state="translated">В результате этого теста получается следующее:</target>
        </trans-unit>
        <trans-unit id="c4740e4ca28c9c8d6a8447aef5c33425e6de4802" translate="yes" xml:space="preserve">
          <source>Runtime</source>
          <target state="translated">Runtime</target>
        </trans-unit>
        <trans-unit id="5359eea6ab0e87db9479836bb9761e7ad6a157fe" translate="yes" xml:space="preserve">
          <source>Runtime characteristics</source>
          <target state="translated">Характеристики выполнения</target>
        </trans-unit>
        <trans-unit id="581d4fec52b7eb5bd873dc892c1ee2b7004ec350" translate="yes" xml:space="preserve">
          <source>Runtime checks are present to ensure there is only one nul byte in the &lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;, its last element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ae20d9ae7fcacb605c03c198e0a1c51d446f50" translate="yes" xml:space="preserve">
          <source>Rust</source>
          <target state="translated">Rust</target>
        </trans-unit>
        <trans-unit id="1fc5c6604c5a3ad4a813390059fa989765293b6c" translate="yes" xml:space="preserve">
          <source>Rust 2015 does not permit the use of &lt;code&gt;async fn&lt;/code&gt;.</source>
          <target state="translated">Rust 2015 не разрешает использование &lt;code&gt;async fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a577c02cc01ad8b1a35ad9c0d2cad0f98a6cf0b5" translate="yes" xml:space="preserve">
          <source>Rust &lt;em&gt;does&lt;/em&gt; include functionality to print out debugging information, but we have to explicitly opt in to make that functionality available for our struct. To do that, we add the annotation &lt;code&gt;#[derive(Debug)]&lt;/code&gt; just before the struct definition, as shown in Listing 5-12.</source>
          <target state="translated">Rust &lt;em&gt;действительно&lt;/em&gt; включает функциональность для вывода отладочной информации, но мы должны явно согласиться, чтобы сделать эту функциональность доступной для нашей структуры. Для этого мы добавляем аннотацию &lt;code&gt;#[derive(Debug)]&lt;/code&gt; непосредственно перед определением структуры, как показано в листинге 5-12.</target>
        </trans-unit>
        <trans-unit id="2c33a40099b2ccd85bf32fbbe3e68ef69581fe7f" translate="yes" xml:space="preserve">
          <source>Rust &lt;em&gt;infers&lt;/em&gt; how to capture &lt;code&gt;v&lt;/code&gt;, and because &lt;code&gt;println!&lt;/code&gt; only needs a reference to &lt;code&gt;v&lt;/code&gt;, the closure tries to borrow &lt;code&gt;v&lt;/code&gt;. However, there&amp;rsquo;s a problem: Rust can&amp;rsquo;t tell how long the spawned thread will run, so it doesn&amp;rsquo;t know if the reference to &lt;code&gt;v&lt;/code&gt; will always be valid.</source>
          <target state="translated">Rust &lt;em&gt;делает вывод,&lt;/em&gt; как захватить &lt;code&gt;v&lt;/code&gt; , и потому что &lt;code&gt;println!&lt;/code&gt; нужна только ссылка на &lt;code&gt;v&lt;/code&gt; , замыкание пытается заимствовать &lt;code&gt;v&lt;/code&gt; . Однако есть проблема: Rust не может сказать, как долго будет работать порожденный поток, поэтому он не знает , всегда ли ссылка на &lt;code&gt;v&lt;/code&gt; будет действительной.</target>
        </trans-unit>
        <trans-unit id="a0209ede66a299d6f835fa4fdb4f3764cda36010" translate="yes" xml:space="preserve">
          <source>Rust Compiler Error Index</source>
          <target state="translated">Индекс ошибок компилятора ржавчины</target>
        </trans-unit>
        <trans-unit id="e86e2f7e2be516ce0300d8b3591468341035e99b" translate="yes" xml:space="preserve">
          <source>Rust Documentation</source>
          <target state="translated">Ржавчина документации</target>
        </trans-unit>
        <trans-unit id="bdda1ab5e01f657b125db05f2df30c737c186ccb" translate="yes" xml:space="preserve">
          <source>Rust accomplishes this by performing monomorphization of the code that is using generics at compile time. &lt;em&gt;Monomorphization&lt;/em&gt; is the process of turning generic code into specific code by filling in the concrete types that are used when compiled.</source>
          <target state="translated">Rust выполняет это, выполняя мономорфизацию кода, использующего дженерики, во время компиляции. &lt;em&gt;Мономорфизация&lt;/em&gt; - это процесс превращения общего кода в конкретный код путем заполнения конкретных типов, которые используются при компиляции.</target>
        </trans-unit>
        <trans-unit id="effe1b768c4ce9dd07e450e0add6036006e9bc1f" translate="yes" xml:space="preserve">
          <source>Rust actually makes it somewhat difficult to produce this loop in the first place. In order to end up with two values that point at each other, one of them needs to be mutable. This is difficult because &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt; enforces memory safety by only giving out shared references to the value it wraps, and these don't allow direct mutation. We need to wrap the part of the value we wish to mutate in a &lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&lt;/code&gt;&lt;/a&gt;, which provides &lt;em&gt;interior mutability&lt;/em&gt;: a method to achieve mutability through a shared reference. &lt;a href=&quot;../cell/struct.refcell&quot;&gt;&lt;code&gt;RefCell&lt;/code&gt;&lt;/a&gt; enforces Rust's borrowing rules at runtime.</source>
          <target state="translated">На самом деле, Rust затрудняет создание этого цикла. Чтобы получить два значения, указывающих друг на друга, одно из них должно быть изменяемым. Это сложно, потому что &lt;a href=&quot;struct.rc&quot;&gt; &lt;code&gt;Rc&lt;/code&gt; &lt;/a&gt; обеспечивает безопасность памяти, выдавая общие ссылки только на значение, которое он обертывает, а они не допускают прямую мутацию. Нам нужно обернуть часть значения, которое мы хотим &lt;a href=&quot;../cell/struct.refcell&quot;&gt; &lt;code&gt;RefCell&lt;/code&gt; &lt;/a&gt; , в RefCell , который обеспечивает &lt;em&gt;внутреннюю изменчивость&lt;/em&gt; : метод достижения изменчивости через общую ссылку. &lt;a href=&quot;../cell/struct.refcell&quot;&gt; &lt;code&gt;RefCell&lt;/code&gt; &lt;/a&gt; обеспечивает соблюдение правил заимствования Rust во время выполнения.</target>
        </trans-unit>
        <trans-unit id="ae0d2b578d61b694ca8792ea668e7a392f999440" translate="yes" xml:space="preserve">
          <source>Rust allows publicly re-exporting items through a &lt;code&gt;pub use&lt;/code&gt; directive. Because this is a public directive, this allows the item to be used in the current module through the rules above. It essentially allows public access into the re-exported item. For example, this program is valid:</source>
          <target state="translated">Rust разрешает публичный реэкспорт предметов через директиву &lt;code&gt;pub use&lt;/code&gt; . Поскольку это общедоступная директива, это позволяет использовать элемент в текущем модуле в соответствии с приведенными выше правилами. По сути, это разрешает публичный доступ к реэкспортированному элементу. Например, эта программа действительна:</target>
        </trans-unit>
        <trans-unit id="4985d4ad4c4fe1e9dd624f9f2f34b2f73c6ed42b" translate="yes" xml:space="preserve">
          <source>Rust also brings contemporary developer tools to the systems programming world:</source>
          <target state="translated">Ржавчина также привносит современные инструменты разработчиков в мир системного программирования:</target>
        </trans-unit>
        <trans-unit id="5dd2b7d9e5548848e20c79e786ff2b0d3869e782" translate="yes" xml:space="preserve">
          <source>Rust also has a pattern we can use when we don&amp;rsquo;t want to list all possible values. For example, a &lt;code&gt;u8&lt;/code&gt; can have valid values of 0 through 255. If we only care about the values 1, 3, 5, and 7, we don&amp;rsquo;t want to have to list out 0, 2, 4, 6, 8, 9 all the way up to 255. Fortunately, we don&amp;rsquo;t have to: we can use the special pattern &lt;code&gt;_&lt;/code&gt; instead:</source>
          <target state="translated">В Rust также есть шаблон, который мы можем использовать, когда не хотим перечислять все возможные значения. Например, &lt;code&gt;u8&lt;/code&gt; может иметь допустимые значения от 0 до 255. Если нас интересуют только значения 1, 3, 5 и 7, мы не хотим перечислять 0, 2, 4, 6, 8, 9 вплоть до 255. К счастью, в этом нет необходимости: вместо этого мы можем использовать специальный шаблон &lt;code&gt;_&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e19038a4b8947e67e71fb4a5db45a42bb503b2ee" translate="yes" xml:space="preserve">
          <source>Rust also has another kind of comment, documentation comments, which we&amp;rsquo;ll discuss in the &amp;ldquo;Publishing a Crate to Crates.io&amp;rdquo; section of Chapter 14.</source>
          <target state="translated">У Rust есть и другой вид комментариев, комментарии к документации, которые мы обсудим в разделе &amp;laquo;Публикация ящика в Crates.io&amp;raquo; главы 14.</target>
        </trans-unit>
        <trans-unit id="bbdbd64aac3d17c7509c8b7d6b785d5bd17d6f9e" translate="yes" xml:space="preserve">
          <source>Rust also has two primitive types for &lt;em&gt;floating-point numbers&lt;/em&gt;, which are numbers with decimal points. Rust&amp;rsquo;s floating-point types are &lt;code&gt;f32&lt;/code&gt; and &lt;code&gt;f64&lt;/code&gt;, which are 32 bits and 64 bits in size, respectively. The default type is &lt;code&gt;f64&lt;/code&gt; because on modern CPUs it&amp;rsquo;s roughly the same speed as &lt;code&gt;f32&lt;/code&gt; but is capable of more precision.</source>
          <target state="translated">В Rust также есть два примитивных типа для &lt;em&gt;чисел с плавающей запятой&lt;/em&gt; , которые представляют собой числа с десятичной запятой. Типы с плавающей запятой в Rust - это &lt;code&gt;f32&lt;/code&gt; и &lt;code&gt;f64&lt;/code&gt; , которые имеют размер 32 и 64 бита соответственно. Тип по умолчанию - &lt;code&gt;f64&lt;/code&gt; , потому что на современных процессорах это примерно такая же скорость, как и &lt;code&gt;f32&lt;/code&gt; , но с большей точностью.</target>
        </trans-unit>
        <trans-unit id="29c1f1ea8c701993d0c6c3c7c3f0fda1a6673205" translate="yes" xml:space="preserve">
          <source>Rust and Cargo have features that help make your published package easier for people to use and to find in the first place. We&amp;rsquo;ll talk about some of these features next and then explain how to publish a package.</source>
          <target state="translated">В Rust и Cargo есть функции, которые помогают сделать опубликованный пакет проще для людей в использовании и в первую очередь для поиска. Далее мы поговорим о некоторых из этих функций, а затем объясним, как опубликовать пакет.</target>
        </trans-unit>
        <trans-unit id="7f3133698a0220ad7c68f52e85cdd6fbb05996b0" translate="yes" xml:space="preserve">
          <source>Rust attempts to mitigate the negative effects of using threads, but programming in a multithreaded context still takes careful thought and requires a code structure that is different from that in programs running in a single thread.</source>
          <target state="translated">Ржавчина пытается смягчить негативные последствия использования потоков,но программирование в многопоточном контексте все еще требует тщательной продуманности и структуры кода,отличной от структуры программ,выполняющихся в одном потоке.</target>
        </trans-unit>
        <trans-unit id="c689ed78369011848abbd3ac8af6ba4c0ea496a6" translate="yes" xml:space="preserve">
          <source>Rust automatically called &lt;code&gt;drop&lt;/code&gt; for us when our instances went out of scope, calling the code we specified. Variables are dropped in the reverse order of their creation, so &lt;code&gt;d&lt;/code&gt; was dropped before &lt;code&gt;c&lt;/code&gt;. This example gives you a visual guide to how the &lt;code&gt;drop&lt;/code&gt; method works; usually you would specify the cleanup code that your type needs to run rather than a print message.</source>
          <target state="translated">Rust автоматически вызывает для нас &lt;code&gt;drop&lt;/code&gt; , когда наши экземпляры выходят за пределы области видимости, вызывая указанный нами код. Переменные удаляются в порядке, обратном их созданию, поэтому &lt;code&gt;d&lt;/code&gt; был удален до &lt;code&gt;c&lt;/code&gt; . Этот пример дает вам наглядное представление о том, как работает метод &lt;code&gt;drop&lt;/code&gt; ; обычно вы указываете код очистки, который требуется вашему типу для запуска, а не сообщение для печати.</target>
        </trans-unit>
        <trans-unit id="cb4fa52344abf16e13622ef8bb3c3893fe286a01" translate="yes" xml:space="preserve">
          <source>Rust breaks down these barriers by eliminating the old pitfalls and providing a friendly, polished set of tools to help you along the way. Programmers who need to &amp;ldquo;dip down&amp;rdquo; into lower-level control can do so with Rust, without taking on the customary risk of crashes or security holes, and without having to learn the fine points of a fickle toolchain. Better yet, the language is designed to guide you naturally towards reliable code that is efficient in terms of speed and memory usage.</source>
          <target state="translated">Rust разрушает эти барьеры, устраняя старые ловушки и предоставляя дружелюбный, отполированный набор инструментов, которые помогут вам на этом пути. Программисты, которым необходимо &amp;laquo;окунуться&amp;raquo; в элемент управления нижнего уровня, могут сделать это с помощью Rust, не принимая на себя привычный риск сбоев или дыр в безопасности и без необходимости изучать тонкости непостоянной инструментальной цепочки. Еще лучше то, что язык разработан, чтобы естественным образом направить вас к надежному коду, эффективному с точки зрения скорости и использования памяти.</target>
        </trans-unit>
        <trans-unit id="cdaf4a6bf131d48ffa2af0a612ccc9c24734bcff" translate="yes" xml:space="preserve">
          <source>Rust can tell that &lt;code&gt;c&lt;/code&gt; is within the first pattern&amp;rsquo;s range and prints &lt;code&gt;early ASCII letter&lt;/code&gt;.</source>
          <target state="translated">Rust может сказать, что &lt;code&gt;c&lt;/code&gt; находится в пределах диапазона первого шаблона, и печатает &lt;code&gt;early ASCII letter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0aa4b6eb356ff042802f189c6b9ce9b6d9bb7f5" translate="yes" xml:space="preserve">
          <source>Rust can&amp;rsquo;t figure out how much space to allocate for recursively defined types, so the compiler gives the error in Listing 15-4. But the error does include this helpful suggestion:</source>
          <target state="translated">Rust не может определить, сколько места выделить для рекурсивно определенных типов, поэтому компилятор выдает ошибку в листинге 15-4. Но ошибка содержит следующее полезное предложение:</target>
        </trans-unit>
        <trans-unit id="9cb61601ebccc0f0be25f7b4aa2fa6eed3577955" translate="yes" xml:space="preserve">
          <source>Rust can&amp;rsquo;t possibly know which of the two arguments we need, so we need to tell it. Because &lt;code&gt;contents&lt;/code&gt; is the argument that contains all of our text and we want to return the parts of that text that match, we know &lt;code&gt;contents&lt;/code&gt; is the argument that should be connected to the return value using the lifetime syntax.</source>
          <target state="translated">Rust не может знать, какой из двух аргументов нам нужен, поэтому нам нужно его сообщить. Поскольку &lt;code&gt;contents&lt;/code&gt; - это аргумент, который содержит весь наш текст, и мы хотим вернуть совпадающие части этого текста, мы знаем, что &lt;code&gt;contents&lt;/code&gt; - это аргумент, который должен быть связан с возвращаемым значением с использованием синтаксиса времени жизни.</target>
        </trans-unit>
        <trans-unit id="51a6c6ddffe8c70b5e18c5cd678688a6e33bff5b" translate="yes" xml:space="preserve">
          <source>Rust chose to have the module system function this way so that hiding inner implementation details is the default. That way, you know which parts of the inner code you can change without breaking outer code. But you can expose inner parts of child modules code to outer ancestor modules by using the &lt;code&gt;pub&lt;/code&gt; keyword to make an item public.</source>
          <target state="translated">Rust решил, что модульная система работает таким образом, поэтому по умолчанию скрываются внутренние детали реализации. Таким образом, вы знаете, какие части внутреннего кода вы можете изменить, не нарушая внешний код. Но вы можете предоставить внутренние части кода дочерних модулей внешним модулям-предкам, используя ключевое слово &lt;code&gt;pub&lt;/code&gt; , чтобы сделать элемент общедоступным.</target>
        </trans-unit>
        <trans-unit id="b4ffd6d9ef1384aeb9bcafe5fc321bee1c46b8a9" translate="yes" xml:space="preserve">
          <source>Rust chose to have the module system function this way so that hiding inner implementation details is the default. That way, you know which parts of the inner code you can change without breaking outer code. But you can expose inner parts of child modules' code to outer ancestor modules by using the &lt;code&gt;pub&lt;/code&gt; keyword to make an item public.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed85801e6aa03885ea34ff196d1f5d07d63ebd2" translate="yes" xml:space="preserve">
          <source>Rust code is incorrect if it exhibits any of the behaviors in the following list. This includes code within &lt;code&gt;unsafe&lt;/code&gt; blocks and &lt;code&gt;unsafe&lt;/code&gt; functions. &lt;code&gt;unsafe&lt;/code&gt; only means that avoiding undefined behavior is on the programmer; it does not change anything about the fact that Rust programs must never cause undefined behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e084b33e4de65ea0dae7e0617381c6117a4a157d" translate="yes" xml:space="preserve">
          <source>Rust code uses &lt;em&gt;snake case&lt;/em&gt; as the conventional style for function and variable names. In snake case, all letters are lowercase and underscores separate words. Here&amp;rsquo;s a program that contains an example function definition:</source>
          <target state="translated">Код Rust использует &lt;em&gt;регистр змейки&lt;/em&gt; как обычный стиль для имен функций и переменных. В случае змеи все буквы строчные и подчеркивают отдельные слова. Вот программа, которая содержит пример определения функции:</target>
        </trans-unit>
        <trans-unit id="e2a256ae150c413740aa7cd085658b2d9a62fbaa" translate="yes" xml:space="preserve">
          <source>Rust code, including within &lt;code&gt;unsafe&lt;/code&gt; blocks and &lt;code&gt;unsafe&lt;/code&gt; functions is incorrect if it exhibits any of the behaviors in the following list. It is the programmer's responsibility when writing &lt;code&gt;unsafe&lt;/code&gt; code that it is not possible to let &lt;code&gt;safe&lt;/code&gt; code exhibit these behaviors.</source>
          <target state="translated">Код Rust, в том числе в &lt;code&gt;unsafe&lt;/code&gt; блоках и &lt;code&gt;unsafe&lt;/code&gt; функциях, является некорректным, если он демонстрирует какое-либо поведение, указанное в следующем списке. При написании &lt;code&gt;unsafe&lt;/code&gt; кода ответственность за то, чтобы &lt;code&gt;safe&lt;/code&gt; код не проявлял такого поведения, является ответственностью программиста .</target>
        </trans-unit>
        <trans-unit id="267e97a30b8e7e2b82eb0bd15c0545ae0f9ce0a2" translate="yes" xml:space="preserve">
          <source>Rust comes with a variety of things in its standard library. However, if you had to manually import every single thing that you used, it would be very verbose. But importing a lot of things that a program never uses isn't good either. A balance needs to be struck.</source>
          <target state="translated">Ржавчина поставляется с различными вещами в своей стандартной библиотеке.Однако,если бы вам приходилось вручную импортировать каждую вещь,которую вы использовали,она была бы очень многословной.Но импорт многих вещей,которыми программа никогда не пользуется,тоже не очень хорош.Нужно найти баланс.</target>
        </trans-unit>
        <trans-unit id="30050a292030028105b725a80cfd11137e292a84" translate="yes" xml:space="preserve">
          <source>Rust complains that it doesn&amp;rsquo;t make sense to use &lt;code&gt;if let&lt;/code&gt; with an irrefutable pattern:</source>
          <target state="translated">Rust жалуется, что не имеет смысла использовать &lt;code&gt;if let&lt;/code&gt; с неопровержимым паттерном:</target>
        </trans-unit>
        <trans-unit id="151a36819a9041707f7a83143365261d69ad15c3" translate="yes" xml:space="preserve">
          <source>Rust de-sugars this into:</source>
          <target state="translated">Ржавчина де-сахара вставляет это:</target>
        </trans-unit>
        <trans-unit id="7f9478ac9f9f1e9c53d0bbd8f2f29a740e10b88f" translate="yes" xml:space="preserve">
          <source>Rust development operates on a &lt;em&gt;train schedule&lt;/em&gt;. That is, all development is done on the &lt;code&gt;master&lt;/code&gt; branch of the Rust repository. Releases follow a software release train model, which has been used by Cisco IOS and other software projects. There are three &lt;em&gt;release channels&lt;/em&gt; for Rust:</source>
          <target state="translated">Разработка Rust осуществляется по &lt;em&gt;расписанию поездов&lt;/em&gt; . То есть вся разработка ведется на &lt;code&gt;master&lt;/code&gt; ветке репозитория Rust. Релизы следуют модели последовательности релизов программного обеспечения, которая использовалась Cisco IOS и другими программными проектами. Существует три &lt;em&gt;канала выпуска&lt;/em&gt; Rust:</target>
        </trans-unit>
        <trans-unit id="c1ceba7cafe03c43c23515eea22061c0156f8ee3" translate="yes" xml:space="preserve">
          <source>Rust divides keywords into three categories:</source>
          <target state="translated">Ржавчина делит ключевые слова на три категории:</target>
        </trans-unit>
        <trans-unit id="520af2b0caca1d9f181466e2056d3f0b0b57619e" translate="yes" xml:space="preserve">
          <source>Rust does deref coercion when it finds types and trait implementations in three cases:</source>
          <target state="translated">Rust отменяет принуждение,когда находит типы и реализации признаков в трех случаях:</target>
        </trans-unit>
        <trans-unit id="44dd2f2386da2c0cdd5e7d3c775c2fc5131419be" translate="yes" xml:space="preserve">
          <source>Rust does not currently have a rigorously and formally defined memory model, so the precise semantics of what &quot;volatile&quot; means here is subject to change over time. That being said, the semantics will almost always end up pretty similar to &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf&quot;&gt;C11's definition of volatile&lt;/a&gt;.</source>
          <target state="translated">В настоящее время Rust не имеет строго и формально определенной модели памяти, поэтому точная семантика того, что здесь означает &amp;laquo;изменчивый&amp;raquo;, может со временем меняться. При этом семантика почти всегда будет очень похожа на &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf&quot;&gt;определение volatile&lt;/a&gt; в C11 .</target>
        </trans-unit>
        <trans-unit id="fbbe7c11a19a771711fe824dd3e7ec32cef70acb" translate="yes" xml:space="preserve">
          <source>Rust does not currently support this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f345e86ce4bdfb609568cfe8dcd5b348d517588" translate="yes" xml:space="preserve">
          <source>Rust does not permit a closure to directly reference its own type, either through an argument (as in the example above) or by capturing itself through its environment. This restriction helps keep closure inference tractable.</source>
          <target state="translated">Ржавчина не позволяет замыканию напрямую ссылаться на свой собственный тип,ни с помощью аргумента (как в примере выше),ни с помощью захвата себя через свою среду.Это ограничение помогает сохранить вывод о закрытии.</target>
        </trans-unit>
        <trans-unit id="e25c8c25102888075b13676dc7cdde6255be9b8e" translate="yes" xml:space="preserve">
          <source>Rust does not yet have a defined memory model. Various academics and industry are working on various proposals, but for now, this is an under-defined place in the language.</source>
          <target state="translated">Ржавчина еще не имеет определенной модели памяти.Различные ученые и промышленники работают над различными предложениями,но пока это недоопределенное место в языке.</target>
        </trans-unit>
        <trans-unit id="34f3af8d8ef49dee8de54e673fbeb4ddba63eab4" translate="yes" xml:space="preserve">
          <source>Rust doesn&amp;rsquo;t allow you to create your own operators or overload arbitrary operators. But you can overload the operations and corresponding traits listed in &lt;code&gt;std::ops&lt;/code&gt; by implementing the traits associated with the operator. For example, in Listing 19-14 we overload the &lt;code&gt;+&lt;/code&gt; operator to add two &lt;code&gt;Point&lt;/code&gt; instances together. We do this by implementing the &lt;code&gt;Add&lt;/code&gt; trait on a &lt;code&gt;Point&lt;/code&gt; struct:</source>
          <target state="translated">Rust не позволяет создавать собственные операторы или перегружать произвольные операторы. Но вы можете перегрузить операции и соответствующие черты, перечисленные в &lt;code&gt;std::ops&lt;/code&gt; , реализуя черты, связанные с оператором. Например, в листинге 19-14 мы перегружаем оператор &lt;code&gt;+&lt;/code&gt; , чтобы добавить два экземпляра &lt;code&gt;Point&lt;/code&gt; вместе. Мы делаем это, реализуя трейт &lt;code&gt;Add&lt;/code&gt; в структуре &lt;code&gt;Point&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c421a151bfbb2f6d54a7d626539462864b68cd48" translate="yes" xml:space="preserve">
          <source>Rust doesn&amp;rsquo;t have an equivalent to the &lt;code&gt;-&amp;gt;&lt;/code&gt; operator; instead, Rust has a feature called &lt;em&gt;automatic referencing and dereferencing&lt;/em&gt;. Calling methods is one of the few places in Rust that has this behavior.</source>
          <target state="translated">В Rust нет эквивалента оператору &lt;code&gt;-&amp;gt;&lt;/code&gt; ; вместо этого в Rust есть функция, называемая &lt;em&gt;автоматическим обращением и разыменованием&lt;/em&gt; . Вызов методов - одно из немногих мест в Rust, которое имеет такое поведение.</target>
        </trans-unit>
        <trans-unit id="5b42e515beb4780bad0d430e54e0d456e0ed5719" translate="yes" xml:space="preserve">
          <source>Rust doesn&amp;rsquo;t have objects in the same sense as other languages have objects, and Rust doesn&amp;rsquo;t have mock object functionality built into the standard library as some other languages do. However, you can definitely create a struct that will serve the same purposes as a mock object.</source>
          <target state="translated">В Rust нет объектов в том смысле, в каком они есть в других языках, а в Rust нет встроенных функций фиктивных объектов, как в некоторых других языках. Однако вы определенно можете создать структуру, которая будет служить тем же целям, что и фиктивный объект.</target>
        </trans-unit>
        <trans-unit id="742db479bb4771b176a5e708d26cf5692112a273" translate="yes" xml:space="preserve">
          <source>Rust doesn&amp;rsquo;t let us call &lt;code&gt;drop&lt;/code&gt; explicitly because Rust would still automatically call &lt;code&gt;drop&lt;/code&gt; on the value at the end of &lt;code&gt;main&lt;/code&gt;. This would be a &lt;em&gt;double free&lt;/em&gt; error because Rust would be trying to clean up the same value twice.</source>
          <target state="translated">Rust не позволяет нам явно вызывать &lt;code&gt;drop&lt;/code&gt; , потому что Rust по-прежнему автоматически вызывает &lt;code&gt;drop&lt;/code&gt; для значения в конце &lt;code&gt;main&lt;/code&gt; . Это будет &lt;em&gt;двойной&lt;/em&gt; ошибкой, потому что Rust дважды пытается очистить одно и то же значение.</target>
        </trans-unit>
        <trans-unit id="a5ddfc059c10a99d099217277479972f1dff9d9d" translate="yes" xml:space="preserve">
          <source>Rust enforces that there can only be one mutable reference to a particular piece of data in a particular scope. Because of this, attempting to use &lt;code&gt;swap_with_slice&lt;/code&gt; on a single slice will result in a compile failure:</source>
          <target state="translated">Rust предписывает, что может быть только одна изменяемая ссылка на конкретный фрагмент данных в определенной области. Из-за этого попытка использовать &lt;code&gt;swap_with_slice&lt;/code&gt; на одном срезе приведет к сбою компиляции:</target>
        </trans-unit>
        <trans-unit id="b8796c82063dd394ca7b901b43bcdd5623524f60" translate="yes" xml:space="preserve">
          <source>Rust enforces that there can only be one mutable reference with no immutable references to a particular piece of data in a particular scope. Because of this, attempting to use &lt;code&gt;clone_from_slice&lt;/code&gt; on a single slice will result in a compile failure:</source>
          <target state="translated">Rust предписывает, что может быть только одна изменяемая ссылка без неизменных ссылок на конкретный фрагмент данных в определенной области. Из-за этого попытка использовать &lt;code&gt;clone_from_slice&lt;/code&gt; на одном срезе приведет к сбою компиляции:</target>
        </trans-unit>
        <trans-unit id="706c743ee2c8c57c9cf12e956040ea8994faeb61" translate="yes" xml:space="preserve">
          <source>Rust enforces that there can only be one mutable reference with no immutable references to a particular piece of data in a particular scope. Because of this, attempting to use &lt;code&gt;copy_from_slice&lt;/code&gt; on a single slice will result in a compile failure:</source>
          <target state="translated">Rust предписывает, что может быть только одна изменяемая ссылка без неизменных ссылок на конкретный фрагмент данных в определенной области. Из-за этого попытка использовать &lt;code&gt;copy_from_slice&lt;/code&gt; на одном срезе приведет к сбою компиляции:</target>
        </trans-unit>
        <trans-unit id="89181f89a95db183f5b3d8303bfdfb2bc964fac0" translate="yes" xml:space="preserve">
          <source>Rust groups errors into two major categories: &lt;em&gt;recoverable&lt;/em&gt; and &lt;em&gt;unrecoverable&lt;/em&gt; errors. For a recoverable error, such as a file not found error, it&amp;rsquo;s reasonable to report the problem to the user and retry the operation. Unrecoverable errors are always symptoms of bugs, like trying to access a location beyond the end of an array.</source>
          <target state="translated">Rust разделяет ошибки на две основные категории: &lt;em&gt;исправимые&lt;/em&gt; и &lt;em&gt;неисправимые&lt;/em&gt; ошибки. В случае исправимой ошибки, такой как ошибка &amp;laquo;файл не найден&amp;raquo;, разумно сообщить о проблеме пользователю и повторить операцию. Неустранимые ошибки всегда являются симптомами ошибок, например, попытка получить доступ к местоположению за пределами конца массива.</target>
        </trans-unit>
        <trans-unit id="48061a332738260059547f58be5cc62d50260cf9" translate="yes" xml:space="preserve">
          <source>Rust guarantees to optimize the following types &lt;code&gt;T&lt;/code&gt; such that [&lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;] has the same size as &lt;code&gt;T&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17426c688445460fafbc02d6e3ab0f35fb6f21ba" translate="yes" xml:space="preserve">
          <source>Rust has a helpful method to handle line-by-line iteration of strings, conveniently named &lt;code&gt;lines&lt;/code&gt;, that works as shown in Listing 12-17. Note this won&amp;rsquo;t compile yet.</source>
          <target state="translated">В Rust есть полезный метод для обработки построчной итерации строк с удобными именами &lt;code&gt;lines&lt;/code&gt; , который работает, как показано в листинге 12-17. Обратите внимание, что это еще не компилируется.</target>
        </trans-unit>
        <trans-unit id="1d698a54ce65a1a8a252d0c52823bbef706cfe2a" translate="yes" xml:space="preserve">
          <source>Rust has a number of features that allow you to manage your code&amp;rsquo;s organization, including which details are exposed, which details are private, and what names are in each scope in your programs. These features, sometimes collectively referred to as the &lt;em&gt;module system&lt;/em&gt;, and include:</source>
          <target state="translated">Rust имеет ряд функций, которые позволяют вам управлять организацией вашего кода, включая то, какие детали открываются, какие детали являются частными и какие имена присутствуют в каждой области ваших программ. Эти функции, иногда вместе именуемые &lt;em&gt;модульной системой&lt;/em&gt; , включают:</target>
        </trans-unit>
        <trans-unit id="d0ae5edd5a8810915e1c78a72e4cc1021a8ebd40" translate="yes" xml:space="preserve">
          <source>Rust has a number of features that allow you to manage your code&amp;rsquo;s organization, including which details are exposed, which details are private, and what names are in each scope in your programs. These features, sometimes collectively referred to as the &lt;em&gt;module system&lt;/em&gt;, include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49935161924130a0652e8dffafd8b2c317e5e61b" translate="yes" xml:space="preserve">
          <source>Rust has a special annotation called the &lt;code&gt;Copy&lt;/code&gt; trait that we can place on types like integers that are stored on the stack (we&amp;rsquo;ll talk more about traits in Chapter 10). If a type has the &lt;code&gt;Copy&lt;/code&gt; trait, an older variable is still usable after assignment. Rust won&amp;rsquo;t let us annotate a type with the &lt;code&gt;Copy&lt;/code&gt; trait if the type, or any of its parts, has implemented the &lt;code&gt;Drop&lt;/code&gt; trait. If the type needs something special to happen when the value goes out of scope and we add the &lt;code&gt;Copy&lt;/code&gt; annotation to that type, we&amp;rsquo;ll get a compile-time error. To learn about how to add the &lt;code&gt;Copy&lt;/code&gt; annotation to your type, see &lt;a href=&quot;appendix-03-derivable-traits&quot;&gt;&amp;ldquo;Derivable Traits&amp;rdquo;&lt;/a&gt; in Appendix C.</source>
          <target state="translated">В Rust есть специальная аннотация, называемая типажем &lt;code&gt;Copy&lt;/code&gt; , которую мы можем помещать в такие типы, как целые числа, которые хранятся в стеке (мы поговорим больше о трейтах в главе 10). Если тип имеет свойство &lt;code&gt;Copy&lt;/code&gt; , старая переменная все еще может использоваться после присвоения. Rust не позволит нам аннотировать тип с помощью трейта &lt;code&gt;Copy&lt;/code&gt; , если тип или любая из его частей реализовали &lt;code&gt;Drop&lt;/code&gt; . Если типу нужно что-то особенное, чтобы произойти, когда значение выходит за пределы области видимости, и мы добавляем аннотацию &lt;code&gt;Copy&lt;/code&gt; к этому типу, мы получим ошибку времени компиляции. Чтобы узнать, как добавить аннотацию &lt;code&gt;Copy&lt;/code&gt; к вашему типу, см. &lt;a href=&quot;appendix-03-derivable-traits&quot;&gt;&amp;laquo;Производные черты&amp;raquo;&lt;/a&gt; в Приложении C.</target>
        </trans-unit>
        <trans-unit id="eb74ed2b9f402bf372b86ede78b5b956776b5eac" translate="yes" xml:space="preserve">
          <source>Rust has a special type named &lt;code&gt;!&lt;/code&gt; that&amp;rsquo;s known in type theory lingo as the &lt;em&gt;empty type&lt;/em&gt; because it has no values. We prefer to call it the &lt;em&gt;never type&lt;/em&gt; because it stands in the place of the return type when a function will never return. Here is an example:</source>
          <target state="translated">У Rust есть специальный тип с именем &lt;code&gt;!&lt;/code&gt; который на жаргоне теории типов известен как &lt;em&gt;пустой тип,&lt;/em&gt; потому что он не имеет значений. Мы предпочитаем называть его &lt;em&gt;типом never,&lt;/em&gt; потому что он стоит на месте типа возврата, когда функция никогда не вернется. Вот пример:</target>
        </trans-unit>
        <trans-unit id="706acaa256465c2dcf2f521cfbdce1b8adb60b94" translate="yes" xml:space="preserve">
          <source>Rust has a well-defined &lt;a href=&quot;../../reference/destructors&quot;&gt;drop order&lt;/a&gt; of values. To make sure that fields or locals are dropped in a specific order, reorder the declarations such that the implicit drop order is the correct one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20f831507fc3015fa4b5f62f8ae95078cffc507" translate="yes" xml:space="preserve">
          <source>Rust has an extremely powerful control flow operator called &lt;code&gt;match&lt;/code&gt; that allows you to compare a value against a series of patterns and then execute code based on which pattern matches. Patterns can be made up of literal values, variable names, wildcards, and many other things; Chapter 18 covers all the different kinds of patterns and what they do. The power of &lt;code&gt;match&lt;/code&gt; comes from the expressiveness of the patterns and the fact that the compiler confirms that all possible cases are handled.</source>
          <target state="translated">В Rust есть чрезвычайно мощный оператор потока управления, называемый &lt;code&gt;match&lt;/code&gt; , который позволяет вам сравнивать значение с серией шаблонов, а затем выполнять код в зависимости от того, какой шаблон соответствует. Шаблоны могут состоять из буквальных значений, имен переменных, подстановочных знаков и многого другого; В главе 18 описаны все виды шаблонов и их назначение. Сила &lt;code&gt;match&lt;/code&gt; проистекает из выразительности шаблонов и того факта, что компилятор подтверждает, что все возможные случаи обработаны.</target>
        </trans-unit>
        <trans-unit id="274075ef85f35df55435242c1d906ad5d8960c88" translate="yes" xml:space="preserve">
          <source>Rust has provided a number of traits for us to use with the &lt;code&gt;derive&lt;/code&gt; annotation that can add useful behavior to our custom types. Those traits and their behaviors are listed in Appendix C. We&amp;rsquo;ll cover how to implement these traits with custom behavior as well as how to create your own traits in Chapter 10.</source>
          <target state="translated">Rust предоставил нам ряд свойств для использования с аннотацией &lt;code&gt;derive&lt;/code&gt; , которые могут добавить полезное поведение нашим пользовательским типам. Эти черты и их поведение перечислены в Приложении C. Мы расскажем, как реализовать эти черты с помощью настраиваемого поведения, а также как создать свои собственные черты в главе 10.</target>
        </trans-unit>
        <trans-unit id="9abfc06989ca660b27a8bdfcf34e581735c33394" translate="yes" xml:space="preserve">
          <source>Rust has rules that allow lifetimes to be elided in various places where the compiler can infer a sensible default choice.</source>
          <target state="translated">В Rust есть правила,по которым жизнь может быть исключена в различных местах,где компилятор может сделать разумный выбор по умолчанию.</target>
        </trans-unit>
        <trans-unit id="f8345bc804bda40bffec95786aae64fa77a56f07" translate="yes" xml:space="preserve">
          <source>Rust has three kinds of loops: &lt;code&gt;loop&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, and &lt;code&gt;for&lt;/code&gt;. Let&amp;rsquo;s try each one.</source>
          <target state="translated">В Rust есть три типа циклов: &lt;code&gt;loop&lt;/code&gt; , &lt;code&gt;while&lt;/code&gt; и &lt;code&gt;for&lt;/code&gt; . Попробуем каждую.</target>
        </trans-unit>
        <trans-unit id="69ac847beaa0b2c5daa7fb301847708a789caa24" translate="yes" xml:space="preserve">
          <source>Rust has two kinds of statement: &lt;a href=&quot;#declaration-statements&quot;&gt;declaration statements&lt;/a&gt; and &lt;a href=&quot;#expression-statements&quot;&gt;expression statements&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4b07d2a6fb6a7fe95444fa2c7afda8086fcf0c" translate="yes" xml:space="preserve">
          <source>Rust has two kinds of statement: &lt;a href=&quot;statements#declaration-statements&quot;&gt;declaration statements&lt;/a&gt; and &lt;a href=&quot;statements#expression-statements&quot;&gt;expression statements&lt;/a&gt;.</source>
          <target state="translated">Ржавчина имеет два вида заявления: &lt;a href=&quot;statements#declaration-statements&quot;&gt;заявления декларации&lt;/a&gt; и &lt;a href=&quot;statements#expression-statements&quot;&gt;заявление выражения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="005babc4bad22226436a0f4a1424db5097b9ced6" translate="yes" xml:space="preserve">
          <source>Rust has two ways to reference an element so you can choose how the program behaves when you try to use an index value that the vector doesn&amp;rsquo;t have an element for. As an example, let&amp;rsquo;s see what a program will do if it has a vector that holds five elements and then tries to access an element at index 100, as shown in Listing 8-6.</source>
          <target state="translated">В Rust есть два способа ссылаться на элемент, поэтому вы можете выбрать, как будет вести себя программа, когда вы попытаетесь использовать значение индекса, для которого в векторе нет элемента. В качестве примера давайте посмотрим, что будет делать программа, если у нее есть вектор, содержащий пять элементов, а затем он пытается получить доступ к элементу с индексом 100, как показано в листинге 8-6.</target>
        </trans-unit>
        <trans-unit id="8024edbf38de66c89e3d81c184c687bc31f1dd00" translate="yes" xml:space="preserve">
          <source>Rust input is interpreted as a sequence of Unicode code points encoded in UTF-8.</source>
          <target state="translated">Входной сигнал ржавчины интерпретируется как последовательность точек кода Юникода,закодированная в кодировке UTF-8.</target>
        </trans-unit>
        <trans-unit id="c8cbae13f648a692e7452cc98631131e1d6323f2" translate="yes" xml:space="preserve">
          <source>Rust instead uses generics to abstract over different possible types and trait bounds to impose constraints on what those types must provide. This is sometimes called &lt;em&gt;bounded parametric polymorphism&lt;/em&gt;.</source>
          <target state="translated">Вместо этого Rust использует обобщения, чтобы абстрагироваться от различных возможных типов и границ признаков, чтобы наложить ограничения на то, что эти типы должны предоставлять. Иногда это называют &lt;em&gt;ограниченным параметрическим полиморфизмом&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b1053cabf6d03bc378398388561e05d76d497e05" translate="yes" xml:space="preserve">
          <source>Rust is &lt;em&gt;primarily&lt;/em&gt; an expression language. This means that most forms of value-producing or effect-causing evaluation are directed by the uniform syntax category of &lt;em&gt;expressions&lt;/em&gt;. Each kind of expression can typically &lt;em&gt;nest&lt;/em&gt; within each other kind of expression, and rules for evaluation of expressions involve specifying both the value produced by the expression and the order in which its sub-expressions are themselves evaluated.</source>
          <target state="translated">Rust - это &lt;em&gt;прежде всего&lt;/em&gt; язык выражения. Это означает, что большинство форм оценки, производящей ценность или вызывающей эффект, управляются единообразной синтаксической категорией &lt;em&gt;выражений&lt;/em&gt; . Каждый вид выражения обычно может быть &lt;em&gt;вложен&lt;/em&gt; в каждый другой вид выражения, и правила оценки выражений включают указание как значения, производимого выражением, так и порядка, в котором оцениваются его подвыражения.</target>
        </trans-unit>
        <trans-unit id="5db5878515e4389bbf8421d74fcb5d667d66d9ab" translate="yes" xml:space="preserve">
          <source>Rust is a &quot;free-form&quot; language, meaning that all forms of whitespace serve only to separate &lt;em&gt;tokens&lt;/em&gt; in the grammar, and have no semantic significance.</source>
          <target state="translated">Rust - это язык &amp;laquo;свободной формы&amp;raquo;, что означает, что все формы пробелов служат только для разделения &lt;em&gt;лексем&lt;/em&gt; в грамматике и не имеют семантического значения.</target>
        </trans-unit>
        <trans-unit id="3cea4d3df9c4c79e41064c918cdf547361978c7e" translate="yes" xml:space="preserve">
          <source>Rust is for people who crave speed and stability in a language. By speed, we mean the speed of the programs that you can create with Rust and the speed at which Rust lets you write them. The Rust compiler&amp;rsquo;s checks ensure stability through feature additions and refactoring. This is in contrast to the brittle legacy code in languages without these checks, which developers are often afraid to modify. By striving for zero-cost abstractions, higher-level features that compile to lower-level code as fast as code written manually, Rust endeavors to make safe code be fast code as well.</source>
          <target state="translated">Rust предназначен для людей, которые жаждут скорости и стабильности в языке. Под скоростью мы подразумеваем скорость программ, которые вы можете создавать с помощью Rust, и скорость, с которой Rust позволяет вам их писать. Проверки компилятора Rust обеспечивают стабильность за счет добавления функций и рефакторинга. Это контрастирует с хрупким устаревшим кодом на языках без этих проверок, которые разработчики часто боятся изменять. Стремясь к абстракциям с нулевой стоимостью, функциям более высокого уровня, которые компилируются в код более низкого уровня так же быстро, как код, написанный вручную, Rust также стремится сделать безопасный код быстрым кодом.</target>
        </trans-unit>
        <trans-unit id="7bf10b5f2d62512e2d305590c2208014f45470d4" translate="yes" xml:space="preserve">
          <source>Rust is for people who want to build the Rust programming language, community, developer tools, and libraries. We&amp;rsquo;d love to have you contribute to the Rust language.</source>
          <target state="translated">Rust предназначен для людей, которые хотят создавать язык программирования Rust, сообщество, инструменты разработчика и библиотеки. Мы будем рады, если вы внесете свой вклад в язык Rust.</target>
        </trans-unit>
        <trans-unit id="2dd06888c30776a4c25d59c7d1262374011d3d0b" translate="yes" xml:space="preserve">
          <source>Rust is for students and those who are interested in learning about systems concepts. Using Rust, many people have learned about topics like operating systems development. The community is very welcoming and happy to answer student questions. Through efforts such as this book, the Rust teams want to make systems concepts more accessible to more people, especially those new to programming.</source>
          <target state="translated">Ржавчина для студентов и тех,кто интересуется изучением концепций систем.Используя Rust,многие люди узнали о таких темах,как разработка операционных систем.Сообщество очень гостеприимно и радостно отвечает на вопросы студентов.С помощью таких усилий,как эта книга,команды ржавчины хотят сделать концепции систем более доступными для большего количества людей,особенно тех,кто только начинает программировать.</target>
        </trans-unit>
        <trans-unit id="fe5a0dfe919ae890cb83e73c25365cbc5b82b5b4" translate="yes" xml:space="preserve">
          <source>Rust is ideal for many people for a variety of reasons. Let&amp;rsquo;s look at a few of the most important groups.</source>
          <target state="translated">Rust идеален для многих по разным причинам. Давайте посмотрим на несколько наиболее важных групп.</target>
        </trans-unit>
        <trans-unit id="42421e785d37bc9b73d820b74a50d1fba537bea2" translate="yes" xml:space="preserve">
          <source>Rust is not a particularly original language, with design elements coming from a wide range of sources. Some of these are listed below (including elements that have since been removed):</source>
          <target state="translated">Ржавчина не является особенно оригинальным языком,элементы дизайна исходят из широкого круга источников.Некоторые из них перечислены ниже (включая элементы,которые с тех пор были удалены):</target>
        </trans-unit>
        <trans-unit id="b44eb4eed4591a2484384d8f13e00b4678784a52" translate="yes" xml:space="preserve">
          <source>Rust is proving to be a productive tool for collaborating among large teams of developers with varying levels of systems programming knowledge. Low-level code is prone to a variety of subtle bugs, which in most other languages can be caught only through extensive testing and careful code review by experienced developers. In Rust, the compiler plays a gatekeeper role by refusing to compile code with these elusive bugs, including concurrency bugs. By working alongside the compiler, the team can spend their time focusing on the program&amp;rsquo;s logic rather than chasing down bugs.</source>
          <target state="translated">Rust оказался продуктивным инструментом для совместной работы больших команд разработчиков с разным уровнем знаний системного программирования. Низкоуровневый код подвержен множеству тонких ошибок, которые на большинстве других языков могут быть обнаружены только путем тщательного тестирования и тщательной проверки кода опытными разработчиками. В Rust компилятор играет роль привратника, отказываясь компилировать код с этими неуловимыми ошибками, включая ошибки параллелизма. Работая вместе с компилятором, команда может тратить свое время на логику программы, а не на поиск ошибок.</target>
        </trans-unit>
        <trans-unit id="e7fcfa2c0e9d01cf1bef3a319720c713bacd4522" translate="yes" xml:space="preserve">
          <source>Rust is still a work in progress with places where the compiler could be improved, but in the future, the code in Listing 20-20 should work just fine. People just like you are working to fix this and other issues! After you&amp;rsquo;ve finished this book, we would love for you to join in.</source>
          <target state="translated">Rust все еще находится в стадии разработки с местами, где компилятор может быть улучшен, но в будущем код в листинге 20-20 должен работать нормально. Такие же люди, как и вы, работают над исправлением этой и других проблем! После того, как вы прочитаете эту книгу, мы будем рады, если вы присоединитесь к нам.</target>
        </trans-unit>
        <trans-unit id="414ef5b7fed42f865260a7cd152d3f2a763ca163" translate="yes" xml:space="preserve">
          <source>Rust itself does not have a Python-like equivalent of named parameters to a function, but the &lt;a href=&quot;../macro.format&quot;&gt;&lt;code&gt;format!&lt;/code&gt;&lt;/a&gt; macro is a syntax extension that allows it to leverage named parameters. Named parameters are listed at the end of the argument list and have the syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009bd344314f5929e591a576862f0addd792ad2d" translate="yes" xml:space="preserve">
          <source>Rust itself does not have a Python-like equivalent of named parameters to a function, but the &lt;a href=&quot;../macro.format&quot;&gt;&lt;code&gt;format!&lt;/code&gt;&lt;/a&gt; macro is a syntax extension which allows it to leverage named parameters. Named parameters are listed at the end of the argument list and have the syntax:</source>
          <target state="translated">Сам Rust не имеет Python-подобного эквивалента именованных параметров функции, но &lt;a href=&quot;../macro.format&quot;&gt; &lt;code&gt;format!&lt;/code&gt; &lt;/a&gt;макрос - это расширение синтаксиса, которое позволяет использовать именованные параметры. Именованные параметры перечислены в конце списка аргументов и имеют синтаксис:</target>
        </trans-unit>
        <trans-unit id="2f45412f8a16ab817b5f0812176d720466554450" translate="yes" xml:space="preserve">
          <source>Rust itself has no notion of immovable types, and considers moves (e.g., through assignment or &lt;a href=&quot;../mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt;) to always be safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf73204b9a4eab7a093c6de5aa1aad6f2361e93a" translate="yes" xml:space="preserve">
          <source>Rust knows that we didn&amp;rsquo;t cover every possible case and even knows which pattern we forgot! Matches in Rust are &lt;em&gt;exhaustive&lt;/em&gt;: we must exhaust every last possibility in order for the code to be valid. Especially in the case of &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;, when Rust prevents us from forgetting to explicitly handle the &lt;code&gt;None&lt;/code&gt; case, it protects us from assuming that we have a value when we might have null, thus making the billion-dollar mistake discussed earlier impossible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5773a78f91f6dd61a894f54aca9217a3e2589f2c" translate="yes" xml:space="preserve">
          <source>Rust knows that we didn&amp;rsquo;t cover every possible case and even knows which pattern we forgot! Matches in Rust are &lt;em&gt;exhaustive&lt;/em&gt;: we must exhaust every last possibility in order for the code to be valid. Especially in the case of &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;, when Rust prevents us from forgetting to explicitly handle the &lt;code&gt;None&lt;/code&gt; case, it protects us from assuming that we have a value when we might have null, thus making the billion-dollar mistake discussed earlier.</source>
          <target state="translated">Rust знает, что мы не рассмотрели все возможные случаи, и даже знает, какой шаблон мы забыли! Совпадения в Rust &lt;em&gt;исчерпывающие&lt;/em&gt; : мы должны исчерпать все возможности, чтобы код был действительным. Особенно в случае &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; , когда Rust не дает нам забыть явно обработать случай &lt;code&gt;None&lt;/code&gt; , он защищает нас от предположения, что у нас есть значение, хотя мы могли бы иметь значение NULL, что приводит к ошибке в миллиард долларов, о которой говорилось ранее.</target>
        </trans-unit>
        <trans-unit id="6037ceeea4fb74411f6b08d6b6645ce5f8d0bdce" translate="yes" xml:space="preserve">
          <source>Rust lets you organize your packages into crates and your crates into modules so you can refer to items defined in one module from another module. You can do this by specifying absolute or relative paths. These paths can be brought into scope with a &lt;code&gt;use&lt;/code&gt; statement so you can use a shorter path for multiple uses of the item in that scope. Module code is private by default, but you can make definitions public by adding the &lt;code&gt;pub&lt;/code&gt; keyword.</source>
          <target state="translated">Rust позволяет вам организовывать ваши пакеты в ящики, а ваши ящики - в модули, чтобы вы могли ссылаться на элементы, определенные в одном модуле, из другого модуля. Вы можете сделать это, указав абсолютные или относительные пути. Эти пути можно включить в область действия с &lt;code&gt;use&lt;/code&gt; оператора use, чтобы можно было использовать более короткий путь для многократного использования элемента в этой области. Код модуля по умолчанию является частным, но вы можете сделать определения общедоступными, добавив ключевое слово &lt;code&gt;pub&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a48891d4f88805e4179ad3fd74a5e413f7ca1c9b" translate="yes" xml:space="preserve">
          <source>Rust lets you split a package into multiple crates and a crate into modules so you can refer to items defined in one module from another module. You can do this by specifying absolute or relative paths. These paths can be brought into scope with a &lt;code&gt;use&lt;/code&gt; statement so you can use a shorter path for multiple uses of the item in that scope. Module code is private by default, but you can make definitions public by adding the &lt;code&gt;pub&lt;/code&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3bfbc1a861d0c5db39d3370b938cda066a42dac" translate="yes" xml:space="preserve">
          <source>Rust memory safety is based on this rule: Given an object &lt;code&gt;T&lt;/code&gt;, it is only possible to have one of the following:</source>
          <target state="translated">Безопасность памяти в Rust основана на следующем правиле: для объекта &lt;code&gt;T&lt;/code&gt; возможно только одно из следующего:</target>
        </trans-unit>
        <trans-unit id="86b4aec68c04f34ea15c657bcbc637e9391e2aab" translate="yes" xml:space="preserve">
          <source>Rust needs to know how much memory to allocate for any value of a particular type, and all values of a type must use the same amount of memory. If Rust allowed us to write this code, these two &lt;code&gt;str&lt;/code&gt; values would need to take up the same amount of space. But they have different lengths: &lt;code&gt;s1&lt;/code&gt; needs 12 bytes of storage and &lt;code&gt;s2&lt;/code&gt; needs 15. This is why it&amp;rsquo;s not possible to create a variable holding a dynamically sized type.</source>
          <target state="translated">Rust должен знать, сколько памяти выделить для любого значения определенного типа, и все значения типа должны использовать один и тот же объем памяти. Если бы Rust позволил нам написать этот код, эти два значения &lt;code&gt;str&lt;/code&gt; должны были бы занимать одинаковое количество места. Но они имеют разную длину: &lt;code&gt;s1&lt;/code&gt; требуется 12 байт памяти, а &lt;code&gt;s2&lt;/code&gt; - 15. Вот почему невозможно создать переменную, содержащую тип с динамическим размером.</target>
        </trans-unit>
        <trans-unit id="1b76d3101d775a50daedde876a1dc0606265c7b7" translate="yes" xml:space="preserve">
          <source>Rust needs to know what types will be in the vector at compile time so it knows exactly how much memory on the heap will be needed to store each element. A secondary advantage is that we can be explicit about what types are allowed in this vector. If Rust allowed a vector to hold any type, there would be a chance that one or more of the types would cause errors with the operations performed on the elements of the vector. Using an enum plus a &lt;code&gt;match&lt;/code&gt; expression means that Rust will ensure at compile time that every possible case is handled, as discussed in Chapter 6.</source>
          <target state="translated">Rust должен знать, какие типы будут в векторе во время компиляции, чтобы он точно знал, сколько памяти в куче потребуется для хранения каждого элемента. Второстепенное преимущество состоит в том, что мы можем четко указать, какие типы разрешены в этом векторе. Если бы Rust позволял вектору содержать любой тип, была бы вероятность, что один или несколько типов вызовут ошибки при операциях, выполняемых над элементами вектора. Используя перечисление плюс &lt;code&gt;match&lt;/code&gt; выражение означает , что ржавчина будет обеспечивать во время компиляции , что каждый возможный случай обрабатывается, как описано в главе 6.</target>
        </trans-unit>
        <trans-unit id="2c1cfd45b3ac0b28a948d8b4a2f4de2f8d870925" translate="yes" xml:space="preserve">
          <source>Rust only looks at the signature of the called function, as such it must already specify all requirements that will be used for every type parameter.</source>
          <target state="translated">Rust смотрит только на сигнатуру вызываемой функции,поэтому она уже должна указать все требования,которые будут использоваться для каждого типа параметра.</target>
        </trans-unit>
        <trans-unit id="1ed887a173c68a2fae7555ba7b47d26cdae56e96" translate="yes" xml:space="preserve">
          <source>Rust only supports variadic parameters for interoperability with C code in its FFI. As such, variadic parameters can only be used with functions which are using the C ABI. Examples of erroneous code:</source>
          <target state="translated">Rust поддерживает только вариадические параметры для интероперабельности с C-кодом в своем FFI.Таким образом,вариадические параметры могут использоваться только с функциями,использующими C ABI.Примеры ошибочного кода:</target>
        </trans-unit>
        <trans-unit id="8006f3ad63420cf97d2756a811368615cb17cc79" translate="yes" xml:space="preserve">
          <source>Rust only supports variadic parameters for interoperability with C code in its FFI. As such, variadic parameters can only be used with functions which are using the C ABI. To fix such code, put them in an extern &quot;C&quot; block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d6720314fd90db94a4f0505ed35c899b634d9a" translate="yes" xml:space="preserve">
          <source>Rust provides different ways of interpreting the raw string data that computers store so that each program can choose the interpretation it needs, no matter what human language the data is in.</source>
          <target state="translated">Rust предоставляет различные способы интерпретации необработанных строковых данных,которые хранятся на компьютерах,так что каждая программа может выбрать интерпретацию,которая ей нужна,независимо от того,на каком человеческом языке находятся данные.</target>
        </trans-unit>
        <trans-unit id="1a9d1ac483b5a0d5a30d4a6b20b099a21ce7d1ed" translate="yes" xml:space="preserve">
          <source>Rust releases every six weeks, like clockwork. If you know the date of one Rust release, you can know the date of the next one: it&amp;rsquo;s six weeks later. A nice aspect of having releases scheduled every six weeks is that the next train is coming soon. If a feature happens to miss a particular release, there&amp;rsquo;s no need to worry: another one is happening in a short time! This helps reduce pressure to sneak possibly unpolished features in close to the release deadline.</source>
          <target state="translated">Rust выходит каждые шесть недель, как часы. Если вы знаете дату одного релиза Rust, вы можете знать дату следующего: это на шесть недель позже. Приятным аспектом того, что выпуски выпускаются каждые шесть недель, является то, что скоро прибудет следующий поезд. Если какая-то функция упускает конкретный выпуск, не о чем беспокоиться: скоро появится еще один! Это помогает снизить давление, чтобы скрыть возможно неотшлифованные функции ближе к крайнему сроку выпуска.</target>
        </trans-unit>
        <trans-unit id="14633826285dcf815682cf46efd1f87adcad6f15" translate="yes" xml:space="preserve">
          <source>Rust represents owned strings with the &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; type, and borrowed slices of strings with the &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; primitive. Both are always in UTF-8 encoding, and may contain nul bytes in the middle, i.e., if you look at the bytes that make up the string, there may be a &lt;code&gt;\0&lt;/code&gt; among them. Both &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;str&lt;/code&gt; store their length explicitly; there are no nul terminators at the end of strings like in C.</source>
          <target state="translated">Rust представляет собственные строки с типом &lt;a href=&quot;../string/struct.string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , а заимствованные фрагменты строк с примитивом &lt;a href=&quot;../primitive.str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; . Оба всегда находятся в кодировке UTF-8 и могут содержать нулевые байты посередине, то есть, если вы посмотрите на байты, составляющие строку, среди них может быть &lt;code&gt;\0&lt;/code&gt; . И &lt;code&gt;String&lt;/code&gt; , и &lt;code&gt;str&lt;/code&gt; явно сохраняют свою длину; в конце строк нет нулевых терминаторов, как в C.</target>
        </trans-unit>
        <trans-unit id="b115ba9be271d9cb748571eff2d355ec3f4582c1" translate="yes" xml:space="preserve">
          <source>Rust represents owned strings with the &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; type, and borrowed slices of strings with the &lt;a href=&quot;https://doc.rust-lang.org/nightly/std/primitive.str.html&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; primitive. Both are always in UTF-8 encoding, and may contain nul bytes in the middle, i.e., if you look at the bytes that make up the string, there may be a &lt;code&gt;\0&lt;/code&gt; among them. Both &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;str&lt;/code&gt; store their length explicitly; there are no nul terminators at the end of strings like in C.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1035dbea9907a4eef978b13fc5c640f49f6ff75" translate="yes" xml:space="preserve">
          <source>Rust substitutes the &lt;code&gt;*&lt;/code&gt; operator with a call to the &lt;code&gt;deref&lt;/code&gt; method and then a plain dereference so we don&amp;rsquo;t have to think about whether or not we need to call the &lt;code&gt;deref&lt;/code&gt; method. This Rust feature lets us write code that functions identically whether we have a regular reference or a type that implements &lt;code&gt;Deref&lt;/code&gt;.</source>
          <target state="translated">Rust заменяет оператор &lt;code&gt;*&lt;/code&gt; &lt;code&gt;deref&lt;/code&gt; метода deref, а затем простым разыменованием, поэтому нам не нужно думать о том, нужно ли нам вызывать метод &lt;code&gt;deref&lt;/code&gt; . Эта функция Rust позволяет нам писать код, который работает одинаково независимо от того, есть ли у нас обычная ссылка или тип, реализующий &lt;code&gt;Deref&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aef02265ae4e5b20b25f7169f2eb182b32c41901" translate="yes" xml:space="preserve">
          <source>Rust supports four loop expressions:</source>
          <target state="translated">Rust поддерживает четыре циклических выражения:</target>
        </trans-unit>
        <trans-unit id="39846c5622487afb1918e636190776d3ba8814ed" translate="yes" xml:space="preserve">
          <source>Rust supports the basic mathematical operations you&amp;rsquo;d expect for all of the number types: addition, subtraction, multiplication, division, and remainder. The following code shows how you&amp;rsquo;d use each one in a &lt;code&gt;let&lt;/code&gt; statement:</source>
          <target state="translated">Rust поддерживает основные математические операции, которые вы ожидаете от всех типов чисел: сложение, вычитание, умножение, деление и остаток. В следующем коде показано, как использовать каждый из них в инструкции &lt;code&gt;let&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f198f3079c114496b224a182d1c6f07406996d50" translate="yes" xml:space="preserve">
          <source>Rust takes a different path: the memory is automatically returned once the variable that owns it goes out of scope. Here&amp;rsquo;s a version of our scope example from Listing 4-1 using a &lt;code&gt;String&lt;/code&gt; instead of a string literal:</source>
          <target state="translated">Rust идет другим путем: память автоматически возвращается, когда принадлежащая ей переменная выходит за пределы области видимости. Вот версия нашего примера с областью видимости из Листинга 4-1 с использованием &lt;code&gt;String&lt;/code&gt; вместо строкового литерала:</target>
        </trans-unit>
        <trans-unit id="995e5bc0763da76eea3b582149feb3d425499836" translate="yes" xml:space="preserve">
          <source>Rust tells us that our code ignored the &lt;code&gt;Result&lt;/code&gt; value and the &lt;code&gt;Result&lt;/code&gt; value might indicate that an error occurred. But we&amp;rsquo;re not checking to see whether or not there was an error, and the compiler reminds us that we probably meant to have some error-handling code here! Let&amp;rsquo;s rectify that problem now.</source>
          <target state="translated">Руст говорит нам , что наш код игнорировал &lt;code&gt;Result&lt;/code&gt; значение и &lt;code&gt;Result&lt;/code&gt; значение может означать , что произошла ошибка. Но мы не проверяем, была ли ошибка, и компилятор напоминает нам, что мы, вероятно, хотели иметь здесь некоторый код обработки ошибок! Давайте исправим эту проблему сейчас.</target>
        </trans-unit>
        <trans-unit id="703d493ad79917201eb0acd3b321d61700389d3a" translate="yes" xml:space="preserve">
          <source>Rust treats all function calls as sugar for a more explicit, &lt;a href=&quot;../paths#qualified-paths&quot;&gt;fully-qualified syntax&lt;/a&gt;. Upon compilation, Rust will desugar all function calls into the explicit form. Rust may sometimes require you to qualify function calls with trait, depending on the ambiguity of a call in light of in-scope items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438b72da10259b8d5d86767186b4d727d3dbea23" translate="yes" xml:space="preserve">
          <source>Rust treats all function calls as sugar for a more explicit, fully-qualified syntax. Upon compilation, Rust will desugar all function calls into the explicit form. Rust may sometimes require you to qualify function calls with trait, depending on the ambiguity of a call in light of in-scope items.</source>
          <target state="translated">Ржавчина относится ко всем вызовам функций как к сахару для более явного,полностью квалифицированного синтаксиса.После компиляции Rust десугарует все вызовы функций в явном виде.Rust иногда может потребовать,чтобы вы квалифицировали вызовы функций с признаками,в зависимости от неоднозначности вызова в свете элементов в области видимости.</target>
        </trans-unit>
        <trans-unit id="d2dc323b3d2c25d779075b9140a6d1e2c6e50939" translate="yes" xml:space="preserve">
          <source>Rust types can be classified in various useful ways according to their intrinsic properties. These classifications are represented as traits.</source>
          <target state="translated">Типы ржавчины можно классифицировать различными полезными способами в соответствии с их внутренними свойствами.Эти классификации представлены в виде признаков.</target>
        </trans-unit>
        <trans-unit id="f77a840183554b84c65d125ee38f75c043f2f8d3" translate="yes" xml:space="preserve">
          <source>Rust uses the WhatWG Infra Standard's &lt;a href=&quot;https://infra.spec.whatwg.org/#ascii-whitespace&quot;&gt;definition of ASCII whitespace&lt;/a&gt;. There are several other definitions in wide use. For instance, &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap07.html#tag_07_03_01&quot;&gt;the POSIX locale&lt;/a&gt; includes U+000B VERTICAL TAB as well as all the above characters, but&amp;mdash;from the very same specification&amp;mdash;&lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_05&quot;&gt;the default rule for &quot;field splitting&quot; in the Bourne shell&lt;/a&gt; considers &lt;em&gt;only&lt;/em&gt; SPACE, HORIZONTAL TAB, and LINE FEED as whitespace.</source>
          <target state="translated">Rust использует &lt;a href=&quot;https://infra.spec.whatwg.org/#ascii-whitespace&quot;&gt;определение пробелов ASCII,&lt;/a&gt; данное WhatWG Infra Standard . Есть несколько других широко используемых определений. Например, &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap07.html#tag_07_03_01&quot;&gt;локаль POSIX&lt;/a&gt; включает ВЕРТИКАЛЬНУЮ ВКЛАДКУ U + 000B, а также все вышеперечисленные символы, но - из той же спецификации &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_05&quot;&gt;- правило по умолчанию для &amp;laquo;разделения полей&amp;raquo; в оболочке Борна&lt;/a&gt; учитывает &lt;em&gt;только&lt;/em&gt; ПРОБЕЛ, ГОРИЗОНТАЛЬНУЮ ТАБЛИЦУ и ПОДАЧУ СТРОКИ как пробел.</target>
        </trans-unit>
        <trans-unit id="80250cb612ec2f012c7bb709a162afa7cc99b219" translate="yes" xml:space="preserve">
          <source>Rust warns that you haven&amp;rsquo;t used the &lt;code&gt;Result&lt;/code&gt; value returned from &lt;code&gt;read_line&lt;/code&gt;, indicating that the program hasn&amp;rsquo;t handled a possible error.</source>
          <target state="translated">Rust предупреждает, что вы не использовали значение &lt;code&gt;Result&lt;/code&gt; , возвращенное из &lt;code&gt;read_line&lt;/code&gt; , указывая, что программа не обработала возможную ошибку.</target>
        </trans-unit>
        <trans-unit id="63dc74fc48d1edb7e36f8812dc661ae955f4d16d" translate="yes" xml:space="preserve">
          <source>Rust will first call &lt;code&gt;Drop::drop&lt;/code&gt; for &lt;code&gt;_x&lt;/code&gt; and then for both &lt;code&gt;_x.one&lt;/code&gt; and &lt;code&gt;_x.two&lt;/code&gt;, meaning that running this will print</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99846f3671ba325d4d0a5778686542964bf3788a" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s &lt;code&gt;char&lt;/code&gt; type is four bytes in size and represents a Unicode Scalar Value, which means it can represent a lot more than just ASCII. Accented letters; Chinese, Japanese, and Korean characters; emoji; and zero-width spaces are all valid &lt;code&gt;char&lt;/code&gt; values in Rust. Unicode Scalar Values range from &lt;code&gt;U+0000&lt;/code&gt; to &lt;code&gt;U+D7FF&lt;/code&gt; and &lt;code&gt;U+E000&lt;/code&gt; to &lt;code&gt;U+10FFFF&lt;/code&gt; inclusive. However, a &amp;ldquo;character&amp;rdquo; isn&amp;rsquo;t really a concept in Unicode, so your human intuition for what a &amp;ldquo;character&amp;rdquo; is may not match up with what a &lt;code&gt;char&lt;/code&gt; is in Rust. We&amp;rsquo;ll discuss this topic in detail in &lt;a href=&quot;ch08-02-strings#storing-utf-8-encoded-text-with-strings&quot;&gt;&amp;ldquo;Storing UTF-8 Encoded Text with Strings&amp;rdquo;&lt;/a&gt; in Chapter 8.</source>
          <target state="translated">Тип &lt;code&gt;char&lt;/code&gt; в Rust имеет размер четыре байта и представляет собой скалярное значение Unicode, что означает, что он может представлять гораздо больше, чем просто ASCII. Бывают буквы; Китайские, японские и корейские иероглифы; смайлики; и пробелы нулевой ширины - все допустимые значения &lt;code&gt;char&lt;/code&gt; в Rust. Скалярные значения Unicode варьируются от &lt;code&gt;U+0000&lt;/code&gt; до &lt;code&gt;U+D7FF&lt;/code&gt; и от &lt;code&gt;U+E000&lt;/code&gt; до &lt;code&gt;U+10FFFF&lt;/code&gt; включительно. Однако &amp;laquo;символ&amp;raquo; на самом деле не является концепцией Unicode, поэтому ваша человеческая интуиция относительно того, что такое &amp;laquo;персонаж&amp;raquo;, может не совпадать с тем, что такое &lt;code&gt;char&lt;/code&gt; в Rust. Мы подробно обсудим эту тему в разделе &lt;a href=&quot;ch08-02-strings#storing-utf-8-encoded-text-with-strings&quot;&gt;&amp;laquo;Сохранение текста&lt;/a&gt; в кодировке UTF-8 со строками&amp;raquo; в главе 8.</target>
        </trans-unit>
        <trans-unit id="a5a4edf491f9a6786fd28bf09333db3dadc399c0" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s borrow checker can&amp;rsquo;t understand that we&amp;rsquo;re borrowing different parts of the slice; it only knows that we&amp;rsquo;re borrowing from the same slice twice. Borrowing different parts of a slice is fundamentally okay because the two slices aren&amp;rsquo;t overlapping, but Rust isn&amp;rsquo;t smart enough to know this. When we know code is okay, but Rust doesn&amp;rsquo;t, it&amp;rsquo;s time to reach for unsafe code.</source>
          <target state="translated">Программа проверки заимствований Rust не может понять, что мы заимствуем разные части среза; он знает только, что мы дважды заимствуем из одного и того же среза. Заимствование разных частей фрагмента в принципе нормально, потому что два фрагмента не перекрываются, но Rust недостаточно умен, чтобы знать об этом. Когда мы знаем, что код в порядке, а Rust - нет, самое время заняться небезопасным кодом.</target>
        </trans-unit>
        <trans-unit id="8c55a2a82b7377101f0771c9bcd044aae6cf6540" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s central feature is &lt;em&gt;ownership&lt;/em&gt;. Although the feature is straightforward to explain, it has deep implications for the rest of the language.</source>
          <target state="translated">Главная особенность Rust - &lt;em&gt;владение&lt;/em&gt; . Хотя эту функцию легко объяснить, она имеет большое значение для остального языка.</target>
        </trans-unit>
        <trans-unit id="5d2271b00baf8fce0728901fd42c87e83d55abd0" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s closures are anonymous functions you can save in a variable or pass as arguments to other functions. You can create the closure in one place and then call the closure to evaluate it in a different context. Unlike functions, closures can capture values from the scope in which they&amp;rsquo;re defined. We&amp;rsquo;ll demonstrate how these closure features allow for code reuse and behavior customization.</source>
          <target state="translated">Замыкания в Rust - это анонимные функции, которые вы можете сохранить в переменной или передать в качестве аргументов другим функциям. Вы можете создать закрытие в одном месте, а затем вызвать закрытие, чтобы оценить его в другом контексте. В отличие от функций, замыкания могут захватывать значения из области, в которой они определены. Мы продемонстрируем, как эти функции закрытия позволяют повторно использовать код и настраивать поведение.</target>
        </trans-unit>
        <trans-unit id="fd4c91ef23d0c1a58d5181596522ff41f1f360e9" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s commitment to reliability extends to error handling. Errors are a fact of life in software, so Rust has a number of features for handling situations in which something goes wrong. In many cases, Rust requires you to acknowledge the possibility of an error and take some action before your code will compile. This requirement makes your program more robust by ensuring that you&amp;rsquo;ll discover errors and handle them appropriately before you&amp;rsquo;ve deployed your code to production!</source>
          <target state="translated">Приверженность Rust надежности распространяется и на обработку ошибок. Ошибки - это реальность в программном обеспечении, поэтому Rust имеет ряд функций для обработки ситуаций, в которых что-то идет не так. Во многих случаях Rust требует, чтобы вы признали возможность ошибки и предприняли некоторые действия, прежде чем ваш код будет компилироваться. Это требование делает вашу программу более надежной, гарантируя, что вы обнаружите ошибки и обработаете их должным образом, прежде чем вы развернете свой код в производственной среде!</target>
        </trans-unit>
        <trans-unit id="50fd346e441893c513c7336bf8c9281fb59b1c1a" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s design has taken inspiration from many existing languages and techniques, and one significant influence is &lt;em&gt;functional programming&lt;/em&gt;. Programming in a functional style often includes using functions as values by passing them in arguments, returning them from other functions, assigning them to variables for later execution, and so forth.</source>
          <target state="translated">Дизайн Rust черпал вдохновение из многих существующих языков и методов, и одним из важных факторов влияния является &lt;em&gt;функциональное программирование&lt;/em&gt; . Программирование в функциональном стиле часто включает использование функций в качестве значений путем передачи их в аргументах, их возврата из других функций, присвоения их переменным для последующего выполнения и т. Д.</target>
        </trans-unit>
        <trans-unit id="4cc35a990ff86bc53c3ee8555d1b3d65805dc72a" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s error handling features are designed to help you write more robust code. The &lt;code&gt;panic!&lt;/code&gt; macro signals that your program is in a state it can&amp;rsquo;t handle and lets you tell the process to stop instead of trying to proceed with invalid or incorrect values. The &lt;code&gt;Result&lt;/code&gt; enum uses Rust&amp;rsquo;s type system to indicate that operations might fail in a way that your code could recover from. You can use &lt;code&gt;Result&lt;/code&gt; to tell code that calls your code that it needs to handle potential success or failure as well. Using &lt;code&gt;panic!&lt;/code&gt; and &lt;code&gt;Result&lt;/code&gt; in the appropriate situations will make your code more reliable in the face of inevitable problems.</source>
          <target state="translated">Функции обработки ошибок Rust разработаны, чтобы помочь вам написать более надежный код. &lt;code&gt;panic!&lt;/code&gt; макрос сигнализирует, что ваша программа находится в состоянии, которое она не может обработать, и позволяет вам остановить процесс вместо того, чтобы пытаться продолжить работу с недопустимыми или неверными значениями. &lt;code&gt;Result&lt;/code&gt; перечисление использует систему типа Руста , чтобы указать , что операции , возможно , не так , чтобы ваш код мог оправиться. Вы можете использовать &lt;code&gt;Result&lt;/code&gt; , чтобы сообщить коду, который вызывает ваш код, что ему также необходимо обрабатывать потенциальный успех или неудачу. Используя &lt;code&gt;panic!&lt;/code&gt; и &lt;code&gt;Result&lt;/code&gt; в соответствующих ситуациях сделает ваш код более надежным в условиях неизбежных проблем.</target>
        </trans-unit>
        <trans-unit id="0978df93a2cae0fac3519f383fbc09538259dfbb" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s memory safety guarantees make it difficult, but not impossible, to accidentally create memory that is never cleaned up (known as a &lt;em&gt;memory leak&lt;/em&gt;). Preventing memory leaks entirely is not one of Rust&amp;rsquo;s guarantees in the same way that disallowing data races at compile time is, meaning memory leaks are memory safe in Rust. We can see that Rust allows memory leaks by using &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;: it&amp;rsquo;s possible to create references where items refer to each other in a cycle. This creates memory leaks because the reference count of each item in the cycle will never reach 0, and the values will never be dropped.</source>
          <target state="translated">Гарантии безопасности памяти Rust затрудняют, но не делают невозможным случайное создание памяти, которая никогда не очищается (известная как &lt;em&gt;утечка памяти&lt;/em&gt; ). Полное предотвращение утечек памяти не является одной из гарантий Rust так же, как запрет гонки данных во время компиляции, что означает, что утечки памяти безопасны для памяти в Rust. Мы видим, что Rust допускает утечку памяти, используя &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; и &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; : можно создавать ссылки, где элементы ссылаются друг на друга в цикле. Это создает утечки памяти, потому что счетчик ссылок каждого элемента в цикле никогда не достигнет 0, и значения никогда не будут сброшены.</target>
        </trans-unit>
        <trans-unit id="c83ae6d5141700914f4870b9a16bff718d75b311" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s ownership rules have saved us again! We got an error from the code in Listing 16-3 because Rust was being conservative and only borrowing &lt;code&gt;v&lt;/code&gt; for the thread, which meant the main thread could theoretically invalidate the spawned thread&amp;rsquo;s reference. By telling Rust to move ownership of &lt;code&gt;v&lt;/code&gt; to the spawned thread, we&amp;rsquo;re guaranteeing Rust that the main thread won&amp;rsquo;t use &lt;code&gt;v&lt;/code&gt; anymore. If we change Listing 16-4 in the same way, we&amp;rsquo;re then violating the ownership rules when we try to use &lt;code&gt;v&lt;/code&gt; in the main thread. The &lt;code&gt;move&lt;/code&gt; keyword overrides Rust&amp;rsquo;s conservative default of borrowing; it doesn&amp;rsquo;t let us violate the ownership rules.</source>
          <target state="translated">Правила владения Rust снова спасли нас! Мы получили ошибку из кода в листинге 16-3, потому что Rust был консервативным и заимствовал только &lt;code&gt;v&lt;/code&gt; для потока, что означало, что основной поток теоретически может аннулировать ссылку на порожденный поток. Сообщая Rust передать владение &lt;code&gt;v&lt;/code&gt; порожденному потоку, мы гарантируем Rust, что основной поток больше не будет использовать &lt;code&gt;v&lt;/code&gt; . Если мы изменим листинг 16-4 таким же образом, мы нарушим правила владения, когда попытаемся использовать &lt;code&gt;v&lt;/code&gt; в основном потоке. &lt;code&gt;move&lt;/code&gt; ключевого слово переопределяет Руст консервативны по умолчанию заимствования; это не позволяет нам нарушать правила владения.</target>
        </trans-unit>
        <trans-unit id="acb5b5af69714850a9eaace832e90521d0ab51b4" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s patterns are very useful in that they help distinguish between different kinds of data. When used in &lt;code&gt;match&lt;/code&gt; expressions, Rust ensures your patterns cover every possible value, or your program won&amp;rsquo;t compile. Patterns in &lt;code&gt;let&lt;/code&gt; statements and function parameters make those constructs more useful, enabling the destructuring of values into smaller parts at the same time as assigning to variables. We can create simple or complex patterns to suit our needs.</source>
          <target state="translated">Паттерны Rust очень полезны тем, что помогают различать разные типы данных. При использовании в &lt;code&gt;match&lt;/code&gt; выражениях, Rust гарантирует , что ваши модели покрывают все возможные значения, или ваша программа не будет компилироваться. Шаблоны в операторах &lt;code&gt;let&lt;/code&gt; и параметрах функций делают эти конструкции более полезными, позволяя деструктурировать значения на более мелкие части одновременно с присвоением переменных. Мы можем создавать простые или сложные шаблоны в соответствии с нашими потребностями.</target>
        </trans-unit>
        <trans-unit id="dce982e836868a2e5286452911eb980f53708aba" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s speed, safety, single binary output, and cross-platform support make it an ideal language for creating command line tools, so for our project, we&amp;rsquo;ll make our own version of the classic command line tool &lt;code&gt;grep&lt;/code&gt; (&lt;strong&gt;g&lt;/strong&gt;lobally search a &lt;strong&gt;r&lt;/strong&gt;egular &lt;strong&gt;e&lt;/strong&gt;xpression and &lt;strong&gt;p&lt;/strong&gt;rint). In the simplest use case, &lt;code&gt;grep&lt;/code&gt; searches a specified file for a specified string. To do so, &lt;code&gt;grep&lt;/code&gt; takes as its arguments a filename and a string. Then it reads the file, finds lines in that file that contain the string argument, and prints those lines.</source>
          <target state="translated">Скорость, безопасность, единый двоичный вывод и кроссплатформенная поддержка Rust делают его идеальным языком для создания инструментов командной строки, поэтому для нашего проекта мы создадим нашу собственную версию классического инструмента командной строки &lt;code&gt;grep&lt;/code&gt; ( &lt;strong&gt;g&lt;/strong&gt; lobally search a &lt;strong&gt;r&lt;/strong&gt; Регулярные &lt;strong&gt;й&lt;/strong&gt; Xpression и &lt;strong&gt;р&lt;/strong&gt; ечать). В простейшем случае &lt;code&gt;grep&lt;/code&gt; ищет в указанном файле указанную строку. Для этого &lt;code&gt;grep&lt;/code&gt; принимает в качестве аргументов имя файла и строку. Затем он читает файл, находит в нем строки, содержащие строковый аргумент, и печатает эти строки.</target>
        </trans-unit>
        <trans-unit id="c6ca1c192ffb4864e88d3222cca77235e6772b0f" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s standard library also includes a number of other string types, such as &lt;code&gt;OsString&lt;/code&gt;, &lt;code&gt;OsStr&lt;/code&gt;, &lt;code&gt;CString&lt;/code&gt;, and &lt;code&gt;CStr&lt;/code&gt;. Library crates can provide even more options for storing string data. See how those names all end in &lt;code&gt;String&lt;/code&gt; or &lt;code&gt;Str&lt;/code&gt;? They refer to owned and borrowed variants, just like the &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;str&lt;/code&gt; types you&amp;rsquo;ve seen previously. These string types can store text in different encodings or be represented in memory in a different way, for example. We won&amp;rsquo;t discuss these other string types in this chapter; see their API documentation for more about how to use them and when each is appropriate.</source>
          <target state="translated">Стандартная библиотека Rust также включает ряд других типов строк, таких как &lt;code&gt;OsString&lt;/code&gt; , &lt;code&gt;OsStr&lt;/code&gt; , &lt;code&gt;CString&lt;/code&gt; и &lt;code&gt;CStr&lt;/code&gt; . Крейты библиотек могут предоставить еще больше возможностей для хранения строковых данных. Видите, как все эти имена заканчиваются на &lt;code&gt;String&lt;/code&gt; или &lt;code&gt;Str&lt;/code&gt; ? Они относятся к собственным и заимствованным вариантам, точно так же, как типы &lt;code&gt;String&lt;/code&gt; и &lt;code&gt;str&lt;/code&gt; , которые вы видели ранее. Эти строковые типы могут хранить текст в разных кодировках или, например, по-другому представляться в памяти. Мы не будем обсуждать эти другие типы строк в этой главе; см. документацию по их API, чтобы узнать, как их использовать и когда каждый из них подходит.</target>
        </trans-unit>
        <trans-unit id="aa9ff7a849c1640cd4cc865fda33cc9c81cac848" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s standard library includes a number of very useful data structures called &lt;em&gt;collections&lt;/em&gt;. Most other data types represent one specific value, but collections can contain multiple values. Unlike the built-in array and tuple types, the data these collections point to is stored on the heap, which means the amount of data does not need to be known at compile time and can grow or shrink as the program runs. Each kind of collection has different capabilities and costs, and choosing an appropriate one for your current situation is a skill you&amp;rsquo;ll develop over time. In this chapter, we&amp;rsquo;ll discuss three collections that are used very often in Rust programs:</source>
          <target state="translated">Стандартная библиотека Rust включает в себя ряд очень полезных структур данных, называемых &lt;em&gt;коллекциями&lt;/em&gt; . Большинство других типов данных представляют одно конкретное значение, но коллекции могут содержать несколько значений. В отличие от встроенных типов массивов и кортежей, данные, на которые указывают эти коллекции, хранятся в куче, что означает, что объем данных не должен быть известен во время компиляции и может увеличиваться или уменьшаться по мере выполнения программы. Каждый вид коллекции имеет разные возможности и стоимость, и выбор подходящего для вашей текущей ситуации навыка, который вы будете развивать со временем. В этой главе мы обсудим три коллекции, которые очень часто используются в программах на Rust:</target>
        </trans-unit>
        <trans-unit id="98e2048971bf413ef392b0aef43b635b310936b3" translate="yes" xml:space="preserve">
          <source>Rust&amp;rsquo;s testing features provide a way to specify how code should function to ensure it continues to work as you expect, even as you make changes. Unit tests exercise different parts of a library separately and can test private implementation details. Integration tests check that many parts of the library work together correctly, and they use the library&amp;rsquo;s public API to test the code in the same way external code will use it. Even though Rust&amp;rsquo;s type system and ownership rules help prevent some kinds of bugs, tests are still important to reduce logic bugs having to do with how your code is expected to behave.</source>
          <target state="translated">Функции тестирования Rust позволяют указать, как код должен работать, чтобы гарантировать, что он продолжает работать так, как вы ожидаете, даже когда вы вносите изменения. Модульные тесты проверяют разные части библиотеки по отдельности и могут тестировать детали частной реализации. Интеграционные тесты проверяют правильность совместной работы многих частей библиотеки и используют публичный API библиотеки для тестирования кода так же, как внешний код будет его использовать. Несмотря на то, что система типов и правила владения Rust помогают предотвратить некоторые виды ошибок, тесты по-прежнему важны для уменьшения логических ошибок, связанных с ожидаемым поведением вашего кода.</target>
        </trans-unit>
        <trans-unit id="acb8e83983bd289d54829daf197d511dbb760356" translate="yes" xml:space="preserve">
          <source>Rust's &quot;try catch&quot; construct which invokes the function pointer &lt;code&gt;f&lt;/code&gt; with the data pointer &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="translated">Конструкция Rust &amp;laquo;try catch&amp;raquo;, которая вызывает указатель функции &lt;code&gt;f&lt;/code&gt; с данными указателя &lt;code&gt;data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="560fa4c9da40b172f0797c154c93d28849453df3" translate="yes" xml:space="preserve">
          <source>Rust's &quot;try catch&quot; construct which invokes the function pointer &lt;code&gt;try_fn&lt;/code&gt; with the data pointer &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbe1f8233c456628e66e6df4dd93fab7b6e6c9e" translate="yes" xml:space="preserve">
          <source>Rust's &lt;code&gt;for&lt;/code&gt; loop syntax is actually sugar for iterators. Here's a basic example of &lt;code&gt;for&lt;/code&gt;:</source>
          <target state="translated">Синтаксис цикла &lt;code&gt;for&lt;/code&gt; в Rust на самом деле сахар для итераторов. Вот базовый пример &lt;code&gt;for&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c2b907ea71a52b75f8ec4f141b77e18171f372ef" translate="yes" xml:space="preserve">
          <source>Rust's collections can be grouped into four major categories:</source>
          <target state="translated">Коллекции ржавчины можно сгруппировать по четырем основным категориям:</target>
        </trans-unit>
        <trans-unit id="3518a40c6313dc64fda74604f5d48c205fe14878" translate="yes" xml:space="preserve">
          <source>Rust's memory orderings are &lt;a href=&quot;https://en.cppreference.com/w/cpp/atomic/memory_order&quot;&gt;the same as those of C++20&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66232bbafcf2029b1b02f4fd6262d62c2d92282a" translate="yes" xml:space="preserve">
          <source>Rust's memory orderings are &lt;a href=&quot;https://llvm.org/docs/LangRef.html#memory-model-for-concurrent-operations&quot;&gt;the same as LLVM's&lt;/a&gt;.</source>
          <target state="translated">Порядок памяти в Rust &lt;a href=&quot;https://llvm.org/docs/LangRef.html#memory-model-for-concurrent-operations&quot;&gt;такой же, как в LLVM&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a7ab800f18895158ef3a0e63fde445a7b639f33a" translate="yes" xml:space="preserve">
          <source>Rust's name resolution operates on a global hierarchy of namespaces. Each level in the hierarchy can be thought of as some item. The items are one of those mentioned above, but also include external crates. Declaring or defining a new module can be thought of as inserting a new tree into the hierarchy at the location of the definition.</source>
          <target state="translated">Разрешение имен Rust оперирует глобальной иерархией пространств имен.Каждый уровень иерархии можно рассматривать как некий элемент.Элементы являются одними из вышеупомянутых,но также включают в себя внешние ящики.Объявление или определение нового модуля может быть воспринято как вставка нового дерева в иерархию в месте определения.</target>
        </trans-unit>
        <trans-unit id="319f62fa60443741e4ab911db14f80e727aef59a" translate="yes" xml:space="preserve">
          <source>Rust's pointer types must always point to a valid location; there are no &quot;null&quot; pointers. Instead, Rust has &lt;em&gt;optional&lt;/em&gt; pointers, like the optional owned box, &lt;a href=&quot;enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Типы указателей Rust всегда должны указывать на допустимое местоположение; нет &quot;нулевых&quot; указателей. Вместо этого в Rust есть &lt;em&gt;необязательные&lt;/em&gt; указатели, такие как необязательный собственный блок &lt;a href=&quot;enum.option&quot;&gt; &lt;code&gt;Option&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;a href=&quot;../boxed/struct.box&quot;&gt; &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f768c498112456486bf63d48fcb7291968abac38" translate="yes" xml:space="preserve">
          <source>Rust's pointer types must always point to a valid location; there are no &quot;null&quot; references. Instead, Rust has &lt;em&gt;optional&lt;/em&gt; pointers, like the optional owned box, &lt;a href=&quot;enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6e2726524f65a330ec27f3f5f1fe94fb053aa0" translate="yes" xml:space="preserve">
          <source>Rust's semantics obey a &lt;em&gt;phase distinction&lt;/em&gt; between compile-time and run-time.&lt;sup&gt;&lt;a href=&quot;#phase-distinction&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; Semantic rules that have a &lt;em&gt;static interpretation&lt;/em&gt; govern the success or failure of compilation, while semantic rules that have a &lt;em&gt;dynamic interpretation&lt;/em&gt; govern the behavior of the program at run-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2aff2ec84d10e9cd75ff34f3e37a6ab05271846" translate="yes" xml:space="preserve">
          <source>Rust's semantics obey a &lt;em&gt;phase distinction&lt;/em&gt; between compile-time and run-time.&lt;sup&gt;&lt;a href=&quot;crates-and-source-files#phase-distinction&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; Semantic rules that have a &lt;em&gt;static interpretation&lt;/em&gt; govern the success or failure of compilation, while semantic rules that have a &lt;em&gt;dynamic interpretation&lt;/em&gt; govern the behavior of the program at run-time.</source>
          <target state="translated">Семантика Rust подчиняется &lt;em&gt;различию фаз&lt;/em&gt; между временем компиляции и временем выполнения. &lt;sup&gt;&lt;a href=&quot;crates-and-source-files#phase-distinction&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; Семантические правила, которые имеют &lt;em&gt;статическую интерпретацию,&lt;/em&gt; управляют успехом или неудачей компиляции, в то время как семантические правила, которые имеют &lt;em&gt;динамическую интерпретацию,&lt;/em&gt; управляют поведением программы во время выполнения.</target>
        </trans-unit>
        <trans-unit id="54f00e0c31d6eace7a6ea3416d8819187abd4302" translate="yes" xml:space="preserve">
          <source>Rust's standard collection library provides efficient implementations of the most common general purpose programming data structures. By using the standard implementations, it should be possible for two libraries to communicate without significant data conversion.</source>
          <target state="translated">Стандартная библиотека коллекции Rust обеспечивает эффективную реализацию наиболее распространенных структур данных программирования общего назначения.При использовании стандартных реализаций должна быть возможность взаимодействия двух библиотек без существенного преобразования данных.</target>
        </trans-unit>
        <trans-unit id="ab17aa57ae62fb04a69af0b7a8f3f507e272a3c7" translate="yes" xml:space="preserve">
          <source>Rust's type system is a conservative approximation of the dynamic safety requirements, so in some cases there is a performance cost to using safe code. For example, a doubly-linked list is not a tree structure and can only be represented with reference-counted pointers in safe code. By using &lt;code&gt;unsafe&lt;/code&gt; blocks to represent the reverse links as raw pointers, it can be implemented with only boxes.</source>
          <target state="translated">Система типов в Rust представляет собой консервативное приближение требований динамической безопасности, поэтому в некоторых случаях использование безопасного кода связано с затратами на производительность. Например, двусвязный список не является древовидной структурой и может быть представлен только указателями со счетчиком ссылок в безопасном коде. Используя &lt;code&gt;unsafe&lt;/code&gt; блоки для представления обратных ссылок как необработанных указателей, это может быть реализовано только с помощью блоков.</target>
        </trans-unit>
        <trans-unit id="95599064eb377b63b994bbd7ad3f097bbf8eb92c" translate="yes" xml:space="preserve">
          <source>Rustfmt ensures a consistent coding style across developers.</source>
          <target state="translated">Rustfmt обеспечивает единый стиль кодирования для всех разработчиков.</target>
        </trans-unit>
        <trans-unit id="7b00c77b80323c6107761b3476057383a88402b5" translate="yes" xml:space="preserve">
          <source>Rustup and the Role of Rust Nightly</source>
          <target state="translated">Ржавчина и роль Ржавчины ночью...</target>
        </trans-unit>
        <trans-unit id="baf8407c83848beb2a63399a672432e0718f8d96" translate="yes" xml:space="preserve">
          <source>Rustup makes it easy to change between different release channels of Rust, on a global or per-project basis. By default, you&amp;rsquo;ll have stable Rust installed. To install nightly, for example:</source>
          <target state="translated">Rustup позволяет легко переключаться между различными каналами выпуска Rust на глобальном уровне или для каждого проекта. По умолчанию у вас установлен стабильный Rust. Чтобы установить каждую ночь, например:</target>
        </trans-unit>
        <trans-unit id="d6a79be61e4215763db3baff3a7d68db38c8b2c3" translate="yes" xml:space="preserve">
          <source>RwLock</source>
          <target state="translated">RwLock</target>
        </trans-unit>
        <trans-unit id="3365fb12186db42cf39d5ce267adfc330507d4c2" translate="yes" xml:space="preserve">
          <source>RwLock::borrow</source>
          <target state="translated">RwLock::borrow</target>
        </trans-unit>
        <trans-unit id="bb95ca5081bbeb594b1afea186814e0d4f3253b7" translate="yes" xml:space="preserve">
          <source>RwLock::borrow_mut</source>
          <target state="translated">RwLock::borrow_mut</target>
        </trans-unit>
        <trans-unit id="032d2409c530ffd60c7c9c9f5aca0a52823fe35c" translate="yes" xml:space="preserve">
          <source>RwLock::default</source>
          <target state="translated">RwLock::default</target>
        </trans-unit>
        <trans-unit id="9f88cff40297be1aa94fa7e0823c98c7da6761a9" translate="yes" xml:space="preserve">
          <source>RwLock::drop</source>
          <target state="translated">RwLock::drop</target>
        </trans-unit>
        <trans-unit id="6eb75710cfca86f6ddcbd36cc0b480fab516efae" translate="yes" xml:space="preserve">
          <source>RwLock::fmt</source>
          <target state="translated">RwLock::fmt</target>
        </trans-unit>
        <trans-unit id="c39d1dd0d486dff9ebac4064c7f836672e22c020" translate="yes" xml:space="preserve">
          <source>RwLock::from</source>
          <target state="translated">RwLock::from</target>
        </trans-unit>
        <trans-unit id="f7459df51d92ce400094c19b830db9351fd1b575" translate="yes" xml:space="preserve">
          <source>RwLock::get_mut</source>
          <target state="translated">RwLock::get_mut</target>
        </trans-unit>
        <trans-unit id="dd170c316defa574a85c99622fe930a63bdba387" translate="yes" xml:space="preserve">
          <source>RwLock::into</source>
          <target state="translated">RwLock::into</target>
        </trans-unit>
        <trans-unit id="eb5fe8aa0193d0a1e704de4241f5c0a52119717b" translate="yes" xml:space="preserve">
          <source>RwLock::into_inner</source>
          <target state="translated">RwLock::into_inner</target>
        </trans-unit>
        <trans-unit id="597790ef6ee26d29fd19484b562c98ca7fe22839" translate="yes" xml:space="preserve">
          <source>RwLock::is_poisoned</source>
          <target state="translated">RwLock::is_poisoned</target>
        </trans-unit>
        <trans-unit id="b30631b8ae7fdfb2874a8151b77ee5739805b2a2" translate="yes" xml:space="preserve">
          <source>RwLock::new</source>
          <target state="translated">RwLock::new</target>
        </trans-unit>
        <trans-unit id="4524aac3589f9c6e93e60d12fae19353e0443eda" translate="yes" xml:space="preserve">
          <source>RwLock::read</source>
          <target state="translated">RwLock::read</target>
        </trans-unit>
        <trans-unit id="10894ce864637dc75066a6e702be6357e58a0ade" translate="yes" xml:space="preserve">
          <source>RwLock::try_from</source>
          <target state="translated">RwLock::try_from</target>
        </trans-unit>
        <trans-unit id="3c79ebfc0ddf697963209773c64e4debde0a15e5" translate="yes" xml:space="preserve">
          <source>RwLock::try_into</source>
          <target state="translated">RwLock::try_into</target>
        </trans-unit>
        <trans-unit id="27f9f9706495b3fa597d7283c5f6d5aa96cad168" translate="yes" xml:space="preserve">
          <source>RwLock::try_read</source>
          <target state="translated">RwLock::try_read</target>
        </trans-unit>
        <trans-unit id="2cc72c47f44da367af1f6c95ad58fcbe7aabe9f8" translate="yes" xml:space="preserve">
          <source>RwLock::try_write</source>
          <target state="translated">RwLock::try_write</target>
        </trans-unit>
        <trans-unit id="51d4ce46fd209b39c881192d2c4a306b0c6af7e1" translate="yes" xml:space="preserve">
          <source>RwLock::type_id</source>
          <target state="translated">RwLock::type_id</target>
        </trans-unit>
        <trans-unit id="75bc0e47bce9b9726f4994afdff85b10cc3177b6" translate="yes" xml:space="preserve">
          <source>RwLock::write</source>
          <target state="translated">RwLock::write</target>
        </trans-unit>
        <trans-unit id="1eaef0c1b72634db80d0da04d80181a719336691" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard</source>
          <target state="translated">RwLockReadGuard</target>
        </trans-unit>
        <trans-unit id="0a54fda840526b11982d5a172884305a72f1ca53" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::borrow</source>
          <target state="translated">RwLockReadGuard::borrow</target>
        </trans-unit>
        <trans-unit id="c10f603294158a203e3030a16eeb77610e66012d" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::borrow_mut</source>
          <target state="translated">RwLockReadGuard::borrow_mut</target>
        </trans-unit>
        <trans-unit id="480c8174e6d098df5d439363919b8fc988424a6a" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::deref</source>
          <target state="translated">RwLockReadGuard::deref</target>
        </trans-unit>
        <trans-unit id="96929e2bf6e62cb9881175383a8c72f54d7b407d" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::drop</source>
          <target state="translated">RwLockReadGuard::drop</target>
        </trans-unit>
        <trans-unit id="0630cc72c5534d080bc3a4d09dfe50c25c31af45" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::fmt</source>
          <target state="translated">RwLockReadGuard::fmt</target>
        </trans-unit>
        <trans-unit id="71fd112b2871ddf5eac0a9570c1f499e0f71e75c" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::from</source>
          <target state="translated">RwLockReadGuard::from</target>
        </trans-unit>
        <trans-unit id="9c60a6eeb95abf755a1eead5ad53991ff0cb74d1" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::into</source>
          <target state="translated">RwLockReadGuard::into</target>
        </trans-unit>
        <trans-unit id="74ee51ebc9a6d12c966b59ef0ecb6343b0e0c6eb" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::to_string</source>
          <target state="translated">RwLockReadGuard::to_string</target>
        </trans-unit>
        <trans-unit id="0ee2730589747bc1dcb5c453d764648feefc433d" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::try_from</source>
          <target state="translated">RwLockReadGuard::try_from</target>
        </trans-unit>
        <trans-unit id="2f498acbf30669bd7f472bd5abfc012da4c81500" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::try_into</source>
          <target state="translated">RwLockReadGuard::try_into</target>
        </trans-unit>
        <trans-unit id="a25712e2a0bf4758e52e5eff9b33eef96baad24b" translate="yes" xml:space="preserve">
          <source>RwLockReadGuard::type_id</source>
          <target state="translated">RwLockReadGuard::type_id</target>
        </trans-unit>
        <trans-unit id="9646cc55e4cc9faafa8ece87c06c08f6b888f1fd" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard</source>
          <target state="translated">RwLockWriteGuard</target>
        </trans-unit>
        <trans-unit id="baedc99a4037b217d239bb9bc2bebea8bc2c7b05" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::borrow</source>
          <target state="translated">RwLockWriteGuard::borrow</target>
        </trans-unit>
        <trans-unit id="0c8f19451559b2d3e5a6164478662b652678e260" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::borrow_mut</source>
          <target state="translated">RwLockWriteGuard::borrow_mut</target>
        </trans-unit>
        <trans-unit id="630e28276d78c2514d28310665f4fbd77b887ea3" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::deref</source>
          <target state="translated">RwLockWriteGuard::deref</target>
        </trans-unit>
        <trans-unit id="39d9907938496daf9bc33b22be826e596782bce1" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::deref_mut</source>
          <target state="translated">RwLockWriteGuard::deref_mut</target>
        </trans-unit>
        <trans-unit id="79f1ca0d2c6b0fad41ae7415d45c5eb9a7acfbb9" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::drop</source>
          <target state="translated">RwLockWriteGuard::drop</target>
        </trans-unit>
        <trans-unit id="fde0bc83a3fb9bf572594f7ed1454a2e150083e6" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::fmt</source>
          <target state="translated">RwLockWriteGuard::fmt</target>
        </trans-unit>
        <trans-unit id="2c0a3448edb216dbb966834cc4ad56db6eb11560" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::from</source>
          <target state="translated">RwLockWriteGuard::from</target>
        </trans-unit>
        <trans-unit id="3193eae71ac8c5c78d9a237c77ce0e37b3805579" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::into</source>
          <target state="translated">RwLockWriteGuard::into</target>
        </trans-unit>
        <trans-unit id="8c6e6d90fe4c368b63537f92416cb8aaff689f72" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::to_string</source>
          <target state="translated">RwLockWriteGuard::to_string</target>
        </trans-unit>
        <trans-unit id="5f6159162b69b6697a022b81d0b5f2b64a1c0cb9" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::try_from</source>
          <target state="translated">RwLockWriteGuard::try_from</target>
        </trans-unit>
        <trans-unit id="6959809c31f98cada5a72df18f7f305cf5bec8cb" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::try_into</source>
          <target state="translated">RwLockWriteGuard::try_into</target>
        </trans-unit>
        <trans-unit id="701e18958d5f1087e9d3ad9d6157e1b774a80327" translate="yes" xml:space="preserve">
          <source>RwLockWriteGuard::type_id</source>
          <target state="translated">RwLockWriteGuard::type_id</target>
        </trans-unit>
        <trans-unit id="e9366a47f607b6f46c1a48c0cd690894f0ebbadb" translate="yes" xml:space="preserve">
          <source>SGX</source>
          <target state="translated">SGX</target>
        </trans-unit>
        <trans-unit id="725c79ab8f9df970d196bb5d5f72df4504fce381" translate="yes" xml:space="preserve">
          <source>SHEBANG : &lt;code&gt;#!&lt;/code&gt; ~&lt;code&gt;\n&lt;/code&gt;&lt;sup&gt;+&lt;/sup&gt;&lt;a href=&quot;#shebang&quot;&gt;&amp;dagger;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6ea37b53bc27138b60916fd0439bdf3ab78ec1" translate="yes" xml:space="preserve">
          <source>SHEBANG : &lt;code&gt;#!&lt;/code&gt; ~[&lt;code&gt;[&lt;/code&gt;&lt;code&gt;\n&lt;/code&gt;] ~&lt;code&gt;\n&lt;/code&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">ШЕБАНГ: &lt;code&gt;#!&lt;/code&gt; ~ [ &lt;code&gt;[&lt;/code&gt; &lt;code&gt;\n&lt;/code&gt; ] ~ &lt;code&gt;\n&lt;/code&gt; &lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3c4b26856c9be2e3649537787b8c0e28472a0786" translate="yes" xml:space="preserve">
          <source>SHEBANG&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">SHEBANG&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6de691384f5963f51651150662473268acfe159d" translate="yes" xml:space="preserve">
          <source>SIMD</source>
          <target state="translated">SIMD</target>
        </trans-unit>
        <trans-unit id="22eeb276e780b6ff6b8c438850d1f60bc7878e9e" translate="yes" xml:space="preserve">
          <source>SML, OCaml: algebraic data types, pattern matching, type inference, semicolon statement separation</source>
          <target state="translated">SML,OCaml:алгебраические типы данных,согласование шаблонов,вывод типа,разделение выражений точки с запятой</target>
        </trans-unit>
        <trans-unit id="1de58b523ce999eba59e4751ca7a7e72e85af4e7" translate="yes" xml:space="preserve">
          <source>SOCKET</source>
          <target state="translated">SOCKET</target>
        </trans-unit>
        <trans-unit id="f648fd3aed746e2278113a2f8a9ee9de6ce669d2" translate="yes" xml:space="preserve">
          <source>SQRT_2</source>
          <target state="translated">SQRT_2</target>
        </trans-unit>
        <trans-unit id="e417c0c14e2d13af7eccbb6839d6c2e941c30381" translate="yes" xml:space="preserve">
          <source>STRING_CONTINUE :</source>
          <target state="translated">СТРОКА_СООТВЕТСТВИЕ :</target>
        </trans-unit>
        <trans-unit id="920882e835fec2971971f3c5aa2aa60559e73a5f" translate="yes" xml:space="preserve">
          <source>STRING_LITERAL :</source>
          <target state="translated">STRING_LITERAL :</target>
        </trans-unit>
        <trans-unit id="b78310097f7848cdd92f6380a2ed0c9ed3dd8c55" translate="yes" xml:space="preserve">
          <source>Safe traits should not have unsafe implementations, therefore marking an implementation for a safe trait unsafe will cause a compiler error. Removing the unsafe marker on the trait noted in the error will resolve this problem.</source>
          <target state="translated">Безопасные трейты не должны иметь небезопасных реализаций,поэтому пометка реализации для безопасного трейта небезопасна приведет к ошибке компилятора.Удаление опасного маркера в трейте,отмеченном в ошибке,решит эту проблему.</target>
        </trans-unit>
        <trans-unit id="6758124b257320aba8b357219dd55b902618ce28" translate="yes" xml:space="preserve">
          <source>Safe traits should not have unsafe implementations, therefore marking an implementation for a safe trait unsafe will cause a compiler error. Removing the unsafe marker on the trait noted in the error will resolve this problem:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3638107f2c733ebae270af45af8092f6fb19ef0a" translate="yes" xml:space="preserve">
          <source>Safe wrappers for this intrinsic are available on the integer primitives via the &lt;code&gt;checked_div&lt;/code&gt; method. For example, &lt;a href=&quot;../primitive.u32#method.checked_div&quot;&gt;&lt;code&gt;u32::checked_div&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcbced17202ea49cef90383c30f1c92012e82c83" translate="yes" xml:space="preserve">
          <source>Safe wrappers for this intrinsic are available on the integer primitives via the &lt;code&gt;checked_rem&lt;/code&gt; method. For example, &lt;a href=&quot;../primitive.u32#method.checked_rem&quot;&gt;&lt;code&gt;u32::checked_rem&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1add6a43fe6ea1b39bbf1a37130e2c55f3cd481c" translate="yes" xml:space="preserve">
          <source>Safe wrappers for this intrinsic are available on the integer primitives via the &lt;code&gt;checked_shl&lt;/code&gt; method. For example, &lt;a href=&quot;../primitive.u32#method.checked_shl&quot;&gt;&lt;code&gt;u32::checked_shl&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d924e081d2fe23775f79251bd6628bfebb9f15f" translate="yes" xml:space="preserve">
          <source>Safe wrappers for this intrinsic are available on the integer primitives via the &lt;code&gt;checked_shr&lt;/code&gt; method. For example, &lt;a href=&quot;../primitive.u32#method.checked_shr&quot;&gt;&lt;code&gt;u32::checked_shr&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6e7e410412f58574f766c3911f49badd42beca" translate="yes" xml:space="preserve">
          <source>Safety</source>
          <target state="translated">Safety</target>
        </trans-unit>
        <trans-unit id="d6527d5e90816a6b0e07f8bdbc358e99dffa1bdc" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;format_args&lt;/code&gt;, but adds a newline in the end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b8fb7a6bc8b245138411045130aa3d0bdb87c5" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;to_ascii_lowercase(a) == to_ascii_lowercase(b)&lt;/code&gt;, but without allocating and copying temporaries.</source>
          <target state="translated">То же, что &lt;code&gt;to_ascii_lowercase(a) == to_ascii_lowercase(b)&lt;/code&gt; , но без выделения и копирования временных файлов .</target>
        </trans-unit>
        <trans-unit id="59d1427a10dfc5dee5a89b2eda66ab1e83377430" translate="yes" xml:space="preserve">
          <source>Saturating &lt;code&gt;Duration&lt;/code&gt; addition. Computes &lt;code&gt;self + other&lt;/code&gt;, returning &lt;a href=&quot;struct.duration#associatedconstant.MAX&quot;&gt;&lt;code&gt;Duration::MAX&lt;/code&gt;&lt;/a&gt; if overflow occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2be18c955cc49c826816b30bcfc290c616c5960" translate="yes" xml:space="preserve">
          <source>Saturating &lt;code&gt;Duration&lt;/code&gt; multiplication. Computes &lt;code&gt;self * other&lt;/code&gt;, returning &lt;a href=&quot;struct.duration#associatedconstant.MAX&quot;&gt;&lt;code&gt;Duration::MAX&lt;/code&gt;&lt;/a&gt; if overflow occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6bf815786dcb43a5074e0c164ed807d841df425" translate="yes" xml:space="preserve">
          <source>Saturating &lt;code&gt;Duration&lt;/code&gt; subtraction. Computes &lt;code&gt;self - other&lt;/code&gt;, returning &lt;a href=&quot;struct.duration#associatedconstant.MIN&quot;&gt;&lt;code&gt;Duration::MIN&lt;/code&gt;&lt;/a&gt; if the result would be negative or if overflow occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03bf99c5e921d67f76a77fc0f90dc0a457c4266" translate="yes" xml:space="preserve">
          <source>Saturating absolute value. Computes &lt;code&gt;self.abs()&lt;/code&gt;, returning &lt;code&gt;MAX&lt;/code&gt; if &lt;code&gt;self == MIN&lt;/code&gt; instead of overflowing.</source>
          <target state="translated">Насыщающая абсолютная величина. Вычисляет &lt;code&gt;self.abs()&lt;/code&gt; , возвращая &lt;code&gt;MAX&lt;/code&gt; , если &lt;code&gt;self == MIN&lt;/code&gt; вместо переполнения.</target>
        </trans-unit>
        <trans-unit id="109dd1091641bc8ecebd701747ce54878af442b0" translate="yes" xml:space="preserve">
          <source>Saturating integer addition. Computes &lt;code&gt;self + rhs&lt;/code&gt;, saturating at the numeric bounds instead of overflowing.</source>
          <target state="translated">Насыщающее целочисленное сложение. Вычисляет &lt;code&gt;self + rhs&lt;/code&gt; , насыщая числовые границы вместо переполнения.</target>
        </trans-unit>
        <trans-unit id="57c9631709dc7db15f7aaacb3d3f0fcd0d500a59" translate="yes" xml:space="preserve">
          <source>Saturating integer exponentiation. Computes &lt;code&gt;self.pow(exp)&lt;/code&gt;, saturating at the numeric bounds instead of overflowing.</source>
          <target state="translated">Целочисленное возведение в степень насыщения. Вычисляет &lt;code&gt;self.pow(exp)&lt;/code&gt; насыщением на числовых границах вместо переполнения.</target>
        </trans-unit>
        <trans-unit id="6a26ed5271afaadaf17f7bb99258598a883dbde5" translate="yes" xml:space="preserve">
          <source>Saturating integer multiplication. Computes &lt;code&gt;self * rhs&lt;/code&gt;, saturating at the numeric bounds instead of overflowing.</source>
          <target state="translated">Насыщающее целочисленное умножение. Вычисляет &lt;code&gt;self * rhs&lt;/code&gt; насыщением на числовых границах вместо переполнения.</target>
        </trans-unit>
        <trans-unit id="4e9045498e8f92673c01343fe3158929d9ad0d53" translate="yes" xml:space="preserve">
          <source>Saturating integer negation. Computes &lt;code&gt;-self&lt;/code&gt;, returning &lt;code&gt;MAX&lt;/code&gt; if &lt;code&gt;self == MIN&lt;/code&gt; instead of overflowing.</source>
          <target state="translated">Насыщающее целочисленное отрицание. Вычисляет &lt;code&gt;-self&lt;/code&gt; , возвращая &lt;code&gt;MAX&lt;/code&gt; , если &lt;code&gt;self == MIN&lt;/code&gt; вместо переполнения.</target>
        </trans-unit>
        <trans-unit id="bba0f92a2b8115b3e1c85e5395b32ac513ceaf4c" translate="yes" xml:space="preserve">
          <source>Saturating integer subtraction. Computes &lt;code&gt;self - rhs&lt;/code&gt;, saturating at the numeric bounds instead of overflowing.</source>
          <target state="translated">Насыщающее целочисленное вычитание. Вычисляет &lt;code&gt;self - rhs&lt;/code&gt; , насыщая числовые границы вместо переполнения.</target>
        </trans-unit>
        <trans-unit id="94d7918aa6bb0576d26a84c1d4e645527e1b43b1" translate="yes" xml:space="preserve">
          <source>Save and run the program using &lt;code&gt;cargo run&lt;/code&gt;. You should receive an error message, as shown in this output:</source>
          <target state="translated">Сохраните и запустите программу, используя &lt;code&gt;cargo run&lt;/code&gt; . Вы должны получить сообщение об ошибке, как показано в этих выходных данных:</target>
        </trans-unit>
        <trans-unit id="f699547c1a083d346822dc0ad796b31a9ab59d87" translate="yes" xml:space="preserve">
          <source>Save the file and go back to your terminal window. On Linux or macOS, enter the following commands to compile and run the file:</source>
          <target state="translated">Сохраните файл и вернитесь в окно терминала.В Linux или MacOS,введите следующие команды для компиляции и запуска файла:</target>
        </trans-unit>
        <trans-unit id="a78cbddc900d04991e91d2fb8a0c3d608d5fa9d3" translate="yes" xml:space="preserve">
          <source>Saving the Argument Values in Variables</source>
          <target state="translated">Сохранение ценностей Аргументов в перепадах</target>
        </trans-unit>
        <trans-unit id="4aa91b74ad835b979f38d439d43f44e254945a4d" translate="yes" xml:space="preserve">
          <source>Say we have a trait &lt;code&gt;Foo&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce8f737a0ce307980f869c94d0a5ceba9f4cfab" translate="yes" xml:space="preserve">
          <source>Scalar Types</source>
          <target state="translated">Скалярные Типы</target>
        </trans-unit>
        <trans-unit id="28cba55d2aadf568463a9e7e645f8c7b1eed5e8b" translate="yes" xml:space="preserve">
          <source>Scan</source>
          <target state="translated">Scan</target>
        </trans-unit>
        <trans-unit id="a83428f0f19b6d4372010255ff2ef9ab272578d1" translate="yes" xml:space="preserve">
          <source>Scan::all</source>
          <target state="translated">Scan::all</target>
        </trans-unit>
        <trans-unit id="fdda2ce8b15a6d2075229afe525b7e8a55d35d11" translate="yes" xml:space="preserve">
          <source>Scan::any</source>
          <target state="translated">Scan::any</target>
        </trans-unit>
        <trans-unit id="8ae964ef6b78e951ac3b26e79dfd44bec458e86b" translate="yes" xml:space="preserve">
          <source>Scan::borrow</source>
          <target state="translated">Scan::borrow</target>
        </trans-unit>
        <trans-unit id="1d1fa2d81c469a644938a10e857fd20595b68115" translate="yes" xml:space="preserve">
          <source>Scan::borrow_mut</source>
          <target state="translated">Scan::borrow_mut</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
