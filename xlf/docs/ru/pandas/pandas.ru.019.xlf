<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="pandas">
    <body>
      <group id="pandas">
        <trans-unit id="ca2610e9715c8a2e569bd7aa53c90f724ac46b62" translate="yes" xml:space="preserve">
          <source>In contrast to R&amp;rsquo;s &lt;code&gt;factor&lt;/code&gt; function, categorical data is not converting input values to strings; categories will end up the same data type as the original values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ffe52cd255342dbe3e03a3e2e80eff91ce1577" translate="yes" xml:space="preserve">
          <source>In contrast to R&amp;rsquo;s &lt;code&gt;factor&lt;/code&gt; function, there is currently no way to assign/change labels at creation time. Use &lt;code&gt;categories&lt;/code&gt; to change the categories after creation time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d4f8a61ecbf2bcb69e5aced952fcd24459e903" translate="yes" xml:space="preserve">
          <source>In contrast to R&amp;rsquo;s &lt;code&gt;factor&lt;/code&gt; function, using categorical data as the sole input to create a new categorical series will &lt;em&gt;not&lt;/em&gt; remove unused categories but create a new categorical series which is equal to the passed in one!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec16f53339f26b0f39b23039c2408ac910c490b" translate="yes" xml:space="preserve">
          <source>In contrast to R&amp;rsquo;s &lt;code&gt;factor&lt;/code&gt;, categorical data can have categories of other types than string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171fdac7381916cc04649667798a64026a33e0ff" translate="yes" xml:space="preserve">
          <source>In contrast to statistical categorical variables, categorical data might have an order (e.g. &amp;lsquo;strongly agree&amp;rsquo; vs &amp;lsquo;agree&amp;rsquo; or &amp;lsquo;first observation&amp;rsquo; vs. &amp;lsquo;second observation&amp;rsquo;), but numerical operations (additions, divisions, &amp;hellip;) are not possible.</source>
          <target state="translated">В отличие от статистических категориальных переменных, категориальные данные могут иметь порядок (например, &amp;laquo;полностью согласен&amp;raquo; против &amp;laquo;согласен&amp;raquo; или &amp;laquo;первое наблюдение&amp;raquo; против &amp;laquo;второго наблюдения&amp;raquo;), но числовые операции (добавления, деления,&amp;hellip;) невозможны.</target>
        </trans-unit>
        <trans-unit id="228452be40c39717913267320e658f2f730c3fc3" translate="yes" xml:space="preserve">
          <source>In contrast, tolerance specifies the maximum distance between the index and indexer values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a0f915345f85f58ff060f5f118ec3bd98c58db" translate="yes" xml:space="preserve">
          <source>In equality and comparison operations, &lt;code&gt;pd.NA&lt;/code&gt; also propagates. This deviates from the behaviour of &lt;code&gt;np.nan&lt;/code&gt;, where comparisons with &lt;code&gt;np.nan&lt;/code&gt; always return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b5ddaa97f0d572d522131bb8f9e951e8621568" translate="yes" xml:space="preserve">
          <source>In financial data analysis and other fields it&amp;rsquo;s common to compute covariance and correlation matrices for a collection of time series. Often one is also interested in moving-window covariance and correlation matrices. This can be done by passing the &lt;code&gt;pairwise&lt;/code&gt; keyword argument, which in the case of &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; inputs will yield a MultiIndexed &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; whose &lt;code&gt;index&lt;/code&gt; are the dates in question. In the case of a single DataFrame argument the &lt;code&gt;pairwise&lt;/code&gt; argument can even be omitted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4082d9202bbb1d702927d6e271d66b5021c5c8fc" translate="yes" xml:space="preserve">
          <source>In float indexes, slicing using floats is allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c44ad03a36728d64708c34517ecc015d3724fc8" translate="yes" xml:space="preserve">
          <source>In general the best approach for unsupported objects or dtypes is to provide a &lt;code&gt;default_handler&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1dc61019df58ed6d600f5cf8abb4edcc1f978a5" translate="yes" xml:space="preserve">
          <source>In general, &lt;a href=&quot;../reference/api/pandas.dataframe.query#pandas.DataFrame.query&quot;&gt;&lt;code&gt;DataFrame.query()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt;&lt;code&gt;pandas.eval()&lt;/code&gt;&lt;/a&gt; will evaluate the subexpressions that &lt;em&gt;can&lt;/em&gt; be evaluated by &lt;code&gt;numexpr&lt;/code&gt; and those that must be evaluated in Python space transparently to the user. This is done by inferring the result type of an expression from its arguments and operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d063b2fde754e7562bff93f40fddcb10c7ecbb69" translate="yes" xml:space="preserve">
          <source>In general, a weighted moving average is calculated as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a838a69403fce5acf1e2c17335602c6cf991a2" translate="yes" xml:space="preserve">
          <source>In general, disallowing duplicates is &amp;ldquo;sticky&amp;rdquo;. It&amp;rsquo;s preserved through operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259650fe97ba99ec76dacb5a90539a73222f2839" translate="yes" xml:space="preserve">
          <source>In general, missing values &lt;em&gt;propagate&lt;/em&gt; in operations involving &lt;code&gt;pd.NA&lt;/code&gt;. When one of the operands is unknown, the outcome of the operation is also unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b08f4506892da7e04758915cce5b780f6b7d87c" translate="yes" xml:space="preserve">
          <source>In general, the output column names should be unique. You can&amp;rsquo;t apply the same function (or two functions with the same name) to the same column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78749b6f08092f1ce25cbd71c63280ae51354419" translate="yes" xml:space="preserve">
          <source>In general, we chose to make the default result of operations between differently indexed objects yield the &lt;strong&gt;union&lt;/strong&gt; of the indexes in order to avoid loss of information. Having an index label, though the data is missing, is typically important information as part of a computation. You of course have the option of dropping labels with missing data via the &lt;strong&gt;dropna&lt;/strong&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da480b7f2afde37d30a2d3c3628e54abc05ecdd5" translate="yes" xml:space="preserve">
          <source>In light of the above, we have chosen to allow you, the user, to use the &lt;a href=&quot;https://lxml.de&quot;&gt;&lt;strong&gt;lxml&lt;/strong&gt;&lt;/a&gt; backend, but &lt;strong&gt;this backend will use&lt;/strong&gt;&lt;a href=&quot;https://github.com/html5lib/html5lib-python&quot;&gt;&lt;strong&gt;html5lib&lt;/strong&gt;&lt;/a&gt; if &lt;a href=&quot;https://lxml.de&quot;&gt;&lt;strong&gt;lxml&lt;/strong&gt;&lt;/a&gt; fails to parse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f73b63ad75a78f67b079f95c8d6f90b73e6e7d" translate="yes" xml:space="preserve">
          <source>In most cases &amp;lsquo;block&amp;rsquo; is recommended, since it&amp;rsquo;s more memory efficient.</source>
          <target state="translated">В большинстве случаев рекомендуется &amp;laquo;блочный&amp;raquo;, поскольку он более эффективен с точки зрения памяти.</target>
        </trans-unit>
        <trans-unit id="8336ab4b3b13dbcf220d99ce0876af633024c8e4" translate="yes" xml:space="preserve">
          <source>In most cases, there should be no functional difference from using &lt;code&gt;deep&lt;/code&gt;, but if &lt;code&gt;deep&lt;/code&gt; is passed it will attempt to deepcopy.</source>
          <target state="translated">В большинстве случаев не должно быть функциональных отличий от использования &lt;code&gt;deep&lt;/code&gt; , но если &lt;code&gt;deep&lt;/code&gt; пройден, будет предпринята попытка глубокого копирования.</target>
        </trans-unit>
        <trans-unit id="e7236bf78d95a69537f8d46ae9cbc58792f758fb" translate="yes" xml:space="preserve">
          <source>In most cases, this should return a NumPy ndarray. For exceptional cases like &lt;code&gt;SparseArray&lt;/code&gt;, where returning an ndarray would be expensive, an ExtensionArray may be returned.</source>
          <target state="translated">В большинстве случаев это должно вернуть NumPy ndarray. В исключительных случаях, таких как &lt;code&gt;SparseArray&lt;/code&gt; , когда возврат ndarray был бы дорогостоящим, может быть возвращен ExtensionArray.</target>
        </trans-unit>
        <trans-unit id="fe70f0710a5d456f37bf36546298c73bcb3224c1" translate="yes" xml:space="preserve">
          <source>In non-float indexes, slicing using floats will raise a &lt;code&gt;TypeError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4978a8a882d0859681db3419e727cf4c1588e0" translate="yes" xml:space="preserve">
          <source>In older versions of pandas, the &lt;code&gt;SparseSeries&lt;/code&gt; and &lt;code&gt;SparseDataFrame&lt;/code&gt; classes (documented below) were the preferred way to work with sparse data. With the advent of extension arrays, these subclasses are no longer needed. Their purpose is better served by using a regular Series or DataFrame with sparse values instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232fa83c2f577f58ba8577c3e595c730f748ca9b" translate="yes" xml:space="preserve">
          <source>In order to add another DataFrame or Series to an existing HDF file please use append mode and a different a key.</source>
          <target state="translated">Чтобы добавить еще один DataFrame или Series к существующему файлу HDF,используйте режим добавления и другой ключ.</target>
        </trans-unit>
        <trans-unit id="1b0afa3d6d26046ee6452876661c15d2f2382218" translate="yes" xml:space="preserve">
          <source>In order to parse this file into a &lt;code&gt;DataFrame&lt;/code&gt;, we simply need to supply the column specifications to the &lt;code&gt;read_fwf&lt;/code&gt; function along with the file name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341d1b0692859d5a9b5538d1b0f8b6894fa1d38c" translate="yes" xml:space="preserve">
          <source>In order to resample to work on indices that are non-datetimelike, the following procedure can be utilized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c67e9d7bf7291459bbafc885937d9138dcad0d8" translate="yes" xml:space="preserve">
          <source>In order to use &lt;a href=&quot;../reference/api/pandas.read_sql_table#pandas.read_sql_table&quot;&gt;&lt;code&gt;read_sql_table()&lt;/code&gt;&lt;/a&gt;, you &lt;strong&gt;must&lt;/strong&gt; have the SQLAlchemy optional dependency installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4d6d851cc83c991a7ffa70015127baf12f5309" translate="yes" xml:space="preserve">
          <source>In order to write separate &lt;code&gt;DataFrames&lt;/code&gt; to separate sheets in a single Excel file, one can pass an &lt;code&gt;ExcelWriter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94d9410b50138773dd5dd1be3cf191c15835cf7" translate="yes" xml:space="preserve">
          <source>In pandas there are a few objects implemented which can serve as valid containers for the axis labels:</source>
          <target state="translated">В пандах реализовано несколько объектов,которые могут служить допустимыми контейнерами для этикеток осей:</target>
        </trans-unit>
        <trans-unit id="208f80104ac64839558570440d5448887e455fb3" translate="yes" xml:space="preserve">
          <source>In pandas, if no index is specified, an integer index is also used by default (first row = 0, second row = 1, and so on). While using a labeled &lt;code&gt;Index&lt;/code&gt; or &lt;code&gt;MultiIndex&lt;/code&gt; can enable sophisticated analyses and is ultimately an important part of pandas to understand, for this comparison we will essentially ignore the &lt;code&gt;Index&lt;/code&gt; and just treat the &lt;code&gt;DataFrame&lt;/code&gt; as a collection of columns. Please see the &lt;a href=&quot;../../user_guide/indexing#indexing&quot;&gt;indexing documentation&lt;/a&gt; for much more on how to use an &lt;code&gt;Index&lt;/code&gt; effectively.</source>
          <target state="translated">В пандах, если индекс не указан, по умолчанию также используется целочисленный индекс (первая строка = 0, вторая строка = 1 и т. Д.). Хотя использование помеченного &lt;code&gt;Index&lt;/code&gt; или &lt;code&gt;MultiIndex&lt;/code&gt; может обеспечить сложный анализ и, в конечном счете, является важной частью pandas для понимания, для этого сравнения мы по существу проигнорируем &lt;code&gt;Index&lt;/code&gt; и просто &lt;code&gt;DataFrame&lt;/code&gt; рассматривать DataFrame как набор столбцов. См. &lt;a href=&quot;../../user_guide/indexing#indexing&quot;&gt;Документацию&lt;/a&gt; по индексированию, чтобы узнать больше о том, как эффективно использовать &lt;code&gt;Index&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="111bed95681d0ed9357d61fc09163726d2a62557" translate="yes" xml:space="preserve">
          <source>In particular, StringDtype.na_value may change to no longer be &lt;code&gt;numpy.nan&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb6b540969823ae01a77803b2362941a5666f2e" translate="yes" xml:space="preserve">
          <source>In particular, this allows users to define functions that take a styler object, along with other parameters, and return the styler after making styling changes (such as calling &lt;a href=&quot;pandas.io.formats.style.styler.apply#pandas.io.formats.style.Styler.apply&quot;&gt;&lt;code&gt;Styler.apply()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pandas.io.formats.style.styler.set_properties#pandas.io.formats.style.Styler.set_properties&quot;&gt;&lt;code&gt;Styler.set_properties()&lt;/code&gt;&lt;/a&gt;). Using &lt;code&gt;.pipe&lt;/code&gt;, these user-defined style &amp;ldquo;transformations&amp;rdquo; can be interleaved with calls to the built-in Styler interface.</source>
          <target state="translated">В частности, это позволяет пользователям определять функции, которые принимают объект стилизатора вместе с другими параметрами и возвращают стиль после внесения изменений стиля (таких как вызов &lt;a href=&quot;pandas.io.formats.style.styler.apply#pandas.io.formats.style.Styler.apply&quot;&gt; &lt;code&gt;Styler.apply()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;pandas.io.formats.style.styler.set_properties#pandas.io.formats.style.Styler.set_properties&quot;&gt; &lt;code&gt;Styler.set_properties()&lt;/code&gt; &lt;/a&gt; ). Используя &lt;code&gt;.pipe&lt;/code&gt; , эти определяемые пользователем &amp;laquo;преобразования&amp;raquo; стилей можно чередовать с вызовами встроенного интерфейса Styler.</target>
        </trans-unit>
        <trans-unit id="ee158349efaa8f54191cd70ad5a2ac1fb3f0ce29" translate="yes" xml:space="preserve">
          <source>In practice this becomes very cumbersome because we often need a very long index with a large number of timestamps. If we need timestamps on a regular frequency, we can use the &lt;a href=&quot;../reference/api/pandas.date_range#pandas.date_range&quot;&gt;&lt;code&gt;date_range()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/api/pandas.bdate_range#pandas.bdate_range&quot;&gt;&lt;code&gt;bdate_range()&lt;/code&gt;&lt;/a&gt; functions to create a &lt;code&gt;DatetimeIndex&lt;/code&gt;. The default frequency for &lt;code&gt;date_range&lt;/code&gt; is a &lt;strong&gt;calendar day&lt;/strong&gt; while the default for &lt;code&gt;bdate_range&lt;/code&gt; is a &lt;strong&gt;business day&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3607b1c4296c5afb091a5295f0b11cfaf0b37dcc" translate="yes" xml:space="preserve">
          <source>In prior versions, using &lt;code&gt;.loc[list-of-labels]&lt;/code&gt; would work as long as &lt;em&gt;at least 1&lt;/em&gt; of the keys was found (otherwise it would raise a &lt;code&gt;KeyError&lt;/code&gt;). This behavior was changed and will now raise a &lt;code&gt;KeyError&lt;/code&gt; if at least one label is missing. The recommended alternative is to use &lt;code&gt;.reindex()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aef9cc62198b3171fb1e517275a75345d3d9d0b" translate="yes" xml:space="preserve">
          <source>In rare occasions reST styles like bold text or italics will be used in docstrings, but is it common to have inline code, which is presented between backticks. It is considered inline code:</source>
          <target state="translated">В редких случаях в docstrings будут использоваться reST-стили,такие как полужирный текст или курсив,но является ли обычным делом наличие встраиваемого кода,который отображается между черными ходами.Это считается встроенным кодом:</target>
        </trans-unit>
        <trans-unit id="a95c7b0e602d68a0efa9cfdaa2ff21908ff334ab" translate="yes" xml:space="preserve">
          <source>In short, basic iteration (&lt;code&gt;for i in object&lt;/code&gt;) produces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f193164f8ff830f495338165002ed0df364bcce" translate="yes" xml:space="preserve">
          <source>In some cases, inferring the DST is impossible. In such cases, you can pass an ndarray to the ambiguous parameter to set the DST explicitly</source>
          <target state="translated">В некоторых случаях сделать вывод о том,что ГЖТ невозможно.В таких случаях вы можете передать a ndarray в неоднозначный параметр для явного задания DST</target>
        </trans-unit>
        <trans-unit id="617add62147541c41e4cc987404e47efd9b2c702" translate="yes" xml:space="preserve">
          <source>In some cases, reading in abnormal data with columns containing mixed dtypes will result in an inconsistent dataset. If you rely on pandas to infer the dtypes of your columns, the parsing engine will go and infer the dtypes for different chunks of the data, rather than the whole dataset at once. Consequently, you can end up with column(s) with mixed dtypes. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a355a2574a3b984a4c5cca59d1dd36b469b10cb" translate="yes" xml:space="preserve">
          <source>In some situations it may still be preferable or necessary to prepare plots directly with matplotlib, for instance when a certain type of plot or customization is not (yet) supported by pandas. &lt;code&gt;Series&lt;/code&gt; and &lt;code&gt;DataFrame&lt;/code&gt; objects behave like arrays and can therefore be passed directly to matplotlib functions without explicit casts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b41f8a671dcb59bac9331a53cb4c0003fd8ac2d" translate="yes" xml:space="preserve">
          <source>In statistics, &lt;a href=&quot;https://en.wikipedia.org/wiki/Kernel_density_estimation&quot;&gt;kernel density estimation&lt;/a&gt; (KDE) is a non-parametric way to estimate the probability density function (PDF) of a random variable. This function uses Gaussian kernels and includes automatic bandwidth determination.</source>
          <target state="translated">В статистике &lt;a href=&quot;https://en.wikipedia.org/wiki/Kernel_density_estimation&quot;&gt;оценка плотности ядра&lt;/a&gt; (KDE) - это непараметрический способ оценки функции плотности вероятности (PDF) случайной величины. Эта функция использует гауссовские ядра и включает автоматическое определение полосы пропускания.</target>
        </trans-unit>
        <trans-unit id="259e03c33747a655ccf113b4924898904644dca6" translate="yes" xml:space="preserve">
          <source>In statistics, imputation is the process of replacing missing data with substituted values &lt;a href=&quot;#r26d0aea2a9b7-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. When resampling data, missing values may appear (e.g., when the resampling frequency is higher than the original frequency).</source>
          <target state="translated">В статистике вменение - это процесс замены отсутствующих данных на подставленные значения &lt;a href=&quot;#r26d0aea2a9b7-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; . При повторной выборке данных могут появиться отсутствующие значения (например, когда частота повторной выборки выше исходной частоты).</target>
        </trans-unit>
        <trans-unit id="d0491d129e4f29db5d2c69ef3a8023377ee66007" translate="yes" xml:space="preserve">
          <source>In statistics, imputation is the process of replacing missing data with substituted values &lt;a href=&quot;#r3ead377f0eb9-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. When resampling data, missing values may appear (e.g., when the resampling frequency is higher than the original frequency). The backward fill will replace NaN values that appeared in the resampled data with the next value in the original sequence. Missing values that existed in the original data will not be modified.</source>
          <target state="translated">В статистике вменение - это процесс замены отсутствующих данных на подставленные значения &lt;a href=&quot;#r3ead377f0eb9-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; . При повторной выборке данных могут появиться отсутствующие значения (например, когда частота повторной выборки выше исходной частоты). Обратная заливка заменит значения NaN, которые появились в данных передискретизации, следующим значением в исходной последовательности. Отсутствующие значения, которые существовали в исходных данных, не будут изменены.</target>
        </trans-unit>
        <trans-unit id="365ec27a333aa600790256c375c2a9d1f665b634" translate="yes" xml:space="preserve">
          <source>In statistics, imputation is the process of replacing missing data with substituted values &lt;a href=&quot;#rbbbeff54acb7-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. When resampling data, missing values may appear (e.g., when the resampling frequency is higher than the original frequency). The backward fill will replace NaN values that appeared in the resampled data with the next value in the original sequence. Missing values that existed in the original data will not be modified.</source>
          <target state="translated">В статистике вменение - это процесс замены отсутствующих данных на подставленные значения &lt;a href=&quot;#rbbbeff54acb7-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; . При повторной выборке данных могут появиться отсутствующие значения (например, когда частота повторной выборки выше исходной частоты). Обратная заливка заменит значения NaN, которые появились в данных передискретизации, следующим значением в исходной последовательности. Отсутствующие значения, которые существовали в исходных данных, не будут изменены.</target>
        </trans-unit>
        <trans-unit id="374e59aeb9e272874547c17798f8ea92262e4441" translate="yes" xml:space="preserve">
          <source>In terms of performance, &lt;strong&gt;the first time a function is run using the Numba engine will be slow&lt;/strong&gt; as Numba will have some function compilation overhead. However, the compiled functions are cached, and subsequent calls will be fast. In general, the Numba engine is performant with a larger amount of data points (e.g. 1+ million).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f180f96592c966e9d354895961cc77b54f367f90" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;DATA&lt;/code&gt; step, arbitrary math expressions can be used on new or existing columns.</source>
          <target state="translated">На шаге &lt;code&gt;DATA&lt;/code&gt; можно использовать произвольные математические выражения для новых или существующих столбцов.</target>
        </trans-unit>
        <trans-unit id="df65d95ebbd2e2600fc4f4e540a8437a5d89f88a" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;Series&lt;/code&gt; case this is effectively an appending operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c834f0b0defa5dd6dad9cc79a23846d158a35cec" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;pyarrow&lt;/code&gt; engine, categorical dtypes for non-string types can be serialized to parquet, but will de-serialize as their primitive dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e9516f84b5cd57b51a1a7fc9435ddc0c15d29c" translate="yes" xml:space="preserve">
          <source>In the absence of high performance &lt;code&gt;NA&lt;/code&gt; support being built into NumPy from the ground up, the primary casualty is the ability to represent NAs in integer arrays. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36ea6a18bdd557fb07ea425002b7742c741b5b0" translate="yes" xml:space="preserve">
          <source>In the below examples, the first level of the MultiIndex is sorted because a&amp;lt;b&amp;lt;c, so there is no need to look at the next level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c18c64769dd7f0d0d990c0a999da9c6309f9c36" translate="yes" xml:space="preserve">
          <source>In the case of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b145dc931b9b0873d88038293a88e6162dbf31" translate="yes" xml:space="preserve">
          <source>In the case of &lt;code&gt;DataFrame&lt;/code&gt;, the indexes must be disjoint but the columns do not need to be:</source>
          <target state="translated">В случае &lt;code&gt;DataFrame&lt;/code&gt; индексы должны быть непересекающимися, но столбцы не должны быть:</target>
        </trans-unit>
        <trans-unit id="76a837351c5dbce74c7205b080161bdf34badf75" translate="yes" xml:space="preserve">
          <source>In the case of &lt;code&gt;MultiIndex&lt;/code&gt; you must either specify &lt;code&gt;values&lt;/code&gt; as a list-like object containing tuples that are the same length as the number of levels, or specify &lt;code&gt;level&lt;/code&gt;. Otherwise it will raise a &lt;code&gt;ValueError&lt;/code&gt;.</source>
          <target state="translated">В случае &lt;code&gt;MultiIndex&lt;/code&gt; вы должны либо указать &lt;code&gt;values&lt;/code&gt; как объект в виде списка, содержащий кортежи, длина которых совпадает с количеством уровней, либо указать &lt;code&gt;level&lt;/code&gt; . В противном случае это вызовет &lt;code&gt;ValueError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1eb45768c0db923de91d976966e4ce4de72b6814" translate="yes" xml:space="preserve">
          <source>In the case of grouping by multiple keys, the group name will be a tuple:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42e5a7b12d256c55fa2906b61eb1a41a8c27f43" translate="yes" xml:space="preserve">
          <source>In the case of missing elements, only complete pairwise observations will be used.</source>
          <target state="translated">В случае отсутствия элементов будут использоваться только полные парные наблюдения.</target>
        </trans-unit>
        <trans-unit id="93c3a3c7e5f7f8c6cc129267a8f0244664f6c030" translate="yes" xml:space="preserve">
          <source>In the current implementation apply calls &lt;code&gt;func&lt;/code&gt; twice on the first column/row to decide whether it can take a fast or slow code path. This can lead to unexpected behavior if &lt;code&gt;func&lt;/code&gt; has side-effects, as they will take effect twice for the first column/row.</source>
          <target state="translated">В текущей реализации apply вызывает &lt;code&gt;func&lt;/code&gt; дважды в первом столбце / строке, чтобы решить, может ли он использовать быстрый или медленный путь кода. Это может привести к неожиданному поведению, если у &lt;code&gt;func&lt;/code&gt; есть побочные эффекты, поскольку они будут действовать дважды для первого столбца / строки.</target>
        </trans-unit>
        <trans-unit id="bb59999cec8f71616204455442b4171be5f75280" translate="yes" xml:space="preserve">
          <source>In the current implementation applymap calls &lt;code&gt;func&lt;/code&gt; twice on the first column/row to decide whether it can take a fast or slow code path. This can lead to unexpected behavior if &lt;code&gt;func&lt;/code&gt; has side-effects, as they will take effect twice for the first column/row.</source>
          <target state="translated">В текущей реализации applymap дважды вызывает &lt;code&gt;func&lt;/code&gt; в первом столбце / строке, чтобы решить, может ли он использовать быстрый или медленный путь кода. Это может привести к неожиданному поведению, если у &lt;code&gt;func&lt;/code&gt; есть побочные эффекты, поскольку они будут действовать дважды для первого столбца / строки.</target>
        </trans-unit>
        <trans-unit id="e51e88b817ad3bcafc0c9fc36ef12166900cc138" translate="yes" xml:space="preserve">
          <source>In the default setting, the string is split by whitespace.</source>
          <target state="translated">В настройках по умолчанию строка разбивается на пробелы.</target>
        </trans-unit>
        <trans-unit id="4d5874c08a93fe7637eb607b79d1f52f99c5603f" translate="yes" xml:space="preserve">
          <source>In the event that there aren&amp;rsquo;t overlapping indexes an empty DataFrame will be returned.</source>
          <target state="translated">В случае отсутствия перекрывающихся индексов будет возвращен пустой DataFrame.</target>
        </trans-unit>
        <trans-unit id="a5777b9ed7829ebd0c8b5358f54760cae6af6f09" translate="yes" xml:space="preserve">
          <source>In the example above &lt;code&gt;5&lt;/code&gt; and &lt;code&gt;5.0&lt;/code&gt; will be recognized as &lt;code&gt;NaN&lt;/code&gt;, in addition to the defaults. A string will first be interpreted as a numerical &lt;code&gt;5&lt;/code&gt;, then as a &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75d6df5005f2fe21ff1befe0bcc75d5b1cbbf47" translate="yes" xml:space="preserve">
          <source>In the example above, if you were on a Python version lower than 3.6 or a pandas version lower than 0.23, the &lt;code&gt;Series&lt;/code&gt; would be ordered by the lexical order of the dict keys (i.e. &lt;code&gt;['a', 'b', 'c']&lt;/code&gt; rather than &lt;code&gt;['b', 'a', 'c']&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1dde277c7382d4ae5f38cf47f494f05ce168e8e" translate="yes" xml:space="preserve">
          <source>In the example above, the functions &lt;code&gt;extract_city_name&lt;/code&gt; and &lt;code&gt;add_country_name&lt;/code&gt; each expected a &lt;code&gt;DataFrame&lt;/code&gt; as the first positional argument. What if the function you wish to apply takes its data as, say, the second argument? In this case, provide &lt;code&gt;pipe&lt;/code&gt; with a tuple of &lt;code&gt;(callable, data_keyword)&lt;/code&gt;. &lt;code&gt;.pipe&lt;/code&gt; will route the &lt;code&gt;DataFrame&lt;/code&gt; to the argument specified in the tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e7c1f9b1b324cdde10962f89d1425e0096b371" translate="yes" xml:space="preserve">
          <source>In the example above, we inserted a precomputed value. We can also pass in a function of one argument to be evaluated on the DataFrame being assigned to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17eaeae90e1b643c48789a2e25b2527a1eae0445" translate="yes" xml:space="preserve">
          <source>In the example below we have a DataFrame with the information about planet&amp;rsquo;s mass and radius. We pass the &amp;lsquo;mass&amp;rsquo; column to the pie function to get a pie plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6053812ef83ad3af3bf5390b7deb7bf927dbe97a" translate="yes" xml:space="preserve">
          <source>In the example below we have a DataFrame with the information about planet&amp;rsquo;s mass and radius. We pass the the &amp;lsquo;mass&amp;rsquo; column to the pie function to get a pie plot.</source>
          <target state="translated">В приведенном ниже примере у нас есть DataFrame с информацией о массе и радиусе планеты. Мы передаем столбец &amp;laquo;масса&amp;raquo; функции круговой диаграммы, чтобы получить круговой график.</target>
        </trans-unit>
        <trans-unit id="9166af0daf87385f45c0c7517450bf89ed4441bf" translate="yes" xml:space="preserve">
          <source>In the example below, we transform the &lt;code&gt;Series&lt;/code&gt; to a sparse representation of a 2-d array by specifying that the first and second &lt;code&gt;MultiIndex&lt;/code&gt; levels define labels for the rows and the third and fourth levels define labels for the columns. We also specify that the column and row labels should be sorted in the final sparse representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c05d0c8cefe1a8e069cd89dca3a7b65e36a26f75" translate="yes" xml:space="preserve">
          <source>In the examples above where we passed &lt;code&gt;dtype='category'&lt;/code&gt;, we used the default behavior:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebe01532250910835b2b2fabdcc554f6b7127b8" translate="yes" xml:space="preserve">
          <source>In the following example, there are duplicate values of &lt;code&gt;B&lt;/code&gt; in the right &lt;code&gt;DataFrame&lt;/code&gt;. As this is not a one-to-one merge &amp;ndash; as specified in the &lt;code&gt;validate&lt;/code&gt; argument &amp;ndash; an exception will be raised.</source>
          <target state="translated">В следующем примере есть повторяющиеся значения &lt;code&gt;B&lt;/code&gt; в правом &lt;code&gt;DataFrame&lt;/code&gt; . Поскольку это не однозначное слияние, как указано в аргументе &lt;code&gt;validate&lt;/code&gt; возбуждено исключение.</target>
        </trans-unit>
        <trans-unit id="aa442983b6a44794cf5c6d987a5a2c9d34caa5bb" translate="yes" xml:space="preserve">
          <source>In the following example, we use the &lt;a href=&quot;https://www.sqlite.org/&quot;&gt;SQlite&lt;/a&gt; SQL database engine. You can use a temporary SQLite database where data are stored in &amp;ldquo;memory&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c78f24c44017f391c8bd0a0453e4110abf6899" translate="yes" xml:space="preserve">
          <source>In the following example, we will use &lt;code&gt;nlargest&lt;/code&gt; to select the three rows having the largest values in column &amp;ldquo;population&amp;rdquo;.</source>
          <target state="translated">В следующем примере мы будем использовать &lt;code&gt;nlargest&lt;/code&gt; для выбора трех строк, имеющих наибольшие значения в столбце &amp;laquo;популяция&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="3aa4c18ddfff7abd52cefa162c779546126fccb6" translate="yes" xml:space="preserve">
          <source>In the following example, we will use &lt;code&gt;nsmallest&lt;/code&gt; to select the three rows having the smallest values in column &amp;ldquo;a&amp;rdquo;.</source>
          <target state="translated">В следующем примере мы будем использовать &lt;code&gt;nsmallest&lt;/code&gt; для выбора трех строк с наименьшими значениями в столбце &amp;laquo;a&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="74119509e91e7b82dfd9057bd94f64fcb898b1b8" translate="yes" xml:space="preserve">
          <source>In the following example, we will use &lt;code&gt;nsmallest&lt;/code&gt; to select the three rows having the smallest values in column &amp;ldquo;population&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d23322a45ea5c7c01acbb75f4ab73ae0e050883" translate="yes" xml:space="preserve">
          <source>In the following examples, &lt;strong&gt;df.index // 5&lt;/strong&gt; returns a binary array which is used to determine what gets selected for the groupby operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a3bc009a766f26328d46a5e52c0bd852ea0d66" translate="yes" xml:space="preserve">
          <source>In the following sub-sections we will highlight some other index types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d62d2b055a58010c61f758ad207c83aae7b942" translate="yes" xml:space="preserve">
          <source>In the future, as new dtypes are added that support &lt;code&gt;pd.NA&lt;/code&gt;, the results of this method will change to support those new dtypes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb05e1d57b2e1300e54b55c509ba2fad3a4bfb3" translate="yes" xml:space="preserve">
          <source>In the future, we may provide an option for &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt; to infer a nullable-integer dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2a4afb7bc64d9f387b41f3f07550809b3eb5d3" translate="yes" xml:space="preserve">
          <source>In the most basic use-case, &lt;code&gt;read_excel&lt;/code&gt; takes a path to an Excel file, and the &lt;code&gt;sheet_name&lt;/code&gt; indicating which sheet to parse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e30d2ced03ecc282e576f7d7d31b4cdf990d3b" translate="yes" xml:space="preserve">
          <source>In the past, pandas recommended &lt;a href=&quot;../reference/api/pandas.series.values#pandas.Series.values&quot;&gt;&lt;code&gt;Series.values&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../reference/api/pandas.dataframe.values#pandas.DataFrame.values&quot;&gt;&lt;code&gt;DataFrame.values&lt;/code&gt;&lt;/a&gt; for extracting the data from a Series or DataFrame. You&amp;rsquo;ll still find references to these in old code bases and online. Going forward, we recommend avoiding &lt;code&gt;.values&lt;/code&gt; and using &lt;code&gt;.array&lt;/code&gt; or &lt;code&gt;.to_numpy()&lt;/code&gt;. &lt;code&gt;.values&lt;/code&gt; has the following drawbacks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a502ee5e15ede96777e89789dba9cb526898f5" translate="yes" xml:space="preserve">
          <source>In the preceding examples, frequency strings (e.g. &lt;code&gt;'D'&lt;/code&gt;) were used to specify a frequency that defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d37ff91777bc82ff2a7c2702d2ea571e879266" translate="yes" xml:space="preserve">
          <source>In the previous example, the resulting value for duck is missing, because the maximum of a NaN and a float is a NaN. So, in the example, we set &lt;code&gt;fill_value=0&lt;/code&gt;, so the maximum value returned will be the value from some dataset.</source>
          <target state="translated">В предыдущем примере результирующее значение для утки отсутствует, потому что максимальное значение NaN и float равно NaN. Итак, в примере мы устанавливаем &lt;code&gt;fill_value=0&lt;/code&gt; , поэтому максимальное возвращаемое значение будет значением из некоторого набора данных.</target>
        </trans-unit>
        <trans-unit id="473f5d078fd028f0ed65d8ad425df3522514dc38" translate="yes" xml:space="preserve">
          <source>In the second expression, &lt;code&gt;x['C']&lt;/code&gt; will refer to the newly created column, that&amp;rsquo;s equal to &lt;code&gt;dfa['A'] + dfa['B']&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe33c5f4d23d2808699d27c791aaa9952e2622a" translate="yes" xml:space="preserve">
          <source>In this case the input is a &lt;code&gt;Series&lt;/code&gt;, one column at a time. Notice that the output shape of &lt;code&gt;highlight_max&lt;/code&gt; matches the input shape, an array with &lt;code&gt;len(s)&lt;/code&gt; items.</source>
          <target state="translated">В этом случае ввод - это &lt;code&gt;Series&lt;/code&gt; , по одному столбцу за раз. Обратите внимание, что форма вывода &lt;code&gt;highlight_max&lt;/code&gt; соответствует форме ввода, массиву с элементами &lt;code&gt;len(s)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b3a509c455234e1c3e05693d38433368296bb28" translate="yes" xml:space="preserve">
          <source>In this case, the callable is specifying that we exclude the &amp;ldquo;a&amp;rdquo; and &amp;ldquo;c&amp;rdquo; columns from the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aef7feee0929f190d963f63e0387a5d7d3d15b6" translate="yes" xml:space="preserve">
          <source>In this case, the cell&amp;rsquo;s style depends only on it&amp;rsquo;s own value. That means we should use the &lt;code&gt;Styler.applymap&lt;/code&gt; method which works elementwise.</source>
          <target state="translated">В этом случае стиль ячейки зависит только от ее собственного значения. Это означает, что мы должны использовать метод &lt;code&gt;Styler.applymap&lt;/code&gt; , который работает поэлементно.</target>
        </trans-unit>
        <trans-unit id="ad06842c389a571f0235f579a49f4f73cb7ed48e" translate="yes" xml:space="preserve">
          <source>In this case, the cell&amp;rsquo;s style depends only on its own value. That means we should use the &lt;code&gt;Styler.applymap&lt;/code&gt; method which works elementwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ba1c1a450e40b49d89a7bd4623ca53a6ec1435" translate="yes" xml:space="preserve">
          <source>In this case, you should simply refer to the variables like you would in standard Python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ff908c94702a05c583a3f40f7d9e3bed0dd0c0" translate="yes" xml:space="preserve">
          <source>In this example, using Numba was faster than Cython.</source>
          <target state="translated">В этом примере,использование Нумбы было быстрее,чем Сайтон.</target>
        </trans-unit>
        <trans-unit id="a7d2a651a577c11740c930fb23047a99aa3158e8" translate="yes" xml:space="preserve">
          <source>In this example, we chopped the collection of time series into yearly chunks then independently called &lt;a href=&quot;missing_data#missing-data-fillna&quot;&gt;fillna&lt;/a&gt; on the groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3da24a14dac99c2ce666c7fcf23f280f2f0a9bd" translate="yes" xml:space="preserve">
          <source>In this example, we&amp;rsquo;ll create a parent docstring normally (this is like &lt;code&gt;pandas.core.generic.NDFrame&lt;/code&gt;. Then we&amp;rsquo;ll have two children (like &lt;code&gt;pandas.core.series.Series&lt;/code&gt; and &lt;code&gt;pandas.core.frame.DataFrame&lt;/code&gt;). We&amp;rsquo;ll substitute the children&amp;rsquo;s class names in this docstring.</source>
          <target state="translated">В этом примере мы обычно создаем родительскую строку документации (это похоже на &lt;code&gt;pandas.core.generic.NDFrame&lt;/code&gt; . Затем у нас будет два дочерних &lt;code&gt;pandas.core.series.Series&lt;/code&gt; (например, pandas.core.series.Series и &lt;code&gt;pandas.core.frame.DataFrame&lt;/code&gt; ). Мы заменим имена детских классов в этой строке документации.</target>
        </trans-unit>
        <trans-unit id="bbfbfe1d873ec17ab2dac03fab01451c14e40df9" translate="yes" xml:space="preserve">
          <source>In this example, while the dtypes of all columns are changed, we show the results for the first 10 columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72373ffd4fe7734ddc860b3c260bb5bc238b113d" translate="yes" xml:space="preserve">
          <source>In this part of the tutorial, we will investigate how to speed up certain functions operating on pandas &lt;code&gt;DataFrames&lt;/code&gt; using three different techniques: Cython, Numba and &lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt;&lt;code&gt;pandas.eval()&lt;/code&gt;&lt;/a&gt;. We will see a speed improvement of ~200 when we use Cython and Numba on a test function operating row-wise on the &lt;code&gt;DataFrame&lt;/code&gt;. Using &lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt;&lt;code&gt;pandas.eval()&lt;/code&gt;&lt;/a&gt; we will speed up a sum by an order of ~2.</source>
          <target state="translated">В этой части руководства мы исследуем, как ускорить определенные функции, работающие в pandas &lt;code&gt;DataFrames&lt;/code&gt; , используя три различных метода: Cython, Numba и &lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt; &lt;code&gt;pandas.eval()&lt;/code&gt; &lt;/a&gt; . Мы увидим &lt;code&gt;DataFrame&lt;/code&gt; скорости на ~ 200, когда мы будем использовать Cython и Numba в тестовой функции, работающей по строкам в DataFrame . Используя &lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt; &lt;code&gt;pandas.eval()&lt;/code&gt; &lt;/a&gt; мы увеличим сумму примерно в 2 раза .</target>
        </trans-unit>
        <trans-unit id="9bf63141c08371784983bff76853f338b3b741d6" translate="yes" xml:space="preserve">
          <source>In this section, we will discuss missing (also referred to as NA) values in pandas.</source>
          <target state="translated">В этом разделе мы обсудим отсутствующие (также называемые АН)ценности в пандах.</target>
        </trans-unit>
        <trans-unit id="73225e5cff6b5571285560e386bca15e86dff2c4" translate="yes" xml:space="preserve">
          <source>In this section, we will focus on the final point: namely, how to slice, dice, and generally get and set subsets of pandas objects. The primary focus will be on Series and DataFrame as they have received more development attention in this area.</source>
          <target state="translated">В этом разделе мы остановимся на заключительном моменте,а именно,на том,как нарезать кубики,и вообще получить и установить подмножества объектов панд.Основное внимание будет сосредоточено на Series и DataFrame,так как они получили больше внимания при разработке в этой области.</target>
        </trans-unit>
        <trans-unit id="03a5b73370240444b3aa9f3ef282c53148b5a8a7" translate="yes" xml:space="preserve">
          <source>In this section, we will review frequently asked questions and examples. The column names and relevant column values are named to correspond with how this DataFrame will be pivoted in the answers below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76aae5e31e8e88b73aff1a30b64467dd9d3ff24" translate="yes" xml:space="preserve">
          <source>In this section, we will show what exactly we mean by &amp;ldquo;hierarchical&amp;rdquo; indexing and how it integrates with all of the pandas indexing functionality described above and in prior sections. Later, when discussing &lt;a href=&quot;groupby#groupby&quot;&gt;group by&lt;/a&gt; and &lt;a href=&quot;reshaping#reshaping&quot;&gt;pivoting and reshaping data&lt;/a&gt;, we&amp;rsquo;ll show non-trivial applications to illustrate how it aids in structuring data for analysis.</source>
          <target state="translated">В этом разделе мы покажем, что именно мы подразумеваем под &amp;laquo;иерархической&amp;raquo; индексацией и как она интегрируется со всеми функциями индексирования pandas, описанными выше и в предыдущих разделах. Позже, при обсуждении &lt;a href=&quot;groupby#groupby&quot;&gt;группы по&lt;/a&gt; и &lt;a href=&quot;reshaping#reshaping&quot;&gt;поворотной и видоизменения данных&lt;/a&gt; , мы покажем нетривиальные приложения , чтобы показать , как он помогает в структуризации данных для анализа.</target>
        </trans-unit>
        <trans-unit id="f47dd17ead344d61ee2c5373f8689404db3aa3d7" translate="yes" xml:space="preserve">
          <source>In this special case, &lt;code&gt;read_csv&lt;/code&gt; assumes that the first column is to be used as the index of the &lt;code&gt;DataFrame&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30b00491d28032f2327d689459c13f6ce6da19e" translate="yes" xml:space="preserve">
          <source>In your library code:</source>
          <target state="translated">В вашем библиотечном коде:</target>
        </trans-unit>
        <trans-unit id="db347a62c1cb84befcabc203e401873d7bf60b05" translate="yes" xml:space="preserve">
          <source>Include a short, self-contained Python snippet reproducing the problem. You can format the code nicely by using &lt;a href=&quot;http://github.github.com/github-flavored-markdown/&quot;&gt;GitHub Flavored Markdown&lt;/a&gt;:</source>
          <target state="translated">Включите короткий автономный фрагмент кода Python, воспроизводящий проблему. Вы можете красиво отформатировать код, используя &lt;a href=&quot;http://github.github.com/github-flavored-markdown/&quot;&gt;GitHub Flavored Markdown&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="3b691f63704db590222c5a5a428645689bef5660" translate="yes" xml:space="preserve">
          <source>Include boundaries.</source>
          <target state="translated">Включить границы.</target>
        </trans-unit>
        <trans-unit id="31a6ee06df15416ef3720c1aa78c55050baa48f0" translate="yes" xml:space="preserve">
          <source>Include index in resulting record array, stored in &amp;lsquo;index&amp;rsquo; field or using the index label, if set.</source>
          <target state="translated">Включить индекс в результирующий массив записей, хранящийся в поле 'index' или используя метку индекса, если она установлена.</target>
        </trans-unit>
        <trans-unit id="126f0c2a40a169ffec85464bf4d3a095399d9320" translate="yes" xml:space="preserve">
          <source>Include only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7b2669a3c04046d4fe20cebca986183f8d25ac" translate="yes" xml:space="preserve">
          <source>Include only &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;boolean&lt;/code&gt; data.</source>
          <target state="translated">Включите только данные типа &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; или &lt;code&gt;boolean&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ec733e2bb248ecf061bdc5fc52a0929cda839cd" translate="yes" xml:space="preserve">
          <source>Include only boolean columns. If None, will attempt to use everything, then use only boolean data. Not implemented for Series.</source>
          <target state="translated">Включая только булевые колонки.Если None,будет пытаться использовать все,то используйте только булевы данные.Не реализовано для Series.</target>
        </trans-unit>
        <trans-unit id="089a2b3c877830b57c8fdb29b364e82cc863914a" translate="yes" xml:space="preserve">
          <source>Include only float, int, boolean columns. If None, will attempt to use everything, then use only numeric data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b12a929622185e9bb288fead08323d30697638a" translate="yes" xml:space="preserve">
          <source>Include only float, int, boolean columns. If None, will attempt to use everything, then use only numeric data. Not implemented for Series.</source>
          <target state="translated">Включая только колонки float,int,boolean.Если None,будет пытаться использовать все,то используйте только числовые данные.Не реализовано для Series.</target>
        </trans-unit>
        <trans-unit id="ff085c898322da90e160c2330dcbbead8b3b2174" translate="yes" xml:space="preserve">
          <source>Include the full version string of &lt;em&gt;pandas&lt;/em&gt; and its dependencies. You can use the built-in function:</source>
          <target state="translated">Включите строку полной версии &lt;em&gt;pandas&lt;/em&gt; и ее зависимостей. Вы можете использовать встроенную функцию:</target>
        </trans-unit>
        <trans-unit id="bcf69b9cbc8ef695372516d0e93443e29183fb35" translate="yes" xml:space="preserve">
          <source>Include the index in the hash (if Series/DataFrame).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163b333f27b7f4615562825a8ccc5332d6454f10" translate="yes" xml:space="preserve">
          <source>Including a &lt;code&gt;flags&lt;/code&gt; argument when calling &lt;code&gt;replace&lt;/code&gt; with a compiled regular expression object will raise a &lt;code&gt;ValueError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff01bc684733280abdc6a33c3e1f0a40ff87a068" translate="yes" xml:space="preserve">
          <source>Including only categorical columns from a &lt;code&gt;DataFrame&lt;/code&gt; description.</source>
          <target state="translated">Включая только категориальные столбцы из описания &lt;code&gt;DataFrame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b121e08046c26a73fd33f3a182f76a2ff41c033" translate="yes" xml:space="preserve">
          <source>Including only numeric columns in a &lt;code&gt;DataFrame&lt;/code&gt; description.</source>
          <target state="translated">Включение только числовых столбцов в описание &lt;code&gt;DataFrame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d6a3ced182d9ff7c047d6e408a1ae0d73dfdb24" translate="yes" xml:space="preserve">
          <source>Including only string columns in a &lt;code&gt;DataFrame&lt;/code&gt; description.</source>
          <target state="translated">Включение только строковых столбцов в описание &lt;code&gt;DataFrame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13b5fc6793c568e32ad19498d5f921c75fa49a73" translate="yes" xml:space="preserve">
          <source>Increasingly, packages are being built on top of pandas to address specific needs in data preparation, analysis and visualization. This is encouraging because it means pandas is not only helping users to handle their data tasks but also that it provides a better starting point for developers to build powerful and more focused data tools. The creation of libraries that complement pandas&amp;rsquo; functionality also allows pandas development to remain focused around it&amp;rsquo;s original requirements.</source>
          <target state="translated">Все чаще пакеты создаются на основе pandas для удовлетворения конкретных потребностей в подготовке, анализе и визуализации данных. Это обнадеживает, потому что это означает, что pandas не только помогает пользователям обрабатывать их задачи с данными, но также предоставляет разработчикам лучшую отправную точку для создания мощных и более целенаправленных инструментов обработки данных. Создание библиотек, которые дополняют функциональность pandas, также позволяет разработке pandas сосредоточиться на своих исходных требованиях.</target>
        </trans-unit>
        <trans-unit id="6dcd27a303504423a9e88ac04a13ca65377d4179" translate="yes" xml:space="preserve">
          <source>Increasingly, packages are being built on top of pandas to address specific needs in data preparation, analysis and visualization. Vaex is a python library for Out-of-Core DataFrames (similar to Pandas), to visualize and explore big tabular datasets. It can calculate statistics such as mean, sum, count, standard deviation etc, on an N-dimensional grid up to a billion (10&lt;sup&gt;9&lt;/sup&gt;) objects/rows per second. Visualization is done using histograms, density plots and 3d volume rendering, allowing interactive exploration of big data. Vaex uses memory mapping, zero memory copy policy and lazy computations for best performance (no memory wasted).</source>
          <target state="translated">Все чаще пакеты создаются на основе pandas для удовлетворения конкретных потребностей в подготовке, анализе и визуализации данных. Vaex - это библиотека Python для фреймов данных Out-of-Core (аналогичная Pandas) для визуализации и изучения больших наборов данных в таблицах. Он может вычислять статистические данные, такие как среднее значение, сумма, количество, стандартное отклонение и т.д., на N-мерной сетке до миллиарда (10 &lt;sup&gt;9&lt;/sup&gt; ) объектов / строк в секунду. Визуализация выполняется с использованием гистограмм, графиков плотности и трехмерного объемного рендеринга, что позволяет интерактивно исследовать большие данные. Vaex использует отображение памяти, политику нулевого копирования памяти и ленивые вычисления для лучшей производительности (без потери памяти).</target>
        </trans-unit>
        <trans-unit id="26db5789a3db307320ead6289a9397c138320990" translate="yes" xml:space="preserve">
          <source>Increment to use from the tseries module or time rule (e.g. &amp;lsquo;EOM&amp;rsquo;)</source>
          <target state="translated">Приращение для использования из модуля tseries или правила времени (например, 'EOM')</target>
        </trans-unit>
        <trans-unit id="74f0dd9f3b0843b773618aee7a8ce2a25d60d752" translate="yes" xml:space="preserve">
          <source>Increment to use from the tseries module or time rule expressed as a string (e.g. &amp;lsquo;EOM&amp;rsquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5df5508ba7385b434e62a6961ca6857f44c6b0" translate="yes" xml:space="preserve">
          <source>Increment to use from time series API (e.g. &amp;lsquo;M&amp;rsquo; or BDay()).</source>
          <target state="translated">Приращение для использования из API временных рядов (например, &amp;laquo;M&amp;raquo; или BDay ()).</target>
        </trans-unit>
        <trans-unit id="231c7f38ec6d94dc007935acbe384cf0282d72db" translate="yes" xml:space="preserve">
          <source>Increments between beginning of month dates.</source>
          <target state="translated">Увеличение между датами начала месяца.</target>
        </trans-unit>
        <trans-unit id="b95c16a9ac51c0f7e39f7810c8313f53c219821f" translate="yes" xml:space="preserve">
          <source>Increments between end of month dates.</source>
          <target state="translated">Увеличение между датами окончания месяца.</target>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="7affb9402f6d37743f08a62c03631098654cdc31" translate="yes" xml:space="preserve">
          <source>Index (same behavior as &lt;code&gt;df.reindex&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a44add6bb3ea93789807b6f66b9387cf8a079a5" translate="yes" xml:space="preserve">
          <source>Index : when the input is an Index</source>
          <target state="translated">Индекс:когда входом является Индекс</target>
        </trans-unit>
        <trans-unit id="82103998d207b862a86dc4cbf6b45d479ad4ef92" translate="yes" xml:space="preserve">
          <source>Index and Column names include &lt;code&gt;index_name&lt;/code&gt; and &lt;code&gt;level&amp;lt;k&amp;gt;&lt;/code&gt; where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c8a552055cf4b1af8a6fef51686733239357ecb" translate="yes" xml:space="preserve">
          <source>Index and Column names include &lt;code&gt;index_name&lt;/code&gt; and &lt;code&gt;level&amp;lt;k&amp;gt;&lt;/code&gt; where &lt;code&gt;k&lt;/code&gt; is its level in a MultiIndex</source>
          <target state="translated">Имена индекса и столбца включают &lt;code&gt;index_name&lt;/code&gt; и &lt;code&gt;level&amp;lt;k&amp;gt;&lt;/code&gt; где &lt;code&gt;k&lt;/code&gt; - его уровень в MultiIndex</target>
        </trans-unit>
        <trans-unit id="e51d371566560cba756deba05c83ffca1dc839f5" translate="yes" xml:space="preserve">
          <source>Index and header can be specified via the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6ac17dc682d2c38066a77b16e976ff3c2ce09c" translate="yes" xml:space="preserve">
          <source>Index and header can be specified via the &lt;code&gt;index_col&lt;/code&gt; and &lt;code&gt;header&lt;/code&gt; arguments</source>
          <target state="translated">Индекс и заголовок можно указать с помощью аргументов &lt;code&gt;index_col&lt;/code&gt; и &lt;code&gt;header&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2587f44432040cac42b068d4fe1ec270fddbdd32" translate="yes" xml:space="preserve">
          <source>Index aware interpolation is available via the &lt;code&gt;method&lt;/code&gt; keyword:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34faad5d858d4b7e89884a89d083ed8f33017377" translate="yes" xml:space="preserve">
          <source>Index based on an underlying &lt;a href=&quot;api/pandas.categorical#pandas.Categorical&quot;&gt;&lt;code&gt;Categorical&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Индекс, основанный на базовом &lt;a href=&quot;api/pandas.categorical#pandas.Categorical&quot;&gt; &lt;code&gt;Categorical&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="af92f271aa69cd2c937dff42ef9cde6ee37cdfe5" translate="yes" xml:space="preserve">
          <source>Index based on an underlying &lt;a href=&quot;pandas.categorical#pandas.Categorical&quot;&gt;&lt;code&gt;Categorical&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Индекс, основанный на базовом &lt;a href=&quot;pandas.categorical#pandas.Categorical&quot;&gt; &lt;code&gt;Categorical&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9d4a7200e79d65773386087c17ce85d75fcc7f11" translate="yes" xml:space="preserve">
          <source>Index columns and trailing delimiters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946046b78b463294cbaa6a4234c5d937620c8c0f" translate="yes" xml:space="preserve">
          <source>Index for Interval objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adcb0c3d4f7b1a49941419accde10d7a93229a9a" translate="yes" xml:space="preserve">
          <source>Index for categorical data.</source>
          <target state="translated">Индекс для категориальных данных.</target>
        </trans-unit>
        <trans-unit id="3a188639fe43a0a79a0742948b8551c1bd78cba5" translate="yes" xml:space="preserve">
          <source>Index implementing a monotonic integer range.</source>
          <target state="translated">Индекс,реализующий монотонный целочисленный диапазон.</target>
        </trans-unit>
        <trans-unit id="e6e4731fc450fe8cce633fcded5cb9d920523b49" translate="yes" xml:space="preserve">
          <source>Index into each element (retrieve i-th element)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842f096c24508918264d80e1c30ea189df13e9e8" translate="yes" xml:space="preserve">
          <source>Index keys are boxed to Period objects which carries the metadata (eg, frequency information).</source>
          <target state="translated">Индексные ключи помечены в поле Период объекты,которые несут в себе метаданные (например,частотную информацию).</target>
        </trans-unit>
        <trans-unit id="e277bfe290c28ec18c340b1a44e035c492f87f2b" translate="yes" xml:space="preserve">
          <source>Index label cells include</source>
          <target state="translated">Ячейки индексной этикетки включают</target>
        </trans-unit>
        <trans-unit id="fdca8fb2dd0723d97ecfeb0107e6b5a8a3a1793b" translate="yes" xml:space="preserve">
          <source>Index labels to drop.</source>
          <target state="translated">Индексные этикетки сбрасывать.</target>
        </trans-unit>
        <trans-unit id="e4d27cbaf08eb67eb8b633eb503847e596a0b5c8" translate="yes" xml:space="preserve">
          <source>Index level names may be specified as keys directly to &lt;code&gt;groupby&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ea719cc1174f2215272b792d2c8a5c2526d4eb" translate="yes" xml:space="preserve">
          <source>Index level names may be supplied as keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1487150ef120bbc3db423a49593f8c76c50d56" translate="yes" xml:space="preserve">
          <source>Index level names, if specified, must be strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb05c23d2119d08953101523abd6c4d02b724e9d" translate="yes" xml:space="preserve">
          <source>Index levels may also be specified by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d56a166da3ce50aea7c651c2cdb629a5e0eaea" translate="yes" xml:space="preserve">
          <source>Index needs to be ordered and unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0666ee788b7f8718ba82db947fe0d30b9c20f60a" translate="yes" xml:space="preserve">
          <source>Index objects</source>
          <target state="translated">Объекты индекса</target>
        </trans-unit>
        <trans-unit id="f53cbdff8dd5cb499d7d24d1af81e5a33703f965" translate="yes" xml:space="preserve">
          <source>Index of &lt;a href=&quot;pandas.categorical#pandas.Categorical&quot;&gt;&lt;code&gt;Categorical&lt;/code&gt;&lt;/a&gt; s.</source>
          <target state="translated">Указатель &lt;a href=&quot;pandas.categorical#pandas.Categorical&quot;&gt; &lt;code&gt;Categorical&lt;/code&gt; &lt;/a&gt; с.</target>
        </trans-unit>
        <trans-unit id="56770e0bd43ee73f2eba8f0a730ea0c8e7920d9e" translate="yes" xml:space="preserve">
          <source>Index of Period data.</source>
          <target state="translated">Индекс данных за период.</target>
        </trans-unit>
        <trans-unit id="9a66650f241bc1ae4f60df99a17e67b4b5bec78d" translate="yes" xml:space="preserve">
          <source>Index of datetime64 data.</source>
          <target state="translated">Индекс времени64 данных.</target>
        </trans-unit>
        <trans-unit id="8ca96bcaaba03554972454c50b497525d42f034c" translate="yes" xml:space="preserve">
          <source>Index of day names.</source>
          <target state="translated">Индекс имен дней.</target>
        </trans-unit>
        <trans-unit id="faadd88f578df6cee31871b7dda874b805055e46" translate="yes" xml:space="preserve">
          <source>Index of formatted strings.</source>
          <target state="translated">Индекс отформатированных строк.</target>
        </trans-unit>
        <trans-unit id="583e9f80010c3027edc79dd38d334f00da629044" translate="yes" xml:space="preserve">
          <source>Index of int64 data.</source>
          <target state="translated">Индекс данных int64.</target>
        </trans-unit>
        <trans-unit id="bc67cbdd4848572296e5148b9e3e23202fe8ceeb" translate="yes" xml:space="preserve">
          <source>Index of label.</source>
          <target state="translated">Индекс этикетки.</target>
        </trans-unit>
        <trans-unit id="04d5ecedec5046742ff05155de5e428f370ea349" translate="yes" xml:space="preserve">
          <source>Index of min/max values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa0e28586d25c85134d44435d18bc8a10b262f8" translate="yes" xml:space="preserve">
          <source>Index of month names.</source>
          <target state="translated">Индекс названий месяцев.</target>
        </trans-unit>
        <trans-unit id="098d3068e27babe7c7cd9fc68c4d3474bceb865d" translate="yes" xml:space="preserve">
          <source>Index of resulting Series. If None, defaults to original index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7281850e680339a57853dba6d9c857e51597144f" translate="yes" xml:space="preserve">
          <source>Index of the Series.</source>
          <target state="translated">Индекс серии.</target>
        </trans-unit>
        <trans-unit id="1785b2774d37659f913018e41ecbb4a3b8d3d7e5" translate="yes" xml:space="preserve">
          <source>Index of the element that needs to be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f9f6a193b584c9a8e98b4efaf44235dd250eff" translate="yes" xml:space="preserve">
          <source>Index of the same type for a DatetimeIndex or TimedeltaIndex, or a Series with the same index for a Series.</source>
          <target state="translated">Индекс одного и того же типа для DatetimeIndex или TimedeltaIndex,или Серия с одним и тем же индексом для Серии.</target>
        </trans-unit>
        <trans-unit id="019826cdb3fb98643542304c348378eec49fdfb1" translate="yes" xml:space="preserve">
          <source>Index of timedelta64 data.</source>
          <target state="translated">Индекс данных timedelta64.</target>
        </trans-unit>
        <trans-unit id="fbd9313d6091ac96c839a913f1173699a8ebc6ec" translate="yes" xml:space="preserve">
          <source>Index or MultiIndex</source>
          <target state="translated">Индекс или МультиИндекс</target>
        </trans-unit>
        <trans-unit id="17ea23cb6e41bf5302e68e1f20af90b0b743eae6" translate="yes" xml:space="preserve">
          <source>Index or None</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c875ef463fe284c143c8419c48f808383a7de6f9" translate="yes" xml:space="preserve">
          <source>Index or column labels to drop.</source>
          <target state="translated">Наклейки на индексы или столбцы опускать.</target>
        </trans-unit>
        <trans-unit id="366dfa4b94a62899d16072768c9382cb21b4d11d" translate="yes" xml:space="preserve">
          <source>Index refer to new object which is a copy of this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ec8b0d3c027864c82264f650e37bc45231f7c7" translate="yes" xml:space="preserve">
          <source>Index should be similar to one of the columns in this one. If a Series is passed, its name attribute must be set, and that will be used as the column name in the resulting joined DataFrame.</source>
          <target state="translated">Индекс должен быть аналогичен одному из столбцов в этом столбце.Если Серия передана,то должен быть установлен ее атрибут name,который будет использоваться в качестве имени столбца в результирующем объединенном фрейме DataFrame.</target>
        </trans-unit>
        <trans-unit id="6ea0c4acf4b23e40bdc6027bb925e7ece4846f20" translate="yes" xml:space="preserve">
          <source>Index to direct ranking.</source>
          <target state="translated">Индекс к прямому ранжированию.</target>
        </trans-unit>
        <trans-unit id="e4e1575f2335a404e29fd2d44ad28ac2eb63c3c0" translate="yes" xml:space="preserve">
          <source>Index to use for resulting frame. Will default to RangeIndex if no indexing information part of input data and no index provided</source>
          <target state="translated">Индекс для результирующего кадра.По умолчанию RangeIndex будет использоваться при отсутствии индексирующей информации во входных данных и при отсутствии предоставленного индекса.</target>
        </trans-unit>
        <trans-unit id="501364aae54ad57a548ada79dd2d3a5140378e60" translate="yes" xml:space="preserve">
          <source>Index to use for resulting frame. Will default to RangeIndex if no indexing information part of input data and no index provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eccb92925bc3929eabb42f52bbdf91059031375" translate="yes" xml:space="preserve">
          <source>Index types</source>
          <target state="translated">Типы индексов</target>
        </trans-unit>
        <trans-unit id="132263ca33fe499e1fefbd5f4ab52b57901c7c9d" translate="yes" xml:space="preserve">
          <source>Index will be included as the first field of the record array if requested.</source>
          <target state="translated">При запросе индекс будет включен в качестве первого поля массива записей.</target>
        </trans-unit>
        <trans-unit id="f4acecef33c224b834072adfb597a584368d0111" translate="yes" xml:space="preserve">
          <source>Index with datetime64 data.</source>
          <target state="translated">Индекс с данными datetime64.</target>
        </trans-unit>
        <trans-unit id="d0f9ff03291ad7359cbe79c48807f59ae4bcb3d2" translate="yes" xml:space="preserve">
          <source>Index with the MultiIndex data represented in Tuples.</source>
          <target state="translated">Индекс с данными MultiIndex,представленными в кортежах.</target>
        </trans-unit>
        <trans-unit id="2ae08452578221ac3ac96025e8fed3975af4b6fa" translate="yes" xml:space="preserve">
          <source>Index with values cast to specified dtype.</source>
          <target state="translated">Индекс со значениями,приведенными к указанному типу d.</target>
        </trans-unit>
        <trans-unit id="6f89f1a8c4667749cd92a6f58c4201c42a229c3b" translate="yes" xml:space="preserve">
          <source>Index without duplicates</source>
          <target state="translated">Индекс без дубликатов</target>
        </trans-unit>
        <trans-unit id="cdd71cd80c9d290c9a468dd9efa26b99b7ff2f8e" translate="yes" xml:space="preserve">
          <source>Index.T</source>
          <target state="translated">Index.T</target>
        </trans-unit>
        <trans-unit id="2db29e878e755947750a5416d6b29533d2d0f198" translate="yes" xml:space="preserve">
          <source>Index.all()</source>
          <target state="translated">Index.all()</target>
        </trans-unit>
        <trans-unit id="d42ccb1f02636a49f8b538e866d20b0f09ff7c4b" translate="yes" xml:space="preserve">
          <source>Index.any()</source>
          <target state="translated">Index.any()</target>
        </trans-unit>
        <trans-unit id="6643fe7b7406dbfa6af1b4565aeb2bbea3dac495" translate="yes" xml:space="preserve">
          <source>Index.append()</source>
          <target state="translated">Index.append()</target>
        </trans-unit>
        <trans-unit id="42a541775b6a11203a670551f7268a4814869896" translate="yes" xml:space="preserve">
          <source>Index.argmax()</source>
          <target state="translated">Index.argmax()</target>
        </trans-unit>
        <trans-unit id="87d989474d5559d3b36dd5800160bf3f9656a45e" translate="yes" xml:space="preserve">
          <source>Index.argmin()</source>
          <target state="translated">Index.argmin()</target>
        </trans-unit>
        <trans-unit id="8f552266a485dababae443a6fae2c3e9e83e11d1" translate="yes" xml:space="preserve">
          <source>Index.argsort()</source>
          <target state="translated">Index.argsort()</target>
        </trans-unit>
        <trans-unit id="a1fdb30d81bf0936fabfcab27c0303027f81892f" translate="yes" xml:space="preserve">
          <source>Index.array</source>
          <target state="translated">Index.array</target>
        </trans-unit>
        <trans-unit id="eed754ce326634c3140873727f5ea593fe2f35c4" translate="yes" xml:space="preserve">
          <source>Index.asi8</source>
          <target state="translated">Index.asi8</target>
        </trans-unit>
        <trans-unit id="a15053de986d6afda7ed2cca11daa3775c96cc23" translate="yes" xml:space="preserve">
          <source>Index.asof</source>
          <target state="translated">Index.asof</target>
        </trans-unit>
        <trans-unit id="d2cd29cb21401d11ea21f4cb41f8076e382966e6" translate="yes" xml:space="preserve">
          <source>Index.asof()</source>
          <target state="translated">Index.asof()</target>
        </trans-unit>
        <trans-unit id="199c20dd07d482f95cbf220ca2a7f42e74b379ba" translate="yes" xml:space="preserve">
          <source>Index.asof_locs()</source>
          <target state="translated">Index.asof_locs()</target>
        </trans-unit>
        <trans-unit id="41fd7d714455935421f5f4d9b47b8d2026a11eba" translate="yes" xml:space="preserve">
          <source>Index.astype()</source>
          <target state="translated">Index.astype()</target>
        </trans-unit>
        <trans-unit id="9695198546dd84741c60d2dc2e5f7927808bd80a" translate="yes" xml:space="preserve">
          <source>Index.base</source>
          <target state="translated">Index.base</target>
        </trans-unit>
        <trans-unit id="df3ceb7d36bffd44f156dbe30a939980f01c33fa" translate="yes" xml:space="preserve">
          <source>Index.contains()</source>
          <target state="translated">Index.contains()</target>
        </trans-unit>
        <trans-unit id="712612b1213ae7041ba7988df4918024034c21a1" translate="yes" xml:space="preserve">
          <source>Index.copy()</source>
          <target state="translated">Index.copy()</target>
        </trans-unit>
        <trans-unit id="7ad80e864f56fa9470edbc146fd372634069a3f4" translate="yes" xml:space="preserve">
          <source>Index.data</source>
          <target state="translated">Index.data</target>
        </trans-unit>
        <trans-unit id="ec91ad1c05256197f8c60f2da281fa396f0c6d9a" translate="yes" xml:space="preserve">
          <source>Index.delete()</source>
          <target state="translated">Index.delete()</target>
        </trans-unit>
        <trans-unit id="faf5b9b1f8570d369d4feb19d5c7852044b85934" translate="yes" xml:space="preserve">
          <source>Index.difference()</source>
          <target state="translated">Index.difference()</target>
        </trans-unit>
        <trans-unit id="42e7f9946dde54a45485adc101d97d6b16f7f409" translate="yes" xml:space="preserve">
          <source>Index.drop()</source>
          <target state="translated">Index.drop()</target>
        </trans-unit>
        <trans-unit id="0be051cd040eb2ec264d5b55580f51c8f599142b" translate="yes" xml:space="preserve">
          <source>Index.drop_duplicates()</source>
          <target state="translated">Index.drop_duplicates()</target>
        </trans-unit>
        <trans-unit id="2b12ad26e40306a335584618e9e8765839b15473" translate="yes" xml:space="preserve">
          <source>Index.droplevel()</source>
          <target state="translated">Index.droplevel()</target>
        </trans-unit>
        <trans-unit id="ed56b4f3a37cb253fdbe696af0f9d3014c831a3f" translate="yes" xml:space="preserve">
          <source>Index.dropna()</source>
          <target state="translated">Index.dropna()</target>
        </trans-unit>
        <trans-unit id="2b62528d4f5863f0eeed7a099cc5534488cbd1d7" translate="yes" xml:space="preserve">
          <source>Index.dtype</source>
          <target state="translated">Index.dtype</target>
        </trans-unit>
        <trans-unit id="4513ac87f55238987e3a62cfbcedb7736932e245" translate="yes" xml:space="preserve">
          <source>Index.dtype_str</source>
          <target state="translated">Index.dtype_str</target>
        </trans-unit>
        <trans-unit id="d126bba86106473c9aa6a8b507775593026a97fd" translate="yes" xml:space="preserve">
          <source>Index.duplicated()</source>
          <target state="translated">Index.duplicated()</target>
        </trans-unit>
        <trans-unit id="5d5ea543fea0e857f502b16d3d674ccfb9b37508" translate="yes" xml:space="preserve">
          <source>Index.empty</source>
          <target state="translated">Index.empty</target>
        </trans-unit>
        <trans-unit id="bbdd3262c5c824b5fc57e63e2024b274b8943447" translate="yes" xml:space="preserve">
          <source>Index.equals()</source>
          <target state="translated">Index.equals()</target>
        </trans-unit>
        <trans-unit id="7537cb7f2fb87bd7032798127b3fa14e4a87094c" translate="yes" xml:space="preserve">
          <source>Index.factorize()</source>
          <target state="translated">Index.factorize()</target>
        </trans-unit>
        <trans-unit id="3ad6d001e975cf52226968186ab8b929f1b2f34f" translate="yes" xml:space="preserve">
          <source>Index.fillna()</source>
          <target state="translated">Index.fillna()</target>
        </trans-unit>
        <trans-unit id="ca4c733dafa063111d3e1917deb861415c7dca7c" translate="yes" xml:space="preserve">
          <source>Index.flags</source>
          <target state="translated">Index.flags</target>
        </trans-unit>
        <trans-unit id="af04b167762ec954b256ede5966e65f06105980a" translate="yes" xml:space="preserve">
          <source>Index.format()</source>
          <target state="translated">Index.format()</target>
        </trans-unit>
        <trans-unit id="1a9aa2833bb0c1cc0b29b18ea52b274174f03095" translate="yes" xml:space="preserve">
          <source>Index.get_duplicates()</source>
          <target state="translated">Index.get_duplicates()</target>
        </trans-unit>
        <trans-unit id="86e80431dc8f6826d3a34fe6db19828973819c93" translate="yes" xml:space="preserve">
          <source>Index.get_indexer()</source>
          <target state="translated">Index.get_indexer()</target>
        </trans-unit>
        <trans-unit id="f04d404f4cdf74490fb1f5a9104d19eb0d5f6e6f" translate="yes" xml:space="preserve">
          <source>Index.get_indexer_for()</source>
          <target state="translated">Index.get_indexer_for()</target>
        </trans-unit>
        <trans-unit id="5590565b7ccce2eef74c22a12c42c9beb46890de" translate="yes" xml:space="preserve">
          <source>Index.get_indexer_non_unique()</source>
          <target state="translated">Index.get_indexer_non_unique()</target>
        </trans-unit>
        <trans-unit id="45e66bf229ef2853f0289b5ac5364d6839ea8b89" translate="yes" xml:space="preserve">
          <source>Index.get_level_values()</source>
          <target state="translated">Index.get_level_values()</target>
        </trans-unit>
        <trans-unit id="40e81e0c37a06638511ca2044947682ad788e95e" translate="yes" xml:space="preserve">
          <source>Index.get_loc()</source>
          <target state="translated">Index.get_loc()</target>
        </trans-unit>
        <trans-unit id="e06f31d250898f5e50f5313baa35f7d686f97ea7" translate="yes" xml:space="preserve">
          <source>Index.get_slice_bound()</source>
          <target state="translated">Index.get_slice_bound()</target>
        </trans-unit>
        <trans-unit id="a017c762db08e6652e606ada349388f6358ea1c0" translate="yes" xml:space="preserve">
          <source>Index.get_value()</source>
          <target state="translated">Index.get_value()</target>
        </trans-unit>
        <trans-unit id="3412f5093e174de9e668739be7bdaadbd39eb65d" translate="yes" xml:space="preserve">
          <source>Index.get_values()</source>
          <target state="translated">Index.get_values()</target>
        </trans-unit>
        <trans-unit id="5c64f9e8369fe01023f29790c28cdfdaf854182f" translate="yes" xml:space="preserve">
          <source>Index.groupby()</source>
          <target state="translated">Index.groupby()</target>
        </trans-unit>
        <trans-unit id="6d0086d9449b0f2970b1a1002559afa8be4edcc0" translate="yes" xml:space="preserve">
          <source>Index.has_duplicates</source>
          <target state="translated">Index.has_duplicates</target>
        </trans-unit>
        <trans-unit id="609ed6a9294ca8a4c59b782af30bcb4bcbfa4334" translate="yes" xml:space="preserve">
          <source>Index.hasnans</source>
          <target state="translated">Index.hasnans</target>
        </trans-unit>
        <trans-unit id="256e409ba208654bae279d531c4437036a30c3c6" translate="yes" xml:space="preserve">
          <source>Index.holds_integer()</source>
          <target state="translated">Index.holds_integer()</target>
        </trans-unit>
        <trans-unit id="27c912b1b841464548a4368b28293c6998002fa6" translate="yes" xml:space="preserve">
          <source>Index.identical()</source>
          <target state="translated">Index.identical()</target>
        </trans-unit>
        <trans-unit id="0d9cd7f3b930250338bd29771718bdadf9c52edc" translate="yes" xml:space="preserve">
          <source>Index.inferred_type</source>
          <target state="translated">Index.inferred_type</target>
        </trans-unit>
        <trans-unit id="a7c9b79b50642bfe91d87a4142b36f2acec3f301" translate="yes" xml:space="preserve">
          <source>Index.insert()</source>
          <target state="translated">Index.insert()</target>
        </trans-unit>
        <trans-unit id="383740534f674f58776d2a1d93221a9eecf0d257" translate="yes" xml:space="preserve">
          <source>Index.intersection()</source>
          <target state="translated">Index.intersection()</target>
        </trans-unit>
        <trans-unit id="cf31e7ef599ab41687ad8068a1433fd6b3634170" translate="yes" xml:space="preserve">
          <source>Index.is_()</source>
          <target state="translated">Index.is_()</target>
        </trans-unit>
        <trans-unit id="32e7b9aee15ec011aea6101aa6fd4fe3371b0113" translate="yes" xml:space="preserve">
          <source>Index.is_all_dates</source>
          <target state="translated">Index.is_all_dates</target>
        </trans-unit>
        <trans-unit id="518a358e7c6917d3e80097c35681c703d8cda02b" translate="yes" xml:space="preserve">
          <source>Index.is_boolean()</source>
          <target state="translated">Index.is_boolean()</target>
        </trans-unit>
        <trans-unit id="4ef0bbc93946d57f4d3c198be80d494d743e92ed" translate="yes" xml:space="preserve">
          <source>Index.is_categorical()</source>
          <target state="translated">Index.is_categorical()</target>
        </trans-unit>
        <trans-unit id="e422be1fa0c5049f72e6fcf32c4cd90a6b79db36" translate="yes" xml:space="preserve">
          <source>Index.is_floating()</source>
          <target state="translated">Index.is_floating()</target>
        </trans-unit>
        <trans-unit id="eedd61d66278556890bd1ef4984458d134824180" translate="yes" xml:space="preserve">
          <source>Index.is_integer()</source>
          <target state="translated">Index.is_integer()</target>
        </trans-unit>
        <trans-unit id="3449dc3646f5663091d66253c629e81ea33613a4" translate="yes" xml:space="preserve">
          <source>Index.is_interval()</source>
          <target state="translated">Index.is_interval()</target>
        </trans-unit>
        <trans-unit id="91565ce426e539ec67932b0347b377b031b9adc0" translate="yes" xml:space="preserve">
          <source>Index.is_lexsorted_for_tuple()</source>
          <target state="translated">Index.is_lexsorted_for_tuple()</target>
        </trans-unit>
        <trans-unit id="1093e68ed67b6291a2f3e105590479a859fe584f" translate="yes" xml:space="preserve">
          <source>Index.is_mixed()</source>
          <target state="translated">Index.is_mixed()</target>
        </trans-unit>
        <trans-unit id="e81c8d4943551219dae0256b5fac5fa8d60fe8c3" translate="yes" xml:space="preserve">
          <source>Index.is_monotonic</source>
          <target state="translated">Index.is_monotonic</target>
        </trans-unit>
        <trans-unit id="234edfe9fa6e9d453a6c5f2296f7489cbdbcb562" translate="yes" xml:space="preserve">
          <source>Index.is_monotonic_decreasing</source>
          <target state="translated">Index.is_monotonic_decreasing</target>
        </trans-unit>
        <trans-unit id="32e344e2f5d4359c74e4c5388e4e65939090fef2" translate="yes" xml:space="preserve">
          <source>Index.is_monotonic_increasing</source>
          <target state="translated">Index.is_monotonic_increasing</target>
        </trans-unit>
        <trans-unit id="178025556525fb6fbfce91b30d313f3f582c2a97" translate="yes" xml:space="preserve">
          <source>Index.is_numeric()</source>
          <target state="translated">Index.is_numeric()</target>
        </trans-unit>
        <trans-unit id="3cc6d8a931c9fee208b8f3cf19d76d713c89dc5d" translate="yes" xml:space="preserve">
          <source>Index.is_object()</source>
          <target state="translated">Index.is_object()</target>
        </trans-unit>
        <trans-unit id="4525d0b8709d619a431b65c20da8bc6ba09b1a44" translate="yes" xml:space="preserve">
          <source>Index.is_type_compatible()</source>
          <target state="translated">Index.is_type_compatible()</target>
        </trans-unit>
        <trans-unit id="6740ddea5faa07de307632b937a998c94ca6a63a" translate="yes" xml:space="preserve">
          <source>Index.is_unique</source>
          <target state="translated">Index.is_unique</target>
        </trans-unit>
        <trans-unit id="674032d065981e78e8cd136b81b44eb45a598207" translate="yes" xml:space="preserve">
          <source>Index.isin()</source>
          <target state="translated">Index.isin()</target>
        </trans-unit>
        <trans-unit id="8f9d27858d48386a4761bc707ce7819b553d0bc3" translate="yes" xml:space="preserve">
          <source>Index.isna()</source>
          <target state="translated">Index.isna()</target>
        </trans-unit>
        <trans-unit id="5d851a0e9d76585e1b7920ebbb548a67d160c48a" translate="yes" xml:space="preserve">
          <source>Index.isnull()</source>
          <target state="translated">Index.isnull()</target>
        </trans-unit>
        <trans-unit id="c8892d9fcf76b93c0f0f4c39d6048b496935f67b" translate="yes" xml:space="preserve">
          <source>Index.item()</source>
          <target state="translated">Index.item()</target>
        </trans-unit>
        <trans-unit id="e8ea8d058133355dab3f96a87fc9ec7429cc9203" translate="yes" xml:space="preserve">
          <source>Index.itemsize</source>
          <target state="translated">Index.itemsize</target>
        </trans-unit>
        <trans-unit id="8ab0214eec07aa3bc9fcd14199b90eb2806c2746" translate="yes" xml:space="preserve">
          <source>Index.join()</source>
          <target state="translated">Index.join()</target>
        </trans-unit>
        <trans-unit id="b45fb2874f4e6a47bc1a8c669598c02756198ff8" translate="yes" xml:space="preserve">
          <source>Index.map()</source>
          <target state="translated">Index.map()</target>
        </trans-unit>
        <trans-unit id="bf243747f281253b63548f651a488e9104e5566e" translate="yes" xml:space="preserve">
          <source>Index.max()</source>
          <target state="translated">Index.max()</target>
        </trans-unit>
        <trans-unit id="dad05f0e4cf78f12f0df0617b2eca51ad76f1e3e" translate="yes" xml:space="preserve">
          <source>Index.memory_usage()</source>
          <target state="translated">Index.memory_usage()</target>
        </trans-unit>
        <trans-unit id="6f3ff971904fc6d7253ec3e53ce502d7c2bb01b0" translate="yes" xml:space="preserve">
          <source>Index.min()</source>
          <target state="translated">Index.min()</target>
        </trans-unit>
        <trans-unit id="a81409d1833143080fa7467f35ac07337a7dc88b" translate="yes" xml:space="preserve">
          <source>Index.name</source>
          <target state="translated">Index.name</target>
        </trans-unit>
        <trans-unit id="0967056855c1ae1ff95d670362e8b9cb745929aa" translate="yes" xml:space="preserve">
          <source>Index.names</source>
          <target state="translated">Index.names</target>
        </trans-unit>
        <trans-unit id="9b8bbf4a1d3548f84736a16d908199ad102ca7d1" translate="yes" xml:space="preserve">
          <source>Index.nbytes</source>
          <target state="translated">Index.nbytes</target>
        </trans-unit>
        <trans-unit id="015335b73fb556a0a95f7477349f31835996bc0e" translate="yes" xml:space="preserve">
          <source>Index.ndim</source>
          <target state="translated">Index.ndim</target>
        </trans-unit>
        <trans-unit id="1d16a9b86b35376b0fe2ceb694e880dccd624087" translate="yes" xml:space="preserve">
          <source>Index.nlevels</source>
          <target state="translated">Index.nlevels</target>
        </trans-unit>
        <trans-unit id="7aa616075b64c7fe50d3485e7309af78d33685e4" translate="yes" xml:space="preserve">
          <source>Index.notna()</source>
          <target state="translated">Index.notna()</target>
        </trans-unit>
        <trans-unit id="c054c04dd3852d7befee485647c33564f0e9c6de" translate="yes" xml:space="preserve">
          <source>Index.notnull()</source>
          <target state="translated">Index.notnull()</target>
        </trans-unit>
        <trans-unit id="95141a09ec236ad88338a788ae9bda71d9f7b6ab" translate="yes" xml:space="preserve">
          <source>Index.nunique()</source>
          <target state="translated">Index.nunique()</target>
        </trans-unit>
        <trans-unit id="732ef5ab848fd1322c65183d205ae49fe28c4ac1" translate="yes" xml:space="preserve">
          <source>Index.putmask()</source>
          <target state="translated">Index.putmask()</target>
        </trans-unit>
        <trans-unit id="0ed3c46ffc0bac1516958f6f397676c802f24042" translate="yes" xml:space="preserve">
          <source>Index.ravel()</source>
          <target state="translated">Index.ravel()</target>
        </trans-unit>
        <trans-unit id="a1497db1d34f7e9354a66c83ae2d2ac605c6bdd8" translate="yes" xml:space="preserve">
          <source>Index.reindex()</source>
          <target state="translated">Index.reindex()</target>
        </trans-unit>
        <trans-unit id="01e1d0c95c6feb54b63adae1c6464c50b621266b" translate="yes" xml:space="preserve">
          <source>Index.rename()</source>
          <target state="translated">Index.rename()</target>
        </trans-unit>
        <trans-unit id="77c10629020e8a6aa514d1106ba620916dac587c" translate="yes" xml:space="preserve">
          <source>Index.repeat()</source>
          <target state="translated">Index.repeat()</target>
        </trans-unit>
        <trans-unit id="d69eefbd97fa6081331925aba573779e7e832287" translate="yes" xml:space="preserve">
          <source>Index.searchsorted()</source>
          <target state="translated">Index.searchsorted()</target>
        </trans-unit>
        <trans-unit id="a57478d81d0711e85d7c2a0858e822448ec6cc93" translate="yes" xml:space="preserve">
          <source>Index.set_names()</source>
          <target state="translated">Index.set_names()</target>
        </trans-unit>
        <trans-unit id="624e7ac5391fcc29bb760b6f942218dfa03b0b17" translate="yes" xml:space="preserve">
          <source>Index.set_value()</source>
          <target state="translated">Index.set_value()</target>
        </trans-unit>
        <trans-unit id="9c921b4b894047ddf6a39ab0881e37296631f609" translate="yes" xml:space="preserve">
          <source>Index.shape</source>
          <target state="translated">Index.shape</target>
        </trans-unit>
        <trans-unit id="46400b31e771f708ca74d273f325af855ea6d991" translate="yes" xml:space="preserve">
          <source>Index.shift()</source>
          <target state="translated">Index.shift()</target>
        </trans-unit>
        <trans-unit id="472cefee5f15b86396f78a3a8e6aea60b8a75015" translate="yes" xml:space="preserve">
          <source>Index.size</source>
          <target state="translated">Index.size</target>
        </trans-unit>
        <trans-unit id="1df9304b1390f9267e3c387c34aac0979af35b7e" translate="yes" xml:space="preserve">
          <source>Index.slice_indexer()</source>
          <target state="translated">Index.slice_indexer()</target>
        </trans-unit>
        <trans-unit id="d662c5067630e7b727eb6b33d7ac91db2f6ee08c" translate="yes" xml:space="preserve">
          <source>Index.slice_locs()</source>
          <target state="translated">Index.slice_locs()</target>
        </trans-unit>
        <trans-unit id="db5c1e805ea14b67fd3c52e4f99be0f6a1b90b89" translate="yes" xml:space="preserve">
          <source>Index.sort()</source>
          <target state="translated">Index.sort()</target>
        </trans-unit>
        <trans-unit id="913cf43e3772ed2a8fe03575229daa1bc50dbdc4" translate="yes" xml:space="preserve">
          <source>Index.sort_values()</source>
          <target state="translated">Index.sort_values()</target>
        </trans-unit>
        <trans-unit id="10a67806a9d5ae0108e6749e42319b1d50a16e91" translate="yes" xml:space="preserve">
          <source>Index.sortlevel()</source>
          <target state="translated">Index.sortlevel()</target>
        </trans-unit>
        <trans-unit id="29905bdb7228280b70783d506e68b98b08a339d8" translate="yes" xml:space="preserve">
          <source>Index.str()</source>
          <target state="translated">Index.str()</target>
        </trans-unit>
        <trans-unit id="b6fdc18bb263150a4ad7d892c1a5003bf55ffe18" translate="yes" xml:space="preserve">
          <source>Index.strides</source>
          <target state="translated">Index.strides</target>
        </trans-unit>
        <trans-unit id="0c2e8faf628230a46079a42262caae6249c92330" translate="yes" xml:space="preserve">
          <source>Index.summary()</source>
          <target state="translated">Index.summary()</target>
        </trans-unit>
        <trans-unit id="6c359d26f9e8b4a6ae1a1bb0e579d679a3efe088" translate="yes" xml:space="preserve">
          <source>Index.symmetric_difference()</source>
          <target state="translated">Index.symmetric_difference()</target>
        </trans-unit>
        <trans-unit id="0a2d36df3c300cf03da7892aaaa6880925ff0fc9" translate="yes" xml:space="preserve">
          <source>Index.take()</source>
          <target state="translated">Index.take()</target>
        </trans-unit>
        <trans-unit id="f11c8e81df55d1f42a6f42fb91e0b97e515e05a5" translate="yes" xml:space="preserve">
          <source>Index.to_flat_index()</source>
          <target state="translated">Index.to_flat_index()</target>
        </trans-unit>
        <trans-unit id="03814309dee37171aba0b16696172d33d4843467" translate="yes" xml:space="preserve">
          <source>Index.to_frame()</source>
          <target state="translated">Index.to_frame()</target>
        </trans-unit>
        <trans-unit id="d7c3198d7a0a47fb102b0eb4cc06e0c1974be7e2" translate="yes" xml:space="preserve">
          <source>Index.to_list()</source>
          <target state="translated">Index.to_list()</target>
        </trans-unit>
        <trans-unit id="14f135849706060fa985d034963b41e30cf82edc" translate="yes" xml:space="preserve">
          <source>Index.to_native_types()</source>
          <target state="translated">Index.to_native_types()</target>
        </trans-unit>
        <trans-unit id="a7a7b8e1441200237b2eb67298f893b68a949543" translate="yes" xml:space="preserve">
          <source>Index.to_numpy()</source>
          <target state="translated">Index.to_numpy()</target>
        </trans-unit>
        <trans-unit id="f1b91a93545715d89971596ea7597761d4daba90" translate="yes" xml:space="preserve">
          <source>Index.to_series()</source>
          <target state="translated">Index.to_series()</target>
        </trans-unit>
        <trans-unit id="21ffe541020f68b3a2191ce5cf614066555559e2" translate="yes" xml:space="preserve">
          <source>Index.tolist()</source>
          <target state="translated">Index.tolist()</target>
        </trans-unit>
        <trans-unit id="f2e873abb94cdf33a2f49dc0fb75572620dcc543" translate="yes" xml:space="preserve">
          <source>Index.transpose()</source>
          <target state="translated">Index.transpose()</target>
        </trans-unit>
        <trans-unit id="9385040f7213ca66ce15f470a8df4608d6267a6d" translate="yes" xml:space="preserve">
          <source>Index.union()</source>
          <target state="translated">Index.union()</target>
        </trans-unit>
        <trans-unit id="b3be4dea29e108b703f80b3eff1819418cd6b571" translate="yes" xml:space="preserve">
          <source>Index.unique()</source>
          <target state="translated">Index.unique()</target>
        </trans-unit>
        <trans-unit id="d3528d02b2d70089f66c85f31826c0b1595b7aa7" translate="yes" xml:space="preserve">
          <source>Index.value_counts()</source>
          <target state="translated">Index.value_counts()</target>
        </trans-unit>
        <trans-unit id="9e2e912fc95eed694641b734351b380ab9ad639d" translate="yes" xml:space="preserve">
          <source>Index.values</source>
          <target state="translated">Index.values</target>
        </trans-unit>
        <trans-unit id="b447cdd7372fa3537bde218070ec8ad24d699cff" translate="yes" xml:space="preserve">
          <source>Index.view()</source>
          <target state="translated">Index.view()</target>
        </trans-unit>
        <trans-unit id="32e4ea3e5a968af1c610bdf04cdae77b045bb6f7" translate="yes" xml:space="preserve">
          <source>Index.where()</source>
          <target state="translated">Index.where()</target>
        </trans-unit>
        <trans-unit id="383b324a3291b51f1e54ef9c0d763010fbc5e171" translate="yes" xml:space="preserve">
          <source>IndexError</source>
          <target state="translated">IndexError</target>
        </trans-unit>
        <trans-unit id="7d7226da6286148fdf79035eb7b3a52e9d60aac0" translate="yes" xml:space="preserve">
          <source>Index[source]</source>
          <target state="translated">Index[source]</target>
        </trans-unit>
        <trans-unit id="b96291f27fc9dd4e3ab5ae2408092218f17dc66e" translate="yes" xml:space="preserve">
          <source>Indexers</source>
          <target state="translated">Indexers</target>
        </trans-unit>
        <trans-unit id="f642ee196088372ea886186c6c617515599afd3f" translate="yes" xml:space="preserve">
          <source>Indexes</source>
          <target state="translated">Indexes</target>
        </trans-unit>
        <trans-unit id="1654275433623c2178f491b9d20b06fd4b1528ca" translate="yes" xml:space="preserve">
          <source>Indexes are &amp;ldquo;mostly immutable&amp;rdquo;, but it is possible to set and change their &lt;code&gt;name&lt;/code&gt; attribute. You can use the &lt;code&gt;rename&lt;/code&gt;, &lt;code&gt;set_names&lt;/code&gt; to set these attributes directly, and they default to returning a copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7203e4e11564f9c251f805a1bccda9ffd2205c3" translate="yes" xml:space="preserve">
          <source>Indexes are automagically created on the indexables and any data columns you specify. This behavior can be turned off by passing &lt;code&gt;index=False&lt;/code&gt; to &lt;code&gt;append&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc39c1b8db3d43206b15c448a7fd6b1ce759333" translate="yes" xml:space="preserve">
          <source>Indexes for column or row labels can be changed by assigning a list-like or Index.</source>
          <target state="translated">Индексы для обозначений столбцов или строк могут быть изменены путем назначения списка или индекса.</target>
        </trans-unit>
        <trans-unit id="f49dfc8c61b51189d6ab59d7f385a3a879f8793a" translate="yes" xml:space="preserve">
          <source>Indexes for row labels can be changed by assigning a list-like or Index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261127cfc0860801b50cb78ae34269f7b441bd78" translate="yes" xml:space="preserve">
          <source>Indexes of maxima along the specified axis.</source>
          <target state="translated">Индексы максимумов вдоль указанной оси.</target>
        </trans-unit>
        <trans-unit id="f9c577f244d008018cf13eba366449dac99c2c09" translate="yes" xml:space="preserve">
          <source>Indexes of minima along the specified axis.</source>
          <target state="translated">Индексы минимумов вдоль указанной оси.</target>
        </trans-unit>
        <trans-unit id="9951861c21df18489a5872209655d6f9039b5e2a" translate="yes" xml:space="preserve">
          <source>Indexing</source>
          <target state="translated">Indexing</target>
        </trans-unit>
        <trans-unit id="64a8f190026642d34ee0932a0637568dcdb3ccae" translate="yes" xml:space="preserve">
          <source>Indexing / selection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954fb2979a6c90527a96c2cd304dd5f40a44a2ce" translate="yes" xml:space="preserve">
          <source>Indexing &lt;code&gt;DataFrame&lt;/code&gt; rows with a &lt;em&gt;single&lt;/em&gt; string with getitem (e.g. &lt;code&gt;frame[dtstring]&lt;/code&gt;) is deprecated starting with pandas 1.2.0 (given the ambiguity whether it is indexing the rows or selecting a column) and will be removed in a future version. The equivalent with &lt;code&gt;.loc&lt;/code&gt; (e.g. &lt;code&gt;frame.loc[dtstring]&lt;/code&gt;) is still supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b089d781eb00ac22ab922c9f5a58a1fe43d806d8" translate="yes" xml:space="preserve">
          <source>Indexing and selecting data</source>
          <target state="translated">Индексирование и выбор данных</target>
        </trans-unit>
        <trans-unit id="07a480ea6e6d5122adc6862adbf5c4b6683a5b86" translate="yes" xml:space="preserve">
          <source>Indexing on an integer-based Index with floats has been clarified in 0.18.0, for a summary of the changes, see &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/version/0.25.0/whatsnew/v0.18.0.html#whatsnew-0180-float-indexers&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Индексирование целочисленных индексов с плавающей запятой было разъяснено в версии 0.18.0, сводку изменений см. &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/version/0.25.0/whatsnew/v0.18.0.html#whatsnew-0180-float-indexers&quot;&gt;Здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="712853c81a36b089c8f4f7c4ea60ce6faae607df" translate="yes" xml:space="preserve">
          <source>Indexing potentially changes underlying Series dtype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d09ba5c0ee869c93be108fdba54e0802e8c1f6" translate="yes" xml:space="preserve">
          <source>Indexing will work even if the data are not sorted, but will be rather inefficient (and show a &lt;code&gt;PerformanceWarning&lt;/code&gt;). It will also return a copy of the data rather than a view:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85eb152abcef7f61fd369e631b87fae689316ea6" translate="yes" xml:space="preserve">
          <source>Indexing with .str</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbb57593d7a03297a48e2a428bee98623ce344d" translate="yes" xml:space="preserve">
          <source>Indexing with &lt;code&gt;.str&lt;/code&gt;</source>
          <target state="translated">Индексирование с помощью &lt;code&gt;.str&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56169232bdc05a63e6e835c8bd693f3fc5a85460" translate="yes" xml:space="preserve">
          <source>Indexing with &lt;code&gt;__getitem__/.iloc/.loc&lt;/code&gt; works similarly to an &lt;code&gt;Index&lt;/code&gt; with duplicates. The indexers &lt;strong&gt;must&lt;/strong&gt; be in the category or the operation will raise a &lt;code&gt;KeyError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8d5f8af95dccd225177d0ae706a0efc5f531eb" translate="yes" xml:space="preserve">
          <source>Indexing with NA values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b0c36092d1e7a95960f6706b377ee27df88793" translate="yes" xml:space="preserve">
          <source>Indexing with an &lt;code&gt;IntervalIndex&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d36e94a5f4799d0f4fc7c19d047efbe7bc3dc1e" translate="yes" xml:space="preserve">
          <source>Indexing with an IntervalIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3a3da7a43a7231c1d6af67741740bc73274e65" translate="yes" xml:space="preserve">
          <source>Indexing with isin</source>
          <target state="translated">Индексирование изином</target>
        </trans-unit>
        <trans-unit id="a51e031249850631af1137765b16b2c632cdfb2d" translate="yes" xml:space="preserve">
          <source>Indexing with list with missing labels is deprecated</source>
          <target state="translated">Индексирование со списком с отсутствующими метками устарело.</target>
        </trans-unit>
        <trans-unit id="0fd53627c6e95c899f3d79ebd4fe195698c5b149" translate="yes" xml:space="preserve">
          <source>Indexing, iteration</source>
          <target state="translated">Индексирование,итерация</target>
        </trans-unit>
        <trans-unit id="a8b3f82335a105363bef7fd4d84c4b4be9f5c015" translate="yes" xml:space="preserve">
          <source>IndexingError</source>
          <target state="translated">IndexingError</target>
        </trans-unit>
        <trans-unit id="7f54556ae4d27c8bc55f6c40d19e954c68d1b45e" translate="yes" xml:space="preserve">
          <source>Indicate duplicate Series values.</source>
          <target state="translated">Укажите дубликаты значений серии.</target>
        </trans-unit>
        <trans-unit id="bb099e3d5476f718918db888a764a5ce26386e0b" translate="yes" xml:space="preserve">
          <source>Indicate duplicate index values.</source>
          <target state="translated">Укажите дубликаты значений индекса.</target>
        </trans-unit>
        <trans-unit id="a1aad309f01d5b8f096c3ff64948e51a5cd89e0c" translate="yes" xml:space="preserve">
          <source>Indicate existing (non-missing) values.</source>
          <target state="translated">Укажите существующие (отсутствующие)значения.</target>
        </trans-unit>
        <trans-unit id="59cf7e51c8b6d4f7715593e7e8f08b2ec9a7eff2" translate="yes" xml:space="preserve">
          <source>Indicate missing values.</source>
          <target state="translated">Укажите недостающие значения.</target>
        </trans-unit>
        <trans-unit id="3650cb93a385cf9888f3ceaca0c62d4076dee4a6" translate="yes" xml:space="preserve">
          <source>Indicate number of NA values placed in non-numeric columns.</source>
          <target state="translated">Укажите количество значений АН,помещенных в нецифровые колонки.</target>
        </trans-unit>
        <trans-unit id="0417f6473590efe4f3ab5432a361cd947985b49a" translate="yes" xml:space="preserve">
          <source>Indicate whether the date is the first day of a year.</source>
          <target state="translated">Укажите,является ли дата первым днем года.</target>
        </trans-unit>
        <trans-unit id="1efbd0ef001e741395838a5b2081f1cca86ca78b" translate="yes" xml:space="preserve">
          <source>Indicate whether the date is the last day of the year.</source>
          <target state="translated">Укажите,является ли дата последним днем года.</target>
        </trans-unit>
        <trans-unit id="41f134ef9128fc53dda2ad19c443db04d6cf1f02" translate="yes" xml:space="preserve">
          <source>Indicate which axis or axes should be reduced.</source>
          <target state="translated">Укажите,какие оси или оси должны быть уменьшены.</target>
        </trans-unit>
        <trans-unit id="27f5c8d0195c4771f4b71590789d79e3339db7a6" translate="yes" xml:space="preserve">
          <source>Indicates if an interval is empty, meaning it contains no points.</source>
          <target state="translated">Показывает,что интервал пуст,то есть не содержит точек.</target>
        </trans-unit>
        <trans-unit id="0737cea69711bfcb55bd38a6b8c60950c1870160" translate="yes" xml:space="preserve">
          <source>Indicates remainder of line should not be parsed. If found at the beginning of a line, the line will be ignored altogether. This parameter must be a single character. Like empty lines (as long as &lt;code&gt;skip_blank_lines=True&lt;/code&gt;), fully commented lines are ignored by the parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b9d846cb91bc7ce4849211ef218e20b5aa9bcc" translate="yes" xml:space="preserve">
          <source>Indicates remainder of line should not be parsed. If found at the beginning of a line, the line will be ignored altogether. This parameter must be a single character. Like empty lines (as long as &lt;code&gt;skip_blank_lines=True&lt;/code&gt;), fully commented lines are ignored by the parameter &lt;code&gt;header&lt;/code&gt; but not by &lt;code&gt;skiprows&lt;/code&gt;. For example, if &lt;code&gt;comment='#'&lt;/code&gt;, parsing &amp;lsquo;#empty\na,b,c\n1,2,3&amp;rsquo; with &lt;code&gt;header=0&lt;/code&gt; will result in &amp;lsquo;a,b,c&amp;rsquo; being treated as the header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9fef8046d654078260e60dd16c8b98f7f04028" translate="yes" xml:space="preserve">
          <source>Indicates remainder of line should not be parsed. If found at the beginning of a line, the line will be ignored altogether. This parameter must be a single character. Like empty lines (as long as &lt;code&gt;skip_blank_lines=True&lt;/code&gt;), fully commented lines are ignored by the parameter &lt;code&gt;header&lt;/code&gt; but not by &lt;code&gt;skiprows&lt;/code&gt;. For example, if &lt;code&gt;comment='#'&lt;/code&gt;, parsing &lt;code&gt;#empty\na,b,c\n1,2,3&lt;/code&gt; with &lt;code&gt;header=0&lt;/code&gt; will result in &amp;lsquo;a,b,c&amp;rsquo; being treated as the header.</source>
          <target state="translated">Указывает, что остаток строки не следует анализировать. Если строка находится в начале строки, она вообще игнорируется. Этот параметр должен состоять из одного символа. Как и пустые строки (при условии, что &lt;code&gt;skip_blank_lines=True&lt;/code&gt; ), полностью прокомментированные строки игнорируются &lt;code&gt;header&lt;/code&gt; параметра, но не &lt;code&gt;skiprows&lt;/code&gt; . Например, если &lt;code&gt;comment='#'&lt;/code&gt; , синтаксический анализ &lt;code&gt;#empty\na,b,c\n1,2,3&lt;/code&gt; с &lt;code&gt;header=0&lt;/code&gt; приведет к тому, что 'a, b, c' будет рассматриваться как заголовок.</target>
        </trans-unit>
        <trans-unit id="37178d062a8850434d361891e62062e3d48426a8" translate="yes" xml:space="preserve">
          <source>Indicates whether</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e45d53abdb49adffe38de1e35288e8c32d96812" translate="yes" xml:space="preserve">
          <source>Indicates whether &lt;code&gt;bins&lt;/code&gt; includes the rightmost edge or not. If &lt;code&gt;right == True&lt;/code&gt; (the default), then the &lt;code&gt;bins&lt;/code&gt;&lt;code&gt;[1, 2, 3, 4]&lt;/code&gt; indicate (1,2], (2,3], (3,4]. This argument is ignored when &lt;code&gt;bins&lt;/code&gt; is an IntervalIndex.</source>
          <target state="translated">Указывает, включают ли &lt;code&gt;bins&lt;/code&gt; крайний правый край или нет. Если &lt;code&gt;right == True&lt;/code&gt; (по умолчанию), то &lt;code&gt;bins&lt;/code&gt; &lt;code&gt;[1, 2, 3, 4]&lt;/code&gt; указывают (1,2], (2,3], (3,4]). Этот аргумент игнорируется, если &lt;code&gt;bins&lt;/code&gt; - это IntervalIndex. .</target>
        </trans-unit>
        <trans-unit id="cf260f41e072fcbd89a72d9b30c84ee00d6e82c9" translate="yes" xml:space="preserve">
          <source>Indicates whether the date is the first day of the month.</source>
          <target state="translated">Указывает,является ли дата первым днем месяца.</target>
        </trans-unit>
        <trans-unit id="e90bdacf40e11c066770b4e726fbd75ab88843c3" translate="yes" xml:space="preserve">
          <source>Indicates whether the date is the last day of the month.</source>
          <target state="translated">Указывает,является ли дата последним днем месяца.</target>
        </trans-unit>
        <trans-unit id="f8a785464e31d60b6cc6e202514d9c1c5e025ffa" translate="yes" xml:space="preserve">
          <source>Indication of expected JSON string format.</source>
          <target state="translated">Индикация ожидаемого формата строки JSON.</target>
        </trans-unit>
        <trans-unit id="71a80d13bea9cc4642366f9557c290130446684f" translate="yes" xml:space="preserve">
          <source>Indication of expected JSON string format. Compatible JSON strings can be produced by &lt;code&gt;to_json()&lt;/code&gt; with a corresponding orient value. The set of possible orients is:</source>
          <target state="translated">Индикация ожидаемого формата строки JSON. Совместимые строки JSON могут быть созданы &lt;code&gt;to_json()&lt;/code&gt; с соответствующим значением ориентации. Набор возможных ориентиров:</target>
        </trans-unit>
        <trans-unit id="8b8d16260e41af9b7d8a4f13f724a0dafd8ca750" translate="yes" xml:space="preserve">
          <source>Indicator for whether the date is the first day of a quarter.</source>
          <target state="translated">Индикатор того,является ли дата первым днем квартала.</target>
        </trans-unit>
        <trans-unit id="4cc72059c84c25c333d3b463c2f85be31a1eab0e" translate="yes" xml:space="preserve">
          <source>Indicator for whether the date is the last day of a quarter.</source>
          <target state="translated">Индикатор того,является ли дата последним днем квартала.</target>
        </trans-unit>
        <trans-unit id="cc4e5a27c1c9daa14b5f22a7bffa0238bed8ddcd" translate="yes" xml:space="preserve">
          <source>Indicator whether DataFrame is empty.</source>
          <target state="translated">Индикатор того,пуст ли DataFrame.</target>
        </trans-unit>
        <trans-unit id="05056f495c02c0b518e0436ff12d0703c782c034" translate="yes" xml:space="preserve">
          <source>Indices of elements that are non-zero.</source>
          <target state="translated">Индексы элементов,которые не являются нулевыми.</target>
        </trans-unit>
        <trans-unit id="b6e7fc4e1853ed95233a37a8a0630372238f21be" translate="yes" xml:space="preserve">
          <source>Indices of output values in original index.</source>
          <target state="translated">Индексы выходных значений в исходном индексе.</target>
        </trans-unit>
        <trans-unit id="451187d824e09416bdf5b3908b3cf382c5a8971b" translate="yes" xml:space="preserve">
          <source>Indices of the maximum values.</source>
          <target state="translated">Индексы максимальных значений.</target>
        </trans-unit>
        <trans-unit id="671f02f5501dbd35768ce8e054521fd7202e9630" translate="yes" xml:space="preserve">
          <source>Indices to be taken</source>
          <target state="translated">Индексы,которые необходимо принять</target>
        </trans-unit>
        <trans-unit id="765d15efc7dbbed5015c9a713a5b1c0c8459c275" translate="yes" xml:space="preserve">
          <source>Indices to be taken.</source>
          <target state="translated">Индексы должны быть взяты.</target>
        </trans-unit>
        <trans-unit id="24d1e1e23cae94b254fcd89e183af0d271a7ace0" translate="yes" xml:space="preserve">
          <source>Individual columns can be parsed as a &lt;code&gt;Categorical&lt;/code&gt; using a dict specification:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8637dc6e6c9f39b4fcce0cf4f97d9db0eea9f29e" translate="yes" xml:space="preserve">
          <source>Infer dtypes of objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8434622ac8eac0882326c9ab5a5c41164f50c0fd" translate="yes" xml:space="preserve">
          <source>Infer the daily frequency</source>
          <target state="translated">Приведите суточную частоту</target>
        </trans-unit>
        <trans-unit id="363372827cd3b32ddd9a3a8675e99b905f524ba6" translate="yes" xml:space="preserve">
          <source>Infer the most likely frequency given the input index.</source>
          <target state="translated">Выведите наиболее вероятную частоту с учетом входного индекса.</target>
        </trans-unit>
        <trans-unit id="7807d84d229a37fd3e20c242a6cdca8d89fecc48" translate="yes" xml:space="preserve">
          <source>Infer the most likely frequency given the input index. If the frequency is uncertain, a warning will be printed.</source>
          <target state="translated">Выведите наиболее вероятную частоту с учетом входного индекса.Если частота неопределенная,то будет напечатано предупреждение.</target>
        </trans-unit>
        <trans-unit id="753eae3d8ed4b5cddc125b4e743027a905a18560" translate="yes" xml:space="preserve">
          <source>Inferring compression type from the extension:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0455e326e5aee06b2d1ce576468f8e3bb488040b" translate="yes" xml:space="preserve">
          <source>Inferring datetime format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e19e46d3f94319f04a718815abd73462d2a3bbb" translate="yes" xml:space="preserve">
          <source>Inferring dtypes from a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0219fd54bd5841008b18c414a5b2dea331bad1c5" translate="yes" xml:space="preserve">
          <source>Infinity</source>
          <target state="translated">Infinity</target>
        </trans-unit>
        <trans-unit id="fbddd963d15d26d77d59f9d3be6bc55e6795591e" translate="yes" xml:space="preserve">
          <source>Info axis as iterator.</source>
          <target state="translated">Ось информации как итератор.</target>
        </trans-unit>
        <trans-unit id="5a8c1212f08f942348685bd2905c281c8d0d0d7f" translate="yes" xml:space="preserve">
          <source>Info axis.</source>
          <target state="translated">Ось информации.</target>
        </trans-unit>
        <trans-unit id="88d92b7702e8e4bfada4dbe18f226a864d45fd31" translate="yes" xml:space="preserve">
          <source>Information on how to write a benchmark and how to use asv can be found in the &lt;a href=&quot;https://asv.readthedocs.io/en/latest/writing_benchmarks.html&quot;&gt;asv documentation&lt;/a&gt;.</source>
          <target state="translated">Информацию о том, как написать тест и как использовать asv, можно найти в &lt;a href=&quot;https://asv.readthedocs.io/en/latest/writing_benchmarks.html&quot;&gt;документации asv&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8c1eaf4350f8cf8f6673f1be29ab6e74ef9bbfec" translate="yes" xml:space="preserve">
          <source>Initial time as a time filter limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249f397392db7fe682a1d1ecc1a52c8e40ceb983" translate="yes" xml:space="preserve">
          <source>Input/output</source>
          <target state="translated">Input/output</target>
        </trans-unit>
        <trans-unit id="4327baddf5584e43c8649f4219ef37730642d44d" translate="yes" xml:space="preserve">
          <source>Insert column into DataFrame at specified location.</source>
          <target state="translated">Вставьте колонку в DataFrame в указанном месте.</target>
        </trans-unit>
        <trans-unit id="de176dd0eaae0ed88f07320897cc04f27deb5819" translate="yes" xml:space="preserve">
          <source>Inserting missing data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b52384c683f95697370e3a274caf6af2eb81610" translate="yes" xml:space="preserve">
          <source>Inserting, deleting, or modifying a column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c49654ea19620bd0183d7ec81e3e943b2cb4db" translate="yes" xml:space="preserve">
          <source>Insertion index. Must verify 0 &amp;lt;= loc &amp;lt;= len(columns)</source>
          <target state="translated">Индекс вставки. Необходимо проверить 0 &amp;lt;= loc &amp;lt;= len (столбцы)</target>
        </trans-unit>
        <trans-unit id="4a4705a1a35af666b60e370235470e2bf0e9d4bb" translate="yes" xml:space="preserve">
          <source>Insertion index. Must verify 0 &amp;lt;= loc &amp;lt;= len(columns).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12f9baf05bbedf5aa0725d6bdaf1d05d3c557f5" translate="yes" xml:space="preserve">
          <source>Insertion method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d16fffa10ac7263d479c95d49da2993d72198d" translate="yes" xml:space="preserve">
          <source>Inserts missing value (NA) markers in label locations where no data for that label existed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a7b5c230cae2890fcefc3e883c71a9e2a6049b" translate="yes" xml:space="preserve">
          <source>Inspecting the &lt;code&gt;ddf&lt;/code&gt; object, we see a few things</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f21d3d7019e69ec35daca85d304077436b5cf3" translate="yes" xml:space="preserve">
          <source>Inspired by &lt;a href=&quot;https://dplyr.tidyverse.org/reference/mutate.html&quot;&gt;dplyr&amp;rsquo;s&lt;/a&gt;&lt;code&gt;mutate&lt;/code&gt; verb, DataFrame has an &lt;a href=&quot;../reference/api/pandas.dataframe.assign#pandas.DataFrame.assign&quot;&gt;&lt;code&gt;assign()&lt;/code&gt;&lt;/a&gt; method that allows you to easily create new columns that are potentially derived from existing columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc47878c483b474a961eaafad1f880068f7f351" translate="yes" xml:space="preserve">
          <source>Install either &lt;a href=&quot;https://www.anaconda.com/download/&quot;&gt;Anaconda&lt;/a&gt; or &lt;a href=&quot;https://conda.io/miniconda.html&quot;&gt;miniconda&lt;/a&gt;</source>
          <target state="translated">Установите &lt;a href=&quot;https://www.anaconda.com/download/&quot;&gt;Anaconda&lt;/a&gt; или &lt;a href=&quot;https://conda.io/miniconda.html&quot;&gt;miniconda&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39201eac5cffcef98c1628bbd3cccf56fb269fc8" translate="yes" xml:space="preserve">
          <source>Install method</source>
          <target state="translated">Метод установки</target>
        </trans-unit>
        <trans-unit id="fe5a87f5ebb613029dde59600ce8e8791e3a20a0" translate="yes" xml:space="preserve">
          <source>Install the build dependencies</source>
          <target state="translated">Установить зависимости от сборки</target>
        </trans-unit>
        <trans-unit id="57be28d780b1b49499404c3bcd5eac13de1c75ec" translate="yes" xml:space="preserve">
          <source>Install the optional dependencies</source>
          <target state="translated">Установить опциональные зависимости</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="08c42aaa0fd546650d2b78988b0844eb377772d5" translate="yes" xml:space="preserve">
          <source>Installation instructions for &lt;a href=&quot;http://docs.continuum.io/anaconda/&quot;&gt;Anaconda&lt;/a&gt;&lt;a href=&quot;http://docs.continuum.io/anaconda/install.html&quot;&gt;can be found here&lt;/a&gt;.</source>
          <target state="translated">Инструкции по установке &lt;a href=&quot;http://docs.continuum.io/anaconda/&quot;&gt;Anaconda &lt;/a&gt;&lt;a href=&quot;http://docs.continuum.io/anaconda/install.html&quot;&gt;можно найти здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6297c1543458e61b1bdc95d60229abdef0beedfa" translate="yes" xml:space="preserve">
          <source>Installation instructions for &lt;a href=&quot;https://www.activestate.com/activepython&quot;&gt;ActivePython&lt;/a&gt; can be found &lt;a href=&quot;https://www.activestate.com/activepython/downloads&quot;&gt;here&lt;/a&gt;. Versions 2.7 and 3.5 include pandas.</source>
          <target state="translated">Инструкции по установке &lt;a href=&quot;https://www.activestate.com/activepython&quot;&gt;ActivePython&lt;/a&gt; можно найти &lt;a href=&quot;https://www.activestate.com/activepython/downloads&quot;&gt;здесь&lt;/a&gt; . Версии 2.7 и 3.5 включают панды.</target>
        </trans-unit>
        <trans-unit id="d9c4fdf2d01b4e05daebe6eb281974167b29ba39" translate="yes" xml:space="preserve">
          <source>Installing a C compiler</source>
          <target state="translated">Установка компилятора Си</target>
        </trans-unit>
        <trans-unit id="b18e57b632a145ef125d8087b991254aaba98bc7" translate="yes" xml:space="preserve">
          <source>Installing from PyPI</source>
          <target state="translated">Установка из PyPI</target>
        </trans-unit>
        <trans-unit id="25698238529e36c36bbff9a1cf8864afeb7e862b" translate="yes" xml:space="preserve">
          <source>Installing from source</source>
          <target state="translated">Установка из источника</target>
        </trans-unit>
        <trans-unit id="0de282a6de265deb1a924220a987f4ad0ff8218d" translate="yes" xml:space="preserve">
          <source>Installing pandas</source>
          <target state="translated">Установка панд</target>
        </trans-unit>
        <trans-unit id="5e5045def9e10f096e07985111ae59fc624ea826" translate="yes" xml:space="preserve">
          <source>Installing pandas and the rest of the &lt;a href=&quot;http://www.numpy.org/&quot;&gt;NumPy&lt;/a&gt; and &lt;a href=&quot;http://www.scipy.org/&quot;&gt;SciPy&lt;/a&gt; stack can be a little difficult for inexperienced users.</source>
          <target state="translated">Установка pandas и остальной части стека &lt;a href=&quot;http://www.numpy.org/&quot;&gt;NumPy&lt;/a&gt; и &lt;a href=&quot;http://www.scipy.org/&quot;&gt;SciPy&lt;/a&gt; может быть немного сложной для неопытных пользователей.</target>
        </trans-unit>
        <trans-unit id="d39f488f01f5bac7b409b3776f37a438828a38af" translate="yes" xml:space="preserve">
          <source>Installing using your Linux distribution&amp;rsquo;s package manager.</source>
          <target state="translated">Установка с помощью диспетчера пакетов вашего дистрибутива Linux.</target>
        </trans-unit>
        <trans-unit id="65c9b0a459f284587dd1cfd66ffc61a6bdbd86b0" translate="yes" xml:space="preserve">
          <source>Installing with ActivePython</source>
          <target state="translated">Установка с помощью ActivePython</target>
        </trans-unit>
        <trans-unit id="15c5345ff436236c4c6879659dd4eae1b06d0445" translate="yes" xml:space="preserve">
          <source>Installing with Anaconda</source>
          <target state="translated">Установка с Anaconda</target>
        </trans-unit>
        <trans-unit id="c441a6d58ef8a1d14081772e2d3329107fda6577" translate="yes" xml:space="preserve">
          <source>Installing with Miniconda</source>
          <target state="translated">Установка с Miniconda</target>
        </trans-unit>
        <trans-unit id="96a6052c798a2f4dc326b18a86979e4d5f3fb697" translate="yes" xml:space="preserve">
          <source>Instance of the dtype.</source>
          <target state="translated">Экземпляр d-типа.</target>
        </trans-unit>
        <trans-unit id="ba00d53c2b90eed1a390bfaa5799e05045a2a028" translate="yes" xml:space="preserve">
          <source>Instead of nesting, the figure can be split by column with &lt;code&gt;subplots=True&lt;/code&gt;. In this case, a &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.html#numpy.ndarray&quot;&gt;&lt;code&gt;numpy.ndarray&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;https://matplotlib.org/api/axes_api.html#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;matplotlib.axes.Axes&lt;/code&gt;&lt;/a&gt; are returned.</source>
          <target state="translated">Вместо вложенности рисунок можно разбить по столбцам с &lt;code&gt;subplots=True&lt;/code&gt; . В этом случае &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.html#numpy.ndarray&quot;&gt; &lt;code&gt;numpy.ndarray&lt;/code&gt; &lt;/a&gt; из &lt;a href=&quot;https://matplotlib.org/api/axes_api.html#matplotlib.axes.Axes&quot;&gt; &lt;code&gt;matplotlib.axes.Axes&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6a584698588777df450ba1802fbc64e715996ea7" translate="yes" xml:space="preserve">
          <source>Instead of nesting, the figure can be split by column with &lt;code&gt;subplots=True&lt;/code&gt;. In this case, a &lt;a href=&quot;https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray&quot;&gt;&lt;code&gt;numpy.ndarray&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;https://matplotlib.org/api/axes_api.html#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;matplotlib.axes.Axes&lt;/code&gt;&lt;/a&gt; are returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae88169118a216ec792184d9fc15a46283f5b2af" translate="yes" xml:space="preserve">
          <source>Instead of replacing with specified values, you can treat all given values as missing and interpolate over them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a3fa1f19e7e80069c5151243dd68d47bd30af67" translate="yes" xml:space="preserve">
          <source>Instead, use explicit string based keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a89d5e5adc7fd48a31c08ba36c7c91e5cb6f89b1" translate="yes" xml:space="preserve">
          <source>Instead, you&amp;rsquo;ll need to ensure that the values being assigned are sparse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fbfc2aa3f64c2d954ce8ce07cbbf2db93da6914" translate="yes" xml:space="preserve">
          <source>Institutional partners</source>
          <target state="translated">Институциональные партнеры</target>
        </trans-unit>
        <trans-unit id="24009271c7b262236f31adb1fa5bdcc3dd0497e6" translate="yes" xml:space="preserve">
          <source>Instructions for installing from source, &lt;a href=&quot;https://pypi.org/project/pandas&quot;&gt;PyPI&lt;/a&gt;, &lt;a href=&quot;https://www.activestate.com/activepython/downloads&quot;&gt;ActivePython&lt;/a&gt;, various Linux distributions, or a &lt;a href=&quot;http://github.com/pandas-dev/pandas&quot;&gt;development version&lt;/a&gt; are also provided.</source>
          <target state="translated">Также предоставляются инструкции по установке из исходного кода, &lt;a href=&quot;https://pypi.org/project/pandas&quot;&gt;PyPI&lt;/a&gt; , &lt;a href=&quot;https://www.activestate.com/activepython/downloads&quot;&gt;ActivePython&lt;/a&gt; , различных дистрибутивов Linux или &lt;a href=&quot;http://github.com/pandas-dev/pandas&quot;&gt;разрабатываемой версии&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f8c7b38b9ef59141df261a2c85df142aa9a24814" translate="yes" xml:space="preserve">
          <source>Int which indicates which protocol should be used by the pickler, default HIGHEST_PROTOCOL (see &lt;a href=&quot;#r9a0a8647c05c-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; paragraph 12.1.2). The possible values are 0, 1, 2, 3, 4, 5. A negative value for the protocol parameter is equivalent to setting its value to HIGHEST_PROTOCOL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41e945425bff7155af46bfb2d7009c63a104f12" translate="yes" xml:space="preserve">
          <source>Int which indicates which protocol should be used by the pickler, default HIGHEST_PROTOCOL (see &lt;a href=&quot;#r9a0a8647c05c-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; paragraph 12.1.2). The possible values are 0, 1, 2, 3, 4. A negative value for the protocol parameter is equivalent to setting its value to HIGHEST_PROTOCOL.</source>
          <target state="translated">Int, который указывает, какой протокол должен использоваться сборщиком, по умолчанию HIGHEST_PROTOCOL (см. &lt;a href=&quot;#r9a0a8647c05c-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; параграф 12.1.2). Возможные значения: 0, 1, 2, 3, 4. Отрицательное значение параметра протокола эквивалентно установке его значения на HIGHEST_PROTOCOL.</target>
        </trans-unit>
        <trans-unit id="b84c40c11828847b734cb5c2d31b35ec26b00d63" translate="yes" xml:space="preserve">
          <source>Int which indicates which protocol should be used by the pickler, default HIGHEST_PROTOCOL (see &lt;a href=&quot;#rc4e85fbd536b-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; paragraph 12.1.2). The possible values are 0, 1, 2, 3, 4, 5. A negative value for the protocol parameter is equivalent to setting its value to HIGHEST_PROTOCOL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b729c65994630b2d9dffe12bec53a355f78594a" translate="yes" xml:space="preserve">
          <source>Int which indicates which protocol should be used by the pickler, default HIGHEST_PROTOCOL (see &lt;a href=&quot;#rc4e85fbd536b-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; paragraph 12.1.2). The possible values are 0, 1, 2, 3, 4. A negative value for the protocol parameter is equivalent to setting its value to HIGHEST_PROTOCOL.</source>
          <target state="translated">Int, который указывает, какой протокол должен использоваться сборщиком, по умолчанию HIGHEST_PROTOCOL (см. &lt;a href=&quot;#rc4e85fbd536b-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; параграф 12.1.2). Возможные значения: 0, 1, 2, 3, 4. Отрицательное значение параметра протокола эквивалентно установке его значения на HIGHEST_PROTOCOL.</target>
        </trans-unit>
        <trans-unit id="2fb0e92254ad1be1e1f06659aa5f70f7e2efc3a7" translate="yes" xml:space="preserve">
          <source>Int16Dtype[source]</source>
          <target state="translated">Int16Dtype[source]</target>
        </trans-unit>
        <trans-unit id="e9268a255723b03ccd7474cc600ddfae02f7ce3c" translate="yes" xml:space="preserve">
          <source>Int32Dtype[source]</source>
          <target state="translated">Int32Dtype[source]</target>
        </trans-unit>
        <trans-unit id="8b86334ea2a62fe66435f4a079dbcc1351380b5c" translate="yes" xml:space="preserve">
          <source>Int64Dtype[source]</source>
          <target state="translated">Int64Dtype[source]</target>
        </trans-unit>
        <trans-unit id="2560cfc4a5245c03b2db5c4eaec45e01b7fb5eb1" translate="yes" xml:space="preserve">
          <source>Int64Index and RangeIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8a885be5915510654c358283589f5d52ca3983" translate="yes" xml:space="preserve">
          <source>Int64Index[source]</source>
          <target state="translated">Int64Index[source]</target>
        </trans-unit>
        <trans-unit id="fdc3d18b69c0fe9eafe06b78242aed1c198d78a7" translate="yes" xml:space="preserve">
          <source>Int8Dtype[source]</source>
          <target state="translated">Int8Dtype[source]</target>
        </trans-unit>
        <trans-unit id="a155d332309cae284be3d3e2e396e9f852ef1b8f" translate="yes" xml:space="preserve">
          <source>Integer dtypes and missing data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67c637e4843347ae6ad1205d87858945769f9a5" translate="yes" xml:space="preserve">
          <source>Integer indexing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fecdd294069d10f65fb2cb6c4194ce71c994ded6" translate="yes" xml:space="preserve">
          <source>Integer indices that would sort the index if used as an indexer.</source>
          <target state="translated">Целочисленные индексы,которые сортировали бы индекс,если бы он использовался в качестве индексатора.</target>
        </trans-unit>
        <trans-unit id="c3ba6e74ae4d3503ea9ae5fd16b284bd1c03c87c" translate="yes" xml:space="preserve">
          <source>Integer number of levels in this MultiIndex.</source>
          <target state="translated">Целое число уровней в этом MultiIndex.</target>
        </trans-unit>
        <trans-unit id="ac2b22702d7f931ce3e140c1357824fa15b2f80a" translate="yes" xml:space="preserve">
          <source>Integer representation of the values.</source>
          <target state="translated">Целочисленное представление значений.</target>
        </trans-unit>
        <trans-unit id="835cfc63f84a93524879d15ed6f8d95b8c9c173a" translate="yes" xml:space="preserve">
          <source>Integer-location based indexing for selecting Series.</source>
          <target state="translated">Индексирование на основе интегрального местоположения для выбора Серии.</target>
        </trans-unit>
        <trans-unit id="938e65e953d6c5f1d2fb4dfae2ee38e6c85c658b" translate="yes" xml:space="preserve">
          <source>Integer-location based indexing for selecting scalars.</source>
          <target state="translated">Индексирование на основе интегрального местоположения для выбора скаляров.</target>
        </trans-unit>
        <trans-unit id="35035903c859e314e5552b0e3cc310f6acb72097" translate="yes" xml:space="preserve">
          <source>IntegerArray</source>
          <target state="translated">IntegerArray</target>
        </trans-unit>
        <trans-unit id="a0d7c747c78109f78235954620ad1d3e190f00fd" translate="yes" xml:space="preserve">
          <source>IntegerArray is currently experimental, and its API or internal implementation may change without warning.</source>
          <target state="translated">В настоящее время IntegerArray является экспериментальным,и его API или внутренняя реализация может измениться без предупреждения.</target>
        </trans-unit>
        <trans-unit id="6a2e36973f5eae0835cc5fa4a2333f985b3caf66" translate="yes" xml:space="preserve">
          <source>IntegerArray is currently experimental. Its API or implementation may change without warning.</source>
          <target state="translated">IntegerArray в настоящее время является экспериментальным.Его API или реализация может измениться без предупреждения.</target>
        </trans-unit>
        <trans-unit id="097950ded27901f97126cff3fa2ab29251b5cd64" translate="yes" xml:space="preserve">
          <source>IntegerNA</source>
          <target state="translated">IntegerNA</target>
        </trans-unit>
        <trans-unit id="d5c174f2ed7e51cccbb95705d757b2ddf8935fde" translate="yes" xml:space="preserve">
          <source>Integers for each level designating which label at each location.</source>
          <target state="translated">Цепочки для каждого уровня,обозначающие,какая этикетка в каждой точке.</target>
        </trans-unit>
        <trans-unit id="e627bdfae73d31ed6df0b62e98e3536911ccb032" translate="yes" xml:space="preserve">
          <source>Integers from 0 to n - 1 indicating that the index at these positions matches the corresponding target values. Missing values in the target are marked by -1.</source>
          <target state="translated">Целочисленные числа от 0 до n-1,указывающие на то,что индекс по этим позициям совпадает с соответствующими целевыми значениями.Пропущенные значения в задаче помечены -1.</target>
        </trans-unit>
        <trans-unit id="ad916d621fd3e7fa446d6d6e3a53d4367d223c36" translate="yes" xml:space="preserve">
          <source>Integers: &lt;code&gt;'int8', 'int16', 'int32', 'int64', 'uint8', 'uint16', 'uint32', 'uint64'&lt;/code&gt;</source>
          <target state="translated">Целые числа: &lt;code&gt;'int8', 'int16', 'int32', 'int64', 'uint8', 'uint16', 'uint32', 'uint64'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a55b418f944f0d314c5f1d3389f7b2c36d32ac87" translate="yes" xml:space="preserve">
          <source>Intelligent label-based &lt;strong&gt;slicing&lt;/strong&gt;, &lt;strong&gt;fancy indexing&lt;/strong&gt;, and &lt;strong&gt;subsetting&lt;/strong&gt; of large data sets</source>
          <target state="translated">Интеллектуальное &lt;strong&gt;нарезание на&lt;/strong&gt; основе меток , &lt;strong&gt;необычное индексирование&lt;/strong&gt; и &lt;strong&gt;разделение&lt;/strong&gt; больших наборов данных</target>
        </trans-unit>
        <trans-unit id="70a819e62bb719ee596c8338dd06b78db14eb43b" translate="yes" xml:space="preserve">
          <source>Interaction with scipy.sparse</source>
          <target state="translated">Взаимодействие с scipy.spapy.sparse</target>
        </trans-unit>
        <trans-unit id="25081f2955f07c84d66330debfdde0bf66459c94" translate="yes" xml:space="preserve">
          <source>Interchange axes and swap values axes appropriately.</source>
          <target state="translated">Оси взаимозаменяются,а оси значений взаимозаменяются соответствующим образом.</target>
        </trans-unit>
        <trans-unit id="f78cb79531d5c9403c70e99a47e3870324236762" translate="yes" xml:space="preserve">
          <source>Internal guides</source>
          <target state="translated">Внутренние руководства</target>
        </trans-unit>
        <trans-unit id="b82f9e7907571f6d77c6a3a819bd0c0682ca3bc3" translate="yes" xml:space="preserve">
          <source>Internal pandas method for lossy conversion to a NumPy ndarray.</source>
          <target state="translated">Внутренний метод панд для преобразования с потерями в NumPyndarray.</target>
        </trans-unit>
        <trans-unit id="276f8e50ac42590856b6c99a95104f3d1881fd37" translate="yes" xml:space="preserve">
          <source>Internal property, property synonym for as_blocks().</source>
          <target state="translated">Внутреннее свойство,синоним свойства для функции as_blocks().</target>
        </trans-unit>
        <trans-unit id="f2de282e4a0af99847b9afb982349e4a1ecc96cf" translate="yes" xml:space="preserve">
          <source>Internally process the file in chunks, resulting in lower memory use while parsing, but possibly mixed type inference. To ensure no mixed types either set &lt;code&gt;False&lt;/code&gt;, or specify the type with the &lt;code&gt;dtype&lt;/code&gt; parameter. Note that the entire file is read into a single &lt;code&gt;DataFrame&lt;/code&gt; regardless, use the &lt;code&gt;chunksize&lt;/code&gt; or &lt;code&gt;iterator&lt;/code&gt; parameter to return the data in chunks. (Only valid with C parser)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b775b768a01449956096e99bf980afbf32d2e012" translate="yes" xml:space="preserve">
          <source>Internally process the file in chunks, resulting in lower memory use while parsing, but possibly mixed type inference. To ensure no mixed types either set False, or specify the type with the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f8cb10e2d93fffc43b79575bd8ff9fd8adc5fc" translate="yes" xml:space="preserve">
          <source>Internally process the file in chunks, resulting in lower memory use while parsing, but possibly mixed type inference. To ensure no mixed types either set False, or specify the type with the &lt;code&gt;dtype&lt;/code&gt; parameter. Note that the entire file is read into a single DataFrame regardless, use the &lt;code&gt;chunksize&lt;/code&gt; or &lt;code&gt;iterator&lt;/code&gt; parameter to return the data in chunks. (Only valid with C parser).</source>
          <target state="translated">Внутренняя обработка файла по частям, что приведет к меньшему использованию памяти при синтаксическом анализе, но, возможно, к выводу смешанного типа. Чтобы гарантировать отсутствие смешанных типов, установите значение False или укажите тип с &lt;code&gt;dtype&lt;/code&gt; параметра dtype . Обратите внимание, что весь файл считывается в один DataFrame, независимо от того, используйте параметр &lt;code&gt;chunksize&lt;/code&gt; или &lt;code&gt;iterator&lt;/code&gt; для возврата данных в виде фрагментов. (Действует только с синтаксическим анализатором C).</target>
        </trans-unit>
        <trans-unit id="1c1c8b7f15a5e3e5a2d9c35e10bfd8db48c2aa6f" translate="yes" xml:space="preserve">
          <source>Internally, the &lt;code&gt;MultiIndex&lt;/code&gt; consists of a few things: the &lt;strong&gt;levels&lt;/strong&gt;, the integer &lt;strong&gt;codes&lt;/strong&gt; (until version 0.24 named &lt;em&gt;labels&lt;/em&gt;), and the level &lt;strong&gt;names&lt;/strong&gt;:</source>
          <target state="translated">Внутри &lt;code&gt;MultiIndex&lt;/code&gt; состоит из нескольких вещей: &lt;strong&gt;уровней&lt;/strong&gt; , целочисленных &lt;strong&gt;кодов&lt;/strong&gt; (до версии 0.24 именованных &lt;em&gt;меток&lt;/em&gt; ) и &lt;strong&gt;имен&lt;/strong&gt; уровней :</target>
        </trans-unit>
        <trans-unit id="f2ee1b2535a76de4700d8bc664c864e34c040cac" translate="yes" xml:space="preserve">
          <source>Internally, this method uses a &lt;a href=&quot;https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper&quot;&gt;&lt;code&gt;textwrap.TextWrapper&lt;/code&gt;&lt;/a&gt; instance with default settings. To achieve behavior matching R&amp;rsquo;s stringr library str_wrap function, use the arguments:</source>
          <target state="translated">Внутри этот метод использует экземпляр &lt;a href=&quot;https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper&quot;&gt; &lt;code&gt;textwrap.TextWrapper&lt;/code&gt; &lt;/a&gt; с настройками по умолчанию. Чтобы добиться соответствия поведения функции str_wrap библиотеки R Stringr, используйте аргументы:</target>
        </trans-unit>
        <trans-unit id="653edb0bfdb6bd20dfe7affb5776bc7d271237c7" translate="yes" xml:space="preserve">
          <source>Internals</source>
          <target state="translated">Internals</target>
        </trans-unit>
        <trans-unit id="5f83d8cca85030f2a2c81016b6a23527829feffb" translate="yes" xml:space="preserve">
          <source>International date formats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8157249a785cb2aaed094f5b845a9181e0cc968d" translate="yes" xml:space="preserve">
          <source>Interpolate a 1-D function.</source>
          <target state="translated">Интерполируйте 1-D функцию.</target>
        </trans-unit>
        <trans-unit id="181d912e530f568442a4560713f48c8720c82454" translate="yes" xml:space="preserve">
          <source>Interpolate polynomial (Krogh interpolator).</source>
          <target state="translated">Интерполировать полиномиальный (кроговский интерполятор).</target>
        </trans-unit>
        <trans-unit id="438dad55423914229df0d0b297aa3a56186799ae" translate="yes" xml:space="preserve">
          <source>Interpolate values according to different methods.</source>
          <target state="translated">Интерполировать значения в соответствии с различными методами.</target>
        </trans-unit>
        <trans-unit id="6a9858c9bf3149456595f98943cf88e41039822e" translate="yes" xml:space="preserve">
          <source>Interpolation</source>
          <target state="translated">Interpolation</target>
        </trans-unit>
        <trans-unit id="dfd6c31cf97ad2b4ee0e41b73d0807a4fb9c4a8b" translate="yes" xml:space="preserve">
          <source>Interpolation limits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5547a8c7c7e3256a4f08c1d4ae79db40eddf1eb9" translate="yes" xml:space="preserve">
          <source>Interpolation method for data</source>
          <target state="translated">метод интерполяции данных</target>
        </trans-unit>
        <trans-unit id="642b5d608dcbf52f516b4e6dc13fcbb045828924" translate="yes" xml:space="preserve">
          <source>Interpolation method for data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78b9a9859fa602c1b36af4c672b2509a5dd2d88" translate="yes" xml:space="preserve">
          <source>Interpolation technique to use. One of:</source>
          <target state="translated">Метод интерполяции.Один из:</target>
        </trans-unit>
        <trans-unit id="011efcd591019b5969a332a24dff728a8107dbe2" translate="yes" xml:space="preserve">
          <source>Interval</source>
          <target state="translated">Interval</target>
        </trans-unit>
        <trans-unit id="6cac75ed68ea193e878d46565e5026f099a06de0" translate="yes" xml:space="preserve">
          <source>Interval boundary to use for labeling. Only when</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe5fdfe3c729530e6a719b9a53472e5765ff4bc" translate="yes" xml:space="preserve">
          <source>Interval boundary to use for labeling. Only when &lt;code&gt;freq&lt;/code&gt; parameter is passed.</source>
          <target state="translated">Граница интервала для маркировки. Только когда передан параметр &lt;code&gt;freq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83097b8c3b593ab73f275b7d5515f8755ff674a6" translate="yes" xml:space="preserve">
          <source>Interval data</source>
          <target state="translated">Интервальные данные</target>
        </trans-unit>
        <trans-unit id="28d7c04c49002fe644278afa17e14d7dda221def" translate="yes" xml:space="preserve">
          <source>Interval to check against for an overlap.</source>
          <target state="translated">Интервал для проверки на совпадение.</target>
        </trans-unit>
        <trans-unit id="611829ae6077c85cf56e8806ce01ac0728df6b37" translate="yes" xml:space="preserve">
          <source>Interval.closed</source>
          <target state="translated">Interval.closed</target>
        </trans-unit>
        <trans-unit id="561aa5ce32935cabab80e4c26ddc23333df82a84" translate="yes" xml:space="preserve">
          <source>Interval.closed_left</source>
          <target state="translated">Interval.closed_left</target>
        </trans-unit>
        <trans-unit id="565536b81c6114e9186d2cc58d91a1916792bc01" translate="yes" xml:space="preserve">
          <source>Interval.closed_right</source>
          <target state="translated">Interval.closed_right</target>
        </trans-unit>
        <trans-unit id="160657135e5ad3de2d9eec9e1159d0526ea349e9" translate="yes" xml:space="preserve">
          <source>Interval.is_empty</source>
          <target state="translated">Interval.is_empty</target>
        </trans-unit>
        <trans-unit id="0828b891d4816cbd3cfa05d2895163db4fb9bfbf" translate="yes" xml:space="preserve">
          <source>Interval.left</source>
          <target state="translated">Interval.left</target>
        </trans-unit>
        <trans-unit id="c00ba439018539313e4846ace1f3e9a3d93a933b" translate="yes" xml:space="preserve">
          <source>Interval.length</source>
          <target state="translated">Interval.length</target>
        </trans-unit>
        <trans-unit id="8053193e40a7ee975d2b0fe2a8613730496c0c71" translate="yes" xml:space="preserve">
          <source>Interval.mid</source>
          <target state="translated">Interval.mid</target>
        </trans-unit>
        <trans-unit id="c1c5cfb7f671f2562bf0d87c645a989a946862ad" translate="yes" xml:space="preserve">
          <source>Interval.open_left</source>
          <target state="translated">Interval.open_left</target>
        </trans-unit>
        <trans-unit id="af63d285218cdcdbdb505eba40eab3f25ee25ef2" translate="yes" xml:space="preserve">
          <source>Interval.open_right</source>
          <target state="translated">Interval.open_right</target>
        </trans-unit>
        <trans-unit id="c8ed73cff2476bea0994642ec9a5ccc7007f6cdc" translate="yes" xml:space="preserve">
          <source>Interval.overlaps()</source>
          <target state="translated">Interval.overlaps()</target>
        </trans-unit>
        <trans-unit id="02ec4b476f6a897b1a10a06468ee5d7a534b56ae" translate="yes" xml:space="preserve">
          <source>Interval.right</source>
          <target state="translated">Interval.right</target>
        </trans-unit>
        <trans-unit id="fd2aa684d23710fa19162e0673f8201705bdd79b" translate="yes" xml:space="preserve">
          <source>IntervalArray</source>
          <target state="translated">IntervalArray</target>
        </trans-unit>
        <trans-unit id="0e82ecfc4c65554f1246b328977be52c5d28079c" translate="yes" xml:space="preserve">
          <source>IntervalArray.closed</source>
          <target state="translated">IntervalArray.closed</target>
        </trans-unit>
        <trans-unit id="07b6e0ffe7dd648086649af59d4890b9b20f83ba" translate="yes" xml:space="preserve">
          <source>IntervalArray.contains()</source>
          <target state="translated">IntervalArray.contains()</target>
        </trans-unit>
        <trans-unit id="e4f2c1a9f42547dca85d593fa87fcf407389907d" translate="yes" xml:space="preserve">
          <source>IntervalArray.from_arrays()</source>
          <target state="translated">IntervalArray.from_arrays()</target>
        </trans-unit>
        <trans-unit id="be6ce0db6fce6964f38de8a86aa7ee24d9c90ec4" translate="yes" xml:space="preserve">
          <source>IntervalArray.from_breaks()</source>
          <target state="translated">IntervalArray.from_breaks()</target>
        </trans-unit>
        <trans-unit id="33695bc2d443eaaefa7f2aac0d2f656c9b24b550" translate="yes" xml:space="preserve">
          <source>IntervalArray.from_tuples()</source>
          <target state="translated">IntervalArray.from_tuples()</target>
        </trans-unit>
        <trans-unit id="7a618362bbd799b51383957016ac0d5ba553e4b0" translate="yes" xml:space="preserve">
          <source>IntervalArray.is_empty</source>
          <target state="translated">IntervalArray.is_empty</target>
        </trans-unit>
        <trans-unit id="5aeb49b0239bae09765767acacb7e1708e69ab5a" translate="yes" xml:space="preserve">
          <source>IntervalArray.is_non_overlapping_monotonic</source>
          <target state="translated">IntervalArray.is_non_overlapping_monotonic</target>
        </trans-unit>
        <trans-unit id="0e87e816e4d1fe63f06b6dc7dda04f4a21476e91" translate="yes" xml:space="preserve">
          <source>IntervalArray.left</source>
          <target state="translated">IntervalArray.left</target>
        </trans-unit>
        <trans-unit id="5e9eccbdaa57fe426e552a5adfccbaec7cf08506" translate="yes" xml:space="preserve">
          <source>IntervalArray.length</source>
          <target state="translated">IntervalArray.length</target>
        </trans-unit>
        <trans-unit id="b6689570ee3e28f6070c232ca0a6ffe00279adca" translate="yes" xml:space="preserve">
          <source>IntervalArray.mid</source>
          <target state="translated">IntervalArray.mid</target>
        </trans-unit>
        <trans-unit id="36c11e96ecde68c346bde1f9a2d00af301cffde8" translate="yes" xml:space="preserve">
          <source>IntervalArray.overlaps()</source>
          <target state="translated">IntervalArray.overlaps()</target>
        </trans-unit>
        <trans-unit id="2bb141cd3d612e1c1456d892656ce44813f0ab44" translate="yes" xml:space="preserve">
          <source>IntervalArray.right</source>
          <target state="translated">IntervalArray.right</target>
        </trans-unit>
        <trans-unit id="5ca7feaa3dc4fda97165e771b04809b0b95ed080" translate="yes" xml:space="preserve">
          <source>IntervalArray.set_closed()</source>
          <target state="translated">IntervalArray.set_closed()</target>
        </trans-unit>
        <trans-unit id="a69615c38a6a2c471f3a870b18017ccf3d4a01cc" translate="yes" xml:space="preserve">
          <source>IntervalArray.to_tuples()</source>
          <target state="translated">IntervalArray.to_tuples()</target>
        </trans-unit>
        <trans-unit id="2af1eb6a50b73ef7c131a9459830842c1f901482" translate="yes" xml:space="preserve">
          <source>IntervalDtype.subtype</source>
          <target state="translated">IntervalDtype.subtype</target>
        </trans-unit>
        <trans-unit id="8bf5e364c5a5027649e4c323e3910d7fe6a1f3ed" translate="yes" xml:space="preserve">
          <source>IntervalDtype[source]</source>
          <target state="translated">IntervalDtype[source]</target>
        </trans-unit>
        <trans-unit id="dca5e044d02555cd3d54854bb330d78ba61268c2" translate="yes" xml:space="preserve">
          <source>IntervalIndex</source>
          <target state="translated">IntervalIndex</target>
        </trans-unit>
        <trans-unit id="8587202f9201737e441696a0f5edc984254faf26" translate="yes" xml:space="preserve">
          <source>IntervalIndex : Defines the exact bins to be used. Note that IntervalIndex for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e22b1caf5f2342f4c94ddf4f37859b2b5521179" translate="yes" xml:space="preserve">
          <source>IntervalIndex : Defines the exact bins to be used. Note that IntervalIndex for &lt;code&gt;bins&lt;/code&gt; must be non-overlapping.</source>
          <target state="translated">IntervalIndex: определяет точные интервалы, которые будут использоваться. Обратите внимание , что IntervalIndex для &lt;code&gt;bins&lt;/code&gt; должны быть не дублируют друг друга.</target>
        </trans-unit>
        <trans-unit id="0627eb8d723b6bffecf7020d135a971314f715f4" translate="yes" xml:space="preserve">
          <source>IntervalIndex components</source>
          <target state="translated">Компоненты ИнтервалИндекс</target>
        </trans-unit>
        <trans-unit id="b3400bf1be26036cabc32d765cea3de1b322709e" translate="yes" xml:space="preserve">
          <source>IntervalIndex.closed</source>
          <target state="translated">IntervalIndex.closed</target>
        </trans-unit>
        <trans-unit id="64aa7e43d414902cd67b0bc90032567dfe9a5cce" translate="yes" xml:space="preserve">
          <source>IntervalIndex.contains()</source>
          <target state="translated">IntervalIndex.contains()</target>
        </trans-unit>
        <trans-unit id="15886e6c75567dee04f2f5dd51d519c741c0f429" translate="yes" xml:space="preserve">
          <source>IntervalIndex.from_arrays()</source>
          <target state="translated">IntervalIndex.from_arrays()</target>
        </trans-unit>
        <trans-unit id="8c8b9a5fbe9d244a7c808ba6e77e5f78580db8fa" translate="yes" xml:space="preserve">
          <source>IntervalIndex.from_breaks()</source>
          <target state="translated">IntervalIndex.from_breaks()</target>
        </trans-unit>
        <trans-unit id="d0f83f33b6e0fd30d6ce0db459ecb9dc05fc6468" translate="yes" xml:space="preserve">
          <source>IntervalIndex.from_tuples()</source>
          <target state="translated">IntervalIndex.from_tuples()</target>
        </trans-unit>
        <trans-unit id="2a030b12ed9f2caed7d264ee94a6f1ee8129885f" translate="yes" xml:space="preserve">
          <source>IntervalIndex.get_indexer()</source>
          <target state="translated">IntervalIndex.get_indexer()</target>
        </trans-unit>
        <trans-unit id="8b0294e0ba714eeed56b6b8b081acc161f7c53fc" translate="yes" xml:space="preserve">
          <source>IntervalIndex.get_loc()</source>
          <target state="translated">IntervalIndex.get_loc()</target>
        </trans-unit>
        <trans-unit id="86f6a4023d32e1343469a9a45def1137de2bb103" translate="yes" xml:space="preserve">
          <source>IntervalIndex.is_empty</source>
          <target state="translated">IntervalIndex.is_empty</target>
        </trans-unit>
        <trans-unit id="1044b19f681ca66c0157dd20864bbbf1668aa932" translate="yes" xml:space="preserve">
          <source>IntervalIndex.is_non_overlapping_monotonic</source>
          <target state="translated">IntervalIndex.is_non_overlapping_monotonic</target>
        </trans-unit>
        <trans-unit id="7e71d4b955b550723a15df05cd4d3310d093ede3" translate="yes" xml:space="preserve">
          <source>IntervalIndex.is_overlapping</source>
          <target state="translated">IntervalIndex.is_overlapping</target>
        </trans-unit>
        <trans-unit id="ea520b5b20b771603daa4b129a1607b3a5cbd62a" translate="yes" xml:space="preserve">
          <source>IntervalIndex.left</source>
          <target state="translated">IntervalIndex.left</target>
        </trans-unit>
        <trans-unit id="02acd8724a97e5cc00b49b262a766d2b36c84a31" translate="yes" xml:space="preserve">
          <source>IntervalIndex.length</source>
          <target state="translated">IntervalIndex.length</target>
        </trans-unit>
        <trans-unit id="c5cdbb716e932b7e8b4035045d5768cbf7ee3577" translate="yes" xml:space="preserve">
          <source>IntervalIndex.mid</source>
          <target state="translated">IntervalIndex.mid</target>
        </trans-unit>
        <trans-unit id="2e1041618077823e767819c546bb70efb79daa91" translate="yes" xml:space="preserve">
          <source>IntervalIndex.overlaps()</source>
          <target state="translated">IntervalIndex.overlaps()</target>
        </trans-unit>
        <trans-unit id="a37c0ba96c8814c6943101b8673391e9cc26ee1b" translate="yes" xml:space="preserve">
          <source>IntervalIndex.right</source>
          <target state="translated">IntervalIndex.right</target>
        </trans-unit>
        <trans-unit id="3ccb379333e10d062197d41dfce4e67294c0feed" translate="yes" xml:space="preserve">
          <source>IntervalIndex.set_closed()</source>
          <target state="translated">IntervalIndex.set_closed()</target>
        </trans-unit>
        <trans-unit id="70ad5d670ae293049e41569b175e925263cca805" translate="yes" xml:space="preserve">
          <source>IntervalIndex.to_tuples()</source>
          <target state="translated">IntervalIndex.to_tuples()</target>
        </trans-unit>
        <trans-unit id="e51cd688868c6e31661b250e79b5c9ee25d45800" translate="yes" xml:space="preserve">
          <source>IntervalIndex.values</source>
          <target state="translated">IntervalIndex.values</target>
        </trans-unit>
        <trans-unit id="2e45ad9833e54b5a95cffb1a6d75c669070984d0" translate="yes" xml:space="preserve">
          <source>IntervalIndex[source]</source>
          <target state="translated">IntervalIndex[source]</target>
        </trans-unit>
        <trans-unit id="99267cc8937fb84d59bd60cc8326f8d752393db1" translate="yes" xml:space="preserve">
          <source>Intervals</source>
          <target state="translated">Intervals</target>
        </trans-unit>
        <trans-unit id="f914a9254e0df52fc99e182c3a247611439cd038" translate="yes" xml:space="preserve">
          <source>Intervals that only have an open endpoint in common do not overlap:</source>
          <target state="translated">Интервалы,которые имеют только открытую конечную точку,не пересекаются:</target>
        </trans-unit>
        <trans-unit id="046e05e92c867fcd7fe0e034d8463610f1f90f0a" translate="yes" xml:space="preserve">
          <source>Intervals that share closed endpoints overlap:</source>
          <target state="translated">Интервалы,которые разделяют закрытые конечные точки,пересекаются:</target>
        </trans-unit>
        <trans-unit id="16ab833a1b62c1e352db9cd104aa6510ffa72e6c" translate="yes" xml:space="preserve">
          <source>Intro to data structures</source>
          <target state="translated">Введение в структуры данных</target>
        </trans-unit>
        <trans-unit id="04af3b830174d871b2537725573c6b32e40ffe22" translate="yes" xml:space="preserve">
          <source>Intro to pandas data structures, by Greg Reda</source>
          <target state="translated">Введение в структуры данных о пандах,автор Грег Реда</target>
        </trans-unit>
        <trans-unit id="8d8b12a1b8fad8a954d19d380a53d0e32a7b2a61" translate="yes" xml:space="preserve">
          <source>Introspect the data deeply, interrogate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f478112ac03ff0b30a79a1b3bacd408da36f3147" translate="yes" xml:space="preserve">
          <source>Introspect the data deeply, interrogate &lt;code&gt;object&lt;/code&gt; dtypes for system-level memory consumption</source>
          <target state="translated">Глубоко анализируйте данные, исследуйте типы &lt;code&gt;object&lt;/code&gt; предмет потребления памяти на уровне системы.</target>
        </trans-unit>
        <trans-unit id="18647f2856109eab6741380adf9d4b1cfc6a7dc8" translate="yes" xml:space="preserve">
          <source>Intuitive &lt;strong&gt;merging&lt;/strong&gt; and &lt;strong&gt;joining&lt;/strong&gt; data sets</source>
          <target state="translated">Интуитивно понятное &lt;strong&gt;слияние&lt;/strong&gt; и &lt;strong&gt;объединение&lt;/strong&gt; наборов данных</target>
        </trans-unit>
        <trans-unit id="0de700c837994deac0f71db131be20824aec05ea" translate="yes" xml:space="preserve">
          <source>Invalid data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc054a8a14a9df996bdff4f66bcfae98815bf64" translate="yes" xml:space="preserve">
          <source>Inverse of DataFrame.squeeze for a single-column DataFrame.</source>
          <target state="translated">Обратный ход DataFrame.squeeze для одноколоночного DataFrame.</target>
        </trans-unit>
        <trans-unit id="d690b290c1d9f204aba4c8da17d652dd67780ada" translate="yes" xml:space="preserve">
          <source>Inverse of notna.</source>
          <target state="translated">Обратная сторона Нотны.</target>
        </trans-unit>
        <trans-unit id="40c85f2aa31e61c387db262d5d29d99841fb3d6e" translate="yes" xml:space="preserve">
          <source>Invoke function on a DataFrame.</source>
          <target state="translated">Функция Invoke на DataFrame.</target>
        </trans-unit>
        <trans-unit id="d3eba4a72537b40ba55a9a002c7e8d0dcbed2eb3" translate="yes" xml:space="preserve">
          <source>Invoke function on a Series.</source>
          <target state="translated">Спровоцировать функцию на серии.</target>
        </trans-unit>
        <trans-unit id="a4f1b06c5d6153d9b3232dab43627c47b17ae991" translate="yes" xml:space="preserve">
          <source>Invoke function on values of Series.</source>
          <target state="translated">Вызовите функцию на значениях Серии.</target>
        </trans-unit>
        <trans-unit id="b0eda3fd7457c0fb4308b75d0bf6df3d4719aced" translate="yes" xml:space="preserve">
          <source>Is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c6619af47fb5c7ef3fe542a82fff1059aa247b" translate="yes" xml:space="preserve">
          <source>It also accepts a function:</source>
          <target state="translated">Он также принимает функцию:</target>
        </trans-unit>
        <trans-unit id="44b08baebf66e0ec997fa1261237b3b2c4390d2f" translate="yes" xml:space="preserve">
          <source>It can also be called using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9adb6d06d998589f99169fb64c8fd5ada7fda5d" translate="yes" xml:space="preserve">
          <source>It can also be called using &lt;code&gt;self @ other&lt;/code&gt; in Python &amp;gt;= 3.5.</source>
          <target state="translated">Его также можно вызвать с помощью &lt;code&gt;self @ other&lt;/code&gt; в Python&amp;gt; = 3.5.</target>
        </trans-unit>
        <trans-unit id="5675034e6262a96842b16420f5246ac9e63a2bac" translate="yes" xml:space="preserve">
          <source>It comprises info about hosting operation system, pandas version, and versions of other installed relative packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47cf4ff5ccb9c9767c8153eafcd69b36fe1a6b4" translate="yes" xml:space="preserve">
          <source>It happens due to a lack of support or functionality for parsing a particular attribute of a CSV file with the requested engine.</source>
          <target state="translated">Это происходит из-за отсутствия поддержки или функциональности для разбора конкретного атрибута CSV-файла с запрошенным движком.</target>
        </trans-unit>
        <trans-unit id="aa96e1d3ca6bfa9dac9d1de8e26946bb72dcb049" translate="yes" xml:space="preserve">
          <source>It has the row axis labels and column axis labels as the only members. They are returned in that order.</source>
          <target state="translated">Он имеет метки оси строки и метки оси столбца как единственные члены.Они возвращаются в этом порядке.</target>
        </trans-unit>
        <trans-unit id="cada045892761ae7c694658c4bd800b3a75e5b62" translate="yes" xml:space="preserve">
          <source>It is a method of managing accounting periods. It is a common calendar structure for some industries, such as retail, manufacturing and parking industry.</source>
          <target state="translated">Это метод управления отчетными периодами.Это общая календарная структура для некоторых отраслей,таких как розничная торговля,обрабатывающая промышленность и паркинг.</target>
        </trans-unit>
        <trans-unit id="c0e8f0b4cc4c5ed8b297115ebfed0788f0cd941d" translate="yes" xml:space="preserve">
          <source>It is also possible to limit the number of splits:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e24e86445944e8ead3d97ed22a9314144854fb9" translate="yes" xml:space="preserve">
          <source>It is also possible to write data to and reading data from &lt;em&gt;Stata&lt;/em&gt; format files. See &lt;a href=&quot;io#io-stata-categorical&quot;&gt;here&lt;/a&gt; for an example and caveats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1435317d2f10cd5e8612788542b4b8c2dde550b" translate="yes" xml:space="preserve">
          <source>It is common to have missing values when stacking a dataframe with multi-level columns, as the stacked dataframe typically has more values than the original dataframe. Missing values are filled with NaNs:</source>
          <target state="translated">Обычно при укладке в стек многоуровневого кадра данных с многоуровневыми столбцами пропущенные значения отсутствуют,так как у сложенного кадра данных обычно больше значений,чем у исходного кадра данных.Пропущенные значения заполняются NaN:</target>
        </trans-unit>
        <trans-unit id="10af35212d670a59176d058c901f602e8e4be48b" translate="yes" xml:space="preserve">
          <source>It is easy to expand this to return a DataFrame using &lt;code&gt;expand&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176ebc53b273d38c1c21081b5f01e60bdfa5792d" translate="yes" xml:space="preserve">
          <source>It is either the integer position or the name of the level.</source>
          <target state="translated">Это либо целая позиция,либо название уровня.</target>
        </trans-unit>
        <trans-unit id="b120554c49e9baff61149785918279c7280f5c7b" translate="yes" xml:space="preserve">
          <source>It is essential to include the &amp;ldquo;Traceback (most recent call last):&amp;rdquo;, but for the actual error only the error name is sufficient.</source>
          <target state="translated">Важно включить &amp;laquo;Traceback (последний вызов последним):&amp;raquo;, но для фактической ошибки достаточно только имени ошибки.</target>
        </trans-unit>
        <trans-unit id="0c4e4afe2a289ec5a6b6091cc3fe64e6b9e19c2a" translate="yes" xml:space="preserve">
          <source>It is important to note that the &lt;code&gt;take&lt;/code&gt; method on pandas objects are not intended to work on boolean indices and may return unexpected results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc93790d379bc9a34625341d2edf23981d69536" translate="yes" xml:space="preserve">
          <source>It is important to note that tuples and lists are not treated identically in pandas when it comes to indexing. Whereas a tuple is interpreted as one multi-level key, a list is used to specify several keys. Or in other words, tuples go horizontally (traversing levels), lists go vertically (scanning levels).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ad71aaa1000d3d060b10677c25f08a15e453f4" translate="yes" xml:space="preserve">
          <source>It is important to remember that if multiple text columns are to be parsed into a single date column, then a new column is prepended to the data. The &lt;code&gt;index_col&lt;/code&gt; specification is based off of this new set of columns rather than the original data columns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe82361f15f2a4645d7faaceda05abd36de180b" translate="yes" xml:space="preserve">
          <source>It is not possible to export missing data values for integer data types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a44115bc32ce2fff47d51f5ea8647a954094c26" translate="yes" xml:space="preserve">
          <source>It is often the case that users will insert columns to do temporary computations in Excel and you may not want to read in those columns. &lt;code&gt;read_excel&lt;/code&gt; takes a &lt;code&gt;usecols&lt;/code&gt; keyword to allow you to specify a subset of columns to parse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf65d18ef9dce768a829e470e14e677ca80e0f44" translate="yes" xml:space="preserve">
          <source>It is often the case that we may want to store date and time data separately, or store various date fields separately. the &lt;code&gt;parse_dates&lt;/code&gt; keyword can be used to specify a combination of columns to parse the dates and/or times from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf20a9a97f2b931f240e87d620d37af27ccae64" translate="yes" xml:space="preserve">
          <source>It is possible to build Intervals of different types, like numeric ones:</source>
          <target state="translated">Можно строить интервалы различных типов,например,числовые:</target>
        </trans-unit>
        <trans-unit id="a47534cfb6d93e22f8fc966a14d48f559d192943" translate="yes" xml:space="preserve">
          <source>It is possible to perform quite complicated selections using this method on multiple axes at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1acbb5570e1ee54d1345609bd18996911df52322" translate="yes" xml:space="preserve">
          <source>It is possible to transform the contents of Excel cells via the &lt;code&gt;converters&lt;/code&gt; option. For instance, to convert a column to boolean:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="face2cae8856d82f87a552ddec8622867741ca2a" translate="yes" xml:space="preserve">
          <source>It is possible to use &lt;code&gt;resample()&lt;/code&gt;, &lt;code&gt;expanding()&lt;/code&gt; and &lt;code&gt;rolling()&lt;/code&gt; as methods on groupbys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b17dd85fbdb40bba9ba1372950d7bf6e98ddb5" translate="yes" xml:space="preserve">
          <source>It is possible to write an &lt;code&gt;HDFStore&lt;/code&gt; object that can easily be imported into &lt;code&gt;R&lt;/code&gt; using the &lt;code&gt;rhdf5&lt;/code&gt; library (&lt;a href=&quot;https://www.bioconductor.org/packages/release/bioc/html/rhdf5.html&quot;&gt;Package website&lt;/a&gt;). Create a table format store like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62847387767a7afc5ad5291db471feec4822d63" translate="yes" xml:space="preserve">
          <source>It is therefore &lt;em&gt;highly recommended&lt;/em&gt; that you install both &lt;a href=&quot;https://www.crummy.com/software/BeautifulSoup&quot;&gt;&lt;strong&gt;BeautifulSoup4&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/html5lib/html5lib-python&quot;&gt;&lt;strong&gt;html5lib&lt;/strong&gt;&lt;/a&gt;, so that you will still get a valid result (provided everything else is valid) even if &lt;a href=&quot;https://lxml.de&quot;&gt;&lt;strong&gt;lxml&lt;/strong&gt;&lt;/a&gt; fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf50fe891b0debf64c1e6afa77c7a39270fd607" translate="yes" xml:space="preserve">
          <source>It is used by companies that desire that their fiscal year always end on the same day of the week.</source>
          <target state="translated">Его используют компании,которые хотят,чтобы их финансовый год всегда заканчивался в один и тот же день недели.</target>
        </trans-unit>
        <trans-unit id="e0f6ba4f80185b4f99c031219bda9ccf98d608e8" translate="yes" xml:space="preserve">
          <source>It is worth noting that &lt;a href=&quot;../reference/api/pandas.concat#pandas.concat&quot;&gt;&lt;code&gt;concat()&lt;/code&gt;&lt;/a&gt; (and therefore &lt;code&gt;append()&lt;/code&gt;) makes a full copy of the data, and that constantly reusing this function can create a significant performance hit. If you need to use the operation over several datasets, use a list comprehension.</source>
          <target state="translated">Стоит отметить, что &lt;a href=&quot;../reference/api/pandas.concat#pandas.concat&quot;&gt; &lt;code&gt;concat()&lt;/code&gt; &lt;/a&gt; (и, следовательно, &lt;code&gt;append()&lt;/code&gt; ) делает полную копию данных, и что постоянное повторное использование этой функции может значительно снизить производительность. Если вам нужно использовать операцию с несколькими наборами данных, используйте составление списка.</target>
        </trans-unit>
        <trans-unit id="eaa4934a12e443f7dbe57f0ca725c8df9fab291f" translate="yes" xml:space="preserve">
          <source>It is worth spending some time understanding the result of the &lt;strong&gt;many-to-many&lt;/strong&gt; join case. In SQL / standard relational algebra, if a key combination appears more than once in both tables, the resulting table will have the &lt;strong&gt;Cartesian product&lt;/strong&gt; of the associated data. Here is a very basic example with one unique key combination:</source>
          <target state="translated">Стоит потратить некоторое время на понимание результата случая объединения &quot; &lt;strong&gt;многие ко многим&quot;&lt;/strong&gt; . В SQL / стандартной реляционной алгебре, если комбинация клавиш встречается более одного раза в обеих таблицах, результирующая таблица будет иметь &lt;strong&gt;декартово произведение&lt;/strong&gt; связанных данных. Вот очень простой пример с одной уникальной комбинацией клавиш:</target>
        </trans-unit>
        <trans-unit id="6a91907e88be15224f38fbd89163c5e494f3683e" translate="yes" xml:space="preserve">
          <source>It may also be constructed using one of the constructor methods: &lt;a href=&quot;pandas.arrays.intervalarray.from_arrays#pandas.arrays.IntervalArray.from_arrays&quot;&gt;&lt;code&gt;IntervalArray.from_arrays()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pandas.arrays.intervalarray.from_breaks#pandas.arrays.IntervalArray.from_breaks&quot;&gt;&lt;code&gt;IntervalArray.from_breaks()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;pandas.arrays.intervalarray.from_tuples#pandas.arrays.IntervalArray.from_tuples&quot;&gt;&lt;code&gt;IntervalArray.from_tuples()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Его также можно создать с помощью одного из методов конструктора: &lt;a href=&quot;pandas.arrays.intervalarray.from_arrays#pandas.arrays.IntervalArray.from_arrays&quot;&gt; &lt;code&gt;IntervalArray.from_arrays()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;pandas.arrays.intervalarray.from_breaks#pandas.arrays.IntervalArray.from_breaks&quot;&gt; &lt;code&gt;IntervalArray.from_breaks()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;pandas.arrays.intervalarray.from_tuples#pandas.arrays.IntervalArray.from_tuples&quot;&gt; &lt;code&gt;IntervalArray.from_tuples()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e89f669ea2f289b1ebf71793b7280cf4814ffece" translate="yes" xml:space="preserve">
          <source>It may also be constructed using one of the constructor methods: &lt;a href=&quot;pandas.intervalindex.from_arrays#pandas.IntervalIndex.from_arrays&quot;&gt;&lt;code&gt;IntervalIndex.from_arrays()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pandas.intervalindex.from_breaks#pandas.IntervalIndex.from_breaks&quot;&gt;&lt;code&gt;IntervalIndex.from_breaks()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;pandas.intervalindex.from_tuples#pandas.IntervalIndex.from_tuples&quot;&gt;&lt;code&gt;IntervalIndex.from_tuples()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Его также можно создать с помощью одного из методов конструктора: &lt;a href=&quot;pandas.intervalindex.from_arrays#pandas.IntervalIndex.from_arrays&quot;&gt; &lt;code&gt;IntervalIndex.from_arrays()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;pandas.intervalindex.from_breaks#pandas.IntervalIndex.from_breaks&quot;&gt; &lt;code&gt;IntervalIndex.from_breaks()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;pandas.intervalindex.from_tuples#pandas.IntervalIndex.from_tuples&quot;&gt; &lt;code&gt;IntervalIndex.from_tuples()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9b9f501078cf4368e7d70cfba16ee7bd61fadfce" translate="yes" xml:space="preserve">
          <source>It raises &lt;code&gt;ValueError&lt;/code&gt; if &lt;code&gt;expand=False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9e72c397399760ba97009c7aec0d45b4773cf4" translate="yes" xml:space="preserve">
          <source>It returns a Series if &lt;code&gt;expand=False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1965168c6ad3d2b2d00cfe7cb6d868859c6e1cf0" translate="yes" xml:space="preserve">
          <source>It returns a tuple with both of the reindexed Series:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8aee877c6750a1db56ba234e0ede192f8d280e0" translate="yes" xml:space="preserve">
          <source>It returns an &lt;code&gt;Index&lt;/code&gt; if &lt;code&gt;expand=False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b60c6531f9dcd59ce94db4d583a6d22c8ef5f95" translate="yes" xml:space="preserve">
          <source>It should be clear that a delete operation on the &lt;code&gt;major_axis&lt;/code&gt; will be fairly quick, as one chunk is removed, then the following data moved. On the other hand a delete operation on the &lt;code&gt;minor_axis&lt;/code&gt; will be very expensive. In this case it would almost certainly be faster to rewrite the table using a &lt;code&gt;where&lt;/code&gt; that selects all but the missing data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f902fc990aa7cc18eb45b140ab7705616e4efc" translate="yes" xml:space="preserve">
          <source>It should be no shock that combining &lt;code&gt;pivot&lt;/code&gt; / &lt;code&gt;stack&lt;/code&gt; / &lt;code&gt;unstack&lt;/code&gt; with GroupBy and the basic Series and DataFrame statistical functions can produce some very expressive and fast data manipulations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64734278bc40eead4242df2ed6009ad15db5c0f8" translate="yes" xml:space="preserve">
          <source>It takes a number of arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6172f9d0a37257b3cd71558e4cc581197b27469d" translate="yes" xml:space="preserve">
          <source>It takes a number of arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d9442d18382737e05716e7365d40e909103230" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also possible to pass in the categories in a specific order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22f7b9673efd4bdca1a8204626e4cecca8c8438" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also possible to reset multiple options at once (using a regex):</source>
          <target state="translated">Также можно сбросить сразу несколько параметров (с помощью регулярного выражения):</target>
        </trans-unit>
        <trans-unit id="1d903bf37e5033b95bb15d23458bf8dd3b7b9fb7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s best to use &lt;a href=&quot;../reference/api/pandas.concat#pandas.concat&quot;&gt;&lt;code&gt;concat()&lt;/code&gt;&lt;/a&gt; to combine multiple files. See the &lt;a href=&quot;cookbook#cookbook-csv-multiple-files&quot;&gt;cookbook&lt;/a&gt; for an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde18c5154934d38ec54fad83f0a306e78baec06" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s calling series&amp;hellip; a lot! It&amp;rsquo;s creating a Series from each row, and get-ting from both the index and the series (three times for each row). Function calls are expensive in Python, so maybe we could minimize these by cythonizing the apply part.</source>
          <target state="translated">Звонит сериал&amp;hellip; много! Он создает серию из каждой строки и получает как из индекса, так и из серии (три раза для каждой строки). Вызов функций в Python обходится дорого, поэтому, возможно, мы могли бы минимизировать их, цитируя часть приложения.</target>
        </trans-unit>
        <trans-unit id="633acfa7a5bf5c0d9c2c531e7d5e157154240e8a" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s expected &lt;code&gt;ExtensionArray[item]&lt;/code&gt; returns an instance of &lt;code&gt;ExtensionDtype.type&lt;/code&gt; for scalar &lt;code&gt;item&lt;/code&gt;, assuming that value is valid (not NA). NA values do not need to be instances of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0d3a5efe04f2e2491accd44fecd68fa3e8bf5c" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s expected &lt;code&gt;ExtensionArray[item]&lt;/code&gt; returns an instance of &lt;code&gt;ExtensionDtype.type&lt;/code&gt; for scalar &lt;code&gt;item&lt;/code&gt;, assuming that value is valid (not NA). NA values do not need to be instances of &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">Ожидается, что &lt;code&gt;ExtensionArray[item]&lt;/code&gt; вернет экземпляр &lt;code&gt;ExtensionDtype.type&lt;/code&gt; для скалярного &lt;code&gt;item&lt;/code&gt; , предполагая, что значение является допустимым (не NA). Значения NA не обязательно должны быть экземплярами &lt;code&gt;type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98b2cf4ca3f071ebc59b98ae6a34b34954209985" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s not a stretch to see how this can be very useful. More detail on this functionality below.</source>
          <target state="translated">Нетрудно понять, насколько это может быть очень полезно. Подробнее об этой функции ниже.</target>
        </trans-unit>
        <trans-unit id="4d6eac4cd916d0a348f38d74d4e531d9ded33f95" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s not possible to specify labels at creation time. Use &lt;code&gt;s.cat.rename_categories(new_labels)&lt;/code&gt; afterwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c768bde3eb58561665998b83f874ea6333cf11b1" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s worth keeping in mind that there&amp;rsquo;s nothing preventing you from using tuples as atomic labels on an axis:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a417ea7902b5fff6f2786510694bba49116e00" translate="yes" xml:space="preserve">
          <source>Item assignment is provided and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3c510821ad1e4e27fe02ed3acba5ab52a50ac0" translate="yes" xml:space="preserve">
          <source>Item assignment is provided and &lt;code&gt;inplace=False&lt;/code&gt;, but the &lt;code&gt;target&lt;/code&gt; does not support the &lt;code&gt;.copy()&lt;/code&gt; method</source>
          <target state="translated">Назначение товара обеспечивается и &lt;code&gt;inplace=False&lt;/code&gt; , но &lt;code&gt;target&lt;/code&gt; не поддерживает &lt;code&gt;.copy()&lt;/code&gt; метод</target>
        </trans-unit>
        <trans-unit id="feaca6646435491aa2a386bb679999923e6e5aa6" translate="yes" xml:space="preserve">
          <source>Item assignment is provided, but the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c287aea392c82443836cfc718b8654886670c06d" translate="yes" xml:space="preserve">
          <source>Item assignment is provided, but the &lt;code&gt;target&lt;/code&gt; does not support string item assignment.</source>
          <target state="translated">Предусмотрено назначение элемента, но &lt;code&gt;target&lt;/code&gt; не поддерживает назначение элемента строки.</target>
        </trans-unit>
        <trans-unit id="2d1507856c15bff65884562b15f521215dbcf61f" translate="yes" xml:space="preserve">
          <source>Items that show up in the opening &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; tag in addition to automatic (by default) id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f5dc3cadaa2af15a2ba031585953c2abcd47a7" translate="yes" xml:space="preserve">
          <source>Iterable introspection</source>
          <target state="translated">бесконечная интроспекция</target>
        </trans-unit>
        <trans-unit id="5eac16a547e2f931b2e9f446f41c0857079799ae" translate="yes" xml:space="preserve">
          <source>Iterable of tuples containing the (index, value) pairs from a Series.</source>
          <target state="translated">Иterable кортежей,содержащих пары (индекс,значение)из серии.</target>
        </trans-unit>
        <trans-unit id="102a4b85399f6757563e9f3de3984b8f8ded48e5" translate="yes" xml:space="preserve">
          <source>Iterate over (column name, Series) pairs.</source>
          <target state="translated">Итерация по парам (название колонки,серия).</target>
        </trans-unit>
        <trans-unit id="312810442c6cae3171af42900d398712647519ee" translate="yes" xml:space="preserve">
          <source>Iterate over DataFrame rows as (index, Series) pairs.</source>
          <target state="translated">Итерация по строкам DataFrame в виде пар (индекс,серия).</target>
        </trans-unit>
        <trans-unit id="2c3371ca132475cd8741cdd3198d6ce789891aa0" translate="yes" xml:space="preserve">
          <source>Iterate over DataFrame rows as namedtuples of the values.</source>
          <target state="translated">Итерация по строкам DataFrame как именованныеtuples значений.</target>
        </trans-unit>
        <trans-unit id="1b4f5ac41bf10f19897db9cff2541f559fd3e17c" translate="yes" xml:space="preserve">
          <source>Iterate over DataFrame rows as namedtuples.</source>
          <target state="translated">Итерация по строкам DataFrame в виде именных фреймов.</target>
        </trans-unit>
        <trans-unit id="6050b81fdd2d2486ae1ccd50aea127aa5ddaf879" translate="yes" xml:space="preserve">
          <source>Iterate over info axis.</source>
          <target state="translated">Итерация по информационной оси.</target>
        </trans-unit>
        <trans-unit id="c303304ed8c81f3dcd00ea91d77064a996a41e5a" translate="yes" xml:space="preserve">
          <source>Iterates over the DataFrame columns, returning a tuple with the column name and the content as a Series.</source>
          <target state="translated">Итерации по столбцам DataFrame,возвращая кортеж с именем столбца и содержимым в виде серии.</target>
        </trans-unit>
        <trans-unit id="fd51d9a61fa63b238945eb94ec8ef1e47118fe8c" translate="yes" xml:space="preserve">
          <source>Iterating through files chunk by chunk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d956311afd85fb48f06f7756942d752b970d7921" translate="yes" xml:space="preserve">
          <source>Iterating through groups</source>
          <target state="translated">Итерация через группы</target>
        </trans-unit>
        <trans-unit id="60ffbf2958ea85c040366bceddbbdb8adc6aecb2" translate="yes" xml:space="preserve">
          <source>Iterating through pandas objects is generally &lt;strong&gt;slow&lt;/strong&gt;. In many cases, iterating manually over the rows is not needed and can be avoided with one of the following approaches:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18905aab409cadb5b72681a650ec99001cb221e0" translate="yes" xml:space="preserve">
          <source>Iteration</source>
          <target state="translated">Iteration</target>
        </trans-unit>
        <trans-unit id="3d786ab990cb68937c979af669132a6fff465c2e" translate="yes" xml:space="preserve">
          <source>Iteratively appending rows to a DataFrame can be more computationally intensive than a single concatenate. A better solution is to append those rows to a list and then concatenate the list with the original DataFrame all at once.</source>
          <target state="translated">Итеративно добавляемые строки к DataFrame могут быть более интенсивными с вычислительной точки зрения,чем один конкатенат.Лучшим решением является добавление этих строк в список,а затем соединение списка с исходным DataFrame сразу.</target>
        </trans-unit>
        <trans-unit id="85d3a7e41c4c159c394df7e13d5aabafb4a54d84" translate="yes" xml:space="preserve">
          <source>Iteratively appending to a Series can be more computationally intensive than a single concatenate. A better solution is to append values to a list and then concatenate the list with the original Series all at once.</source>
          <target state="translated">Итеративное добавление к серии может быть более интенсивным с точки зрения вычислений,чем одиночный конкатенат.Лучшим решением является добавление значений к списку,а затем одновременное соединение списка с исходной Серией.</target>
        </trans-unit>
        <trans-unit id="bae8809b2429231a50c28ba87cecc038aac88855" translate="yes" xml:space="preserve">
          <source>Iterator</source>
          <target state="translated">Iterator</target>
        </trans-unit>
        <trans-unit id="1ac9d6f2837ffeca47fa8ed574cad7d73a9ebb27" translate="yes" xml:space="preserve">
          <source>Iterator over (column name, Series) pairs.</source>
          <target state="translated">Итератор над (название колонки,серия)парами.</target>
        </trans-unit>
        <trans-unit id="9c0c781aaf9628673ff5ee1fdf35e3d17aa036a0" translate="yes" xml:space="preserve">
          <source>Its &lt;a href=&quot;https://docs.spyder-ide.org/variableexplorer.html&quot;&gt;Variable Explorer&lt;/a&gt; allows users to view, manipulate and edit pandas &lt;code&gt;Index&lt;/code&gt;, &lt;code&gt;Series&lt;/code&gt;, and &lt;code&gt;DataFrame&lt;/code&gt; objects like a &amp;ldquo;spreadsheet&amp;rdquo;, including copying and modifying values, sorting, displaying a &amp;ldquo;heatmap&amp;rdquo;, converting data types and more. Pandas objects can also be renamed, duplicated, new columns added, copyed/pasted to/from the clipboard (as TSV), and saved/loaded to/from a file. Spyder can also import data from a variety of plain text and binary files or the clipboard into a new pandas DataFrame via a sophisticated import wizard.</source>
          <target state="translated">Его &lt;a href=&quot;https://docs.spyder-ide.org/variableexplorer.html&quot;&gt;Variable Explorer&lt;/a&gt; позволяет пользователям просматривать, манипулировать и редактировать объекты pandas &lt;code&gt;Index&lt;/code&gt; , &lt;code&gt;Series&lt;/code&gt; и &lt;code&gt;DataFrame&lt;/code&gt; , такие как &amp;laquo;электронная таблица&amp;raquo;, включая копирование и изменение значений, сортировку, отображение &amp;laquo;тепловой карты&amp;raquo;, преобразование типов данных и многое другое. Объекты Pandas также можно переименовывать, дублировать, добавлять новые столбцы, копировать / вставлять в / из буфера обмена (как TSV) и сохранять / загружать в / из файла. Spyder также может импортировать данные из различных текстовых и двоичных файлов или из буфера обмена в новый фрейм данных pandas с помощью сложного мастера импорта.</target>
        </trans-unit>
        <trans-unit id="636770bef69ef6eca66b715de8caeca99098c690" translate="yes" xml:space="preserve">
          <source>Its row and column indices are used to define the new indices of this object.</source>
          <target state="translated">Его индексы строки и столбца используются для определения новых индексов данного объекта.</target>
        </trans-unit>
        <trans-unit id="9a3f6528f2606d1ed81f1e9f85b624a26b98cbbe" translate="yes" xml:space="preserve">
          <source>JOIN</source>
          <target state="translated">JOIN</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="58a3481320054de4482f5fe977bc4804abd5d7bd" translate="yes" xml:space="preserve">
          <source>January 31st (&amp;lsquo;END&amp;rsquo;) vs. January 1st (&amp;lsquo;START&amp;rsquo;) for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55bd9f644ed1879ac807b80efec3b8546a247ed4" translate="yes" xml:space="preserve">
          <source>Jinja2</source>
          <target state="translated">Jinja2</target>
        </trans-unit>
        <trans-unit id="e1f9a9fc7e35bca9a1c70dd51f9727e338f07aad" translate="yes" xml:space="preserve">
          <source>Jit</source>
          <target state="translated">Jit</target>
        </trans-unit>
        <trans-unit id="e0d73143de80d17e82de2e017ac156ca3b9c4e01" translate="yes" xml:space="preserve">
          <source>Join</source>
          <target state="translated">Join</target>
        </trans-unit>
        <trans-unit id="fbf76ec8bd2376ecc55d846ec46090ec2415b49d" translate="yes" xml:space="preserve">
          <source>Join DataFrames using indexes.</source>
          <target state="translated">Присоединяйтесь к DataFrames с помощью индексов.</target>
        </trans-unit>
        <trans-unit id="fb22fde5735d985c24376dbc60298adb2c414047" translate="yes" xml:space="preserve">
          <source>Join DataFrames using their indexes.</source>
          <target state="translated">Присоединяйтесь к DataFrames,используя их индексы.</target>
        </trans-unit>
        <trans-unit id="882338627d29897ec99fb741b7ba17cf79a1b429" translate="yes" xml:space="preserve">
          <source>Join all lists using a &amp;lsquo;-&amp;lsquo;. The lists containing object(s) of types other than str will produce a NaN.</source>
          <target state="translated">Присоединяйтесь ко всем спискам, используя &quot;-&quot;. Списки, содержащие объект (ы) типов, отличных от str, будут давать NaN.</target>
        </trans-unit>
        <trans-unit id="e298a89c4477958b4df27704021f2a2b868c7fb6" translate="yes" xml:space="preserve">
          <source>Join columns of another DataFrame.</source>
          <target state="translated">Присоедините колонки другого DataFrame.</target>
        </trans-unit>
        <trans-unit id="fdef4175d4dbabfe1c9ba53ac6c4f10d064b043e" translate="yes" xml:space="preserve">
          <source>Join columns with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37f45376f01df0c556006f00d48938002e3c92e" translate="yes" xml:space="preserve">
          <source>Join columns with &lt;code&gt;other&lt;/code&gt; DataFrame either on index or on a key column. Efficiently join multiple DataFrame objects by index at once by passing a list.</source>
          <target state="translated">Соедините столбцы с &lt;code&gt;other&lt;/code&gt; DataFrame либо по индексу, либо по ключевому столбцу. Эффективно объединяйте сразу несколько объектов DataFrame по индексу, передавая список.</target>
        </trans-unit>
        <trans-unit id="c997f74be0e40b5971f87acfbf88aeafaa677b94" translate="yes" xml:space="preserve">
          <source>Join lists contained as elements in the Series/Index with passed delimiter.</source>
          <target state="translated">Присоединитесь к спискам,содержащимся в виде элементов в Series/Index с переданным разделителем.</target>
        </trans-unit>
        <trans-unit id="9b74f7ea6bc290c72144e1b009ae3ba3a446e210" translate="yes" xml:space="preserve">
          <source>Join lists contained as elements in the Series/Index.</source>
          <target state="translated">Списки участников,содержащиеся в качестве элементов в Серии/Индексе.</target>
        </trans-unit>
        <trans-unit id="be3b005444fd89aee662ae556eb126d898e27c23" translate="yes" xml:space="preserve">
          <source>Join method is specified for each axis Index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1916758377e680785c70f3c9a212b3b143b916" translate="yes" xml:space="preserve">
          <source>Join strings in each element of the Series with passed separator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9547f774a84d34dcc49b0d035b187cc047c5a1" translate="yes" xml:space="preserve">
          <source>Join with a criteria based on the values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce34900917db8feee75789b2905238ac3a987eb" translate="yes" xml:space="preserve">
          <source>Joining / merging on duplicate keys can cause a returned frame that is the multiplication of the row dimensions, which may result in memory overflow. It is the user&amp;rsquo; s responsibility to manage duplicate values in keys before joining large DataFrames.</source>
          <target state="translated">Объединение / объединение повторяющихся ключей может вызвать возвращаемый кадр, который является умножением размеров строки, что может привести к переполнению памяти. Пользователь несет ответственность за управление повторяющимися значениями в ключах перед присоединением к большим фреймам данных.</target>
        </trans-unit>
        <trans-unit id="1aaf9a1f1049451f216efd0387ee8b1776a0e2c6" translate="yes" xml:space="preserve">
          <source>Joining a single Index to a MultiIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bed6c821aa405f5d3b527e1d145e9bfc5b047ed" translate="yes" xml:space="preserve">
          <source>Joining key columns on an index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49561ecf6909a253bf1355674051150554400159" translate="yes" xml:space="preserve">
          <source>Joining multiple DataFrames</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf30d69b54a517e80d30a5c6f37c70898547e5ae" translate="yes" xml:space="preserve">
          <source>Joining on index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f136e637a0a57072f38a8867f7c27190885bbc8" translate="yes" xml:space="preserve">
          <source>Joining with two MultiIndexes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36203f35f42db555dc5bbef7dc0fd1a0b4670df8" translate="yes" xml:space="preserve">
          <source>Jupyter Notebook / Jupyter Lab</source>
          <target state="translated">Jupyter Notebook/Jupyter Lab</target>
        </trans-unit>
        <trans-unit id="568f57357effa4372f3f919abc2e99f3803359ba" translate="yes" xml:space="preserve">
          <source>Jupyter Notebook is a web application for creating Jupyter notebooks. A Jupyter notebook is a JSON document containing an ordered list of input/output cells which can contain code, text, mathematics, plots and rich media. Jupyter notebooks can be converted to a number of open standard output formats (HTML, HTML presentation slides, LaTeX, PDF, ReStructuredText, Markdown, Python) through &amp;lsquo;Download As&amp;rsquo; in the web interface and &lt;code&gt;jupyter convert&lt;/code&gt; in a shell.</source>
          <target state="translated">Jupyter Notebook - это веб-приложение для создания записных книжек Jupyter. Записная книжка Jupyter - это документ JSON, содержащий упорядоченный список ячеек ввода / вывода, который может содержать код, текст, математические данные, графики и мультимедийные данные. Блокноты Jupyter можно преобразовать в несколько открытых стандартных форматов вывода (HTML, слайды презентации HTML, LaTeX, PDF, ReStructuredText, Markdown, Python) с помощью функции &amp;laquo;Загрузить как&amp;raquo; в веб-интерфейсе и &lt;code&gt;jupyter convert&lt;/code&gt; в оболочке.</target>
        </trans-unit>
        <trans-unit id="4bda8873caae09d45fbb07657aa82533424515ef" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;DatetimeIndex&lt;/code&gt;, a &lt;code&gt;PeriodIndex&lt;/code&gt; can also be used to index pandas objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de08fbe3f7acf40b96e47634a280b0d9f354d60d" translate="yes" xml:space="preserve">
          <source>Just like for a DataFrame or Series you can call head and tail on a groupby:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6efc3e93d93667c747948a5979f077716e5d42d" translate="yes" xml:space="preserve">
          <source>Just reset the index, without inserting it as a column in the new DataFrame.</source>
          <target state="translated">Просто сбросьте индекс,не вставляя его как столбец в новый DataFrame.</target>
        </trans-unit>
        <trans-unit id="d5d42afc7cb04b03088f64ac2ef30153ed952c79" translate="yes" xml:space="preserve">
          <source>Just slicing without replacement.</source>
          <target state="translated">Просто нарезаю без замены.</target>
        </trans-unit>
        <trans-unit id="d6875d4a085a012ba2ce664f1f3a15d0acb6d85d" translate="yes" xml:space="preserve">
          <source>KDB like asof join</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4621d6841f56c8aecb7eab95c28aa5a33dc41e0" translate="yes" xml:space="preserve">
          <source>KDE</source>
          <target state="translated">KDE</target>
        </trans-unit>
        <trans-unit id="92164114d978ebdee29a46030047588d1c6dfcec" translate="yes" xml:space="preserve">
          <source>Keep all original rows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fafe44942675b8b76e69078266116e7330a338" translate="yes" xml:space="preserve">
          <source>Keep all original rows and also all original values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15e01303b38364ed1682dd0b8805dc66179de2c" translate="yes" xml:space="preserve">
          <source>Keep all original rows and columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159d098ff79b1e0e7968dbbcf9647003b0cccbcc" translate="yes" xml:space="preserve">
          <source>Keep all original rows and columns and also all original values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb944356d960a8e872e407ef82d00669d9eac1e" translate="yes" xml:space="preserve">
          <source>Keep labels from axis for which &amp;ldquo;like in label == True&amp;rdquo;.</source>
          <target state="translated">Сохраняйте метки от оси, для которой &amp;laquo;как в метке == True&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="e573145f509f9b3394a77bfe9afb2d201ba08310" translate="yes" xml:space="preserve">
          <source>Keep labels from axis for which re.search(regex, label) == True.</source>
          <target state="translated">Хранить метки от оси,для которой re.search(regex,label)==True.</target>
        </trans-unit>
        <trans-unit id="7177dff1e598659f3641f9154581ff2e0e1ee47d" translate="yes" xml:space="preserve">
          <source>Keep labels from axis which are in items.</source>
          <target state="translated">Сохраняйте метки от осей,которые находятся в элементах.</target>
        </trans-unit>
        <trans-unit id="597d747eb72ca09cf3654d4dc386e49f21b4bd19" translate="yes" xml:space="preserve">
          <source>Keep only the rows with at least 2 non-NA values.</source>
          <target state="translated">Храните только строки с не менее чем 2 значениями,не относящимися к NA.</target>
        </trans-unit>
        <trans-unit id="49f6767309c6515a1b3932a35c6b237971659750" translate="yes" xml:space="preserve">
          <source>Keep other columns when using min() with groupby</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162be66324fa12a2ec251bc8210895db9520b1ac" translate="yes" xml:space="preserve">
          <source>Keep style fixes to a separate commit to make your pull request more readable.</source>
          <target state="translated">Держите стиль исправления к отдельному обязательству,чтобы сделать ваш запрос тянуть более читабельным.</target>
        </trans-unit>
        <trans-unit id="1194ae05fcf2fd9f429a91dd1a6004ef41fd2e6e" translate="yes" xml:space="preserve">
          <source>Keep the DataFrame with valid entries in the same variable.</source>
          <target state="translated">Храните DataFrame с валидными записями в одной переменной.</target>
        </trans-unit>
        <trans-unit id="b3e717fb938ce18c04eb5f43e45d5a84cd6a4060" translate="yes" xml:space="preserve">
          <source>Keep the Series with valid entries in the same variable.</source>
          <target state="translated">Держите серию с допустимыми записями в одной переменной.</target>
        </trans-unit>
        <trans-unit id="496ac683e0021004f0854bfef8606ff4f3ca9c72" translate="yes" xml:space="preserve">
          <source>Keep the equal values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3efb43537a407e2b7346a112b7047b1e0f6443b" translate="yes" xml:space="preserve">
          <source>Kendall Tau correlation coefficient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bfdceb95cc6bb17e6394823d3c4c3175815f258" translate="yes" xml:space="preserve">
          <source>Kendall rank correlation coefficient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d66f420769053d53f233ca2cb66a70e0a195177" translate="yes" xml:space="preserve">
          <source>Kept for compatibility with MultiIndex. Should not be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf9689c9765bc864b5609b5afaf0790b140407c" translate="yes" xml:space="preserve">
          <source>Key-value representation of Series.</source>
          <target state="translated">Ключевое представление Серии.</target>
        </trans-unit>
        <trans-unit id="74018238351de8a4b5f41ef51f98e3f2c94d5837" translate="yes" xml:space="preserve">
          <source>KeyError</source>
          <target state="translated">KeyError</target>
        </trans-unit>
        <trans-unit id="0c73c5da661d43089ff827571cb5b299bb39aaf3" translate="yes" xml:space="preserve">
          <source>KeyError:</source>
          <target state="translated">KeyError:</target>
        </trans-unit>
        <trans-unit id="a314199b9cf6da244be1be86e61bcabb1bd81df5" translate="yes" xml:space="preserve">
          <source>Keys to a store can be specified as a string. These can be in a hierarchical path-name like format (e.g. &lt;code&gt;foo/bar/bah&lt;/code&gt;), which will generate a hierarchy of sub-stores (or &lt;code&gt;Groups&lt;/code&gt; in PyTables parlance). Keys can be specified without the leading &amp;lsquo;/&amp;rsquo; and are &lt;strong&gt;always&lt;/strong&gt; absolute (e.g. &amp;lsquo;foo&amp;rsquo; refers to &amp;lsquo;/foo&amp;rsquo;). Removal operations can remove everything in the sub-store and &lt;strong&gt;below&lt;/strong&gt;, so be &lt;em&gt;careful&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bd7c1e3bd420fe9b0bc72c44fb644a63b07026" translate="yes" xml:space="preserve">
          <source>Keyword arguments to be passed into func.</source>
          <target state="translated">Ключевые аргументы,которые необходимо передать в func.</target>
        </trans-unit>
        <trans-unit id="906bdc5926a91c099428c405a99abb6e5be99460" translate="yes" xml:space="preserve">
          <source>Keyword arguments to be passed to hist function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ebdda4099121b4fc33e16a7cb88fda106d6ab7" translate="yes" xml:space="preserve">
          <source>Keyword arguments to be passed to kernel density estimate plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea41d64849fc67faded481cc9b307ec7496790d" translate="yes" xml:space="preserve">
          <source>Keyword arguments to be passed to matplotlib.table.table. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695c951d72ea95ea3979e3cfc3d49cc434530dbf" translate="yes" xml:space="preserve">
          <source>Keyword arguments to be passed to scatter function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7cf5255d9ccf93c28767b4b12e034779b47e798" translate="yes" xml:space="preserve">
          <source>Keyword arguments to pass on to &lt;a href=&quot;pandas.dataframe.plot#pandas.DataFrame.plot&quot;&gt;&lt;code&gt;DataFrame.plot()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Аргументы &lt;a href=&quot;pandas.dataframe.plot#pandas.DataFrame.plot&quot;&gt; &lt;code&gt;DataFrame.plot()&lt;/code&gt; &lt;/a&gt; слова для передачи в DataFrame.plot () .</target>
        </trans-unit>
        <trans-unit id="b27249ce776ae92fd332bc046726fa997294ec48" translate="yes" xml:space="preserve">
          <source>Keyword arguments to pass on to the interpolating function.</source>
          <target state="translated">Ключевые аргументы для передачи в интерполяционную функцию.</target>
        </trans-unit>
        <trans-unit id="c52f1d088d5757bf2dfdb56bb475f8e9d957abc1" translate="yes" xml:space="preserve">
          <source>Keyword arguments to pass to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d23cde6551ec047458dff3ea9953074353411a" translate="yes" xml:space="preserve">
          <source>Keyword arguments to pass to &lt;code&gt;func&lt;/code&gt;.</source>
          <target state="translated">Аргументы ключевого слова для передачи &lt;code&gt;func&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b3d684842fcd4c876a4d96144408d928e08d0e4" translate="yes" xml:space="preserve">
          <source>Kind of Data</source>
          <target state="translated">Вид данных</target>
        </trans-unit>
        <trans-unit id="8947d21b132c3b2ea9866c11de9378719cff9533" translate="yes" xml:space="preserve">
          <source>Kleene logical operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296689fc2df214d907fc533246fca505b2995265" translate="yes" xml:space="preserve">
          <source>Koalas</source>
          <target state="translated">Koalas</target>
        </trans-unit>
        <trans-unit id="feee637174522efa0c10f14f4ba84c841a0fa747" translate="yes" xml:space="preserve">
          <source>Koalas provides a familiar pandas DataFrame interface on top of Apache Spark. It enables users to leverage multi-cores on one machine or a cluster of machines to speed up or scale their DataFrame code.</source>
          <target state="translated">Koalas предоставляет знакомый интерфейс DataFrame для панд поверх Apache Spark.Он позволяет пользователям использовать несколько ядер на одной машине или кластере машин для ускорения или масштабирования кода DataFrame.</target>
        </trans-unit>
        <trans-unit id="e32f431c01c4c3625a2a09b78cd105c1d29cc99b" translate="yes" xml:space="preserve">
          <source>Kurtosis obtained using Fisher&amp;rsquo;s definition of kurtosis (kurtosis of normal == 0.0). Normalized by N-1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3003f4fdc250e03e1420ddaa0c6423f67a77a398" translate="yes" xml:space="preserve">
          <source>L, ms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49907e3f0c170d46d89ef7a6a2966fff69e05893" translate="yes" xml:space="preserve">
          <source>Label based indexing via &lt;code&gt;.loc&lt;/code&gt; along the edges of an interval works as you would expect, selecting that particular interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f546cf634f61e41cd3c821c8196689e0334aad2e" translate="yes" xml:space="preserve">
          <source>Label contained in the index, or partially in a MultiIndex.</source>
          <target state="translated">Метка,содержащаяся в индексе,или частично в мультииндексе.</target>
        </trans-unit>
        <trans-unit id="8ca56da815deb3e387dba7b617c038b79af0ff75" translate="yes" xml:space="preserve">
          <source>Label of column to be popped.</source>
          <target state="translated">Метка столбца,которую нужно выскочить.</target>
        </trans-unit>
        <trans-unit id="07635dfd561688138ad91cdafbf65eee0cf006fd" translate="yes" xml:space="preserve">
          <source>Label of the inserted column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea431278fde26527cc80d26224150a043737b30" translate="yes" xml:space="preserve">
          <source>Label of the maximum value.</source>
          <target state="translated">Метка максимального значения.</target>
        </trans-unit>
        <trans-unit id="cf07653f71fe6e6876dc9c3bf3aa1a7cfe7da910" translate="yes" xml:space="preserve">
          <source>Label of the minimum value.</source>
          <target state="translated">Метка минимального значения.</target>
        </trans-unit>
        <trans-unit id="60872aece191ce2d85bdc5e9a67f1f6bd98bd0c8" translate="yes" xml:space="preserve">
          <source>Label or position of the column to plot. If not provided, &lt;code&gt;subplots=True&lt;/code&gt; argument must be passed.</source>
          <target state="translated">Метка или положение столбца для печати. Если не &lt;code&gt;subplots=True&lt;/code&gt; необходимо передать аргумент subplots = True .</target>
        </trans-unit>
        <trans-unit id="9f8a68a09e89c796204cb1c56a44ec08146b0a1d" translate="yes" xml:space="preserve">
          <source>Label the index keys you create with the &lt;code&gt;names&lt;/code&gt; option.</source>
          <target state="translated">Пометьте создаваемые вами индексные ключи опцией &lt;code&gt;names&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf17f3c3e3738ebfe0c533d59ca3eec535fb1e80" translate="yes" xml:space="preserve">
          <source>Label-based &amp;ldquo;fancy indexing&amp;rdquo; function for DataFrame.</source>
          <target state="translated">Функция &amp;laquo;причудливой индексации&amp;raquo; на основе меток для DataFrame.</target>
        </trans-unit>
        <trans-unit id="6ffb93b357a1f9637afaf69a6ca8826fafcfba4e" translate="yes" xml:space="preserve">
          <source>Label-based &amp;ldquo;fancy indexing&amp;rdquo; function for DataFrame. Given equal-length arrays of row and column labels, return an array of the values corresponding to each (row, col) pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c773b57c0430277d39aac60b8983cc35648b03fd" translate="yes" xml:space="preserve">
          <source>Label-based indexing with integer axis labels is a thorny topic. It has been discussed heavily on mailing lists and among various members of the scientific Python community. In pandas, our general viewpoint is that labels matter more than integer locations. Therefore, with an integer axis index &lt;em&gt;only&lt;/em&gt; label-based indexing is possible with the standard tools like &lt;code&gt;.loc&lt;/code&gt;. The following code will generate exceptions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010c74474755642681defb2191d7a55a8b3f452b" translate="yes" xml:space="preserve">
          <source>Label-location based indexer for selection by label.</source>
          <target state="translated">Индексатор на основе местоположения этикетки для выбора по этикетке.</target>
        </trans-unit>
        <trans-unit id="a882fe9be2e4ce65e4c1c43be155e728809e1ac9" translate="yes" xml:space="preserve">
          <source>Label-oriented (Non-Python slicing style : inclusive of end)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a29afa37e54ea8b4fcfcc627be13f69b301e28" translate="yes" xml:space="preserve">
          <source>Labeled data can similarly be imported from &lt;em&gt;Stata&lt;/em&gt; data files as &lt;code&gt;Categorical&lt;/code&gt; variables using the keyword argument &lt;code&gt;convert_categoricals&lt;/code&gt; (&lt;code&gt;True&lt;/code&gt; by default). The keyword argument &lt;code&gt;order_categoricals&lt;/code&gt; (&lt;code&gt;True&lt;/code&gt; by default) determines whether imported &lt;code&gt;Categorical&lt;/code&gt; variables are ordered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875f5c5462eeb482dc23b0483a0db7e2f9d429de" translate="yes" xml:space="preserve">
          <source>Labels along other axis to consider, e.g. if you are dropping rows these would be a list of columns to include.</source>
          <target state="translated">Метки вдоль другой оси для рассмотрения,например,если вы опускаете строки,это будет список столбцов для включения.</target>
        </trans-unit>
        <trans-unit id="535dc5a21ed50a7df7720d7b6315402b6b98ba4b" translate="yes" xml:space="preserve">
          <source>Labels need not be unique but must be a hashable type. The object supports both integer- and label-based indexing and provides a host of methods for performing operations involving the index. Statistical methods from ndarray have been overridden to automatically exclude missing data (currently represented as NaN).</source>
          <target state="translated">Этикетки не обязательно должны быть уникальными,но должны быть хэшированными.Объект поддерживает индексирование как по целочисленным числам,так и по меткам и предоставляет множество методов для выполнения операций с индексом.Статистические методы из ndarray были переопределены для автоматического исключения пропущенных данных (в настоящее время представлены как NaN).</target>
        </trans-unit>
        <trans-unit id="cba1c1b5ddf24c95de14d835b1e647d85b3afb6c" translate="yes" xml:space="preserve">
          <source>Lag Plot</source>
          <target state="translated">Лаг-Плот</target>
        </trans-unit>
        <trans-unit id="2a869e50a0c6d33ad4084a4a7d2047b0fb517072" translate="yes" xml:space="preserve">
          <source>Lag plot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3239a901a7dbaf494a7643a85b74f9fc9ef91be" translate="yes" xml:space="preserve">
          <source>Lag plot for time series.</source>
          <target state="translated">Отстающий сюжет для временных рядов.</target>
        </trans-unit>
        <trans-unit id="b79b6c9fc6b3a4689effa7f64893bb4892857884" translate="yes" xml:space="preserve">
          <source>Lag plots are most commonly used to look for patterns in time series data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4695a6e637f9bfc6f42211a79dd6885b76eeaf33" translate="yes" xml:space="preserve">
          <source>Lag plots are used to check if a data set or time series is random. Random data should not exhibit any structure in the lag plot. Non-random structure implies that the underlying data are not random. The &lt;code&gt;lag&lt;/code&gt; argument may be passed, and when &lt;code&gt;lag=1&lt;/code&gt; the plot is essentially &lt;code&gt;data[:-1]&lt;/code&gt; vs. &lt;code&gt;data[1:]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb330b9975008309c55ac6d1f927e11398701830" translate="yes" xml:space="preserve">
          <source>Large Data work flows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634993fe47efbc0cc36bc9f423ce21f1437f6e01" translate="yes" xml:space="preserve">
          <source>Large integer values may be converted to dates if &lt;code&gt;convert_dates=True&lt;/code&gt; and the data and / or column labels appear &amp;lsquo;date-like&amp;rsquo;. The exact threshold depends on the &lt;code&gt;date_unit&lt;/code&gt; specified. &amp;lsquo;date-like&amp;rsquo; means that the column label meets one of the following criteria:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e71ec4a409736074fa92c01d7ff1e115cffb023" translate="yes" xml:space="preserve">
          <source>Last, the subsequent example will &lt;strong&gt;not&lt;/strong&gt; work at all, and so should be avoided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5734d8adec39085a9ea03e2a8333fd2004bda2d5" translate="yes" xml:space="preserve">
          <source>LastWeekOfMonth</source>
          <target state="translated">LastWeekOfMonth</target>
        </trans-unit>
        <trans-unit id="9270da2447f02f68eac75f5da4e0d94febbfc294" translate="yes" xml:space="preserve">
          <source>LastWeekOfMonth.apply()</source>
          <target state="translated">LastWeekOfMonth.apply()</target>
        </trans-unit>
        <trans-unit id="403f7dda41533b1459f015f4fcd05885a0b9d76e" translate="yes" xml:space="preserve">
          <source>LastWeekOfMonth.apply_index()</source>
          <target state="translated">LastWeekOfMonth.apply_index()</target>
        </trans-unit>
        <trans-unit id="7cbb0fcc4157bff44d2c06f0270546e26574a694" translate="yes" xml:space="preserve">
          <source>LastWeekOfMonth.base</source>
          <target state="translated">LastWeekOfMonth.base</target>
        </trans-unit>
        <trans-unit id="d87629f579f227cd21db2b812cd740b9344fc95a" translate="yes" xml:space="preserve">
          <source>LastWeekOfMonth.copy()</source>
          <target state="translated">LastWeekOfMonth.copy()</target>
        </trans-unit>
        <trans-unit id="ea4c4e0c315c9a523196ab488279f3bd637b2ad9" translate="yes" xml:space="preserve">
          <source>LastWeekOfMonth.freqstr</source>
          <target state="translated">LastWeekOfMonth.freqstr</target>
        </trans-unit>
        <trans-unit id="5588ebc7301a9a344b69d667fa58372c13eee6e5" translate="yes" xml:space="preserve">
          <source>LastWeekOfMonth.isAnchored()</source>
          <target state="translated">LastWeekOfMonth.isAnchored()</target>
        </trans-unit>
        <trans-unit id="c1d68ef7afdda829cb24caa96687bf568647ab73" translate="yes" xml:space="preserve">
          <source>LastWeekOfMonth.kwds</source>
          <target state="translated">LastWeekOfMonth.kwds</target>
        </trans-unit>
        <trans-unit id="ecbf85495771797cafcf8425afe5f03490fa3193" translate="yes" xml:space="preserve">
          <source>LastWeekOfMonth.name</source>
          <target state="translated">LastWeekOfMonth.name</target>
        </trans-unit>
        <trans-unit id="5641a4ff5655ba641edd6cd4cba06a504c1f7f87" translate="yes" xml:space="preserve">
          <source>LastWeekOfMonth.nanos</source>
          <target state="translated">LastWeekOfMonth.nanos</target>
        </trans-unit>
        <trans-unit id="ab74e77c75a9835627d2ce498af17765a0261509" translate="yes" xml:space="preserve">
          <source>LastWeekOfMonth.normalize</source>
          <target state="translated">LastWeekOfMonth.normalize</target>
        </trans-unit>
        <trans-unit id="052a4915d5f46fc3f5e2602b40a65fe1a6663ae8" translate="yes" xml:space="preserve">
          <source>LastWeekOfMonth.onOffset()</source>
          <target state="translated">LastWeekOfMonth.onOffset()</target>
        </trans-unit>
        <trans-unit id="b94d23b499e4ad05e463949edca95b07f5dcb15e" translate="yes" xml:space="preserve">
          <source>LastWeekOfMonth.rollback()</source>
          <target state="translated">LastWeekOfMonth.rollback()</target>
        </trans-unit>
        <trans-unit id="c6286ffb4b15af95562a86c7c3f9231dfdf7ba5f" translate="yes" xml:space="preserve">
          <source>LastWeekOfMonth.rollforward()</source>
          <target state="translated">LastWeekOfMonth.rollforward()</target>
        </trans-unit>
        <trans-unit id="4896ddb8d740daf4084a9cc7854c6be1ac7ea08f" translate="yes" xml:space="preserve">
          <source>LastWeekOfMonth.rule_code</source>
          <target state="translated">LastWeekOfMonth.rule_code</target>
        </trans-unit>
        <trans-unit id="5f6cf4d7772c1050ecb59185fbf5bb476b0af56e" translate="yes" xml:space="preserve">
          <source>Lastly, pandas represents null date times, time deltas, and time spans as &lt;code&gt;NaT&lt;/code&gt; which is useful for representing missing or null date like values and behaves similar as &lt;code&gt;np.nan&lt;/code&gt; does for float data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098cc4a9e03125188f95c2aaa1041c7222aab137" translate="yes" xml:space="preserve">
          <source>Lastly, suppose we just wanted to reuse the &lt;em&gt;exact index&lt;/em&gt; from the original DataFrame:</source>
          <target state="translated">Наконец, предположим, что мы просто хотим повторно использовать &lt;em&gt;точный индекс&lt;/em&gt; из исходного DataFrame:</target>
        </trans-unit>
        <trans-unit id="a1470d53cd0e587de15b5c0e410300ec9a790048" translate="yes" xml:space="preserve">
          <source>Lazily iterate over (index, value) tuples.</source>
          <target state="translated">Ленивые итерации над кортежами (индексом,значением).</target>
        </trans-unit>
        <trans-unit id="a2e72eca667915ff7dcbe2ce58a594258d23698b" translate="yes" xml:space="preserve">
          <source>Learn Pandas by Hernan Rojas</source>
          <target state="translated">Выучить панды Эрнана Рохаса</target>
        </trans-unit>
        <trans-unit id="cdfc340ad39fd2855ef24a0f41acb376700f8f0b" translate="yes" xml:space="preserve">
          <source>Leave gaps at NaNs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c67cb65078bc453500166bb2484973cd440118" translate="yes" xml:space="preserve">
          <source>Left and right bounds for each interval.</source>
          <target state="translated">Левая и правая границы для каждого интервала.</target>
        </trans-unit>
        <trans-unit id="f446f324754ea443ed5aedceda4caa3681e18655" translate="yes" xml:space="preserve">
          <source>Left bound for generating dates.</source>
          <target state="translated">Оставили привязанными к генерирующим датам.</target>
        </trans-unit>
        <trans-unit id="4445a93b082d48246a8328be6ee8bbdaeaadc3ce" translate="yes" xml:space="preserve">
          <source>Left bound for generating intervals</source>
          <target state="translated">Оставляется привязанным к генераторным интервалам</target>
        </trans-unit>
        <trans-unit id="ef7232e88bf37653f13a804a2acbede39c998c7c" translate="yes" xml:space="preserve">
          <source>Left bound for generating intervals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3727d4161790d0c4678366dbdf0e0518df8bb1" translate="yes" xml:space="preserve">
          <source>Left bound for generating periods</source>
          <target state="translated">Оставлены привязанными к генерирующим периодам</target>
        </trans-unit>
        <trans-unit id="f15db5636e769071f728a5118566422f68497553" translate="yes" xml:space="preserve">
          <source>Left bound for generating periods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5be7c8e2b5043b39b7e96073ffed33fe56623c" translate="yes" xml:space="preserve">
          <source>Left bound for generating timedeltas</source>
          <target state="translated">Оставленные для генерации таймедлты</target>
        </trans-unit>
        <trans-unit id="8335098a9079a769b1fb18920e965e459f52e39e" translate="yes" xml:space="preserve">
          <source>Left bound for generating timedeltas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a1ee71660016e1013c4038e8c0eeb6a71b6f4c" translate="yes" xml:space="preserve">
          <source>Left bound for the interval</source>
          <target state="translated">Оставляется привязанным к интервалу</target>
        </trans-unit>
        <trans-unit id="7f55d3e90174f52da0d19b1e6ce4938131d7fd0c" translate="yes" xml:space="preserve">
          <source>Left bound for the interval.</source>
          <target state="translated">Оставлено для интервала.</target>
        </trans-unit>
        <trans-unit id="4bd7d636cb49e55e44a33ae940154c82eaa879a9" translate="yes" xml:space="preserve">
          <source>Left boundary.</source>
          <target state="translated">Левая граница.</target>
        </trans-unit>
        <trans-unit id="f550d89488d055016186dbca3eb42ac347ed41a0" translate="yes" xml:space="preserve">
          <source>Left bounds for each interval.</source>
          <target state="translated">Левые границы для каждого интервала.</target>
        </trans-unit>
        <trans-unit id="272c6c2916524d96d220905b80db9167c07a296f" translate="yes" xml:space="preserve">
          <source>Left edge index</source>
          <target state="translated">Индекс левого края</target>
        </trans-unit>
        <trans-unit id="0f9536b486083c08a5363d9a2d92019c6cde7556" translate="yes" xml:space="preserve">
          <source>Left edge index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32183405775ebd721bff29b509a53b88f2f1a381" translate="yes" xml:space="preserve">
          <source>Left index position to use for the slice. If not specified (None), the slice is unbounded on the left, i.e. slice from the start of the string.</source>
          <target state="translated">Положение левого индекса для использования для среза.Если не указано (None),срез не ограничен слева,т.е.срез от начала строки.</target>
        </trans-unit>
        <trans-unit id="4e59edd3be5f8fe396c32b6eccef6ec7184cfbf9" translate="yes" xml:space="preserve">
          <source>Length of returned vector is equal to the length of the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9111e4ea5522029cf27f4b697c7d0963100203" translate="yes" xml:space="preserve">
          <source>Length of whitespace used to indent each record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b1784e2bbbe222b04ea571ced9d1ea20ce6922" translate="yes" xml:space="preserve">
          <source>Less efficient:</source>
          <target state="translated">Менее эффективно:</target>
        </trans-unit>
        <trans-unit id="a2aabbda1aad768051850ab31f9429c881554ded" translate="yes" xml:space="preserve">
          <source>Less than of series and other.</source>
          <target state="translated">Меньше,чем сериалы и прочее.</target>
        </trans-unit>
        <trans-unit id="83a49c80be1cbd06c318d87dd01d1527be82948f" translate="yes" xml:space="preserve">
          <source>Less wieldy column names are also handled</source>
          <target state="translated">Менее громоздкие имена столбцов также обрабатываются.</target>
        </trans-unit>
        <trans-unit id="fbff4a7d8501a73cffba7104bdea4495d6acafe3" translate="yes" xml:space="preserve">
          <source>Let us consider some examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0928b95284c1cfcd4d8618aff890f47fae6a6c" translate="yes" xml:space="preserve">
          <source>Let us know if you have any difficulties by opening an issue or reaching out on &lt;a href=&quot;https://gitter.im/pydata/pandas&quot;&gt;Gitter&lt;/a&gt;.</source>
          <target state="translated">Сообщите нам, если у вас возникнут какие-либо трудности, открыв вопрос или &lt;a href=&quot;https://gitter.im/pydata/pandas&quot;&gt;связавшись&lt;/a&gt; с Gitter .</target>
        </trans-unit>
        <trans-unit id="3979e37bcb47902217a553d7681ccc29bd64b88a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s consider a variation of the very first example presented:</source>
          <target state="translated">Рассмотрим вариант самого первого представленного примера:</target>
        </trans-unit>
        <trans-unit id="e23b2d59e2fcd5a198f51a64688d1fd1c56b83cf" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create a Series with a two-level &lt;code&gt;MultiIndex&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c67217b24d3f9f991ce7ccb0b97f362e0b2bee4" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s map to the weekday names:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29d28327ebb7e0d4de057d151a7b3ad078980c6" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s repeat the same example, but specifying colors for each column (in this case, for each animal).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f86c0d225e25157bce799efb51b891355c2fee" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see how to draw a scatter plot using coordinates from the values in a DataFrame&amp;rsquo;s columns.</source>
          <target state="translated">Давайте посмотрим, как нарисовать диаграмму рассеяния, используя координаты из значений в столбцах DataFrame.</target>
        </trans-unit>
        <trans-unit id="9948d618f8aa7df6b7264b60348519ab0d12b147" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see some examples.</source>
          <target state="translated">Посмотрим на несколько примеров.</target>
        </trans-unit>
        <trans-unit id="ae2ef1b6ad1699d737218a224f0d82d3c3c2f840" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s write a simple style function that will color negative numbers red and positive numbers black.</source>
          <target state="translated">Давайте напишем простую функцию стиля, которая будет окрашивать отрицательные числа в красный цвет, а положительные - в черный.</target>
        </trans-unit>
        <trans-unit id="8d1514f31f9f4ce966ea914a0f73995808118f93" translate="yes" xml:space="preserve">
          <source>Level codes are an array if integer which are the positions of the real values in the categories array.</source>
          <target state="translated">Коды уровня-это массив,если целое число-это позиции реальных значений в массиве категорий.</target>
        </trans-unit>
        <trans-unit id="7154eea8edd8af4f8792bce8e3dec89c2d311ffa" translate="yes" xml:space="preserve">
          <source>Level of index to be swapped. Can pass level name as string.</source>
          <target state="translated">Уровень индекса,который нужно поменять.Может передавать имя уровня как строку.</target>
        </trans-unit>
        <trans-unit id="a0e43866cc9550fa180e21691e288aa5cb21d242" translate="yes" xml:space="preserve">
          <source>Level of sortedness (must be lexicographically sorted by that level).</source>
          <target state="translated">Уровень сортировки (должен быть лексикографически отсортирован по этому уровню).</target>
        </trans-unit>
        <trans-unit id="d21790600e480b7bf1be1c3d4fb415fb14d80642" translate="yes" xml:space="preserve">
          <source>Level of the indices to be swapped. Can pass level name as string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06980b49f3fae40fab33fdf8badad7d335907616" translate="yes" xml:space="preserve">
          <source>Level(s) of index to unstack, can pass level name</source>
          <target state="translated">Уровень(ы)индекса к неустойчивости,может передавать имя уровня</target>
        </trans-unit>
        <trans-unit id="76dad9c9f9d42ffe577080ab25d6fa58a9c00043" translate="yes" xml:space="preserve">
          <source>Level(s) of index to unstack, can pass level name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db03e806ee4c0652b4e4fa3bd418e9a5a21ab62c" translate="yes" xml:space="preserve">
          <source>Level(s) to set (None for all levels).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38f523f5cb34d36d4eb7c216816f9e93d36aa44" translate="yes" xml:space="preserve">
          <source>Level(s) to stack from the column axis onto the index axis, defined as one index or label, or a list of indices or labels.</source>
          <target state="translated">Уровень(ы)для укладки от оси столбца на ось индекса,определяемого как один индекс или метка,или список индексов или меток.</target>
        </trans-unit>
        <trans-unit id="be8aaa4012a1990994221f6bf524cb886018bd62" translate="yes" xml:space="preserve">
          <source>Level(s) to unstack, can pass level name.</source>
          <target state="translated">Уровень(ы)для деактивации,может передавать имя уровня.</target>
        </trans-unit>
        <trans-unit id="ed47f098118b3a4908065115144a054c9afe75d6" translate="yes" xml:space="preserve">
          <source>Levels</source>
          <target state="translated">Levels</target>
        </trans-unit>
        <trans-unit id="6a6c29740f0e5a9b5e7bfe525ae26e12a71787b8" translate="yes" xml:space="preserve">
          <source>Levels of the indices to be swapped. Can pass level name as string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b5330f6c863bdd13ed163d81b643b9bd353979" translate="yes" xml:space="preserve">
          <source>Libraries can define a custom array and data type. When pandas encounters these objects, they will be handled properly (i.e. not converted to an ndarray of objects). Many methods like &lt;a href=&quot;../reference/api/pandas.isna#pandas.isna&quot;&gt;&lt;code&gt;pandas.isna()&lt;/code&gt;&lt;/a&gt; will dispatch to the extension type&amp;rsquo;s implementation.</source>
          <target state="translated">Библиотеки могут определять настраиваемый массив и тип данных. Когда pandas встречает эти объекты, они будут обрабатываться должным образом (т.е. не преобразованы в ndarray объектов). Многие методы, такие как &lt;a href=&quot;../reference/api/pandas.isna#pandas.isna&quot;&gt; &lt;code&gt;pandas.isna()&lt;/code&gt; &lt;/a&gt; будут отправлены в реализацию типа расширения.</target>
        </trans-unit>
        <trans-unit id="d40d8fab3048b5d17db7d043730115bf3e2eace1" translate="yes" xml:space="preserve">
          <source>Libraries can use the decorators &lt;a href=&quot;../reference/api/pandas.api.extensions.register_dataframe_accessor#pandas.api.extensions.register_dataframe_accessor&quot;&gt;&lt;code&gt;pandas.api.extensions.register_dataframe_accessor()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../reference/api/pandas.api.extensions.register_series_accessor#pandas.api.extensions.register_series_accessor&quot;&gt;&lt;code&gt;pandas.api.extensions.register_series_accessor()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../reference/api/pandas.api.extensions.register_index_accessor#pandas.api.extensions.register_index_accessor&quot;&gt;&lt;code&gt;pandas.api.extensions.register_index_accessor()&lt;/code&gt;&lt;/a&gt;, to add additional &amp;ldquo;namespaces&amp;rdquo; to pandas objects. All of these follow a similar convention: you decorate a class, providing the name of attribute to add. The class&amp;rsquo;s &lt;code&gt;__init__&lt;/code&gt; method gets the object being decorated. For example:</source>
          <target state="translated">Библиотеки могут использовать декораторы &lt;a href=&quot;../reference/api/pandas.api.extensions.register_dataframe_accessor#pandas.api.extensions.register_dataframe_accessor&quot;&gt; &lt;code&gt;pandas.api.extensions.register_dataframe_accessor()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../reference/api/pandas.api.extensions.register_series_accessor#pandas.api.extensions.register_series_accessor&quot;&gt; &lt;code&gt;pandas.api.extensions.register_series_accessor()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../reference/api/pandas.api.extensions.register_index_accessor#pandas.api.extensions.register_index_accessor&quot;&gt; &lt;code&gt;pandas.api.extensions.register_index_accessor()&lt;/code&gt; &lt;/a&gt; для добавления дополнительных &amp;laquo;пространств имен&amp;raquo; к объектам pandas. Все они следуют схожему соглашению: вы украшаете класс, предоставляя имя добавляемого атрибута. Метод &lt;code&gt;__init__&lt;/code&gt; класса получает декорируемый объект. Например:</target>
        </trans-unit>
        <trans-unit id="b8100f5ba8bd048a7cf11d116fbbd73130c3c6f5" translate="yes" xml:space="preserve">
          <source>Library</source>
          <target state="translated">Library</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">License</target>
        </trans-unit>
        <trans-unit id="538c09161b8497f998404cafc34964ed3a445575" translate="yes" xml:space="preserve">
          <source>Licensed under the 3-clause BSD License.</source>
          <target state="translated">Лицензия BSD 3-clause License.</target>
        </trans-unit>
        <trans-unit id="4a9eaf345db8e86f88302f41de98e9c23f4293ed" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;DataFrame.pipe()&lt;/code&gt;, this method can simplify the application of several user-defined functions to a styler. Instead of writing:</source>
          <target state="translated">Подобно &lt;code&gt;DataFrame.pipe()&lt;/code&gt; , этот метод может упростить применение некоторых пользовательских функций к стилизатору. Вместо того, чтобы писать:</target>
        </trans-unit>
        <trans-unit id="d8ea994b3c31137e734903a5767a48832f2e3f48" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;PROC IMPORT&lt;/code&gt;, &lt;code&gt;read_csv&lt;/code&gt; can take a number of parameters to specify how the data should be parsed. For example, if the data was instead tab delimited, and did not have column names, the pandas command would be:</source>
          <target state="translated">Как и &lt;code&gt;PROC IMPORT&lt;/code&gt; , &lt;code&gt;read_csv&lt;/code&gt; может принимать ряд параметров, чтобы указать, как следует анализировать данные. Например, если вместо этого данные были разделены табуляцией и не имели имен столбцов, команда pandas была бы такой:</target>
        </trans-unit>
        <trans-unit id="b1defc62afbb2d7875f6102565027ebaacacfac8" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;cov&lt;/code&gt;, &lt;code&gt;corr&lt;/code&gt; also supports the optional &lt;code&gt;min_periods&lt;/code&gt; keyword:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99afd092c4c4d91f996c298831aaa2c351b5a90e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;import delimited&lt;/code&gt;, &lt;a href=&quot;../../reference/api/pandas.read_csv#pandas.read_csv&quot;&gt;&lt;code&gt;read_csv()&lt;/code&gt;&lt;/a&gt; can take a number of parameters to specify how the data should be parsed. For example, if the data were instead tab delimited, did not have column names, and existed in the current working directory, the pandas command would be:</source>
          <target state="translated">Подобно &lt;code&gt;import delimited&lt;/code&gt; , &lt;a href=&quot;../../reference/api/pandas.read_csv#pandas.read_csv&quot;&gt; &lt;code&gt;read_csv()&lt;/code&gt; &lt;/a&gt; может принимать ряд параметров, чтобы указать, как следует анализировать данные. Например, если бы данные были разделены табуляцией, не имели имен столбцов и существовали в текущем рабочем каталоге, команда pandas была бы такой:</target>
        </trans-unit>
        <trans-unit id="cadb2a4d1609f5827133becf173fa04c47f9aa39" translate="yes" xml:space="preserve">
          <source>Like SAS, pandas provides utilities for reading in data from many formats. The &lt;code&gt;tips&lt;/code&gt; dataset, found within the pandas tests (&lt;a href=&quot;https://raw.github.com/pandas-dev/pandas/master/pandas/tests/data/tips.csv&quot;&gt;csv&lt;/a&gt;) will be used in many of the following examples.</source>
          <target state="translated">Как и SAS, pandas предоставляет утилиты для чтения данных из многих форматов. Набор данных &lt;code&gt;tips&lt;/code&gt; , найденный в тестах pandas ( &lt;a href=&quot;https://raw.github.com/pandas-dev/pandas/master/pandas/tests/data/tips.csv&quot;&gt;csv&lt;/a&gt; ), будет использоваться во многих следующих примерах.</target>
        </trans-unit>
        <trans-unit id="6d786f1888f60f0a1dbb055919a0b92d55082860" translate="yes" xml:space="preserve">
          <source>Like Series.map, NA values can be ignored:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c5f398c380d97ef0da4ae53b87eea08b937eb6" translate="yes" xml:space="preserve">
          <source>Like Stata, pandas provides utilities for reading in data from many formats. The &lt;code&gt;tips&lt;/code&gt; data set, found within the pandas tests (&lt;a href=&quot;https://raw.github.com/pandas-dev/pandas/master/pandas/tests/data/tips.csv&quot;&gt;csv&lt;/a&gt;) will be used in many of the following examples.</source>
          <target state="translated">Как и Stata, pandas предоставляет утилиты для чтения данных из многих форматов. Набор данных &lt;code&gt;tips&lt;/code&gt; , найденный в тестах pandas ( &lt;a href=&quot;https://raw.github.com/pandas-dev/pandas/master/pandas/tests/data/tips.csv&quot;&gt;csv&lt;/a&gt; ), будет использоваться во многих следующих примерах.</target>
        </trans-unit>
        <trans-unit id="1abca33317bb8275ae2539cf7a683a71fcc98327" translate="yes" xml:space="preserve">
          <source>Like a NumPy array, a pandas Series has a &lt;a href=&quot;../reference/api/pandas.series.dtype#pandas.Series.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a050b34e1a8643615a34fa0e19c6c8ed0f51b8d1" translate="yes" xml:space="preserve">
          <source>Like assert_series_equal, but targets DataFrames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4cfdb22d89be47598a2d6e8307a12d2192dc24e" translate="yes" xml:space="preserve">
          <source>Like its sibling function on ndarrays, &lt;code&gt;numpy.concatenate&lt;/code&gt;, &lt;code&gt;pandas.concat&lt;/code&gt; takes a list or dict of homogeneously-typed objects and concatenates them with some configurable handling of &amp;ldquo;what to do with the other axes&amp;rdquo;:</source>
          <target state="translated">Как и его родственная функция в ndarrays, &lt;code&gt;numpy.concatenate&lt;/code&gt; , &lt;code&gt;pandas.concat&lt;/code&gt; принимает список или dict однородно типизированных объектов и объединяет их с некоторой настраиваемой обработкой &amp;laquo;что делать с другими осями&amp;raquo;:</target>
        </trans-unit>
        <trans-unit id="5d9e9b7939451456ec497e8ee98bec7e0fca2055" translate="yes" xml:space="preserve">
          <source>Like many packages, &lt;em&gt;pandas&lt;/em&gt; uses &lt;a href=&quot;http://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt; and the convenient extensions in &lt;a href=&quot;http://docs.scipy.org/doc/numpy/reference/routines.testing.html&quot;&gt;numpy.testing&lt;/a&gt;.</source>
          <target state="translated">Как и многие пакеты, &lt;em&gt;pandas&lt;/em&gt; использует &lt;a href=&quot;http://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt; и удобные расширения в &lt;a href=&quot;http://docs.scipy.org/doc/numpy/reference/routines.testing.html&quot;&gt;numpy.testing&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="85e24442504aa9b7793cbf180502252cc7ef558b" translate="yes" xml:space="preserve">
          <source>Like other pandas fill methods, &lt;a href=&quot;../reference/api/pandas.dataframe.interpolate#pandas.DataFrame.interpolate&quot;&gt;&lt;code&gt;interpolate()&lt;/code&gt;&lt;/a&gt; accepts a &lt;code&gt;limit&lt;/code&gt; keyword argument. Use this argument to limit the number of consecutive &lt;code&gt;NaN&lt;/code&gt; values filled since the last valid observation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3939952ffe3e359679dca7e22107cd3f476af37" translate="yes" xml:space="preserve">
          <source>Like other parts of the library, pandas will automatically align labeled inputs as part of a ufunc with multiple inputs. For example, using &lt;code&gt;numpy.remainder()&lt;/code&gt; on two &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt; with differently ordered labels will align before the operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf55d787d79b52b4bc5319dd4cb5b14feb2dbfd2" translate="yes" xml:space="preserve">
          <source>Likewise, datetime containers will always use &lt;code&gt;NaT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0a2161dfea1b1befdc507778c2c2269cb2fa30" translate="yes" xml:space="preserve">
          <source>Limit number of splits in output. &lt;code&gt;None&lt;/code&gt;, 0 and -1 will be interpreted as return all splits.</source>
          <target state="translated">Ограничьте количество разбиений на выходе. &lt;code&gt;None&lt;/code&gt; , 0 и -1 будут интерпретироваться как возврат всех разбиений.</target>
        </trans-unit>
        <trans-unit id="41dcc2fd18df07ad4358d2d7b13696c3d2d323e9" translate="yes" xml:space="preserve">
          <source>Limit of how many consecutive missing values to fill.</source>
          <target state="translated">Предел,сколько последовательных пропущенных значений нужно заполнить.</target>
        </trans-unit>
        <trans-unit id="c9f5e7eed157d31ab5cf08de75cd7b58cd10c155" translate="yes" xml:space="preserve">
          <source>Limit of how many values to fill.</source>
          <target state="translated">Предел,сколько значений нужно заполнить.</target>
        </trans-unit>
        <trans-unit id="c96e889f5cc76fc0414793332ea09256976d9e4e" translate="yes" xml:space="preserve">
          <source>Limit the number of upsampled values imputed by the nearest:</source>
          <target state="translated">Ограничьте количество вменяемых значений с дискретностью до ближайшего:</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="384b5b3eb5625c5d506ef477b7fa428a44e459d0" translate="yes" xml:space="preserve">
          <source>Limits on filling while reindexing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9676003762818513c636984faeaa0ae356839a" translate="yes" xml:space="preserve">
          <source>Line</source>
          <target state="translated">Line</target>
        </trans-unit>
        <trans-unit id="c9bbdf8484dd4f7c0eb66ed7ca5b28883b9b4994" translate="yes" xml:space="preserve">
          <source>Line (stacked)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65621fc000cdcfbf4371faa9957ade0165afa710" translate="yes" xml:space="preserve">
          <source>Line delimited json</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd0f3bb2b4d802866af2ab823db6715d2c959c1" translate="yes" xml:space="preserve">
          <source>Line numbers to skip (0-indexed) or number of lines to skip (int) at the start of the file.</source>
          <target state="translated">Номер строки для пропуска (0-индексированный)или количество строк для пропуска (int)в начале файла.</target>
        </trans-unit>
        <trans-unit id="790b685667ebc398404f175b0c718e23ed76aa9b" translate="yes" xml:space="preserve">
          <source>Line numbers to skip (0-indexed) or number of lines to skip (int) at the start of the file. If callable, the callable function will be evaluated against the row indices, returning True if the row should be skipped and False otherwise. An example of a valid callable argument would be &lt;code&gt;lambda
x: x in [0, 2]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746d2ca58e15f19755368cca88af3d6f2f76678a" translate="yes" xml:space="preserve">
          <source>Lines with too many fields (e.g. a csv line with too many commas) will by default cause an exception to be raised, and no &lt;code&gt;DataFrame&lt;/code&gt; will be returned. If &lt;code&gt;False&lt;/code&gt;, then these &amp;ldquo;bad lines&amp;rdquo; will dropped from the &lt;code&gt;DataFrame&lt;/code&gt; that is returned. See &lt;a href=&quot;#io-bad-lines&quot;&gt;bad lines&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2735e2f0b65f13fe368da1a952ac9f3d73537734" translate="yes" xml:space="preserve">
          <source>Lines with too many fields (e.g. a csv line with too many commas) will by default cause an exception to be raised, and no DataFrame will be returned. If False, then these &amp;ldquo;bad lines&amp;rdquo; will dropped from the DataFrame that is returned.</source>
          <target state="translated">Строки со слишком большим количеством полей (например, строка csv со слишком большим количеством запятых) по умолчанию вызовут исключение, и DataFrame не будет возвращен. Если False, то эти &amp;laquo;плохие строки&amp;raquo; будут удалены из возвращаемого DataFrame.</target>
        </trans-unit>
        <trans-unit id="593ca12c3dd199ce0ff86b80b5904476c47d2ae4" translate="yes" xml:space="preserve">
          <source>Linux :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f29f9da0620164df8b6a3b66e6b6749e879f8a1" translate="yes" xml:space="preserve">
          <source>Linux : &lt;code&gt;xclip&lt;/code&gt;, or &lt;code&gt;xsel&lt;/code&gt; (with &lt;code&gt;PyQt4&lt;/code&gt; modules)</source>
          <target state="translated">Linux: &lt;code&gt;xclip&lt;/code&gt; или &lt;code&gt;xsel&lt;/code&gt; (с модулями &lt;code&gt;PyQt4&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9fa6ec7958490a9301cfc1ff8c1f5c9f109e5d85" translate="yes" xml:space="preserve">
          <source>List comprehensions and the &lt;code&gt;map&lt;/code&gt; method of Series can also be used to produce more complex criteria:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c517cd0c5ddf2237ec89017580280db415b95c35" translate="yes" xml:space="preserve">
          <source>List of ABSOLUTE path-names (e.g. have the leading &amp;lsquo;/&amp;rsquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc37dda0623f999de3ec722821cc5271251f228" translate="yes" xml:space="preserve">
          <source>List of BigQuery column names in the desired order for results DataFrame.</source>
          <target state="translated">Список имен столбцов BigQuery в желаемом порядке для результатов DataFrame.</target>
        </trans-unit>
        <trans-unit id="dde678695c3accba4cb10a45f8f1cb2839de2263" translate="yes" xml:space="preserve">
          <source>List of BigQuery table fields to which according DataFrame columns conform to, e.g. &lt;code&gt;[{'name': 'col1', 'type':
'STRING'},...]&lt;/code&gt;. If schema is not provided, it will be generated according to dtypes of DataFrame columns. See BigQuery API documentation on available names of a field.</source>
          <target state="translated">Список полей таблицы BigQuery, которым соответствуют столбцы DataFrame, например, &lt;code&gt;[{'name': 'col1', 'type': 'STRING'},...]&lt;/code&gt; . Если схема не указана, она будет сгенерирована в соответствии с типами столбцов DataFrame. Информацию о доступных именах полей см. В документации API BigQuery.</target>
        </trans-unit>
        <trans-unit id="edb5fe51b903e7cd08d9307f06690ae2c676059f" translate="yes" xml:space="preserve">
          <source>List of Term (or convertible) objects, optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c55687d8fb058fed55e6bacd45c1a678aacd4d9" translate="yes" xml:space="preserve">
          <source>List of column names to convert to string columns to Stata StrL format. Only available if version is 117. Storing strings in the StrL format can produce smaller dta files if strings have more than 8 characters and values are repeated.</source>
          <target state="translated">Список названий столбцов для преобразования в столбцы строки в формат Stata StrL.Доступно только если версия 117.Хранение строк в формате StrL может привести к созданию меньших dta-файлов,если строки имеют более 8 символов и значения повторяются.</target>
        </trans-unit>
        <trans-unit id="95c67fa53c6c2fddf9b272b8284d5c123b582c4b" translate="yes" xml:space="preserve">
          <source>List of column names to parse as dates.</source>
          <target state="translated">Список названий колонок для разбора в качестве дат.</target>
        </trans-unit>
        <trans-unit id="fb132c853ee51a23b80702370baa336fcfd0c459" translate="yes" xml:space="preserve">
          <source>List of column names to select from SQL table (only used when reading a table).</source>
          <target state="translated">Список имен столбцов для выбора из таблицы SQL (используется только при чтении таблицы).</target>
        </trans-unit>
        <trans-unit id="b427d6bbda9602a9597a14786d295aa0c20835e0" translate="yes" xml:space="preserve">
          <source>List of column names to select from SQL table.</source>
          <target state="translated">Список имен столбцов для выбора из таблицы SQL.</target>
        </trans-unit>
        <trans-unit id="03c204a9d52930190bcf9c11308fb3e06b63eadd" translate="yes" xml:space="preserve">
          <source>List of column names to use. If file contains no header row, then you should explicitly pass &lt;code&gt;header=None&lt;/code&gt;. Duplicates in this list are not allowed.</source>
          <target state="translated">Список используемых имен столбцов. Если файл не содержит строки заголовка, вы должны явно передать &lt;code&gt;header=None&lt;/code&gt; . Дубликаты в этом списке не допускаются.</target>
        </trans-unit>
        <trans-unit id="3e93dd20018bba43b647c17e84433099317b42f2" translate="yes" xml:space="preserve">
          <source>List of column names to use. If file contains no header row, then you should explicitly pass header=None.</source>
          <target state="translated">Список названий колонок.Если файл не содержит строки заголовка,то следует явно передать заголовок=None.</target>
        </trans-unit>
        <trans-unit id="cd7e54afe855c4b9f4ec7143fec1c2da4ad7503a" translate="yes" xml:space="preserve">
          <source>List of column names to use. If the file contains a header row, then you should explicitly pass &lt;code&gt;header=0&lt;/code&gt; to override the column names. Duplicates in this list are not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9f2e1c3b49e51dae2a9554da76c6e227534bc9" translate="yes" xml:space="preserve">
          <source>List of columns to create as data columns, or True to use all columns. See &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#query-via-data-columns&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fcd6eb4bb84bfcee61ba65220ace635e52239a" translate="yes" xml:space="preserve">
          <source>List of columns to create as indexed data columns for on-disk queries, or True to use all columns. By default only the axes of the object are indexed. See &lt;a href=&quot;../../user_guide/io#io-hdf5-query-data-columns&quot;&gt;Query via data columns&lt;/a&gt;. Applicable only to format=&amp;rsquo;table&amp;rsquo;.</source>
          <target state="translated">Список столбцов, которые нужно создать как столбцы индексированных данных для запросов на диске, или True, чтобы использовать все столбцы. По умолчанию индексируются только оси объекта. См. Раздел &amp;laquo; &lt;a href=&quot;../../user_guide/io#io-hdf5-query-data-columns&quot;&gt;Запрос через столбцы данных&amp;raquo;&lt;/a&gt; . Применимо только к format = 'table'.</target>
        </trans-unit>
        <trans-unit id="06a7ca198b84c4057ce4fd41a57e4016a998207b" translate="yes" xml:space="preserve">
          <source>List of columns to create as indexed data columns for on-disk queries, or True to use all columns. By default only the axes of the object are indexed. See &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#query-via-data-columns&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Список столбцов, которые нужно создать как столбцы индексированных данных для запросов на диске, или True, чтобы использовать все столбцы. По умолчанию индексируются только оси объекта. Смотрите &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#query-via-data-columns&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c773df14bc18636388545caf84d25f6b502ca4f8" translate="yes" xml:space="preserve">
          <source>List of columns to create as indexed data columns for on-disk queries, or True to use all columns. By default only the axes of the object are indexed. See &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#query-via-data-columns&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b57c3dc8fc931f40098f72e1b308716ff57631" translate="yes" xml:space="preserve">
          <source>List of columns to parse for dates. If True, then try to parse datelike columns. A column label is datelike if</source>
          <target state="translated">Список столбцов для разбора дат.Если Верно,попробуйте разобрать колонки,похожие на дату.Метка колонки является датированной,если</target>
        </trans-unit>
        <trans-unit id="a6c22cace0516463001431de8a56fd35ec1de57f" translate="yes" xml:space="preserve">
          <source>List of duplicated indexes.</source>
          <target state="translated">Список дублированных индексов.</target>
        </trans-unit>
        <trans-unit id="ff42f851d224c877a9a4e1bb1472e06d7605bb66" translate="yes" xml:space="preserve">
          <source>List of indices.</source>
          <target state="translated">Список индексов.</target>
        </trans-unit>
        <trans-unit id="81ec3bcfa311adcc640bd2b76cd66999d1dd692a" translate="yes" xml:space="preserve">
          <source>List of labels. Note using &lt;code&gt;[[]]&lt;/code&gt; returns a DataFrame.</source>
          <target state="translated">Список этикеток. Обратите внимание, что использование &lt;code&gt;[[]]&lt;/code&gt; возвращает DataFrame.</target>
        </trans-unit>
        <trans-unit id="5bdafc5c4a9bc1e52cdf40eecbbf935c1457058e" translate="yes" xml:space="preserve">
          <source>List of objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c8ae43e2f0a8c928122a3adc0bcd6802147406" translate="yes" xml:space="preserve">
          <source>List of parameters to pass to execute method. The syntax used to pass parameters is database driver dependent. Check your database driver documentation for which of the five syntax styles, described in PEP 249&amp;rsquo;s paramstyle, is supported. Eg. for psycopg2, uses %(name)s so use params={&amp;lsquo;name&amp;rsquo; : &amp;lsquo;value&amp;rsquo;}</source>
          <target state="translated">Список параметров, передаваемых для выполнения метода. Синтаксис, используемый для передачи параметров, зависит от драйвера базы данных. Проверьте документацию по драйверу базы данных, чтобы узнать, какой из пяти стилей синтаксиса, описанных в параметрах PEP 249, поддерживается. Например. для psycopg2 используется% (name) s, поэтому используйте params = {'name': 'value'}</target>
        </trans-unit>
        <trans-unit id="cd4420c26069521c591311cbfde8e546e7d36c63" translate="yes" xml:space="preserve">
          <source>List of parameters to pass to execute method. The syntax used to pass parameters is database driver dependent. Check your database driver documentation for which of the five syntax styles, described in PEP 249&amp;rsquo;s paramstyle, is supported. Eg. for psycopg2, uses %(name)s so use params={&amp;lsquo;name&amp;rsquo; : &amp;lsquo;value&amp;rsquo;}.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9564b21ad2c7acf8d949df21a05690d4fe4c426" translate="yes" xml:space="preserve">
          <source>List of style functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490da488d4c44e79b006b4325a79bfd51ff323d9" translate="yes" xml:space="preserve">
          <source>List of {selector: (attr, value)} dicts; see Notes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c158f1678194bf35298c8eefc4b475e044d405" translate="yes" xml:space="preserve">
          <source>List representing new level order. Reference level by number (position) or by key (label).</source>
          <target state="translated">Список,представляющий новый порядок уровней.Базовый уровень по номеру (позиция)или по клавише (метка).</target>
        </trans-unit>
        <trans-unit id="01b4c9f8196324c7f81ad70722455cc2d32edd87" translate="yes" xml:space="preserve">
          <source>List/array of dates to exclude from the set of valid business days, passed to &lt;code&gt;numpy.busdaycalendar&lt;/code&gt;.</source>
          <target state="translated">Список / массив дат для исключения из набора действительных рабочих дней, переданных в &lt;code&gt;numpy.busdaycalendar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d940c35ee767ff7efb070890d377081210a6a28" translate="yes" xml:space="preserve">
          <source>Literal &lt;code&gt;dict&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; expressions</source>
          <target state="translated">Буквальный &lt;code&gt;dict&lt;/code&gt; и &lt;code&gt;set&lt;/code&gt; - выражения</target>
        </trans-unit>
        <trans-unit id="bb84ab8dd130506078543a15edf0f34385a62c73" translate="yes" xml:space="preserve">
          <source>Load a CSV file into a DataFrame.</source>
          <target state="translated">Загрузите CSV-файл в DataFrame.</target>
        </trans-unit>
        <trans-unit id="13992891783bd18afe8b716115882c1b9c4ad5c8" translate="yes" xml:space="preserve">
          <source>Load a feather-format object from the file path.</source>
          <target state="translated">Загрузите объект в формате пера из пути к файлу.</target>
        </trans-unit>
        <trans-unit id="fc98eda68d0d39d61eda4e11da20b8a2f18b6007" translate="yes" xml:space="preserve">
          <source>Load a parquet object from the file path, returning a DataFrame.</source>
          <target state="translated">Загрузить объект паркета из пути к файлу,вернув DataFrame.</target>
        </trans-unit>
        <trans-unit id="f04966e05efa2f08fa0b6dae8894188c52348fca" translate="yes" xml:space="preserve">
          <source>Load a parquet object, returning a DataFrame.</source>
          <target state="translated">Загрузите объект паркета,вернув DataFrame.</target>
        </trans-unit>
        <trans-unit id="edffabd5de6da1738b99cf9763cb6b45b92f312a" translate="yes" xml:space="preserve">
          <source>Load an ORC object from the file path, returning a DataFrame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69621193b200ad3eb0f06a1946f149532f1eb5a7" translate="yes" xml:space="preserve">
          <source>Load an SPSS file from the file path, returning a DataFrame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9ead5fe556b964d1272c16d5a06fb26507c893" translate="yes" xml:space="preserve">
          <source>Load data from Google BigQuery.</source>
          <target state="translated">Загружайте данные из Google BigQuery.</target>
        </trans-unit>
        <trans-unit id="77bca3c3b38a490b888b424846a7e89e8956b6d9" translate="yes" xml:space="preserve">
          <source>Load less data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07acf9f204c5f6a330e54a951b57556327270b2" translate="yes" xml:space="preserve">
          <source>Load msgpack pandas object from the specified file path.</source>
          <target state="translated">Загрузить объект msgpack pandas из указанного пути к файлу.</target>
        </trans-unit>
        <trans-unit id="1b93c924c47fa818820e255a4bfb2e78cf78ebb6" translate="yes" xml:space="preserve">
          <source>Load pickled pandas object (or any object) from file.</source>
          <target state="translated">Загрузить из файла маринованный объект панды (или любой другой объект).</target>
        </trans-unit>
        <trans-unit id="5a2410f88b68f00104e635cd0a75031342199c33" translate="yes" xml:space="preserve">
          <source>Loading pickled data received from untrusted sources can be unsafe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75625df061596d3920c9c39f679af068cf05fef7" translate="yes" xml:space="preserve">
          <source>Loading pickled data received from untrusted sources can be unsafe. See &lt;a href=&quot;https://docs.python.org/3/library/pickle.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Загрузка консервированных данных, полученных из ненадежных источников, может быть небезопасной. Смотрите &lt;a href=&quot;https://docs.python.org/3/library/pickle.html&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b265a63cc95e7f71d856c34a6711394c7a6bd3f4" translate="yes" xml:space="preserve">
          <source>Local application/library specific imports</source>
          <target state="translated">Импорт по местным заявкам/библиотекам</target>
        </trans-unit>
        <trans-unit id="72dccf01d2822e02fcc5909d5688faca92ab38d0" translate="yes" xml:space="preserve">
          <source>Local clipboard</source>
          <target state="translated">Локальный буфер обмена</target>
        </trans-unit>
        <trans-unit id="573faf18825a085ecfb3336ef224bcc2ae1d82cf" translate="yes" xml:space="preserve">
          <source>Local variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87adaaf1b7684da0ba34d59bcf28d64d0f50ab50" translate="yes" xml:space="preserve">
          <source>Locale determining the language in which to return the day name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bedf43902ca4162cb840274437622e0d6bcf6237" translate="yes" xml:space="preserve">
          <source>Locale determining the language in which to return the day name. Default is English locale.</source>
          <target state="translated">Местонахождение,определяющее язык,на котором возвращается название дня.По умолчанию-английская локаль.</target>
        </trans-unit>
        <trans-unit id="9d74d5599256964c0be62bc8eedb16acb3527035" translate="yes" xml:space="preserve">
          <source>Locale determining the language in which to return the month name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba41d1597c5be6bf923475989beaec85e164c449" translate="yes" xml:space="preserve">
          <source>Locale determining the language in which to return the month name. Default is English locale.</source>
          <target state="translated">Местонахождение,определяющее язык,на котором возвращается название месяца.По умолчанию-английская локаль.</target>
        </trans-unit>
        <trans-unit id="73b793f3c64332c43debe3f45fccfa2080cec4a8" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s abbreviated month name.</source>
          <target state="translated">Сокращенное название месяца локали.</target>
        </trans-unit>
        <trans-unit id="c9afac89d2e328ab0ed56be9db5cfa0260851bff" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s abbreviated weekday name.</source>
          <target state="translated">Сокращенное название дня недели языкового стандарта.</target>
        </trans-unit>
        <trans-unit id="46905c93036f1fc91beab4f6536669f4aa997a97" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s appropriate date and time representation.</source>
          <target state="translated">Соответствующее представление даты и времени языкового стандарта.</target>
        </trans-unit>
        <trans-unit id="13dd4044599b17dfb922c37d1bc883f07809d332" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s appropriate date representation.</source>
          <target state="translated">Соответствующее представление даты языкового стандарта.</target>
        </trans-unit>
        <trans-unit id="36487e73126def0235c7c9de6ec2356b44418976" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s appropriate time representation.</source>
          <target state="translated">Соответствующее временное представление локали.</target>
        </trans-unit>
        <trans-unit id="f2fefc48256fa82bb994918d97f4d1273ceaaa82" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s equivalent of either AM or PM.</source>
          <target state="translated">Локальный эквивалент AM или PM.</target>
        </trans-unit>
        <trans-unit id="6fd390382c5edc4503dc946a153a0cfc7197d046" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s full month name.</source>
          <target state="translated">Полное название месяца языкового стандарта.</target>
        </trans-unit>
        <trans-unit id="07ec6fcd65ab62d1a5fc3d4b40fc1f0d429bee74" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s full weekday name.</source>
          <target state="translated">Полное название дня недели Locale.</target>
        </trans-unit>
        <trans-unit id="3813ae033ccf32018cf51dde5963f65226ad853e" translate="yes" xml:space="preserve">
          <source>Localization of nonexistent times will raise an error by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3929ec567919d3ec847eca27be0e62dd4823048" translate="yes" xml:space="preserve">
          <source>Localize DatetimeIndex in US/Eastern time zone:</source>
          <target state="translated">Локализация DatetimeIndex в США/Восточном часовом поясе:</target>
        </trans-unit>
        <trans-unit id="cbd3d21820c096c7f6342c7d000f3600b60dd30f" translate="yes" xml:space="preserve">
          <source>Localize local times:</source>
          <target state="translated">Локализуйте местное время:</target>
        </trans-unit>
        <trans-unit id="c01c12fec580fd0ae5983d8fd8c23618c033b693" translate="yes" xml:space="preserve">
          <source>Localize tz-naive Datetime Array/Index to tz-aware Datetime Array/Index.</source>
          <target state="translated">Локализуйте массив времени/индекс tz-naive Datetime Array/Index к массиву времени/индексу времени tz-aware Datetime Array/Index.</target>
        </trans-unit>
        <trans-unit id="fb3e8de07a001e83d1584bf642e3b7f5b39caf74" translate="yes" xml:space="preserve">
          <source>Localize tz-naive DatetimeIndex to a given time zone, or remove timezone from a tz-aware DatetimeIndex.</source>
          <target state="translated">Локализация tz-naive DatetimeIndex к заданному часовому поясу,или удаление часового пояса из tz-aware DatetimeIndex.</target>
        </trans-unit>
        <trans-unit id="e3011dd11bab32bdd0107cb24c5bdaa8446b4000" translate="yes" xml:space="preserve">
          <source>Localize tz-naive index of a Series or DataFrame to target time zone.</source>
          <target state="translated">Локализация tz-наивного индекса серии или DataFrame в целевой временной зоне.</target>
        </trans-unit>
        <trans-unit id="5c6d1d9f75d09ee9cdf6c7dd11b4f9a5369cd9d4" translate="yes" xml:space="preserve">
          <source>Location of item(-s) which will be deleted. Use a list of locations to delete more than one value at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6a9dc9e1a0da653f20e4de4d80cfcb525b32c8" translate="yes" xml:space="preserve">
          <source>Location where the load job should run. See the &lt;a href=&quot;https://cloud.google.com/bigquery/docs/dataset-locations&quot;&gt;BigQuery locations documentation&lt;/a&gt; for a list of available locations. The location must match that of the target dataset.</source>
          <target state="translated">Место, где должно выполняться задание загрузки. См &lt;a href=&quot;https://cloud.google.com/bigquery/docs/dataset-locations&quot;&gt;месторасположения документации BigQuery&lt;/a&gt; для получения списка доступных местоположений. Местоположение должно совпадать с положением целевого набора данных.</target>
        </trans-unit>
        <trans-unit id="a0f52f86321e0bebd96ceacce69113e297e1d891" translate="yes" xml:space="preserve">
          <source>Location where the query job should run. See the &lt;a href=&quot;https://cloud.google.com/bigquery/docs/dataset-locations&quot;&gt;BigQuery locations documentation&lt;/a&gt; for a list of available locations. The location must match that of any datasets used in the query.</source>
          <target state="translated">Место, где должно выполняться задание запроса. См &lt;a href=&quot;https://cloud.google.com/bigquery/docs/dataset-locations&quot;&gt;месторасположения документации BigQuery&lt;/a&gt; для получения списка доступных местоположений. Местоположение должно совпадать с местоположением любых наборов данных, используемых в запросе.</target>
        </trans-unit>
        <trans-unit id="189fd1f17597f249dfc1bdb5b480bef4ff0880f6" translate="yes" xml:space="preserve">
          <source>Logical indicating if first day of month (defined by frequency)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c843d0679ed9030f0e798e11b30fe61ee9d969a6" translate="yes" xml:space="preserve">
          <source>Logical indicating if first day of quarter (defined by frequency)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66de0c0d518763168fb48a377b719f70dc48109a" translate="yes" xml:space="preserve">
          <source>Logical indicating if first day of year (defined by frequency)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30135f00f1cfcdaf43c9f0151f7be24b1b06e641" translate="yes" xml:space="preserve">
          <source>Logical indicating if last day of month (defined by frequency)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67bc96f1bf1850038ec4b4142e1e5b7a0d50fff" translate="yes" xml:space="preserve">
          <source>Logical indicating if last day of quarter (defined by frequency)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d5530eb65ab5579d2001b933faa57a3091c3d4" translate="yes" xml:space="preserve">
          <source>Logical indicating if last day of year (defined by frequency)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45fbe46d29c9c73b9f156dbad324936633700b83" translate="yes" xml:space="preserve">
          <source>Logical indicating if the date belongs to a leap year</source>
          <target state="translated">Логическое указание на принадлежность даты к високосному году</target>
        </trans-unit>
        <trans-unit id="8c7e17f8415033aec14c25b2ad88f077fc97a88c" translate="yes" xml:space="preserve">
          <source>Logical indicating if the date belongs to a leap year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab411408fbd29ad68b53700b2e7826c03e6703f0" translate="yes" xml:space="preserve">
          <source>Logical operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7509f1d0dbaccb8bfb89dc8e3d05acd95dfcfe48" translate="yes" xml:space="preserve">
          <source>Look for a &lt;em&gt;vectorized&lt;/em&gt; solution: many operations can be performed using built-in methods or NumPy functions, (boolean) indexing, &amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0724af5846b9c4e39e31c0d27a012270ac0033b6" translate="yes" xml:space="preserve">
          <source>Looking up values by index/column labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515bbd1e58f574887fffef456fae09a122bf2727" translate="yes" xml:space="preserve">
          <source>Loops like this would be &lt;em&gt;extremely&lt;/em&gt; slow in Python, but in Cython looping over NumPy arrays is &lt;em&gt;fast&lt;/em&gt;.</source>
          <target state="translated">Подобные циклы были бы &lt;em&gt;чрезвычайно&lt;/em&gt; медленными в Python, но в Cython цикл по массивам NumPy выполняется &lt;em&gt;быстро&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="cbadcaaf6ba6d204aee48d0a0e73f5233d69e9ad" translate="yes" xml:space="preserve">
          <source>Low-level access to HDF files.</source>
          <target state="translated">Низкоуровневый доступ к файлам HDF.</target>
        </trans-unit>
        <trans-unit id="2f3aa84345665a423ec0df865522e37c834723ea" translate="yes" xml:space="preserve">
          <source>Low-level reader for Stata data files.</source>
          <target state="translated">Низкоуровневая программа для чтения файлов данных Stata.</target>
        </trans-unit>
        <trans-unit id="b1c16094a41aa0f5f74c08c0e2d136bc4ff4bb65" translate="yes" xml:space="preserve">
          <source>Low-level writer for Stata data files.</source>
          <target state="translated">Низкоуровневый пишущий CD-ROM для файлов данных Stata.</target>
        </trans-unit>
        <trans-unit id="d97d8514b543ee86bf986454ef2387af13c3fc9c" translate="yes" xml:space="preserve">
          <source>Low-level writer for version 117 files.</source>
          <target state="translated">Низкоуровневый пишущий CD-ROM для файлов версии 117.</target>
        </trans-unit>
        <trans-unit id="610ff4d66bb1c6eca92b623c6506a9236d410efa" translate="yes" xml:space="preserve">
          <source>Luminance threshold for determining text color. Facilitates text visibility across varying background colors. From 0 to 1. 0 = all text is dark colored, 1 = all text is light colored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63ae6dd4fc9f9dda66970e827d13f7c73fe841c" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>
        </trans-unit>
        <trans-unit id="b8a812ac59db64674f090a63169af644e96f3c0d" translate="yes" xml:space="preserve">
          <source>MOEX Data</source>
          <target state="translated">данные MOEX</target>
        </trans-unit>
        <trans-unit id="0f249e4e5aa1c61aec7276f8653a07588c89789c" translate="yes" xml:space="preserve">
          <source>MS</source>
          <target state="translated">MS</target>
        </trans-unit>
        <trans-unit id="459a0ec6ebf159c332cee0efc88508fadb84cf9b" translate="yes" xml:space="preserve">
          <source>MS Excel</source>
          <target state="translated">MS Excel</target>
        </trans-unit>
        <trans-unit id="2f09b5650d98f41c66f8010e1c633e17b9b924ec" translate="yes" xml:space="preserve">
          <source>Make Matplotlib look like R</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb77df18ef50a2e8cab1a9f5a9fc5833aa2cb02" translate="yes" xml:space="preserve">
          <source>Make a Categorical type from codes and categories or dtype.</source>
          <target state="translated">Сделайте Категорический тип из кодов и категорий или dtype.</target>
        </trans-unit>
        <trans-unit id="764daf8d9a5851019edc3b7ceb9e99e63bdb7a4b" translate="yes" xml:space="preserve">
          <source>Make a MultiIndex from a DataFrame.</source>
          <target state="translated">Сделайте мультииндекс из DataFrame.</target>
        </trans-unit>
        <trans-unit id="7240de296c27f47ab3d071be9fb3aba24ab7c117" translate="yes" xml:space="preserve">
          <source>Make a MultiIndex from cartesian product of iterables.</source>
          <target state="translated">Сделайте MultiIndex из картезианского продукта из итерабельных материалов.</target>
        </trans-unit>
        <trans-unit id="b03916ef37aea64fd6ea1d199d8cc65435e7475d" translate="yes" xml:space="preserve">
          <source>Make a MultiIndex from the cartesian product of multiple iterables.</source>
          <target state="translated">Сделайте MultiIndex из картезианского продукта из нескольких итерабелей.</target>
        </trans-unit>
        <trans-unit id="e6f5cabc3606442bef31e4bd40d3cfd66fec88c8" translate="yes" xml:space="preserve">
          <source>Make a bar plot with matplotlib.</source>
          <target state="translated">Сделайте барный участок с матплотлибом.</target>
        </trans-unit>
        <trans-unit id="e002f32a908c7792fa4d8dc84d8e81c61b865d22" translate="yes" xml:space="preserve">
          <source>Make a box plot from DataFrame columns.</source>
          <target state="translated">Сделайте график из столбцов DataFrame.</target>
        </trans-unit>
        <trans-unit id="1edda5085c85abc224ea0c8448b25abbe07f2a43" translate="yes" xml:space="preserve">
          <source>Make a box plot of the DataFrame columns.</source>
          <target state="translated">Сделайте график столбцов DataFrame.</target>
        </trans-unit>
        <trans-unit id="cbbcfe46774ff64f6b04ace0c029723d6d55eafc" translate="yes" xml:space="preserve">
          <source>Make a box-and-whisker plot from DataFrame columns, optionally grouped by some other columns. A box plot is a method for graphically depicting groups of numerical data through their quartiles. The box extends from the Q1 to Q3 quartile values of the data, with a line at the median (Q2). The whiskers extend from the edges of box to show the range of the data. By default, they extend no more than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ef28f45ef01017894a1ea1aece5c8b18a16735" translate="yes" xml:space="preserve">
          <source>Make a box-and-whisker plot from DataFrame columns, optionally grouped by some other columns. A box plot is a method for graphically depicting groups of numerical data through their quartiles. The box extends from the Q1 to Q3 quartile values of the data, with a line at the median (Q2). The whiskers extend from the edges of box to show the range of the data. The position of the whiskers is set by default to &lt;code&gt;1.5 * IQR (IQR = Q3 - Q1)&lt;/code&gt; from the edges of the box. Outlier points are those past the end of the whiskers.</source>
          <target state="translated">Создайте график в виде прямоугольников и усов из столбцов DataFrame, необязательно сгруппированных по некоторым другим столбцам. Ящичная диаграмма - это метод графического изображения групп числовых данных через их квартили. Поле простирается от значений квартилей от Q1 до Q3 данных с линией на медиане (Q2). Усы выступают от краев рамки, чтобы показать диапазон данных. Положение усов по умолчанию установлено на &lt;code&gt;1.5 * IQR (IQR = Q3 - Q1)&lt;/code&gt; от краев поля. Точки выброса - это те, которые находятся за пределами усов.</target>
        </trans-unit>
        <trans-unit id="52abb21400eda82f13a4c6f2b2c2b2e8d243f815" translate="yes" xml:space="preserve">
          <source>Make a copy of input ndarray</source>
          <target state="translated">Сделайте копию input ndarray</target>
        </trans-unit>
        <trans-unit id="775a3bec904a387798a898e804fc0394d96d77d3" translate="yes" xml:space="preserve">
          <source>Make a copy of input ndarray.</source>
          <target state="translated">Сделайте копию входной и выходной индикатор.</target>
        </trans-unit>
        <trans-unit id="27e13f202379190aff5ad22e04e642c18a09f342" translate="yes" xml:space="preserve">
          <source>Make a copy of this object&amp;rsquo;s indices and data.</source>
          <target state="translated">Сделайте копию индексов и данных этого объекта.</target>
        </trans-unit>
        <trans-unit id="763ae4a8a7aa823a9f3fa26d309f57a675e60322" translate="yes" xml:space="preserve">
          <source>Make a copy of this object.</source>
          <target state="translated">Сделайте копию этого объекта.</target>
        </trans-unit>
        <trans-unit id="eeec3b35b074f97c5675091c6065be0ab25338cd" translate="yes" xml:space="preserve">
          <source>Make a copy of this object. Name and dtype sets those attributes on the new object.</source>
          <target state="translated">Сделайте копию этого объекта.Имя и тип задают эти атрибуты для нового объекта.</target>
        </trans-unit>
        <trans-unit id="7c48bd342906d999dcc0057044b146f1b4d4e30e" translate="yes" xml:space="preserve">
          <source>Make a deep copy, including a copy of the data and the indices. With &lt;code&gt;deep=False&lt;/code&gt; neither the indices nor the data are copied.</source>
          <target state="translated">Сделайте полную копию, включая копию данных и индексов. Если &lt;code&gt;deep=False&lt;/code&gt; , ни индексы, ни данные не копируются.</target>
        </trans-unit>
        <trans-unit id="0e00e4c5f7833c8d641e93cef27426a0bce9e6f3" translate="yes" xml:space="preserve">
          <source>Make a histogram of the DataFrame&amp;rsquo;s.</source>
          <target state="translated">Сделайте гистограмму DataFrame.</target>
        </trans-unit>
        <trans-unit id="9d4ab9be67e2cb0e5f66d527b5e3e2d3d1bab32c" translate="yes" xml:space="preserve">
          <source>Make a histogram.</source>
          <target state="translated">Сделай гистограмму.</target>
        </trans-unit>
        <trans-unit id="f301da3dd0b191ab853eb367fe0430b17cc1635e" translate="yes" xml:space="preserve">
          <source>Make a horizontal bar plot.</source>
          <target state="translated">Сделайте горизонтальный график бара.</target>
        </trans-unit>
        <trans-unit id="50bb78886ee862878c346b7663fa03b743bbd930" translate="yes" xml:space="preserve">
          <source>Make box plots from DataFrameGroupBy data.</source>
          <target state="translated">Сделайте бокс-графики из данных DataFrameGroupBy.</target>
        </trans-unit>
        <trans-unit id="7f938108147f9e42ef5ef20109c54632949a6ad8" translate="yes" xml:space="preserve">
          <source>Make it &lt;strong&gt;easy to convert&lt;/strong&gt; ragged, differently-indexed data in other Python and NumPy data structures into DataFrame objects</source>
          <target state="translated">Сделать это &lt;strong&gt;легко конвертировать&lt;/strong&gt; рваным, иначе-индексированные данные в других структурах данных Python и NumPy в объекты DataFrame</target>
        </trans-unit>
        <trans-unit id="2741349f960382c92ba4dd0f537d4712defd7cec" translate="yes" xml:space="preserve">
          <source>Make new Index inserting new item at location.</source>
          <target state="translated">Сделайте новую индексацию,вставляя новый элемент в местоположение.</target>
        </trans-unit>
        <trans-unit id="2b6b026ce83ce59b76e0a5ede9f0339c2e22346c" translate="yes" xml:space="preserve">
          <source>Make new Index with passed list of labels deleted.</source>
          <target state="translated">Создайте новый Индекс с переданным списком удаленных меток.</target>
        </trans-unit>
        <trans-unit id="691df04a7be6abcefa85c95315030fc9ca8514a7" translate="yes" xml:space="preserve">
          <source>Make new Index with passed location(-s) deleted.</source>
          <target state="translated">Создать новый индекс с удалением переданного местоположения(-ов).</target>
        </trans-unit>
        <trans-unit id="c25f905a40d43fb7c7182723691f7d0f04a2cb09" translate="yes" xml:space="preserve">
          <source>Make plots of DataFrame using matplotlib / pylab.</source>
          <target state="translated">Сделайте графики DataFrame с помощью matplotlib/Pylab.</target>
        </trans-unit>
        <trans-unit id="7afc6d8048c5d98180314522501819892b5e8136" translate="yes" xml:space="preserve">
          <source>Make plots of DataFrame using matplotlib.</source>
          <target state="translated">Сделайте графики DataFrame с помощью matplotlib.</target>
        </trans-unit>
        <trans-unit id="b6cb38c611ec1a4b29b2b6eb04e1d558248780da" translate="yes" xml:space="preserve">
          <source>Make plots of Series or DataFrame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40da5a84bf16428fb85fe7e515947de7945d7238" translate="yes" xml:space="preserve">
          <source>Make plots of a DataFrame.</source>
          <target state="translated">Сделайте графики DataFrame.</target>
        </trans-unit>
        <trans-unit id="34ce1b287e3b8f9d087228f1d6a71f7d42d1238f" translate="yes" xml:space="preserve">
          <source>Make separate subplots for each column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2d579dc2d38ffc1791d8a72e92589f458ecae3" translate="yes" xml:space="preserve">
          <source>Make sure that you have &lt;a href=&quot;#contributing-forking&quot;&gt;cloned the repository&lt;/a&gt;</source>
          <target state="translated">Убедитесь, что вы &lt;a href=&quot;#contributing-forking&quot;&gt;клонировали репозиторий&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4d39f6a3ada43ed41567c12d60224ac68ee701a" translate="yes" xml:space="preserve">
          <source>Make sure you use a lower-case &lt;code&gt;-d&lt;/code&gt;, or else git won&amp;rsquo;t warn you if your feature branch has not actually been merged.</source>
          <target state="translated">Убедитесь, что вы используете &lt;code&gt;-d&lt;/code&gt; в нижнем регистре , иначе git не предупредит вас, если ваша функциональная ветка на самом деле не была объединена.</target>
        </trans-unit>
        <trans-unit id="9ed544a1c884b2389e8a7f53326c3a35e5ec8124" translate="yes" xml:space="preserve">
          <source>Make sure your conda is up to date (&lt;code&gt;conda update conda&lt;/code&gt;)</source>
          <target state="translated">Убедитесь, что ваша conda обновлена ​​( &lt;code&gt;conda update conda&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b43bb0e8f75d35631a6e779a8a36c42c44205ba7" translate="yes" xml:space="preserve">
          <source>Make the interval closed on the &amp;lsquo;right&amp;rsquo;, &amp;lsquo;left&amp;rsquo;, &amp;lsquo;both&amp;rsquo; or &amp;lsquo;neither&amp;rsquo; endpoints. Defaults to &amp;lsquo;right&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e2c593efc25f1feed4c1504c08c82402153d5e" translate="yes" xml:space="preserve">
          <source>Make the interval closed on the &amp;lsquo;right&amp;rsquo;, &amp;lsquo;left&amp;rsquo;, &amp;lsquo;both&amp;rsquo; or &amp;lsquo;neither&amp;rsquo; endpoints. For offset-based windows, it defaults to &amp;lsquo;right&amp;rsquo;. For fixed windows, defaults to &amp;lsquo;both&amp;rsquo;. Remaining cases not implemented for fixed windows.</source>
          <target state="translated">Сделайте интервал закрытым на &amp;laquo;правой&amp;raquo;, &amp;laquo;левой&amp;raquo;, &amp;laquo;обеих&amp;raquo; или &amp;laquo;ни одной&amp;raquo; конечных точках. Для окон со смещением по умолчанию установлено &amp;laquo;вправо&amp;raquo;. Для фиксированных окон по умолчанию установлено &amp;laquo;оба&amp;raquo;. Остальные случаи не реализованы для фиксированных окон.</target>
        </trans-unit>
        <trans-unit id="93a4f9f2b2274804f0a126eddda2e27b2bf68967" translate="yes" xml:space="preserve">
          <source>Make the interval closed with respect to the given frequency to the &amp;lsquo;left&amp;rsquo;, &amp;lsquo;right&amp;rsquo;, or both sides (None)</source>
          <target state="translated">Сделайте интервал замкнутым по отношению к заданной частоте &amp;laquo;влево&amp;raquo;, &amp;laquo;вправо&amp;raquo; или в обе стороны (Нет)</target>
        </trans-unit>
        <trans-unit id="44d1913bb002919604b78317a13c3c73b8965ac7" translate="yes" xml:space="preserve">
          <source>Make the interval closed with respect to the given frequency to the &amp;lsquo;left&amp;rsquo;, &amp;lsquo;right&amp;rsquo;, or both sides (None).</source>
          <target state="translated">Сделайте интервал замкнутым по отношению к заданной частоте &amp;laquo;влево&amp;raquo;, &amp;laquo;вправо&amp;raquo; или в обе стороны (Нет).</target>
        </trans-unit>
        <trans-unit id="adc3f741208653c69e9d6b1c6da34a4bc5ac84ba" translate="yes" xml:space="preserve">
          <source>Make the interval closed with respect to the given frequency to the &amp;lsquo;left&amp;rsquo;, &amp;lsquo;right&amp;rsquo;, or both sides (None, the default).</source>
          <target state="translated">Сделайте интервал закрытым относительно заданной частоты &amp;laquo;влево&amp;raquo;, &amp;laquo;вправо&amp;raquo; или в обе стороны (нет, по умолчанию).</target>
        </trans-unit>
        <trans-unit id="b1ea41d8b0fe30644222c4b91746b1e6b0449e38" translate="yes" xml:space="preserve">
          <source>Make the row labels bold in the output.</source>
          <target state="translated">Сделайте метки строк жирным шрифтом на выходе.</target>
        </trans-unit>
        <trans-unit id="87958213720eac9603b861cff4b359aabed947cc" translate="yes" xml:space="preserve">
          <source>Managing heterogeneous data using a linked multiple table hierarchy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea63d25b415667952399f44dbc3545dc469a106" translate="yes" xml:space="preserve">
          <source>Manipulating and converting date times with timezone information</source>
          <target state="translated">Манипулирование и преобразование времени даты с информацией о часовом поясе</target>
        </trans-unit>
        <trans-unit id="4e836fdc2572ab23d5dc8c36bd613ac6b0f82d63" translate="yes" xml:space="preserve">
          <source>Manual</source>
          <target state="translated">Manual</target>
        </trans-unit>
        <trans-unit id="b651298c7b8138ae81a7819de085cb6d0f3031f6" translate="yes" xml:space="preserve">
          <source>Manually chunking is an OK option for workflows that don&amp;rsquo;t require too sophisticated of operations. Some operations, like &lt;code&gt;groupby&lt;/code&gt;, are much harder to do chunkwise. In these cases, you may be better switching to a different library that implements these out-of-core algorithms for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d72250d07b01c2aa825c6968a3fcb6f3af7fbb7" translate="yes" xml:space="preserve">
          <source>Many kinds of complicated data manipulations can be expressed in terms of GroupBy operations (though can&amp;rsquo;t be guaranteed to be the most efficient). You can get quite creative with the label mapping functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1edbd39b7836a0ac2bd498ee95282b3be0cb7cb4" translate="yes" xml:space="preserve">
          <source>Many of these principles are here to address the shortcomings frequently experienced using other languages / scientific research environments. For data scientists, working with data is typically divided into multiple stages: munging and cleaning data, analyzing / modeling it, then organizing the results of the analysis into a form suitable for plotting or tabular display. pandas is the ideal tool for all of these tasks.</source>
          <target state="translated">Многие из этих принципов призваны устранить недостатки,часто возникающие при использовании других языков/научных исследований.Для ученых,работающих с данными,работа с ними,как правило,делится на несколько этапов:обмундирование и очистка данных,их анализ/моделирование,затем систематизация результатов анализа в форму,подходящую для черчения или табличного отображения.панды являются идеальным инструментом для решения всех этих задач.</target>
        </trans-unit>
        <trans-unit id="80f69fabddf0abec62aa0ce5a113241069aa0e16" translate="yes" xml:space="preserve">
          <source>Many people have suggested that NumPy should simply emulate the &lt;code&gt;NA&lt;/code&gt; support present in the more domain-specific statistical programming language &lt;a href=&quot;https://r-project.org&quot;&gt;R&lt;/a&gt;. Part of the reason is the NumPy type hierarchy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57acf70da5cc61b2277e74c007004475e04fb46" translate="yes" xml:space="preserve">
          <source>Many workflows involve a large amount of data and processing it in a way that reduces the size to something that fits in memory. In this case, we&amp;rsquo;ll resample to daily frequency and take the mean. Once we&amp;rsquo;ve taken the mean, we know the results will fit in memory, so we can safely call &lt;code&gt;compute&lt;/code&gt; without running out of memory. At that point it&amp;rsquo;s just a regular pandas object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="802c18a1cf0c44f734082ef97e3c673abf8fa5fb" translate="yes" xml:space="preserve">
          <source>Map all characters in the string through the given mapping table.</source>
          <target state="translated">Расположите все символы в строке по заданной картографической таблице.</target>
        </trans-unit>
        <trans-unit id="bd4b7c75bbd0319321fddb2ef6076406d9936674" translate="yes" xml:space="preserve">
          <source>Map all characters in the string through the given mapping table. Equivalent to standard &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.translate&quot;&gt;&lt;code&gt;str.translate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Сопоставьте все символы в строке с данной таблицей сопоставления. Эквивалентно стандартной &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.translate&quot;&gt; &lt;code&gt;str.translate()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d9e47d52aa4abe16a1659682eb822ded1d1421e" translate="yes" xml:space="preserve">
          <source>Map column names to minimum string sizes for columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786b1ebb50e5d5006cb007533ecaa8b5920c4e6f" translate="yes" xml:space="preserve">
          <source>Map values of Series according to input correspondence.</source>
          <target state="translated">Значения карт серии в соответствии с входной корреспонденцией.</target>
        </trans-unit>
        <trans-unit id="86439a8fa1612920b5b5a0fe98e7fba1f2cc3ed7" translate="yes" xml:space="preserve">
          <source>Map values using input correspondence (a dict, Series, or function).</source>
          <target state="translated">Значения карты с использованием входного соответствия (диктат,серия или функция).</target>
        </trans-unit>
        <trans-unit id="77bd2ad3d849345d18408522edfdfe17449329a3" translate="yes" xml:space="preserve">
          <source>Mapped index.</source>
          <target state="translated">Картографический индекс.</target>
        </trans-unit>
        <trans-unit id="da3c937b48929eec61dc0bf7e2c26b0d8391269e" translate="yes" xml:space="preserve">
          <source>Mapping correspondence.</source>
          <target state="translated">Картирование переписки.</target>
        </trans-unit>
        <trans-unit id="fd05a1c6e1dee8e70ace209fe5ea9bc2e7b028db" translate="yes" xml:space="preserve">
          <source>Maps the values (their categories, not the codes) of the index to new categories. If the mapping correspondence is one-to-one the result is a &lt;a href=&quot;pandas.categoricalindex#pandas.CategoricalIndex&quot;&gt;&lt;code&gt;CategoricalIndex&lt;/code&gt;&lt;/a&gt; which has the same order property as the original, otherwise an &lt;a href=&quot;pandas.index#pandas.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Сопоставляет значения (их категории, а не коды) индекса с новыми категориями. Если соответствие отображения является однозначным, результатом является &lt;a href=&quot;pandas.categoricalindex#pandas.CategoricalIndex&quot;&gt; &lt;code&gt;CategoricalIndex&lt;/code&gt; &lt;/a&gt; который имеет то же свойство порядка, что и оригинал, в противном случае возвращается &lt;a href=&quot;pandas.index#pandas.Index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8aadf1657da58cb6e5ae063fb1322736bf6002e4" translate="yes" xml:space="preserve">
          <source>Mask</source>
          <target state="translated">Mask</target>
        </trans-unit>
        <trans-unit id="1d40e31ac98d463e5e9e157373da4c4bdaf59bf7" translate="yes" xml:space="preserve">
          <source>Mask of bool values for each element in DataFrame that indicates whether an element is an NA value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb2d754cae3572c10e6aac228b71d990a412353" translate="yes" xml:space="preserve">
          <source>Mask of bool values for each element in DataFrame that indicates whether an element is not an NA value.</source>
          <target state="translated">Маска значений bool для каждого элемента в DataFrame,которая указывает,не является ли элемент значением NA.</target>
        </trans-unit>
        <trans-unit id="acf74b398a35aa0bf65ff5bc34f520e63631b303" translate="yes" xml:space="preserve">
          <source>Mask of bool values for each element in Series that indicates whether an element is an NA value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a9d20a3d0fed432d5098dca9aa3d9d6d587dc2" translate="yes" xml:space="preserve">
          <source>Mask of bool values for each element in Series that indicates whether an element is not an NA value.</source>
          <target state="translated">Маска значений bool для каждого элемента в Серии,которая указывает,не является ли элемент значением NA.</target>
        </trans-unit>
        <trans-unit id="70d1b338d5725d1c22c2eb001ab794dc19d7be20" translate="yes" xml:space="preserve">
          <source>Match on these columns before performing merge operation.</source>
          <target state="translated">Сопоставьте эти столбцы перед выполнением операции слияния.</target>
        </trans-unit>
        <trans-unit id="6b27b16a0e6e728c36f9396b9defe894bb1848af" translate="yes" xml:space="preserve">
          <source>Matching / broadcasting behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bfe27a493af2dfedc15f7f1ea88b1cf88c1ec5b" translate="yes" xml:space="preserve">
          <source>Matching NaNs will not appear as a difference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627fb2d6e25a0e2642c928a36f85dac792afc05c" translate="yes" xml:space="preserve">
          <source>Math functions: &lt;code&gt;sin&lt;/code&gt;, &lt;code&gt;cos&lt;/code&gt;, &lt;code&gt;exp&lt;/code&gt;, &lt;code&gt;log&lt;/code&gt;, &lt;code&gt;expm1&lt;/code&gt;, &lt;code&gt;log1p&lt;/code&gt;, &lt;code&gt;sqrt&lt;/code&gt;, &lt;code&gt;sinh&lt;/code&gt;, &lt;code&gt;cosh&lt;/code&gt;, &lt;code&gt;tanh&lt;/code&gt;, &lt;code&gt;arcsin&lt;/code&gt;, &lt;code&gt;arccos&lt;/code&gt;, &lt;code&gt;arctan&lt;/code&gt;, &lt;code&gt;arccosh&lt;/code&gt;, &lt;code&gt;arcsinh&lt;/code&gt;, &lt;code&gt;arctanh&lt;/code&gt;, &lt;code&gt;abs&lt;/code&gt;, &lt;code&gt;arctan2&lt;/code&gt; and &lt;code&gt;log10&lt;/code&gt;.</source>
          <target state="translated">Математические функции: &lt;code&gt;sin&lt;/code&gt; , &lt;code&gt;cos&lt;/code&gt; , &lt;code&gt;exp&lt;/code&gt; , &lt;code&gt;log&lt;/code&gt; , &lt;code&gt;expm1&lt;/code&gt; , &lt;code&gt;log1p&lt;/code&gt; , &lt;code&gt;sqrt&lt;/code&gt; , &lt;code&gt;sinh&lt;/code&gt; , &lt;code&gt;cosh&lt;/code&gt; , &lt;code&gt;tanh&lt;/code&gt; , &lt;code&gt;arcsin&lt;/code&gt; , &lt;code&gt;arccos&lt;/code&gt; , &lt;code&gt;arctan&lt;/code&gt; , &lt;code&gt;arccosh&lt;/code&gt; , &lt;code&gt;arcsinh&lt;/code&gt; , &lt;code&gt;arctanh&lt;/code&gt; , &lt;code&gt;abs&lt;/code&gt; , &lt;code&gt;arctan2&lt;/code&gt; и &lt;code&gt;log10&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ec898e422ec2cb07d53aee0a31d0dcb7e23b229" translate="yes" xml:space="preserve">
          <source>Matplotlib axis object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6f342a7dcdcbb50fd0b28567858e5aeec1e2e0" translate="yes" xml:space="preserve">
          <source>Matplotlib colormap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a589efb01782a915792fc9de33faf470381535" translate="yes" xml:space="preserve">
          <source>Matplotlib equivalent plot.</source>
          <target state="translated">Сюжет в эквиваленте Матплотлиба.</target>
        </trans-unit>
        <trans-unit id="a55fce45322800818875d0bb4c5eb12a1b4e1360" translate="yes" xml:space="preserve">
          <source>Matplotlib figure.</source>
          <target state="translated">Фигура Мэтплотлиба.</target>
        </trans-unit>
        <trans-unit id="f70a4e8005ffff52e713830b3d9775241e2be4a3" translate="yes" xml:space="preserve">
          <source>Matplotlib marker type, default &amp;lsquo;.&amp;rsquo;</source>
          <target state="translated">Тип маркера Matplotlib, по умолчанию '.'</target>
        </trans-unit>
        <trans-unit id="49d3d16afd72b17ff2e438be476eb66cca91c514" translate="yes" xml:space="preserve">
          <source>Matplotlib marker type, default &amp;lsquo;.&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791a6a4924d75e87138709bcf267db7d332396ec" translate="yes" xml:space="preserve">
          <source>Matplotlib scatter method keyword arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8fc2a0699601253f4189fe6478e36465e556e65" translate="yes" xml:space="preserve">
          <source>Matthew Brett&amp;rsquo;s &lt;a href=&quot;http://matthew-brett.github.com/pydagogue/&quot;&gt;Pydagogue&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://matthew-brett.github.com/pydagogue/&quot;&gt;Пидагог&lt;/a&gt; Мэтью Бретта .</target>
        </trans-unit>
        <trans-unit id="223a8ef1456324f63029534180c62625b6187647" translate="yes" xml:space="preserve">
          <source>Max number of levels(depth of dict) to normalize. if None, normalizes all levels.</source>
          <target state="translated">Максимальное количество уровней (глубина диктата)для нормализации.если нет,то нормализует все уровни.</target>
        </trans-unit>
        <trans-unit id="de1e500d79fd449eb3506542b58a0778926d409b" translate="yes" xml:space="preserve">
          <source>Max using level names, as well as indices.</source>
          <target state="translated">Максимально использовать названия уровней,а также индексы.</target>
        </trans-unit>
        <trans-unit id="fa874811248a2656a7de6e8536358c1ca459ccca" translate="yes" xml:space="preserve">
          <source>Max width to truncate each column in characters. By default, no limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8df2fec28d8948a0326722029c7492b88ee4fbe" translate="yes" xml:space="preserve">
          <source>Maximum</source>
          <target state="translated">Maximum</target>
        </trans-unit>
        <trans-unit id="a4f91748cd36b6d1a5c07d5455167920822713f6" translate="yes" xml:space="preserve">
          <source>Maximum bar value, defining the right hand limit of the bar drawing range, higher values are clipped to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62fce6caba6e50a9433e6ff1d33022c5803e693" translate="yes" xml:space="preserve">
          <source>Maximum bar value, defining the right hand limit of the bar drawing range, higher values are clipped to &lt;code&gt;vmax&lt;/code&gt;. When None (default): the maximum value of the data will be used.</source>
          <target state="translated">Максимальное значение стержня, определяющее правый предел диапазона рисования стержня, более высокие значения обрезаются до &lt;code&gt;vmax&lt;/code&gt; . Когда Нет (по умолчанию): будет использоваться максимальное значение данных.</target>
        </trans-unit>
        <trans-unit id="a336916816ed278f1ba463ae521c573484934861" translate="yes" xml:space="preserve">
          <source>Maximum data value that corresponds to colormap maximum value. When None (default): the maximum value of the data will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006aae1f5c2490eb90b0bfffb2ca55b0c27cbbfe" translate="yes" xml:space="preserve">
          <source>Maximum distance between original and new labels for inexact matches. The values of the index at the matching locations most satisfy the equation &lt;code&gt;abs(index[indexer] - target) &amp;lt;= tolerance&lt;/code&gt;.</source>
          <target state="translated">Максимальное расстояние между оригинальной и новой этикетками при неточных совпадениях. Значения индекса в совпадающих местоположениях наиболее удовлетворяют уравнению &lt;code&gt;abs(index[indexer] - target) &amp;lt;= tolerance&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87b2faf9a9285e370b981fe8b04843567aa1ac4f" translate="yes" xml:space="preserve">
          <source>Maximum distance between original and new labels for inexact matches. The values of the index at the matching locations must satisfy the equation &lt;code&gt;abs(index[indexer] - target) &amp;lt;= tolerance&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa08a53c954aef98ce5c6712749dbcf90855b04" translate="yes" xml:space="preserve">
          <source>Maximum distance from index value for inexact matches. The value of the index at the matching location most satisfy the equation &lt;code&gt;abs(index[loc] - key) &amp;lt;= tolerance&lt;/code&gt;.</source>
          <target state="translated">Максимальное расстояние от значения индекса для неточных совпадений. Значение индекса в соответствующем местоположении больше всего удовлетворяет уравнению &lt;code&gt;abs(index[loc] - key) &amp;lt;= tolerance&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e14b7c05a3c00b8c680f780fdb19f6a93e3c06e" translate="yes" xml:space="preserve">
          <source>Maximum distance from index value for inexact matches. The value of the index at the matching location must satisfy the equation &lt;code&gt;abs(index[loc] - key) &amp;lt;= tolerance&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a9b94d76c868082f5441ac7aefae65f8fb9890" translate="yes" xml:space="preserve">
          <source>Maximum line width.</source>
          <target state="translated">Максимальная ширина линии.</target>
        </trans-unit>
        <trans-unit id="5ef946ff338c09c8ee8703cbcf64323ce97b7427" translate="yes" xml:space="preserve">
          <source>Maximum number of columns to display in the console.</source>
          <target state="translated">Максимальное количество колонок для отображения в консоли.</target>
        </trans-unit>
        <trans-unit id="9766c3b3b4cf2806a8ff7f9bcc1b6da151af5246" translate="yes" xml:space="preserve">
          <source>Maximum number of consecutive NaNs to fill. Must be greater than 0.</source>
          <target state="translated">Максимальное количество последовательных NaN для заполнения.Должно быть больше 0.</target>
        </trans-unit>
        <trans-unit id="f3d2de1edb941d11b55b6b64a93b8bb214242c55" translate="yes" xml:space="preserve">
          <source>Maximum number of consecutive elements to forward or backward fill.</source>
          <target state="translated">Максимальное количество последовательных элементов для прямого или обратного заполнения.</target>
        </trans-unit>
        <trans-unit id="eccd51990aa7079ed2e7c9db8f44a6677dd615e9" translate="yes" xml:space="preserve">
          <source>Maximum number of consecutive labels in &lt;code&gt;target&lt;/code&gt; to match for inexact matches.</source>
          <target state="translated">Максимальное количество последовательных меток в &lt;code&gt;target&lt;/code&gt; для неточных совпадений.</target>
        </trans-unit>
        <trans-unit id="4f8def9e942670802b32d39dee817725b24be970" translate="yes" xml:space="preserve">
          <source>Maximum number of consecutive labels to fill for inexact matches.</source>
          <target state="translated">Максимальное количество последовательных меток для заполнения неточных совпадений.</target>
        </trans-unit>
        <trans-unit id="d82bb57c99ebb2c25d9ee4e74b1788b31628c21d" translate="yes" xml:space="preserve">
          <source>Maximum number of rows to display in the console.</source>
          <target state="translated">Максимальное количество строк для отображения в консоли.</target>
        </trans-unit>
        <trans-unit id="418d3bce4b128e946d1d305406f5df081d424e27" translate="yes" xml:space="preserve">
          <source>Maximum number of rows to show before truncating. If None, show all.</source>
          <target state="translated">Максимальное количество строк до усечения.Если нет,покажите все.</target>
        </trans-unit>
        <trans-unit id="502b064e66333dfd10e1b396ba227bd2b2a38ba0" translate="yes" xml:space="preserve">
          <source>Maximum of the values in the object.</source>
          <target state="translated">Максимальное значение в объекте.</target>
        </trans-unit>
        <trans-unit id="9738919c60a7925d571911736b422fc6caf6e4d9" translate="yes" xml:space="preserve">
          <source>Maximum size gap to forward or backward fill.</source>
          <target state="translated">Максимальный размер зазора для прямого или обратного заполнения.</target>
        </trans-unit>
        <trans-unit id="032e5bd972c9ecfc8dcf78d961ed253e491959eb" translate="yes" xml:space="preserve">
          <source>Maximum size gap when reindexing with &lt;code&gt;fill_method&lt;/code&gt;.</source>
          <target state="translated">Максимальный размер разрыва при переиндексировании с помощью &lt;code&gt;fill_method&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f5bb496068a5308705ad8df99b731220915bf60" translate="yes" xml:space="preserve">
          <source>Maximum threshold value. All values above this threshold will be set to it.</source>
          <target state="translated">Максимальное пороговое значение.Все значения выше этого порога будут установлены на него.</target>
        </trans-unit>
        <trans-unit id="bcd3a6f550f9ac8e74b63166554eed081d66bcb9" translate="yes" xml:space="preserve">
          <source>Maximum value allowed. All values above threshold will be set to this value.</source>
          <target state="translated">Максимально допустимое значение.Все значения выше порога будут установлены на это значение.</target>
        </trans-unit>
        <trans-unit id="f40216b2881d06021d975a03d7b5087b46e8a3c1" translate="yes" xml:space="preserve">
          <source>Maximum value.</source>
          <target state="translated">Максимальное значение.</target>
        </trans-unit>
        <trans-unit id="97db58e401ba076427c80f0b61778795760c1c50" translate="yes" xml:space="preserve">
          <source>May not drop or duplicate levels.</source>
          <target state="translated">Нельзя опускать или дублировать уровни.</target>
        </trans-unit>
        <trans-unit id="3b8a07f2c795ff5a90bb5855b481a32d82a6aa31" translate="yes" xml:space="preserve">
          <source>Mean absolute deviation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f608a79e9624d729b9ab7850245c5425dcbbb12d" translate="yes" xml:space="preserve">
          <source>Mean of the values.</source>
          <target state="translated">Средние значения.</target>
        </trans-unit>
        <trans-unit id="6ca3d4c6016ceebec6e37437b1c8ab754354e9e2" translate="yes" xml:space="preserve">
          <source>Mean of values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="184a55138e168af7c826df8d3d990f3022559e8e" translate="yes" xml:space="preserve">
          <source>Median of values within each group.</source>
          <target state="translated">Медиана значений внутри каждой группы.</target>
        </trans-unit>
        <trans-unit id="530f6ddbe6f5cabf01f18a63d450d84bd827f45b" translate="yes" xml:space="preserve">
          <source>Memory usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6604d915cb4701d18878bc8e218fe06061af645" translate="yes" xml:space="preserve">
          <source>Memory usage does not include memory consumed by elements that are not components of the array if deep=False or if used on PyPy</source>
          <target state="translated">Использование памяти не включает в себя память,потребляемую элементами,которые не являются компонентами массива,если deep=False или если используется на PyPy</target>
        </trans-unit>
        <trans-unit id="9e1639694c6ae0aa57453530525b6e8358dfa718" translate="yes" xml:space="preserve">
          <source>Memory usage of DataFrame columns.</source>
          <target state="translated">Использование памяти столбцов DataFrame.</target>
        </trans-unit>
        <trans-unit id="03b754e55629f3753daf4fb3537cdbdf920272f5" translate="yes" xml:space="preserve">
          <source>Memory usage of the values</source>
          <target state="translated">Использование значений в памяти</target>
        </trans-unit>
        <trans-unit id="ccf85b6633688a0e938e3f20d9cf6e3e258590c5" translate="yes" xml:space="preserve">
          <source>Memory usage of the values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d323cbad58202f968b3b89aab283115566d69ee" translate="yes" xml:space="preserve">
          <source>Memory-efficient array for string values with many repeated values.</source>
          <target state="translated">Эффективный с точки зрения памяти массив для строковых значений с большим количеством повторяющихся значений.</target>
        </trans-unit>
        <trans-unit id="ea8f0d02371e3267b086392b1f463d0c520d86e5" translate="yes" xml:space="preserve">
          <source>Merge</source>
          <target state="translated">Merge</target>
        </trans-unit>
        <trans-unit id="386f7c51f645d3dfedfffa603ac18b8693cd1568" translate="yes" xml:space="preserve">
          <source>Merge DataFrame or named Series objects with a database-style join.</source>
          <target state="translated">Объедините DataFrame или именованные объекты Series с соединением в стиле базы данных.</target>
        </trans-unit>
        <trans-unit id="5724d0395b1fc76d60acb59b537d2d62ea9a7b26" translate="yes" xml:space="preserve">
          <source>Merge DataFrames by indexes or columns.</source>
          <target state="translated">Объединяйте DataFrames по индексам или столбцам.</target>
        </trans-unit>
        <trans-unit id="384581d790dc95194440ce6e590b73dcb545fa7b" translate="yes" xml:space="preserve">
          <source>Merge DataFrames df1 and df2 with specified left and right suffixes appended to any overlapping columns.</source>
          <target state="translated">Объедините DataFrames df1 и df2 с указанными левым и правым суффиксами,добавляемыми к любым перекрывающимся столбцам.</target>
        </trans-unit>
        <trans-unit id="bf4db973e14af2a2be8a7014d16d4a61e85905d1" translate="yes" xml:space="preserve">
          <source>Merge DataFrames df1 and df2, but raise an exception if the DataFrames have any overlapping columns.</source>
          <target state="translated">Объедините DataFrames df1 и df2,но поднимите исключение,если DataFrames имеют перекрывающиеся столбцы.</target>
        </trans-unit>
        <trans-unit id="0743992ec8c8a8c51fed841133c86b69e0ef2631" translate="yes" xml:space="preserve">
          <source>Merge df1 and df2 on the lkey and rkey columns. The value columns have the default suffixes, _x and _y, appended.</source>
          <target state="translated">Соедините df1 и df2 на колонках lkey и rkey.Столбцы значений имеют суффиксы по умолчанию,_x и _y,добавленные по умолчанию.</target>
        </trans-unit>
        <trans-unit id="efa1027ff9139afebde7e268acb413c006b7960d" translate="yes" xml:space="preserve">
          <source>Merge dtypes</source>
          <target state="translated">Слияние стилей</target>
        </trans-unit>
        <trans-unit id="0c61d84ec4246f92b0c8e2c1b4302e941be636ec" translate="yes" xml:space="preserve">
          <source>Merge key in both frames</source>
          <target state="translated">Соедините клавиши в обоих кадрах</target>
        </trans-unit>
        <trans-unit id="19ef66c4dc7abc9bce739da9dbdf868bd477ae5e" translate="yes" xml:space="preserve">
          <source>Merge key only in &lt;code&gt;'left'&lt;/code&gt; frame</source>
          <target state="translated">Клавиша слияния только в &lt;code&gt;'left'&lt;/code&gt; фрейме</target>
        </trans-unit>
        <trans-unit id="0f9fd2d706c7b827951193e1b79d6c4b7e5470dc" translate="yes" xml:space="preserve">
          <source>Merge key only in &lt;code&gt;'right'&lt;/code&gt; frame</source>
          <target state="translated">Ключ слияния только в &lt;code&gt;'right'&lt;/code&gt; кадре</target>
        </trans-unit>
        <trans-unit id="3ea74de8f1e44b82c73193be8333ca4d215ceb62" translate="yes" xml:space="preserve">
          <source>Merge method</source>
          <target state="translated">Метод слияния</target>
        </trans-unit>
        <trans-unit id="a367250fc16c19763cdb4fa5081413360b246894" translate="yes" xml:space="preserve">
          <source>Merge on nearest keys.</source>
          <target state="translated">Соединитесь с ближайшими ключами.</target>
        </trans-unit>
        <trans-unit id="772035b454fddd26d804bedadadfcbd620e81285" translate="yes" xml:space="preserve">
          <source>Merge with a database-style join.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db553897f375c607b9a9205c9cd1d0923c893ab" translate="yes" xml:space="preserve">
          <source>Merge with optional filling/interpolation.</source>
          <target state="translated">Слияние с дополнительным наполнением/интерполяцией.</target>
        </trans-unit>
        <trans-unit id="148250eb8dc6b602778210bd80ecb7fb18c8349d" translate="yes" xml:space="preserve">
          <source>Merge, join, and concatenate</source>
          <target state="translated">Соединять,присоединяться и конкатенатовать</target>
        </trans-unit>
        <trans-unit id="733249d7ced9c0e8f438dacb170b2af7433958b8" translate="yes" xml:space="preserve">
          <source>Merge, join, concatenate and compare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40de0d4de887a374168bf79e72c7aa0fa4594d6e" translate="yes" xml:space="preserve">
          <source>Merging</source>
          <target state="translated">Merging</target>
        </trans-unit>
        <trans-unit id="37f47e21de4879b766fb1a3760ecaab311c3e9ae" translate="yes" xml:space="preserve">
          <source>Merging / concatenation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35577658b8f76759aac9839c682c66625d57cdb6" translate="yes" xml:space="preserve">
          <source>Merging asof</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ab5b5d57cfe6fdceb9623c60ffeb3cb9c53d4f" translate="yes" xml:space="preserve">
          <source>Merging on &lt;code&gt;category&lt;/code&gt; dtypes that are the same can be quite performant compared to &lt;code&gt;object&lt;/code&gt; dtype merging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88a6fb572bb29131289afd9f312a5cdd13b79729" translate="yes" xml:space="preserve">
          <source>Merging on a combination of columns and index levels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ae3f7e4df5822a7d886b3b59e27bf64732f73b" translate="yes" xml:space="preserve">
          <source>Merging on-disk tables with millions of rows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa5ec4e75ee6ae3483641389ed3d63d1d23897b" translate="yes" xml:space="preserve">
          <source>Merging ordered data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4ad2ab4f8cc99a44c6b9467a45152283c559a6" translate="yes" xml:space="preserve">
          <source>Merging together values within Series or DataFrame columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f6b9e7056dcd1dcacf8ec8181535163c630c1b" translate="yes" xml:space="preserve">
          <source>Merging will preserve &lt;code&gt;category&lt;/code&gt; dtypes of the mergands. See also the section on &lt;a href=&quot;categorical#categorical-merge&quot;&gt;categoricals&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beee22884d2dd3cdc302370458d39c1477c96571" translate="yes" xml:space="preserve">
          <source>Merging will preserve the dtype of the join keys.</source>
          <target state="translated">Слияние сохранит d-тип ключей соединения.</target>
        </trans-unit>
        <trans-unit id="251edc0eb5a820646bda4e103f0f007fd55321f3" translate="yes" xml:space="preserve">
          <source>Metadata</source>
          <target state="translated">Metadata</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="f6ea3d6e8db1f1275b7c92167188d213d4354a5b" translate="yes" xml:space="preserve">
          <source>Method 1 : idxmin() to get the index of the minimums</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b5b2cd5c0c8cb72f1b6ec2810526395e1c5ac2" translate="yes" xml:space="preserve">
          <source>Method 2 : sort then take first of each</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0337845fa160f43e4c22fbe32ed48ddb937cdf" translate="yes" xml:space="preserve">
          <source>Method Chaining</source>
          <target state="translated">Цепочка методов</target>
        </trans-unit>
        <trans-unit id="fba97801dbd397534877202701358e825b978f3f" translate="yes" xml:space="preserve">
          <source>Method for down/re-sampling, default to &amp;lsquo;mean&amp;rsquo; for downsampling.</source>
          <target state="translated">Метод понижающей / повторной выборки, по умолчанию - &amp;laquo;среднее&amp;raquo; для понижающей дискретизации.</target>
        </trans-unit>
        <trans-unit id="3b1389e0e832a05337d6ccb31e50ea1425ca91a8" translate="yes" xml:space="preserve">
          <source>Method name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e4621f474169c7fa634b6e49b96100d293fcef" translate="yes" xml:space="preserve">
          <source>Method nunique for DataFrame.</source>
          <target state="translated">Метод nunique для DataFrame.</target>
        </trans-unit>
        <trans-unit id="26acbc7971ee21cb50abad4d5e7577e54cb97878" translate="yes" xml:space="preserve">
          <source>Method nunique for Series.</source>
          <target state="translated">Метод nunique для серии.</target>
        </trans-unit>
        <trans-unit id="05279af96a5bf792f0aadabfaad4a2ec4ed97893" translate="yes" xml:space="preserve">
          <source>Method of correlation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125eeb1861a9136a8df188c4ff4ea5f674017c8f" translate="yes" xml:space="preserve">
          <source>Method of employing 4-4-5 calendar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add7737487792d2622995353cff35455ea4748c8" translate="yes" xml:space="preserve">
          <source>Method summary</source>
          <target state="translated">Краткое описание метода</target>
        </trans-unit>
        <trans-unit id="29c229ad44ad49f5687badce9845f6b432d95bba" translate="yes" xml:space="preserve">
          <source>Method to handle dropping duplicates:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e0004f4b224262184bb7b7e09950e7b1d0c453" translate="yes" xml:space="preserve">
          <source>Method to set one or more non-data dependent properties or each cell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9afda44917236543559d1dba017c099ad25057" translate="yes" xml:space="preserve">
          <source>Method to use for filling holes in reindexed DataFrame. Please note: this is only applicable to DataFrames/Series with a monotonically increasing/decreasing index.</source>
          <target state="translated">Метод заполнения отверстий в реиндексируемом DataFrame.Обратите внимание:это применимо только к DataFrame/Series с монотонно увеличивающимся/уменьшающимся индексом.</target>
        </trans-unit>
        <trans-unit id="556baf5107d38549c1c7537ba871c91c3685731a" translate="yes" xml:space="preserve">
          <source>Method to use for filling holes in reindexed Series (note this does not fill NaNs that already were present):</source>
          <target state="translated">Способ заполнения отверстий в реиндексируемой серии (обратите внимание,что он не заполняет NaNs,которые уже присутствовали):</target>
        </trans-unit>
        <trans-unit id="8e34984e85a7b732f2df14fc2802b9ee8d02d98f" translate="yes" xml:space="preserve">
          <source>Method to use for filling holes in reindexed Series pad / ffill: propagate last valid observation forward to next valid backfill / bfill: use NEXT valid observation to fill gap</source>
          <target state="translated">Метод использования для заполнения отверстий в реиндексированной панели серии/засыпка:распространение последнего действительного наблюдения вперед к следующей действительной засыпки/засыпки:использование NEXT действительного наблюдения для заполнения зазора</target>
        </trans-unit>
        <trans-unit id="cf985bbe10fcb13d023e88ac40adce728dd2a3c8" translate="yes" xml:space="preserve">
          <source>Method to use for filling holes in reindexed Series pad / ffill: propagate last valid observation forward to next valid backfill / bfill: use NEXT valid observation to fill gap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d4a60899fea55499fc2efedf9f8c7c91a19e56" translate="yes" xml:space="preserve">
          <source>Method to use for filling holes in reindexed Series pad / ffill: propagate last valid observation forward to next valid backfill / bfill: use next valid observation to fill gap.</source>
          <target state="translated">Способ заполнения отверстий в реиндексируемой панели серии/засыпка:распространить последнее действительное наблюдение вперед к следующему действительному засыпке/засыпке:использовать следующее действительное наблюдение для заполнения зазора.</target>
        </trans-unit>
        <trans-unit id="f7573296e6afe4d877b9cf65f4a3ff35dc6b7710" translate="yes" xml:space="preserve">
          <source>Method to use for filling holes in reindexed Series:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb015a6047d4493159ce72f7831ce8eb351e51f0" translate="yes" xml:space="preserve">
          <source>Method to use for filling holes in resampled data</source>
          <target state="translated">Метод заполнения отверстий в ресэмплируемых данных</target>
        </trans-unit>
        <trans-unit id="034448f41b6bbb7d4ee1b437272cb97bf234f843" translate="yes" xml:space="preserve">
          <source>Method to use when the desired quantile falls between two points.</source>
          <target state="translated">Метод использования,когда желаемый квантиль падает между двумя точками.</target>
        </trans-unit>
        <trans-unit id="cc5e9a4ff7b6d6fe8221f27a0592c6474fe7aeab" translate="yes" xml:space="preserve">
          <source>Method used to compute correlation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="983e0e47fb27d7278997e132d6a949bb2392fa45" translate="yes" xml:space="preserve">
          <source>Methods for working with missing data, e.g. &lt;a href=&quot;../reference/api/pandas.series.isna#pandas.Series.isna&quot;&gt;&lt;code&gt;isna()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../reference/api/pandas.series.fillna#pandas.Series.fillna&quot;&gt;&lt;code&gt;fillna()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../reference/api/pandas.series.dropna#pandas.Series.dropna&quot;&gt;&lt;code&gt;dropna()&lt;/code&gt;&lt;/a&gt;, all work normally:</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
