<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="kotlin">
    <body>
      <group id="kotlin">
        <trans-unit id="e4ece42e8ca7ed7b5274b9d56c6e8a9819d2a14c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - return type of the callable.</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - тип возврата вызываемого.</target>
        </trans-unit>
        <trans-unit id="6053f513a4f31d1b92b7f0955c3446d9420d707a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - return type of the function.</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - тип возвращаемого значения функции.</target>
        </trans-unit>
        <trans-unit id="219606ba8dafc33d12dcd3f771ac87f37ce5b1bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the type of object which owns the delegated property.</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - тип объекта, которому принадлежит делегированное свойство.</target>
        </trans-unit>
        <trans-unit id="8f6bde821b0586dfbef5b04f996bdc04f3f88fcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the type of the property, which it is an accessor of.</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - тип имущества, акцессором которого он является.</target>
        </trans-unit>
        <trans-unit id="eb13ca7fdf8caac0133bbd9287d805bb430e0f0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the type of the property.</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - тип собственности.</target>
        </trans-unit>
        <trans-unit id="8b499d96189442604ea0ec07fcafec55a2358a54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SIZE_BYTES&lt;/code&gt; and &lt;code&gt;SIZE_BITS&lt;/code&gt; constants in primitive type companions.</source>
          <target state="translated">&lt;code&gt;SIZE_BYTES&lt;/code&gt; и &lt;code&gt;SIZE_BITS&lt;/code&gt; в сопутствующих примитивных типах.</target>
        </trans-unit>
        <trans-unit id="371349c4f245ac2f7c209857e856b476349c721a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STATIC&lt;/code&gt; - static native library.</source>
          <target state="translated">&lt;code&gt;STATIC&lt;/code&gt; - статическая собственная библиотека.</target>
        </trans-unit>
        <trans-unit id="498e8296f9f3008aee89f87cc07805309c331414" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Size&lt;/code&gt;, &lt;code&gt;SizeF&lt;/code&gt;, &lt;code&gt;Bundle&lt;/code&gt;, &lt;code&gt;IBinder&lt;/code&gt;, &lt;code&gt;IInterface&lt;/code&gt;, &lt;code&gt;FileDescriptor&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;Size&lt;/code&gt; , &lt;code&gt;SizeF&lt;/code&gt; , &lt;code&gt;Bundle&lt;/code&gt; , &lt;code&gt;IBinder&lt;/code&gt; , &lt;code&gt;IInterface&lt;/code&gt; , &lt;code&gt;FileDescriptor&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="28ba034e423bc6667538f323bcc6d0ea63c293ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SparseArray&lt;/code&gt;, &lt;code&gt;SparseIntArray&lt;/code&gt;, &lt;code&gt;SparseLongArray&lt;/code&gt;, &lt;code&gt;SparseBooleanArray&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;SparseArray&lt;/code&gt; , &lt;code&gt;SparseIntArray&lt;/code&gt; , &lt;code&gt;SparseLongArray&lt;/code&gt; , &lt;code&gt;SparseBooleanArray&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="de7e873adefe34042898a176329d5c99d8e104e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;, &lt;code&gt;CharSequence&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; , &lt;code&gt;CharSequence&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="9f3ab6f2a5391e4f6fbacdbbf89a645c8aae4a52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T!&lt;/code&gt; means &quot;&lt;code&gt;T&lt;/code&gt; or &lt;code&gt;T?&lt;/code&gt;&quot;,</source>
          <target state="translated">&lt;code&gt;T!&lt;/code&gt; означает &quot; &lt;code&gt;T&lt;/code&gt; или &lt;code&gt;T?&lt;/code&gt; &quot;,</target>
        </trans-unit>
        <trans-unit id="3cf8096096375298711bf3d5bd7672bccf7007fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - must not be abstract</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - не должно быть абстрактным</target>
        </trans-unit>
        <trans-unit id="3ceda7492b4a2df2d6b594eb38bce8d99c454153" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of element being iterated over. The iterator is covariant in its element type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89333a6acc4512dc1bb5c2f8148dcbbeba44e8aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of element being iterated over. The iterator is covariant on its element type.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - тип повторяемого элемента. Итератор ковариантен по типу своего элемента.</target>
        </trans-unit>
        <trans-unit id="90bc1affc7426eab6eb03e078896f2020bf965be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of element being iterated over. The mutable iterator is invariant in its element type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24235e8f8e7d583decec61268bacd79042c7e82a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of element being iterated over. The mutable iterator is invariant on its element type.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - тип повторяемого элемента. Изменяемый итератор не зависит от типа его элемента.</target>
        </trans-unit>
        <trans-unit id="ef6deafb1176f13dd8f9b7af17fd4ac7077731d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of elements in the sequence.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - тип элементов в последовательности.</target>
        </trans-unit>
        <trans-unit id="34d3cbc94d8ba0c4389498c9414e7bb834d69534" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of object which owns the delegated property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358b2ca0738b84c9f546f8ff94585a7b80efc899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the class.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - тип класса.</target>
        </trans-unit>
        <trans-unit id="adeba21387177d84808f95ced9faaea0eb9ba8b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the property value.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - тип значения свойства.</target>
        </trans-unit>
        <trans-unit id="1b72bf1b6c37f63904ee8e8c32d485b81b08a1ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the receiver which should be used to obtain the value of the property.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - тип получателя, по которому следует получить значение свойства.</target>
        </trans-unit>
        <trans-unit id="d21ab26a4d34d44456aea2dc66a8890c6f9fc80d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ThreadLocal&lt;/code&gt; has first-class support and can be used with any primitive &lt;code&gt;kotlinx.coroutines&lt;/code&gt; provides. It has one key limitation, though: when a thread-local is mutated, a new value is not propagated to the coroutine caller (because a context element cannot track all &lt;code&gt;ThreadLocal&lt;/code&gt; object accesses), and the updated value is lost on the next suspension. Use &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-context.html&quot;&gt;withContext&lt;/a&gt; to update the value of the thread-local in a coroutine, see &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/java.lang.-thread-local/as-context-element.html&quot;&gt;asContextElement&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bc299a94b2a9bf8d2106513484189925989db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ThreadLocal&lt;/code&gt; has first-class support and can be used with any primitive &lt;code&gt;kotlinx.coroutines&lt;/code&gt; provides. It has one key limitation: when thread-local is mutated, a new value is not propagated to the coroutine caller (as context element cannot track all &lt;code&gt;ThreadLocal&lt;/code&gt; object accesses) and updated value is lost on the next suspension. Use &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-context.html&quot;&gt;withContext&lt;/a&gt; to update the value of the thread-local in a coroutine, see &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/java.lang.-thread-local/as-context-element.html&quot;&gt;asContextElement&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;ThreadLocal&lt;/code&gt; имеет первоклассную поддержку и может использоваться с любыми примитивными предложениями &lt;code&gt;kotlinx.coroutines&lt;/code&gt; . У него есть одно ключевое ограничение: при изменении локального потока новое значение не распространяется на вызывающую сопрограмму (поскольку элемент контекста не может отслеживать все обращения к объекту &lt;code&gt;ThreadLocal&lt;/code&gt; ), а обновленное значение теряется при следующей приостановке. Используйте &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-context.html&quot;&gt;withContext&lt;/a&gt; для обновления значения локального потока в сопрограмме, подробнее см. &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/java.lang.-thread-local/as-context-element.html&quot;&gt;AsContextElement&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a14313b2cbf4d21fd88d9a20946932c4557b3e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unit&lt;/code&gt; return type</source>
          <target state="translated">&lt;code&gt;Unit&lt;/code&gt; тип возвращаемого</target>
        </trans-unit>
        <trans-unit id="87760cae95a8cf8da2b30d4e7701bb81c6c9e97b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unit&lt;/code&gt; return type can be omitted:</source>
          <target state="translated">&lt;code&gt;Unit&lt;/code&gt; типа возвращаемого значения могут быть опущены:</target>
        </trans-unit>
        <trans-unit id="bb7a2191409b7915b07d32c1ee150804260c31ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnsupportedCharsetException&lt;/code&gt; - If the specified named charset is not available.</source>
          <target state="translated">&lt;code&gt;UnsupportedCharsetException&lt;/code&gt; - если указанная именованная кодировка недоступна.</target>
        </trans-unit>
        <trans-unit id="a6978aac71ba280ead974f2215cba798009b29fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnsupportedOperationException&lt;/code&gt; - always</source>
          <target state="translated">&lt;code&gt;UnsupportedOperationException&lt;/code&gt; - всегда</target>
        </trans-unit>
        <trans-unit id="2200cf049ef4f25b58ae5de654972b909d3b4f89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnsupportedOperationException&lt;/code&gt; - if getting named groups isn't supported on the current platform.</source>
          <target state="translated">&lt;code&gt;UnsupportedOperationException&lt;/code&gt; - если получение именованных групп не поддерживается на текущей платформе.</target>
        </trans-unit>
        <trans-unit id="0b790d3a27826a4655d5e0b14593bf3175b30b9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the type of map values. The map is covariant in its value type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8431f34f9e06c4640181a02d1de292954e98dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the type of map values. The map is covariant on its value type.</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - тип значений карты. Карта ковариантна по своему типу значения.</target>
        </trans-unit>
        <trans-unit id="b3d0569085f17b7178c3747588b4df26b893d545" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the type of map values. The map is invariant in its value type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111ab0a3c1046dd05798958ace6f06d949937e36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the type of map values. The map is invariant on its value type.</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - тип значений карты. Карта не зависит от типа значения.</target>
        </trans-unit>
        <trans-unit id="409caa65c39fb313535217019d04907922647b6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the type of map values. The mutable map is invariant in its value type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379b8c77a36bf5ac4cd779d19f70b81bf52a9fd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the type of map values. The mutable map is invariant on its value type.</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - тип значений карты. Изменяемая карта не зависит от своего типа значения.</target>
        </trans-unit>
        <trans-unit id="fd6600b46ad7cda69890253c940d186f987ebf9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the type of the property value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab7b5f95fb1963bb91a38c8049589dbf58a29b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the type of the property, which it is an accessor of.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6dec9c1080ed4af444f298630d5e42409c839f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt; - &lt;a href=&quot;operator-overloading#indexed&quot;&gt;indexed access operator&lt;/a&gt; (translated to calls of &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt; , &lt;code&gt;]&lt;/code&gt; - &lt;a href=&quot;operator-overloading#indexed&quot;&gt;индексированный оператор доступа&lt;/a&gt; (переведен на вызовы &lt;code&gt;get&lt;/code&gt; и &lt;code&gt;set&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="dab1b55350a7167b3e29b02f9231e63d43c05670" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_.main_kand9s$ = main;&lt;/code&gt; exports the declared &lt;code&gt;main&lt;/code&gt; function. The name on the left-hand side will be used to access to the function from outside the module. The name contains a mangled word (&lt;code&gt;kand9s$&lt;/code&gt;). This happens because you can have overloaded functions in Kotlin and need a way to translate them to their corresponding JavaScript ones. To change the generated function name with a custom name, use the &lt;a href=&quot;../../../reference/js-to-kotlin-interop#jsname-annotation&quot;&gt;&lt;code&gt;@JsName&lt;/code&gt; annotation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;_.main_kand9s$ = main;&lt;/code&gt; экспортирует объявленную &lt;code&gt;main&lt;/code&gt; функцию. Имя в левой части будет использоваться для доступа к функции извне модуля. Название содержит искаженное слово ( &lt;code&gt;kand9s$&lt;/code&gt; ). Это происходит потому, что у вас могут быть перегруженные функции в Kotlin, и вам нужен способ их перевода в соответствующие им функции JavaScript. Чтобы изменить сгенерированное имя функции на собственное имя, используйте &lt;a href=&quot;../../../reference/js-to-kotlin-interop#jsname-annotation&quot;&gt;аннотацию &lt;/a&gt; &lt;code&gt;@JsName&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2938bf8c3231818418d8c2e619d988edb3d57221" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a &amp;amp;&amp;amp; b xor c&lt;/code&gt; and &lt;code&gt;a &amp;amp;&amp;amp; (b xor c)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a &amp;amp;&amp;amp; b xor c&lt;/code&gt; и &lt;code&gt;a &amp;amp;&amp;amp; (b xor c)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6258841a75c9abe1a9275620b6ccba041c25cd92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a &amp;amp;&amp;amp; b xor c&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;amp;&amp;amp; (b xor c)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6c2c9e6edda9f13105b9febfb6088a7a39eb20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a xor b in c&lt;/code&gt; and &lt;code&gt;(a xor b) in c&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a xor b in c&lt;/code&gt; и &lt;code&gt;(a xor b) in c&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19cd4946fb74f1c0d6f73d99ef3f2e2a6f67c8c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a xor b in c&lt;/code&gt; is equivalent to &lt;code&gt;(a xor b) in c&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1da4c260cf44695aedc221184aea33f75b6e4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.dec()&lt;/code&gt; + see below</source>
          <target state="translated">&lt;code&gt;a.dec()&lt;/code&gt; + см. ниже</target>
        </trans-unit>
        <trans-unit id="080f687dd7354140184789c93aa926eb6435df4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.inc()&lt;/code&gt; + see below</source>
          <target state="translated">&lt;code&gt;a.inc()&lt;/code&gt; + см. ниже</target>
        </trans-unit>
        <trans-unit id="d50689cba814c097362b3bc61de81a9d2bfcb24d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.rem(b)&lt;/code&gt;, &lt;code&gt;a.mod(b)&lt;/code&gt; (deprecated)</source>
          <target state="translated">&lt;code&gt;a.rem(b)&lt;/code&gt; , &lt;code&gt;a.mod(b)&lt;/code&gt; (устарело)</target>
        </trans-unit>
        <trans-unit id="b979ef804d009426993a8e0ee80a3bc320f1b2fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.remAssign(b)&lt;/code&gt;, &lt;code&gt;a.modAssign(b)&lt;/code&gt; (deprecated)</source>
          <target state="translated">&lt;code&gt;a.remAssign(b)&lt;/code&gt; , &lt;code&gt;a.modAssign(b)&lt;/code&gt; (устарело)</target>
        </trans-unit>
        <trans-unit id="3b6721c364cf685a59485606e2fa9f0fb03714e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abs(Int.MIN_VALUE)&lt;/code&gt; is &lt;code&gt;Int.MIN_VALUE&lt;/code&gt; due to an overflow</source>
          <target state="translated">&lt;code&gt;abs(Int.MIN_VALUE)&lt;/code&gt; равно &lt;code&gt;Int.MIN_VALUE&lt;/code&gt; из-за переполнения</target>
        </trans-unit>
        <trans-unit id="e4f571d21956a9e5880484b3a4df777c58e0df3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abs(Long.MIN_VALUE)&lt;/code&gt; is &lt;code&gt;Long.MIN_VALUE&lt;/code&gt; due to an overflow</source>
          <target state="translated">&lt;code&gt;abs(Long.MIN_VALUE)&lt;/code&gt; имеет значение &lt;code&gt;Long.MIN_VALUE&lt;/code&gt; из-за переполнения</target>
        </trans-unit>
        <trans-unit id="d6f73b3326d8ff8d18218affa113523317baa523" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abs(NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;abs(NaN)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c92a69e2d9e92f3a9e2013fbffa6aa72f34faa6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abs&lt;/code&gt; and &lt;code&gt;sign&lt;/code&gt; functions;</source>
          <target state="translated">&lt;code&gt;abs&lt;/code&gt; и &lt;code&gt;sign&lt;/code&gt; функции;</target>
        </trans-unit>
        <trans-unit id="8d790d47213c4bef0d17a02d92c650b8480fbeb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;absoluteValue&lt;/code&gt; and &lt;code&gt;sign&lt;/code&gt; extension properties;</source>
          <target state="translated">&lt;code&gt;absoluteValue&lt;/code&gt; Свойства расширения absoluteValue и &lt;code&gt;sign&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="5a51775fcd97d8a6b259eb405a056d9982a96df4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abstract&lt;/code&gt; marks a class or member as &lt;a href=&quot;classes#abstract-classes&quot;&gt;abstract&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;abstract&lt;/code&gt; отмечает класс или член как &lt;a href=&quot;classes#abstract-classes&quot;&gt;абстрактный&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f4a1881470b64e915cce85a2093278559826509" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;accumulator&lt;/code&gt;: the current value of the accumulator of the group, can be &lt;code&gt;null&lt;/code&gt; if it's the first &lt;code&gt;element&lt;/code&gt; encountered in the group;</source>
          <target state="translated">&lt;code&gt;accumulator&lt;/code&gt; : текущее значение аккумулятора группы, может быть &lt;code&gt;null&lt;/code&gt; если это первый &lt;code&gt;element&lt;/code&gt; встречающийся в группе;</target>
        </trans-unit>
        <trans-unit id="774b1ba51950ed4f5bdbcd1d024e8100fffcafa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;acosh(+Inf)&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;acosh(+Inf)&lt;/code&gt; равно &lt;code&gt;+Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d5db56c8c021ee6686d62d616272ac8a45fc1d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;acosh(NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;acosh(NaN)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f921720eb184efbcda89571ed03ed2238249e1d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;acosh(x)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; when &lt;code&gt;x &amp;lt; 1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;acosh(x)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt; , когда &lt;code&gt;x &amp;lt; 1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7b44717d0d3a794d91731e9ef95c85a1a268783b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action&lt;/code&gt; -</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="54587572725654eddf593b8910199b6e93d8822b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action&lt;/code&gt; - function that takes the index of a character and the character itself and performs the action on the character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0408f27534abeef55012d9f68f72dacb76ee31d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action&lt;/code&gt; - function that takes the index of a character and the character itself and performs the desired action on the character.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; - функция, которая принимает индекс персонажа и самого персонажа и выполняет желаемое действие с персонажем.</target>
        </trans-unit>
        <trans-unit id="cd3334be958d0c558c82af74c7081a528c27683f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action&lt;/code&gt; - function that takes the index of an element and the element itself and performs the action on the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d95c50dc112520edb2f74557237e22334e2871" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action&lt;/code&gt; - function that takes the index of an element and the element itself and performs the desired action on the element.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; - функция, которая принимает индекс элемента и самого элемента и выполняет желаемое действие с элементом.</target>
        </trans-unit>
        <trans-unit id="d8c2004c4208776b31f083435b3e3af913530ea3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action&lt;/code&gt; - function to process file blocks.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; - функция для обработки файловых блоков.</target>
        </trans-unit>
        <trans-unit id="3e221e90860d400813c42caf5bcb95e5867d3b7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action&lt;/code&gt; - function to process file lines.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; - функция для обработки строк файла.</target>
        </trans-unit>
        <trans-unit id="47f2019130408a5e1becd5e884ff87db552b9295" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;actual&lt;/code&gt; denotes a platform-specific implementation in &lt;a href=&quot;multiplatform&quot;&gt;multiplatform projects&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;actual&lt;/code&gt; означает реализацию для конкретной платформы в &lt;a href=&quot;multiplatform&quot;&gt;многоплатформенных проектах.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51a6f2afaaba5941a9282871ba393f1dd129f2c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;align&lt;/code&gt; - the alignments in bytes that is enough for this data type. It may be greater than actually required for simplicity.</source>
          <target state="translated">&lt;code&gt;align&lt;/code&gt; - выравнивания в байтах, которых достаточно для этого типа данных. Это может быть больше, чем требуется для простоты.</target>
        </trans-unit>
        <trans-unit id="dfa6fe7107284c6c7be5cc29a2197bdb71add070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowedTargets&lt;/code&gt; - list of allowed annotation targets</source>
          <target state="translated">&lt;code&gt;allowedTargets&lt;/code&gt; - список разрешенных целей аннотации</target>
        </trans-unit>
        <trans-unit id="7a7010e9c15edbfb827924928f4f6fdcddfa92b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;also&lt;/code&gt; is good for performing some actions that take the context object as an argument. Use &lt;code&gt;also&lt;/code&gt; for actions that need a reference rather to the object than to its properties and functions, or when you don't want to shadow &lt;code&gt;this&lt;/code&gt; reference from an outer scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52311a1dbc457fe419533074173d7f3a10e2f784" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;also&lt;/code&gt; is good for performing some actions that take the context object as an argument. Use &lt;code&gt;also&lt;/code&gt; for additional actions that don't alter the object, such as logging or printing debug information. Usually, you can remove the calls of &lt;code&gt;also&lt;/code&gt; from the call chain without breaking the program logic.</source>
          <target state="translated">&lt;code&gt;also&lt;/code&gt; хорош для выполнения некоторых действий, которые принимают объект контекста в качестве аргумента. &lt;code&gt;also&lt;/code&gt; используется для дополнительных действий, не изменяющих объект, таких как ведение журнала или печать отладочной информации. Обычно вы можете удалить вызовы &lt;code&gt;also&lt;/code&gt; из цепочки вызовов, не нарушая логики программы.</target>
        </trans-unit>
        <trans-unit id="4e8bca45562836b70b853113a3c6722487910d25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;also&lt;/code&gt; is like &lt;code&gt;apply&lt;/code&gt;: it takes the receiver, does some action on it, and returns that receiver. The difference is that in the block inside &lt;code&gt;apply&lt;/code&gt; the receiver is available as &lt;code&gt;this&lt;/code&gt;, while in the block inside &lt;code&gt;also&lt;/code&gt; it's available as &lt;code&gt;it&lt;/code&gt; (and you can give it another name if you want). This comes handy when you do not want to shadow &lt;code&gt;this&lt;/code&gt; from the outer scope:</source>
          <target state="translated">&lt;code&gt;also&lt;/code&gt; похоже на &lt;code&gt;apply&lt;/code&gt; : он берет получателя, выполняет с ним какое-то действие и возвращает этот получатель. Разница заключается в том, что в блоке внутри &lt;code&gt;apply&lt;/code&gt; приемник доступен как &lt;code&gt;this&lt;/code&gt; , в то время как в блоке внутри &lt;code&gt;also&lt;/code&gt; он доступен , как &lt;code&gt;it&lt;/code&gt; (и вы можете дать ему другое имя , если вы хотите). Это удобно, если вы не хотите скрывать &lt;code&gt;this&lt;/code&gt; из внешней области:</target>
        </trans-unit>
        <trans-unit id="9188748f5c49698cee42f4d26a7fb79b5cdad9f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and(bits)&lt;/code&gt; &amp;ndash; bitwise &lt;strong&gt;and&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5245a53fb0acc9972304aa6253d1e2631ed1a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and(bits)&lt;/code&gt; &amp;ndash; bitwise and</source>
          <target state="translated">&lt;code&gt;and(bits)&lt;/code&gt; - побитовые и</target>
        </trans-unit>
        <trans-unit id="b13cabf51da1f637e57e52871469cd94c9156e12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;android&lt;/code&gt; for Android applications and libraries. Note that one of the Android Gradle plugins should be applied before the target is created;</source>
          <target state="translated">&lt;code&gt;android&lt;/code&gt; для приложений и библиотек Android. Обратите внимание, что один из подключаемых модулей Android Gradle должен быть применен до создания цели;</target>
        </trans-unit>
        <trans-unit id="038ec2918936094892413e017f915a556caf6ab1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;androidNativeArm32&lt;/code&gt; and &lt;code&gt;androidNativeArm64&lt;/code&gt; for Android NDK;</source>
          <target state="translated">&lt;code&gt;androidNativeArm32&lt;/code&gt; и &lt;code&gt;androidNativeArm64&lt;/code&gt; для Android NDK;</target>
        </trans-unit>
        <trans-unit id="04bf366322def55df375c23a3f100495c188e5de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;annotation&lt;/code&gt; declares an &lt;a href=&quot;annotations&quot;&gt;annotation class&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;annotation&lt;/code&gt; объявляет &lt;a href=&quot;annotations&quot;&gt;класс аннотации&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93d4ce0cb1d53da440cdece773fa03d40d245a19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any()&lt;/code&gt; and &lt;code&gt;none()&lt;/code&gt; can also be used without a predicate: in this case they just check the collection emptiness. &lt;code&gt;any()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if there are elements and &lt;code&gt;false&lt;/code&gt; if there aren't; &lt;code&gt;none()&lt;/code&gt; does the opposite.</source>
          <target state="translated">&lt;code&gt;any()&lt;/code&gt; и &lt;code&gt;none()&lt;/code&gt; также можно использовать без предиката: в этом случае они просто проверяют пустоту коллекции. &lt;code&gt;any()&lt;/code&gt; возвращает &lt;code&gt;true&lt;/code&gt; если элементы есть, и &lt;code&gt;false&lt;/code&gt; если их нет; &lt;code&gt;none()&lt;/code&gt; делает наоборот.</target>
        </trans-unit>
        <trans-unit id="b9d694e3bc0733f05e779aaeea9856071fa3ca56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apclasspath&lt;/code&gt; (&lt;em&gt;repeatable&lt;/em&gt;): A path to the annotation processor JAR. Pass as many &lt;code&gt;apclasspath&lt;/code&gt; options as many JARs you have.</source>
          <target state="translated">&lt;code&gt;apclasspath&lt;/code&gt; ( &lt;em&gt;повторяемый&lt;/em&gt; ): путь к JAR процессора аннотаций. Передайте столько параметров &lt;code&gt;apclasspath&lt;/code&gt; , сколько у вас есть JAR.</target>
        </trans-unit>
        <trans-unit id="9d11150ba0028d8578d66f0a5ad0e5c3373e374d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;api&lt;/code&gt; dependencies are used both during compilation and at runtime and are exported to library consumers. If any types from a dependency are used in the public API of the current module, then it should be an &lt;code&gt;api&lt;/code&gt; dependency;</source>
          <target state="translated">&lt;code&gt;api&lt;/code&gt; зависимости api используются как во время компиляции, так и во время выполнения и экспортируются потребителям библиотеки. Если какие-либо типы из зависимости используются в общедоступном API текущего модуля, то это должна быть зависимость &lt;code&gt;api&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="4f83d652f67f2cd1a48275f845b72ebb413c9dba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apiVersion&lt;/code&gt;, bugfix language features, and &lt;code&gt;progressiveMode&lt;/code&gt; can be set arbitrarily;</source>
          <target state="translated">&lt;code&gt;apiVersion&lt;/code&gt; , языковые функции исправления ошибок и &lt;code&gt;progressiveMode&lt;/code&gt; режим можно установить произвольно;</target>
        </trans-unit>
        <trans-unit id="67b6d2b01f496fca6e8f081ce909b05d86518dd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apoptions&lt;/code&gt; and &lt;code&gt;javacArguments&lt;/code&gt; CLI options accept an encoded map of options.</source>
          <target state="translated">&lt;code&gt;apoptions&lt;/code&gt; &lt;code&gt;javacArguments&lt;/code&gt; командной строки apoptions и javacArguments принимают закодированную карту параметров.</target>
        </trans-unit>
        <trans-unit id="c7d5cc90717fed53d5c9efeee5f36e4940c7a99f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apoptions&lt;/code&gt;: A base64-encoded list of the annotation processor options. See &lt;a href=&quot;#apjavac-options-encoding&quot;&gt;AP/javac options encoding&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;apoptions&lt;/code&gt; : список опций процессора аннотаций в кодировке base64. Для получения дополнительной информации см. &lt;a href=&quot;#apjavac-options-encoding&quot;&gt;Кодирование параметров AP / javac&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a1e50af0fb9358113b315b37a3e7f2d73f7d5d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apply()&lt;/code&gt; and &lt;code&gt;also()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;apply()&lt;/code&gt; а &lt;code&gt;also()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="febdf65c78a019c17176b4647592cf5a2f1be46f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apply&lt;/code&gt; and &lt;code&gt;also&lt;/code&gt; return the context object.</source>
          <target state="translated">&lt;code&gt;apply&lt;/code&gt; а &lt;code&gt;also&lt;/code&gt; вернуть объект контекста.</target>
        </trans-unit>
        <trans-unit id="205eb05f241ebd57aeda95e3f4d763f89bfe6933" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apt&lt;/code&gt; &amp;ndash; only run annotation processing;</source>
          <target state="translated">&lt;code&gt;apt&lt;/code&gt; - запускать только обработку аннотаций;</target>
        </trans-unit>
        <trans-unit id="91db5fd119d5b9f134c787cee64bfab055810648" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aptMode&lt;/code&gt; (&lt;em&gt;required&lt;/em&gt;)</source>
          <target state="translated">&lt;code&gt;aptMode&lt;/code&gt; ( &lt;em&gt;обязательно&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="20f345cd6f014ee5a1f07621a465d15e04435717" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; - byte array to append to this file.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; - байтовый массив, который нужно добавить в этот файл.</target>
        </trans-unit>
        <trans-unit id="d0a2b8ec845839bcc0d370047bda68efa09eb387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; - byte array to write into this file.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; - байтовый массив для записи в этот файл.</target>
        </trans-unit>
        <trans-unit id="556618b6bb631c5e0ecd60c1c3d6ab611dbb27fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; cast to external interface always succeeds (and produces a warning in compile-time).</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; приведение к внешнему интерфейсу всегда успешно (и выдает предупреждение во время компиляции).</target>
        </trans-unit>
        <trans-unit id="1877b3b4b6cce1320197af6258319a35689e1c4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; casts to external interfaces always succeed. Casting to external interfaces produces the &quot;Unchecked cast to external interface&quot; compile time warning. The warning can be suppressed with the &lt;code&gt;@Suppress(&quot;UNCHECKED_CAST_TO_EXTERNAL_INTERFACE&quot;)&lt;/code&gt; annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bbdbe5a925237fd260cdb46efdfa8bb74ac65f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as?&lt;/code&gt; is used for &lt;a href=&quot;typecasts#safe-nullable-cast-operator&quot;&gt;safe type casts&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;as?&lt;/code&gt; используется для &lt;a href=&quot;typecasts#safe-nullable-cast-operator&quot;&gt;отливок безопасного типа&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1164df182e47b87cb10d46970da6d63873d6e9c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asinh(+Inf)&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;asinh(+Inf)&lt;/code&gt; равно &lt;code&gt;+Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90e80dea00f131f5ad9e71eca466c90046675758" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asinh(-Inf)&lt;/code&gt; is &lt;code&gt;-Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;asinh(-Inf)&lt;/code&gt; равно &lt;code&gt;-Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1be6f2d460805a5bbcf95f58592cb5856028863" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asinh(NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;asinh(NaN)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30c68b41874f12446bf62faf84cab3a8ccc514a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atan(NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;atan(NaN)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9de9ef21be85aadc2a770e8089439ad97f4ad345" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atan2(+Inf, x)&lt;/code&gt; is &lt;code&gt;PI/2&lt;/code&gt; for finite &lt;code&gt;x&lt;/code&gt;y</source>
          <target state="translated">&lt;code&gt;atan2(+Inf, x)&lt;/code&gt; есть &lt;code&gt;PI/2&lt;/code&gt; для конечных &lt;code&gt;x&lt;/code&gt; y</target>
        </trans-unit>
        <trans-unit id="b7f927380a6975b531a7202692ee3259ee4ffd73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atan2(-0.0, x)&lt;/code&gt; is &lt;code&gt;-0.0&lt;/code&gt; for 'x &amp;gt; 0&lt;code&gt; and &lt;/code&gt;-PI&lt;code&gt; for &lt;/code&gt;x &amp;lt; 0`</source>
          <target state="translated">&lt;code&gt;atan2(-0.0, x)&lt;/code&gt; равно &lt;code&gt;-0.0&lt;/code&gt; для 'x&amp;gt; 0 &lt;code&gt; and &lt;/code&gt; -PI &lt;code&gt; for &lt;/code&gt; x &amp;lt;0`</target>
        </trans-unit>
        <trans-unit id="02adafc631d4a79f8b4ffc24cdf8c38d7df5d159" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atan2(-Inf, x)&lt;/code&gt; is &lt;code&gt;-PI/2&lt;/code&gt; for finite &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;atan2(-Inf, x)&lt;/code&gt; равно &lt;code&gt;-PI/2&lt;/code&gt; для конечного &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="933a35ea267792203780d06e66a77bfbbcc1a98f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atan2(0.0, 0.0)&lt;/code&gt; is &lt;code&gt;0.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;atan2(0.0, 0.0)&lt;/code&gt; равно &lt;code&gt;0.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0f99b4cbea517637453689714546f9eb3858151" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atan2(0.0, x)&lt;/code&gt; is &lt;code&gt;0.0&lt;/code&gt; for &lt;code&gt;x &amp;gt; 0&lt;/code&gt; and &lt;code&gt;PI&lt;/code&gt; for &lt;code&gt;x &amp;lt; 0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;atan2(0.0, x)&lt;/code&gt; равно &lt;code&gt;0.0&lt;/code&gt; для &lt;code&gt;x &amp;gt; 0&lt;/code&gt; и &lt;code&gt;PI&lt;/code&gt; для &lt;code&gt;x &amp;lt; 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9624e0f4631e2cdf96f652ff74045817cbc13616" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atan2(NaN, x)&lt;/code&gt; and &lt;code&gt;atan2(y, NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;atan2(NaN, x)&lt;/code&gt; и &lt;code&gt;atan2(y, NaN)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80a5ced354082e6bfea0c7bac1878e55f2674573" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atan2(y, +Inf)&lt;/code&gt; is &lt;code&gt;0.0&lt;/code&gt; for &lt;code&gt;0 &amp;lt; y &amp;lt; +Inf&lt;/code&gt; and &lt;code&gt;-0.0&lt;/code&gt; for '-Inf &amp;lt; y &amp;lt; 0`</source>
          <target state="translated">&lt;code&gt;atan2(y, +Inf)&lt;/code&gt; равно &lt;code&gt;0.0&lt;/code&gt; для &lt;code&gt;0 &amp;lt; y &amp;lt; +Inf&lt;/code&gt; и &lt;code&gt;-0.0&lt;/code&gt; для '-Inf &amp;lt;y &amp;lt;0`</target>
        </trans-unit>
        <trans-unit id="ffa7eb6759537f6517af01aca1e8c777af4bfce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atan2(y, -Inf)&lt;/code&gt; is &lt;code&gt;PI&lt;/code&gt; for &lt;code&gt;0 &amp;lt; y &amp;lt; +Inf&lt;/code&gt; and &lt;code&gt;-PI&lt;/code&gt; for &lt;code&gt;-Inf &amp;lt; y &amp;lt; 0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;atan2(y, -Inf)&lt;/code&gt; - это &lt;code&gt;PI&lt;/code&gt; для &lt;code&gt;0 &amp;lt; y &amp;lt; +Inf&lt;/code&gt; и &lt;code&gt;-PI&lt;/code&gt; для &lt;code&gt;-Inf &amp;lt; y &amp;lt; 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5fa139d48697a9b00b0fe4e73c8e52d5e8dd4aa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atan2(y, 0.0)&lt;/code&gt; is &lt;code&gt;PI/2&lt;/code&gt; for &lt;code&gt;y &amp;gt; 0&lt;/code&gt; and &lt;code&gt;-PI/2&lt;/code&gt; for &lt;code&gt;y &amp;lt; 0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;atan2(y, 0.0)&lt;/code&gt; - это &lt;code&gt;PI/2&lt;/code&gt; для &lt;code&gt;y &amp;gt; 0&lt;/code&gt; и &lt;code&gt;-PI/2&lt;/code&gt; для &lt;code&gt;y &amp;lt; 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52ab1dd6dc071bbefcffb64f1ac94183dce00e74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await()&lt;/code&gt; can not be called outside a coroutine, because it needs to suspend until the computation finishes, and only coroutines can suspend in a non-blocking way. So, let's put this inside a coroutine:</source>
          <target state="translated">&lt;code&gt;await()&lt;/code&gt; не может быть вызван вне сопрограммы, потому что она должна приостановиться до завершения вычислений, и только сопрограммы могут приостановиться неблокирующим образом. Итак, поместим это в сопрограмму:</target>
        </trans-unit>
        <trans-unit id="a0ba2fda5d0d1a74a71c810ea7a19994138b6693" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b.pow(0.0)&lt;/code&gt; is &lt;code&gt;1.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;b.pow(0.0)&lt;/code&gt; равно &lt;code&gt;1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="27c6ff5a0282407e7a6135901ea5802ca4573f60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b.pow(Inf)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; for &lt;code&gt;abs(b) == 1.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;b.pow(Inf)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt; для &lt;code&gt;abs(b) == 1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2dfd2fd5db81357158af9b36a6747197dcf9c405" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b.pow(NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;b.pow(NaN)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="00544c28f54f52c83fa4a53474d39bbe2f7efbf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b.pow(x)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; for &lt;code&gt;b &amp;lt; 0&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt; is finite and not an integer</source>
          <target state="translated">&lt;code&gt;b.pow(x)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt; для &lt;code&gt;b &amp;lt; 0&lt;/code&gt; и &lt;code&gt;x&lt;/code&gt; конечно, а не целое число</target>
        </trans-unit>
        <trans-unit id="17ff8eced44bfa73fd30752a8c9d7527e3290c65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bitCount&lt;/code&gt; - number of bits to generate, must be in range 0..32, otherwise the behavior is unspecified.</source>
          <target state="translated">&lt;code&gt;bitCount&lt;/code&gt; - количество генерируемых битов, должно быть в диапазоне 0..32, иначе поведение не определено.</target>
        </trans-unit>
        <trans-unit id="739628ca818f65cfcef1c413bdfa7350066baf16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; - a function to process this &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/io/Closeable.html&quot;&gt;Closeable&lt;/a&gt; resource.</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; - функция для обработки этого &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/io/Closeable.html&quot;&gt;Closeable&lt;/a&gt; ресурса.</target>
        </trans-unit>
        <trans-unit id="1c998375400be3cd38d758cc91d9ca8fb39246f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; - a function to process this &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/lang/AutoCloseable.html&quot;&gt;AutoCloseable&lt;/a&gt; resource.</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; - функция для обработки этого &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/lang/AutoCloseable.html&quot;&gt;автоматически закрываемого&lt;/a&gt; ресурса.</target>
        </trans-unit>
        <trans-unit id="d7fc1227a691be2f44a94cd36503b6a3dbdb77e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; - a function to process this &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/io/Closeable.html&quot;&gt;Closeable&lt;/a&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ff83aaa0e9089fe5bf2c79470409f51b298172" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; - a function to process this &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/AutoCloseable.html&quot;&gt;AutoCloseable&lt;/a&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70cf7e04619996caf25c9407a57e2abc2351bc6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blockSize&lt;/code&gt; - size of a block, replaced by 512 if it's less, 4096 by default.</source>
          <target state="translated">&lt;code&gt;blockSize&lt;/code&gt; - размер блока, заменяется на 512, если меньше, по умолчанию 4096.</target>
        </trans-unit>
        <trans-unit id="14722d41979e194375eda1c20fdb0163c98464ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blocker&lt;/code&gt; - an object preventing freezing, usually one marked with &lt;a href=&quot;../ensure-never-frozen&quot;&gt;ensureNeverFrozen&lt;/a&gt; earlier.</source>
          <target state="translated">&lt;code&gt;blocker&lt;/code&gt; - объект, предотвращающий замораживание, обычно помеченный ранее с помощью &lt;a href=&quot;../ensure-never-frozen&quot;&gt;sureNeverFrozen&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="94184e170db4feb64b5028c269f50d3a53d15a23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bool&lt;/code&gt; or &lt;code&gt;_Bool&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;bool&lt;/code&gt; или &lt;code&gt;_Bool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9633dccf8abc6a60afe5b6e236c9aecac4164f56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; are not yet available in inlined lambdas, but we are planning to support them too.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; и &lt;code&gt;continue&lt;/code&gt; пока недоступны во встроенных лямбдах, но мы планируем их поддерживать.</target>
        </trans-unit>
        <trans-unit id="f91505098156d2ada3d483c255fef86aaa5e3451" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt;&lt;a href=&quot;http://kotlinlang.org/docs/reference/returns.html&quot;&gt;terminates the execution of a loop&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; &lt;a href=&quot;http://kotlinlang.org/docs/reference/returns.html&quot;&gt;завершает выполнение цикла&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab1bb1117c7a61277c0f4b7d9a7222a14640ebdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufferSize&lt;/code&gt; - necessary size of the buffer.</source>
          <target state="translated">&lt;code&gt;bufferSize&lt;/code&gt; - необходимый размер буфера.</target>
        </trans-unit>
        <trans-unit id="aa9ab1629a7b2c7a7a7a01831d60da27d5428cdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufferSize&lt;/code&gt; - size of character buffer to use in process.</source>
          <target state="translated">&lt;code&gt;bufferSize&lt;/code&gt; - размер символьного буфера для использования в процессе.</target>
        </trans-unit>
        <trans-unit id="abc2ce6c3127d061bd90ae7904761170547f2f20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufferSize&lt;/code&gt; - the buffer size to use when copying.</source>
          <target state="translated">&lt;code&gt;bufferSize&lt;/code&gt; - размер буфера, который будет использоваться при копировании.</target>
        </trans-unit>
        <trans-unit id="7c2b3717fbe813caa646b27d3fe4c160aaf5a911" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bufferSize&lt;/code&gt; - the buffer size to use.</source>
          <target state="translated">&lt;code&gt;bufferSize&lt;/code&gt; - размер буфера для использования.</target>
        </trans-unit>
        <trans-unit id="9f45298c4b1dd2f022a5093bb5fc0eeda12a42e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;builder&lt;/code&gt; - the lambda where the contract of a function is described with the help of the &lt;a href=&quot;-contract-builder/index&quot;&gt;ContractBuilder&lt;/a&gt; members.</source>
          <target state="translated">&lt;code&gt;builder&lt;/code&gt; - лямбда, в которой контракт функции описывается с помощью членов &lt;a href=&quot;-contract-builder/index&quot;&gt;ContractBuilder&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2ae0fe5c9c60bc873377eac0464e9e6f82b5ad2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bytes&lt;/code&gt; - the source array for the conversion.</source>
          <target state="translated">&lt;code&gt;bytes&lt;/code&gt; - исходный массив для преобразования.</target>
        </trans-unit>
        <trans-unit id="13cfb63fd2d827661dd2a98963221c13b16fdaff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cValuesOf(vararg elements: ${type})&lt;/code&gt;, where &lt;code&gt;type&lt;/code&gt; is a primitive or pointer</source>
          <target state="translated">&lt;code&gt;cValuesOf(vararg elements: ${type})&lt;/code&gt; , где &lt;code&gt;type&lt;/code&gt; - примитив или указатель</target>
        </trans-unit>
        <trans-unit id="4c4474afdd68cc054eab3058c14c453abff5f5a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;catch&lt;/code&gt; begins a block that &lt;a href=&quot;exceptions&quot;&gt;handles a specific exception type&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;catch&lt;/code&gt; начинает блок, который &lt;a href=&quot;exceptions&quot;&gt;обрабатывает определенный тип исключения&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aabca25fd4beb65956eebd1b5a1877d122122bc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cause&lt;/code&gt; - the cause of this throwable.</source>
          <target state="translated">&lt;code&gt;cause&lt;/code&gt; - причина этого метания.</target>
        </trans-unit>
        <trans-unit id="5360b9cfaef6bfa2aed9f6f9ffae22c0082b34e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cause&lt;/code&gt; - the original exception thrown by the JVM.</source>
          <target state="translated">&lt;code&gt;cause&lt;/code&gt; - исходное исключение, созданное JVM.</target>
        </trans-unit>
        <trans-unit id="bbcfa0be6372335114e329859087a83c7f2917ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ceil(x)&lt;/code&gt; is &lt;code&gt;x&lt;/code&gt; where &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; or &lt;code&gt;+Inf&lt;/code&gt; or &lt;code&gt;-Inf&lt;/code&gt; or already a mathematical integer.</source>
          <target state="translated">&lt;code&gt;ceil(x)&lt;/code&gt; является &lt;code&gt;x&lt;/code&gt; , где &lt;code&gt;x&lt;/code&gt; является &lt;code&gt;NaN&lt;/code&gt; или &lt;code&gt;+Inf&lt;/code&gt; или &lt;code&gt;-Inf&lt;/code&gt; или уже математическое целое число.</target>
        </trans-unit>
        <trans-unit id="32ab13a5569c5fa2b5a295ce6108519364914f69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ceil&lt;/code&gt;, &lt;code&gt;floor&lt;/code&gt;, &lt;code&gt;truncate&lt;/code&gt;, &lt;code&gt;round&lt;/code&gt; (half to even) functions;</source>
          <target state="translated">&lt;code&gt;ceil&lt;/code&gt; , &lt;code&gt;floor&lt;/code&gt; , &lt;code&gt;truncate&lt;/code&gt; , &lt;code&gt;round&lt;/code&gt; (от половины до четности);</target>
        </trans-unit>
        <trans-unit id="78cb690eb5e50f4739aa3a2f2841a70acab4ee7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;charset&lt;/code&gt; - a character set to use.</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; - набор символов для использования.</target>
        </trans-unit>
        <trans-unit id="422c547faed284d9efe2fee1b9a8ad1350de11e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;charset&lt;/code&gt; - character set to use.</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; - набор символов для использования.</target>
        </trans-unit>
        <trans-unit id="ba3caae9558ca0c0e3678784aeef7eeba3769555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;charset&lt;/code&gt; - character set to use. By default uses UTF-8 charset.</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; - набор символов для использования. По умолчанию используется кодировка UTF-8.</target>
        </trans-unit>
        <trans-unit id="bf6738617d573014b0ebeb4f45bcb7f12f83d2a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;charset&lt;/code&gt; - the character set to use.</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; - набор символов для использования.</target>
        </trans-unit>
        <trans-unit id="e0fe22e12fdf4f3fb7464239f0ac15dd5a7f277e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt; declares a &lt;a href=&quot;classes&quot;&gt;class&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; объявляет &lt;a href=&quot;classes&quot;&gt;класс&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4cf4aac219a0af35c4e73f2c22b07a799e1c0ab6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;classes&lt;/code&gt; (&lt;em&gt;required&lt;/em&gt;): An output path for the generated class files and resources.</source>
          <target state="translated">&lt;code&gt;classes&lt;/code&gt; ( &lt;em&gt;обязательно&lt;/em&gt; ): выходной путь для созданных файлов классов и ресурсов.</target>
        </trans-unit>
        <trans-unit id="2925a911ce01fcfb9f8e63f1adc61a7b732aab9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;companion&lt;/code&gt; declares a &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;companion object&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;companion&lt;/code&gt; объявляет &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;сопутствующий объект&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b56c0f34653084aed67c1be82c540de832f34b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;companion&lt;/code&gt; member &amp;lt;-</source>
          <target state="translated">&lt;code&gt;companion&lt;/code&gt; член- компаньон &amp;lt;-</target>
        </trans-unit>
        <trans-unit id="597e467a1a5a537ce52e5f60b6851157952c48ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;comparator&lt;/code&gt; - the comparator according to which this array is sorted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="172c90eea3887eb354d1af7148f637668c561581" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;comparison&lt;/code&gt; - function that compares an element of the list with the element being searched.</source>
          <target state="translated">&lt;code&gt;comparison&lt;/code&gt; - функция, сравнивающая элемент списка с искомым элементом.</target>
        </trans-unit>
        <trans-unit id="1c585af9d67c7e100ca6361f83071e86f886b886" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;comparison&lt;/code&gt; - function that returns zero when called on the list element being searched. On the elements coming before the target element, the function must return negative values; on the elements coming after the target element, the function must return positive values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11752f64a42df40080f7f71f4043dc23dadc5f2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compileOnly&lt;/code&gt; dependencies are only used for compilation of the current module and are available neither at runtime nor during compilation of other modules. These dependencies should be used for APIs which have a third-party implementation available at runtime.</source>
          <target state="translated">&lt;code&gt;compileOnly&lt;/code&gt; Зависимости compileOnly используются только для компиляции текущего модуля и недоступны ни во время выполнения, ни во время компиляции других модулей. Эти зависимости следует использовать для API-интерфейсов, сторонняя реализация которых доступна во время выполнения.</target>
        </trans-unit>
        <trans-unit id="c897c12a88298e9c1c2a8f9f7b227abca4b390fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;component1()&lt;/code&gt;, &lt;code&gt;component2()&lt;/code&gt;, &amp;hellip;, for all properties (see &lt;a href=&quot;data-classes&quot;&gt;Data classes&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;component1()&lt;/code&gt; , &lt;code&gt;component2()&lt;/code&gt; ,&amp;hellip;, для всех свойств (см. &lt;a href=&quot;data-classes&quot;&gt;Классы данных&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="cb6044231f5d041cdec994dcce1b19ecd8b9bd81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; marks a property as a &lt;a href=&quot;properties#compile-time-constants&quot;&gt;compile-time constant&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; отмечает свойство как &lt;a href=&quot;properties#compile-time-constants&quot;&gt;константу времени компиляции&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b610b58a27251683c941f01ce149c675314ed54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; modifier.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; модификатор const .</target>
        </trans-unit>
        <trans-unit id="b0325f6ca118bb42d3d65d441c01949929dae421" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;constructor&lt;/code&gt; declares a &lt;a href=&quot;classes#constructors&quot;&gt;primary or secondary constructor&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;constructor&lt;/code&gt; объявляет &lt;a href=&quot;classes#constructors&quot;&gt;первичный или вторичный конструктор&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bac1b9b4b20f38fd1263609e5d31f8a80c5f264e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;constructor&lt;/code&gt;/&lt;code&gt;create&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;constructor&lt;/code&gt;/&lt;code&gt;create&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="28c9b864f9e5a00e06a4fbc6049faf1ffee419c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;contextClassLoader&lt;/code&gt; - the class loader to use for loading classes and resources in this thread.</source>
          <target state="translated">&lt;code&gt;contextClassLoader&lt;/code&gt; - загрузчик классов, используемый для загрузки классов и ресурсов в этом потоке.</target>
        </trans-unit>
        <trans-unit id="04f09d918efae549d19678c97f3f73af9ddfca7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continuation&lt;/code&gt; - Continuation instance returned by this interceptor's &lt;a href=&quot;intercept-continuation&quot;&gt;interceptContinuation&lt;/a&gt; invocation.</source>
          <target state="translated">&lt;code&gt;continuation&lt;/code&gt; - экземпляр продолжения, возвращаемый вызовом interceptContinuation этого &lt;a href=&quot;intercept-continuation&quot;&gt;перехватчика&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="450ed48c9e8fd5885083c250be71cd36844c7a36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continue&lt;/code&gt; and &lt;code&gt;break&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;continue&lt;/code&gt; и &lt;code&gt;break&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1e242b045cb0cb988701afa0a688e6fe268be07e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continue&lt;/code&gt;&lt;a href=&quot;returns&quot;&gt;proceeds to the next step of the nearest enclosing loop&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;continue&lt;/code&gt; &lt;a href=&quot;returns&quot;&gt;переходит к следующему шагу ближайшего охватывающего цикла&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ff010eceb748c23c03ec3e5d329e233a80a6e73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;copy()&lt;/code&gt; function (see below).</source>
          <target state="translated">&lt;code&gt;copy()&lt;/code&gt; (см. ниже).</target>
        </trans-unit>
        <trans-unit id="741e99e0ed5ff0483fc0115e696a5509a77887b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;correctErrorTypes&lt;/code&gt;: See &lt;a href=&quot;#using-in-gradle&quot;&gt;below&lt;/a&gt;. Disabled by default.</source>
          <target state="translated">&lt;code&gt;correctErrorTypes&lt;/code&gt; : см. &lt;a href=&quot;#using-in-gradle&quot;&gt;ниже&lt;/a&gt; . По умолчанию отключено.</target>
        </trans-unit>
        <trans-unit id="6d66a8e1c0c5b35e698df851c499c0a8a7761609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cos(NaN|+Inf|-Inf)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cos(NaN|+Inf|-Inf)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cdebabbe9b5c1e3c5110ccf8a40ef9a073e7419d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cosh(+Inf|-Inf)&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cosh(+Inf|-Inf)&lt;/code&gt; равно &lt;code&gt;+Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9aedac969a8a32348e17abb82e65df6fbab4aa46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cosh(NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cosh(NaN)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4bf8fbf144ead124be41d90c1f22b5a845210bd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crossinline&lt;/code&gt; forbids &lt;a href=&quot;inline-functions#non-local-returns&quot;&gt;non-local returns in a lambda passed to an inline function&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;crossinline&lt;/code&gt; запрещает &lt;a href=&quot;inline-functions#non-local-returns&quot;&gt;нелокальный возврат в лямбда-выражении, передаваемом во встроенную функцию&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2904c790122e17e76c14381d6d64535f724daf68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;daemon&lt;/code&gt; - if &lt;code&gt;true&lt;/code&gt;, the thread is started as a daemon thread (the VM will exit when only daemon threads are running).</source>
          <target state="translated">&lt;code&gt;daemon&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , поток запускается как поток демона (виртуальная машина выйдет, когда запущены только потоки демона).</target>
        </trans-unit>
        <trans-unit id="671cb041f74f599d299380ce4a5f6331ea77f8cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; instructs the compiler to &lt;a href=&quot;data-classes&quot;&gt;generate canonical members for a class&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; указывает компилятору &lt;a href=&quot;data-classes&quot;&gt;генерировать канонические члены для класса&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59d5cefc7df48ac1b20a7bae2ebc3e06f31aaaff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delegate&lt;/code&gt; (the field storing the delegate instance for a delegated property).</source>
          <target state="translated">&lt;code&gt;delegate&lt;/code&gt; (поле, в котором хранится экземпляр делегата для делегированного свойства).</target>
        </trans-unit>
        <trans-unit id="2d992a7ce0c3343edfc1538ce2f74d28012453db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delegate&lt;/code&gt; is used as an &lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;annotation use-site target&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;delegate&lt;/code&gt; используется в качестве &lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;цели сайта использования аннотации&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="01ee2b1daa651c28fe7f6222bb96dde27f4c248d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delimiters&lt;/code&gt; - One or more characters to be used as delimiters.</source>
          <target state="translated">&lt;code&gt;delimiters&lt;/code&gt; - один или несколько символов, которые будут использоваться в качестве разделителей.</target>
        </trans-unit>
        <trans-unit id="9818e8925bb3382062e53280234bec9a48f6c011" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delimiters&lt;/code&gt; - One or more strings to be used as delimiters.</source>
          <target state="translated">&lt;code&gt;delimiters&lt;/code&gt; - одна или несколько строк, которые будут использоваться в качестве разделителей.</target>
        </trans-unit>
        <trans-unit id="3c07015f7159b0a0901c871597de54f69082e336" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delta&lt;/code&gt; - the value to add</source>
          <target state="translated">&lt;code&gt;delta&lt;/code&gt; - значение, которое нужно добавить</target>
        </trans-unit>
        <trans-unit id="573a068e56adece9f1c8de651192e49800a8c9c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destination&lt;/code&gt; - the array to copy to.</source>
          <target state="translated">&lt;code&gt;destination&lt;/code&gt; - массив для копирования.</target>
        </trans-unit>
        <trans-unit id="a61cc28e51a081605933f7b7c3c09447930acfea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destinationOffset&lt;/code&gt; - the position in the &lt;a href=&quot;copy-into#kotlin.collections%24copyInto%28kotlin.Array%28%28kotlin.collections.copyInto.T%29%29%2C+kotlin.Array%28%28kotlin.collections.copyInto.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;destination&lt;/a&gt; array to copy to, 0 by default.</source>
          <target state="translated">&lt;code&gt;destinationOffset&lt;/code&gt; - позиция в &lt;a href=&quot;copy-into#kotlin.collections%24copyInto%28kotlin.Array%28%28kotlin.collections.copyInto.T%29%29%2C+kotlin.Array%28%28kotlin.collections.copyInto.T%29%29%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;целевом&lt;/a&gt; массиве для копирования, по умолчанию 0.</target>
        </trans-unit>
        <trans-unit id="fe8e42c6b0e3d49a55bec737bdaeddf0c0c26804" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destinationOffset&lt;/code&gt; - the position in the &lt;a href=&quot;copy-into#kotlin.collections%24copyInto%28kotlin.UIntArray%2C+kotlin.UIntArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;destination&lt;/a&gt; array to copy to, 0 by default.</source>
          <target state="translated">&lt;code&gt;destinationOffset&lt;/code&gt; - позиция в &lt;a href=&quot;copy-into#kotlin.collections%24copyInto%28kotlin.UIntArray%2C+kotlin.UIntArray%2C+kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2Fdestination&quot;&gt;целевом&lt;/a&gt; массиве для копирования, по умолчанию 0.</target>
        </trans-unit>
        <trans-unit id="c5044cb3f9b53c8f09fac66871d824f0ac39dcbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destinationOffset&lt;/code&gt; - the position in the &lt;a href=&quot;copy-into#kotlin.collections%24copyInto(kotlin.Array((kotlin.collections.copyInto.T)),%20kotlin.Array((kotlin.collections.copyInto.T)),%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;destination&lt;/a&gt; array to copy to, 0 by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a194bfd3c7f8d077b827cb60722a62b134422294" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destinationOffset&lt;/code&gt; - the position in the &lt;a href=&quot;copy-into#kotlin.collections%24copyInto(kotlin.UIntArray,%20kotlin.UIntArray,%20kotlin.Int,%20kotlin.Int,%20kotlin.Int)/destination&quot;&gt;destination&lt;/a&gt; array to copy to, 0 by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa83ef723453345a2df40b8fe5404f4e9719a039" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destinationOffset&lt;/code&gt; - the position in the array to copy to, 0 by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7bc0166ab0b4c9145454ec7ce072be762ced73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destinationOffset&lt;/code&gt; - the position in the array to copy to.</source>
          <target state="translated">&lt;code&gt;destinationOffset&lt;/code&gt; - позиция в массиве для копирования.</target>
        </trans-unit>
        <trans-unit id="a58de38b94b8e9b9a7eb37e06e6043c6c1f5fb75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;direction&lt;/code&gt; - walk direction, top-down (by default) or bottom-up.</source>
          <target state="translated">&lt;code&gt;direction&lt;/code&gt; - направление ходьбы, сверху вниз (по умолчанию) или снизу вверх.</target>
        </trans-unit>
        <trans-unit id="5603f6179ec1f2c6b6c910e06d6f12930ea63f58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disable&lt;/code&gt; (default) &amp;ndash; generate bytecode in the same way as in Kotlin 1.0 and 1.1;</source>
          <target state="translated">&lt;code&gt;disable&lt;/code&gt; (по умолчанию) - генерировать байт-код так же, как в Kotlin 1.0 и 1.1;</target>
        </trans-unit>
        <trans-unit id="de8da8a8e3f73dde53565421b5f32ffa8258f64c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;do&lt;/code&gt; begins a &lt;a href=&quot;control-flow#while-loops&quot;&gt;do/while loop&lt;/a&gt; (loop with postcondition)</source>
          <target state="translated">&lt;code&gt;do&lt;/code&gt; начинает &lt;a href=&quot;control-flow#while-loops&quot;&gt;цикл do / while&lt;/a&gt; (цикл с постусловием)</target>
        </trans-unit>
        <trans-unit id="3c57e4d9ac97d605acea3644ebb7fa8aa0788ec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dynamic&lt;/code&gt; references a &lt;a href=&quot;dynamic-type&quot;&gt;dynamic type&lt;/a&gt; in Kotlin/JS code</source>
          <target state="translated">&lt;code&gt;dynamic&lt;/code&gt; ссылки на &lt;a href=&quot;dynamic-type&quot;&gt;динамический тип&lt;/a&gt; в коде Kotlin / JS</target>
        </trans-unit>
        <trans-unit id="c8d2a7261aaa6c329e5a705752f3d1225d588375" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;element&lt;/code&gt; - the element to search for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1782b5ea44ca6f108acdfa9509349291218cb35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;element&lt;/code&gt; - the to search for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a6fc14772d1018884e70d965dc51070c98b0f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;element&lt;/code&gt;: the element from the source being aggregated;</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; : агрегированный элемент из источника;</target>
        </trans-unit>
        <trans-unit id="8d3f46980f473896059ca162009db72a4483334a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;element&lt;/code&gt;: the first element being encountered in that group.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; : первый элемент, встречающийся в этой группе.</target>
        </trans-unit>
        <trans-unit id="84e6c615ac5ef98ed2208bdac433716452ba5425" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elementAt()&lt;/code&gt; is useful for collections that do not provide indexed access, or are not statically known to provide one. In case of &lt;code&gt;List&lt;/code&gt;, it's more idiomatic to use &lt;a href=&quot;list-operations#retrieving-elements-by-index&quot;&gt;indexed access operator&lt;/a&gt; (&lt;code&gt;get()&lt;/code&gt; or &lt;code&gt;[]&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;elementAt()&lt;/code&gt; полезен для коллекций, которые не предоставляют индексированный доступ или статически неизвестны для его предоставления. В случае со &lt;code&gt;List&lt;/code&gt; более идиоматично использовать &lt;a href=&quot;list-operations#retrieving-elements-by-index&quot;&gt;индексированный оператор доступа&lt;/a&gt; ( &lt;code&gt;get()&lt;/code&gt; или &lt;code&gt;[]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f7ef65e08e53ea29fb9444cf0fff8cf067fdd254" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;else&lt;/code&gt; defines the branch of an &lt;a href=&quot;control-flow#if-expression&quot;&gt;if expression&lt;/a&gt; which is executed when the condition is false</source>
          <target state="translated">&lt;code&gt;else&lt;/code&gt; определяет ветвь &lt;a href=&quot;control-flow#if-expression&quot;&gt;выражения if,&lt;/a&gt; которое выполняется, когда условие ложно</target>
        </trans-unit>
        <trans-unit id="9c5bc2e47f5c87fd04b0144453054ea39d545b8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enable&lt;/code&gt; &amp;ndash; generate Java-like bytecode for constructor calls. This can change the order in which the classes are loaded and initialized;</source>
          <target state="translated">&lt;code&gt;enable&lt;/code&gt; - генерировать Java-подобный байт-код для вызовов конструкторов. Это может изменить порядок, в котором классы загружаются и инициализируются;</target>
        </trans-unit>
        <trans-unit id="9fa11bf12d06bf5896794e5c4acac78021ce3f79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endIndex&lt;/code&gt; -</source>
          <target state="translated">&lt;code&gt;endIndex&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="4a89426737a38c10013cf183fc902245f16e02a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endIndex&lt;/code&gt; - the end (exclusive) of the range to copy, length of this string builder by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debcb8c76c799f2acec3c72d115b191a0be3b86b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endIndex&lt;/code&gt; - the end (exclusive) of the subrange of characters, size of this array by default.</source>
          <target state="translated">&lt;code&gt;endIndex&lt;/code&gt; - конец (исключение) поддиапазона символов, размер этого массива по умолчанию.</target>
        </trans-unit>
        <trans-unit id="b904d74168ff77388efa6590fdcd8f938d3682d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endIndex&lt;/code&gt; - the end (exclusive) of the subrange to copy, size of this array by default.</source>
          <target state="translated">&lt;code&gt;endIndex&lt;/code&gt; - конец (исключение) поддиапазона для копирования, размер этого массива по умолчанию.</target>
        </trans-unit>
        <trans-unit id="ecfb32b652722fb6a070428e54cdf68e8c0bbef9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endIndex&lt;/code&gt; - the end (exclusive) of the subrange to copy, size of this blob by default.</source>
          <target state="translated">&lt;code&gt;endIndex&lt;/code&gt; - конец ( исключая ) поддиапазона для копирования, размер этого blob по умолчанию.</target>
        </trans-unit>
        <trans-unit id="cff44ce214219c6ebcf2027e71b9f3cc7f04405b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endIndex&lt;/code&gt; - the end (exclusive) of the subrange to decode, size of this array by default.</source>
          <target state="translated">&lt;code&gt;endIndex&lt;/code&gt; - конец (исключение) поддиапазона для декодирования, размер этого массива по умолчанию.</target>
        </trans-unit>
        <trans-unit id="b40b3eb583a9405eb430eefa83e5a6b254d48dce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endIndex&lt;/code&gt; - the end (exclusive) of the subsequence to append.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d53a1831775999af5dda451e00186b222e51c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endIndex&lt;/code&gt; - the end (exclusive) of the substring to encode, length of this string by default.</source>
          <target state="translated">&lt;code&gt;endIndex&lt;/code&gt; - конец (исключение) подстроки для кодирования, длина этой строки по умолчанию.</target>
        </trans-unit>
        <trans-unit id="31491006d3e89a4d337ea3fe4ed21683c6aa5f29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endIndex&lt;/code&gt; - the end (exclusive) of the substring, length of this string by default.</source>
          <target state="translated">&lt;code&gt;endIndex&lt;/code&gt; - конец (исключение) подстроки, длина этой строки по умолчанию.</target>
        </trans-unit>
        <trans-unit id="4f78465973716f615cca54331b704800fefa25fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endIndex&lt;/code&gt; - the end index (exclusive).</source>
          <target state="translated">&lt;code&gt;endIndex&lt;/code&gt; - конечный индекс (исключительный).</target>
        </trans-unit>
        <trans-unit id="c10999b4641d00945a0639070f415fead0bca58f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endIndex&lt;/code&gt; - the end index (exclusive). If not specified, the length of the char sequence is used.</source>
          <target state="translated">&lt;code&gt;endIndex&lt;/code&gt; - конечный индекс (исключительный). Если не указано, используется длина последовательности символов.</target>
        </trans-unit>
        <trans-unit id="a44eaaeb8c06228176b365cfe128dd3a89582950" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endIndex&lt;/code&gt; - the end offset (exclusive) of the substring to copy.</source>
          <target state="translated">&lt;code&gt;endIndex&lt;/code&gt; - конечное смещение (исключительное) копируемой подстроки.</target>
        </trans-unit>
        <trans-unit id="d200f382f3906a79936ec33b198efda61a8fdf6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endIndex&lt;/code&gt; - the index of the first character after the replacement to keep in the string.</source>
          <target state="translated">&lt;code&gt;endIndex&lt;/code&gt; - индекс первого символа после замены для сохранения в строке.</target>
        </trans-unit>
        <trans-unit id="3d3fb6d1d54ce61b919bb9bdd40748178e41b53d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enum&lt;/code&gt; declares an &lt;a href=&quot;enum-classes&quot;&gt;enumeration&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;enum&lt;/code&gt; объявляет &lt;a href=&quot;enum-classes&quot;&gt;перечисление&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af8613fdcf4f4330816922035f40566492557593" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;equals()&lt;/code&gt;/&lt;code&gt;hashCode()&lt;/code&gt; pair;</source>
          <target state="translated">&lt;code&gt;equals()&lt;/code&gt; пара equals () / &lt;code&gt;hashCode()&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="6264471370ec15bc10c56b619a1f88fe16f84795" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;equals(x)&lt;/code&gt; checks if this object is equal to some other object &lt;code&gt;x&lt;/code&gt; of any class (by default, this just checks if this object is the &lt;em&gt;same&lt;/em&gt; object as &lt;code&gt;x&lt;/code&gt; - just like &lt;code&gt;is&lt;/code&gt; in Python - but it can be overridden by subclasses to do custom comparisons of property values)</source>
          <target state="translated">&lt;code&gt;equals(x)&lt;/code&gt; проверяет , является ли этот объект равен некоторыми другими объектами &lt;code&gt;x&lt;/code&gt; любого класса (по умолчанию, это только проверяет , является ли этот объект является тот &lt;em&gt;же&lt;/em&gt; объект , как &lt;code&gt;x&lt;/code&gt; - так же , как &lt;code&gt;is&lt;/code&gt; в Python - но это может быть переопределены подклассами , чтобы сделать пользовательские сравнения значений свойств)</target>
        </trans-unit>
        <trans-unit id="904ef728c6f2f6bed593b2a48ddfcb2c903af702" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errorReporting&lt;/code&gt; - controls if an uncaught exceptions in the worker will be printed out</source>
          <target state="translated">&lt;code&gt;errorReporting&lt;/code&gt; - контролирует, будут ли распечатаны неперехваченные исключения в worker</target>
        </trans-unit>
        <trans-unit id="f1f8d2f2c8e11934c5441c5883d25c6ab31a5362" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exceptionClasses&lt;/code&gt; - the list of checked exception classes that may be thrown by the function.</source>
          <target state="translated">&lt;code&gt;exceptionClasses&lt;/code&gt; - список проверенных классов исключений, которые могут быть сгенерированы функцией.</target>
        </trans-unit>
        <trans-unit id="e22250cfc95c584bd7d596db8c98bd14056c7d30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;excludedFunctions&lt;/code&gt; property value specifies a space-separated list of the names of functions that should be ignored. This may be required because a function declared in the C header is not generally guaranteed to be really callable, and it is often hard or impossible to figure this out automatically. This option can also be used to workaround a bug in the interop itself.</source>
          <target state="translated">&lt;code&gt;excludedFunctions&lt;/code&gt; Значение свойства excludedFunctions задает список разделенных пробелами имен функций, которые следует игнорировать. Это может потребоваться, потому что функция, объявленная в заголовке C, обычно не может быть действительно вызываемой, и часто трудно или невозможно определить это автоматически. Этот параметр также можно использовать для обхода ошибки в самом взаимодействии.</target>
        </trans-unit>
        <trans-unit id="9457350a803a72910eb331f7f3288e4b4e7fbbab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exp(+Inf)&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;exp(+Inf)&lt;/code&gt; равно &lt;code&gt;+Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9fb249cc74d0321059127190a4a6293f6b4043c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exp(-Inf)&lt;/code&gt; is &lt;code&gt;0.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;exp(-Inf)&lt;/code&gt; равно &lt;code&gt;0.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9343b8d86ae36ff51e28d7738c2db2532b287c9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exp(NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;exp(NaN)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8969455197c2cd48432090ecdeda45b3db6ce9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expect&lt;/code&gt; marks a declaration as &lt;a href=&quot;multiplatform&quot;&gt;platform-specific&lt;/a&gt;, expecting an implementation in platform modules.</source>
          <target state="translated">&lt;code&gt;expect&lt;/code&gt; отмечает объявление как зависящее от &lt;a href=&quot;multiplatform&quot;&gt;платформы&lt;/a&gt; , ожидая реализации в модулях платформы.</target>
        </trans-unit>
        <trans-unit id="428c18f1f786bb3b146d044fca57b5586fd61ec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expected&lt;/code&gt; - the expected value</source>
          <target state="translated">&lt;code&gt;expected&lt;/code&gt; - ожидаемое значение</target>
        </trans-unit>
        <trans-unit id="682a723d504c263424f725368735bbff1d486885" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expm1(+Inf)&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;expm1(+Inf)&lt;/code&gt; равно &lt;code&gt;+Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d1193263966e21eb71b625a5401cdbef2d2de347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expm1(-Inf)&lt;/code&gt; is &lt;code&gt;-1.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;expm1(-Inf)&lt;/code&gt; равно &lt;code&gt;-1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec648f3662fc80237e9047e705c7a89734dca515" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expm1(NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;expm1(NaN)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9cec50131ea0843544edc933f02bb241c368745" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expression&lt;/code&gt; - the replacement expression. The replacement expression is interpreted in the context of the symbol being used, and can reference members of enclosing classes etc. For function calls, the replacement expression may contain argument names of the deprecated function, which will be substituted with actual parameters used in the call being updated. The imports used in the file containing the deprecated function or property are NOT accessible; if the replacement expression refers on any of those imports, they need to be specified explicitly in the &lt;a href=&quot;imports#kotlin.ReplaceWith%24imports&quot;&gt;imports&lt;/a&gt; parameter.</source>
          <target state="translated">&lt;code&gt;expression&lt;/code&gt; - выражение замены. Выражение замены интерпретируется в контексте используемого символа и может ссылаться на элементы включающих классов и т. Д. Для вызовов функций выражение замены может содержать имена аргументов устаревшей функции, которые будут заменены фактическими параметрами, используемыми в вызове. обновляется. Импорт, используемый в файле, содержащем устаревшую функцию или свойство, НЕ доступен; если выражение замены относится к любому из этих импортов, их необходимо явно указать в параметре &lt;a href=&quot;imports#kotlin.ReplaceWith%24imports&quot;&gt;импорта&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="017252bd95dbdd6eaab6742dbf5a83163eb7942b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;external&lt;/code&gt; declarations are not mangled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bdd0e9a33c972d1567d566c94d7d6b932adcb2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;external&lt;/code&gt; interfaces</source>
          <target state="translated">&lt;code&gt;external&lt;/code&gt; интерфейсы</target>
        </trans-unit>
        <trans-unit id="a002e9653e3683d895beb1eea50e39035f132c5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;external&lt;/code&gt; marks a declaration as implemented not in Kotlin (accessible through &lt;a href=&quot;java-interop#using-jni-with-kotlin&quot;&gt;JNI&lt;/a&gt; or in &lt;a href=&quot;js-interop#external-modifier&quot;&gt;JavaScript&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;external&lt;/code&gt; отмечает объявление как реализованное не в Kotlin (доступно через &lt;a href=&quot;java-interop#using-jni-with-kotlin&quot;&gt;JNI&lt;/a&gt; или в &lt;a href=&quot;js-interop#external-modifier&quot;&gt;JavaScript&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="960adc54b04dbdd48bb785f724555d98d58ed1a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;external&lt;/code&gt; modifier</source>
          <target state="translated">&lt;code&gt;external&lt;/code&gt; модификатор</target>
        </trans-unit>
        <trans-unit id="864aa600a0d917d1200d4e6891f544d69ba9d360" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; specifies the 'false' value of the &lt;a href=&quot;basic-types#booleans&quot;&gt;Boolean type&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; указывает значение false &lt;a href=&quot;basic-types#booleans&quot;&gt;логического типа&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68e95caaa6f38c267d6b8b65cdddf74b0baf32d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;field&lt;/code&gt; is used as an &lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;annotation use-site target&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;field&lt;/code&gt; используется в качестве &lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;цели использования аннотации&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0bb04ebb6a223ee1447262f97b07c1e93f1d7953" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;field&lt;/code&gt; is used inside a property accessor to refer to the &lt;a href=&quot;properties#backing-fields&quot;&gt;backing field of the property&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;field&lt;/code&gt; используется внутри &lt;a href=&quot;properties#backing-fields&quot;&gt;метода&lt;/a&gt; доступа к свойству для ссылки на поле поддержки свойства.</target>
        </trans-unit>
        <trans-unit id="43c00842fd3039b78f31cc2bda7bfe1a04b2839a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;field&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;field&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="661adb9650894c979ea15f973ec54c7a3669e0e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;field&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;field&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="92c40f5f3701a08407b7067a428d13d5764bda76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt; - the file on which the failed operation was performed.</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; - файл, над которым была выполнена неудачная операция.</target>
        </trans-unit>
        <trans-unit id="c3153255672b9b6e43298774c83706b65461589d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt; is used as an &lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;annotation use-site target&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; используется как &lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;целевой объект использования аннотации&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c8fd88900963a5f8acb0ef2735db448080d89eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="e811f165263bca02b2d5b3f6d4eb7af0e4c8a630" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;final&lt;/code&gt; forbids &lt;a href=&quot;classes#overriding-methods&quot;&gt;overriding a member&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;final&lt;/code&gt; запрещает &lt;a href=&quot;classes#overriding-methods&quot;&gt;переопределение члена&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="720db6a17de78a3e26ed3941f47b06cef8c2e451" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;finally&lt;/code&gt; begins a block that &lt;a href=&quot;exceptions&quot;&gt;is always executed when a try block exits&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;finally&lt;/code&gt; начинает блок, который &lt;a href=&quot;exceptions&quot;&gt;всегда выполняется при выходе из блока try&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7043a4e7c55ebbf536538f78d2db5b674f8323ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;first&lt;/code&gt; - First value.</source>
          <target state="translated">&lt;code&gt;first&lt;/code&gt; - Первое значение.</target>
        </trans-unit>
        <trans-unit id="975e0d16c7b93262082f35c2f76623ca5f05cd9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;first&lt;/code&gt;: indicates whether it's the first &lt;code&gt;element&lt;/code&gt; encountered in the group.</source>
          <target state="translated">&lt;code&gt;first&lt;/code&gt; : указывает, является ли это первым &lt;code&gt;element&lt;/code&gt; группы.</target>
        </trans-unit>
        <trans-unit id="9baaff16630205e3241b49fe5ac9912763acdbd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;floor(x)&lt;/code&gt; is &lt;code&gt;x&lt;/code&gt; where &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; or &lt;code&gt;+Inf&lt;/code&gt; or &lt;code&gt;-Inf&lt;/code&gt; or already a mathematical integer.</source>
          <target state="translated">&lt;code&gt;floor(x)&lt;/code&gt; является &lt;code&gt;x&lt;/code&gt; , где &lt;code&gt;x&lt;/code&gt; является &lt;code&gt;NaN&lt;/code&gt; или &lt;code&gt;+Inf&lt;/code&gt; или &lt;code&gt;-Inf&lt;/code&gt; или уже математическое целое число.</target>
        </trans-unit>
        <trans-unit id="6358fd75d21a0926098b2ed173253f03ba387305" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo&lt;/code&gt; may contain &lt;a href=&quot;platform-specific-declarations&quot;&gt;platform-specific implementations&lt;/a&gt; for the expected declarations of &lt;code&gt;bar&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;foo&lt;/code&gt; может содержать &lt;a href=&quot;platform-specific-declarations&quot;&gt;специфичные&lt;/a&gt; для платформы реализации для ожидаемых объявлений &lt;code&gt;bar&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="81153b83880f2c445243330b3c37666a76ecdea0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo&lt;/code&gt; should enable all unstable language features that &lt;code&gt;bar&lt;/code&gt; enables (there's no such requirement for bugfix features);</source>
          <target state="translated">&lt;code&gt;foo&lt;/code&gt; должен включать все нестабильные языковые функции, которые разрешает &lt;code&gt;bar&lt;/code&gt; (таких требований для функций исправления ошибок нет);</target>
        </trans-unit>
        <trans-unit id="d95ef74023061771894b85ca098bd9a4bd795a13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo&lt;/code&gt; should set &lt;code&gt;languageVersion&lt;/code&gt; that is greater than or equal to that of &lt;code&gt;bar&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;foo&lt;/code&gt; должен установить &lt;code&gt;languageVersion&lt;/code&gt; , который больше или равен значению &lt;code&gt;bar&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="f6033661b307f0d64dbf577adc1113d11b77ef0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo&lt;/code&gt; should use all experimental annotations that &lt;code&gt;bar&lt;/code&gt; uses;</source>
          <target state="translated">&lt;code&gt;foo&lt;/code&gt; должен использовать все экспериментальные аннотации, которые использует &lt;code&gt;bar&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="c8563824b8942eec8250b47c590239343950d238" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for&lt;/code&gt; begins a &lt;a href=&quot;control-flow#for-loops&quot;&gt;for loop&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; начинается &lt;a href=&quot;control-flow#for-loops&quot;&gt;цикл for&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="621ea668ec4d59c0023fff8f56596614bf4f90d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for&lt;/code&gt; loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9756fc00ad36b4610e469b2a8490f9d70327485f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fromIndex&lt;/code&gt; - the start of the range (inclusive) to copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc0fdd97c64247361cec893eae99c5a004e5456" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fromIndex&lt;/code&gt; - the start of the range (inclusive) to fill, 0 by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e5a619f5cf3edb8076a0e713fdc0d01b15753d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fromIndex&lt;/code&gt; - the start of the range (inclusive) to reverse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a453a2e6dd746568a0d749fe19330fe4ff65755" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fromIndex&lt;/code&gt; - the start of the range (inclusive) to search in, 0 by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4a21d861b9d8f42185985b421b5ac046f42aeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fromIndex&lt;/code&gt; - the start of the range (inclusive) to sort, 0 by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e7246438eea01890bc0d658f90c0eed96b3759" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fromIndex&lt;/code&gt; - the start of the range (inclusive) to sort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920c7cf25a5c65ee5f0516600a049a3bbd15cc28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fromIndex&lt;/code&gt; - the start of the range (inclusive), must be in &lt;code&gt;0..array.size&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fromIndex&lt;/code&gt; - начало диапазона (включительно), должно быть в &lt;code&gt;0..array.size&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc65f0cc2c91565a9a7b150baa6da83520c9a7bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fun T.readValue(): CValue&amp;lt;T&amp;gt;&lt;/code&gt;. Converts (the lvalue) &lt;code&gt;T&lt;/code&gt; to a &lt;code&gt;CValue&amp;lt;T&amp;gt;&lt;/code&gt;. So to construct the &lt;code&gt;CValue&amp;lt;T&amp;gt;&lt;/code&gt;, &lt;code&gt;T&lt;/code&gt; can be allocated, filled, and then converted to &lt;code&gt;CValue&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fun T.readValue(): CValue&amp;lt;T&amp;gt;&lt;/code&gt; . Преобразует (lvalue) &lt;code&gt;T&lt;/code&gt; в &lt;code&gt;CValue&amp;lt;T&amp;gt;&lt;/code&gt; . Таким образом, чтобы &lt;code&gt;CValue&amp;lt;T&amp;gt;&lt;/code&gt; , &lt;code&gt;T&lt;/code&gt; можно выделить, заполнить и затем преобразовать в &lt;code&gt;CValue&amp;lt;T&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9231a90f1324d1094809e634170d62d6553a0958" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fun&lt;/code&gt; declares a &lt;a href=&quot;functions&quot;&gt;function&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;fun&lt;/code&gt; объявляет &lt;a href=&quot;functions&quot;&gt;функцию&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aba39ed531fa7ccca069ffb9f9796c14cb5c53c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function main(args) { ... }&lt;/code&gt;: your &lt;code&gt;main&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;function main(args) { ... }&lt;/code&gt; : ваша &lt;code&gt;main&lt;/code&gt; функция.</target>
        </trans-unit>
        <trans-unit id="b90c68e0db9bbf272cb067d0e4063b6dd59053bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt; - must be &lt;em&gt;static&lt;/em&gt;, i.e. an (unbound) reference to a Kotlin function or a closure which doesn't capture any variable</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; - должна быть &lt;em&gt;статической&lt;/em&gt; , то есть (несвязанной) ссылкой на функцию Kotlin или замыкание, которое не захватывает никакую переменную</target>
        </trans-unit>
        <trans-unit id="cb74f80197ef4b767bea98034304627939644209" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get&lt;/code&gt; (property getter);</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; (средство получения свойства);</target>
        </trans-unit>
        <trans-unit id="b5fcfe741cd2a59282c28e61be517c007df8d751" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getValue()&lt;/code&gt; and/or &lt;code&gt;setValue()&lt;/code&gt; functions may be provided either as member functions of the delegate class or extension functions. The latter is handy when you need to delegate property to an object which doesn't originally provide these functions. Both of the functions need to be marked with the &lt;code&gt;operator&lt;/code&gt; keyword.</source>
          <target state="translated">&lt;code&gt;getValue()&lt;/code&gt; и / или &lt;code&gt;setValue()&lt;/code&gt; могут быть предоставлены либо как функции-члены класса делегата, либо как функции расширения. Последнее удобно, когда вам нужно делегировать свойство объекту, который изначально не предоставляет эти функции. Обе функции необходимо пометить ключевым словом &lt;code&gt;operator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96c07f3955629a6c1d8d27b5c90fa362e99a1b79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getValue()&lt;/code&gt; must return the same type as the property (or its subtype).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2504ff1e95ac8e84f86ec61f823bb0930ba1d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hashCode()&lt;/code&gt; returns an integer that can be used by hash tables and for shortcutting complex equality comparisons (objects that are equal according to &lt;code&gt;equals()&lt;/code&gt; must have the same hash code, so if two objects' hash codes are different, the objects cannot be equal)</source>
          <target state="translated">&lt;code&gt;hashCode()&lt;/code&gt; возвращает целое число, которое может использоваться хэш-таблицами и для сокращения сложных сравнений на равенство (объекты, которые равны в соответствии с &lt;code&gt;equals()&lt;/code&gt; должны иметь один и тот же хэш-код, поэтому, если хэш-коды двух объектов различны, объекты не могут быть равный)</target>
        </trans-unit>
        <trans-unit id="998552725b212767507beaf1f5dedd8e421f4aff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html&lt;/code&gt; is actually a function call that takes a &lt;a href=&quot;lambdas&quot;&gt;lambda expression&lt;/a&gt; as an argument. This function is defined as follows:</source>
          <target state="translated">&lt;code&gt;html&lt;/code&gt; на самом деле является вызовом функции, которая принимает в качестве аргумента &lt;a href=&quot;lambdas&quot;&gt;лямбда-выражение&lt;/a&gt; . Эта функция определяется следующим образом:</target>
        </trans-unit>
        <trans-unit id="86b66e3700b732f542cbede18058e33e47312b13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if (typeof kotlin === 'undefined') { ... }&lt;/code&gt; checks the existence of the &lt;code&gt;kotlin&lt;/code&gt; object defined in &lt;code&gt;kotlin.js&lt;/code&gt;. This object provides access to declarations from the Kotlin runtime and standard library.</source>
          <target state="translated">&lt;code&gt;if (typeof kotlin === 'undefined') { ... }&lt;/code&gt; проверяет существование объекта &lt;code&gt;kotlin&lt;/code&gt; , определенного в &lt;code&gt;kotlin.js&lt;/code&gt; . Этот объект обеспечивает доступ к объявлениям из среды выполнения Kotlin и стандартной библиотеки.</target>
        </trans-unit>
        <trans-unit id="949d03b7fa5c7fdbf0eb685202d0a0dd5c552a50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt; begins an &lt;a href=&quot;control-flow#if-expression&quot;&gt;if expression&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; начинается &lt;a href=&quot;control-flow#if-expression&quot;&gt;выражение if&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f35d4248b777331f74a86a67e696ecef3c3da7ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt; versus &lt;code&gt;when&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; против &lt;code&gt;when&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7007023e4abadf8769c61523b665a03766481146" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b30b1841c0db759a236cf1bdcfbc7101d2eed111" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt; works the same way as in Python, but it's &lt;code&gt;else if&lt;/code&gt; instead of &lt;code&gt;elif&lt;/code&gt;, the conditions are enclosed in parentheses, and the bodies are enclosed in curly braces:</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt; работает так же, как в Python, но &lt;code&gt;else if&lt;/code&gt; вместо &lt;code&gt;elif&lt;/code&gt; условия заключены в круглые скобки, а тела заключены в фигурные скобки:</target>
        </trans-unit>
        <trans-unit id="01019fa291670e8e7d140eb0a8e03256b53c0fe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreCase&lt;/code&gt; -</source>
          <target state="translated">&lt;code&gt;ignoreCase&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="0655c146e9dc16b7f873763eafd70edae9e5ad2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreCase&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; to ignore character case when comparing characters. By default &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ignoreCase&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; игнорировать регистр символов при сравнении символов. По умолчанию &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f24d3002d25a56b154ee3c7a700dbe34b69830c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreCase&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; to ignore character case when comparing strings. By default &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ignoreCase&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; игнорировать регистр символов при сравнении строк. По умолчанию &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="beb65901f1c252dabbaf9cd0805e719d6b401aec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreCase&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; to ignore character case when matching a character. By default &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ignoreCase&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; игнорировать регистр символов при сопоставлении символа. По умолчанию &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ea149e4725e88f2a8ed371d168642b1a8804312" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreCase&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; to ignore character case when matching a delimiter. By default &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ignoreCase&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; игнорировать регистр символов при сопоставлении разделителя. По умолчанию &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8fd6f3be1dc1ec3e13615726b447b41574bcb95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreCase&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; to ignore character case when matching a string. By default &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ignoreCase&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; игнорировать регистр символов при сопоставлении строки. По умолчанию &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d142a898da7c511331028b8183ac75d431a923c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;implementation&lt;/code&gt; dependencies are used during compilation and at runtime for the current module, but are not exposed for compilation of other modules depending on the one with the &lt;code&gt;implementation&lt;/code&gt; dependency. The&lt;code&gt;implementation&lt;/code&gt; dependency kind should be used for dependencies needed for the internal logic of a module. If a module is an endpoint application which is not published, it may use &lt;code&gt;implementation&lt;/code&gt; dependencies instead of &lt;code&gt;api&lt;/code&gt; ones.</source>
          <target state="translated">&lt;code&gt;implementation&lt;/code&gt; зависимости реализации используются во время компиляции и во время выполнения для текущего модуля, но не отображаются для компиляции других модулей в зависимости от модуля с зависимостью &lt;code&gt;implementation&lt;/code&gt; . Тип зависимости &lt;code&gt;implementation&lt;/code&gt; должен использоваться для зависимостей, необходимых для внутренней логики модуля. Если модуль является приложением конечной точки, которое не опубликовано, оно может использовать зависимости &lt;code&gt;implementation&lt;/code&gt; вместо зависимостей &lt;code&gt;api&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="073835a4b2c31ba3e70d4af519ee80a14e683d1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import&lt;/code&gt; - name of a module to import declaration from. It is not interpreted by the Kotlin compiler, it's passed as is directly to the target module system.</source>
          <target state="translated">&lt;code&gt;import&lt;/code&gt; - имя модуля, из которого импортируется декларация. Он не интерпретируется компилятором Kotlin, он передается как есть непосредственно в целевую модульную систему.</target>
        </trans-unit>
        <trans-unit id="73747d162d2c52c8c45a4e7c1f17d744898a5dd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import&lt;/code&gt;&lt;a href=&quot;packages&quot;&gt;imports a declaration from another package into the current file&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;import&lt;/code&gt; &lt;a href=&quot;packages&quot;&gt;импортирует объявление из другого пакета в текущий файл&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1dbdd7ec6293c4de1d4ca990fb7d27b77212048c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imports&lt;/code&gt; - the qualified names that need to be imported in order for the references in the replacement expression to be resolved correctly.</source>
          <target state="translated">&lt;code&gt;imports&lt;/code&gt; - полные имена, которые необходимо импортировать, чтобы ссылки в выражении замены были разрешены правильно.</target>
        </trans-unit>
        <trans-unit id="a4c07dc13442b275a6a53525d50e783939d23a52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;in&lt;/code&gt;, &lt;code&gt;!in&lt;/code&gt; and &lt;code&gt;..&lt;/code&gt; operations with values of type &lt;code&gt;dynamic&lt;/code&gt; are forbidden.</source>
          <target state="translated">&lt;code&gt;in&lt;/code&gt; , &lt;code&gt;!in&lt;/code&gt; и &lt;code&gt;..&lt;/code&gt; операции со значениями типа &lt;code&gt;dynamic&lt;/code&gt; запрещены.</target>
        </trans-unit>
        <trans-unit id="1ae620dcbb0b2193ab1c27b4703a6ac9dda8b039" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;incrementalData&lt;/code&gt;: An output path for the binary stubs.</source>
          <target state="translated">&lt;code&gt;incrementalData&lt;/code&gt; : выходной путь для двоичных заглушек.</target>
        </trans-unit>
        <trans-unit id="0b0cf3cce12eca8ea80e17718b29e84f455198cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&lt;/code&gt; - the index of the value in the collection or sequence.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; - индекс значения в коллекции или последовательности.</target>
        </trans-unit>
        <trans-unit id="8c95559d4ef6a02e72139e0d6c7a537e62f7ebeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&lt;/code&gt; - the position in this string builder to insert at.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6873d094a588b2acb3f1c37fb4201e131c6c0c49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;infix&lt;/code&gt; allows calling a function in &lt;a href=&quot;functions#infix-notation&quot;&gt;infix notation&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;infix&lt;/code&gt; позволяет вызывать функцию в &lt;a href=&quot;functions#infix-notation&quot;&gt;инфиксной записи&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="431c4bb63f0d593c0d383bea4b114f555e84719a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt; begins an &lt;a href=&quot;classes#constructors&quot;&gt;initializer block&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; начинает &lt;a href=&quot;classes#constructors&quot;&gt;блок инициализатора&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4267d5ac6a8166156cb5069099daacf822766c17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initialCapacity&lt;/code&gt; - initial capacity (ignored)</source>
          <target state="translated">&lt;code&gt;initialCapacity&lt;/code&gt; - начальная емкость (игнорируется)</target>
        </trans-unit>
        <trans-unit id="7ce55d599a188d295d7f7b01bf5b5c233d28a89f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initialCapacity&lt;/code&gt; - the initial capacity (ignored)</source>
          <target state="translated">&lt;code&gt;initialCapacity&lt;/code&gt; - начальная емкость (игнорируется)</target>
        </trans-unit>
        <trans-unit id="afaed7f3ba9c84cc57afd1ccace1e790f948d5b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initialValue&lt;/code&gt; - the initial value of the property.</source>
          <target state="translated">&lt;code&gt;initialValue&lt;/code&gt; - начальное значение свойства.</target>
        </trans-unit>
        <trans-unit id="a5c2256bbf6f7e82e1693ba9b736f10297fb2bb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initialValueSelector&lt;/code&gt; -</source>
          <target state="translated">&lt;code&gt;initialValueSelector&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="8371dae39cfd6f5514b7301bda95e4fd41ad1296" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initialValueSelector&lt;/code&gt; - a function that provides an initial value of accumulator for each group. It's invoked with parameters:</source>
          <target state="translated">&lt;code&gt;initialValueSelector&lt;/code&gt; - функция, которая предоставляет начальное значение аккумулятора для каждой группы. Он вызывается с параметрами:</target>
        </trans-unit>
        <trans-unit id="75d4affe1c61559caae6ba9c88b5425bedb50e36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inline&lt;/code&gt; tells the compiler to &lt;a href=&quot;inline-functions&quot;&gt;inline the function and the lambdas passed to it at the call site&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;inline&lt;/code&gt; сообщает компилятору &lt;a href=&quot;inline-functions&quot;&gt;встроить функцию и лямбды, переданные ему на сайте вызова&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f941d5cf716103c195271292dafdd9d28051b8cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inner&lt;/code&gt; allows referring to the outer class instance from a &lt;a href=&quot;nested-classes&quot;&gt;nested class&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;inner&lt;/code&gt; позволяет обращаться к экземпляру внешнего класса из &lt;a href=&quot;nested-classes&quot;&gt;вложенного класса&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3203bcab1173db1c9dddf9cf967413bcfb4f5ed7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;interface&lt;/code&gt; declares an &lt;a href=&quot;interfaces&quot;&gt;interface&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;interface&lt;/code&gt; объявляет &lt;a href=&quot;interfaces&quot;&gt;интерфейс&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ddf58d88fea3f3541896ebc1326e4342c8c571df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;internal&lt;/code&gt; &amp;mdash; any client &lt;em&gt;inside this module&lt;/em&gt; who sees the declaring class sees its &lt;code&gt;internal&lt;/code&gt; members;</source>
          <target state="translated">&lt;code&gt;internal&lt;/code&gt; - любой клиент &lt;em&gt;внутри этого модуля,&lt;/em&gt; который видит объявляющий класс, видит его &lt;code&gt;internal&lt;/code&gt; члены;</target>
        </trans-unit>
        <trans-unit id="87d7ea63b28c17041a55ad4dcba6beefe4615bb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;internal&lt;/code&gt; declarations become &lt;code&gt;public&lt;/code&gt; in Java. Members of &lt;code&gt;internal&lt;/code&gt; classes go through name mangling, to make it harder to accidentally use them from Java and to allow overloading for members with the same signature that don't see each other according to Kotlin rules;</source>
          <target state="translated">&lt;code&gt;internal&lt;/code&gt; объявления становятся &lt;code&gt;public&lt;/code&gt; в Java. Члены &lt;code&gt;internal&lt;/code&gt; классов подвергаются изменению имен, чтобы было сложнее случайно использовать их из Java и разрешить перегрузку для членов с одинаковой сигнатурой, которые не видят друг друга в соответствии с правилами Kotlin;</target>
        </trans-unit>
        <trans-unit id="fcda8a9968e6333af8720878a6b26545c6f20d68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;internal&lt;/code&gt; marks a declaration as &lt;a href=&quot;visibility-modifiers&quot;&gt;visible in the current module&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;internal&lt;/code&gt; отмечает объявление как &lt;a href=&quot;visibility-modifiers&quot;&gt;видимое в текущем модуле&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34731533ef23ca6fb90600364aba8ba755b01d53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;internal&lt;/code&gt;: this symbol is only visible inside files that belong to the same &lt;em&gt;module&lt;/em&gt; (a source code grouping which is defined by your IDE or build tool) as the file where this symbol is declared</source>
          <target state="translated">&lt;code&gt;internal&lt;/code&gt; : этот символ виден только внутри файлов, которые принадлежат тому же &lt;em&gt;модулю&lt;/em&gt; (группировка исходного кода, которая определяется вашей IDE или инструментом сборки), что и файл, в котором объявлен этот символ</target>
        </trans-unit>
        <trans-unit id="e61e4a67ed085964a35e9bf151fd9462f28c996d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;internal&lt;/code&gt;: this symbol is only visible to code that exists inside a file that belongs to the same module as the file where this symbol is declared, and that can also see the containing class</source>
          <target state="translated">&lt;code&gt;internal&lt;/code&gt; : этот символ виден только коду, который существует внутри файла, который принадлежит тому же модулю, что и файл, в котором объявлен этот символ, и который также может видеть содержащий класс</target>
        </trans-unit>
        <trans-unit id="f5571a91f8dc92d8ea7d3f7db824e4a65e08b041" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inv()&lt;/code&gt; &amp;ndash; bitwise inversion</source>
          <target state="translated">&lt;code&gt;inv()&lt;/code&gt; - побитовая инверсия</target>
        </trans-unit>
        <trans-unit id="5ff6d5127fdc730159860f8b06d2e40e7adeb311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iosArm32&lt;/code&gt;, &lt;code&gt;iosArm64&lt;/code&gt;, &lt;code&gt;iosX64&lt;/code&gt; for iOS;</source>
          <target state="translated">&lt;code&gt;iosArm32&lt;/code&gt; , &lt;code&gt;iosArm64&lt;/code&gt; , &lt;code&gt;iosX64&lt;/code&gt; для iOS;</target>
        </trans-unit>
        <trans-unit id="0ff7dd14bddbf16872e847e94eba176ae439d7f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is&lt;/code&gt; and &lt;code&gt;!is&lt;/code&gt; Operators</source>
          <target state="translated">&lt;code&gt;is&lt;/code&gt; и &lt;code&gt;!is&lt;/code&gt; Операторы</target>
        </trans-unit>
        <trans-unit id="d8c935a2340adaa853030be371e651ee624f1fbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isDaemon&lt;/code&gt; - if &lt;code&gt;true&lt;/code&gt;, the thread is created as a daemon thread. The Java Virtual Machine exits when the only threads running are all daemon threads.</source>
          <target state="translated">&lt;code&gt;isDaemon&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , поток создается как поток демона. Виртуальная машина Java завершает работу, когда выполняются только потоки демона.</target>
        </trans-unit>
        <trans-unit id="681c744b4f800b84baa915faeffc9ff5bd83c80d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isNullOrEmpty&lt;/code&gt; and &lt;code&gt;orEmpty&lt;/code&gt; extensions for some types are already present in stdlib . The first one returns &lt;code&gt;true&lt;/code&gt; if the receiver is &lt;code&gt;null&lt;/code&gt; or empty, and the second one falls back to an empty instance if the receiver is &lt;code&gt;null&lt;/code&gt;. Kotlin 1.3 provides similar extensions on collections, maps, and arrays of objects.</source>
          <target state="translated">&lt;code&gt;isNullOrEmpty&lt;/code&gt; и &lt;code&gt;orEmpty&lt;/code&gt; для некоторых типов уже присутствуют в stdlib. Первый возвращает &lt;code&gt;true&lt;/code&gt; если получатель равен &lt;code&gt;null&lt;/code&gt; или пуст, а второй возвращается к пустому экземпляру, если получатель равен &lt;code&gt;null&lt;/code&gt; . Kotlin 1.3 предоставляет аналогичные расширения для коллекций, карт и массивов объектов.</target>
        </trans-unit>
        <trans-unit id="de90a696bcf57b1bcc31ff52baec77b7d9b7ca59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;it&lt;/code&gt; is used inside a lambda to &lt;a href=&quot;lambdas#it-implicit-name-of-a-single-parameter&quot;&gt;refer to its parameter implicitly&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;it&lt;/code&gt; используется внутри лямбда для &lt;a href=&quot;lambdas#it-implicit-name-of-a-single-parameter&quot;&gt;неявной ссылки на его параметр&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4aa50b82a0b8e0f99fc4186e17e98ebb7ffcf4b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;it&lt;/code&gt;: implicit name of a single parameter</source>
          <target state="translated">&lt;code&gt;it&lt;/code&gt; : неявное имя одного параметра</target>
        </trans-unit>
        <trans-unit id="ea358e1a14d266c00c6f85e11265be634997f6a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jar&lt;/code&gt; is disabled in favor of the target's JAR task (e.g. &lt;code&gt;jvmJar&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;jar&lt;/code&gt; отключен в пользу целевой задачи JAR (например, &lt;code&gt;jvmJar&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8bd780c3978b00b5702c58c38c5608cf9ed18504" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;javacArguments&lt;/code&gt;: A base64-encoded list of the options passed to javac. See &lt;a href=&quot;#apjavac-options-encoding&quot;&gt;AP/javac options encoding&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;javacArguments&lt;/code&gt; : список параметров в кодировке base64, переданных в javac. Для получения дополнительной информации см. &lt;a href=&quot;#apjavac-options-encoding&quot;&gt;Кодирование параметров AP / javac&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5bd2a62a78ed2b4ffde2081b0ff49dda401f06dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;joinToString()&lt;/code&gt; builds a single &lt;code&gt;String&lt;/code&gt; from the collection elements based on the provided arguments. &lt;code&gt;joinTo()&lt;/code&gt; does the same but appends the result to the given &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.text/-appendable/index&quot;&gt;&lt;code&gt;Appendable&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;joinToString()&lt;/code&gt; строит одну &lt;code&gt;String&lt;/code&gt; из элементов коллекции на основе предоставленных аргументов. &lt;code&gt;joinTo()&lt;/code&gt; делает то же самое, но добавляет результат к заданному объекту &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.text/-appendable/index&quot;&gt; &lt;code&gt;Appendable&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5e909b15f139ff5459b0205107b17607f4dd7103" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;js&lt;/code&gt; for Kotlin/JS;</source>
          <target state="translated">&lt;code&gt;js&lt;/code&gt; для Kotlin / JS;</target>
        </trans-unit>
        <trans-unit id="a707686185435c5406cec7e4c975d9359b0bb8e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jvm&lt;/code&gt; for Kotlin/JVM;</source>
          <target state="translated">&lt;code&gt;jvm&lt;/code&gt; для Kotlin / JVM;</target>
        </trans-unit>
        <trans-unit id="f697848dc8081d2a2c7a75b05f373534bb55ea65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;k&lt;/code&gt;, &lt;code&gt;v&lt;/code&gt; can be called anything.</source>
          <target state="translated">&lt;code&gt;k&lt;/code&gt; , &lt;code&gt;v&lt;/code&gt; можно назвать как угодно.</target>
        </trans-unit>
        <trans-unit id="ff8a7e682a2b1f9a53924e27c15255db032aee0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;: the key of the group this element belongs to;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; : ключ группы, к которой принадлежит этот элемент;</target>
        </trans-unit>
        <trans-unit id="ab4e881f29e68e9958b0eb0f70abc3ff801b7cdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;: the key of the group;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; : ключ группы;</target>
        </trans-unit>
        <trans-unit id="de5c81d32b0741611c5078f9b42f2916b5a9c709" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin-jslib&lt;/code&gt; in the compiler distribution: use &lt;code&gt;kotlin-stdlib-js&lt;/code&gt; instead</source>
          <target state="translated">&lt;code&gt;kotlin-jslib&lt;/code&gt; в дистрибутиве компилятора: вместо этого используйте &lt;code&gt;kotlin-stdlib-js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d70bd93f4539e5ca0184e65414eafc07ece123a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin-platform-native&lt;/code&gt; reference</source>
          <target state="translated">&lt;code&gt;kotlin-platform-native&lt;/code&gt; ссылка</target>
        </trans-unit>
        <trans-unit id="9edb4c87cf51275dfefa597af9b0ec6766a6898e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin-runtime&lt;/code&gt;: use &lt;code&gt;kotlin-stdlib&lt;/code&gt; instead</source>
          <target state="translated">&lt;code&gt;kotlin-runtime&lt;/code&gt; : вместо этого используйте &lt;code&gt;kotlin-stdlib&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d6c09d23fd2e37aeadc2e4b51c6221e0848f2d22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin-stdlib-jre7/8&lt;/code&gt;: use &lt;code&gt;kotlin-stdlib-jdk7/8&lt;/code&gt; instead</source>
          <target state="translated">&lt;code&gt;kotlin-stdlib-jre7/8&lt;/code&gt; : вместо этого используйте &lt;code&gt;kotlin-stdlib-jdk7/8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="69108a19c919a78e023d20f68f6e835e052613f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.Any&lt;/code&gt; is mapped to JavaScript Object (&lt;code&gt;new Object()&lt;/code&gt;, &lt;code&gt;{}&lt;/code&gt;, etc).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d44a61ea419b1e0b9d2afc609d339b1b0b5e0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.Any&lt;/code&gt; is mapped to JavaScript Object (i.e. &lt;code&gt;new Object()&lt;/code&gt;, &lt;code&gt;{}&lt;/code&gt;, etc).</source>
          <target state="translated">&lt;code&gt;kotlin.Any&lt;/code&gt; сопоставляется с объектом JavaScript (т.е. &lt;code&gt;new Object()&lt;/code&gt; , &lt;code&gt;{}&lt;/code&gt; и т. д.).</target>
        </trans-unit>
        <trans-unit id="2ddfcf2a8a79ecd8653558e192f93462d3c18e00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.Array&lt;/code&gt; is mapped to JavaScript Array.</source>
          <target state="translated">&lt;code&gt;kotlin.Array&lt;/code&gt; сопоставляется с массивом JavaScript.</target>
        </trans-unit>
        <trans-unit id="3f215bcad68b1060d49b48962f3879d3bb0e4f94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.BooleanArray&lt;/code&gt; is mapped to JavaScript Int8Array with a property &lt;code&gt;$type$ == &quot;BooleanArray&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;kotlin.BooleanArray&lt;/code&gt; сопоставляется с JavaScript Int8Array со свойством &lt;code&gt;$type$ == &quot;BooleanArray&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9a86c5dacfd9c6120320455c871be52e80b58d7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.ByteArray&lt;/code&gt;, &lt;code&gt;-.ShortArray&lt;/code&gt;, &lt;code&gt;-.IntArray&lt;/code&gt;, &lt;code&gt;-.FloatArray&lt;/code&gt;, and &lt;code&gt;-.DoubleArray&lt;/code&gt; are mapped to JavaScript Int8Array, Int16Array, Int32Array, Float32Array, and Float64Array correspondingly.</source>
          <target state="translated">&lt;code&gt;kotlin.ByteArray&lt;/code&gt; , &lt;code&gt;-.ShortArray&lt;/code&gt; , &lt;code&gt;-.IntArray&lt;/code&gt; , &lt;code&gt;-.FloatArray&lt;/code&gt; и &lt;code&gt;-.DoubleArray&lt;/code&gt; сопоставляются с JavaScript Int8Array, Int16Array, Int32Array, Float32Array и Float64Array соответственно.</target>
        </trans-unit>
        <trans-unit id="9bd0be38735d6b975409c2f81bca2f630826f4b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.Char&lt;/code&gt; is mapped to JavaScript Number representing character code.</source>
          <target state="translated">&lt;code&gt;kotlin.Char&lt;/code&gt; сопоставляется с числом JavaScript, представляющим код символа.</target>
        </trans-unit>
        <trans-unit id="cdcf3c9ad1d43abe08401cc671a2e77504e8aa9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.CharArray&lt;/code&gt; is mapped to JavaScript UInt16Array with a property &lt;code&gt;$type$ == &quot;CharArray&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;kotlin.CharArray&lt;/code&gt; сопоставляется с JavaScript UInt16Array со свойством &lt;code&gt;$type$ == &quot;CharArray&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c4e615d0b22b516fa1441732915a855e92d6a1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.Long&lt;/code&gt; is not mapped to any JavaScript object, as there is no 64-bit integer number type in JavaScript. It is emulated by a Kotlin class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51964479d0cc04679f9e087cb5cb10bd7104f508" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.LongArray&lt;/code&gt; is mapped to JavaScript Array of &lt;code&gt;kotlin.Long&lt;/code&gt; with a property &lt;code&gt;$type$ == &quot;LongArray&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;kotlin.LongArray&lt;/code&gt; сопоставляется с массивом JavaScript для &lt;code&gt;kotlin.Long&lt;/code&gt; со свойством &lt;code&gt;$type$ == &quot;LongArray&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40b593eac371c795dff3c154373e95d3cdc2318b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.String&lt;/code&gt; is mapped to JavaScript String.</source>
          <target state="translated">&lt;code&gt;kotlin.String&lt;/code&gt; сопоставляется со строкой JavaScript.</target>
        </trans-unit>
        <trans-unit id="659d48c3d2e9aebbcbdd04f2fd4373b7d80c0fe0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.Throwable&lt;/code&gt; is mapped to JavaScript Error.</source>
          <target state="translated">&lt;code&gt;kotlin.Throwable&lt;/code&gt; сопоставляется с ошибкой JavaScript.</target>
        </trans-unit>
        <trans-unit id="9fa8a2460cee8d76cd0b1e9ead686e66398c35dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.UByte&lt;/code&gt;: an unsigned 8-bit integer, ranges from 0 to 255</source>
          <target state="translated">&lt;code&gt;kotlin.UByte&lt;/code&gt; : 8-битное целое число без знака, диапазон от 0 до 255</target>
        </trans-unit>
        <trans-unit id="55ecdeee8026ceb1527dc5228dd9ee0242b1164d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.UByteArray&lt;/code&gt;: an array of unsigned bytes</source>
          <target state="translated">&lt;code&gt;kotlin.UByteArray&lt;/code&gt; : массив байтов без знака</target>
        </trans-unit>
        <trans-unit id="fe542874cceb8c831a2c348b62fc8e197df5b4de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.UInt&lt;/code&gt;: an unsigned 32-bit integer, ranges from 0 to 2^32 - 1</source>
          <target state="translated">&lt;code&gt;kotlin.UInt&lt;/code&gt; : 32-битное целое число без знака, от 0 до 2 ^ 32-1.</target>
        </trans-unit>
        <trans-unit id="53b868f94ce2ff2483b575ec530e7d864c04a613" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.UIntArray&lt;/code&gt;: an array of unsigned ints</source>
          <target state="translated">&lt;code&gt;kotlin.UIntArray&lt;/code&gt; : массив беззнаковых целых чисел</target>
        </trans-unit>
        <trans-unit id="b5300ade05ab7504b50adc690d42f105e4ee68ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.ULong&lt;/code&gt;: an unsigned 64-bit integer, ranges from 0 to 2^64 - 1</source>
          <target state="translated">&lt;code&gt;kotlin.ULong&lt;/code&gt; : 64-битное целое число без знака, от 0 до 2 ^ 64-1</target>
        </trans-unit>
        <trans-unit id="c91f3dac68dab1ad0547ccd10cb5bb4bc9498943" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.ULongArray&lt;/code&gt;: an array of unsigned longs</source>
          <target state="translated">&lt;code&gt;kotlin.ULongArray&lt;/code&gt; : массив длинных беззнаковых чисел</target>
        </trans-unit>
        <trans-unit id="db5ab1fc15c468d60456a286e46502fad9c4578b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.UShort&lt;/code&gt;: an unsigned 16-bit integer, ranges from 0 to 65535</source>
          <target state="translated">&lt;code&gt;kotlin.UShort&lt;/code&gt; : 16-битное целое число без знака, от 0 до 65535</target>
        </trans-unit>
        <trans-unit id="c762c7d7fdd2dfaf391c2acbcd2b5ab6356ab61c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.UShortArray&lt;/code&gt;: an array of unsigned shorts</source>
          <target state="translated">&lt;code&gt;kotlin.UShortArray&lt;/code&gt; : массив коротких замыканий без знака</target>
        </trans-unit>
        <trans-unit id="ab60d8ebec4141bcfd31ca712f4529ac99ebca09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.incremental.js=&amp;lt;value&amp;gt;&lt;/code&gt; for Kotlin/JS projects .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28288978f24e46740fcd55f57a4c8685217853bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.incremental=&amp;lt;value&amp;gt;&lt;/code&gt; for Kotlin/JVM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d3da956578fff7d75545b50c7da3120d547a4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlin.js&lt;/code&gt;. The runtime and standard library. This doesn't change between applications. It's tied to the version of Kotlin being used.</source>
          <target state="translated">&lt;code&gt;kotlin.js&lt;/code&gt; . Среда выполнения и стандартная библиотека. Это не меняется между приложениями. Это связано с используемой версией Kotlin.</target>
        </trans-unit>
        <trans-unit id="c2ea000a8effe62ea2560052e3aff3ee5917f015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kotlinx.coroutines&lt;/code&gt; is a rich library for coroutines developed by JetBrains. It contains a number of high-level coroutine-enabled primitives that this guide covers, including &lt;code&gt;launch&lt;/code&gt;, &lt;code&gt;async&lt;/code&gt; and others.</source>
          <target state="translated">&lt;code&gt;kotlinx.coroutines&lt;/code&gt; - это богатая библиотека сопрограмм, разработанная JetBrains. Он содержит ряд высокоуровневых примитивов с поддержкой сопрограмм, которые рассматриваются в этом руководстве, включая &lt;code&gt;launch&lt;/code&gt; , &lt;code&gt;async&lt;/code&gt; и другие.</target>
        </trans-unit>
        <trans-unit id="5f82fba44c63724ec2e93709793338db3d8e569f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lateinit&lt;/code&gt; allows initializing a &lt;a href=&quot;properties#late-initialized-properties-and-variables&quot;&gt;non-null property outside of a constructor&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;lateinit&lt;/code&gt; позволяет инициализировать &lt;a href=&quot;properties#late-initialized-properties-and-variables&quot;&gt;ненулевое свойство вне конструктора&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a0b3563766c38058ea4c77ba9ae974f57d2ee49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lateinit&lt;/code&gt; can only be used with &lt;code&gt;var&lt;/code&gt;, not with &lt;code&gt;val&lt;/code&gt;, and the type must be non-primitive and non-nullable.</source>
          <target state="translated">&lt;code&gt;lateinit&lt;/code&gt; можно использовать только с &lt;code&gt;var&lt;/code&gt; , но не с &lt;code&gt;val&lt;/code&gt; , и тип должен быть непримитивным и не допускающим значения NULL.</target>
        </trans-unit>
        <trans-unit id="47053d7865cd4d1362dd0fed3a07553e4bcf4bf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lateinit&lt;/code&gt; modifier;</source>
          <target state="translated">&lt;code&gt;lateinit&lt;/code&gt; модификатор lateinit ;</target>
        </trans-unit>
        <trans-unit id="59a5af96d0a80bd7bccbbc50ab23c1f600da2e28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length&lt;/code&gt; - the desired string length.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; - желаемая длина строки.</target>
        </trans-unit>
        <trans-unit id="c5f67685e8fb85c57bbdc9d9d7db128bf5c55c6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length&lt;/code&gt; - the length of the portion of the array to read.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; - длина части массива для чтения.</target>
        </trans-unit>
        <trans-unit id="a123d5c22ab2a54bb2467057b241dc254d99292a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length&lt;/code&gt; - the length of the substring to compare.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; - длина подстроки для сравнения.</target>
        </trans-unit>
        <trans-unit id="d9cc168ae9309d396e193854fa2e497d466b8aa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length&lt;/code&gt; - the number of bytes to be converted.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; - количество байтов, которые нужно преобразовать.</target>
        </trans-unit>
        <trans-unit id="e551de8b7f6a686a65bd70d06d97e7a7c117cbbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; can be used to invoke one or more functions on results of call chains. For example, the following code prints the results of two operations on a collection:</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; можно использовать для вызова одной или нескольких функций по результатам цепочек вызовов. Например, следующий код печатает результаты двух операций над коллекцией:</target>
        </trans-unit>
        <trans-unit id="fe705198c64b22461a258c472dd254519e542ea4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; is often used for executing a code block only with non-null values. To perform actions on a non-null object, use the safe call operator &lt;code&gt;?.&lt;/code&gt; on it and call &lt;code&gt;let&lt;/code&gt; with the actions in its lambda.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; часто используется для выполнения блока кода только с ненулевыми значениями. Для выполнения действий с ненулевым объектом используйте безопасный оператор вызова &lt;code&gt;?.&lt;/code&gt; на нем и вызовите &lt;code&gt;let&lt;/code&gt; с действиями в его лямбде.</target>
        </trans-unit>
        <trans-unit id="f39dab5586b77abb09839bb50cf60ada67479e37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt;, &lt;code&gt;run&lt;/code&gt;, and &lt;code&gt;with&lt;/code&gt; return the lambda result.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; , &lt;code&gt;run&lt;/code&gt; и &lt;code&gt;with&lt;/code&gt; возвращением лямбда-результата.</target>
        </trans-unit>
        <trans-unit id="dc178cbf3d417c488cd76dd0ba0df9c30201e6a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt;, &lt;code&gt;run&lt;/code&gt;, and &lt;code&gt;with&lt;/code&gt; return the lambda result. So, you can use them when assigning the result to a variable, chaining operations on the result, and so on.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; , &lt;code&gt;run&lt;/code&gt; и &lt;code&gt;with&lt;/code&gt; возвращением лямбда-результата. Таким образом, вы можете использовать их при присвоении результата переменной, объединении операций над результатом и т. Д.</target>
        </trans-unit>
        <trans-unit id="6540140321404c7beb48cb8d41c1d076d0ad9902" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;level&lt;/code&gt; - Specifies how the deprecated element usages are reported in code. See the &lt;a href=&quot;../-deprecation-level/index#kotlin.DeprecationLevel&quot;&gt;DeprecationLevel&lt;/a&gt; enum for the possible values.</source>
          <target state="translated">&lt;code&gt;level&lt;/code&gt; - указывает, как использование устаревших элементов отображается в коде. См. Возможные значения в перечислении &lt;a href=&quot;../-deprecation-level/index#kotlin.DeprecationLevel&quot;&gt;DeprecationLevel&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f52f5c62d7318037ef9d40f8fdaba593bc1b0344" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;limit&lt;/code&gt; -</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="208df0bf5d40aa3cae90380f2554f8371ca7e880" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;limit&lt;/code&gt; - Non-negative value specifying the maximum number of substrings the string can be split to. Zero by default means no limit is set.</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; - неотрицательное значение, определяющее максимальное количество подстрок, на которые может быть разделена строка. Ноль по умолчанию означает, что ограничение не установлено.</target>
        </trans-unit>
        <trans-unit id="d06bb1e204b58f4ad96b54b0bcd05a20c0a7ddae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;limit&lt;/code&gt; - Non-negative value specifying the maximum number of substrings to return. Zero by default means no limit is set.</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; - неотрицательное значение, определяющее максимальное количество возвращаемых подстрок. Ноль по умолчанию означает, что ограничение не установлено.</target>
        </trans-unit>
        <trans-unit id="185232970a0ccd48f8d36fc01a8b97c7d74a583f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;limit&lt;/code&gt; - The maximum number of substrings to return.</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; - максимальное количество возвращаемых подстрок.</target>
        </trans-unit>
        <trans-unit id="996cb31faa7091a408533c92f1605440669d6c82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;linuxArm32Hfp&lt;/code&gt;, &lt;code&gt;linuxMips32&lt;/code&gt;, &lt;code&gt;linuxMipsel32&lt;/code&gt;, &lt;code&gt;linuxX64&lt;/code&gt; for Linux;</source>
          <target state="translated">&lt;code&gt;linuxArm32Hfp&lt;/code&gt; , &lt;code&gt;linuxMips32&lt;/code&gt; , &lt;code&gt;linuxMipsel32&lt;/code&gt; , &lt;code&gt;linuxX64&lt;/code&gt; для Linux;</target>
        </trans-unit>
        <trans-unit id="7eaf9b61690a4c5efc748e6664d0249c907fc836" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ln(+Inf)&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ln(+Inf)&lt;/code&gt; равно &lt;code&gt;+Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="252e73347a18f8bb8350262b3bd9c8566aec27e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ln(0.0)&lt;/code&gt; is &lt;code&gt;-Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ln(0.0)&lt;/code&gt; равно &lt;code&gt;-Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2593060e4a854271ebc6ff65b6483ed85aca28ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ln(NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ln(NaN)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b8895ee0a78645b4b9c622865b5b229403169b21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ln(x)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; when &lt;code&gt;x &amp;lt; 0.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ln(x)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt; , когда &lt;code&gt;x &amp;lt; 0.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d32e977cf0dd497316b051e4c5a4d1b8c1668dcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ln1p(+Inf)&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ln1p(+Inf)&lt;/code&gt; равно &lt;code&gt;+Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="453056e570960655e4d47d15bb3b675fe54808db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ln1p(-1.0)&lt;/code&gt; is &lt;code&gt;-Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ln1p(-1.0)&lt;/code&gt; равно &lt;code&gt;-Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b4702bf0ad629b7d81ff384b1a72af88f6eb0a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ln1p(NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ln1p(NaN)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3cc8921af2631a539159df90811cad409ebb4c73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ln1p(x)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; where &lt;code&gt;x &amp;lt; -1.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ln1p(x)&lt;/code&gt; является &lt;code&gt;NaN&lt;/code&gt; , где &lt;code&gt;x &amp;lt; -1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f18babb62aef788b1e852582f82afe6752be400" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loadFactor&lt;/code&gt; - the load factor (ignored)</source>
          <target state="translated">&lt;code&gt;loadFactor&lt;/code&gt; - коэффициент загрузки (игнорируется)</target>
        </trans-unit>
        <trans-unit id="f0659f8f29af75053650a20bee7d9878080e5c9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log(+Inf, +Inf)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;log(+Inf, +Inf)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f9fcf4db999d97d7d238b1872e876501b301349" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log(+Inf, b)&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt; for &lt;code&gt;b &amp;gt; 1&lt;/code&gt; and &lt;code&gt;-Inf&lt;/code&gt; for &lt;code&gt;b &amp;lt; 1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;log(+Inf, b)&lt;/code&gt; равно &lt;code&gt;+Inf&lt;/code&gt; для &lt;code&gt;b &amp;gt; 1&lt;/code&gt; и &lt;code&gt;-Inf&lt;/code&gt; для &lt;code&gt;b &amp;lt; 1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4bcb4d7205bbda0cca1f7fe9d0e18f4c91575924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log(0.0, b)&lt;/code&gt; is &lt;code&gt;-Inf&lt;/code&gt; for &lt;code&gt;b &amp;gt; 1&lt;/code&gt; and &lt;code&gt;+Inf&lt;/code&gt; for &lt;code&gt;b &amp;gt; 1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;log(0.0, b)&lt;/code&gt; равно &lt;code&gt;-Inf&lt;/code&gt; для &lt;code&gt;b &amp;gt; 1&lt;/code&gt; и &lt;code&gt;+Inf&lt;/code&gt; для &lt;code&gt;b &amp;gt; 1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9bf6a10920924469889cc579295db4bd6dabf9b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log(x, b)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; if either &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;log(x, b)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt; , если &lt;code&gt;x&lt;/code&gt; или &lt;code&gt;b&lt;/code&gt; равны &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48b7bfd0270001a14346785eb0b107e7ec23af52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log(x, b)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; when &lt;code&gt;x &amp;lt; 0&lt;/code&gt; or &lt;code&gt;b &amp;lt;= 0&lt;/code&gt; or &lt;code&gt;b == 1.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;log(x, b)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt; , когда &lt;code&gt;x &amp;lt; 0&lt;/code&gt; или &lt;code&gt;b &amp;lt;= 0&lt;/code&gt; или &lt;code&gt;b == 1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3a17174ddefa3c240ec9b5428c4a695f7b64287" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;macosX64&lt;/code&gt; for MacOS;</source>
          <target state="translated">&lt;code&gt;macosX64&lt;/code&gt; для MacOS;</target>
        </trans-unit>
        <trans-unit id="dbeb272e7f89ac7dac73c641f4be4499d4cd2be6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;main([]);&lt;/code&gt;: a call of the &lt;code&gt;main&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;main([]);&lt;/code&gt; : вызов &lt;code&gt;main&lt;/code&gt; функции.</target>
        </trans-unit>
        <trans-unit id="e69612f279814b811d3fc6078abd9151f622c2b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;main&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; compilations for JVM, JS, and Native targets;</source>
          <target state="translated">&lt;code&gt;main&lt;/code&gt; и &lt;code&gt;test&lt;/code&gt; компиляции для целей JVM, JS и Native;</target>
        </trans-unit>
        <trans-unit id="26bac2457d8e6e02f39f9164fa073d3d3cf2ae86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;marginPrefix&lt;/code&gt; - non-blank string, which is used as a margin delimiter. Default is &lt;code&gt;|&lt;/code&gt; (pipe character).</source>
          <target state="translated">&lt;code&gt;marginPrefix&lt;/code&gt; - непустая строка, которая используется как разделитель полей. По умолчанию &lt;code&gt;|&lt;/code&gt; (символ трубы).</target>
        </trans-unit>
        <trans-unit id="a5727d9111c741b27f9daa6a06d7e82e1c4fd1e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mathContext&lt;/code&gt; - specifies the precision and the rounding mode.</source>
          <target state="translated">&lt;code&gt;mathContext&lt;/code&gt; - указывает точность и режим округления.</target>
        </trans-unit>
        <trans-unit id="fd13b61c3a876d813b06d8d27211349f43668229" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max&lt;/code&gt; and &lt;code&gt;min&lt;/code&gt; of two values;</source>
          <target state="translated">&lt;code&gt;max&lt;/code&gt; и &lt;code&gt;min&lt;/code&gt; двух значений;</target>
        </trans-unit>
        <trans-unit id="f38e78071ae592eb02eb59a9dd54350331d7e3b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxSpeed&lt;/code&gt; and &lt;code&gt;horsepowers&lt;/code&gt;, which are inherited from &lt;code&gt;MotorVehicle&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;maxSpeed&lt;/code&gt; и &lt;code&gt;horsepowers&lt;/code&gt; , унаследованные от &lt;code&gt;MotorVehicle&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0178aa57547ec9fda6f96912d87656568ceb8a49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; - The message explaining the deprecation and recommending an alternative API to use.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; - сообщение, объясняющее устаревание и рекомендующее использовать альтернативный API.</target>
        </trans-unit>
        <trans-unit id="69954a17845ed686114d3646757964c5ce2b5f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; - the detail message string.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; - строка подробного сообщения.</target>
        </trans-unit>
        <trans-unit id="7aa3f56c6672dbd3162619f55c00a0fa601f3c1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mingwX64&lt;/code&gt; and &lt;code&gt;mingwX86&lt;/code&gt; for Windows;</source>
          <target state="translated">&lt;code&gt;mingwX64&lt;/code&gt; и &lt;code&gt;mingwX86&lt;/code&gt; для Windows;</target>
        </trans-unit>
        <trans-unit id="267160ff261db7f19167c9dd54fea15141f714be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minus&lt;/code&gt; creates a &lt;code&gt;Map&lt;/code&gt; from entries of a &lt;code&gt;Map&lt;/code&gt; on the left except those with keys from the right-hand side operand. So, the right-hand side operand can be either a single key or a collection of keys: list, set, and so on.</source>
          <target state="translated">&lt;code&gt;minus&lt;/code&gt; создает &lt;code&gt;Map&lt;/code&gt; из записей &lt;code&gt;Map&lt;/code&gt; слева, за исключением тех, у которых ключи от правого операнда. Итак, правый операнд может быть либо одним ключом, либо набором ключей: список, набор и т. Д.</target>
        </trans-unit>
        <trans-unit id="988b67650cf5accf92fe098a86492ee65cfddc43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod&lt;/code&gt; operator convention</source>
          <target state="translated">&lt;code&gt;mod&lt;/code&gt; соглашение об операторе мода</target>
        </trans-unit>
        <trans-unit id="dcbf7185909cbc4639d523ca983d079ca2be2a59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - defines the optional name of this worker, if none - default naming is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5b5e36367f2b5720885e31db4553ac0624e9fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - the name of the element.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - название элемента.</target>
        </trans-unit>
        <trans-unit id="6235ae131413288e1ad1541828056ee77ac6f50c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - the name of the thread.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - название темы.</target>
        </trans-unit>
        <trans-unit id="56831cce1ac10281427a82b03d4a290f0b3e2091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - the name to use for the thread which is running the timer.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - имя, которое будет использоваться для потока, который запускает таймер.</target>
        </trans-unit>
        <trans-unit id="7fefd14206e17fee67936f93d8bb7b6202585842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - the name which compiler uses both for declaration itself and for all references to the declaration. It's required to denote a valid JavaScript identifier.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - имя, которое компилятор использует как для самого объявления, так и для всех ссылок на объявление. Требуется указать действительный идентификатор JavaScript.</target>
        </trans-unit>
        <trans-unit id="0cc326db8cb5ff54bd2faea12c15dbece4695569" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;names&lt;/code&gt; - names of the compiler diagnostics to suppress.</source>
          <target state="translated">&lt;code&gt;names&lt;/code&gt; - имена диагностик компилятора, которые нужно подавить.</target>
        </trans-unit>
        <trans-unit id="ae0634b94bbd8a34abb02bec7888d9a010a2b264" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new value&lt;/code&gt; &amp;mdash; must be of the same type as the property or its subtype.</source>
          <target state="translated">&lt;code&gt;new value&lt;/code&gt; - должно быть того же типа, что и свойство или его подтип.</target>
        </trans-unit>
        <trans-unit id="ace8d18319ba4a90a94060c1b1c435fd947d410b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new&lt;/code&gt; - the new value</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; - новое значение</target>
        </trans-unit>
        <trans-unit id="3bcca1c2c4cfe6988423b94bdd43815e502e35b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nextUp&lt;/code&gt;, &lt;code&gt;nextDown&lt;/code&gt;, &lt;code&gt;nextTowards&lt;/code&gt; extension functions;</source>
          <target state="translated">&lt;code&gt;nextUp&lt;/code&gt; функции расширения nextUp , &lt;code&gt;nextDown&lt;/code&gt; , &lt;code&gt;nextTowards&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="ed51d6e0299c2fb8e3d3bc33bcd5b22ef4fb4be1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noStringConversion&lt;/code&gt; property value is space-separated lists of the functions whose &lt;code&gt;const char*&lt;/code&gt; parameters shall not be autoconverted as Kotlin string</source>
          <target state="translated">&lt;code&gt;noStringConversion&lt;/code&gt; свойства noStringConversion - это разделенные пробелами списки функций, параметры которых &lt;code&gt;const char*&lt;/code&gt; не должны автоматически преобразовываться в строку Kotlin</target>
        </trans-unit>
        <trans-unit id="05a0c8ff6a3c213a67a9ee469db4827fa63ce669" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noinline&lt;/code&gt; turns off &lt;a href=&quot;inline-functions#noinline&quot;&gt;inlining of a lambda passed to an inline function&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;noinline&lt;/code&gt; отключает &lt;a href=&quot;inline-functions#noinline&quot;&gt;встраивание лямбды, переданной встроенной функции&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36297d07fe34068128422f55af6a43def97f5318" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt; is a constant representing an object reference that doesn't point to any object</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; - это константа, представляющая ссылку на объект, которая не указывает ни на какой объект</target>
        </trans-unit>
        <trans-unit id="1068fc03044320a95496c7fdf93f1a4da1b38f0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt; value is considered to be less than any non-null value.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; значение считается меньше любого ненулевого значения.</target>
        </trans-unit>
        <trans-unit id="334180cb811d90900ac4efec28ceda74c1452e33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt;-checks are disabled for such values.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; Для таких значений нулевые проверки отключены.</target>
        </trans-unit>
        <trans-unit id="3dee0989da925e42e26f7b7db864ab21298e9104" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt;-checks are disabled for values of type &lt;code&gt;dynamic&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ba108e8fde1f1b4730082255c210938d1874dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt; declares &lt;a href=&quot;object-declarations&quot;&gt;a class and its instance at the same time&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; объявляет &lt;a href=&quot;object-declarations&quot;&gt;класс и его экземпляр одновременно&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3a944d208de06158465d383160a1c8a51d2fecb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;offset&lt;/code&gt; - the offset in the array of the data to be converted.</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; - смещение в массиве данных, которые нужно преобразовать.</target>
        </trans-unit>
        <trans-unit id="8120bdf65433d32e076766e7ab1b7c3d1d03b966" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;offset&lt;/code&gt; - the start offset of the portion of the array to read.</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; - начальное смещение части массива для чтения.</target>
        </trans-unit>
        <trans-unit id="fcbd11d6992f04df0a96f8e3d24ee5a62de8bece" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onChange&lt;/code&gt; - the callback which is called after the change of the property is made. The value of the property has already been changed when this callback is invoked.</source>
          <target state="translated">&lt;code&gt;onChange&lt;/code&gt; - обратный вызов, который вызывается после изменения свойства. Значение свойства уже было изменено при вызове этого обратного вызова.</target>
        </trans-unit>
        <trans-unit id="5bd8e7fd457a57ac8471e4aacebd37f1f3bba183" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onChange&lt;/code&gt; - the callback which is called before a change to the property value is attempted. The value of the property hasn't been changed yet, when this callback is invoked. If the callback returns &lt;code&gt;true&lt;/code&gt; the value of the property is being set to the new value, and if the callback returns &lt;code&gt;false&lt;/code&gt; the new value is discarded and the property remains its old value.</source>
          <target state="translated">&lt;code&gt;onChange&lt;/code&gt; - обратный вызов, который вызывается перед попыткой изменения значения свойства. При вызове этого обратного вызова значение свойства еще не изменилось. Если обратный вызов возвращает &lt;code&gt;true&lt;/code&gt; значение свойства устанавливается на новое значение, а если обратный вызов возвращает &lt;code&gt;false&lt;/code&gt; новое значение отбрасывается, а свойство остается прежним.</target>
        </trans-unit>
        <trans-unit id="bd0af8f0f4441f0dd5c8e3ec2ac8ee31da629ce2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onEach&lt;/code&gt; is a small, but useful extension function for collections and sequences, which allows to perform some action, possibly with side-effects, on each element of the collection/sequence in a chain of operations. On iterables it behaves like &lt;code&gt;forEach&lt;/code&gt; but also returns the iterable instance further. And on sequences it returns a wrapping sequence, which applies the given action lazily as the elements are being iterated.</source>
          <target state="translated">&lt;code&gt;onEach&lt;/code&gt; - это небольшая, но полезная функция расширения для коллекций и последовательностей, которая позволяет выполнять некоторые действия, возможно, с побочными эффектами, над каждым элементом коллекции / последовательности в цепочке операций. На итерациях он ведет себя как &lt;code&gt;forEach&lt;/code&gt; , но также возвращает итеративный экземпляр дальше. И для последовательностей он возвращает последовательность обертывания, которая лениво применяет данное действие по мере итерации элементов.</target>
        </trans-unit>
        <trans-unit id="e904ec087d6b0daa0ca01993e45c332a47f884f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;open&lt;/code&gt; allows &lt;a href=&quot;classes#inheritance&quot;&gt;subclassing a class or overriding a member&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;open&lt;/code&gt; позволяет &lt;a href=&quot;classes#inheritance&quot;&gt;создать подкласс класса или переопределить член&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff40089b7efd684f476ea88fc60502882cb7ea01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; -</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="07b99c04ea1829b2394f976c655390997c8969b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - a function that is invoked on each element with the following parameters:</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; - функция, которая вызывается для каждого элемента со следующими параметрами:</target>
        </trans-unit>
        <trans-unit id="248b36e5b9cea14adb1d1632ffd922f8a21f7211" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - a function that is invoked on each subsequent element of the group with the following parameters:</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; - функция, которая вызывается для каждого последующего элемента группы со следующими параметрами:</target>
        </trans-unit>
        <trans-unit id="e2ee0282f792518493f58e943267d8efcc3288db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function is invoked on each element with the following parameters:</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; - функция вызывается для каждого элемента со следующими параметрами:</target>
        </trans-unit>
        <trans-unit id="6287ec8459cc8d1cf2e3acb118273cbc25f9a67d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes a character and current accumulator value, and calculates the next accumulator value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db62e5cd2362bc39a9d14e868088187e4aaf6b13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes an element and current accumulator value, and calculates the next accumulator value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c581448ef7c64fde844bffec16be13541a816fb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes current accumulator value and a character, and calculates the next accumulator value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b1db3a5719f482665d91987cdb4317d3e9853a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes current accumulator value and an element, and calculates the next accumulator value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc1b221c737a0161b2a21c10d217e38462c4ade" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes the index of a character, current accumulator value and the character itself and calculates the next accumulator value.</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; - функция, которая принимает индекс символа, текущее значение аккумулятора и сам символ и вычисляет следующее значение аккумулятора.</target>
        </trans-unit>
        <trans-unit id="ba9c3bd14120f260b4f8e64489c22c68aa16564b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes the index of a character, current accumulator value and the character itself, and calculates the next accumulator value.</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; - функция, которая принимает индекс символа, текущее значение аккумулятора и сам символ и вычисляет следующее значение аккумулятора.</target>
        </trans-unit>
        <trans-unit id="f3dfc746053a52619623276197f45f33b5ecb26d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes the index of a character, the character itself and current accumulator value, and calculates the next accumulator value.</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; - функция, которая принимает индекс символа, сам символ и текущее значение аккумулятора и вычисляет следующее значение аккумулятора.</target>
        </trans-unit>
        <trans-unit id="a2f5a2634dcfd83cfd21d6a9d72e6de1b8cdcc04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes the index of an element, current accumulator value and the element itself and calculates the next accumulator value.</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; - функция, которая принимает индекс элемента, текущее значение аккумулятора и сам элемент и вычисляет следующее значение аккумулятора.</target>
        </trans-unit>
        <trans-unit id="02e8057805378f6f4959a5114b1e0c8c72e8a698" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes the index of an element, current accumulator value and the element itself, and calculates the next accumulator value.</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; - функция, которая принимает индекс элемента, текущее значение аккумулятора и сам элемент и вычисляет следующее значение аккумулятора.</target>
        </trans-unit>
        <trans-unit id="040dd6574f8413112a5e75a2983637acf71a1379" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operation&lt;/code&gt; - function that takes the index of an element, the element itself and current accumulator value, and calculates the next accumulator value.</source>
          <target state="translated">&lt;code&gt;operation&lt;/code&gt; - функция, которая принимает индекс элемента, сам элемент и текущее значение аккумулятора и вычисляет следующее значение аккумулятора.</target>
        </trans-unit>
        <trans-unit id="5b067faadea8fe2e509cda471afed4b9a218621e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt; can also be used for certain other predefined functions in order to create fancy effects, such as &lt;a href=&quot;inheritance#delegated-properties&quot;&gt;delegated properties&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; также может использоваться для некоторых других предопределенных функций для создания необычных эффектов, таких как &lt;a href=&quot;inheritance#delegated-properties&quot;&gt;делегированные свойства&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="95654b15a18c309b6235b5117183f93417c5d312" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt; marks a function as &lt;a href=&quot;operator-overloading&quot;&gt;overloading an operator or implementing a convention&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; отмечает функцию как &lt;a href=&quot;operator-overloading&quot;&gt;перегрузку оператора или реализацию соглашения&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b699b1ab0bb21c7420027041f3fbf6dc5f9a2423" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;or(bits)&lt;/code&gt; &amp;ndash; bitwise &lt;strong&gt;or&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd45210ebe76bf8c9d596dbc0bd1c602c3e9156" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;or(bits)&lt;/code&gt; &amp;ndash; bitwise or</source>
          <target state="translated">&lt;code&gt;or(bits)&lt;/code&gt; - побитовое или</target>
        </trans-unit>
        <trans-unit id="0417518c8faa0d30af999be7aa738560e49d1684" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;other&lt;/code&gt; - the second file involved in the operation, if any (for example, the target of a copy or move)</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; - второй файл, участвующий в операции, если он есть (например, цель копирования или перемещения)</target>
        </trans-unit>
        <trans-unit id="bb20a2a448ff12b6516746fa32432684ec92ed0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;other&lt;/code&gt; - the string against a substring of which the comparison is performed.</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; - строка, с подстрокой которой производится сравнение.</target>
        </trans-unit>
        <trans-unit id="fd1894c3bcae99eca6d992390ddbf52aaa027cc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;otherOffset&lt;/code&gt; - the start offset in the other char sequence of the substring to compare.</source>
          <target state="translated">&lt;code&gt;otherOffset&lt;/code&gt; - начальное смещение в другой последовательности символов подстроки для сравнения.</target>
        </trans-unit>
        <trans-unit id="2c87226a909e3b81c0afe8efaffdd2d21cb277a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;otherOffset&lt;/code&gt; - the start offset in the other string of the substring to compare.</source>
          <target state="translated">&lt;code&gt;otherOffset&lt;/code&gt; - начальное смещение в другой строке сравниваемой подстроки.</target>
        </trans-unit>
        <trans-unit id="278f0f16ac78072a8cba927937acd7f2f05a2391" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;out&lt;/code&gt; - writer to write to.</source>
          <target state="translated">&lt;code&gt;out&lt;/code&gt; - писатель, которому нужно написать.</target>
        </trans-unit>
        <trans-unit id="16c0fd496d4fff9161f7d9ca668c90772211d02f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;out&lt;/code&gt; marks a type parameter as &lt;a href=&quot;generics#declaration-site-variance&quot;&gt;covariant&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;out&lt;/code&gt; отмечает параметр типа как &lt;a href=&quot;generics#declaration-site-variance&quot;&gt;ковариантный&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fde49d9720c995254e8b80d376d43b1b6ce6a80b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;override&lt;/code&gt; marks a member as an &lt;a href=&quot;classes#overriding-methods&quot;&gt;override of a superclass member&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;override&lt;/code&gt; отмечает член как &lt;a href=&quot;classes#overriding-methods&quot;&gt;переопределение члена суперкласса&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="26962046c0df7da84035dbd93e8153ed382e3f4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;overwrite&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; if destination overwrite is allowed.</source>
          <target state="translated">&lt;code&gt;overwrite&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; если разрешена перезапись места назначения.</target>
        </trans-unit>
        <trans-unit id="2e9b081e48d7cab3fbcabb38cde0858f4dd92ef7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;overwrite&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; if it is allowed to overwrite existing destination files and directories.</source>
          <target state="translated">&lt;code&gt;overwrite&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; , если разрешено перезаписывать существующие файлы и каталоги назначения.</target>
        </trans-unit>
        <trans-unit id="c14ba6252e54c8220dc6cf80d69d0274bff1b72e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;package&lt;/code&gt; specifies the &lt;a href=&quot;packages&quot;&gt;package for the current file&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;package&lt;/code&gt; указывает &lt;a href=&quot;packages&quot;&gt;пакет для текущего файла&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a233b575d588b308b8f3f49a9a0e445768b13910" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padChar&lt;/code&gt; - the character to pad string with, if it has length less than the &lt;a href=&quot;pad-end#kotlin.text%24padEnd%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;length&lt;/a&gt; specified. Space is used by default.</source>
          <target state="translated">&lt;code&gt;padChar&lt;/code&gt; - символ в строку площадки с, если она имеет длину меньше , чем &lt;a href=&quot;pad-end#kotlin.text%24padEnd%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;длина&lt;/a&gt; указана. По умолчанию используется пробел.</target>
        </trans-unit>
        <trans-unit id="bd5f42bf06fd521604498e289daa482258243b4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padChar&lt;/code&gt; - the character to pad string with, if it has length less than the &lt;a href=&quot;pad-end#kotlin.text%24padEnd%28kotlin.String%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;length&lt;/a&gt; specified. Space is used by default.</source>
          <target state="translated">&lt;code&gt;padChar&lt;/code&gt; - символ в строку площадки с, если она имеет длину меньше , чем &lt;a href=&quot;pad-end#kotlin.text%24padEnd%28kotlin.String%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;длина&lt;/a&gt; указана. По умолчанию используется пробел.</target>
        </trans-unit>
        <trans-unit id="7a0ab02a23655680af43d524301ec25b6ed4cb87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padChar&lt;/code&gt; - the character to pad string with, if it has length less than the &lt;a href=&quot;pad-end#kotlin.text%24padEnd(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Char)/length&quot;&gt;length&lt;/a&gt; specified. Space is used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4e8ced26c11bcb7aaf2a7708d75a848f2cb973" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padChar&lt;/code&gt; - the character to pad string with, if it has length less than the &lt;a href=&quot;pad-end#kotlin.text%24padEnd(kotlin.String,%20kotlin.Int,%20kotlin.Char)/length&quot;&gt;length&lt;/a&gt; specified. Space is used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378933c6c2d1f9e9920876580e36b05e9b8d8efd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padChar&lt;/code&gt; - the character to pad string with, if it has length less than the &lt;a href=&quot;pad-start#kotlin.text%24padStart%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;length&lt;/a&gt; specified. Space is used by default.</source>
          <target state="translated">&lt;code&gt;padChar&lt;/code&gt; - символ в строку площадки с, если она имеет длину меньше , чем &lt;a href=&quot;pad-start#kotlin.text%24padStart%28kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;длина&lt;/a&gt; указана. По умолчанию используется пробел.</target>
        </trans-unit>
        <trans-unit id="87eeb6c9880e5e71d0479ba97d1c1e287e21e51b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padChar&lt;/code&gt; - the character to pad string with, if it has length less than the &lt;a href=&quot;pad-start#kotlin.text%24padStart%28kotlin.String%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;length&lt;/a&gt; specified. Space is used by default.</source>
          <target state="translated">&lt;code&gt;padChar&lt;/code&gt; - символ в строку площадки с, если она имеет длину меньше , чем &lt;a href=&quot;pad-start#kotlin.text%24padStart%28kotlin.String%2C+kotlin.Int%2C+kotlin.Char%29%2Flength&quot;&gt;длина&lt;/a&gt; указана. По умолчанию используется пробел.</target>
        </trans-unit>
        <trans-unit id="60c8c4d95e5ec14e0725c67cc10480fc7bcf6421" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padChar&lt;/code&gt; - the character to pad string with, if it has length less than the &lt;a href=&quot;pad-start#kotlin.text%24padStart(kotlin.CharSequence,%20kotlin.Int,%20kotlin.Char)/length&quot;&gt;length&lt;/a&gt; specified. Space is used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fe37aabf7bfc27f14b485e23f5066aa4d948de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padChar&lt;/code&gt; - the character to pad string with, if it has length less than the &lt;a href=&quot;pad-start#kotlin.text%24padStart(kotlin.String,%20kotlin.Int,%20kotlin.Char)/length&quot;&gt;length&lt;/a&gt; specified. Space is used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f627d3fa9e23e2203a00e2793f1fff7a22aa25a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;param&lt;/code&gt; (constructor parameter);</source>
          <target state="translated">&lt;code&gt;param&lt;/code&gt; (параметр конструктора);</target>
        </trans-unit>
        <trans-unit id="876f5a1dc4c597977d50707f9b50fb0abc3ad55f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;param&lt;/code&gt; is used as an &lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;annotation use-site target&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;param&lt;/code&gt; используется в качестве &lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;цели использования аннотации&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="901b369de442aad5ab3ae75e055c03e25e33f53f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;param&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;param&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="e276fe6573ffb36e406150493494379285bc9c8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partialWindows&lt;/code&gt; - controls whether or not to keep partial windows in the end if any, by default &lt;code&gt;false&lt;/code&gt; which means partial windows won't be preserved</source>
          <target state="translated">&lt;code&gt;partialWindows&lt;/code&gt; - определяет, сохранять ли частичные окна в конце, если они есть, по умолчанию &lt;code&gt;false&lt;/code&gt; , что означает, что частичные окна не будут сохранены</target>
        </trans-unit>
        <trans-unit id="03307a7e15abd3869cc4eb9931070c2c66b67566" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;partialWindows&lt;/code&gt; includes windows of smaller sizes that start from the elements at the end of the collection. For example, if you request windows of three elements, you can't build them for the last two elements. Enabling &lt;code&gt;partialWindows&lt;/code&gt; in this case includes two more lists of sizes 2 and 1.</source>
          <target state="translated">&lt;code&gt;partialWindows&lt;/code&gt; включает окна меньшего размера, которые начинаются с элементов в конце коллекции. Например, если вы запрашиваете окна из трех элементов, вы не можете построить их для последних двух элементов. Включение &lt;code&gt;partialWindows&lt;/code&gt; в этом случае включает еще два списка размеров 2 и 1.</target>
        </trans-unit>
        <trans-unit id="f2d394959b391b289e117e32c942748943fc04a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plus&lt;/code&gt; and &lt;code&gt;minus&lt;/code&gt; Operators</source>
          <target state="translated">&lt;code&gt;plus&lt;/code&gt; операторы плюс и &lt;code&gt;minus&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="494290e91b6acda25f5d2f8130edbbea915551b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plus&lt;/code&gt; and &lt;code&gt;minus&lt;/code&gt; operators</source>
          <target state="translated">&lt;code&gt;plus&lt;/code&gt; операторы плюс и &lt;code&gt;minus&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b49b180353e64fc6e5d9f7cdff02fc5294156b0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pointer&lt;/code&gt; - value returned earlier by &lt;a href=&quot;as-c-pointer&quot;&gt;Worker.asCPointer&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;pointer&lt;/code&gt; - значение, возвращенное ранее &lt;a href=&quot;as-c-pointer&quot;&gt;Worker.asCPointer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="83c8f8709e3b990c9d3a5aec7ee5a2b395d10020" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;predicate&lt;/code&gt; -</source>
          <target state="translated">&lt;code&gt;predicate&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="60de56b1c096594153c02aa153a88c551524ad51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;predicate&lt;/code&gt; - function that takes the index of a character and the character itself and returns the result of predicate evaluation on the character.</source>
          <target state="translated">&lt;code&gt;predicate&lt;/code&gt; - функция, которая принимает индекс символа и самого символа и возвращает результат оценки предиката для символа.</target>
        </trans-unit>
        <trans-unit id="4bbf5867532295d9c456bd64904fdfdeb406eaf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;predicate&lt;/code&gt; - function that takes the index of an element and the element itself and returns the result of predicate evaluation on the element.</source>
          <target state="translated">&lt;code&gt;predicate&lt;/code&gt; - функция, которая принимает индекс элемента и самого элемента и возвращает результат оценки предиката для элемента.</target>
        </trans-unit>
        <trans-unit id="c442ed0ab5aa9e966a98b7f03fa078374249462d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preserve-class-initialization&lt;/code&gt; &amp;ndash; generate Java-like bytecode for constructor calls, ensuring that the class initialization order is preserved. This can affect overall performance of your application; use it only if you have some complex state shared between multiple classes and updated on class initialization.</source>
          <target state="translated">&lt;code&gt;preserve-class-initialization&lt;/code&gt; - генерирует Java-подобный байт-код для вызовов конструкторов, обеспечивая сохранение порядка инициализации класса. Это может повлиять на общую производительность вашего приложения; используйте его только в том случае, если у вас есть какое-то сложное состояние, совместно используемое несколькими классами и обновляемое при инициализации класса.</target>
        </trans-unit>
        <trans-unit id="57ba3b863cc8c4290462a7e4c0c2afda26c98701" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;priority&lt;/code&gt; - the priority of the thread.</source>
          <target state="translated">&lt;code&gt;priority&lt;/code&gt; - приоритет потока.</target>
        </trans-unit>
        <trans-unit id="c5796ca90f05f8844ac1a5114df5b97bb2be4cb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;private&lt;/code&gt; marks a declaration as &lt;a href=&quot;visibility-modifiers&quot;&gt;visible in the current class or file&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; отмечает объявление как &lt;a href=&quot;visibility-modifiers&quot;&gt;видимое в текущем классе или файле&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cd1ab3237e659782b1a445b6691cc604fc818d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;private&lt;/code&gt; means visible inside this class only (including all its members);</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; означает видимый только внутри этого класса (включая всех его членов);</target>
        </trans-unit>
        <trans-unit id="b4ca3ddcd68dce9aded9ed2f0c210450bb7e6949" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;private&lt;/code&gt; members (and &lt;code&gt;internal&lt;/code&gt; members from superclasses in other modules) are also inherited, but are not directly accessible: if the superclass contains a private property &lt;code&gt;foo&lt;/code&gt; that is referenced by a public function &lt;code&gt;bar()&lt;/code&gt;, instances of the subclass will contain a &lt;code&gt;foo&lt;/code&gt;; they can't use it directly, but they are allowed to call &lt;code&gt;bar()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; члены (и &lt;code&gt;internal&lt;/code&gt; члены суперклассов в других модулях) также наследуются, но не доступны напрямую: если суперкласс содержит частное свойство &lt;code&gt;foo&lt;/code&gt; , на которое ссылается публичная функция &lt;code&gt;bar()&lt;/code&gt; , экземпляры подкласса будут содержать &lt;code&gt;foo&lt;/code&gt; ; они не могут использовать его напрямую, но могут вызывать &lt;code&gt;bar()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2a7ab2daf9b3462587f6e2840cea60565269c93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;private&lt;/code&gt; members are compiled to &lt;code&gt;private&lt;/code&gt; members;</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; члены компилируются в &lt;code&gt;private&lt;/code&gt; члены;</target>
        </trans-unit>
        <trans-unit id="281c4e0c9036d6e2b18b7425ed99f8f3ded9c97b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;private&lt;/code&gt; top-level declarations are compiled to package-local declarations;</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; верхнего уровня компилируются в локальные объявления пакета;</target>
        </trans-unit>
        <trans-unit id="1772eb6a89fcd1a653ae37a0e00a70be31b2a71c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;private&lt;/code&gt;: this symbol is only visible inside the containing class</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; : этот символ виден только внутри содержащего класса</target>
        </trans-unit>
        <trans-unit id="7b1a8411fd48b2c8ac75533016bccfea94c57ce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;private&lt;/code&gt;: this symbol is only visible inside the file where this symbol is declared</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; : этот символ виден только внутри файла, в котором этот символ объявлен</target>
        </trans-unit>
        <trans-unit id="ebbbdb3c17c62ac194fe9be714fd124da12ea708" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;processScheduledJobs&lt;/code&gt; - controls is we shall wait until all scheduled jobs processed, or terminate immediately.</source>
          <target state="translated">&lt;code&gt;processScheduledJobs&lt;/code&gt; - контролирует, что мы будем ждать, пока все запланированные задания будут обработаны, или немедленно прекратить работу.</target>
        </trans-unit>
        <trans-unit id="8274d3319f1061658ea91f1afe0ae25216b4da7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;processScheduledJobs&lt;/code&gt; - controls is we shall wait until all scheduled jobs processed, or terminate immediately. If there are jobs to be execucted with &lt;a href=&quot;execute-after&quot;&gt;executeAfter&lt;/a&gt; their execution is awaited for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ee3153ed5cd6c3d8cdbd82eda4a7e94d655cec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;processors&lt;/code&gt;: A comma-specified list of annotation processor qualified class names. If specified, kapt does not try to find annotation processors in &lt;code&gt;apclasspath&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;processors&lt;/code&gt; : указанный через запятую список имен классов обработчиков аннотаций. Если указано, kapt не пытается найти обработчики аннотаций в &lt;code&gt;apclasspath&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc42dd4e73430a357a459c52466884fb13a6edd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt; &amp;mdash; must be of type &lt;code&gt;KProperty&amp;lt;*&amp;gt;&lt;/code&gt; or its supertype.</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; - должно иметь тип &lt;code&gt;KProperty&amp;lt;*&amp;gt;&lt;/code&gt; или его супертип.</target>
        </trans-unit>
        <trans-unit id="8492efa53994f5517732a61648debeb707627261" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt; &amp;mdash; same as for &lt;code&gt;getValue()&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; - то же, что и для &lt;code&gt;getValue()&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="39c75279096bb1069711ff5a3beb0e36af65557c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt; (annotations with this target are not visible to Java);</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; (аннотации с этой целью не видны Java);</target>
        </trans-unit>
        <trans-unit id="7d79907823fd25c6a00e88d1beabb5caf46c411f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt; - the metadata for the property, used to get the name of property and lookup the value corresponding to this name in the map.</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; - метаданные для свойства, используемые для получения имени свойства и поиска значения, соответствующего этому имени, на карте.</target>
        </trans-unit>
        <trans-unit id="4eb0a7c5aaedbf85636c8349c449b9017584b130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt; - the metadata for the property, used to get the name of property and store the value associated with that name in the map.</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; - метаданные для свойства, используемые для получения имени свойства и сохранения значения, связанного с этим именем на карте.</target>
        </trans-unit>
        <trans-unit id="a84e91f7b88fb5b447ff2adc00ec643fcd89527e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt; - the metadata for the property.</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; - метаданные для свойства.</target>
        </trans-unit>
        <trans-unit id="6c88d0209b5cf686364eee61e0aa5b18521f117e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt; is used as an &lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;annotation use-site target&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt; используется в качестве &lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;цели использования аннотации&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="26979e5a5a77a7c1d8d4cd90472ae70bee609c92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;property&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="ef850a5ede12132543032152b498af154c1e665f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protected&lt;/code&gt; &amp;mdash; same as &lt;code&gt;private&lt;/code&gt; + visible in subclasses too;</source>
          <target state="translated">&lt;code&gt;protected&lt;/code&gt; - то же, что и &lt;code&gt;private&lt;/code&gt; + также видимый в подклассах;</target>
        </trans-unit>
        <trans-unit id="d5172ab175bda21bb87b88dda90ee95aced1b408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protected&lt;/code&gt; is not available for top-level declarations.</source>
          <target state="translated">&lt;code&gt;protected&lt;/code&gt; недоступен для объявлений верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="cb63247e4c1c5e0eab7c42818f592f975a1fad75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protected&lt;/code&gt; marks a declaration as &lt;a href=&quot;visibility-modifiers&quot;&gt;visible in the current class and its subclasses&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;protected&lt;/code&gt; отмечает объявление как &lt;a href=&quot;visibility-modifiers&quot;&gt;видимое в текущем классе и его подклассах&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88734a0fe76710da1df7b4bdadba18b2d8d5c719" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protected&lt;/code&gt; remains &lt;code&gt;protected&lt;/code&gt; (note that Java allows accessing protected members from other classes in the same package and Kotlin doesn't, so Java classes will have broader access to the code);</source>
          <target state="translated">&lt;code&gt;protected&lt;/code&gt; остается &lt;code&gt;protected&lt;/code&gt; (обратите внимание, что Java позволяет получить доступ к защищенным членам из других классов в том же пакете, а Kotlin - нет, поэтому классы Java будут иметь более широкий доступ к коду);</target>
        </trans-unit>
        <trans-unit id="e68dde344fe415e84c6a9816a94c8b12d5689a2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protected&lt;/code&gt;: this symbol is only visible inside the containing class and all of its subclasses, no matter where they are declared (so if your class is public and &lt;a href=&quot;inheritance#subclassing&quot;&gt;open&lt;/a&gt;, anyone can subclass it and thus get to see and use the protected members). If you have used Java: this does &lt;em&gt;not&lt;/em&gt; also grant access from the rest of the package.</source>
          <target state="translated">&lt;code&gt;protected&lt;/code&gt; : этот символ виден только внутри содержащего класса и всех его подклассов, независимо от того, где они объявлены (поэтому, если ваш класс является общедоступным и &lt;a href=&quot;inheritance#subclassing&quot;&gt;открытым&lt;/a&gt; , любой может создать его подкласс и, таким образом, увидеть и использовать защищенные члены). Если вы использовали Java: это также &lt;em&gt;не&lt;/em&gt; дает доступа из остальной части пакета.</target>
        </trans-unit>
        <trans-unit id="bfec9cea237b4503e6387514e81a2644bba7606a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;provideDelegate&lt;/code&gt;, &lt;code&gt;getValue&lt;/code&gt; and &lt;code&gt;setValue&lt;/code&gt; operator functions are described in &lt;a href=&quot;delegated-properties&quot;&gt;Delegated properties&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;provideDelegate&lt;/code&gt; операторов provideDelegate , &lt;code&gt;getValue&lt;/code&gt; и &lt;code&gt;setValue&lt;/code&gt; описаны в разделе &amp;laquo; &lt;a href=&quot;delegated-properties&quot;&gt;Делегированные свойства&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3c1c6059a88a6253ff33bb98675ffdbdfc713e49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;public&lt;/code&gt; &amp;mdash; any client who sees the declaring class sees its &lt;code&gt;public&lt;/code&gt; members.</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; - любой клиент, который видит объявляющий класс, видит его &lt;code&gt;public&lt;/code&gt; члены.</target>
        </trans-unit>
        <trans-unit id="eab1bb865b6abaa17bf70e9f55b348d2a075d6f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;public&lt;/code&gt; (or omitted): this symbol is visible throughout the entire codebase</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; (или опущенный): этот символ виден по всей кодовой базе</target>
        </trans-unit>
        <trans-unit id="e349eb6b48871de21c2fc41920223e4c77f26a7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;public&lt;/code&gt; (or omitted): this symbol is visible to any code that can see the containing class</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; (или опущенный): этот символ виден любому коду, который может видеть содержащий класс</target>
        </trans-unit>
        <trans-unit id="766337e6074e7cbfa5ffd93c46a523fcdd45f121" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;public&lt;/code&gt; marks a declaration as &lt;a href=&quot;visibility-modifiers&quot;&gt;visible anywhere&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; отмечает объявление как &lt;a href=&quot;visibility-modifiers&quot;&gt;видимое в любом месте&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f52a00d65f5a1828adf3ed2971a1f773399099be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;public&lt;/code&gt; remains &lt;code&gt;public&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; остается &lt;code&gt;public&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba7bd6b8dedfc63ca246864f34e877c81a48abe3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;range&lt;/code&gt; -</source>
          <target state="translated">&lt;code&gt;range&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="4c1136a4c963471f1976afcff5e1a1af934e7e99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reason&lt;/code&gt; - a string explaining why the implementation is missing.</source>
          <target state="translated">&lt;code&gt;reason&lt;/code&gt; - строка, объясняющая, почему реализация отсутствует.</target>
        </trans-unit>
        <trans-unit id="a97ab72a73b1326a99a3abc12c26aa0ff03c9064" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reason&lt;/code&gt; - the description of the error</source>
          <target state="translated">&lt;code&gt;reason&lt;/code&gt; - описание ошибки</target>
        </trans-unit>
        <trans-unit id="2ce0cb646c34f13816ccce7b03f884fd00d7d2be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receiver1&lt;/code&gt; - the instance of the first receiver.</source>
          <target state="translated">&lt;code&gt;receiver1&lt;/code&gt; - экземпляр первого получателя.</target>
        </trans-unit>
        <trans-unit id="158844371f061c3de78c6f60c8d8fdebcee509e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receiver2&lt;/code&gt; - the instance of the second receiver.</source>
          <target state="translated">&lt;code&gt;receiver2&lt;/code&gt; - экземпляр второго получателя.</target>
        </trans-unit>
        <trans-unit id="d05c93992a87e7b93bfa0b53aaf9442f53c0fc40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receiver&lt;/code&gt; (receiver parameter of an extension function or property);</source>
          <target state="translated">&lt;code&gt;receiver&lt;/code&gt; (параметр получателя функции или свойства расширения);</target>
        </trans-unit>
        <trans-unit id="a98aea6224cfc44cd0422b175f55cd717c483718" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receiver&lt;/code&gt; - the instance of the class used to retrieve the value of the property delegate.</source>
          <target state="translated">&lt;code&gt;receiver&lt;/code&gt; - экземпляр класса, используемый для получения значения делегата свойства.</target>
        </trans-unit>
        <trans-unit id="c3da121f86146196f53573fe143d1c4f02c04011" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receiver&lt;/code&gt; - the receiver which is used to modify the value of the property. For example, it should be a class instance if this is a member property of that class, or an extension receiver if this is a top level extension property.</source>
          <target state="translated">&lt;code&gt;receiver&lt;/code&gt; - получатель, который используется для изменения значения свойства. Например, это должен быть экземпляр класса, если это свойство-член этого класса, или приемник расширения, если это свойство расширения верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="6a781ede8edeceb338ed66f80a72f5f115f56011" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receiver&lt;/code&gt; - the receiver which is used to obtain the value of the property delegate. For example, it should be a class instance if this is a member property of that class, or an extension receiver if this is a top level extension property.</source>
          <target state="translated">&lt;code&gt;receiver&lt;/code&gt; - получатель, который используется для получения значения делегата свойства. Например, это должен быть экземпляр класса, если это свойство-член этого класса, или приемник расширения, если это свойство расширения верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="78b24734911f563b9a77668c2f9e12d696554423" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receiver&lt;/code&gt; - the receiver which is used to obtain the value of the property. For example, it should be a class instance if this is a member property of that class, or an extension receiver if this is a top level extension property.</source>
          <target state="translated">&lt;code&gt;receiver&lt;/code&gt; - получатель, который используется для получения стоимости собственности. Например, это должен быть экземпляр класса, если это свойство-член этого класса, или приемник расширения, если это свойство расширения верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="002bc8ba7fef19afe5c32f3a4329b439b851c81b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;receiver&lt;/code&gt;is used as an &lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;annotation use-site target&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;receiver&lt;/code&gt; используется в качестве &lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;цели использования аннотации&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cd01de440d83b1fb95ce4ab9c8465f2d6dd4245" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reified&lt;/code&gt; marks a type parameter of an inline function as &lt;a href=&quot;inline-functions#reified-type-parameters&quot;&gt;accessible at runtime&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;reified&lt;/code&gt; отмечает параметр типа встроенной функции как &lt;a href=&quot;inline-functions#reified-type-parameters&quot;&gt;доступный во время выполнения&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a647b84307c2a1dabf7b72996b50831df922f5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rem&lt;/code&gt; operator</source>
          <target state="translated">&lt;code&gt;rem&lt;/code&gt; оператор rem</target>
        </trans-unit>
        <trans-unit id="d74594c3c4e34a53b2bdf0e70926edc117855eb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replaceWith&lt;/code&gt; - If present, specifies a code fragment which should be used as a replacement for the deprecated API usage.</source>
          <target state="translated">&lt;code&gt;replaceWith&lt;/code&gt; - если присутствует, указывает фрагмент кода, который следует использовать вместо устаревшего использования API.</target>
        </trans-unit>
        <trans-unit id="9731b874ffaf46a10ba130d059f97ed608f406c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacement&lt;/code&gt; - A replacement expression that can include substitutions.</source>
          <target state="translated">&lt;code&gt;replacement&lt;/code&gt; - выражение замены, которое может включать замены.</target>
        </trans-unit>
        <trans-unit id="6787f23fad529d927833cc839ccfacf1d47d1c5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacement&lt;/code&gt; - A replacement expression that can include substitutions. See &lt;a href=&quot;-regex/replace-first#kotlin.text.Regex%24replaceFirst%28kotlin.CharSequence%2C+kotlin.String%29&quot;&gt;Regex.replaceFirst&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;replacement&lt;/code&gt; - выражение замены, которое может включать замены. См. Подробности в &lt;a href=&quot;-regex/replace-first#kotlin.text.Regex%24replaceFirst%28kotlin.CharSequence%2C+kotlin.String%29&quot;&gt;Regex.replaceFirst&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="20d1b758a3438e351c18da19306c47c6bdfe0473" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacement&lt;/code&gt; - A replacement expression that can include substitutions. See &lt;a href=&quot;-regex/replace-first#kotlin.text.Regex%24replaceFirst(kotlin.CharSequence,%20kotlin.String)&quot;&gt;Regex.replaceFirst&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c036a71ebab5e11a408004b8de144be4c01b78e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacement&lt;/code&gt; - A replacement expression that can include substitutions. See &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Matcher.html#appendReplacement(java.lang.StringBuffer,%20java.lang.String)&quot;&gt;Matcher.appendReplacement&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;replacement&lt;/code&gt; - выражение замены, которое может включать замены. Подробнее см. &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/regex/Matcher.html#appendReplacement(java.lang.StringBuffer,%20java.lang.String)&quot;&gt;Matcher.appendReplacement&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="757f261748dcbf83ee41e61ec7397a56574c415d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacement&lt;/code&gt; - A replacement expression that can include substitutions. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace&quot;&gt;String.prototype.replace&lt;/a&gt; function docs for details.</source>
          <target state="translated">&lt;code&gt;replacement&lt;/code&gt; - выражение замены, которое может включать замены. См. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace&quot;&gt;Подробности в&lt;/a&gt; документации функции String.prototype.replace .</target>
        </trans-unit>
        <trans-unit id="829730e0173bfe6cdcbc05b208cead4213bf52c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacement&lt;/code&gt; - A replacement expression that can include substitutions. See Matcher.appendReplacement for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731ebf1eb0b6ebc6fb79eeaefce5f6364cf410c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;return&lt;/code&gt;&lt;a href=&quot;returns&quot;&gt;returns from the nearest enclosing function or anonymous function&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; &lt;a href=&quot;returns&quot;&gt;возвращает из ближайшей включающей функции или анонимной функции&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ccc2d3f36614592ea4f6050d3d2c24e80066d487" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reversed()&lt;/code&gt; returns a new collection with the copies of the elements. So, if you change the original collection later, this won't affect the previously obtained results of &lt;code&gt;reversed()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reversed()&lt;/code&gt; возвращает новую коллекцию с копиями элементов. Таким образом, если вы позже измените исходную коллекцию, это не повлияет на ранее полученные результаты &lt;code&gt;reversed()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11e8f77497a243623a39f155fcc2b2e549c562a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;round(x)&lt;/code&gt; is &lt;code&gt;x&lt;/code&gt; where &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; or &lt;code&gt;+Inf&lt;/code&gt; or &lt;code&gt;-Inf&lt;/code&gt; or already a mathematical integer.</source>
          <target state="translated">&lt;code&gt;round(x)&lt;/code&gt; является &lt;code&gt;x&lt;/code&gt; , где &lt;code&gt;x&lt;/code&gt; является &lt;code&gt;NaN&lt;/code&gt; или &lt;code&gt;+Inf&lt;/code&gt; или &lt;code&gt;-Inf&lt;/code&gt; или уже математическое целое число.</target>
        </trans-unit>
        <trans-unit id="021a1d5581cc1e055ff999d6e5c3167953323279" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;roundToInt&lt;/code&gt;, &lt;code&gt;roundToLong&lt;/code&gt; (half to integer) extension functions;</source>
          <target state="translated">&lt;code&gt;roundToInt&lt;/code&gt; , &lt;code&gt;roundToLong&lt;/code&gt; (от половины до целого) функции расширения;</target>
        </trans-unit>
        <trans-unit id="a7a48636595a73c48fb5fff1a432d18d2229d423" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;run()&lt;/code&gt;, &lt;code&gt;let()&lt;/code&gt;, and &lt;code&gt;with()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;run()&lt;/code&gt; , &lt;code&gt;let()&lt;/code&gt; и &lt;code&gt;with()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53ad25e025c60c66a44e7a1cb485a6d06906b245" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;run&lt;/code&gt; does the same as &lt;code&gt;with&lt;/code&gt; but invokes as &lt;code&gt;let&lt;/code&gt; - as an extension function of the context object.</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; делает то же самое, что и &lt;code&gt;with&lt;/code&gt; , но вызывает &lt;code&gt;let&lt;/code&gt; - как функцию расширения объекта контекста.</target>
        </trans-unit>
        <trans-unit id="bf8d9d17d64ff82469dbf5ae3e8a7363e3bf8950" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;run&lt;/code&gt; is useful when your lambda contains both the object initialization and the computation of the return value.</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; полезен, когда ваша лямбда содержит как инициализацию объекта, так и вычисление возвращаемого значения.</target>
        </trans-unit>
        <trans-unit id="02cd92347a4fd8b87df788ac3d5cb5598e8e2a5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;run&lt;/code&gt;, &lt;code&gt;with&lt;/code&gt;, and &lt;code&gt;apply&lt;/code&gt; refer to the context object as a lambda receiver - by keyword &lt;code&gt;this&lt;/code&gt;. Hence, in their lambdas, the object is available as it would be in ordinary class functions. In most cases, you can omit &lt;code&gt;this&lt;/code&gt; when accessing the members of the receiver object, making the code shorter. On the other hand, if &lt;code&gt;this&lt;/code&gt; is omitted, it can be hard to distinguish between the receiver members and external objects or functions. So, having the context object as a receiver (&lt;code&gt;this&lt;/code&gt;) is recommended for lambdas that mainly operate on the object members: call its functions or assign properties.</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; , &lt;code&gt;with&lt;/code&gt; и &lt;code&gt;apply&lt;/code&gt; относятся к объекту контекста как к лямбда-приемнику - по ключевому слову &lt;code&gt;this&lt;/code&gt; . Следовательно, в их лямбдах объект доступен так же, как и в обычных функциях класса. В большинстве случаев вы можете опустить &lt;code&gt;this&lt;/code&gt; при доступе к членам объекта-получателя, что сделает код короче. С другой стороны, если &lt;code&gt;this&lt;/code&gt; опущено, может быть трудно отличить элементы-получатели от внешних объектов или функций. Итак, использование объекта контекста в качестве получателя ( &lt;code&gt;this&lt;/code&gt; ) рекомендуется для лямбда-выражений, которые в основном работают с членами объекта: вызывают его функции или присваивают свойства.</target>
        </trans-unit>
        <trans-unit id="e79e7d974f97240f7bc523276b3d8e231c76c029" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runtimeOnly&lt;/code&gt; dependencies are available at runtime but are not visible during compilation of any module.</source>
          <target state="translated">&lt;code&gt;runtimeOnly&lt;/code&gt; Зависимости runtimeOnly доступны во время выполнения, но не видны во время компиляции какого-либо модуля.</target>
        </trans-unit>
        <trans-unit id="58a6240469f8a6ee6ff33c0e5cb5c16ca2afcb94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scale&lt;/code&gt; - the scale of the resulting &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt;, i.e. number of decimal places of the fractional part. By default 0.</source>
          <target state="translated">&lt;code&gt;scale&lt;/code&gt; - масштаб полученного &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; , т.е. количество знаков после запятой дробной части. По умолчанию 0.</target>
        </trans-unit>
        <trans-unit id="2cc4a9081cafad9a25b7eb56e818410a8907e1ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scale&lt;/code&gt; - the scale of the resulting &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt;, i.e. number of decimal places of the fractional part. By default 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3d126205772519dab1ad0222b7a38681bf26e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sealed&lt;/code&gt; declares a &lt;a href=&quot;sealed-classes&quot;&gt;sealed class&lt;/a&gt; (a class with restricted subclassing)</source>
          <target state="translated">&lt;code&gt;sealed&lt;/code&gt; объявляет &lt;a href=&quot;sealed-classes&quot;&gt;запечатанный класс&lt;/a&gt; (класс с ограниченными подклассами)</target>
        </trans-unit>
        <trans-unit id="20556a735d9463307d50afc8593af51bcb40d9d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seatCount&lt;/code&gt;, which is &lt;code&gt;Car&lt;/code&gt;'s own property</source>
          <target state="translated">&lt;code&gt;seatCount&lt;/code&gt; , который является &lt;code&gt;Car&lt;/code&gt; собственности &amp;laquo;ю.ш.</target>
        </trans-unit>
        <trans-unit id="d8fc07290c6f54ea4f72ca5abb9bad494c417569" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;second&lt;/code&gt; - Second value.</source>
          <target state="translated">&lt;code&gt;second&lt;/code&gt; - Второе значение.</target>
        </trans-unit>
        <trans-unit id="2285f25f1a0e8cc8b7f48cc6a7802b16c54b2f7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set&lt;/code&gt; (property setter);</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; (установщик свойств);</target>
        </trans-unit>
        <trans-unit id="0ee8ffdd88f78d8d595444de307c476608800ec7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setparam&lt;/code&gt; (property setter parameter);</source>
          <target state="translated">&lt;code&gt;setparam&lt;/code&gt; (параметр установки свойства);</target>
        </trans-unit>
        <trans-unit id="098cc6c6492640dbb39b4e235003b429bc9ef092" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setparam&lt;/code&gt; is used as an &lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;annotation use-site target&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;setparam&lt;/code&gt; используется в качестве &lt;a href=&quot;annotations#annotation-use-site-targets&quot;&gt;цели сайта использования аннотации&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00470515b77bec859fa0fd291b1d7e77ca03663e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seze&lt;/code&gt; - the size of one element in the array used to store bits.</source>
          <target state="translated">&lt;code&gt;seze&lt;/code&gt; - размер одного элемента в массиве, используемого для хранения битов.</target>
        </trans-unit>
        <trans-unit id="84bf5e61185aba2018246a37029d50f861546165" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shl(bits)&lt;/code&gt; &amp;ndash; signed shift left</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c489e6b5441f3f27632e207bd8669e506ee77b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shl(bits)&lt;/code&gt; &amp;ndash; signed shift left (Java's &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;shl(bits)&lt;/code&gt; - сдвиг влево со знаком (Java &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="975111a5cf5d5737d9fbd850c5604c38de8b97d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shr(bits)&lt;/code&gt; &amp;ndash; signed shift right</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b70d011bff39eddcbc338c1187efb5ec89d1a27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shr(bits)&lt;/code&gt; &amp;ndash; signed shift right (Java's &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;shr(bits)&lt;/code&gt; - сдвиг вправо со знаком (Java &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e3f9cf744bac34c42acc68c934a8943b08244608" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sign(NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sign(NaN)&lt;/code&gt; равен &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9b8d8b2d35af1ec3f393781437b403ef99b39b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sin(NaN|+Inf|-Inf)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sin(NaN|+Inf|-Inf)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4c1eb584a9072c71fcaa6417c2a09246c0138d53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sinh(+Inf)&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sinh(+Inf)&lt;/code&gt; равно &lt;code&gt;+Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b135da3058c9500d66aafb6a128281dbd15ca97b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sinh(-Inf)&lt;/code&gt; is &lt;code&gt;-Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sinh(-Inf)&lt;/code&gt; равно &lt;code&gt;-Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85c95c02a351d629823df5a68e49b9f10c9f4edf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sinh(NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sinh(NaN)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ebcd1833910fca27cdcbcdc254b29db060b5e998" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; -</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="3cc3c43f4b02f8b21b31f647f391bfa5e465269e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; - the number of elements to take in each char sequence, must be positive and can be greater than the number of elements in this char sequence.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; - количество элементов, которые нужно принять в каждой последовательности символов, должно быть положительным и может быть больше, чем количество элементов в этой последовательности символов.</target>
        </trans-unit>
        <trans-unit id="6ae2c5bcf4763c4f28a64b683a56e64ac50f0f01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; - the number of elements to take in each list, must be positive and can be greater than the number of elements in this collection.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; - количество элементов , чтобы принять в каждом списке, должен быть положительным и может быть больше , чем количество элементов в этой коллекции.</target>
        </trans-unit>
        <trans-unit id="b0eabc070e472f9aea5636eafa863a9302747954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; - the number of elements to take in each string, must be positive and can be greater than the number of elements in this char sequence.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; - количество элементов, которые нужно принять в каждой строке, должно быть положительным и может быть больше, чем количество элементов в этой последовательности символов.</target>
        </trans-unit>
        <trans-unit id="dc7f1044f1e44064883deade54887c5142dae0bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; - the number of elements to take in each window</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; - количество элементов, которые нужно взять в каждое окно</target>
        </trans-unit>
        <trans-unit id="41c63f30c69855986f80c66fba60df25156094b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; - the size in bytes of data of this type</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; - размер в байтах данных этого типа</target>
        </trans-unit>
        <trans-unit id="4a978dbcc0a7dc3fce12212a97c131e567575188" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size&lt;/code&gt; - the size of one element in the array used to store bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b691a866956ce689f6b294e5168479679728613" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;size_t&lt;/code&gt; and &lt;code&gt;ptrdiff_t&lt;/code&gt; (also &lt;code&gt;ssize_t&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;size_t&lt;/code&gt; и &lt;code&gt;ptrdiff_t&lt;/code&gt; (также &lt;code&gt;ssize_t&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="87cdc6f5c81965c63759c8bc93b97beee6c125e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sort*&lt;/code&gt; instead of &lt;code&gt;sorted*&lt;/code&gt; in the names of all sorting functions: &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort-descending&quot;&gt;&lt;code&gt;sortDescending()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort-by&quot;&gt;&lt;code&gt;sortBy()&lt;/code&gt;&lt;/a&gt;, and so on.</source>
          <target state="translated">&lt;code&gt;sort*&lt;/code&gt; вместо &lt;code&gt;sorted*&lt;/code&gt; в именах всех функций сортировки: &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt; &lt;code&gt;sort()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort-descending&quot;&gt; &lt;code&gt;sortDescending()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort-by&quot;&gt; &lt;code&gt;sortBy()&lt;/code&gt; &lt;/a&gt; и т. д.</target>
        </trans-unit>
        <trans-unit id="20605ae3cabe36bbd227ce9c86b87f19406bd512" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sources&lt;/code&gt; (&lt;em&gt;required&lt;/em&gt;): An output path for the generated files.</source>
          <target state="translated">&lt;code&gt;sources&lt;/code&gt; ( &lt;em&gt;обязательно&lt;/em&gt; ): выходной путь для сгенерированных файлов.</target>
        </trans-unit>
        <trans-unit id="58fedc20a964ac6d3e409f1eb6f5b974b7d02b00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sqrt(x)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; when &lt;code&gt;x &amp;lt; 0&lt;/code&gt; or &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sqrt(x)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt; , если &lt;code&gt;x &amp;lt; 0&lt;/code&gt; или &lt;code&gt;x&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8068f2545dd80f59f49a0506837766685a6522f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt; - if &lt;code&gt;true&lt;/code&gt;, the thread is immediately started.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; - если &lt;code&gt;true&lt;/code&gt; , поток запускается немедленно.</target>
        </trans-unit>
        <trans-unit id="ff9aa0cd8a242744f68fb657ded03dd2b2d6f5b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - An index to start search with, by default 0. Must be not less than zero and not greater than &lt;code&gt;input.length()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; - индекс для начала поиска, по умолчанию 0. Должен быть не меньше нуля и не больше &lt;code&gt;input.length()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="acdb8a0620e4c7b5130f3f413b7f675514ad6cea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - The index of character to start searching at. The search proceeds backward toward the beginning of the string.</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; - индекс символа, с которого нужно начать поиск. Поиск продолжается в обратном направлении к началу строки.</target>
        </trans-unit>
        <trans-unit id="7d3a40a0549880963f7940c866fc3c69a957d610" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the range to copy, 0 by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124ba5ac28f4badbe35200ad470134f178f03ec1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the subrange of characters, 0 by default.</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; - начало (включительно) поддиапазона символов, по умолчанию 0.</target>
        </trans-unit>
        <trans-unit id="9a1eefd9393380e662552de130993045e8c45f90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the subrange to copy, 0 by default.</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; - начало (включительно) поддиапазона для копирования, по умолчанию 0.</target>
        </trans-unit>
        <trans-unit id="6d7ba75f0fac0567e24fa448288b299f775f0dfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the subrange to decode, 0 by default.</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; - начало (включительно) поддиапазона для декодирования, по умолчанию 0.</target>
        </trans-unit>
        <trans-unit id="2545445b732873273e1a39f16411533cbd1db7fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the subsequence to append.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee8df34a76b9d52df945d0dc5ba3c9ffb5bdc4e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the substring to encode, 0 by default.</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; - начало (включительно) подстроки для кодирования, по умолчанию 0.</target>
        </trans-unit>
        <trans-unit id="32bc7b0935a3307d89f32516078796087b21372a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the beginning (inclusive) of the substring, 0 by default.</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; - начало (включительно) подстроки, по умолчанию 0.</target>
        </trans-unit>
        <trans-unit id="835e8083c9240cc60a14ec539b52df0df483620f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the index of the first character to be removed.</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; - индекс первого удаляемого символа.</target>
        </trans-unit>
        <trans-unit id="c012a03f38ecc253b52f1afffbc631db96db9a09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the index of the first character to be replaced.</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; - индекс первого заменяемого символа.</target>
        </trans-unit>
        <trans-unit id="b6a5e9aac01d2306cb7c6b7a7ea596a30e7639ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the start index (inclusive).</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; - начальный индекс (включительно).</target>
        </trans-unit>
        <trans-unit id="aad719fc94e4921fd31594c6d16dcb0ddb52cf98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startIndex&lt;/code&gt; - the start offset (inclusive) of the substring to copy.</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; - начальное смещение (включительно) копируемой подстроки.</target>
        </trans-unit>
        <trans-unit id="b72ad0e532783f6ba234cbbdc102b23306ca16e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;status&lt;/code&gt; - serves as a status code; by convention, a nonzero status code indicates abnormal termination.</source>
          <target state="translated">&lt;code&gt;status&lt;/code&gt; - служит кодом статуса; по соглашению ненулевой код состояния указывает на ненормальное завершение.</target>
        </trans-unit>
        <trans-unit id="76e05e699805ca165800cfaf4cdbd31609cb5ed1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stdlib&lt;/code&gt; already makes use of contracts, which leads to improvements in the analyses described above. This part of contracts is &lt;strong&gt;stable&lt;/strong&gt;, meaning that you can benefit from the improved analysis right now without any additional opt-ins:</source>
          <target state="translated">&lt;code&gt;stdlib&lt;/code&gt; уже использует контракты, что позволяет улучшить описанный выше анализ. Эта часть контрактов &lt;strong&gt;стабильна&lt;/strong&gt; , а это означает, что вы можете воспользоваться улучшенным анализом прямо сейчас, без каких-либо дополнительных подписок:</target>
        </trans-unit>
        <trans-unit id="727fd974271fc9099443f42a3b2ceeb5e2610178" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;step&lt;/code&gt; - the number of elements to move the window forward by on an each step, by default 1</source>
          <target state="translated">&lt;code&gt;step&lt;/code&gt; - количество элементов для перемещения окна вперед на каждом шаге, по умолчанию 1</target>
        </trans-unit>
        <trans-unit id="dcd999b6301542cebc2fb677d779bd98681aaf0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;step&lt;/code&gt; defines a distance between first elements of two adjacent windows. By default the value is 1, so the result contains windows starting from all elements. If you increase the step to 2, you will receive only windows starting from odd elements: first, third, an so on.</source>
          <target state="translated">&lt;code&gt;step&lt;/code&gt; определяет расстояние между первыми элементами двух соседних окон. По умолчанию значение равно 1, поэтому результат содержит окна, начиная со всех элементов. Если вы увеличите шаг до 2, вы получите только окна, начинающиеся с нечетных элементов: первого, третьего и так далее.</target>
        </trans-unit>
        <trans-unit id="3d0d0c2c99afb5f31cdfb8aa7358f3f9d2409787" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strictEnums&lt;/code&gt; and &lt;code&gt;nonStrictEnums&lt;/code&gt; properties values are space-separated lists of the enums that should be generated as a Kotlin enum or as integral values correspondingly. If the enum is not included into any of these lists, then it is generated according to the heuristics.</source>
          <target state="translated">&lt;code&gt;strictEnums&lt;/code&gt; свойств strictEnums и &lt;code&gt;nonStrictEnums&lt;/code&gt; представляют собой списки перечислений, разделенных пробелами, которые должны быть сгенерированы как перечисление Kotlin или как целые значения соответственно. Если перечисление не входит ни в один из этих списков, оно генерируется согласно эвристике.</target>
        </trans-unit>
        <trans-unit id="fd1037cd9a47ac6bb5aed0cc042843d12462adcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stubs&lt;/code&gt; &amp;ndash; only generate stubs needed for annotation processing;</source>
          <target state="translated">&lt;code&gt;stubs&lt;/code&gt; - генерировать только заглушки, необходимые для обработки аннотаций;</target>
        </trans-unit>
        <trans-unit id="88061555c9c98e794fcbabeb6346959556967b63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stubs&lt;/code&gt; (&lt;em&gt;required&lt;/em&gt;): An output path for the stub files. In other words, some temporary directory.</source>
          <target state="translated">&lt;code&gt;stubs&lt;/code&gt; ( &lt;em&gt;обязательно&lt;/em&gt; ): выходной путь для файлов-заглушек. Другими словами, какой-то временный каталог.</target>
        </trans-unit>
        <trans-unit id="5237e34d8ca0b0aa26e70c25ae06d3415d09f9d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stubsAndApt&lt;/code&gt; &amp;ndash; generate stubs and run annotation processing.</source>
          <target state="translated">&lt;code&gt;stubsAndApt&lt;/code&gt; - генерировать заглушки и запускать обработку аннотаций.</target>
        </trans-unit>
        <trans-unit id="61e2bb89a31d99b7ec1731fab47f69fe973402a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suspend&lt;/code&gt; -&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c530db0c8f61755e893473a0cc03a77b2c37bacd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suspend&lt;/code&gt; functions without &lt;code&gt;@Throws&lt;/code&gt; propagate only &lt;code&gt;CancellationException&lt;/code&gt; as &lt;code&gt;NSError&lt;/code&gt;. Non-&lt;code&gt;suspend&lt;/code&gt; functions without &lt;code&gt;@Throws&lt;/code&gt; don't propagate Kotlin exceptions at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bdb177a1a5e9df43693e64cf09b5a941dfeef82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suspend&lt;/code&gt; marks a function or lambda as suspending (usable as a &lt;a href=&quot;coroutines-overview&quot;&gt;coroutine&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;suspend&lt;/code&gt; отмечает функцию или лямбду как приостановленную (можно использовать как &lt;a href=&quot;coroutines-overview&quot;&gt;сопрограмму&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="d88adc9894a2f1336ad6b9c663914539e72791a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tailrec&lt;/code&gt; marks a function as &lt;a href=&quot;functions#tail-recursive-functions&quot;&gt;tail-recursive&lt;/a&gt; (allowing the compiler to replace recursion with iteration)</source>
          <target state="translated">&lt;code&gt;tailrec&lt;/code&gt; отмечает функцию как &lt;a href=&quot;functions#tail-recursive-functions&quot;&gt;хвостовую&lt;/a&gt; рекурсию (позволяя компилятору заменить рекурсию на итерацию)</target>
        </trans-unit>
        <trans-unit id="8d3d2939196993f9bab19d448225194c8a28b278" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;takeIf()&lt;/code&gt; and &lt;code&gt;takeUnless()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;takeIf()&lt;/code&gt; и &lt;code&gt;takeUnless()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c06bcfa7789a0124c5ed588357e1ea0f3463b180" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;takeIf&lt;/code&gt; and &lt;code&gt;takeUnless&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;takeIf&lt;/code&gt; и &lt;code&gt;takeUnless&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f6b8bc7140372eea96f7957c76b434bd69770a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;takeIf&lt;/code&gt; and &lt;code&gt;takeUnless&lt;/code&gt; are especially useful together with scope functions. A good case is chaining them with &lt;code&gt;let&lt;/code&gt; for running a code block on objects that match the given predicate. To do this, call &lt;code&gt;takeIf&lt;/code&gt; on the object and then call &lt;code&gt;let&lt;/code&gt; with a safe call (&lt;code&gt;?&lt;/code&gt;). For objects that don't match the predicate, &lt;code&gt;takeIf&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; isn't invoked.</source>
          <target state="translated">&lt;code&gt;takeIf&lt;/code&gt; и &lt;code&gt;takeUnless&lt;/code&gt; особенно полезны вместе с функциями области видимости. Хороший случай - объединить их в цепочку с &lt;code&gt;let&lt;/code&gt; для запуска блока кода на объектах, соответствующих заданному предикату. Для этого вызовите &lt;code&gt;takeIf&lt;/code&gt; для объекта, а затем вызовите &lt;code&gt;let&lt;/code&gt; с безопасным вызовом ( &lt;code&gt;?&lt;/code&gt; ). Для объектов, которые не соответствуют предикату, &lt;code&gt;takeIf&lt;/code&gt; возвращает &lt;code&gt;null&lt;/code&gt; , а &lt;code&gt;let&lt;/code&gt; не вызывается.</target>
        </trans-unit>
        <trans-unit id="eaac4c748ff74aef66b4d4bf6a589fa48436bfe5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;takeIf&lt;/code&gt; is like &lt;code&gt;filter&lt;/code&gt; for a single value. It checks whether the receiver meets the predicate, and returns the receiver, if it does or &lt;code&gt;null&lt;/code&gt; if it doesn't. Combined with an elvis-operator and early returns it allows to write constructs like:</source>
          <target state="translated">&lt;code&gt;takeIf&lt;/code&gt; похож на &lt;code&gt;filter&lt;/code&gt; для одного значения. Он проверяет, соответствует ли получатель предикату, и возвращает получателя, если он соответствует, или &lt;code&gt;null&lt;/code&gt; , если нет. В сочетании с оператором elvis и ранним возвратом он позволяет писать такие конструкции, как:</target>
        </trans-unit>
        <trans-unit id="c33be6cb907b12adc9119250bf308c128256a36d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;takeUnless&lt;/code&gt; is the same as &lt;code&gt;takeIf&lt;/code&gt;, but it takes the inverted predicate. It returns the receiver when it &lt;em&gt;doesn't&lt;/em&gt; meet the predicate and &lt;code&gt;null&lt;/code&gt; otherwise. So one of the examples above could be rewritten with &lt;code&gt;takeUnless&lt;/code&gt; as following:</source>
          <target state="translated">&lt;code&gt;takeUnless&lt;/code&gt; - это то же самое, что &lt;code&gt;takeIf&lt;/code&gt; , но принимает инвертированный предикат. Он возвращает получателя, если он &lt;em&gt;не&lt;/em&gt; соответствует предикату, и &lt;code&gt;null&lt;/code&gt; в противном случае. Таким образом, один из приведенных выше примеров можно переписать с помощью &lt;code&gt;takeUnless&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="4bb8daa78c89754426c090574adc1aff035196e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tan(NaN|+Inf|-Inf)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tan(NaN|+Inf|-Inf)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e2fbad78534aa0baffd2f5827a30977a3fd22e65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tanh(+Inf)&lt;/code&gt; is &lt;code&gt;1.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tanh(+Inf)&lt;/code&gt; составляет &lt;code&gt;1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9d8705b536f611c5ef6af349994c52792dcf54e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tanh(-1.0)&lt;/code&gt; is &lt;code&gt;-Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tanh(-1.0)&lt;/code&gt; равно &lt;code&gt;-Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ef017c48a59b4351fe87c214b953f31afbc8515" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tanh(-Inf)&lt;/code&gt; is &lt;code&gt;-1.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tanh(-Inf)&lt;/code&gt; равно &lt;code&gt;-1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9fb9734bbf8358d4f3a29ac0b6771bd430e1a78d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tanh(1.0)&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tanh(1.0)&lt;/code&gt; равно &lt;code&gt;+Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="66d2f8e0730eaad57483b20b82eba676e897c62f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tanh(NaN)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tanh(NaN)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="962278e1ea50881e55b704575c8fdf7a4b75fc53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tanh(x)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; when &lt;code&gt;x &amp;gt; 1&lt;/code&gt; or &lt;code&gt;x &amp;lt; -1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tanh(x)&lt;/code&gt; - &lt;code&gt;NaN&lt;/code&gt; , когда &lt;code&gt;x &amp;gt; 1&lt;/code&gt; или &lt;code&gt;x &amp;lt; -1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b56280d6d0412a62dfb9d389803f8aac0959dcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt; is disabled, and the target's test task is used (e.g. &lt;code&gt;jvmTest&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; отключен, и используется целевое тестовое задание (например, &lt;code&gt;jvmTest&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b19f69b3755690b021fdcb189a2d765113e01501" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text&lt;/code&gt; - text to append to file.</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; - текст для добавления в файл.</target>
        </trans-unit>
        <trans-unit id="584921280571d8eda0a4ddcb9fc92763ef7d199d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text&lt;/code&gt; - text to write into file.</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; - текст для записи в файл.</target>
        </trans-unit>
        <trans-unit id="c94e2aaa2c54025cd0dd82fd1be34fc781dd96f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;textView&lt;/code&gt; is an extension property for &lt;code&gt;Activity&lt;/code&gt;, and it has the same type as declared in &lt;code&gt;activity_main.xml&lt;/code&gt; (so it is a &lt;code&gt;TextView&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;textView&lt;/code&gt; - это свойство расширения для &lt;code&gt;Activity&lt;/code&gt; , и оно имеет тот же тип, что и объявлен в &lt;code&gt;activity_main.xml&lt;/code&gt; (так что это &lt;code&gt;TextView&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6ca138f79a2155ce9eb77ce0d3226c80dba4dd46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;third&lt;/code&gt; - Third value.</source>
          <target state="translated">&lt;code&gt;third&lt;/code&gt; - Третье значение.</target>
        </trans-unit>
        <trans-unit id="59fb4725b2a41ff996479dec4539f3be6e290369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisOffset&lt;/code&gt; - the start offset in this char sequence of the substring to compare.</source>
          <target state="translated">&lt;code&gt;thisOffset&lt;/code&gt; - начальное смещение в этой последовательности символов подстроки для сравнения.</target>
        </trans-unit>
        <trans-unit id="7651cc401a2cecd3313fc38f62a13aa291e1292c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisOffset&lt;/code&gt; - the start offset in this string of the substring to compare.</source>
          <target state="translated">&lt;code&gt;thisOffset&lt;/code&gt; - начальное смещение в этой строке сравниваемой подстроки.</target>
        </trans-unit>
        <trans-unit id="7852ca64fc1d96ffc4ef6494f1e2a712a1ef86bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisRef&lt;/code&gt; &amp;mdash; must be the same or a supertype of the &lt;em&gt;property owner&lt;/em&gt; (for extension properties &amp;mdash; the type being extended).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8681dc6c5b580e3d7caea60a99dbef13f55f9b2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisRef&lt;/code&gt; &amp;mdash; must be the same or a supertype of the &lt;em&gt;property owner&lt;/em&gt; (for extension properties &amp;mdash; the type being extended);</source>
          <target state="translated">&lt;code&gt;thisRef&lt;/code&gt; - должен быть таким же или супертипом &lt;em&gt;владельца свойства&lt;/em&gt; (для свойств расширения - расширяемый тип);</target>
        </trans-unit>
        <trans-unit id="399a3d1a1e924f800c27694c35284415a0d323aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisRef&lt;/code&gt; &amp;mdash; same as for &lt;code&gt;getValue()&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;thisRef&lt;/code&gt; - то же, что и для &lt;code&gt;getValue()&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="aa686d9597c69ad884e20b4066f00def78629496" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisRef&lt;/code&gt; - the object for which the value is requested (not used).</source>
          <target state="translated">&lt;code&gt;thisRef&lt;/code&gt; - объект, для которого запрашивается значение (не используется).</target>
        </trans-unit>
        <trans-unit id="bb9497e6795b35429a4bd512b9801a1bd9351fcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisRef&lt;/code&gt; - the object for which the value is requested.</source>
          <target state="translated">&lt;code&gt;thisRef&lt;/code&gt; - объект, для которого запрашивается значение.</target>
        </trans-unit>
        <trans-unit id="abcb6cbc8d903620a1636bf866465fbc73df05c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;throw&lt;/code&gt; is also an expression, and its return type is the special class &lt;code&gt;Nothing&lt;/code&gt;, which does not have any instances. The compiler knows that an expression whose type is &lt;code&gt;Nothing&lt;/code&gt; will never return normally, and will therefore generally accept its use even where a different type would normally be required, such as after the &lt;a href=&quot;null-safety#elvis-operator&quot;&gt;Elvis operator&lt;/a&gt;. If you make a function that always throws, or that starts an infinite loop, you could declare its return type to be &lt;code&gt;Nothing&lt;/code&gt; in order to make the compiler aware of this. One fun example of this is the built-in function &lt;code&gt;TODO&lt;/code&gt;, which you can call in any expression (possibly supplying a string argument), and it raises a &lt;code&gt;NotImplementedError&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;throw&lt;/code&gt; также является выражением, а его возвращаемый тип - это специальный класс &lt;code&gt;Nothing&lt;/code&gt; , не имеющий экземпляров. Компилятор знает, что выражение с типом &lt;code&gt;Nothing&lt;/code&gt; никогда не вернется нормально, и поэтому обычно принимает его использование даже там, где обычно требуется другой тип, например, после &lt;a href=&quot;null-safety#elvis-operator&quot;&gt;оператора Элвиса&lt;/a&gt; . Если вы создаете функцию, которая всегда выбрасывает или запускает бесконечный цикл, вы можете объявить ее возвращаемый тип равным &lt;code&gt;Nothing&lt;/code&gt; , чтобы компилятор знал об этом. Одним из забавных примеров этого является встроенная функция &lt;code&gt;TODO&lt;/code&gt; , которую вы можете вызвать в любом выражении (возможно, предоставляя строковый аргумент), и она вызывает &lt;code&gt;NotImplementedError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="746512bbbc5796ff33613f9c8ba4763c8e2df1ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;throw&lt;/code&gt; is an expression in Kotlin, so you can use it, for example, as part of an Elvis expression:</source>
          <target state="translated">&lt;code&gt;throw&lt;/code&gt; - это выражение в Kotlin, поэтому вы можете использовать его, например, как часть выражения Элвиса:</target>
        </trans-unit>
        <trans-unit id="82f0b362b52d255e00890f34eb5b6c90731fe6ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;throw&lt;/code&gt;&lt;a href=&quot;exceptions&quot;&gt;throws an exception&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;throw&lt;/code&gt; &lt;a href=&quot;exceptions&quot;&gt;выдает исключение&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="522b75ea192fc01f31126dceb76e4403d6efed86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;throwOnInvalidSequence&lt;/code&gt; - specifies whether to throw an exception on malformed byte sequence or replace it by the replacement char &lt;code&gt;\uFFFD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;throwOnInvalidSequence&lt;/code&gt; - указывает, следует ли генерировать исключение для искаженной последовательности байтов или заменить его заменой char &lt;code&gt;\uFFFD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0786bbec1c422619dd28386c34573a869b9d8118" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;throwOnInvalidSequence&lt;/code&gt; - specifies whether to throw an exception on malformed char sequence or replace.</source>
          <target state="translated">&lt;code&gt;throwOnInvalidSequence&lt;/code&gt; - указывает, следует ли генерировать исключение для искаженной последовательности символов или заменять.</target>
        </trans-unit>
        <trans-unit id="1792b36896bac4d766607f8e3bc1828ec037cfd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toBigDecimal&lt;/code&gt; for &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt;, &lt;code&gt;Double&lt;/code&gt;, and &lt;code&gt;BigInteger&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;toBigDecimal&lt;/code&gt; для &lt;code&gt;Int&lt;/code&gt; , &lt;code&gt;Long&lt;/code&gt; , &lt;code&gt;Float&lt;/code&gt; , &lt;code&gt;Double&lt;/code&gt; и &lt;code&gt;BigInteger&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="fe5553087ec0f88c70336b42de18b8470324718a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toBigInteger&lt;/code&gt; for &lt;code&gt;Int&lt;/code&gt; and &lt;code&gt;Long&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;toBigInteger&lt;/code&gt; для &lt;code&gt;Int&lt;/code&gt; и &lt;code&gt;Long&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="4f7e08f507e6c7df158092b47787a4feb113953d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toBits&lt;/code&gt; and &lt;code&gt;toRawBits&lt;/code&gt; returning &lt;code&gt;Long&lt;/code&gt; for &lt;code&gt;Double&lt;/code&gt; and &lt;code&gt;Int&lt;/code&gt; for &lt;code&gt;Float&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;toBits&lt;/code&gt; и &lt;code&gt;toRawBits&lt;/code&gt; возвращают &lt;code&gt;Long&lt;/code&gt; для &lt;code&gt;Double&lt;/code&gt; и &lt;code&gt;Int&lt;/code&gt; для &lt;code&gt;Float&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="8cc386b6e87bc3448b7797f22b1c5c03d88f6f6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toBits&lt;/code&gt;, &lt;code&gt;toRawBits&lt;/code&gt;, &lt;code&gt;Double.fromBits&lt;/code&gt; (these are in the &lt;code&gt;kotlin&lt;/code&gt; package).</source>
          <target state="translated">&lt;code&gt;toBits&lt;/code&gt; , &lt;code&gt;toRawBits&lt;/code&gt; , &lt;code&gt;Double.fromBits&lt;/code&gt; (они находятся в пакете &lt;code&gt;kotlin&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="545b09bd6d4acfec1c751aec080997d656fe9ab9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toFreeze&lt;/code&gt; - an object intended to be frozen.</source>
          <target state="translated">&lt;code&gt;toFreeze&lt;/code&gt; - объект, предназначенный для замораживания.</target>
        </trans-unit>
        <trans-unit id="6b4a76a08f85d95173c5d687f607f534a61aef29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toIndex&lt;/code&gt; - the end of the range (exclusive) to copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c46999661ce9125845aab3b1525e2711921ca7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toIndex&lt;/code&gt; - the end of the range (exclusive) to fill, size of this array by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd36734be5605a4b2128306bc53bad200416a6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toIndex&lt;/code&gt; - the end of the range (exclusive) to reverse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a666ee78e7ec97354370e63ee535333ed3f7a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toIndex&lt;/code&gt; - the end of the range (exclusive) to search in, size of this array by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f54072f4072f057f967fa37e3465b92cb356078" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toIndex&lt;/code&gt; - the end of the range (exclusive) to sort, size of this array by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f06c4d751f8417b3bd7d3f9d2a04a8c794e13d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toIndex&lt;/code&gt; - the end of the range (exclusive) to sort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c0c56284f7d7d6ee2371715a2c8a8210aa4182" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toIndex&lt;/code&gt; - the end of the range (exclusive), must be in &lt;code&gt;fromIndex..array.size&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;toIndex&lt;/code&gt; - конец диапазона ( &lt;code&gt;fromIndex..array.size&lt;/code&gt; ), должен быть в fromIndex..array.size</target>
        </trans-unit>
        <trans-unit id="3589ae8a084d12124e3bc10fc6b2b2d3a3971bce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toString()&lt;/code&gt; of the form &lt;code&gt;&quot;User(name=John, age=42)&quot;&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;toString()&lt;/code&gt; формы &lt;code&gt;&quot;User(name=John, age=42)&quot;&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="51154d9a1d6a4913e008e93d78cebb80aa948662" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toString()&lt;/code&gt; returns a string representation of the object, similar to &lt;code&gt;__str__()&lt;/code&gt; in Python (the default implementation is rather uninteresting, as it only returns the class name and something akin to the object's id)</source>
          <target state="translated">&lt;code&gt;toString()&lt;/code&gt; возвращает строковое представление объекта, подобное &lt;code&gt;__str__()&lt;/code&gt; в Python (реализация по умолчанию довольно неинтересна, так как возвращает только имя класса и что-то вроде идентификатора объекта)</target>
        </trans-unit>
        <trans-unit id="e8d872f4216b831cc8bc4d7f49dea5204e0416fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toString()&lt;/code&gt;, &lt;code&gt;equals()&lt;/code&gt;, and &lt;code&gt;hashCode()&lt;/code&gt;, which are inherited from &lt;code&gt;Any&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;toString()&lt;/code&gt; , &lt;code&gt;equals()&lt;/code&gt; и &lt;code&gt;hashCode()&lt;/code&gt; , которые унаследованы от &lt;code&gt;Any&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="638c9d74080f74c67b71667a2c185ea21e972ba5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transform&lt;/code&gt; -</source>
          <target state="translated">&lt;code&gt;transform&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="15c4b04e951d17c1a2e477f031d2bcf27cf9bdba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transform&lt;/code&gt; - function that takes the index of a character and the character itself and returns the result of the transform applied to the character.</source>
          <target state="translated">&lt;code&gt;transform&lt;/code&gt; - функция, которая принимает индекс символа и самого символа и возвращает результат преобразования, примененного к персонажу.</target>
        </trans-unit>
        <trans-unit id="039aa43b89df1fd9e312edea27e7540bd36beb5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transform&lt;/code&gt; - function that takes the index of an element and the element itself and returns the result of the transform applied to the element.</source>
          <target state="translated">&lt;code&gt;transform&lt;/code&gt; - функция, которая принимает индекс элемента и самого элемента и возвращает результат преобразования, примененного к элементу.</target>
        </trans-unit>
        <trans-unit id="104dcd522cc3ee9799b1640335aabcab9d66b3b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this callable is &lt;code&gt;abstract&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; Значение true, если этот вызываемый объект является &lt;code&gt;abstract&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bef381db8bd06ce91772cba2de44905179068baf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this callable is &lt;code&gt;final&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если этот вызываемый объект является &lt;code&gt;final&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48e9436811c46e7ef269874f8b8c972bf249af4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this callable is &lt;code&gt;open&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; Значение true, если этот вызываемый объект &lt;code&gt;open&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e7040532b788db7e1881a404c2f6f57d9ec2ec6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this class is &lt;code&gt;abstract&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если этот класс &lt;code&gt;abstract&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29cbfd008c683c372ccea25514e60950995208ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this class is &lt;code&gt;final&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если этот класс &lt;code&gt;final&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0682ac2ca7d06f0fcf26167395972d601e74dc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this class is &lt;code&gt;open&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если этот класс &lt;code&gt;open&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56d6f885f8db1cf343eb33f83893311ce3af6a58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this class is &lt;code&gt;sealed&lt;/code&gt;. See the &lt;a href=&quot;../../../../../../docs/reference/sealed-classes&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если этот класс &lt;code&gt;sealed&lt;/code&gt; . См. &lt;a href=&quot;../../../../../../docs/reference/sealed-classes&quot;&gt;Документацию&lt;/a&gt; по языку Kotlin для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="c8f6384e2a206f94eaacf8e6b9cfe3e0b6c934a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this class is a Kotlin functional interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b071fdced7370b9c523bba505946c8904ca5851" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this class is a companion object. See the &lt;a href=&quot;../../../../../../docs/reference/object-declarations#companion-objects&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если этот класс является сопутствующим объектом. См. &lt;a href=&quot;../../../../../../docs/reference/object-declarations#companion-objects&quot;&gt;Документацию&lt;/a&gt; по языку Kotlin для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="845c0cfe5e08f8ccdc3394fd10bcfbfd84a7e50e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this class is a data class. See the &lt;a href=&quot;../../../../../../docs/reference/data-classes&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если этот класс является классом данных. См. &lt;a href=&quot;../../../../../../docs/reference/data-classes&quot;&gt;Документацию&lt;/a&gt; по языку Kotlin для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="6173885a56cf421523749e79e1c37be3556ce069" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this class is an inner class. See the &lt;a href=&quot;../../../../../../docs/reference/nested-classes#inner-classes&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если этот класс является внутренним классом. См. &lt;a href=&quot;../../../../../../docs/reference/nested-classes#inner-classes&quot;&gt;Документацию&lt;/a&gt; по языку Kotlin для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="3da89216220cb9b19287d95d61d7699c69944807" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this function is &lt;code&gt;external&lt;/code&gt;. See the &lt;a href=&quot;../../../../../../docs/reference/java-interop#using-jni-with-kotlin&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если эта функция является &lt;code&gt;external&lt;/code&gt; . См. &lt;a href=&quot;../../../../../../docs/reference/java-interop#using-jni-with-kotlin&quot;&gt;Документацию&lt;/a&gt; по языку Kotlin для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="92086a8ecd17c2c4c8bffc5df741e48dda9e5af9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this function is &lt;code&gt;infix&lt;/code&gt;. See the &lt;a href=&quot;../../../../../../docs/reference/functions#infix-notation&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если эта функция является &lt;code&gt;infix&lt;/code&gt; . См. &lt;a href=&quot;../../../../../../docs/reference/functions#infix-notation&quot;&gt;Документацию&lt;/a&gt; по языку Kotlin для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="107d2be5f1d44fd574f06da199faec12b7a849ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this function is &lt;code&gt;inline&lt;/code&gt;. See the &lt;a href=&quot;../../../../../../docs/reference/inline-functions&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если эта функция &lt;code&gt;inline&lt;/code&gt; . См. &lt;a href=&quot;../../../../../../docs/reference/inline-functions&quot;&gt;Документацию&lt;/a&gt; по языку Kotlin для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="dffdc0c4a5c1dd507af4c9d86696578b69989817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this function is &lt;code&gt;operator&lt;/code&gt;. See the &lt;a href=&quot;../../../../../../docs/reference/operator-overloading&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если эта функция является &lt;code&gt;operator&lt;/code&gt; . См. &lt;a href=&quot;../../../../../../docs/reference/operator-overloading&quot;&gt;Документацию&lt;/a&gt; по языку Kotlin для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="1d7d894c3aad9ff0f0e72c2696fe7bfe07f5aef3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this is a suspending function.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если это функция приостановки.</target>
        </trans-unit>
        <trans-unit id="ef20cb76da715ecda07257a877b8973bf96552f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this parameter is &lt;code&gt;vararg&lt;/code&gt;. See the &lt;a href=&quot;../../../../../../docs/reference/functions#variable-number-of-arguments-varargs&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если этот параметр - &lt;code&gt;vararg&lt;/code&gt; . См. &lt;a href=&quot;../../../../../../docs/reference/functions#variable-number-of-arguments-varargs&quot;&gt;Документацию&lt;/a&gt; по языку Kotlin для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="9d38113bf9025316719c94c22af898602766298d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this parameter is optional and can be omitted when making a call via &lt;a href=&quot;../-k-callable/call-by&quot;&gt;KCallable.callBy&lt;/a&gt;, or &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86debaee171b6be12d0c5af394bcd5ef11cf486" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this parameter is optional and can be omitted when making a call via &lt;a href=&quot;../-k-callable/call-by#kotlin.reflect.KCallable%24callBy%28kotlin.collections.Map%28%28kotlin.reflect.KParameter%2C+kotlin.Any%29%29%29&quot;&gt;KCallable.callBy&lt;/a&gt;, or &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; , если этот параметр является необязательным и может быть опущен при вызове через &lt;a href=&quot;../-k-callable/call-by#kotlin.reflect.KCallable%24callBy%28kotlin.collections.Map%28%28kotlin.reflect.KParameter%2C+kotlin.Any%29%29%29&quot;&gt;KCallable.callBy&lt;/a&gt; , или &lt;code&gt;false&lt;/code&gt; в противном случае.</target>
        </trans-unit>
        <trans-unit id="baf7d9d384a67ac6e59b989ce1119cdbbec9d4af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this property is &lt;code&gt;const&lt;/code&gt;. See the &lt;a href=&quot;../../../../../../docs/reference/properties#compile-time-constants&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; , если это свойство равно &lt;code&gt;const&lt;/code&gt; . См. &lt;a href=&quot;../../../../../../docs/reference/properties#compile-time-constants&quot;&gt;Документацию&lt;/a&gt; по языку Kotlin для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="9f86909c75ad3bc1f327b31e716a0fc67647217c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this property is &lt;code&gt;lateinit&lt;/code&gt;. See the &lt;a href=&quot;../../../../../../docs/reference/properties#late-initialized-properties&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; &lt;code&gt;lateinit&lt;/code&gt; true, если это свойство - lateinit . См. &lt;a href=&quot;../../../../../../docs/reference/properties#late-initialized-properties&quot;&gt;Документацию&lt;/a&gt; по языку Kotlin для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="a2f2c3c702782f18fca73e673181765083a26fad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this type parameter is &lt;code&gt;reified&lt;/code&gt;. See the &lt;a href=&quot;../../../../../../docs/reference/inline-functions#reified-type-parameters&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если этот параметр типа &lt;code&gt;reified&lt;/code&gt; . См. &lt;a href=&quot;../../../../../../docs/reference/inline-functions#reified-type-parameters&quot;&gt;Документацию&lt;/a&gt; по языку Kotlin для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="43312f027e03b0d0813f6bd37363cc691544b17a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if this type was marked nullable in the source code.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если этот тип был помечен как допускающий значение NULL в исходном коде.</target>
        </trans-unit>
        <trans-unit id="37f317994df4c5094e8b2eff3348d68fdc66f93d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d588010212f4bda854e420b0e2fe0c3bfcf2c29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; specifies the 'true' value of the &lt;a href=&quot;basic-types#booleans&quot;&gt;Boolean type&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; указывает истинное значение &lt;a href=&quot;basic-types#booleans&quot;&gt;логического типа&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="def3b82ed42051cd1d682dd5d63d63bd8b451966" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; to ignore character case when comparing characters. By default &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; чтобы игнорировать регистр символов при сравнении символов. По умолчанию &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c263006ed892c84d96985df25d92c169c705aa72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;truncate(x)&lt;/code&gt; is &lt;code&gt;x&lt;/code&gt; where &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; or &lt;code&gt;+Inf&lt;/code&gt; or &lt;code&gt;-Inf&lt;/code&gt; or already a mathematical integer.</source>
          <target state="translated">&lt;code&gt;truncate(x)&lt;/code&gt; является &lt;code&gt;x&lt;/code&gt; , где &lt;code&gt;x&lt;/code&gt; является &lt;code&gt;NaN&lt;/code&gt; или &lt;code&gt;+Inf&lt;/code&gt; или &lt;code&gt;-Inf&lt;/code&gt; или уже математическое целое число.</target>
        </trans-unit>
        <trans-unit id="b005f49eb850051951850520142309885972d4b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;try&lt;/code&gt;&lt;a href=&quot;exceptions&quot;&gt;begins an exception handling block&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;try&lt;/code&gt; &lt;a href=&quot;exceptions&quot;&gt;начинает блок обработки исключений&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc524b0c1455c19d99ad2f0f73cdfe3b44523b81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typealias&lt;/code&gt; declares a &lt;a href=&quot;type-aliases&quot;&gt;type alias&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;typealias&lt;/code&gt; объявляет &lt;a href=&quot;type-aliases&quot;&gt;псевдоним типа&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9f304545f689ccc427483b7e430c59224af092b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typedef&lt;/code&gt; are represented as &lt;code&gt;typealias&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;typedef&lt;/code&gt; представлены как &lt;code&gt;typealias&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f00931216e6f873ac298c242736ed5301db89610" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeof&lt;/code&gt; reserved for future use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a10ed8d79d6bb179c17c581bca9efe81e14350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ulp&lt;/code&gt; extension property;</source>
          <target state="translated">&lt;code&gt;ulp&lt;/code&gt; расширения ulp ;</target>
        </trans-unit>
        <trans-unit id="88894535390d48153d0df5237c35c261b817eee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;until&lt;/code&gt; - must be positive.</source>
          <target state="translated">&lt;code&gt;until&lt;/code&gt; - должно быть положительно.</target>
        </trans-unit>
        <trans-unit id="70bdbcf3b6f6b264e85bd3eda2c1b89301be47b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;use&lt;/code&gt; can be invoked on anything that implements the &lt;code&gt;Closeable&lt;/code&gt; interface, and when the &lt;code&gt;use&lt;/code&gt; block ends (whether normally or due to an exception), &lt;code&gt;close()&lt;/code&gt; will be called on the object upon which you invoked &lt;code&gt;use&lt;/code&gt;. If an exception is raised within the block or by &lt;code&gt;close()&lt;/code&gt;, it will bubble out of &lt;code&gt;use&lt;/code&gt;. If both the block and &lt;code&gt;close()&lt;/code&gt; raise, it's the exception from the block that will bubble out.</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; может быть вызван для всего, что реализует интерфейс &lt;code&gt;Closeable&lt;/code&gt; , и когда блок &lt;code&gt;use&lt;/code&gt; заканчивается (обычно или из-за исключения), &lt;code&gt;close()&lt;/code&gt; будет вызываться для объекта, для которого вы вызвали &lt;code&gt;use&lt;/code&gt; . Если исключение возникает внутри блока или с помощью функции &lt;code&gt;close()&lt;/code&gt; , оно перестает &lt;code&gt;use&lt;/code&gt; . Если и блок, и &lt;code&gt;close()&lt;/code&gt; поднимаются, выпадет исключение из блока.</target>
        </trans-unit>
        <trans-unit id="03e06d7eda7b91ad152cb1d8d121b82a0f4d6e8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ushr(bits)&lt;/code&gt; &amp;ndash; unsigned shift right</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7d080477ee6fa0bcb122170eea31fcee38caa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ushr(bits)&lt;/code&gt; &amp;ndash; unsigned shift right (Java's &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;ushr(bits)&lt;/code&gt; - сдвиг вправо без знака (Java &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1f2767a8e31b1f6772a122aac9c837c1e6c8702d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;val String.cstr: CValuesRef&amp;lt;ByteVar&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;val String.cstr: CValuesRef&amp;lt;ByteVar&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4087cad031bb61396a802e4efc05908ac3b667f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;val&lt;/code&gt; backing field reassignment in getter</source>
          <target state="translated">&lt;code&gt;val&lt;/code&gt; переназначение поля поддержки val в геттере</target>
        </trans-unit>
        <trans-unit id="3c47a16d0f9ef80aac46c5f31c7b824ae04dd75f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;val&lt;/code&gt; declares a read-only &lt;a href=&quot;properties&quot;&gt;property&lt;/a&gt; or &lt;a href=&quot;basic-syntax#defining-variables&quot;&gt;local variable&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;val&lt;/code&gt; объявляет &lt;a href=&quot;properties&quot;&gt;свойство&lt;/a&gt; только для чтения или &lt;a href=&quot;basic-syntax#defining-variables&quot;&gt;локальную переменную&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="061709f9b617fe4ffa1a61ef823f9effba27961f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; &amp;mdash; must be of the same type as the property (or its supertype).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ec4497c1d4592ea4212ad5162dc01d2e4f19cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - The value of captured group.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; - значение захваченной группы.</target>
        </trans-unit>
        <trans-unit id="23d64a7f06434d7ad3888dfa5b59c1bd1b67af84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - must be a &lt;a href=&quot;from-value#kotlinx.cinterop.StableRef.Companion%24fromValue%28kotlinx.cinterop.CPointer%28%28kotlinx.cinterop.CPointed%29%29%29%2Fvalue&quot;&gt;value&lt;/a&gt; of some &lt;a href=&quot;index&quot;&gt;StableRef&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; - должно быть &lt;a href=&quot;from-value#kotlinx.cinterop.StableRef.Companion%24fromValue%28kotlinx.cinterop.CPointer%28%28kotlinx.cinterop.CPointed%29%29%29%2Fvalue&quot;&gt;значением&lt;/a&gt; некоторого &lt;a href=&quot;index&quot;&gt;StableRef&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ccadc4e582dc16b1fb7c46b9c6b697df3b00a3a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - must be a &lt;a href=&quot;from-value#kotlinx.cinterop.StableRef.Companion%24fromValue(kotlinx.cinterop.CPointer((kotlinx.cinterop.CPointed)))/value&quot;&gt;value&lt;/a&gt; of some &lt;a href=&quot;index&quot;&gt;StableRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9770089e6b57a87a0f774b23d5a9ee78923e8ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - necessary annotation retention (RUNTIME, BINARY or SOURCE)</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; - необходимое сохранение аннотации (RUNTIME, BINARY или SOURCE)</target>
        </trans-unit>
        <trans-unit id="cb9a49c97211bfef26301c31c00e46033bea0e61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the character sequence from which a subsequence is appended. If &lt;a href=&quot;../-appendable/append#kotlin.text.Appendable%24append(kotlin.CharSequence?,%20kotlin.Int,%20kotlin.Int)/value&quot;&gt;value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, then characters are appended as if &lt;a href=&quot;../-appendable/append#kotlin.text.Appendable%24append(kotlin.CharSequence?,%20kotlin.Int,%20kotlin.Int)/value&quot;&gt;value&lt;/a&gt; contained the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42a17e4913029f1b7a07b857b2b0951010fec0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the character sequence from which a subsequence is appended. If &lt;a href=&quot;append#kotlin.text.Appendable%24append(kotlin.CharSequence?,%20kotlin.Int,%20kotlin.Int)/value&quot;&gt;value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, then characters are appended as if &lt;a href=&quot;append#kotlin.text.Appendable%24append(kotlin.CharSequence?,%20kotlin.Int,%20kotlin.Int)/value&quot;&gt;value&lt;/a&gt; contained the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8977222d345f436b41290dc198901d65ea4c702" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the character sequence from which characters are inserted. If &lt;a href=&quot;insert#kotlin.text.StringBuilder%24insert(kotlin.Int,%20kotlin.CharSequence?)/value&quot;&gt;value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2dbabf61c491742b964f03d1b175a69617d6d7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the character sequence to append. If &lt;a href=&quot;../-appendable/append#kotlin.text.Appendable%24append(kotlin.CharSequence?)/value&quot;&gt;value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are appended to this Appendable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17295ef534a653efdc9e736d507019ff06c8630d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the character sequence to append. If &lt;a href=&quot;append#kotlin.text.Appendable%24append(kotlin.CharSequence?)/value&quot;&gt;value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are appended to this Appendable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917dd082b30448043d03ad8a12810ac693cf047b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the character to append.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e21c9b75cca874038882f9fe38fd5b9854e4620" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the new value to be assigned to this property.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; - новое значение, которое будет присвоено этому свойству.</target>
        </trans-unit>
        <trans-unit id="48bfefd5893711d24831fcb82c147c77d10a70a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the qualifier to add to the declarations in the generated code. It must be a sequence of valid JavaScript identifiers separated by the &lt;code&gt;.&lt;/code&gt; character. Examples of valid qualifiers are: &lt;code&gt;foo&lt;/code&gt;, &lt;code&gt;bar.Baz&lt;/code&gt;, &lt;code&gt;_.$0.f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; - квалификатор, добавляемый к объявлениям в сгенерированном коде. Это должна быть последовательность действительных идентификаторов JavaScript, разделенных знаком &lt;code&gt;.&lt;/code&gt; персонаж. Примеры правильных классификаторов являются: &lt;code&gt;foo&lt;/code&gt; , &lt;code&gt;bar.Baz&lt;/code&gt; , &lt;code&gt;_.$0.f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ab46dca581ecbc08183d3f197bf6ab155c81e84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the underlying value.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; - базовая стоимость.</target>
        </trans-unit>
        <trans-unit id="c735a93eb7b23f076be050f35df61961783a2985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - the value to set.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; - значение, которое нужно установить.</target>
        </trans-unit>
        <trans-unit id="e03c7180b6c060e655d4e614262a11a520f50e0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var ConsoleOutput = function (_, Kotlin) { ... }&lt;/code&gt;: this is the variable named after your Kotlin module. Its value is the result of an anonymous function call. The rest of the code is the function body.</source>
          <target state="translated">&lt;code&gt;var ConsoleOutput = function (_, Kotlin) { ... }&lt;/code&gt; : это переменная, названная в честь вашего модуля Kotlin. Его значение является результатом анонимного вызова функции. Остальная часть кода - это тело функции.</target>
        </trans-unit>
        <trans-unit id="b9592e0a8ea83521987a70d32de67303547746c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var println = Kotlin.kotlin.io.println_s8jyv4$;&lt;/code&gt;: a variable that refers to the &lt;code&gt;kotlin.io.println&lt;/code&gt; function from the passed in parameter &lt;code&gt;Kotlin&lt;/code&gt;. This is a way to import the standard &lt;code&gt;println&lt;/code&gt; function defined in &lt;code&gt;kotlin.js&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;var println = Kotlin.kotlin.io.println_s8jyv4$;&lt;/code&gt; : переменная, которая ссылается на функцию &lt;code&gt;kotlin.io.println&lt;/code&gt; из переданного параметра &lt;code&gt;Kotlin&lt;/code&gt; . Это способ импорта стандартной функции &lt;code&gt;println&lt;/code&gt; , определенной в &lt;code&gt;kotlin.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1bf2c9d03fd4b30bf37e4d093f10b03acda902f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; declares a mutable &lt;a href=&quot;properties&quot;&gt;property&lt;/a&gt; or &lt;a href=&quot;basic-syntax#defining-variables&quot;&gt;local variable&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; объявляет изменяемое &lt;a href=&quot;properties&quot;&gt;свойство&lt;/a&gt; или &lt;a href=&quot;basic-syntax#defining-variables&quot;&gt;локальную переменную&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5957c65f7fc9d13bc008ba085ac98603b4b442ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vararg&lt;/code&gt; allows &lt;a href=&quot;functions#variable-number-of-arguments-varargs&quot;&gt;passing a variable number of arguments for a parameter&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;vararg&lt;/code&gt; позволяет &lt;a href=&quot;functions#variable-number-of-arguments-varargs&quot;&gt;передавать переменное количество аргументов для параметра&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec11f8c999f8da0fd10813eac21c62770702b3c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;verbose&lt;/code&gt;: Enable verbose output.</source>
          <target state="translated">&lt;code&gt;verbose&lt;/code&gt; : включить подробный вывод.</target>
        </trans-unit>
        <trans-unit id="92c8a0d131c26de196669d8b5862b5f1f94f1c4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt; - the version in the following formats: &lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;.&amp;lt;patch&amp;gt;&lt;/code&gt;, where major, minor and patch are non-negative integer numbers without leading zeros.</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; - версия в следующих форматах: &lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;.&amp;lt;patch&amp;gt;&lt;/code&gt; , где major, minor и patch - неотрицательные целые числа без ведущих нулей.</target>
        </trans-unit>
        <trans-unit id="32a544b8c3858a2c4749a1c0ebc16ee8291a7792" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt; is a version of the Gradle project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb87c17236c5dc7ef81b226bbf098fd0f7c1763" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;void*&lt;/code&gt; is mapped to &lt;code&gt;COpaquePointer&lt;/code&gt; &amp;ndash; the special pointer type which is the supertype for any other pointer type. So if the C function takes &lt;code&gt;void*&lt;/code&gt;, then the Kotlin binding accepts any &lt;code&gt;CPointer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;void*&lt;/code&gt; сопоставляется с &lt;code&gt;COpaquePointer&lt;/code&gt; - специальным типом указателя, который является супертипом для любого другого типа указателя. Итак, если функция C принимает &lt;code&gt;void*&lt;/code&gt; , то привязка Kotlin принимает любой &lt;code&gt;CPointer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d41555163d1ffa6cdb38c81185097c14023973e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wasm32&lt;/code&gt; for WebAssembly.</source>
          <target state="translated">&lt;code&gt;wasm32&lt;/code&gt; для WebAssembly.</target>
        </trans-unit>
        <trans-unit id="5500d7301e4bdb0a81de7eceee2cbdb55f314bf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;when&lt;/code&gt; begins a &lt;a href=&quot;control-flow#when-expression&quot;&gt;when expression&lt;/a&gt; (executes one of the given branches)</source>
          <target state="translated">&lt;code&gt;when&lt;/code&gt; начинается &lt;a href=&quot;control-flow#when-expression&quot;&gt;выражение when&lt;/a&gt; (выполняет одну из заданных ветвей)</target>
        </trans-unit>
        <trans-unit id="813959087fef504bbcd1a88424364a0e21606dfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;when&lt;/code&gt; entry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0026d4e03b045e2df5c8041f634ef6d00fbf32f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;when&lt;/code&gt; expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a7208dcca095d25e928eb5f0443e189a009f61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; - a frozen object that was attempted to mutate</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; - замороженный объект, который пытались мутировать</target>
        </trans-unit>
        <trans-unit id="cae7dd02ba7a7653467a24b815acb806ba2d1eba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; specifies &lt;a href=&quot;generics#upper-bounds&quot;&gt;constraints for a generic type parameter&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; задает &lt;a href=&quot;generics#upper-bounds&quot;&gt;ограничения для параметра универсального типа&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e968b996ca3fbf3427be432a96c253fea7a1f13e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while&lt;/code&gt; begins a &lt;a href=&quot;control-flow#while-loops&quot;&gt;while loop&lt;/a&gt; (loop with precondition)</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; начинает &lt;a href=&quot;control-flow#while-loops&quot;&gt;цикл while&lt;/a&gt; (цикл с предварительным условием)</target>
        </trans-unit>
        <trans-unit id="f6c3ddab0607925fb0cf55686fcd1e9b5655629f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;while&lt;/code&gt; loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daff7d694f02b978f83b66b6dcc3d7f9927bd522" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;windowed()&lt;/code&gt; provides more flexibility with optional parameters:</source>
          <target state="translated">&lt;code&gt;windowed()&lt;/code&gt; обеспечивает большую гибкость с дополнительными параметрами:</target>
        </trans-unit>
        <trans-unit id="efc76a751bae9b1ccb9cc3574d3350ef9f6c1bef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;withSign&lt;/code&gt; extension function;</source>
          <target state="translated">&lt;code&gt;withSign&lt;/code&gt; расширения withSign ;</target>
        </trans-unit>
        <trans-unit id="c7c34b39d0ccfed20a3765c04059a5d01125f3b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x ?: y&lt;/code&gt; evaluates &lt;code&gt;x&lt;/code&gt;, which becomes the result of the expression unless it's null, in which case you'll get &lt;code&gt;y&lt;/code&gt; instead (which ought to be of a non-nullable type). This is also known as the &quot;Elvis operator&quot;. You can even use it to perform an early return in case of null:</source>
          <target state="translated">&lt;code&gt;x ?: y&lt;/code&gt; вычисляет &lt;code&gt;x&lt;/code&gt; , которое становится результатом выражения, если оно не равно null, и в этом случае вместо этого вы получите &lt;code&gt;y&lt;/code&gt; (который должен иметь тип, не допускающий значения NULL). Это также известно как &amp;laquo;оператор Элвиса&amp;raquo;. Вы даже можете использовать его для раннего возврата в случае нуля:</target>
        </trans-unit>
        <trans-unit id="b3374ff1d1757994cb4187ba4a59ab8ec4e5c4cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x.nextTowards(y)&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; if either &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; are &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x.nextTowards(y)&lt;/code&gt; равно &lt;code&gt;NaN&lt;/code&gt; , если &lt;code&gt;x&lt;/code&gt; или &lt;code&gt;y&lt;/code&gt; равны &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c214be437756d38ba63986462c6054d0ad4cccf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x.roundToInt() == Int.MAX_VALUE&lt;/code&gt; when &lt;code&gt;x &amp;gt; Int.MAX_VALUE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x.roundToInt() == Int.MAX_VALUE&lt;/code&gt; когда &lt;code&gt;x &amp;gt; Int.MAX_VALUE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d26413dcf8a274e128e35bc2646602784d83da34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x.roundToInt() == Int.MIN_VALUE&lt;/code&gt; when &lt;code&gt;x &amp;lt; Int.MIN_VALUE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x.roundToInt() == Int.MIN_VALUE&lt;/code&gt; когда &lt;code&gt;x &amp;lt; Int.MIN_VALUE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0c9eff6b586527c272cc1c787d42c0901156e84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x.roundToLong() == Long.MAX_VALUE&lt;/code&gt; when &lt;code&gt;x &amp;gt; Long.MAX_VALUE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x.roundToLong() == Long.MAX_VALUE&lt;/code&gt; когда &lt;code&gt;x &amp;gt; Long.MAX_VALUE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="612d7a72ebefaecf14c31091c444a2ebf1856013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x.roundToLong() == Long.MIN_VALUE&lt;/code&gt; when &lt;code&gt;x &amp;lt; Long.MIN_VALUE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x.roundToLong() == Long.MIN_VALUE&lt;/code&gt; когда &lt;code&gt;x &amp;lt; Long.MIN_VALUE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="45980bc8190af90667d2abf96d483fbddc7515a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x.ulp&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt; when &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;+Inf&lt;/code&gt; or &lt;code&gt;-Inf&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x.ulp&lt;/code&gt; равно &lt;code&gt;+Inf&lt;/code&gt; , когда &lt;code&gt;x&lt;/code&gt; равно &lt;code&gt;+Inf&lt;/code&gt; или &lt;code&gt;-Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2d29bf16c333939cb9d3d3120668f3f53a8e7da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x?.y&lt;/code&gt; evaluates &lt;code&gt;x&lt;/code&gt;, and if it is not null, it evaluates &lt;code&gt;x.y&lt;/code&gt; (without reevaluating &lt;code&gt;x&lt;/code&gt;), whose result becomes the result of the expression - otherwise, you get null. This also works for functions, and it can be chained - for example, &lt;code&gt;x?.y()?.z?.w()&lt;/code&gt; will return null if any of &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;x.y()&lt;/code&gt;, or &lt;code&gt;x.y().z&lt;/code&gt; produce null; otherwise, it will return the result of &lt;code&gt;x.y().z.w()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x?.y&lt;/code&gt; оценивает &lt;code&gt;x&lt;/code&gt; , и если он не равен нулю, он оценивает &lt;code&gt;x.y&lt;/code&gt; (без переоценки &lt;code&gt;x&lt;/code&gt; ), результат которого становится результатом выражения - в противном случае вы получаете null. Это также работает для функций, и это может быть связано - например, &lt;code&gt;x?.y()?.z?.w()&lt;/code&gt; вернет null, если какой-либо из &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;x.y()&lt;/code&gt; или &lt;code&gt;x.y().z&lt;/code&gt; произведет null; в противном случае он вернет результат &lt;code&gt;x.y().z.w()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b431fa67cf12965c6a226504a45520cef1289c89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xor(bits)&lt;/code&gt; &amp;ndash; bitwise &lt;strong&gt;xor&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e69551c5c0c395c32af26818569bd49f6e7cd46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xor(bits)&lt;/code&gt; &amp;ndash; bitwise xor</source>
          <target state="translated">&lt;code&gt;xor(bits)&lt;/code&gt; - побитовый xor</target>
        </trans-unit>
        <trans-unit id="20792616e164307f0f6f1aaa93499e52a3e00558" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xs union ys as Set&amp;lt;*&amp;gt;&lt;/code&gt; and &lt;code&gt;xs union (ys as Set&amp;lt;*&amp;gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;xs union ys as Set&amp;lt;*&amp;gt;&lt;/code&gt; и &lt;code&gt;xs union (ys as Set&amp;lt;*&amp;gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6341d31fe3b76ebe3949824ce618e14ec9ea56b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xs union ys as Set&amp;lt;*&amp;gt;&lt;/code&gt; is equivalent to &lt;code&gt;xs union (ys as Set&amp;lt;*&amp;gt;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ebaf312aaa17dea995318ed31531f08cae6984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ definedExternally }&lt;/code&gt; (for functions and property getters/setters).</source>
          <target state="translated">&lt;code&gt;{ definedExternally }&lt;/code&gt; (для функций и методов получения и установки свойств).</target>
        </trans-unit>
        <trans-unit id="1d141b7e10f3472c35c93ba55debb58d409df47f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{module}.js&lt;/code&gt;. The actual code from the application. All files are compiled into a single JavaScript file which has the same name as the module.</source>
          <target state="translated">&lt;code&gt;{module}.js&lt;/code&gt; . Актуальный код из приложения. Все файлы компилируются в один файл JavaScript с тем же именем, что и модуль.</target>
        </trans-unit>
        <trans-unit id="15d6193c8855ed9061fa77c50c2fd518055b41cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;||&lt;/code&gt; &amp;ndash; lazy disjunction</source>
          <target state="translated">&lt;code&gt;||&lt;/code&gt; - ленивая дизъюнкция</target>
        </trans-unit>
        <trans-unit id="b7ffdc158a19f2718388e88f46a88dc27dc2f6d8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(optionally)&lt;/em&gt; the function &lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace%28kotlin.Function%28%28kotlin.contracts.ContractBuilder.callsInPlace.R%29%29%2C+kotlin.contracts.InvocationKind%29%2Flambda&quot;&gt;lambda&lt;/a&gt; is invoked the amount of times specified by the &lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace%28kotlin.Function%28%28kotlin.contracts.ContractBuilder.callsInPlace.R%29%29%2C+kotlin.contracts.InvocationKind%29%2Fkind&quot;&gt;kind&lt;/a&gt; parameter, see the &lt;a href=&quot;../-invocation-kind/index&quot;&gt;InvocationKind&lt;/a&gt; enum for possible values.</source>
          <target state="translated">&lt;em&gt;(необязательно)&lt;/em&gt; функция &lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace%28kotlin.Function%28%28kotlin.contracts.ContractBuilder.callsInPlace.R%29%29%2C+kotlin.contracts.InvocationKind%29%2Flambda&quot;&gt;лямбда&lt;/a&gt; вызывается столько раз, сколько указано в параметре &lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace%28kotlin.Function%28%28kotlin.contracts.ContractBuilder.callsInPlace.R%29%29%2C+kotlin.contracts.InvocationKind%29%2Fkind&quot;&gt;kind&lt;/a&gt; , возможные значения см. в перечислении &lt;a href=&quot;../-invocation-kind/index&quot;&gt;InvocationKind&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="694ff58cdf08757d6e936133ad052f49987921f0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(optionally)&lt;/em&gt; the function &lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace(kotlin.Function((kotlin.contracts.ContractBuilder.callsInPlace.R)),%20kotlin.contracts.InvocationKind)/lambda&quot;&gt;lambda&lt;/a&gt; is invoked the amount of times specified by the &lt;a href=&quot;calls-in-place#kotlin.contracts.ContractBuilder%24callsInPlace(kotlin.Function((kotlin.contracts.ContractBuilder.callsInPlace.R)),%20kotlin.contracts.InvocationKind)/kind&quot;&gt;kind&lt;/a&gt; parameter, see the &lt;a href=&quot;../-invocation-kind/index&quot;&gt;InvocationKind&lt;/a&gt; enum for possible values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a41f3eb2dcb4f57ce41fe5fc3912a6b553f952d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;code&gt;-n&lt;/code&gt; is optional, this flag is applied by default&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;-n&lt;/code&gt; не является обязательным, этот флаг применяется по умолчанию&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="45fabde5a853ee0c0f6ca31ceb7a1d324af44bec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Association&lt;/em&gt; transformations allow building maps from the collection elements and certain values associated with them. In different association types, the elements can be either keys or values in the association map.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;Преобразования &lt;em&gt;ассоциаций&lt;/em&gt; позволяют строить карты из элементов коллекции и определенных значений, связанных с ними. В различных типах ассоциаций элементы могут быть либо ключами, либо значениями на карте ассоциации.</target>
        </trans-unit>
        <trans-unit id="d220051876daa0991641918f62919bf172ade4cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Below, we use OV for &quot;Older Version&quot;, and NV for &quot;Newer Version&quot;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Ниже мы используем OV для &amp;laquo;старой версии&amp;raquo; и NV для &amp;laquo;новой версии&amp;raquo;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7a04ea9849d8f6a36fd6cd2292526633888c4ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Component functions&lt;/em&gt; generated for data classes enable their use in &lt;a href=&quot;multi-declarations&quot;&gt;destructuring declarations&lt;/a&gt;:</source>
          <target state="translated">&lt;em&gt;Компонентные функции,&lt;/em&gt; созданные для классов данных, позволяют использовать их в &lt;a href=&quot;multi-declarations&quot;&gt;декларациях деструктуризации&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="1c418bb5666878bb14d6e3e8fe48a36ecd607961" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Contracts&lt;/em&gt; allow a function to explicitly describe its behavior in a way which is understood by the compiler. Currently, two wide classes of cases are supported:</source>
          <target state="translated">&lt;em&gt;Контракты&lt;/em&gt; позволяют функции явно описывать свое поведение способом, понятным компилятору. В настоящее время поддерживаются два широких класса корпусов:</target>
        </trans-unit>
        <trans-unit id="a7bd76c53b54562067dbff0de767e7afb868c604" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Custom&lt;/em&gt; orders let you sort instances of any type in a way you like. Particularly, you can define an order for non-comparable objects or define an order other than natural for a comparable type. To define a custom order for a type, create a &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin/-comparator/index&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; for it. &lt;code&gt;Comparator&lt;/code&gt; contains the &lt;code&gt;compare()&lt;/code&gt; function: it takes two instances of a class and returns the integer result of the comparison between them. The result is interpreted in the same way as the result of a &lt;code&gt;compareTo()&lt;/code&gt; as is described above.</source>
          <target state="translated">&lt;em&gt;Индивидуальные&lt;/em&gt; заказы позволяют вам сортировать экземпляры любого типа так, как вам нравится. В частности, вы можете определить порядок для несопоставимых объектов или определить порядок, отличный от естественного для сопоставимого типа. Чтобы определить индивидуальный порядок для типа, создайте для него &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin/-comparator/index&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Comparator&lt;/code&gt; содержит функцию &lt;code&gt;compare()&lt;/code&gt; : он принимает два экземпляра класса и возвращает целочисленный результат сравнения между ними. Результат интерпретируется так же, как результат &lt;code&gt;compareTo()&lt;/code&gt; как описано выше.</target>
        </trans-unit>
        <trans-unit id="b13944a5a494260519e59ca05924a52b544b7ab7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;EduTools supports HTML and Markdown, so you can start editing with your preferred format, or even a combination of both.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;EduTools поддерживает HTML и Markdown, поэтому вы можете начать редактирование, используя предпочтительный формат или даже их комбинацию.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="659a4e8346b2622d43a76804d7f1bd757f51adca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Example:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9423d073f2288278e51d4da68026e17ed0f5c6b1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Exercise: try removing the &lt;code&gt;sleep()&lt;/code&gt; from the program above and see the result.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Упражнение: попробуйте удалить &lt;code&gt;sleep()&lt;/code&gt; из приведенной выше программы и посмотрите результат.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="19c51704cec4376067c7ccceefc40db5f7d4eee7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;If you have a course archive shared with you by your teacher or co-worker, use the &lt;strong&gt;Import Course&lt;/strong&gt; icon to open it. You can also log in to &lt;a href=&quot;https://stepik.org/&quot;&gt;Stepik&lt;/a&gt; with the corresponding link to see all the courses available to you on this MOOC platform.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Если у вас есть архив курса, к которому вам предоставил доступ ваш преподаватель или коллега, используйте значок &amp;laquo; &lt;strong&gt;Импортировать курс&amp;raquo;,&lt;/strong&gt; чтобы открыть его. Вы также можете войти в &lt;a href=&quot;https://stepik.org/&quot;&gt;Stepik&lt;/a&gt; по соответствующей ссылке, чтобы увидеть все курсы, доступные вам на этой платформе MOOC.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="87b22b5d907267adae749869319e55244abf713c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;If you need additional files for the task, just add them and decide whether you want to make them visible to learners or not with the &lt;strong&gt;Course Creator -&amp;gt; Make Visible to / Hide from Student&lt;/strong&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Если вам нужны дополнительные файлы для задачи, просто добавьте их и решите, хотите ли вы сделать их видимыми для учащихся или нет с помощью &lt;strong&gt;Создателя курса -&amp;gt; Сделать видимыми для / Скрыть от учащегося&lt;/strong&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3fa9e7b7c13f20dc7dbb1017d8ccafb64b41c1d6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;If you need to enable the course creation functionality later, you can go to &lt;strong&gt;Help Menu -&amp;gt; Enable Course Creator Features&lt;/strong&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Если вам понадобится включить функцию создания курса позже, вы можете перейти в &lt;strong&gt;меню &amp;laquo;Справка&amp;raquo; -&amp;gt; &amp;laquo;Включить&lt;/strong&gt; функции создания &lt;strong&gt;курса&amp;raquo;&lt;/strong&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="049b29b7fec5dec2dc83b37d60094f5eb72988a1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Keeping the Language Modern&lt;/em&gt; and &lt;em&gt;Comfortable Updates&lt;/em&gt; are among the fundamental principles in Kotlin Language Design. The former says that constructions which obstruct language evolution should be removed, and the latter says that this removal should be well-communicated beforehand to make code migration as smooth as possible.</source>
          <target state="translated">&lt;em&gt;Поддержание современного языка&lt;/em&gt; и &lt;em&gt;удобные обновления&lt;/em&gt; являются одними из основных принципов Kotlin Language Design. Первый говорит, что конструкции, препятствующие развитию языка, следует удалить, а второй говорит, что об этом удалении следует заранее сообщить, чтобы сделать миграцию кода как можно более плавной.</target>
        </trans-unit>
        <trans-unit id="3576603244e907bdb431e808aa4334f0dfd3ee22" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Kotlin/Native&lt;/em&gt; follows the general tradition of Kotlin to provide excellent existing platform software interoperability. In the case of a native platform, the most important interoperability target is a C library. So &lt;em&gt;Kotlin/Native&lt;/em&gt; comes with a &lt;code&gt;cinterop&lt;/code&gt; tool, which can be used to quickly generate everything needed to interact with an external library.</source>
          <target state="translated">&lt;em&gt;Kotlin / Native&lt;/em&gt; следует общей традиции Kotlin по обеспечению отличной совместимости программного обеспечения существующей платформы. В случае собственной платформы наиболее важной целью взаимодействия является библиотека C. Итак, &lt;em&gt;Kotlin / Native&lt;/em&gt; поставляется с инструментом &lt;code&gt;cinterop&lt;/code&gt; , который можно использовать для быстрой генерации всего, что необходимо для взаимодействия с внешней библиотекой.</target>
        </trans-unit>
        <trans-unit id="4502b76c7c436bd8529b424c4bd0b5753f045a0c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Kotlin/Native&lt;/em&gt; interoperability</source>
          <target state="translated">&lt;em&gt;Kotlin / родная&lt;/em&gt; совместимость</target>
        </trans-unit>
        <trans-unit id="4d5513502d6b608466dc3045dca786c40d13ab4f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Kotlin/Native&lt;/em&gt; interoperability with Swift/Objective-C</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;Совместимость &lt;em&gt;Kotlin / Native&lt;/em&gt; с Swift / Objective-C</target>
        </trans-unit>
        <trans-unit id="8f286d2c8f8e5b2a27bf2e5655ff3b65179fca09" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;List&lt;/em&gt; is an ordered collection with access to elements by indices &amp;ndash; integer numbers that reflect their position. Elements can occur more than once in a list. An example of a list is a sentence: it's a group of words, their order is important, and they can repeat.</source>
          <target state="translated">&lt;em&gt;Список&lt;/em&gt; - это упорядоченная коллекция с доступом к элементам по индексам - целым числам, отражающим их положение. Элементы могут встречаться в списке более одного раза. Примером списка является предложение: это группа слов, их порядок важен, и они могут повторяться.</target>
        </trans-unit>
        <trans-unit id="e1186b4dcc3eb6eaf3c22facbf09f539aca82e85" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Local reference&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Местная ссылка&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="874fe0819e90b83c5e086ae59719653a39342041" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Map&lt;/em&gt; (or &lt;em&gt;dictionary&lt;/em&gt;) is a set of key-value pairs. Keys are unique, and each of them maps to exactly one value. The values can be duplicates. Maps are useful for storing logical connections between objects, for example, an employee's ID and their position.</source>
          <target state="translated">&lt;em&gt;Карта&lt;/em&gt; (или &lt;em&gt;словарь&lt;/em&gt; ) - это набор пар ключ-значение. Ключи уникальны, и каждый из них соответствует ровно одному значению. Значения могут быть дубликатами. Карты полезны для хранения логических связей между объектами, например, идентификатора сотрудника и его должности.</target>
        </trans-unit>
        <trans-unit id="45c72534c997c0e4796b53d7f6858daa15ffa794" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NOTE&lt;/em&gt; for Java users: outer class does not see private members of its inner classes in Kotlin.</source>
          <target state="translated">&lt;em&gt;ПРИМЕЧАНИЕ&lt;/em&gt; для пользователей Java: внешний класс не видит закрытых членов своих внутренних классов в Kotlin.</target>
        </trans-unit>
        <trans-unit id="63bb8ca23f3d7b64da126b72ed5f379b0c6c243d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NOTE&lt;/em&gt;: if you use a producer-object, say, &lt;code&gt;List&amp;lt;? extends Foo&amp;gt;&lt;/code&gt;, you are not allowed to call &lt;code&gt;add()&lt;/code&gt; or &lt;code&gt;set()&lt;/code&gt; on this object, but this does not mean that this object is &lt;strong&gt;immutable&lt;/strong&gt;: for example, nothing prevents you from calling &lt;code&gt;clear()&lt;/code&gt; to remove all items from the list, since &lt;code&gt;clear()&lt;/code&gt; does not take any parameters at all. The only thing guaranteed by wildcards (or other types of variance) is &lt;strong&gt;type safety&lt;/strong&gt;. Immutability is a completely different story.</source>
          <target state="translated">&lt;em&gt;ПРИМЕЧАНИЕ&lt;/em&gt; : если вы используете объект-производитель, скажем, &lt;code&gt;List&amp;lt;? extends Foo&amp;gt;&lt;/code&gt; , вам не разрешено вызывать &lt;code&gt;add()&lt;/code&gt; или &lt;code&gt;set()&lt;/code&gt; для этого объекта, но это не означает, что этот объект является &lt;strong&gt;неизменяемым&lt;/strong&gt; : например, ничто не мешает вам вызвать &lt;code&gt;clear()&lt;/code&gt; для удаления всех элементов из списка , поскольку &lt;code&gt;clear()&lt;/code&gt; вообще не принимает никаких параметров. Единственное, что гарантируется подстановочными знаками (или другими типами дисперсии), - это &lt;strong&gt;безопасность типов&lt;/strong&gt; . Неизменяемость - это совсем другая история.</target>
        </trans-unit>
        <trans-unit id="29c7a958d54264468bbbd1a360c401d54f68c450" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NPM Directory&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Справочник NPM&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="04e35c0933eb4c2013ee62c6eb2bdb148591cf07" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Non-literal&lt;/em&gt; values of function types with and without receiver are interchangeable, so that the receiver can stand in for the first parameter, and vice versa. For instance, a value of type &lt;code&gt;(A, B) -&amp;gt; C&lt;/code&gt; can be passed or assigned where a &lt;code&gt;A.(B) -&amp;gt; C&lt;/code&gt; is expected and the other way around:</source>
          <target state="translated">&lt;em&gt;Не буквальные&lt;/em&gt; значения типов функций с получателем и без него взаимозаменяемы, так что получатель может заменять первый параметр, и наоборот. Например, значение типа &lt;code&gt;(A, B) -&amp;gt; C&lt;/code&gt; может быть передано или назначено там, где ожидается &lt;code&gt;A.(B) -&amp;gt; C&lt;/code&gt; и наоборот:</target>
        </trans-unit>
        <trans-unit id="1856aab5e71190a041ae8f7628b67cb8336e5f54" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: We'll be using IntelliJ IDEA 2018.3 EAP, Android Studio 3.2, Kotlin 1.3.21, Xcode 10.0, macOS 10.14, Gradle 4.7&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Примечание. Мы будем использовать IntelliJ IDEA 2018.3 EAP, Android Studio 3.2, Kotlin 1.3.21, Xcode 10.0, macOS 10.14, Gradle 4.7.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="59d2eea60da2292d1627875bc0a780b2c702f0f8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Future versions of Kotlin may change the algorithm of this seeded number generator so that it will return a sequence of values different from the current one for a given seed.</source>
          <target state="translated">&lt;em&gt;Примечание:&lt;/em&gt; будущие версии Kotlin могут изменить алгоритм этого генератора начальных чисел, чтобы он возвращал последовательность значений, отличную от текущей для данного начального числа.</target>
        </trans-unit>
        <trans-unit id="82a2e8cc61c35f195f06ee34ae26d3c7b12520e3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Supporting the DWARF 2 specification means that the debugger tool recognizes Kotlin as C89, because before the DWARF 5 specification, there is no identifier for the Kotlin language type in specification.</source>
          <target state="translated">&lt;em&gt;Примечание.&lt;/em&gt; Поддержка спецификации DWARF 2 означает, что инструмент отладчика распознает Kotlin как C89, потому что до спецификации DWARF 5 в спецификации не было идентификатора для типа языка Kotlin.</target>
        </trans-unit>
        <trans-unit id="040794cbb429ac9d018163b6bf3519024398ddfe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt; that these operations, as well as all the others, are optimized for &lt;a href=&quot;basic-types&quot;&gt;Basic types&lt;/a&gt; and do not introduce overhead of function calls for them.</source>
          <target state="translated">&lt;em&gt;Обратите внимание,&lt;/em&gt; что эти операции, как и все другие, оптимизированы для &lt;a href=&quot;basic-types&quot;&gt;базовых типов&lt;/a&gt; и не вызывают накладных расходов на вызовы функций для них.</target>
        </trans-unit>
        <trans-unit id="dcf5f234032d0969342f82f537e56b60b5323593" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; (identity checks) are not overloadable, so no conventions exist for them.</source>
          <target state="translated">&lt;em&gt;Примечание&lt;/em&gt; : &lt;code&gt;===&lt;/code&gt; и &lt;code&gt;!==&lt;/code&gt; (проверки личности) не являются перегружаемыми, поэтому для них не существует никаких соглашений.</target>
        </trans-unit>
        <trans-unit id="23bf6dc433043ea6e907335ee19d579468813fdb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: It is the caller's responsibility to close this reader.</source>
          <target state="translated">&lt;em&gt;Примечание&lt;/em&gt; . Ответственность за закрытие этого модуля чтения лежит на вызывающем абоненте.</target>
        </trans-unit>
        <trans-unit id="f7d0bfa2f21f7b6c88b288ddeadf76e1308af71d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: assignments are &lt;em&gt;NOT&lt;/em&gt; expressions in Kotlin.</source>
          <target state="translated">&lt;em&gt;Примечание&lt;/em&gt; : присвоения &lt;em&gt;НЕ&lt;/em&gt; являются выражениями в Kotlin.</target>
        </trans-unit>
        <trans-unit id="c4c3ba8402107ef8534d63b6077fa206109727b1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: on the JVM, if the object is an instance of a functional Java interface (i.e. a Java interface with a single abstract method), you can create it using a lambda expression prefixed with the type of the interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2fe6bb5cbc7bd540eb87f54d19fe6afc7ecaa7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: star-projections are very much like Java's raw types, but safe.</source>
          <target state="translated">&lt;em&gt;Примечание&lt;/em&gt; : звездные проекции очень похожи на исходные типы Java, но безопасны.</target>
        </trans-unit>
        <trans-unit id="188f0e99ec34e6faf653bbe372fe89e0b1df1e99" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: the caller must close the underlying &lt;code&gt;BufferedReader&lt;/code&gt; when the iteration is finished; as the user may not complete the iteration loop (e.g. using a method like find() or any() on the iterator may terminate the iteration early.</source>
          <target state="translated">&lt;em&gt;Примечание&lt;/em&gt; : вызывающий должен закрыть базовый &lt;code&gt;BufferedReader&lt;/code&gt; по завершении итерации; поскольку пользователь может не завершить цикл итерации (например, использование такого метода, как find () или any () на итераторе, может прервать итерацию раньше.</target>
        </trans-unit>
        <trans-unit id="a6077463a7821fabdfcddc51e1d079b428ff632c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PECS stands for Producer-Extends, Consumer-Super.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;PECS расшифровывается как Producer-Extends, Consumer-Super.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0d5f69854615ad613761dad73544b24609c7393e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;REPL&lt;/em&gt; (&lt;em&gt;Read-Eval-Print-Loop&lt;/em&gt;) is a tool for running Kotlin code interactively. REPL lets you evaluate expressions and code chunks without creating projects or even functions if you don't need them.</source>
          <target state="translated">&lt;em&gt;REPL&lt;/em&gt; ( &lt;em&gt;Read-Eval-Print-Loop&lt;/em&gt; ) - это инструмент для интерактивного запуска кода Kotlin. REPL позволяет оценивать выражения и фрагменты кода, не создавая проекты или даже функции, если они вам не нужны.</target>
        </trans-unit>
        <trans-unit id="59a2e517268ae0cd8fd535db48b8568de9aff4ed" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Set&lt;/em&gt; is a collection of unique elements. It reflects the mathematical abstraction of set: a group of objects without repetitions. Generally, the order of set elements has no significance. For example, an alphabet is a set of letters.</source>
          <target state="translated">&lt;em&gt;Сет&lt;/em&gt; - это набор уникальных элементов. Он отражает математическую абстракцию множества: группу объектов без повторов. Как правило, порядок расположения элементов не имеет значения. Например, алфавит - это набор букв.</target>
        </trans-unit>
        <trans-unit id="631c0992c7446670a06fcd8ad234a30589710f5d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Stateful&lt;/em&gt; operations require a significant amount of state, usually proportional to the number of elements in a sequence.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;Операции с &lt;em&gt;отслеживанием состояния&lt;/em&gt; требуют значительного количества состояний, обычно пропорционального количеству элементов в последовательности.</target>
        </trans-unit>
        <trans-unit id="5f6efe07b5f8e4e3dbf8a7561b88e3c9f1e4b50f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Stateless&lt;/em&gt; operations require no state and process each element independently, for example, &lt;a href=&quot;collection-transformations#mapping&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;collection-filtering&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt;. Stateless operations can also require a small constant amount of state to process an element, for example, &lt;a href=&quot;collection-parts&quot;&gt;&lt;code&gt;take()&lt;/code&gt; or &lt;code&gt;drop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;Операции &lt;em&gt;без&lt;/em&gt; сохранения состояния не требуют состояния и обрабатывают каждый элемент независимо, например, &lt;a href=&quot;collection-transformations#mapping&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;collection-filtering&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt; . Операции без сохранения состояния также могут требовать небольшого постоянного количества состояния для обработки элемента, например &lt;a href=&quot;collection-parts&quot;&gt; &lt;code&gt;take()&lt;/code&gt; или &lt;code&gt;drop()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9535aa23ed3bfa64315b865b771c998439082b91" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The pre-1.4 version of this page is available &lt;a href=&quot;components-stability-pre-1.4&quot;&gt;here&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e5e63d3f187bbf7ba89581b75756435db1b274" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This material was written by &lt;a href=&quot;https://eldhuset.net/&quot;&gt;Aasmund Eldhuset&lt;/a&gt;; it is owned by &lt;a href=&quot;https://www.khanacademy.org/&quot;&gt;Khan Academy&lt;/a&gt; and is licensed for use under &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/3.0/us/&quot;&gt;CC BY-NC-SA 3.0 US&lt;/a&gt;. Please note that this is not a part of Khan Academy's official product offering.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Этот материал был написан &lt;a href=&quot;https://eldhuset.net/&quot;&gt;Осмундом Эльдхусетом&lt;/a&gt; ; он принадлежит &lt;a href=&quot;https://www.khanacademy.org/&quot;&gt;Khan Academy&lt;/a&gt; и лицензирован для использования в соответствии с &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/3.0/us/&quot;&gt;CC BY-NC-SA 3.0 US&lt;/a&gt; . Обратите внимание, что это не является частью официального предложения продуктов Khan Academy.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="910f279e582ad2e5260799349d5443d8807a642f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Thread confinement&lt;/em&gt; is an approach to the problem of shared mutable state where all access to the particular shared state is confined to a single thread. It is typically used in UI applications, where all UI state is confined to the single event-dispatch/application thread. It is easy to apply with coroutines by using a</source>
          <target state="translated">&lt;em&gt;Ограничение потоков&lt;/em&gt; - это подход к проблеме общего изменяемого состояния, когда весь доступ к конкретному общему состоянию ограничен одним потоком. Обычно он используется в приложениях пользовательского интерфейса, где все состояние пользовательского интерфейса ограничено одним потоком отправки событий / приложения. Его легко применять с сопрограммами, используя</target>
        </trans-unit>
        <trans-unit id="706b737eee14b7f5a8c622b04efa8e01738bc90d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Warning:&lt;/em&gt; having the &lt;strong&gt;kotlin.code.style&lt;/strong&gt; option set may modify the code style scheme during a project import and may change the code style settings.</source>
          <target state="translated">&lt;em&gt;Предупреждение:&lt;/em&gt; имея &lt;strong&gt;kotlin.code.style&lt;/strong&gt; набора опций могут изменить схему коды стиля во время импорта проекта и может изменить параметры кода стиля.</target>
        </trans-unit>
        <trans-unit id="a093b969f7d46881837e46d103727f5ff74971ee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Zipping&lt;/em&gt; transformation is building pairs from elements with the same positions in both collections. In the Kotlin standard library, this is done by the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/zip&quot;&gt;&lt;code&gt;zip()&lt;/code&gt;&lt;/a&gt; extension function. When called on a collection or an array with another collection (array) as an argument, &lt;code&gt;zip()&lt;/code&gt; returns the &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;Pair&lt;/code&gt; objects. The elements of the receiver collection are the first elements in these pairs. If the collections have different sizes, the result of the &lt;code&gt;zip()&lt;/code&gt; is the smaller size; the last elements of the larger collection are not included in the result. &lt;code&gt;zip()&lt;/code&gt; can also be called in the infix form &lt;code&gt;a zip b&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;Преобразование &lt;em&gt;сжатия&lt;/em&gt; - это создание пар из элементов с одинаковыми позициями в обеих коллекциях. В стандартной библиотеке Kotlin это делается с помощью функции расширения &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/zip&quot;&gt; &lt;code&gt;zip()&lt;/code&gt; &lt;/a&gt; . При вызове на коллекцию или массив с другой коллекции (массив) в качестве аргумента, &lt;code&gt;zip()&lt;/code&gt; возвращает &lt;code&gt;List&lt;/code&gt; из &lt;code&gt;Pair&lt;/code&gt; объектов. Элементы коллекции-получателя являются первыми элементами в этих парах. Если коллекции имеют разные размеры, результатом &lt;code&gt;zip()&lt;/code&gt; будет меньший размер; последние элементы более крупной коллекции не включаются в результат. &lt;code&gt;zip()&lt;/code&gt; также можно вызывать в инфиксной форме &lt;code&gt;a zip b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a0ae4f8623f1204b137519166f3471d061141c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;break&lt;/em&gt;. Terminates the nearest enclosing loop.</source>
          <target state="translated">&lt;em&gt;перерыв&lt;/em&gt; . Завершает ближайший охватывающий цикл.</target>
        </trans-unit>
        <trans-unit id="1fc9ae085051cd3bde519375f6ccb827b0ffca8a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;continue&lt;/em&gt;. Proceeds to the next step of the nearest enclosing loop.</source>
          <target state="translated">&lt;em&gt;продолжить&lt;/em&gt; . Переходит к следующему шагу ближайшего охватывающего цикла.</target>
        </trans-unit>
        <trans-unit id="2fae5fac1bba1876e2e3e8934d6a21a13581fb96" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;for&lt;/em&gt; loop iterates through anything that provides an iterator. This is equivalent to the &lt;code&gt;foreach&lt;/code&gt; loop in languages like C#. The syntax is as follows:</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;Цикл &lt;em&gt;for&lt;/em&gt; перебирает все, что предоставляет итератор. Это эквивалентно циклу &lt;code&gt;foreach&lt;/code&gt; в таких языках, как C #. Синтаксис следующий:</target>
        </trans-unit>
        <trans-unit id="024028479e6e97eb843fc2a724c8de4a52bce8fe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;if&lt;/em&gt; branches can be blocks, and the last expression is the value of a block:</source>
          <target state="translated">&lt;em&gt;если&lt;/em&gt; ветви могут быть блоками, а последнее выражение - это значение блока:</target>
        </trans-unit>
        <trans-unit id="dea9927b516af2bd807f59e8615ba5e0b60ac8c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;return&lt;/em&gt;. By default returns from the nearest enclosing function or &lt;a href=&quot;lambdas#anonymous-functions&quot;&gt;anonymous function&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;вернуться&lt;/em&gt; . По умолчанию возвращается из ближайшей включающей функции или &lt;a href=&quot;lambdas#anonymous-functions&quot;&gt;анонимной функции&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6818df73127c5514eddaf002c7f2a1095842a492" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stateful&lt;/em&gt; &amp;ndash; operations which require a significant amount of state, usually proportional to the number of elements in a sequence.</source>
          <target state="translated">&lt;em&gt;stateful&lt;/em&gt; - операции, требующие значительного количества состояния, обычно пропорционального количеству элементов в последовательности.</target>
        </trans-unit>
        <trans-unit id="9a383ab6a7ce61301658faa8f457297f7587f38f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stateless&lt;/em&gt; &amp;ndash; operations which require no state and process each element independently like &lt;a href=&quot;map&quot;&gt;kotlin.sequences.Sequence.map&lt;/a&gt;, &lt;a href=&quot;filter&quot;&gt;kotlin.sequences.Sequence.filter&lt;/a&gt;, or require a small constant amount of state to process an element, for example &lt;a href=&quot;take&quot;&gt;kotlin.sequences.Sequence.take&lt;/a&gt; or &lt;a href=&quot;drop&quot;&gt;kotlin.sequences.Sequence.drop&lt;/a&gt;;</source>
          <target state="translated">&lt;em&gt;без состояния&lt;/em&gt; - операции, которые не требуют состояния и обрабатывают каждый элемент независимо, например &lt;a href=&quot;map&quot;&gt;kotlin.sequences.Sequence.map&lt;/a&gt; , &lt;a href=&quot;filter&quot;&gt;kotlin.sequences.Sequence.filter&lt;/a&gt; , или требуют небольшого постоянного количества состояния для обработки элемента, например &lt;a href=&quot;take&quot;&gt;kotlin.sequences.Sequence. take&lt;/a&gt; или &lt;a href=&quot;drop&quot;&gt;kotlin.sequences.Sequence.drop&lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="f8f3cb42bf6ed30e905b895543705f8c4b226960" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;try&lt;/em&gt; is an expression, i.e. it may have a return value:</source>
          <target state="translated">&lt;em&gt;try&lt;/em&gt; - это выражение, т.е. может иметь возвращаемое значение:</target>
        </trans-unit>
        <trans-unit id="cdb8cfd9e8f26746f68857221853208ee75316de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;val&lt;/em&gt; local variables - always except for &lt;a href=&quot;delegated-properties#local-delegated-properties&quot;&gt;local delegated properties&lt;/a&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee13dff39772084153285c9ab7db6f40f001178c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;val&lt;/em&gt; local variables - always except for &lt;a href=&quot;delegated-properties#local-delegated-properties-since-11&quot;&gt;local delegated properties&lt;/a&gt;;</source>
          <target state="translated">&lt;em&gt;val&lt;/em&gt; локальные переменные - всегда, кроме &lt;a href=&quot;delegated-properties#local-delegated-properties-since-11&quot;&gt;локальных делегированных свойств&lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="dbbca77ad89d50bc4392cdeb284bc14af782494b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;val&lt;/em&gt; properties - if the property is private or internal or the check is performed in the same &lt;a href=&quot;visibility-modifiers#modules&quot;&gt;module&lt;/a&gt; where the property is declared. Smart casts aren't applicable to open properties or properties that have custom getters;</source>
          <target state="translated">&lt;em&gt;val&lt;/em&gt; properties - если свойство является частным или внутренним, или проверка выполняется в том же &lt;a href=&quot;visibility-modifiers#modules&quot;&gt;модуле,&lt;/a&gt; где объявлено свойство. Смарт-приведение неприменимо к открытым свойствам или свойствам, у которых есть настраиваемые геттеры;</target>
        </trans-unit>
        <trans-unit id="cfba4354a071acc509eef85bb2cde7f8f572beb6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;var&lt;/em&gt; local variables - if the variable is not modified between the check and the usage, is not captured in a lambda that modifies it, and is not a local delegated property;</source>
          <target state="translated">&lt;em&gt;var&lt;/em&gt; local variables - если переменная не изменяется между проверкой и использованием, не фиксируется в лямбда-выражении, изменяющем ее, и не является локальным делегированным свойством;</target>
        </trans-unit>
        <trans-unit id="ebb85acb44a1d6bdf51052766b0c4f41e4e6c8e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;var&lt;/em&gt; properties - never (because the variable can be modified at any time by other code).</source>
          <target state="translated">&lt;em&gt;var&lt;/em&gt; свойства - никогда (потому что переменная может быть изменена в любой момент другим кодом).</target>
        </trans-unit>
        <trans-unit id="6a9ab26e9c7534ce384d0294db420889f6805e8f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;when&lt;/em&gt; can also be used as a replacement for an &lt;em&gt;if&lt;/em&gt;-&lt;em&gt;else&lt;/em&gt;&lt;em&gt;if&lt;/em&gt; chain. If no argument is supplied, the branch conditions are simply boolean expressions, and a branch is executed when its condition is true:</source>
          <target state="translated">&lt;em&gt;when&lt;/em&gt; также можно использовать как замену цепочке &lt;em&gt;if&lt;/em&gt; - &lt;em&gt;else &lt;/em&gt;&lt;em&gt;if&lt;/em&gt; . Если аргумент не указан, условия ветвления представляют собой просто логические выражения, и ветвление выполняется, когда его условие истинно:</target>
        </trans-unit>
        <trans-unit id="7152778e403c1ac4ea488ef3a7338a2fed9e905b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;when&lt;/em&gt; matches its argument against all branches sequentially until some branch condition is satisfied. &lt;em&gt;when&lt;/em&gt; can be used either as an expression or as a statement. If it is used as an expression, the value of the satisfied branch becomes the value of the overall expression. If it is used as a statement, the values of individual branches are ignored. (Just like with &lt;em&gt;if&lt;/em&gt;, each branch can be a block, and its value is the value of the last expression in the block.)</source>
          <target state="translated">&lt;em&gt;when&lt;/em&gt; сопоставляет свой аргумент со всеми ветвями последовательно, пока не будет выполнено какое-либо условие ветвления. &lt;em&gt;when&lt;/em&gt; может использоваться как выражение или как утверждение. Если оно используется как выражение, значение удовлетворенной ветви становится значением всего выражения. Если он используется как оператор, значения отдельных ветвей игнорируются. (Как и в &lt;em&gt;случае&lt;/em&gt; с &lt;em&gt;if&lt;/em&gt; , каждая ветвь может быть блоком, а ее значением является значение последнего выражения в блоке.)</target>
        </trans-unit>
        <trans-unit id="c8e5919fb828e6c0e57dc91bc792845c60fbc090" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;when&lt;/em&gt; replaces the switch operator of C-like languages. In the simplest form it looks like this</source>
          <target state="translated">&lt;em&gt;when&lt;/em&gt; заменяет оператор switch в C-подобных языках. В простейшем виде это выглядит так</target>
        </trans-unit>
        <trans-unit id="cadb0d35f3f46fa49ecd548b003d7faa1bbbf6f0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;while&lt;/em&gt; and &lt;em&gt;do&lt;/em&gt;..&lt;em&gt;while&lt;/em&gt; work as usual</source>
          <target state="translated">&lt;em&gt;пока&lt;/em&gt; и &lt;em&gt;делаю&lt;/em&gt; .. &lt;em&gt;пока&lt;/em&gt; работаю как обычно</target>
        </trans-unit>
        <trans-unit id="e28d6974a292f791dfa9570cc846dfbebb1996ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Existentialism&quot;&gt;The Existential&lt;/a&gt; Transformation: Consumer in, Producer out!&lt;/strong&gt; :-)</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Existentialism&quot;&gt;Экзистенциальная&lt;/a&gt; трансформация: потребитель пришел, производитель вышел! &lt;/strong&gt;:-)</target>
        </trans-unit>
        <trans-unit id="1cc7be684355a6b5da3134dd2dfef6074029e8df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;mixing-java-kotlin-intellij&quot;&gt;Start adding Kotlin code to your project&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917bbdafbdd77694e8b94948c3e975f9df42e655" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;mixing-java-kotlin-intellij#converting-an-existing-java-file-to-kotlin-with-j2k&quot;&gt;Convert Java code to Kotlin&lt;/a&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13cd3975ed9d952faf27bb193361480231851f32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;AMD&lt;/strong&gt; is usually used on the client-side in the browser. The idea behind AMD is to load modules asynchronously, thus improving usability and performance.</source>
          <target state="translated">&lt;strong&gt;AMD&lt;/strong&gt; обычно используется на стороне клиента в браузере. Идея AMD заключается в асинхронной загрузке модулей, что повышает удобство использования и производительность.</target>
        </trans-unit>
        <trans-unit id="e2eee24e834eab0cf33cffaf4ba989326f94f7f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Access to a link task.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Доступ к задаче ссылки.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f78c8faa5b7756989f20d6c8d362cd17ed051ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Access to a run task&lt;/strong&gt; (for executable binaries only). The &lt;code&gt;kotlin-multiplatform&lt;/code&gt; plugin creates run tasks for all executable binaries of host platforms (Windows, Linux and macOS). Names of such tasks are based on binary names, e.g. &lt;code&gt;runReleaseExecutable&amp;lt;target-name&amp;gt;&lt;/code&gt; or &lt;code&gt;runFooDebugExecutable&amp;lt;target-name&amp;gt;&lt;/code&gt;. A run task can be accessed using the &lt;code&gt;runTask&lt;/code&gt; property of an executable binary.</source>
          <target state="translated">&lt;strong&gt;Доступ к задаче запуска&lt;/strong&gt; (только для исполняемых двоичных файлов). &lt;code&gt;kotlin-multiplatform&lt;/code&gt; плагин создает запускать задачи для всех исполняемых двоичных файлов хост - платформ (Windows, Linux и MacOS). Имена таких задач основаны на двоичных именах, например, &lt;code&gt;runReleaseExecutable&amp;lt;target-name&amp;gt;&lt;/code&gt; или &lt;code&gt;runFooDebugExecutable&amp;lt;target-name&amp;gt;&lt;/code&gt; . Доступ к &lt;code&gt;runTask&lt;/code&gt; запуска можно получить с помощью свойства runTask исполняемого двоичного файла.</target>
        </trans-unit>
        <trans-unit id="ffb694371c68f79144ae5e974cc0bac3a52aefda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Access to the output file.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Доступ к выходному файлу.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2cbc4c63ce2666097dc25aafd5454709270d0d5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Additions in Incremental Releases (AIR)&lt;/strong&gt;: things can be added in an incremental release, removals and changes of behavior should be avoided and announced in a previous incremental release if necessary.</source>
          <target state="translated">&lt;strong&gt;Дополнения в инкрементных выпусках (AIR)&lt;/strong&gt; : что-то может быть добавлено в инкрементном выпуске, следует избегать удаления и изменения поведения, и при необходимости объявлять об этом в предыдущем инкрементном выпуске.</target>
        </trans-unit>
        <trans-unit id="96224092ad0f9935bb718b431dac8606016fc8cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;All other experimental components, by default&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a06f48618a6881b4838d68e7146e16182e8956" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;All other experimental features, by default&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Все остальные экспериментальные функции по умолчанию&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d933f856d867675239db5ab18e0a2b3a8735d27e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Alpha&lt;/strong&gt; means &quot;use at your own risk, expect migration issues&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73b60aede97b7d47d99bc8d4268962a141a28ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Author&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Author&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a884c1a4a2719a1b309626fcd958b7136a0ace1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available for&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Доступны для&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f337cd80871727ab12c72ba4887ac78c2df00cf6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Beta&lt;/strong&gt; means &quot;you can use it, we'll do our best to minimize migration issues for you&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd7b8bcbb6b5bfbbdde7422b6f2abedf4a53bca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Big community&lt;/strong&gt;. Kotlin has great support and many contributions from the community, which is growing all over the world. According to Google, over 60% of the top 1000 apps on the Play Store use Kotlin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="385f83ef45a08a7675930a15034fe1f85ec3a398" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Binary kind&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Бинарный вид&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b3a53ba35f5990e9c4874b45d2c45558caed8e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Code safety&lt;/strong&gt;. Less code and better readability lead to fewer errors. The Kotlin compiler detects these remaining errors, making the code safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60efc1de782ecd0c495005460eb05ffd095f88a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Comfortable Updates&lt;/strong&gt;. Incompatible changes, such as removing things from a language, may lead to painful migration from one version to the next if carried out without proper care. We will always announce such changes well in advance, mark things as deprecated and provide automated migration tools &lt;em&gt;before the change happens&lt;/em&gt;. By the time the language is changed we want most of the code in the world to be already updated and thus have no issues migrating to the new version.</source>
          <target state="translated">&lt;strong&gt;Удобные обновления&lt;/strong&gt; . Несовместимые изменения, такие как удаление каких-либо элементов из языка, могут привести к болезненному переносу с одной версии на другую, если они будут выполнены без должного внимания. Мы всегда будем сообщать о таких изменениях заранее, отмечать вещи как устаревшие и предоставлять инструменты автоматической миграции &lt;em&gt;до того, как изменения произойдут&lt;/em&gt; . К тому времени, когда язык будет изменен, мы хотим, чтобы большая часть кода в мире уже была обновлена, и, таким образом, не было проблем с переходом на новую версию.</target>
        </trans-unit>
        <trans-unit id="049747c0d635b61ebd1c014e4ff40115c2052441" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Comment&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Comment&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73265f8051428c195218a9b5dbfc5b2eecec31d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Common Kotlin&lt;/strong&gt; includes the language, core libraries, and basic tools. Code written in common Kotlin works everywhere on all platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a90f28a34743ebe55cbb12c9c066936868abe54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CommonJS&lt;/strong&gt; is the module system used on the server-side, and in particular with node.js. Node modules all abide by this definition. CommonJS modules can also be used in the browser via &lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;CommonJS&lt;/strong&gt; - это модульная система, используемая на стороне сервера и, в частности, с node.js. Все модули узлов подчиняются этому определению. Модули CommonJS также можно использовать в браузере через &lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1195ec2bac12543bdb05c5a7c57c172f7bb32f0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Compatibility&lt;/strong&gt;: Kotlin is fully compatible with JDK 6, ensuring that Kotlin applications can run on older Android devices with no issues. The Kotlin tooling is fully supported in Android Studio and compatible with the Android build system.</source>
          <target state="translated">&lt;strong&gt;Совместимость&lt;/strong&gt; : Kotlin полностью совместим с JDK 6, поэтому приложения Kotlin могут работать на старых устройствах Android без проблем. Инструменты Kotlin полностью поддерживаются в Android Studio и совместимы с системой сборки Android.</target>
        </trans-unit>
        <trans-unit id="c2ae471fc641370e12b5409285bdaee90823a077" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Compilation Time&lt;/strong&gt;: Kotlin supports efficient incremental compilation, so while there's some additional overhead for clean builds, &lt;a href=&quot;https://medium.com/keepsafe-engineering/kotlin-vs-java-compilation-speed-e6c174b39b5d&quot;&gt;incremental builds are usually as fast or faster than with Java&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Время компиляции&lt;/strong&gt; : Kotlin поддерживает эффективную инкрементную компиляцию, поэтому, несмотря на некоторые дополнительные накладные расходы для чистых сборок, &lt;a href=&quot;https://medium.com/keepsafe-engineering/kotlin-vs-java-compilation-speed-e6c174b39b5d&quot;&gt;инкрементные сборки обычно выполняются так же быстро или быстрее, чем с Java&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f38fcdc20544f4bd9f6e680c2daf1906f6c4fd80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Compilation.&lt;/strong&gt; Each binary is built on basis of some compilation available in the same target. The default value of this parameter depends on the binary type: &lt;code&gt;Test&lt;/code&gt; binaries are based on the &lt;code&gt;test&lt;/code&gt; compilation while other binaries - on the &lt;code&gt;main&lt;/code&gt; compilation.</source>
          <target state="translated">&lt;strong&gt;Компиляция. &lt;/strong&gt;Каждый двоичный файл строится на основе некоторой компиляции, доступной в одной и той же цели. Значение этого параметра по умолчанию зависит от двоичного типа: &lt;code&gt;Test&lt;/code&gt; двоичные файлы основаны на &lt;code&gt;test&lt;/code&gt; компиляции, а другие двоичные файлы - на &lt;code&gt;main&lt;/code&gt; компиляции.</target>
        </trans-unit>
        <trans-unit id="12d7a969ac1d8b31d7d77682b70cb08343ef279a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Component&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ac230639a723040fdf0abd0778656ec5abd84a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component&lt;/strong&gt;: Core language</source>
          <target state="translated">&lt;strong&gt;Компонент&lt;/strong&gt; : Основной язык</target>
        </trans-unit>
        <trans-unit id="227fc1c09b15a2df831a0a95dbc64fd964bede49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component&lt;/strong&gt;: Kotlin/JVM</source>
          <target state="translated">&lt;strong&gt;Компонент&lt;/strong&gt; : Kotlin / JVM</target>
        </trans-unit>
        <trans-unit id="7570c0f126329c1405dbe8897b36472d6d303239" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component&lt;/strong&gt;: kotlin-stdlib (JVM)</source>
          <target state="translated">&lt;strong&gt;Компонент&lt;/strong&gt; : kotlin-stdlib (JVM)</target>
        </trans-unit>
        <trans-unit id="4000e9f93b9f3c271b29de49b2a9e0b10cab6782" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component&lt;/strong&gt;: other</source>
          <target state="translated">&lt;strong&gt;Компонент&lt;/strong&gt; : другой</target>
        </trans-unit>
        <trans-unit id="08d0f1462630b68dd58d9cdbdd352aa89e99d312" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Components&lt;/strong&gt;: Core language</source>
          <target state="translated">&lt;strong&gt;Компоненты&lt;/strong&gt; : Основной язык</target>
        </trans-unit>
        <trans-unit id="9db8723ef2c0043bd70e12ab4791d09224937133" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a new array of the specified &lt;a href=&quot;size#kotlin.BooleanArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Конструктор&lt;/strong&gt; Создает новый массив указанного &lt;a href=&quot;size#kotlin.BooleanArray%24size&quot;&gt;размера&lt;/a&gt; со всеми элементами, инициализированными значением &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2fa5199c1b27f8f9a99026303ae0a4378faad501" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a new array of the specified &lt;a href=&quot;size#kotlin.ByteArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">&lt;strong&gt;Конструктор&lt;/strong&gt; Создает новый массив указанного &lt;a href=&quot;size#kotlin.ByteArray%24size&quot;&gt;размера&lt;/a&gt; со всеми элементами, инициализированными нулем.</target>
        </trans-unit>
        <trans-unit id="bd6cf7b5ab4b4150353ed0a9e4a7cb00caff108d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a new array of the specified &lt;a href=&quot;size#kotlin.CharArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to null char (`\u0000').</source>
          <target state="translated">&lt;strong&gt;Конструктор&lt;/strong&gt; Создает новый массив указанного &lt;a href=&quot;size#kotlin.CharArray%24size&quot;&gt;размера&lt;/a&gt; со всеми элементами, инициализированными нулевым символом (`\ u0000 ').</target>
        </trans-unit>
        <trans-unit id="c4a7d8f52ac7620beff100e289d8b02da39d85b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a new array of the specified &lt;a href=&quot;size#kotlin.DoubleArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">&lt;strong&gt;Конструктор&lt;/strong&gt; Создает новый массив указанного &lt;a href=&quot;size#kotlin.DoubleArray%24size&quot;&gt;размера&lt;/a&gt; со всеми элементами, инициализированными нулем.</target>
        </trans-unit>
        <trans-unit id="272ce437857108ed3f51611ec719d9d62bce42e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a new array of the specified &lt;a href=&quot;size#kotlin.FloatArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">&lt;strong&gt;Конструктор&lt;/strong&gt; Создает новый массив указанного &lt;a href=&quot;size#kotlin.FloatArray%24size&quot;&gt;размера&lt;/a&gt; со всеми элементами, инициализированными нулем.</target>
        </trans-unit>
        <trans-unit id="39b826b50a38a1d30be53e1f28766e61502287c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a new array of the specified &lt;a href=&quot;size#kotlin.IntArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">&lt;strong&gt;Конструктор&lt;/strong&gt; Создает новый массив указанного &lt;a href=&quot;size#kotlin.IntArray%24size&quot;&gt;размера&lt;/a&gt; со всеми элементами, инициализированными нулем.</target>
        </trans-unit>
        <trans-unit id="6d03fb49a23f0ce8c38e59382849faa4a71f484c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a new array of the specified &lt;a href=&quot;size#kotlin.LongArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">&lt;strong&gt;Конструктор&lt;/strong&gt; Создает новый массив указанного &lt;a href=&quot;size#kotlin.LongArray%24size&quot;&gt;размера&lt;/a&gt; со всеми элементами, инициализированными нулем.</target>
        </trans-unit>
        <trans-unit id="813f2bea41ba6fef32ee0e8bc42727148fe8fccc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a new array of the specified &lt;a href=&quot;size#kotlin.ShortArray%24size&quot;&gt;size&lt;/a&gt;, with all elements initialized to zero.</source>
          <target state="translated">&lt;strong&gt;Конструктор&lt;/strong&gt; Создает новый массив указанного &lt;a href=&quot;size#kotlin.ShortArray%24size&quot;&gt;размера&lt;/a&gt; со всеми элементами, инициализированными нулем.</target>
        </trans-unit>
        <trans-unit id="335d26c199adf06488a8913460409837d4075696" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a new instance of Pair.</source>
          <target state="translated">&lt;strong&gt;Конструктор&lt;/strong&gt; Создает новый экземпляр Pair.</target>
        </trans-unit>
        <trans-unit id="773b394be7f65a95c85016d615a1c621ce6c3bc4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a regular expression from the specified &lt;a href=&quot;pattern#kotlin.text.Regex%24pattern&quot;&gt;pattern&lt;/a&gt; string and the specified set of &lt;a href=&quot;options#kotlin.text.Regex%24options&quot;&gt;options&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Конструктор&lt;/strong&gt; Создает регулярное выражение из указанной строки &lt;a href=&quot;pattern#kotlin.text.Regex%24pattern&quot;&gt;шаблона&lt;/a&gt; и указанного набора &lt;a href=&quot;options#kotlin.text.Regex%24options&quot;&gt;параметров&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2d15192253b231c1119607339e0a2590a4bb77e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; Creates a version from all three components.</source>
          <target state="translated">&lt;strong&gt;Конструктор&lt;/strong&gt; Создает версию из всех трех компонентов.</target>
        </trans-unit>
        <trans-unit id="9569df5f31e8b5de73e6d92b548ff29f2d98a7b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Constructor&lt;/strong&gt; creates an empty bit set with the specified &lt;a href=&quot;size&quot;&gt;size&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Конструктор&lt;/strong&gt; создает пустой битовый набор заданного &lt;a href=&quot;size&quot;&gt;размера&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0096f245c9fae0805031521bff1005fcb0b2f31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Copy runtime library files&lt;/strong&gt;. Indicates in what subfolder we want the &lt;code&gt;kotlin.js&lt;/code&gt; library to be output to. By default it is &lt;code&gt;lib&lt;/code&gt; which is why in the HTML we are referencing this path.</source>
          <target state="translated">&lt;strong&gt;Скопируйте файлы библиотеки времени выполнения&lt;/strong&gt; . Указывает, в какую подпапку мы хотим &lt;code&gt;kotlin.js&lt;/code&gt; библиотеку kotlin.js . По умолчанию это &lt;code&gt;lib&lt;/code&gt; , поэтому в HTML мы ссылаемся на этот путь.</target>
        </trans-unit>
        <trans-unit id="50aa82b515ea8664d2947a78b60a172a13e35153" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Create libraries for use with JavaScript and TypeScript&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413b10e9ad8da201e3bf3c2f9c2446ab5e5202bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Add @OverrideInit to constructor to make it override Objective-C initializer</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;Устарело &lt;strong&gt;:&lt;/strong&gt; добавьте @OverrideInit в конструктор, чтобы он переопределил инициализатор Objective-C</target>
        </trans-unit>
        <trans-unit id="b0736936b91735114bda7bb6b0fb7732a20bee59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Deinit runtime can not be called from Kotlin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf56d13cf05b3f392462e1af11305676e27e873" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Do not use Synchronized annotation in pure Kotlin/JS code</source>
          <target state="translated">&lt;strong&gt;Устарело:&lt;/strong&gt; не используйте синхронизированную аннотацию в чистом коде Kotlin / JS.</target>
        </trans-unit>
        <trans-unit id="452fddb0e520391a9f67bc97f96be7bea4bd264d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Do not use Synchronized annotation in pure Kotlin/Native code</source>
          <target state="translated">&lt;strong&gt;Устарело:&lt;/strong&gt; не используйте синхронизированные аннотации в чистом коде Kotlin / Native.</target>
        </trans-unit>
        <trans-unit id="dfab3c6713337be01b7128770be5faa0fa8ff4f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Do not use Volatile annotation in pure Kotlin/JS code</source>
          <target state="translated">&lt;strong&gt;Устарело:&lt;/strong&gt; не используйте аннотацию Volatile в чистом коде Kotlin / JS.</target>
        </trans-unit>
        <trans-unit id="48cec979b523be2447f63e1e317c3d78c8ec346b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Do not use Volatile annotation in pure Kotlin/Native code</source>
          <target state="translated">&lt;strong&gt;Устарело:&lt;/strong&gt; не используйте аннотацию Volatile в чистом коде Kotlin / Native.</target>
        </trans-unit>
        <trans-unit id="559e721a736926a300ebcc7d6dc1c926811e5bd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Please use OptIn instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2831ac0f29a6378cfef9580e0ca30694714dfa18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Please use RequiresOptIn instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe0bb35ec6506cafc1fd50dc083e5353ead7ec6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Provided for binary compatibility</source>
          <target state="translated">&lt;strong&gt;Устарело:&lt;/strong&gt; предоставляется для двоичной совместимости</target>
        </trans-unit>
        <trans-unit id="ca78ebad72c20e890b57323de505f0e2105c31b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Provided for binary compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1231e7a7a6d5a83c2cd105b0352613d2c669daac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Synchronization on any object is not supported on every platform and will be removed from the common standard library soon.</source>
          <target state="translated">&lt;strong&gt;Устарело:&lt;/strong&gt; синхронизация любого объекта поддерживается не на всех платформах и скоро будет удалена из общей стандартной библиотеки.</target>
        </trans-unit>
        <trans-unit id="ffd4353ef19d33350d4aa9d2fd4378d74dbb2074" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; The function has unclear behavior when searching for NaN or zero values and will be removed soon. Use 'any { it == element }' instead to continue using this behavior, or '.asList().contains(element: T)' to get the same search behavior as in a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a745254957b2bd9ffcaf2e1156c37a91215e94b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; The function has unclear behavior when searching for NaN or zero values and will be removed soon. Use 'indexOfFirst { it == element }' instead to continue using this behavior, or '.asList().indexOf(element: T)' to get the same search behavior as in a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278725b4c40e4f336bae6100d1f9d92d3269454c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; The function has unclear behavior when searching for NaN or zero values and will be removed soon. Use 'indexOfLast { it == element }' instead to continue using this behavior, or '.asList().lastIndexOf(element: T)' to get the same search behavior as in a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc517c99cd12bbe249e547a509da671c3083b349" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.browser.document' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3870ff86e554adbc42667ceedd6757e678cd2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.browser.localStorage' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a26de7c4aae5e8cfbe1fd9dbfa9f40f5cf9567" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.browser.sessionStorage' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4210da61f981c9390a6ed1e0c923b7b8d977d2df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.browser.window' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582ef35611623e95414c803801d0135efc8b68d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.dom.addClass' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6b5475666fc994fe1ba52ec87e7e6be5656fff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.dom.appendElement' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02dae459302904b61aa9930ca5dde3b591e8c2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.dom.appendText' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f0f1e642b9a004c5676b67582ad25dec7ba4a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.dom.clear' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2479ed858410667168091e54a544453c88ce72f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.dom.createElement' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97de723af8b83f62fb28bddeec519e63e096ce4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.dom.hasClass' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863904be69d10014377a0aeff01e3a8c04fa1812" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.dom.isElement' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ecef05f3c31326612204a89ab68b269cc5906d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.dom.isText' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29768b43201de0dafe0161b9eefee0c551b60f81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This API is moved to another package, use 'kotlinx.dom.removeClass' instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f426529b7537c1615991e33fc1bd17f18c166bbe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This `contains` operation mixing integer and floating point arguments has ambiguous semantics and is going to be removed.</source>
          <target state="translated">&lt;strong&gt;Устарело:&lt;/strong&gt; эта операция `contains`, смешивающая целочисленные и аргументы с плавающей запятой, имеет неоднозначную семантику и будет удалена.</target>
        </trans-unit>
        <trans-unit id="752efaab5e33671c902096353a2f29f2232a126d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This exception type is not supposed to be thrown or caught in common code and will be removed from kotlin-stdlib-common soon.</source>
          <target state="translated">&lt;strong&gt;Устарело:&lt;/strong&gt; этот тип исключения не должен генерироваться или перехватываться в общем коде и скоро будет удален из kotlin-stdlib-common.</target>
        </trans-unit>
        <trans-unit id="f6c8a88fa21880c017378826441e400ceb55798c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This function creates a type which rarely makes sense for generic classes. For example, such type can only be used in signatures of members of that class. Use starProjectedType or createType() for clearer semantics.</source>
          <target state="translated">&lt;strong&gt;Устарело:&lt;/strong&gt; эта функция создает тип, который редко имеет смысл для универсальных классов. Например, такой тип может использоваться только в подписях членов этого класса. Используйте starProjectedType или createType () для более четкой семантики.</target>
        </trans-unit>
        <trans-unit id="27adc858a9e3080b84374734075c7b6f23d635f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This function will become internal soon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972e494f35a43863c58ad6515b0c4ee14e2c6ddc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Unclear conversion. To achieve the same result convert to Int explicitly and then to Byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633efd15e0b8e129e8d106b812d46254d765a59c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Unclear conversion. To achieve the same result convert to Int explicitly and then to Short.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6bbf8f9eac350e7835725133adee88cb6daeb2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use 'iterator { }' function instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо этого функцию &quot;итератор {}&quot;.</target>
        </trans-unit>
        <trans-unit id="447e915d652609535feb5b69ab9a433b444d89d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use 'java' property to get Java class corresponding to this Kotlin class or cast this instance to Any if you really want to get the runtime Java class of this implementation of KClass.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте свойство java, чтобы получить класс Java, соответствующий этому классу Kotlin, или приведите этот экземпляр к Any, если вы действительно хотите получить класс Java времени выполнения этой реализации KClass.</target>
        </trans-unit>
        <trans-unit id="8bc948514b2df4ec7b49af73847c66c422a6ed1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use 'sequence { }' function instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо этого функцию 'sequence {}'.</target>
        </trans-unit>
        <trans-unit id="124528a176dd411bf469d0f779b788eae05e15e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use 'waitForMultipleFutures' top-level function instead</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; вместо этого используйте функцию верхнего уровня waitForMultipleFutures</target>
        </trans-unit>
        <trans-unit id="2a85d8342cdd2702e8a490e130e9e49ba012a310" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use .asCPointer() instead</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо него .asCPointer ()</target>
        </trans-unit>
        <trans-unit id="3c1b654b2f837e72b5dbf3da907e460ec7e7cbf2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use CPointer&amp;lt;*&amp;gt;.asStableRef&amp;lt;T&amp;gt;() instead</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо него CPointer &amp;lt;*&amp;gt;. AsStableRef &amp;lt;T&amp;gt; ()</target>
        </trans-unit>
        <trans-unit id="067963984d1538fb8cf4585fd3f2eef9d940063e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use CharArray.concatToString() instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79d693343f01d88a1e0c032b6511380e8930c0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use CharArray.concatToString(startIndex, endIndex) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25a473098f7a80883c160d9eacf2827c645bab6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use CharacterCodingException instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3a310a1e69ca97ad036df74b2c5f423341adda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use Default companion object instead</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо этого сопутствующий объект по умолчанию</target>
        </trans-unit>
        <trans-unit id="8d4675c274c8185774a3094b54ffa3d942e381ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use Kotlin compiler 1.4 to avoid deprecation warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d774f0846c9725096d6868d8250a661e8c97f71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use Random.nextDouble instead</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо него Random.nextDouble</target>
        </trans-unit>
        <trans-unit id="cca46c363e63f0970ef54a11a4bf2ba63e633ff7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use SequenceScope class instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо этого класс SequenceScope.</target>
        </trans-unit>
        <trans-unit id="17d5f606b3230bf8deaf75eb0b98aaaae44c6e23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use StableRef&amp;lt;T&amp;gt; instead</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо этого StableRef &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="fdbc2696154545aa9ace3d52789ca4ac09a165c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use `definedExternally` instead</source>
          <target state="translated">&lt;strong&gt;Запрещено:&lt;/strong&gt; Используйте `definedExternally` вместо</target>
        </trans-unit>
        <trans-unit id="ba5914429156c8fc516a3f59beaf39b64a5e9cf8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use `external` modifier instead</source>
          <target state="translated">&lt;strong&gt;Устарело:&lt;/strong&gt; вместо этого используйте модификатор external</target>
        </trans-unit>
        <trans-unit id="1f857ecc1dd66cd639969898347c01fae9a28e9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: Any?) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343a61955021772235db372dce379aac83866e90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: Boolean) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b61ab698760632d80ca91d401296e669d931a09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: Byte) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25701903e5d30d3840ce8dfc6a2d773b74c3362d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: CharArray) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba65c631761151bff99ad8362197b3ea396ba72d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: Double) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1c3b3cf07d0b61bfd26c244f57c39551c5be57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: Float) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acf4a68ef1b9a65236d2498aa56ffd68daa8a88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: Int) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199766d9e2e6c78ec55b93183e76309d553a1886" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: Long) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8c41242392ff3b518c95639eaeabb5c0750c42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: Short) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60eb3d11002d0438e69500aba39b6d5f5441d0f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use append(value: String) instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e33868eb7d33453832a7ce80b95da88c850b16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use appendLine instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f68cb6b560d6c931fa6de43e193643b729bc27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use appendLine instead. Note that the new method always appends the line feed character '\\n' regardless of the system line separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d5cf286d92237119359612e84665c034969d7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use class literal and extension property `js` instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; вместо этого используйте литерал класса и свойство расширения `js`.</target>
        </trans-unit>
        <trans-unit id="6de5f60695de863a66440239847cc9793b2b34e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use encodeToByteArray instead</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;Устарело &lt;strong&gt;:&lt;/strong&gt; используйте вместо этого encodeToByteArray</target>
        </trans-unit>
        <trans-unit id="fc9ed721d2dc4d3944528cb9641d6cef4c21af83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use inline extension function with body using dynamic</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; использовать встроенную функцию расширения с телом с использованием динамического</target>
        </trans-unit>
        <trans-unit id="12c35b94f395f24afe7b8a4a286110b23a581b2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.PI instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо него kotlin.math.PI.</target>
        </trans-unit>
        <trans-unit id="33efd05b987cdb7650f554bb37295f9999c0a2cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.abs instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо этого kotlin.math.abs.</target>
        </trans-unit>
        <trans-unit id="f1cb5563ed7231c2dab46e4f16297df892fb2e3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.acos instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо него kotlin.math.acos.</target>
        </trans-unit>
        <trans-unit id="996e58906ac50a84be19234bc9cde02bf073f083" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.asin instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо него kotlin.math.asin.</target>
        </trans-unit>
        <trans-unit id="66a5d5ed239001acbd826d1714135e01284998ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.atan instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо него kotlin.math.atan.</target>
        </trans-unit>
        <trans-unit id="fa95d4bb6ea3af355c890298bd2a4a41700b68b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.atan2 instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо него kotlin.math.atan2.</target>
        </trans-unit>
        <trans-unit id="60143061b29098b9cb54a512540ac43d6f76ed28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.ceil instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо него kotlin.math.ceil.</target>
        </trans-unit>
        <trans-unit id="7c3f82eb454195f9e9e74a70809de173e944ec2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.cos instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо этого kotlin.math.cos.</target>
        </trans-unit>
        <trans-unit id="bdcd7c3509a842b932a3f5944db27c5018dc94b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.exp instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо этого kotlin.math.exp.</target>
        </trans-unit>
        <trans-unit id="8000773b5e7d1f1f4a888e5b5b80592a088ff6c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.floor instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо него kotlin.math.floor.</target>
        </trans-unit>
        <trans-unit id="332d44171961144416b8a0033b7de5cccca96db0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.ln instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо этого kotlin.math.ln.</target>
        </trans-unit>
        <trans-unit id="b2debbe1367cb0ab7c89bd4b93284a48bcd20a66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.pow instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо него kotlin.math.pow.</target>
        </trans-unit>
        <trans-unit id="cdfcdc89fe10b37e662854d2fc47c6d1e309ead4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.round instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо этого kotlin.math.round.</target>
        </trans-unit>
        <trans-unit id="e419fa79027d809dbd2513aa857fe253bc15eaaf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.sin instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо него kotlin.math.sin.</target>
        </trans-unit>
        <trans-unit id="7b26bc4743b50acba4d04d18114fa6c724fbf393" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.sqrt instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо него kotlin.math.sqrt.</target>
        </trans-unit>
        <trans-unit id="73d824d8a988bfdb22175bdfe46aa11970bc50ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlin.math.tan instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо него kotlin.math.tan.</target>
        </trans-unit>
        <trans-unit id="3f81bb81dc4522f868d63b9c11f5d024628ab3ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use kotlinx.cinterop.StableRef instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba205c7208586e4882bc719e84b7ed35ffc7eb5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use maxByOrNull instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a0fcaa718d82676c10da684495162f92d28ffd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use maxOf or kotlin.math.max instead</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо этого maxOf или kotlin.math.max</target>
        </trans-unit>
        <trans-unit id="e5c37c29d7079d70b902f0b3d2ba71f9e5d50b03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use maxOrNull instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b9ae1566ac6c322d9d63ef0c431a0fdb40d893" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use maxWithOrNull instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817d8cd7ba2edefb9dccd026a0f72f2ee0418f94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use minByOrNull instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c145ae9a2a47596ce6ea35f59e6c3bd752792b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use minOf or kotlin.math.min instead</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо него minOf или kotlin.math.min</target>
        </trans-unit>
        <trans-unit id="224c4555be6701deb5b679eb2dc5e6421af6cf62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use minOrNull instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbbb7dc92f15e8cc9418f1ea7ac371c56c4757b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use minWithOrNull instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d5036d3460e6073e9a138258075298f58729d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use parameters named startIndex and endIndex.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте параметры с именами startIndex и endIndex.</target>
        </trans-unit>
        <trans-unit id="b5ee97845fb9246123c98710d4231785a233821e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use plain Kotlin cast</source>
          <target state="translated">&lt;strong&gt;Устарело:&lt;/strong&gt; используйте простой текст Kotlin.</target>
        </trans-unit>
        <trans-unit id="1324034f6ba898980547749a66a22ed7890795cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use plain Kotlin cast of NSString to String</source>
          <target state="translated">&lt;strong&gt;Устарело:&lt;/strong&gt; используйте простой Kotlin преобразование NSString в String.</target>
        </trans-unit>
        <trans-unit id="f708de9bf5260b05b994eae510ba0be9bfd046e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use plain Kotlin cast of String to NSString</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; использовать простое приведение строки Kotlin к NSString</target>
        </trans-unit>
        <trans-unit id="05de66863fa6c31537422d7c01f621dc7d7967c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use readBytes() overload without estimatedSize parameter</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; использовать перегрузку readBytes () без параметра EstimatedSize</target>
        </trans-unit>
        <trans-unit id="76f6f68dc5115acc51fbd095f0f8455c672005b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use rem(other) instead</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте rem (другое) вместо</target>
        </trans-unit>
        <trans-unit id="1e53fcbffd3b20605c758a965a8df3af90dae79d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use removeAt(index) instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; вместо этого используйте removeAt (index).</target>
        </trans-unit>
        <trans-unit id="b7829b593479752cbfa034815c42df9f02b2f7d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use sortWith(Comparator(comparison)) instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо него sortWith (Comparator (сравнение)).</target>
        </trans-unit>
        <trans-unit id="24aed9d46b571a7cc738f91897e763352bd3582e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use sortWith(comparator) instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; вместо этого используйте sortWith (компаратор).</target>
        </trans-unit>
        <trans-unit id="0a816493e0174c04dc5c78864f25874e05a19183" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use toDouble() instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо этого toDouble ().</target>
        </trans-unit>
        <trans-unit id="b5615a77c7b7d1acb10a2e712e5261dc01e50710" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use toInt() instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо этого toInt ().</target>
        </trans-unit>
        <trans-unit id="2ba0440eaf794b635c91c1633c00222cd8ba2f2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use toInt(radix) instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; вместо этого используйте toInt (radix).</target>
        </trans-unit>
        <trans-unit id="fe2aa2549b9aacc894a090f4cbd3a03c78b0d8d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use toKString or decodeToString instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972da3dde07ec4f64208ca86fd24c347853620f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use top-level functions from kotlin.math package instead.</source>
          <target state="translated">&lt;strong&gt;Не рекомендуется:&lt;/strong&gt; используйте вместо этого функции верхнего уровня из пакета kotlin.math.</target>
        </trans-unit>
        <trans-unit id="bdd361edba9dde53887c45e30a98ecc6839d5370" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecation cycle&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Цикл устаревания&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="2733ed7980a78e86d57cac9b66075d5f17c658c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Easy learning&lt;/strong&gt;. Kotlin is very easy to learn, especially for Java developers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92262314d78850fea262f10d209039e6c457c391" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Entry point&lt;/strong&gt; (for executable binaries only). By default the entry point for Kotlin/Native programs is a &lt;code&gt;main&lt;/code&gt; function located in the root package. This setting allows one to change this default and use a custom function as an entry point. For example it can be used to move the &lt;code&gt;main&lt;/code&gt; function from the root package.</source>
          <target state="translated">&lt;strong&gt;Точка входа&lt;/strong&gt; (только для исполняемых двоичных файлов). По умолчанию точкой входа для программ Kotlin / Native является &lt;code&gt;main&lt;/code&gt; функция, расположенная в корневом пакете. Этот параметр позволяет изменить это значение по умолчанию и использовать пользовательскую функцию в качестве точки входа. Например, его можно использовать для перемещения &lt;code&gt;main&lt;/code&gt; функции из корневого пакета.</target>
        </trans-unit>
        <trans-unit id="92d1e118dbb0f9f2b23eb643687f7182d684cde2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Experimental&lt;/strong&gt; means &quot;try it only in toy projects&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b0edbe9afeaffdc2715a7389f848e4f07af145" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expressiveness&lt;/strong&gt;: Kotlin's innovative language features, such as its support for &lt;a href=&quot;type-safe-builders&quot;&gt;type-safe builders&lt;/a&gt; and &lt;a href=&quot;delegated-properties&quot;&gt;delegated properties&lt;/a&gt;, help build powerful and easy-to-use abstractions.</source>
          <target state="translated">&lt;strong&gt;Выразительность&lt;/strong&gt; : инновационные языковые функции Kotlin, такие как поддержка &lt;a href=&quot;type-safe-builders&quot;&gt;типобезопасных построителей&lt;/a&gt; и &lt;a href=&quot;delegated-properties&quot;&gt;делегированных свойств&lt;/a&gt; , помогают создавать мощные и простые в использовании абстракции.</target>
        </trans-unit>
        <trans-unit id="dd290df5d8dd8a41cfaa050e0a1c2c4990ee7f7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Factory method&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Заводской метод&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1be273f75e3102b5d515c1d34c343a20d144ccb5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Feedback Loop&lt;/strong&gt;. Going through deprecation cycles requires significant effort, so we want to minimize the number of incompatible changes we'll be making in the future. Apart from using our best judgement, we believe that trying things out in real life is the best way to validate a design. Before casting things in stone we want them battle-tested. This is why we use every opportunity to make early versions of our designs available in production versions of the language, but in one of the &lt;em&gt;pre-stable&lt;/em&gt; statuses: &lt;a href=&quot;components-stability&quot;&gt;Experimental, Alpha, or Beta&lt;/a&gt;. Such features are not stable, they can be changed at any time, and the users that opt into using them do so explicitly to indicate that they are ready to deal with the future migration issues. These users provide invaluable feedback that we gather to iterate on the design and make it rock-solid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01da2bfca3b0c6cd5afd856a346c9af2ed22f57a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Feedback Loop&lt;/strong&gt;. Going through deprecation cycles requires significant effort, so we want to minimize the number of incompatible changes we'll be making in the future. Apart from using our best judgement, we believe that trying things out in real life is the best way to validate a design. Before casting things in stone we want them battle-tested. This is why we use every opportunity to make early versions of our designs available in production versions of the language, but with &lt;em&gt;experimental&lt;/em&gt; status. Experimental features are not stable, they can be changed at any time, and the users that opt into using them do so explicitly to indicate that they are ready to deal with the future migration issues. These users provide invaluable feedback that we gather to iterate on the design and make it rock-solid.</source>
          <target state="translated">&lt;strong&gt;Обратная связь&lt;/strong&gt; . Прохождение циклов устаревания требует значительных усилий, поэтому мы хотим свести к минимуму количество несовместимых изменений, которые мы будем вносить в будущем. Помимо здравого смысла, мы считаем, что лучший способ проверить дизайн - это попробовать что-то в реальной жизни. Прежде чем бросать вещи в камень, мы хотим, чтобы они прошли испытания в бою. Вот почему мы используем любую возможность, чтобы сделать ранние версии наших проектов доступными в рабочих версиях языка, но с &lt;em&gt;экспериментальным&lt;/em&gt; статусом. Экспериментальные функции нестабильны, их можно изменить в любое время, и пользователи, которые решают их использовать, делают это явно, чтобы указать, что они готовы решать проблемы будущей миграции. Эти пользователи оставляют бесценные отзывы, которые мы собираем, чтобы доработать дизайн и сделать его надежным.</target>
        </trans-unit>
        <trans-unit id="84e6e1d5c7013f461d0f8180960aec592e5418ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Footprint&lt;/strong&gt;: Kotlin has a very compact runtime library, which can be further reduced through the use of ProGuard. In a &lt;a href=&quot;https://blog.gouline.net/kotlin-production-tales-62b56057dc8a&quot;&gt;real application&lt;/a&gt;, the Kotlin runtime adds only a few hundred methods and less than 100K to the size of the .apk file.</source>
          <target state="translated">&lt;strong&gt;След&lt;/strong&gt; : Kotlin имеет очень компактную библиотеку времени выполнения, которую можно еще больше уменьшить с помощью ProGuard. В &lt;a href=&quot;https://blog.gouline.net/kotlin-production-tales-62b56057dc8a&quot;&gt;реальном приложении&lt;/a&gt; среда выполнения Kotlin добавляет всего несколько сотен методов и меньше 100 КБ к размеру файла .apk.</target>
        </trans-unit>
        <trans-unit id="ab66fec3d20ab10d72344a8b47e8045de00b0458" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Framework type&lt;/strong&gt; (only for Objective-C frameworks). By default a framework built by Kotlin/Native contains a dynamic library. But it's possible to replace it with a static library.</source>
          <target state="translated">&lt;strong&gt;Тип фреймворка&lt;/strong&gt; (только для фреймворков Objective-C). По умолчанию фреймворк, созданный Kotlin / Native, содержит динамическую библиотеку. Но можно заменить его статической библиотекой.</target>
        </trans-unit>
        <trans-unit id="57126d52087eba472a07f6b0dc82b2c9b74ad896" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Fully Stable (FS)&lt;/strong&gt;: incremental releases are fully compatible, only optimizations and bug fixes happen. Feature releases are backwards compatible.</source>
          <target state="translated">&lt;strong&gt;Полностью стабильная (FS)&lt;/strong&gt; : инкрементные выпуски полностью совместимы, происходят только оптимизации и исправления ошибок. Выпуски функций имеют обратную совместимость.</target>
        </trans-unit>
        <trans-unit id="5d722e5425cf5468a3cc51807165b09b74178e30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Getter&lt;/strong&gt; returns &lt;code&gt;true&lt;/code&gt; if JVM access checks are suppressed for this callable object. For a property, that means that all its accessors (getter, and setter for &lt;code&gt;var&lt;/code&gt; properties) are accessible.</source>
          <target state="translated">&lt;strong&gt;Getter&lt;/strong&gt; возвращает &lt;code&gt;true&lt;/code&gt; , если для этого вызываемого объекта запрещены проверки доступа JVM. Для свойства это означает, что доступны все его методы доступа (геттер и сеттер для свойств &lt;code&gt;var&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="893f88e4922c51e506a298efd0e349332ccff29b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; To correctly import the dependencies into the Kotlin/Native module, the Podfile must contain either &lt;a href=&quot;https://guides.cocoapods.org/syntax/podfile.html#use_modular_headers_bang&quot;&gt;&lt;code&gt;use_modular_headers!&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://guides.cocoapods.org/syntax/podfile.html#use_frameworks_bang&quot;&gt;&lt;code&gt;use_frameworks!&lt;/code&gt;&lt;/a&gt; directive.</source>
          <target state="translated">&lt;strong&gt;Важно:&lt;/strong&gt; чтобы правильно импортировать зависимости в модуль Kotlin / Native, Podfile должен содержать либо &lt;a href=&quot;https://guides.cocoapods.org/syntax/podfile.html#use_modular_headers_bang&quot;&gt; &lt;code&gt;use_modular_headers!&lt;/code&gt; &lt;/a&gt;или &lt;a href=&quot;https://guides.cocoapods.org/syntax/podfile.html#use_frameworks_bang&quot;&gt; &lt;code&gt;use_frameworks!&lt;/code&gt; &lt;/a&gt;директивы.</target>
        </trans-unit>
        <trans-unit id="fa5e5749e3c4a470f72fca590f3925968869b43c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Incompatible change type&lt;/strong&gt;: Behavioral</source>
          <target state="translated">&lt;strong&gt;Несовместимый тип изменения&lt;/strong&gt; : поведенческое</target>
        </trans-unit>
        <trans-unit id="e9774a516db3294cc27043b7f776059e8e8e9244" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Incompatible change type&lt;/strong&gt;: Binary</source>
          <target state="translated">&lt;strong&gt;Несовместимый тип изменения&lt;/strong&gt; : двоичный</target>
        </trans-unit>
        <trans-unit id="5f85eefcdfc6bf3de72be4d2ef5c7ab0771b8d4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Incompatible change type&lt;/strong&gt;: Source</source>
          <target state="translated">&lt;strong&gt;Несовместимый тип изменения&lt;/strong&gt; : Источник</target>
        </trans-unit>
        <trans-unit id="08a3c86adb9c5648bfd57ffdaf07e8089b74133c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Incompatible change type&lt;/strong&gt;: behavioral</source>
          <target state="translated">&lt;strong&gt;Несовместимый тип изменения&lt;/strong&gt; : поведенческое</target>
        </trans-unit>
        <trans-unit id="b44d63d70cba3bead47196e58ec9474c6ee1043e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Interacting with DOM elements&lt;/strong&gt;. Kotlin provides a series of statically typed interfaces to interact with the Document Object Model, allowing creation and update of DOM elements.</source>
          <target state="translated">&lt;strong&gt;Взаимодействие с элементами DOM&lt;/strong&gt; . Kotlin предоставляет ряд статически типизированных интерфейсов для взаимодействия с объектной моделью документа, позволяя создавать и обновлять элементы DOM.</target>
        </trans-unit>
        <trans-unit id="5cc584a094e9383c6d524ed74cdac053c8d02dbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Interacting with graphics such as WebGL&lt;/strong&gt;. You can use Kotlin to create graphical elements on a web page using WebGL.</source>
          <target state="translated">&lt;strong&gt;Взаимодействие с графикой, такой как WebGL&lt;/strong&gt; . Вы можете использовать Kotlin для создания графических элементов на веб-странице с помощью WebGL.</target>
        </trans-unit>
        <trans-unit id="40070fc940293baad0e6e785b883846dabffc433" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Interoperability with Java&lt;/strong&gt;. You can use Kotlin along with the Java programming language in your applications without needing to migrate all your code to Kotlin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc74b175415bdb2c6872627140daf87039a72fd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Interoperability&lt;/strong&gt;: Kotlin is 100% interoperable with Java, allowing to use all existing Android libraries in a Kotlin application. This includes annotation processing, so databinding and Dagger work too.</source>
          <target state="translated">&lt;strong&gt;Взаимодействие&lt;/strong&gt; : Kotlin на 100% совместим с Java, что позволяет использовать все существующие библиотеки Android в приложении Kotlin. Это включает в себя обработку аннотаций, поэтому привязка данных и Dagger тоже работают.</target>
        </trans-unit>
        <trans-unit id="2598c2f91d35e4a4317dc1430080d368da441adb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Interoperability&lt;/strong&gt;: Kotlin is fully compatible with all Java-based frameworks, which lets you stay on your familiar technology stack while reaping the benefits of a more modern language.</source>
          <target state="translated">&lt;strong&gt;Взаимодействие&lt;/strong&gt; : Kotlin полностью совместим со всеми фреймворками на основе Java, что позволяет вам оставаться в привычном стеке технологий, одновременно пользуясь преимуществами более современного языка.</target>
        </trans-unit>
        <trans-unit id="624797bf44bc3c55aa073bdf9a58f067cbae884b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-13762&quot;&gt;KT-13762&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-13762&quot;&gt;КТ-13762.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b67b5fcbcd7791fc278190ddce0be5d15901482" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-16097&quot;&gt;KT-16097&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-16097&quot;&gt;KT-16097.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="620a0df1083fbc6bc1ebf1e8bd34ea2a88bec618" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-16310&quot;&gt;KT-16310&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-16310&quot;&gt;КТ-16310.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42fbe3fe5033ce1298274704ce101b12010456ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-16681&quot;&gt;KT-16681&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-16681&quot;&gt;KT-16681.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="467037173e1ff7906572f023ecff56fc35ecbc52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-17176&quot;&gt;KT-17176&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-17176&quot;&gt;КТ-17176.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="178dd1bf94f5ea52efcdeccc09a4fe9599b66fab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-17981&quot;&gt;KT-17981&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-17981&quot;&gt;KT-17981.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5901c1a8cf2a133579a52a6cc3fe44c795fb6ade" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-19489&quot;&gt;KT-19489&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-19489&quot;&gt;КТ-19489.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61163eeade8a3c9c1e72e49f2a38b76ee8101c44" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-19532&quot;&gt;KT-19532&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-19532&quot;&gt;КТ-19532.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c51480006ff5ed4b72b0cbda590360487f25ef30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-19618&quot;&gt;KT-19618&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-19618&quot;&gt;КТ-19618.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4269bf35364cf5eef0c2aee3ffa7af7126c67b1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-19628&quot;&gt;KT-19628&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-19628&quot;&gt;КТ-19628.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="18e239b48fa6b77dfc46b4f8d7346e7a9ea8aab7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20772&quot;&gt;KT-20772&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20772&quot;&gt;КТ-20772.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2ec61a056ac534581d3f9ac63d2ad9837e704fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20830&quot;&gt;KT-20830&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20830&quot;&gt;KT-20830.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e7ccb04df2d64748e20e2134c65deed513ffc4ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-21049&quot;&gt;KT-21049&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-21049&quot;&gt;КТ-21049.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="362d124cfb6e8092d3b6b64a3c1c97c18411d09d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-21354&quot;&gt;KT-21354&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-21354&quot;&gt;KT-21354.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c673a61bc8615e171b8adccc1ad84ac8e85d342" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-21784&quot;&gt;KT-21784&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-21784&quot;&gt;KT-21784.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5dfd5f1e36a2cdae750b38fa1f32ae31d60afb51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-22517&quot;&gt;KT-22517&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-22517&quot;&gt;KT-22517.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="789d4c884fa9a1b852dba0d6d48be30382573fe2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-23153&quot;&gt;KT-23153&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-23153&quot;&gt;КТ-23153.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="beb1d34baf6f5e60bbf2274bd851226a0335294c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-23277&quot;&gt;KT-23277&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-23277&quot;&gt;KT-23277.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ec687965b8bca3f04918c9027652dbc70762b91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-23799&quot;&gt;KT-23799&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-23799&quot;&gt;KT-23799.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a9b8117837a2658cae47906517066f191302558" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-25287&quot;&gt;KT-25287&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-25287&quot;&gt;KT-25287.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="842780bcd8ff9dbe2039445f6a9599270dc126ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issue&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-9580&quot;&gt;KT-9580&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Выпуск&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-9580&quot;&gt;КТ-9580.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ffb22359482e55dfa802f06510821ee20651eb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issues&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20588&quot;&gt;KT-20588&lt;/a&gt;, &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20589&quot;&gt;KT-20589&lt;/a&gt;. See also &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20171&quot;&gt;KT-20171&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Проблемы&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20588&quot;&gt;КТ-20588&lt;/a&gt; , &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20589&quot;&gt;КТ-20589&lt;/a&gt; . См. Также &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-20171&quot;&gt;KT-20171&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="73aba56311cb1950911e3d599f9eed16865c221a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issues&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-21515&quot;&gt;KT-21515&lt;/a&gt;, &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-25333&quot;&gt;KT-25333&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Проблемы&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-21515&quot;&gt;КТ-21515&lt;/a&gt; , &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-25333&quot;&gt;КТ-25333.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="095db5bc99e8bc13e223afcb027bc0980992279c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Issues&lt;/strong&gt;: &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-24197&quot;&gt;KT-24197&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Проблемы&lt;/strong&gt; : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-24197&quot;&gt;KT-24197&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39e05aa1278ad7a2503bcfb3c1f1bfaa71410afd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Java type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Тип Java&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d15b37f51b2dba58ccf1543c881e55363f163dbf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Keeping the Language Modern&lt;/strong&gt;. We acknowledge that systems accumulate legacy over time. What had once been cutting-edge technology can be hopelessly outdated today. We have to evolve the language to keep it relevant to the needs of the users and up-to-date with their expectations. This includes not only adding new features, but also phasing out old ones that are no longer recommended for production use and have altogether become legacy.</source>
          <target state="translated">&lt;strong&gt;Сохраняя современный язык&lt;/strong&gt; . Мы признаем, что системы со временем накапливают наследие. То, что когда-то было передовой технологией, сегодня безнадежно устарело. Мы должны развивать язык, чтобы он соответствовал потребностям пользователей и соответствовал их ожиданиям. Это включает в себя не только добавление новых функций, но и отказ от старых, которые больше не рекомендуются для производственного использования и полностью унаследованы.</target>
        </trans-unit>
        <trans-unit id="af07559b3d456b10e95e78f5cef72b66be05dda7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kotlin mutable type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Котлин изменяемый тип&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a3795dcd10c1477ffbfd7ccdf4a52e9df4e62ac5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kotlin read-only type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Котлин, доступный только для чтения&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="514db325720442dd8cbb44ba36b100d45d2a7554" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kotlin support in Android Jetpack and other libraries&lt;/strong&gt;. &lt;a href=&quot;https://developer.android.com/kotlin/ktx&quot;&gt;KTX extensions&lt;/a&gt; add Kotlin language features, such as coroutines, extension functions, lambdas, and named parameters, to existing Android libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff39871f21339ee6d16c8c134fd8d15942da64b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kotlin type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Котлинский тип&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f0a44911f381012dae69c91143484dfd2338561a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kotlin/Native for Native&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Kotlin / Native для Native&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4833f8621787b679730e7858ff9e5385cd3e49e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Last Updated&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Последнее обновление&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="def8d56e2c6c1c07fdbf780235a0372f93a0e796" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Learn Kotlin&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Изучите Котлин&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="44475f8a3f8a76a68fb693cb59a54ffa320ddf7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Learning Curve&lt;/strong&gt;: For a Java developer, getting started with Kotlin is very easy. The automated Java to Kotlin converter included in the Kotlin plugin helps with the first steps. &lt;a href=&quot;../tutorials/koans&quot;&gt;Kotlin Koans&lt;/a&gt; offer a guide through the key features of the language with a series of interactive exercises.</source>
          <target state="translated">&lt;strong&gt;Кривая обучения&lt;/strong&gt; : для Java-разработчика начать работу с Kotlin очень легко. Автоматический конвертер Java в Kotlin, включенный в плагин Kotlin, помогает с первых шагов. &lt;a href=&quot;../tutorials/koans&quot;&gt;Kotlin Koans&lt;/a&gt; предлагает руководство по ключевым особенностям языка с серией интерактивных упражнений.</target>
        </trans-unit>
        <trans-unit id="c0a62e978e3337c0ec94054a386845c3f6841eff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Less code combined with greater readability&lt;/strong&gt;. Spend less time writing your code and working to understand the code of others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0064e6430cb7af56de1b8fa85d7c711bb821be42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Linker options.&lt;/strong&gt; Options passed to a system linker during binary building. One can use this setting to link against some native library.</source>
          <target state="translated">&lt;strong&gt;Параметры компоновщика. &lt;/strong&gt;Параметры, передаваемые системному компоновщику во время сборки двоичного файла. Этот параметр можно использовать для линковки с какой-либо собственной библиотекой.</target>
        </trans-unit>
        <trans-unit id="07ef1270cc6a5b78912b6586714ad317f0657ed1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Loaded platform type&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Тип загруженной платформы&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c229afb06419ddd0f84981c54ddfb0d1f7ca503" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;MF&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;MF&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be6d5b08b52388e562c8f2bd16912d80134f2679" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mature language and environment&lt;/strong&gt;. Since its creation in 2011, Kotlin has developed continuously, not only as a language but as a whole ecosystem with robust tooling. Now it's seamlessly integrated in Android Studio and is actively used by many companies for developing Android applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1633839bc9516bea2b216e788aac2b4d911688fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Migration&lt;/strong&gt;: Kotlin supports gradual, step by step migration of large codebases from Java to Kotlin. You can start writing new code in Kotlin while keeping older parts of your system in Java.</source>
          <target state="translated">&lt;strong&gt;Миграция&lt;/strong&gt; : Kotlin поддерживает постепенный, пошаговый перенос больших кодовых баз с Java на Kotlin. Вы можете начать писать новый код на Kotlin, сохраняя старые части вашей системы на Java.</target>
        </trans-unit>
        <trans-unit id="5013d8104b487fadfcb9f6ec26b4d07e76e10250" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mode for Binaries&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Режим для двоичных файлов&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a9e330b1c51ab2059298c572893a2b28833c886" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mode for Sources&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Режим для источников&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b4818f9c5362c6e3c936951253cb1f7e858e0104" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Module Kind&lt;/strong&gt;. Indicates what module standard to follow. This is covered in the &lt;a href=&quot;../working-with-modules/working-with-modules&quot;&gt;Working with Modules&lt;/a&gt; tutorial in more depth.</source>
          <target state="translated">&lt;strong&gt;Вид модуля&lt;/strong&gt; . Указывает, какой стандарт модуля следует соблюдать. Это более подробно рассматривается в руководстве &amp;laquo; &lt;a href=&quot;../working-with-modules/working-with-modules&quot;&gt;Работа с модулями&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1291d291c889d952f962f19be664239e51749e53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Moving fast (MF)&lt;/strong&gt;: no compatibility should be expected between even &lt;a href=&quot;kotlin-evolution#feature-releases-and-incremental-releases&quot;&gt;incremental releases&lt;/a&gt;, any functionality can be added, removed or changed without warning.</source>
          <target state="translated">&lt;strong&gt;Быстрое движение (MF)&lt;/strong&gt; : не следует ожидать совместимости даже между &lt;a href=&quot;kotlin-evolution#feature-releases-and-incremental-releases&quot;&gt;инкрементными выпусками&lt;/a&gt; , любые функции могут быть добавлены, удалены или изменены без предупреждения.</target>
        </trans-unit>
        <trans-unit id="28f8cd126dd8825e89ed3aa4dbc97f569647c6c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: On the JVM, if all of the parameters of the primary constructor have default values, the compiler will generate an additional parameterless constructor which will use the default values. This makes it easier to use Kotlin with libraries such as Jackson or JPA that create class instances through parameterless constructors.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; . В JVM, если все параметры основного конструктора имеют значения по умолчанию, компилятор сгенерирует дополнительный конструктор без параметров, который будет использовать значения по умолчанию. Это упрощает использование Kotlin с такими библиотеками, как Jackson или JPA, которые создают экземпляры классов с помощью конструкторов без параметров.</target>
        </trans-unit>
        <trans-unit id="d89aa2209faf2c7b962a9fbb7cb927f54ba8d68e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: object declarations can't be local (i.e. be nested directly inside a function), but they can be nested into other object declarations or non-inner classes.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; : объявления объектов не могут быть локальными (т. Е. Быть вложенными непосредственно внутри функции), но они могут быть вложены в объявления других объектов или не внутренние классы.</target>
        </trans-unit>
        <trans-unit id="66a7391836e79098f507df30b500cfdf387dae5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: we could also use the standard class &lt;code&gt;Pair&lt;/code&gt; and have &lt;code&gt;function()&lt;/code&gt; return &lt;code&gt;Pair&amp;lt;Int, Status&amp;gt;&lt;/code&gt;, but it's often better to have your data named properly.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; : мы также могли бы использовать стандартный класс &lt;code&gt;Pair&lt;/code&gt; и иметь &lt;code&gt;function()&lt;/code&gt; return &lt;code&gt;Pair&amp;lt;Int, Status&amp;gt;&lt;/code&gt; , но часто лучше иметь правильные имена для ваших данных.</target>
        </trans-unit>
        <trans-unit id="920b4d9f7a2e2f012d737b1adc92132d3b2794a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: this value should not be used in general code.&lt;/strong&gt; Using it outside of the context of &lt;code&gt;suspendCoroutineUninterceptedOrReturn&lt;/code&gt; function return value (including, but not limited to, storing this value in other properties, returning it from other functions, etc) can lead to unspecified behavior of the code.</source>
          <target state="translated">&lt;strong&gt;Примечание: это значение не должно использоваться в общем коде. &lt;/strong&gt;Использование его вне контекста возвращаемого значения функции &lt;code&gt;suspendCoroutineUninterceptedOrReturn&lt;/code&gt; (включая, помимо прочего, сохранение этого значения в других свойствах, возврат из других функций и т. Д.) Может привести к неопределенному поведению кода.</target>
        </trans-unit>
        <trans-unit id="31b1d1a1c1c67cb1e20686c6012118dbab4d7ed0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The plugin is based on the multiplatform project model and requires applying the &lt;code&gt;org.jetbrains.kotlin.multiplatform&lt;/code&gt; plugin. See details about the multiplatform plugin at the &lt;a href=&quot;../building-mpp-with-gradle&quot;&gt;corresponding page&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Плагин основан на модели мультиплатформенного проекта и требует применения плагина &lt;code&gt;org.jetbrains.kotlin.multiplatform&lt;/code&gt; . Подробную информацию о многоплатформенном плагине смотрите на &lt;a href=&quot;../building-mpp-with-gradle&quot;&gt;соответствующей странице&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="73c6216b6d115320c9b1ecc7efbf4142d2f0463f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; If using pre-release or EAP versions of the Kotlin plugin, the IDE may fail to open the generated project, giving a Gradle import &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-18835#focus=streamItem-27-2718879-0-0&quot;&gt;error&lt;/a&gt;. This is because the right Maven repository isn't referenced in the &lt;code&gt;build.gradle&lt;/code&gt; file, it can be resolved by adding the following entry &lt;em&gt;twice&lt;/em&gt;, into each of the &lt;code&gt;repositories { .. }&lt;/code&gt; blocks.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; При использовании предварительной версии или версии EAP плагина Kotlin среда IDE может не открыть сгенерированный проект, что приведет к &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-18835#focus=streamItem-27-2718879-0-0&quot;&gt;ошибке&lt;/a&gt; импорта Gradle . Это связано с тем, что правильный репозиторий Maven не упоминается в файле &lt;code&gt;build.gradle&lt;/code&gt; , его можно решить, &lt;em&gt;дважды&lt;/em&gt; добавив следующую запись в каждый из блоков &lt;code&gt;repositories { .. }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f048dac293163b7f3a7598b49f61de73ac3ba9de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; It is the caller's responsibility to close both of these resources.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Ответственность за закрытие обоих этих ресурсов лежит на вызывающей стороне.</target>
        </trans-unit>
        <trans-unit id="124d849e65ffd789b274bb9691889ca354bfd7d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; it is the caller's responsibility to close both of these resources.</source>
          <target state="translated">&lt;strong&gt;Обратите внимание,&lt;/strong&gt; что вызывающая сторона обязана закрыть оба этих ресурса.</target>
        </trans-unit>
        <trans-unit id="3e391a1d8a33528b8b5fbf5f4c42696126e3570c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: It is the caller's responsibility to close this stream.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Ответственность за закрытие этого потока лежит на вызывающем абоненте.</target>
        </trans-unit>
        <trans-unit id="87313d4ecaac57dabba97e9ecfb136ac300a8048" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Prior to Kotlin 1.4, to generate default methods, you could use the &lt;code&gt;@JvmDefault&lt;/code&gt; annotation on these methods. Compiling with &lt;code&gt;-Xjvm-default=all&lt;/code&gt; in 1.4 generally works as if you annotated all non-abstract methods of interfaces with &lt;code&gt;@JvmDefault&lt;/code&gt;and compiled with &lt;code&gt;-Xjvm-default=enable&lt;/code&gt;. However, there are cases when their behavior differs. Detailed information about the changes in default methods generation in Kotlin 1.4 is provided in &lt;a href=&quot;https://blog.jetbrains.com/kotlin/2020/07/kotlin-1-4-m3-generating-default-methods-in-interfaces/&quot;&gt;this post&lt;/a&gt; on the Kotlin blog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a9460c5cf4e5f8fb691a71ea0aeab986268d70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;On the JVM&lt;/strong&gt;: In projects where Kotlin is used together with Java, Kotlin source files should reside in the same source root as the Java source files, and follow the same directory structure: each file should be stored in the directory corresponding to each package statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912ac37238d08c7343a99940207880dc2742b776" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;On the JVM&lt;/strong&gt;: The access to private properties with default getters and setters is optimized so no function call overhead is introduced in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35815e2fba681c4d6b24b89f6a4be1d2835af462" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;On the JVM&lt;/strong&gt;: You can't use the named argument syntax when calling Java functions because Java bytecode does not always preserve names of function parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41fbf1843bb637e2270153523b6af23d3f7972b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output file name.&lt;/strong&gt; By default the output file name is based on binary name prefix or, if the name prefix isn't specified, on a project name. But it's possible to configure the output file name independently using the &lt;code&gt;baseName&lt;/code&gt; property. Note that final file name will be formed by adding system-dependent prefix and postfix to this base name. E.g. a &lt;code&gt;libfoo.so&lt;/code&gt; is produced for a Linux shared library with the base name &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Имя выходного файла. &lt;/strong&gt;По умолчанию имя выходного файла основано на двоичном префиксе имени или, если префикс имени не указан, на имени проекта. Но можно настроить имя выходного файла независимо, используя свойство &lt;code&gt;baseName&lt;/code&gt; . Обратите внимание, что окончательное имя файла будет сформировано путем добавления системно-зависимого префикса и постфикса к этому базовому имени. Например, &lt;code&gt;libfoo.so&lt;/code&gt; создается для разделяемой библиотеки Linux с базовым именем &lt;code&gt;foo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50ced6f5b30171a4a93c828cff28c5aae9265871" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output file postfix&lt;/strong&gt;. Same as above, but in this case the compiler will append the contents of the selected file to the output.</source>
          <target state="translated">&lt;strong&gt;Постфикс выходного файла&lt;/strong&gt; . То же, что и выше, но в этом случае компилятор добавит содержимое выбранного файла в вывод.</target>
        </trans-unit>
        <trans-unit id="b7acbb24727c5dd951bd8fe4bdbacc1b0e5f3690" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output file prefix&lt;/strong&gt;. We can prefix the output the compiler generates with additional JavaScript. In order to do so, we indicate the name of the file that contains the JavaScript we want in this box.</source>
          <target state="translated">&lt;strong&gt;Префикс выходного файла&lt;/strong&gt; . Мы можем префикс вывода, который генерирует компилятор, с помощью дополнительного JavaScript. Для этого мы указываем в этом поле имя файла, который содержит нужный нам JavaScript.</target>
        </trans-unit>
        <trans-unit id="1f567fbc6441cccc58a14b74cbee1b61024c0b30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Performance&lt;/strong&gt;: A Kotlin application runs as fast as an equivalent Java one, thanks to very similar bytecode structure. With Kotlin's support for inline functions, code using lambdas often runs even faster than the same code written in Java.</source>
          <target state="translated">&lt;strong&gt;Производительность&lt;/strong&gt; : приложение Kotlin работает так же быстро, как и эквивалентное приложение на Java, благодаря очень похожей структуре байт-кода. Благодаря поддержке Kotlin встроенных функций код, использующий лямбды, часто выполняется даже быстрее, чем тот же код, написанный на Java.</target>
        </trans-unit>
        <trans-unit id="558b1d7cfc157eb86623021d628d371f858629f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Receiver&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Receiver&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b793bd5c94890549bb2c56a7ab13d4b7fbeb4466" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Retain&lt;/strong&gt; annotation is required to preserve functions from internalization and DCE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff78e240531b65a1f2b3131a6ed9457cb776408" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Return&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="757d607f672c7334dae6f2d15467388440a9d89f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the first occurrence of &lt;a href=&quot;index-of#kotlin.text%24indexOf%28kotlin.CharSequence%2C+kotlin.Char%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchar&quot;&gt;char&lt;/a&gt; or -1 if none is found.</source>
          <target state="translated">&lt;strong&gt;Вернуть&lt;/strong&gt; Индекс первого появления &lt;a href=&quot;index-of#kotlin.text%24indexOf%28kotlin.CharSequence%2C+kotlin.Char%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchar&quot;&gt;символа&lt;/a&gt; или -1, если ничего не найдено.</target>
        </trans-unit>
        <trans-unit id="7af850e676eb1f6ad07e246ecbc7648054a8e8f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the first occurrence of &lt;a href=&quot;index-of#kotlin.text%24indexOf%28kotlin.CharSequence%2C+kotlin.String%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstring&quot;&gt;string&lt;/a&gt; or &lt;code&gt;-1&lt;/code&gt; if none is found.</source>
          <target state="translated">&lt;strong&gt;Вернуть&lt;/strong&gt; Индекс первого вхождения &lt;a href=&quot;index-of#kotlin.text%24indexOf%28kotlin.CharSequence%2C+kotlin.String%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstring&quot;&gt;строки&lt;/a&gt; или &lt;code&gt;-1&lt;/code&gt; , если ничего не найдено.</target>
        </trans-unit>
        <trans-unit id="8b51deb1df0b1467785f5c602afc133b3d96c577" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the first occurrence of &lt;a href=&quot;index-of#kotlin.text%24indexOf(kotlin.CharSequence,%20kotlin.Char,%20kotlin.Int,%20kotlin.Boolean)/char&quot;&gt;char&lt;/a&gt; or -1 if none is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabaf52bd5e6ec10ad2e67ca6098f133738ac418" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the first occurrence of &lt;a href=&quot;index-of#kotlin.text%24indexOf(kotlin.CharSequence,%20kotlin.String,%20kotlin.Int,%20kotlin.Boolean)/string&quot;&gt;string&lt;/a&gt; or &lt;code&gt;-1&lt;/code&gt; if none is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd1a92de7d335131ff93dd7748a1b3c35c63499" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the first occurrence of &lt;a href=&quot;last-index-of#kotlin.text%24lastIndexOf%28kotlin.CharSequence%2C+kotlin.Char%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchar&quot;&gt;char&lt;/a&gt; or -1 if none is found.</source>
          <target state="translated">&lt;strong&gt;Вернуть&lt;/strong&gt; Индекс первого появления &lt;a href=&quot;last-index-of#kotlin.text%24lastIndexOf%28kotlin.CharSequence%2C+kotlin.Char%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchar&quot;&gt;символа&lt;/a&gt; или -1, если ничего не найдено.</target>
        </trans-unit>
        <trans-unit id="4004685c44664daadd174c6a7248b58ad09d8306" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the first occurrence of &lt;a href=&quot;last-index-of#kotlin.text%24lastIndexOf%28kotlin.CharSequence%2C+kotlin.String%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstring&quot;&gt;string&lt;/a&gt; or -1 if none is found.</source>
          <target state="translated">&lt;strong&gt;Вернуть&lt;/strong&gt; Индекс первого вхождения &lt;a href=&quot;last-index-of#kotlin.text%24lastIndexOf%28kotlin.CharSequence%2C+kotlin.String%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstring&quot;&gt;строки&lt;/a&gt; или -1, если ничего не найдено.</target>
        </trans-unit>
        <trans-unit id="7c2c91f69c38f6b0e99eb7c7f21b31b8ff2800c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the first occurrence of matched character from &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; or -1 if none of &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; are found.</source>
          <target state="translated">&lt;strong&gt;Вернуть&lt;/strong&gt; Индекс первого вхождения совпадающего символа из &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;символов&lt;/a&gt; или -1, если ни один из &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;символов&lt;/a&gt; не найден.</target>
        </trans-unit>
        <trans-unit id="12b117f1a4b72e41cf8fcac630a6af774340214b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the first occurrence of matched character from &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;chars&lt;/a&gt; or -1 if none of &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;chars&lt;/a&gt; are found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d0ada3d42773d649573debd09061a2c1cb5848" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the last occurrence of &lt;a href=&quot;last-index-of#kotlin.text%24lastIndexOf(kotlin.CharSequence,%20kotlin.Char,%20kotlin.Int,%20kotlin.Boolean)/char&quot;&gt;char&lt;/a&gt; or -1 if none is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ddf017848e12285d6af2623f353f5a4f5f2778d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the last occurrence of &lt;a href=&quot;last-index-of#kotlin.text%24lastIndexOf(kotlin.CharSequence,%20kotlin.String,%20kotlin.Int,%20kotlin.Boolean)/string&quot;&gt;string&lt;/a&gt; or -1 if none is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed38c40ddbaf9c9e8959cc88c45220bb74df65fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the last occurrence of matched character from &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; or -1 if none of &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; are found.</source>
          <target state="translated">&lt;strong&gt;Вернуть&lt;/strong&gt; Индекс последнего вхождения совпадающего символа из &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;символов&lt;/a&gt; или -1, если ни один из &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;символов&lt;/a&gt; не найден.</target>
        </trans-unit>
        <trans-unit id="b215ab860f60b4914e7c05fcd3cb6c8b273a5089" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An index of the last occurrence of matched character from &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;chars&lt;/a&gt; or -1 if none of &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny(kotlin.CharSequence,%20kotlin.CharArray,%20kotlin.Int,%20kotlin.Boolean)/chars&quot;&gt;chars&lt;/a&gt; are found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476664da54ca5e12b023a38b5c0c9a78a17fb037" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An instance of &lt;a href=&quot;../-match-group/index#kotlin.text.MatchGroup&quot;&gt;MatchGroup&lt;/a&gt; if the group with the specified &lt;a href=&quot;get#kotlin.text.MatchNamedGroupCollection%24get%28kotlin.String%29%2Fname&quot;&gt;name&lt;/a&gt; was matched or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;Возвратите&lt;/strong&gt; экземпляр &lt;a href=&quot;../-match-group/index#kotlin.text.MatchGroup&quot;&gt;MatchGroup,&lt;/a&gt; если группа с указанным &lt;a href=&quot;get#kotlin.text.MatchNamedGroupCollection%24get%28kotlin.String%29%2Fname&quot;&gt;именем&lt;/a&gt; была сопоставлена, или &lt;code&gt;null&lt;/code&gt; в противном случае.</target>
        </trans-unit>
        <trans-unit id="067685992eb5b2e03a488e79b77f6233cde497b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An instance of &lt;a href=&quot;../-match-group/index#kotlin.text.MatchGroup&quot;&gt;MatchGroup&lt;/a&gt; if the group with the specified &lt;a href=&quot;get#kotlin.text.MatchNamedGroupCollection%24get(kotlin.String)/name&quot;&gt;name&lt;/a&gt; was matched or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bef3966f2f05a88d0735518e95ca5d2dce9b767" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An instance of &lt;a href=&quot;../-match-result/index&quot;&gt;MatchResult&lt;/a&gt; if match was found or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;Вернуть&lt;/strong&gt; экземпляр &lt;a href=&quot;../-match-result/index&quot;&gt;MatchResult,&lt;/a&gt; если совпадение было найдено, в противном случае - &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4d8f232464ef8dac9081a9a982d93b31bf500a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An instance of MatchGroup if the group with the specified &lt;a href=&quot;get#kotlin.text%24get%28kotlin.text.MatchGroupCollection%2C+kotlin.String%29%2Fname&quot;&gt;name&lt;/a&gt; was matched or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;Возвратите&lt;/strong&gt; экземпляр MatchGroup, если группа с указанным &lt;a href=&quot;get#kotlin.text%24get%28kotlin.text.MatchGroupCollection%2C+kotlin.String%29%2Fname&quot;&gt;именем&lt;/a&gt; была сопоставлена, или &lt;code&gt;null&lt;/code&gt; в противном случае.</target>
        </trans-unit>
        <trans-unit id="af85a289ba7d93b72ff8ab680b0eedf4318ed7a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An instance of MatchGroup if the group with the specified &lt;a href=&quot;get#kotlin.text%24get(kotlin.text.MatchGroupCollection,%20kotlin.String)/name&quot;&gt;name&lt;/a&gt; was matched or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935d5a6f8dc59afb1cfba02a19debb5e5421db4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An instance of MatchResult if match was found or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;Вернуть&lt;/strong&gt; экземпляр MatchResult, если совпадение было найдено, в противном случае - &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bca80f4e95cb0ed398996067163cca3543f5227e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; An instance of MatchResult if the entire input matches or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;Вернуть&lt;/strong&gt; экземпляр MatchResult, если все входные данные совпадают, или &lt;code&gt;null&lt;/code&gt; в противном случае.</target>
        </trans-unit>
        <trans-unit id="2378752e83bb2a757af3b5523444ded4dd6b04ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return&lt;/strong&gt; File with relative path from &lt;a href=&quot;relative-to#kotlin.io%24relativeTo%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;base&lt;/a&gt; to this.</source>
          <target state="translated">&lt;strong&gt;Вернуть&lt;/strong&gt; файл с относительным путем от &lt;a href=&quot;relative-to#kotlin.io%24relativeTo%28java.io.File%2C+java.io.File%29%2Fbase&quot;&gt;базы&lt;/a&gt; к этому.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
